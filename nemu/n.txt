
nemu:     file format elf32-i386


Disassembly of section .init:

00004000 <_init>:
    4000:	53                   	push   %ebx
    4001:	83 ec 08             	sub    $0x8,%esp
    4004:	e8 77 04 00 00       	call   4480 <__x86.get_pc_thunk.bx>
    4009:	81 c3 f7 af 04 00    	add    $0x4aff7,%ebx
    400f:	8b 83 e0 ff ff ff    	mov    -0x20(%ebx),%eax
    4015:	85 c0                	test   %eax,%eax
    4017:	74 02                	je     401b <_init+0x1b>
    4019:	ff d0                	call   *%eax
    401b:	83 c4 08             	add    $0x8,%esp
    401e:	5b                   	pop    %ebx
    401f:	c3                   	ret    

Disassembly of section .plt:

00004020 <.plt>:
    4020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    4026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    402c:	00 00                	add    %al,(%eax)
	...

00004030 <SDL_mutexP@plt>:
    4030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <.plt>

00004040 <fread@plt>:
    4040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    4046:	68 08 00 00 00       	push   $0x8
    404b:	e9 d0 ff ff ff       	jmp    4020 <.plt>

00004050 <SDL_Quit@plt>:
    4050:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    4056:	68 10 00 00 00       	push   $0x10
    405b:	e9 c0 ff ff ff       	jmp    4020 <.plt>

00004060 <putc@plt>:
    4060:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    4066:	68 18 00 00 00       	push   $0x18
    406b:	e9 b0 ff ff ff       	jmp    4020 <.plt>

00004070 <strdup@plt>:
    4070:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    4076:	68 20 00 00 00       	push   $0x20
    407b:	e9 a0 ff ff ff       	jmp    4020 <.plt>

00004080 <fwrite@plt>:
    4080:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    4086:	68 28 00 00 00       	push   $0x28
    408b:	e9 90 ff ff ff       	jmp    4020 <.plt>

00004090 <memcpy@plt>:
    4090:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
    4096:	68 30 00 00 00       	push   $0x30
    409b:	e9 80 ff ff ff       	jmp    4020 <.plt>

000040a0 <malloc@plt>:
    40a0:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
    40a6:	68 38 00 00 00       	push   $0x38
    40ab:	e9 70 ff ff ff       	jmp    4020 <.plt>

000040b0 <SDL_EnableKeyRepeat@plt>:
    40b0:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
    40b6:	68 40 00 00 00       	push   $0x40
    40bb:	e9 60 ff ff ff       	jmp    4020 <.plt>

000040c0 <strlen@plt>:
    40c0:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
    40c6:	68 48 00 00 00       	push   $0x48
    40cb:	e9 50 ff ff ff       	jmp    4020 <.plt>

000040d0 <fprintf@plt>:
    40d0:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
    40d6:	68 50 00 00 00       	push   $0x50
    40db:	e9 40 ff ff ff       	jmp    4020 <.plt>

000040e0 <SDL_PollEvent@plt>:
    40e0:	ff a3 38 00 00 00    	jmp    *0x38(%ebx)
    40e6:	68 58 00 00 00       	push   $0x58
    40eb:	e9 30 ff ff ff       	jmp    4020 <.plt>

000040f0 <sprintf@plt>:
    40f0:	ff a3 3c 00 00 00    	jmp    *0x3c(%ebx)
    40f6:	68 60 00 00 00       	push   $0x60
    40fb:	e9 20 ff ff ff       	jmp    4020 <.plt>

00004100 <SDL_Delay@plt>:
    4100:	ff a3 40 00 00 00    	jmp    *0x40(%ebx)
    4106:	68 68 00 00 00       	push   $0x68
    410b:	e9 10 ff ff ff       	jmp    4020 <.plt>

00004110 <strcmp@plt>:
    4110:	ff a3 44 00 00 00    	jmp    *0x44(%ebx)
    4116:	68 70 00 00 00       	push   $0x70
    411b:	e9 00 ff ff ff       	jmp    4020 <.plt>

00004120 <SDL_GetError@plt>:
    4120:	ff a3 48 00 00 00    	jmp    *0x48(%ebx)
    4126:	68 78 00 00 00       	push   $0x78
    412b:	e9 f0 fe ff ff       	jmp    4020 <.plt>

00004130 <time@plt>:
    4130:	ff a3 4c 00 00 00    	jmp    *0x4c(%ebx)
    4136:	68 80 00 00 00       	push   $0x80
    413b:	e9 e0 fe ff ff       	jmp    4020 <.plt>

00004140 <SDL_CreateThread@plt>:
    4140:	ff a3 50 00 00 00    	jmp    *0x50(%ebx)
    4146:	68 88 00 00 00       	push   $0x88
    414b:	e9 d0 fe ff ff       	jmp    4020 <.plt>

00004150 <fflush@plt>:
    4150:	ff a3 54 00 00 00    	jmp    *0x54(%ebx)
    4156:	68 90 00 00 00       	push   $0x90
    415b:	e9 c0 fe ff ff       	jmp    4020 <.plt>

00004160 <fseek@plt>:
    4160:	ff a3 58 00 00 00    	jmp    *0x58(%ebx)
    4166:	68 98 00 00 00       	push   $0x98
    416b:	e9 b0 fe ff ff       	jmp    4020 <.plt>

00004170 <SDL_Init@plt>:
    4170:	ff a3 5c 00 00 00    	jmp    *0x5c(%ebx)
    4176:	68 a0 00 00 00       	push   $0xa0
    417b:	e9 a0 fe ff ff       	jmp    4020 <.plt>

00004180 <readline@plt>:
    4180:	ff a3 60 00 00 00    	jmp    *0x60(%ebx)
    4186:	68 a8 00 00 00       	push   $0xa8
    418b:	e9 90 fe ff ff       	jmp    4020 <.plt>

00004190 <srand@plt>:
    4190:	ff a3 64 00 00 00    	jmp    *0x64(%ebx)
    4196:	68 b0 00 00 00       	push   $0xb0
    419b:	e9 80 fe ff ff       	jmp    4020 <.plt>

000041a0 <SDL_SetVideoMode@plt>:
    41a0:	ff a3 68 00 00 00    	jmp    *0x68(%ebx)
    41a6:	68 b8 00 00 00       	push   $0xb8
    41ab:	e9 70 fe ff ff       	jmp    4020 <.plt>

000041b0 <SDL_WM_SetCaption@plt>:
    41b0:	ff a3 6c 00 00 00    	jmp    *0x6c(%ebx)
    41b6:	68 c0 00 00 00       	push   $0xc0
    41bb:	e9 60 fe ff ff       	jmp    4020 <.plt>

000041c0 <__libc_start_main@plt>:
    41c0:	ff a3 70 00 00 00    	jmp    *0x70(%ebx)
    41c6:	68 c8 00 00 00       	push   $0xc8
    41cb:	e9 50 fe ff ff       	jmp    4020 <.plt>

000041d0 <__isoc99_sscanf@plt>:
    41d0:	ff a3 74 00 00 00    	jmp    *0x74(%ebx)
    41d6:	68 d0 00 00 00       	push   $0xd0
    41db:	e9 40 fe ff ff       	jmp    4020 <.plt>

000041e0 <SDL_DestroyMutex@plt>:
    41e0:	ff a3 78 00 00 00    	jmp    *0x78(%ebx)
    41e6:	68 d8 00 00 00       	push   $0xd8
    41eb:	e9 30 fe ff ff       	jmp    4020 <.plt>

000041f0 <rand@plt>:
    41f0:	ff a3 7c 00 00 00    	jmp    *0x7c(%ebx)
    41f6:	68 e0 00 00 00       	push   $0xe0
    41fb:	e9 20 fe ff ff       	jmp    4020 <.plt>

00004200 <__isoc99_scanf@plt>:
    4200:	ff a3 80 00 00 00    	jmp    *0x80(%ebx)
    4206:	68 e8 00 00 00       	push   $0xe8
    420b:	e9 10 fe ff ff       	jmp    4020 <.plt>

00004210 <regexec@plt>:
    4210:	ff a3 84 00 00 00    	jmp    *0x84(%ebx)
    4216:	68 f0 00 00 00       	push   $0xf0
    421b:	e9 00 fe ff ff       	jmp    4020 <.plt>

00004220 <free@plt>:
    4220:	ff a3 88 00 00 00    	jmp    *0x88(%ebx)
    4226:	68 f8 00 00 00       	push   $0xf8
    422b:	e9 f0 fd ff ff       	jmp    4020 <.plt>

00004230 <add_history@plt>:
    4230:	ff a3 8c 00 00 00    	jmp    *0x8c(%ebx)
    4236:	68 00 01 00 00       	push   $0x100
    423b:	e9 e0 fd ff ff       	jmp    4020 <.plt>

00004240 <regcomp@plt>:
    4240:	ff a3 90 00 00 00    	jmp    *0x90(%ebx)
    4246:	68 08 01 00 00       	push   $0x108
    424b:	e9 d0 fd ff ff       	jmp    4020 <.plt>

00004250 <SDL_CreateMutex@plt>:
    4250:	ff a3 94 00 00 00    	jmp    *0x94(%ebx)
    4256:	68 10 01 00 00       	push   $0x110
    425b:	e9 c0 fd ff ff       	jmp    4020 <.plt>

00004260 <printf@plt>:
    4260:	ff a3 98 00 00 00    	jmp    *0x98(%ebx)
    4266:	68 18 01 00 00       	push   $0x118
    426b:	e9 b0 fd ff ff       	jmp    4020 <.plt>

00004270 <regerror@plt>:
    4270:	ff a3 9c 00 00 00    	jmp    *0x9c(%ebx)
    4276:	68 20 01 00 00       	push   $0x120
    427b:	e9 a0 fd ff ff       	jmp    4020 <.plt>

00004280 <stpcpy@plt>:
    4280:	ff a3 a0 00 00 00    	jmp    *0xa0(%ebx)
    4286:	68 28 01 00 00       	push   $0x128
    428b:	e9 90 fd ff ff       	jmp    4020 <.plt>

00004290 <SDL_mutexV@plt>:
    4290:	ff a3 a4 00 00 00    	jmp    *0xa4(%ebx)
    4296:	68 30 01 00 00       	push   $0x130
    429b:	e9 80 fd ff ff       	jmp    4020 <.plt>

000042a0 <strtok@plt>:
    42a0:	ff a3 a8 00 00 00    	jmp    *0xa8(%ebx)
    42a6:	68 38 01 00 00       	push   $0x138
    42ab:	e9 70 fd ff ff       	jmp    4020 <.plt>

000042b0 <puts@plt>:
    42b0:	ff a3 ac 00 00 00    	jmp    *0xac(%ebx)
    42b6:	68 40 01 00 00       	push   $0x140
    42bb:	e9 60 fd ff ff       	jmp    4020 <.plt>

000042c0 <memset@plt>:
    42c0:	ff a3 b0 00 00 00    	jmp    *0xb0(%ebx)
    42c6:	68 48 01 00 00       	push   $0x148
    42cb:	e9 50 fd ff ff       	jmp    4020 <.plt>

000042d0 <strspn@plt>:
    42d0:	ff a3 b4 00 00 00    	jmp    *0xb4(%ebx)
    42d6:	68 50 01 00 00       	push   $0x150
    42db:	e9 40 fd ff ff       	jmp    4020 <.plt>

000042e0 <fclose@plt>:
    42e0:	ff a3 b8 00 00 00    	jmp    *0xb8(%ebx)
    42e6:	68 58 01 00 00       	push   $0x158
    42eb:	e9 30 fd ff ff       	jmp    4020 <.plt>

000042f0 <SDL_WaitThread@plt>:
    42f0:	ff a3 bc 00 00 00    	jmp    *0xbc(%ebx)
    42f6:	68 60 01 00 00       	push   $0x160
    42fb:	e9 20 fd ff ff       	jmp    4020 <.plt>

00004300 <strcpy@plt>:
    4300:	ff a3 c0 00 00 00    	jmp    *0xc0(%ebx)
    4306:	68 68 01 00 00       	push   $0x168
    430b:	e9 10 fd ff ff       	jmp    4020 <.plt>

00004310 <__assert_fail@plt>:
    4310:	ff a3 c4 00 00 00    	jmp    *0xc4(%ebx)
    4316:	68 70 01 00 00       	push   $0x170
    431b:	e9 00 fd ff ff       	jmp    4020 <.plt>

00004320 <fopen@plt>:
    4320:	ff a3 c8 00 00 00    	jmp    *0xc8(%ebx)
    4326:	68 78 01 00 00       	push   $0x178
    432b:	e9 f0 fc ff ff       	jmp    4020 <.plt>

00004330 <ftell@plt>:
    4330:	ff a3 cc 00 00 00    	jmp    *0xcc(%ebx)
    4336:	68 80 01 00 00       	push   $0x180
    433b:	e9 e0 fc ff ff       	jmp    4020 <.plt>

Disassembly of section .plt.got:

00004340 <__cxa_finalize@plt>:
    4340:	ff a3 c8 ff ff ff    	jmp    *-0x38(%ebx)
    4346:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00004350 <main>:
    4350:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    4354:	83 e4 f0             	and    $0xfffffff0,%esp
    4357:	ff 71 fc             	pushl  -0x4(%ecx)
    435a:	55                   	push   %ebp
    435b:	89 e5                	mov    %esp,%ebp
    435d:	53                   	push   %ebx
    435e:	e8 1d 01 00 00       	call   4480 <__x86.get_pc_thunk.bx>
    4363:	81 c3 9d ac 04 00    	add    $0x4ac9d,%ebx
    4369:	51                   	push   %ecx
    436a:	83 ec 08             	sub    $0x8,%esp
    436d:	ff 71 04             	pushl  0x4(%ecx)
    4370:	ff 31                	pushl  (%ecx)
    4372:	e8 89 1d 00 00       	call   6100 <parse_args>
    4377:	83 c4 10             	add    $0x10,%esp
    437a:	84 c0                	test   %al,%al
    437c:	0f 84 9e 00 00 00    	je     4420 <main+0xd0>
    4382:	e8 29 03 00 00       	call   46b0 <log_nemu_config>
    4387:	8d 83 e4 23 00 00    	lea    0x23e4(%ebx),%eax
    438d:	80 38 00             	cmpb   $0x0,(%eax)
    4390:	75 74                	jne    4406 <main+0xb6>
    4392:	8d 83 e6 23 00 00    	lea    0x23e6(%ebx),%eax
    4398:	80 38 00             	cmpb   $0x0,(%eax)
    439b:	75 40                	jne    43dd <main+0x8d>
    439d:	8d 83 e5 23 00 00    	lea    0x23e5(%ebx),%eax
    43a3:	80 38 00             	cmpb   $0x0,(%eax)
    43a6:	75 22                	jne    43ca <main+0x7a>
    43a8:	8d 93 00 2c 05 00    	lea    0x52c00(%ebx),%edx
    43ae:	8d 83 00 30 05 00    	lea    0x53000(%ebx),%eax
    43b4:	e8 c7 01 00 00       	call   4580 <single_run>
    43b9:	e8 c2 25 00 00       	call   6980 <close_sdl>
    43be:	31 c0                	xor    %eax,%eax
    43c0:	8d 65 f8             	lea    -0x8(%ebp),%esp
    43c3:	59                   	pop    %ecx
    43c4:	5b                   	pop    %ebx
    43c5:	5d                   	pop    %ebp
    43c6:	8d 61 fc             	lea    -0x4(%ecx),%esp
    43c9:	c3                   	ret    
    43ca:	8d 93 00 2a 05 00    	lea    0x52a00(%ebx),%edx
    43d0:	8d 83 00 2e 05 00    	lea    0x52e00(%ebx),%eax
    43d6:	e8 a5 01 00 00       	call   4580 <single_run>
    43db:	eb dc                	jmp    43b9 <main+0x69>
    43dd:	83 ec 0c             	sub    $0xc,%esp
    43e0:	8d 83 86 50 fe ff    	lea    -0x1af7a(%ebx),%eax
    43e6:	50                   	push   %eax
    43e7:	e8 c4 fe ff ff       	call   42b0 <puts@plt>
    43ec:	8d 83 e5 23 00 00    	lea    0x23e5(%ebx),%eax
    43f2:	83 c4 10             	add    $0x10,%esp
    43f5:	80 38 00             	cmpb   $0x0,(%eax)
    43f8:	74 1a                	je     4414 <main+0xc4>
    43fa:	8d 83 f4 2d 05 00    	lea    0x52df4(%ebx),%eax
    4400:	ff 10                	call   *(%eax)
    4402:	31 c0                	xor    %eax,%eax
    4404:	eb ba                	jmp    43c0 <main+0x70>
    4406:	e8 e5 0e 00 00       	call   52f0 <init_regex>
    440b:	e8 c0 64 02 00       	call   2a8d0 <score_expr>
    4410:	31 c0                	xor    %eax,%eax
    4412:	eb ac                	jmp    43c0 <main+0x70>
    4414:	8d 83 f4 31 05 00    	lea    0x531f4(%ebx),%eax
    441a:	ff 10                	call   *(%eax)
    441c:	31 c0                	xor    %eax,%eax
    441e:	eb a0                	jmp    43c0 <main+0x70>
    4420:	83 ec 0c             	sub    $0xc,%esp
    4423:	8d 83 4c 50 fe ff    	lea    -0x1afb4(%ebx),%eax
    4429:	50                   	push   %eax
    442a:	e8 81 fe ff ff       	call   42b0 <puts@plt>
    442f:	83 c4 10             	add    $0x10,%esp
    4432:	83 c8 ff             	or     $0xffffffff,%eax
    4435:	eb 89                	jmp    43c0 <main+0x70>
    4437:	66 90                	xchg   %ax,%ax
    4439:	66 90                	xchg   %ax,%ax
    443b:	66 90                	xchg   %ax,%ax
    443d:	66 90                	xchg   %ax,%ax
    443f:	90                   	nop

00004440 <_start>:
    4440:	31 ed                	xor    %ebp,%ebp
    4442:	5e                   	pop    %esi
    4443:	89 e1                	mov    %esp,%ecx
    4445:	83 e4 f0             	and    $0xfffffff0,%esp
    4448:	50                   	push   %eax
    4449:	54                   	push   %esp
    444a:	52                   	push   %edx
    444b:	e8 22 00 00 00       	call   4472 <_start+0x32>
    4450:	81 c3 b0 ab 04 00    	add    $0x4abb0,%ebx
    4456:	8d 83 e0 46 fe ff    	lea    -0x1b920(%ebx),%eax
    445c:	50                   	push   %eax
    445d:	8d 83 80 46 fe ff    	lea    -0x1b980(%ebx),%eax
    4463:	50                   	push   %eax
    4464:	51                   	push   %ecx
    4465:	56                   	push   %esi
    4466:	ff b3 cc ff ff ff    	pushl  -0x34(%ebx)
    446c:	e8 4f fd ff ff       	call   41c0 <__libc_start_main@plt>
    4471:	f4                   	hlt    
    4472:	8b 1c 24             	mov    (%esp),%ebx
    4475:	c3                   	ret    
    4476:	66 90                	xchg   %ax,%ax
    4478:	66 90                	xchg   %ax,%ax
    447a:	66 90                	xchg   %ax,%ax
    447c:	66 90                	xchg   %ax,%ax
    447e:	66 90                	xchg   %ax,%ax

00004480 <__x86.get_pc_thunk.bx>:
    4480:	8b 1c 24             	mov    (%esp),%ebx
    4483:	c3                   	ret    
    4484:	66 90                	xchg   %ax,%ax
    4486:	66 90                	xchg   %ax,%ax
    4488:	66 90                	xchg   %ax,%ax
    448a:	66 90                	xchg   %ax,%ax
    448c:	66 90                	xchg   %ax,%ax
    448e:	66 90                	xchg   %ax,%ax

00004490 <deregister_tm_clones>:
    4490:	e8 e0 00 00 00       	call   4575 <__x86.get_pc_thunk.dx>
    4495:	81 c2 6b ab 04 00    	add    $0x4ab6b,%edx
    449b:	8d 8a 34 20 00 00    	lea    0x2034(%edx),%ecx
    44a1:	8d 82 34 20 00 00    	lea    0x2034(%edx),%eax
    44a7:	39 c8                	cmp    %ecx,%eax
    44a9:	74 1d                	je     44c8 <deregister_tm_clones+0x38>
    44ab:	8b 82 dc ff ff ff    	mov    -0x24(%edx),%eax
    44b1:	85 c0                	test   %eax,%eax
    44b3:	74 13                	je     44c8 <deregister_tm_clones+0x38>
    44b5:	55                   	push   %ebp
    44b6:	89 e5                	mov    %esp,%ebp
    44b8:	83 ec 14             	sub    $0x14,%esp
    44bb:	51                   	push   %ecx
    44bc:	ff d0                	call   *%eax
    44be:	83 c4 10             	add    $0x10,%esp
    44c1:	c9                   	leave  
    44c2:	c3                   	ret    
    44c3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    44c7:	90                   	nop
    44c8:	c3                   	ret    
    44c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000044d0 <register_tm_clones>:
    44d0:	e8 a0 00 00 00       	call   4575 <__x86.get_pc_thunk.dx>
    44d5:	81 c2 2b ab 04 00    	add    $0x4ab2b,%edx
    44db:	55                   	push   %ebp
    44dc:	89 e5                	mov    %esp,%ebp
    44de:	53                   	push   %ebx
    44df:	8d 8a 34 20 00 00    	lea    0x2034(%edx),%ecx
    44e5:	8d 82 34 20 00 00    	lea    0x2034(%edx),%eax
    44eb:	83 ec 04             	sub    $0x4,%esp
    44ee:	29 c8                	sub    %ecx,%eax
    44f0:	c1 f8 02             	sar    $0x2,%eax
    44f3:	89 c3                	mov    %eax,%ebx
    44f5:	c1 eb 1f             	shr    $0x1f,%ebx
    44f8:	01 d8                	add    %ebx,%eax
    44fa:	d1 f8                	sar    %eax
    44fc:	74 14                	je     4512 <register_tm_clones+0x42>
    44fe:	8b 92 e4 ff ff ff    	mov    -0x1c(%edx),%edx
    4504:	85 d2                	test   %edx,%edx
    4506:	74 0a                	je     4512 <register_tm_clones+0x42>
    4508:	83 ec 08             	sub    $0x8,%esp
    450b:	50                   	push   %eax
    450c:	51                   	push   %ecx
    450d:	ff d2                	call   *%edx
    450f:	83 c4 10             	add    $0x10,%esp
    4512:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4515:	c9                   	leave  
    4516:	c3                   	ret    
    4517:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    451e:	66 90                	xchg   %ax,%ax

00004520 <__do_global_dtors_aux>:
    4520:	55                   	push   %ebp
    4521:	89 e5                	mov    %esp,%ebp
    4523:	53                   	push   %ebx
    4524:	e8 57 ff ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4529:	81 c3 d7 aa 04 00    	add    $0x4aad7,%ebx
    452f:	83 ec 04             	sub    $0x4,%esp
    4532:	80 bb 40 20 00 00 00 	cmpb   $0x0,0x2040(%ebx)
    4539:	75 27                	jne    4562 <__do_global_dtors_aux+0x42>
    453b:	8b 83 c8 ff ff ff    	mov    -0x38(%ebx),%eax
    4541:	85 c0                	test   %eax,%eax
    4543:	74 11                	je     4556 <__do_global_dtors_aux+0x36>
    4545:	83 ec 0c             	sub    $0xc,%esp
    4548:	ff b3 e4 00 00 00    	pushl  0xe4(%ebx)
    454e:	e8 ed fd ff ff       	call   4340 <__cxa_finalize@plt>
    4553:	83 c4 10             	add    $0x10,%esp
    4556:	e8 35 ff ff ff       	call   4490 <deregister_tm_clones>
    455b:	c6 83 40 20 00 00 01 	movb   $0x1,0x2040(%ebx)
    4562:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    4565:	c9                   	leave  
    4566:	c3                   	ret    
    4567:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    456e:	66 90                	xchg   %ax,%ax

00004570 <frame_dummy>:
    4570:	e9 5b ff ff ff       	jmp    44d0 <register_tm_clones>

00004575 <__x86.get_pc_thunk.dx>:
    4575:	8b 14 24             	mov    (%esp),%edx
    4578:	c3                   	ret    
    4579:	66 90                	xchg   %ax,%ax
    457b:	66 90                	xchg   %ax,%ax
    457d:	66 90                	xchg   %ax,%ax
    457f:	90                   	nop

00004580 <single_run>:
    4580:	55                   	push   %ebp
    4581:	57                   	push   %edi
    4582:	89 d7                	mov    %edx,%edi
    4584:	56                   	push   %esi
    4585:	89 c6                	mov    %eax,%esi
    4587:	53                   	push   %ebx
    4588:	e8 f3 fe ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    458d:	81 c3 73 aa 04 00    	add    $0x4aa73,%ebx
    4593:	83 ec 0c             	sub    $0xc,%esp
    4596:	e8 25 62 02 00       	call   2a7c0 <clear_ref>
    459b:	83 ec 0c             	sub    $0xc,%esp
    459e:	68 00 00 03 00       	push   $0x30000
    45a3:	e8 88 d1 00 00       	call   11730 <init_cpu>
    45a8:	e8 c3 a6 01 00       	call   1ec70 <init_mem>
    45ad:	e8 5e 02 00 00       	call   4810 <init_bp_list>
    45b2:	e8 39 0d 00 00       	call   52f0 <init_regex>
    45b7:	e8 04 24 00 00       	call   69c0 <init_sdl>
    45bc:	e8 9f 1d 00 00       	call   6360 <init_serial>
    45c1:	83 c4 0c             	add    $0xc,%esp
    45c4:	8d 83 08 50 fe ff    	lea    -0x1aff8(%ebx),%eax
    45ca:	57                   	push   %edi
    45cb:	56                   	push   %esi
    45cc:	50                   	push   %eax
    45cd:	e8 8e fc ff ff       	call   4260 <printf@plt>
    45d2:	58                   	pop    %eax
    45d3:	8d 83 6f 50 fe ff    	lea    -0x1af91(%ebx),%eax
    45d9:	5a                   	pop    %edx
    45da:	50                   	push   %eax
    45db:	56                   	push   %esi
    45dc:	e8 3f fd ff ff       	call   4320 <fopen@plt>
    45e1:	83 c4 10             	add    $0x10,%esp
    45e4:	85 c0                	test   %eax,%eax
    45e6:	0f 84 80 00 00 00    	je     466c <single_run+0xec>
    45ec:	83 ec 04             	sub    $0x4,%esp
    45ef:	89 c6                	mov    %eax,%esi
    45f1:	6a 02                	push   $0x2
    45f3:	6a 00                	push   $0x0
    45f5:	50                   	push   %eax
    45f6:	e8 65 fb ff ff       	call   4160 <fseek@plt>
    45fb:	89 34 24             	mov    %esi,(%esp)
    45fe:	e8 2d fd ff ff       	call   4330 <ftell@plt>
    4603:	83 c4 0c             	add    $0xc,%esp
    4606:	6a 00                	push   $0x0
    4608:	89 c5                	mov    %eax,%ebp
    460a:	6a 00                	push   $0x0
    460c:	56                   	push   %esi
    460d:	e8 4e fb ff ff       	call   4160 <fseek@plt>
    4612:	e8 e9 a6 01 00       	call   1ed00 <get_mem_addr>
    4617:	56                   	push   %esi
    4618:	05 00 00 03 00       	add    $0x30000,%eax
    461d:	6a 01                	push   $0x1
    461f:	55                   	push   %ebp
    4620:	50                   	push   %eax
    4621:	e8 1a fa ff ff       	call   4040 <fread@plt>
    4626:	83 c4 20             	add    $0x20,%esp
    4629:	83 f8 01             	cmp    $0x1,%eax
    462c:	75 5a                	jne    4688 <single_run+0x108>
    462e:	83 ec 0c             	sub    $0xc,%esp
    4631:	56                   	push   %esi
    4632:	e8 a9 fc ff ff       	call   42e0 <fclose@plt>
    4637:	89 3c 24             	mov    %edi,(%esp)
    463a:	e8 51 1d 00 00       	call   6390 <init_ide>
    463f:	89 3c 24             	mov    %edi,(%esp)
    4642:	e8 19 07 00 00       	call   4d60 <load_elf_tables>
    4647:	8d 83 04 33 05 00    	lea    0x53304(%ebx),%eax
    464d:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
    4653:	8d 83 e7 23 00 00    	lea    0x23e7(%ebx),%eax
    4659:	0f b6 00             	movzbl (%eax),%eax
    465c:	89 04 24             	mov    %eax,(%esp)
    465f:	e8 9c 14 00 00       	call   5b00 <ui_mainloop>
    4664:	83 c4 1c             	add    $0x1c,%esp
    4667:	5b                   	pop    %ebx
    4668:	5e                   	pop    %esi
    4669:	5f                   	pop    %edi
    466a:	5d                   	pop    %ebp
    466b:	c3                   	ret    
    466c:	8d 83 a4 50 fe ff    	lea    -0x1af5c(%ebx),%eax
    4672:	50                   	push   %eax
    4673:	8d 83 72 50 fe ff    	lea    -0x1af8e(%ebx),%eax
    4679:	6a 22                	push   $0x22
    467b:	50                   	push   %eax
    467c:	8d 83 81 59 fe ff    	lea    -0x1a67f(%ebx),%eax
    4682:	50                   	push   %eax
    4683:	e8 88 fc ff ff       	call   4310 <__assert_fail@plt>
    4688:	8d 83 a4 50 fe ff    	lea    -0x1af5c(%ebx),%eax
    468e:	50                   	push   %eax
    468f:	8d 83 72 50 fe ff    	lea    -0x1af8e(%ebx),%eax
    4695:	6a 29                	push   $0x29
    4697:	50                   	push   %eax
    4698:	8d 83 7d 50 fe ff    	lea    -0x1af83(%ebx),%eax
    469e:	50                   	push   %eax
    469f:	e8 6c fc ff ff       	call   4310 <__assert_fail@plt>
    46a4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    46ab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    46af:	90                   	nop

000046b0 <log_nemu_config>:
    46b0:	53                   	push   %ebx
    46b1:	e8 ca fd ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    46b6:	81 c3 4a a9 04 00    	add    $0x4a94a,%ebx
    46bc:	83 ec 08             	sub    $0x8,%esp
    46bf:	e8 0c 66 02 00       	call   2acd0 <score_set_cache_enabled>
    46c4:	e8 b7 64 02 00       	call   2ab80 <score_set_ia32_seg>
    46c9:	e8 22 65 02 00       	call   2abf0 <score_set_ia32_page>
    46ce:	e8 8d 65 02 00       	call   2ac60 <score_set_tlb_enabled>
    46d3:	e8 68 66 02 00       	call   2ad40 <score_set_ia32_intr>
    46d8:	e8 d3 66 02 00       	call   2adb0 <score_set_has_device_timer>
    46dd:	e8 4e 67 02 00       	call   2ae30 <score_set_has_device_serial>
    46e2:	e8 c9 67 02 00       	call   2aeb0 <score_set_has_device_ide>
    46e7:	e8 34 68 02 00       	call   2af20 <score_set_has_device_keyboard>
    46ec:	e8 9f 69 02 00       	call   2b090 <score_fix_config>
    46f1:	83 c4 08             	add    $0x8,%esp
    46f4:	5b                   	pop    %ebx
    46f5:	c3                   	ret    
    46f6:	66 90                	xchg   %ax,%ax
    46f8:	66 90                	xchg   %ax,%ax
    46fa:	66 90                	xchg   %ax,%ax
    46fc:	66 90                	xchg   %ax,%ax
    46fe:	66 90                	xchg   %ax,%ax

00004700 <new_BP>:
    4700:	53                   	push   %ebx
    4701:	e8 7a fd ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4706:	81 c3 fa a8 04 00    	add    $0x4a8fa,%ebx
    470c:	83 ec 08             	sub    $0x8,%esp
    470f:	8b 83 60 20 00 00    	mov    0x2060(%ebx),%eax
    4715:	85 c0                	test   %eax,%eax
    4717:	74 1d                	je     4736 <new_BP+0x36>
    4719:	8b 50 14             	mov    0x14(%eax),%edx
    471c:	89 93 60 20 00 00    	mov    %edx,0x2060(%ebx)
    4722:	0f b6 50 01          	movzbl 0x1(%eax),%edx
    4726:	f6 c2 02             	test   $0x2,%dl
    4729:	75 27                	jne    4752 <new_BP+0x52>
    472b:	83 ca 02             	or     $0x2,%edx
    472e:	88 50 01             	mov    %dl,0x1(%eax)
    4731:	83 c4 08             	add    $0x8,%esp
    4734:	5b                   	pop    %ebx
    4735:	c3                   	ret    
    4736:	8d 83 d4 51 fe ff    	lea    -0x1ae2c(%ebx),%eax
    473c:	50                   	push   %eax
    473d:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    4743:	6a 21                	push   $0x21
    4745:	50                   	push   %eax
    4746:	8d 83 c7 50 fe ff    	lea    -0x1af39(%ebx),%eax
    474c:	50                   	push   %eax
    474d:	e8 be fb ff ff       	call   4310 <__assert_fail@plt>
    4752:	8d 83 d4 51 fe ff    	lea    -0x1ae2c(%ebx),%eax
    4758:	50                   	push   %eax
    4759:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    475f:	6a 24                	push   $0x24
    4761:	50                   	push   %eax
    4762:	8d 83 d5 50 fe ff    	lea    -0x1af2b(%ebx),%eax
    4768:	50                   	push   %eax
    4769:	e8 a2 fb ff ff       	call   4310 <__assert_fail@plt>
    476e:	66 90                	xchg   %ax,%ax

00004770 <free_BP>:
    4770:	53                   	push   %ebx
    4771:	e8 0a fd ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4776:	81 c3 8a a8 04 00    	add    $0x4a88a,%ebx
    477c:	83 ec 18             	sub    $0x18,%esp
    477f:	8d 93 80 20 00 00    	lea    0x2080(%ebx),%edx
    4785:	39 d0                	cmp    %edx,%eax
    4787:	72 4f                	jb     47d8 <free_BP+0x68>
    4789:	8d 93 80 23 00 00    	lea    0x2380(%ebx),%edx
    478f:	39 d0                	cmp    %edx,%eax
    4791:	73 45                	jae    47d8 <free_BP+0x68>
    4793:	f6 40 01 02          	testb  $0x2,0x1(%eax)
    4797:	74 5b                	je     47f4 <free_BP+0x84>
    4799:	83 78 10 01          	cmpl   $0x1,0x10(%eax)
    479d:	74 21                	je     47c0 <free_BP+0x50>
    479f:	8b 93 60 20 00 00    	mov    0x2060(%ebx),%edx
    47a5:	80 60 01 fd          	andb   $0xfd,0x1(%eax)
    47a9:	89 83 60 20 00 00    	mov    %eax,0x2060(%ebx)
    47af:	89 50 14             	mov    %edx,0x14(%eax)
    47b2:	83 c4 18             	add    $0x18,%esp
    47b5:	5b                   	pop    %ebx
    47b6:	c3                   	ret    
    47b7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    47be:	66 90                	xchg   %ax,%ax
    47c0:	83 ec 0c             	sub    $0xc,%esp
    47c3:	ff 70 04             	pushl  0x4(%eax)
    47c6:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    47ca:	e8 51 fa ff ff       	call   4220 <free@plt>
    47cf:	83 c4 10             	add    $0x10,%esp
    47d2:	8b 44 24 0c          	mov    0xc(%esp),%eax
    47d6:	eb c7                	jmp    479f <free_BP+0x2f>
    47d8:	8d 83 cc 51 fe ff    	lea    -0x1ae34(%ebx),%eax
    47de:	50                   	push   %eax
    47df:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    47e5:	6a 2b                	push   $0x2b
    47e7:	50                   	push   %eax
    47e8:	8d 83 60 51 fe ff    	lea    -0x1aea0(%ebx),%eax
    47ee:	50                   	push   %eax
    47ef:	e8 1c fb ff ff       	call   4310 <__assert_fail@plt>
    47f4:	8d 83 cc 51 fe ff    	lea    -0x1ae34(%ebx),%eax
    47fa:	50                   	push   %eax
    47fb:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    4801:	6a 2c                	push   $0x2c
    4803:	50                   	push   %eax
    4804:	8d 83 e8 50 fe ff    	lea    -0x1af18(%ebx),%eax
    480a:	50                   	push   %eax
    480b:	e8 00 fb ff ff       	call   4310 <__assert_fail@plt>

00004810 <init_bp_list>:
    4810:	55                   	push   %ebp
    4811:	31 c0                	xor    %eax,%eax
    4813:	57                   	push   %edi
    4814:	e8 3d 05 00 00       	call   4d56 <__x86.get_pc_thunk.di>
    4819:	81 c7 e7 a7 04 00    	add    $0x4a7e7,%edi
    481f:	56                   	push   %esi
    4820:	53                   	push   %ebx
    4821:	8d b7 80 20 00 00    	lea    0x2080(%edi),%esi
    4827:	8d 9f 98 20 00 00    	lea    0x2098(%edi),%ebx
    482d:	8d 76 00             	lea    0x0(%esi),%esi
    4830:	8d 14 40             	lea    (%eax,%eax,2),%edx
    4833:	89 c5                	mov    %eax,%ebp
    4835:	83 c0 01             	add    $0x1,%eax
    4838:	8d 0c d6             	lea    (%esi,%edx,8),%ecx
    483b:	c1 e5 0a             	shl    $0xa,%ebp
    483e:	8b 11                	mov    (%ecx),%edx
    4840:	81 e2 ff 03 00 00    	and    $0x3ff,%edx
    4846:	09 ea                	or     %ebp,%edx
    4848:	89 11                	mov    %edx,(%ecx)
    484a:	80 61 01 fd          	andb   $0xfd,0x1(%ecx)
    484e:	89 5b fc             	mov    %ebx,-0x4(%ebx)
    4851:	83 c3 18             	add    $0x18,%ebx
    4854:	83 f8 20             	cmp    $0x20,%eax
    4857:	75 d7                	jne    4830 <init_bp_list+0x20>
    4859:	5b                   	pop    %ebx
    485a:	89 b7 60 20 00 00    	mov    %esi,0x2060(%edi)
    4860:	c7 87 7c 23 00 00 00 	movl   $0x0,0x237c(%edi)
    4867:	00 00 00 
    486a:	5e                   	pop    %esi
    486b:	c7 87 64 20 00 00 00 	movl   $0x0,0x2064(%edi)
    4872:	00 00 00 
    4875:	5f                   	pop    %edi
    4876:	5d                   	pop    %ebp
    4877:	c3                   	ret    
    4878:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    487f:	90                   	nop

00004880 <set_breakpoint>:
    4880:	57                   	push   %edi
    4881:	56                   	push   %esi
    4882:	53                   	push   %ebx
    4883:	8b 7c 24 10          	mov    0x10(%esp),%edi
    4887:	e8 f4 fb ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    488c:	81 c3 74 a7 04 00    	add    $0x4a774,%ebx
    4892:	e8 69 fe ff ff       	call   4700 <new_BP>
    4897:	83 ec 08             	sub    $0x8,%esp
    489a:	89 78 04             	mov    %edi,0x4(%eax)
    489d:	89 c6                	mov    %eax,%esi
    489f:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
    48a6:	6a 01                	push   $0x1
    48a8:	57                   	push   %edi
    48a9:	e8 f2 a3 01 00       	call   1eca0 <instr_fetch>
    48ae:	88 06                	mov    %al,(%esi)
    48b0:	68 f1 00 00 00       	push   $0xf1
    48b5:	6a 01                	push   $0x1
    48b7:	6a 01                	push   $0x1
    48b9:	ff 76 04             	pushl  0x4(%esi)
    48bc:	e8 2f a3 01 00       	call   1ebf0 <vaddr_write>
    48c1:	8b 83 64 20 00 00    	mov    0x2064(%ebx),%eax
    48c7:	80 4e 01 01          	orb    $0x1,0x1(%esi)
    48cb:	83 c4 20             	add    $0x20,%esp
    48ce:	89 b3 64 20 00 00    	mov    %esi,0x2064(%ebx)
    48d4:	89 46 14             	mov    %eax,0x14(%esi)
    48d7:	8b 06                	mov    (%esi),%eax
    48d9:	5b                   	pop    %ebx
    48da:	5e                   	pop    %esi
    48db:	c1 f8 0a             	sar    $0xa,%eax
    48de:	5f                   	pop    %edi
    48df:	c3                   	ret    

000048e0 <set_watchpoint>:
    48e0:	55                   	push   %ebp
    48e1:	57                   	push   %edi
    48e2:	56                   	push   %esi
    48e3:	53                   	push   %ebx
    48e4:	e8 97 fb ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    48e9:	81 c3 17 a7 04 00    	add    $0x4a717,%ebx
    48ef:	83 ec 24             	sub    $0x24,%esp
    48f2:	8b 7c 24 38          	mov    0x38(%esp),%edi
    48f6:	8d 44 24 17          	lea    0x17(%esp),%eax
    48fa:	50                   	push   %eax
    48fb:	57                   	push   %edi
    48fc:	e8 8f 0a 00 00       	call   5390 <expr>
    4901:	83 c4 10             	add    $0x10,%esp
    4904:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    4909:	74 45                	je     4950 <set_watchpoint+0x70>
    490b:	89 c5                	mov    %eax,%ebp
    490d:	e8 ee fd ff ff       	call   4700 <new_BP>
    4912:	83 ec 0c             	sub    $0xc,%esp
    4915:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
    491c:	89 c6                	mov    %eax,%esi
    491e:	57                   	push   %edi
    491f:	e8 4c f7 ff ff       	call   4070 <strdup@plt>
    4924:	80 4e 01 01          	orb    $0x1,0x1(%esi)
    4928:	83 c4 10             	add    $0x10,%esp
    492b:	89 46 04             	mov    %eax,0x4(%esi)
    492e:	8b 83 64 20 00 00    	mov    0x2064(%ebx),%eax
    4934:	89 6e 08             	mov    %ebp,0x8(%esi)
    4937:	89 46 14             	mov    %eax,0x14(%esi)
    493a:	8b 06                	mov    (%esi),%eax
    493c:	89 b3 64 20 00 00    	mov    %esi,0x2064(%ebx)
    4942:	c1 f8 0a             	sar    $0xa,%eax
    4945:	83 c4 1c             	add    $0x1c,%esp
    4948:	5b                   	pop    %ebx
    4949:	5e                   	pop    %esi
    494a:	5f                   	pop    %edi
    494b:	5d                   	pop    %ebp
    494c:	c3                   	ret    
    494d:	8d 76 00             	lea    0x0(%esi),%esi
    4950:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4955:	eb ee                	jmp    4945 <set_watchpoint+0x65>
    4957:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    495e:	66 90                	xchg   %ax,%ax

00004960 <delete_breakpoint>:
    4960:	e8 ed 03 00 00       	call   4d52 <__x86.get_pc_thunk.cx>
    4965:	81 c1 9b a6 04 00    	add    $0x4a69b,%ecx
    496b:	56                   	push   %esi
    496c:	53                   	push   %ebx
    496d:	83 ec 04             	sub    $0x4,%esp
    4970:	8b 74 24 10          	mov    0x10(%esp),%esi
    4974:	8b 99 64 20 00 00    	mov    0x2064(%ecx),%ebx
    497a:	85 db                	test   %ebx,%ebx
    497c:	74 4f                	je     49cd <delete_breakpoint+0x6d>
    497e:	8b 13                	mov    (%ebx),%edx
    4980:	8b 43 14             	mov    0x14(%ebx),%eax
    4983:	c1 fa 0a             	sar    $0xa,%edx
    4986:	39 d6                	cmp    %edx,%esi
    4988:	75 16                	jne    49a0 <delete_breakpoint+0x40>
    498a:	eb 37                	jmp    49c3 <delete_breakpoint+0x63>
    498c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4990:	8b 10                	mov    (%eax),%edx
    4992:	8b 48 14             	mov    0x14(%eax),%ecx
    4995:	c1 fa 0a             	sar    $0xa,%edx
    4998:	39 f2                	cmp    %esi,%edx
    499a:	74 14                	je     49b0 <delete_breakpoint+0x50>
    499c:	89 c3                	mov    %eax,%ebx
    499e:	89 c8                	mov    %ecx,%eax
    49a0:	85 c0                	test   %eax,%eax
    49a2:	75 ec                	jne    4990 <delete_breakpoint+0x30>
    49a4:	83 c4 04             	add    $0x4,%esp
    49a7:	5b                   	pop    %ebx
    49a8:	5e                   	pop    %esi
    49a9:	c3                   	ret    
    49aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    49b0:	89 4b 14             	mov    %ecx,0x14(%ebx)
    49b3:	e8 b8 fd ff ff       	call   4770 <free_BP>
    49b8:	83 c4 04             	add    $0x4,%esp
    49bb:	b8 01 00 00 00       	mov    $0x1,%eax
    49c0:	5b                   	pop    %ebx
    49c1:	5e                   	pop    %esi
    49c2:	c3                   	ret    
    49c3:	89 81 64 20 00 00    	mov    %eax,0x2064(%ecx)
    49c9:	89 d8                	mov    %ebx,%eax
    49cb:	eb e6                	jmp    49b3 <delete_breakpoint+0x53>
    49cd:	31 c0                	xor    %eax,%eax
    49cf:	eb d3                	jmp    49a4 <delete_breakpoint+0x44>
    49d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    49d8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    49df:	90                   	nop

000049e0 <delete_all_breakpoint_recursively>:
    49e0:	53                   	push   %ebx
    49e1:	83 ec 08             	sub    $0x8,%esp
    49e4:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    49e8:	85 db                	test   %ebx,%ebx
    49ea:	74 24                	je     4a10 <delete_all_breakpoint_recursively+0x30>
    49ec:	8b 43 14             	mov    0x14(%ebx),%eax
    49ef:	85 c0                	test   %eax,%eax
    49f1:	74 0c                	je     49ff <delete_all_breakpoint_recursively+0x1f>
    49f3:	83 ec 0c             	sub    $0xc,%esp
    49f6:	50                   	push   %eax
    49f7:	e8 e4 ff ff ff       	call   49e0 <delete_all_breakpoint_recursively>
    49fc:	83 c4 10             	add    $0x10,%esp
    49ff:	83 c4 08             	add    $0x8,%esp
    4a02:	89 d8                	mov    %ebx,%eax
    4a04:	5b                   	pop    %ebx
    4a05:	e9 66 fd ff ff       	jmp    4770 <free_BP>
    4a0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4a10:	83 c4 08             	add    $0x8,%esp
    4a13:	5b                   	pop    %ebx
    4a14:	c3                   	ret    
    4a15:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4a1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00004a20 <delete_all_breakpoint>:
    4a20:	53                   	push   %ebx
    4a21:	e8 5a fa ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4a26:	81 c3 da a5 04 00    	add    $0x4a5da,%ebx
    4a2c:	83 ec 14             	sub    $0x14,%esp
    4a2f:	ff b3 64 20 00 00    	pushl  0x2064(%ebx)
    4a35:	e8 a6 ff ff ff       	call   49e0 <delete_all_breakpoint_recursively>
    4a3a:	c7 83 64 20 00 00 00 	movl   $0x0,0x2064(%ebx)
    4a41:	00 00 00 
    4a44:	83 c4 18             	add    $0x18,%esp
    4a47:	5b                   	pop    %ebx
    4a48:	c3                   	ret    
    4a49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00004a50 <list_breakpoint>:
    4a50:	55                   	push   %ebp
    4a51:	57                   	push   %edi
    4a52:	56                   	push   %esi
    4a53:	53                   	push   %ebx
    4a54:	e8 27 fa ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4a59:	81 c3 a7 a5 04 00    	add    $0x4a5a7,%ebx
    4a5f:	83 ec 1c             	sub    $0x1c,%esp
    4a62:	8b 93 64 20 00 00    	mov    0x2064(%ebx),%edx
    4a68:	85 d2                	test   %edx,%edx
    4a6a:	0f 84 c0 00 00 00    	je     4b30 <list_breakpoint+0xe0>
    4a70:	83 ec 0c             	sub    $0xc,%esp
    4a73:	8d 83 10 51 fe ff    	lea    -0x1aef0(%ebx),%eax
    4a79:	8d bb 4b 51 fe ff    	lea    -0x1aeb5(%ebx),%edi
    4a7f:	50                   	push   %eax
    4a80:	8d 83 17 51 fe ff    	lea    -0x1aee9(%ebx),%eax
    4a86:	50                   	push   %eax
    4a87:	8d 83 1f 51 fe ff    	lea    -0x1aee1(%ebx),%eax
    4a8d:	50                   	push   %eax
    4a8e:	8d 83 24 51 fe ff    	lea    -0x1aedc(%ebx),%eax
    4a94:	50                   	push   %eax
    4a95:	8d 83 27 51 fe ff    	lea    -0x1aed9(%ebx),%eax
    4a9b:	50                   	push   %eax
    4a9c:	e8 bf f7 ff ff       	call   4260 <printf@plt>
    4aa1:	8b b3 64 20 00 00    	mov    0x2064(%ebx),%esi
    4aa7:	83 c4 20             	add    $0x20,%esp
    4aaa:	8d 83 4d 51 fe ff    	lea    -0x1aeb3(%ebx),%eax
    4ab0:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4ab4:	85 f6                	test   %esi,%esi
    4ab6:	75 3e                	jne    4af6 <list_breakpoint+0xa6>
    4ab8:	eb 67                	jmp    4b21 <list_breakpoint+0xd1>
    4aba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4ac0:	f6 46 01 01          	testb  $0x1,0x1(%esi)
    4ac4:	8d 83 fa 50 fe ff    	lea    -0x1af06(%ebx),%eax
    4aca:	8d ab fe 50 fe ff    	lea    -0x1af02(%ebx),%ebp
    4ad0:	0f 44 c5             	cmove  %ebp,%eax
    4ad3:	83 ec 0c             	sub    $0xc,%esp
    4ad6:	50                   	push   %eax
    4ad7:	8d 83 bc 64 fe ff    	lea    -0x19b44(%ebx),%eax
    4add:	51                   	push   %ecx
    4ade:	50                   	push   %eax
    4adf:	8d 83 38 51 fe ff    	lea    -0x1aec8(%ebx),%eax
    4ae5:	52                   	push   %edx
    4ae6:	50                   	push   %eax
    4ae7:	e8 74 f7 ff ff       	call   4260 <printf@plt>
    4aec:	8b 76 14             	mov    0x14(%esi),%esi
    4aef:	83 c4 20             	add    $0x20,%esp
    4af2:	85 f6                	test   %esi,%esi
    4af4:	74 2b                	je     4b21 <list_breakpoint+0xd1>
    4af6:	8b 16                	mov    (%esi),%edx
    4af8:	8b 46 10             	mov    0x10(%esi),%eax
    4afb:	8b 4e 04             	mov    0x4(%esi),%ecx
    4afe:	c1 fa 0a             	sar    $0xa,%edx
    4b01:	85 c0                	test   %eax,%eax
    4b03:	74 bb                	je     4ac0 <list_breakpoint+0x70>
    4b05:	83 ec 0c             	sub    $0xc,%esp
    4b08:	ff 76 08             	pushl  0x8(%esi)
    4b0b:	51                   	push   %ecx
    4b0c:	57                   	push   %edi
    4b0d:	52                   	push   %edx
    4b0e:	ff 74 24 28          	pushl  0x28(%esp)
    4b12:	e8 49 f7 ff ff       	call   4260 <printf@plt>
    4b17:	8b 76 14             	mov    0x14(%esi),%esi
    4b1a:	83 c4 20             	add    $0x20,%esp
    4b1d:	85 f6                	test   %esi,%esi
    4b1f:	75 d5                	jne    4af6 <list_breakpoint+0xa6>
    4b21:	83 c4 1c             	add    $0x1c,%esp
    4b24:	5b                   	pop    %ebx
    4b25:	5e                   	pop    %esi
    4b26:	5f                   	pop    %edi
    4b27:	5d                   	pop    %ebp
    4b28:	c3                   	ret    
    4b29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4b30:	83 ec 0c             	sub    $0xc,%esp
    4b33:	8d 83 01 51 fe ff    	lea    -0x1aeff(%ebx),%eax
    4b39:	50                   	push   %eax
    4b3a:	e8 71 f7 ff ff       	call   42b0 <puts@plt>
    4b3f:	83 c4 10             	add    $0x10,%esp
    4b42:	83 c4 1c             	add    $0x1c,%esp
    4b45:	5b                   	pop    %ebx
    4b46:	5e                   	pop    %esi
    4b47:	5f                   	pop    %edi
    4b48:	5d                   	pop    %ebp
    4b49:	c3                   	ret    
    4b4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004b50 <find_breakpoint>:
    4b50:	53                   	push   %ebx
    4b51:	e8 2a f9 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4b56:	81 c3 aa a4 04 00    	add    $0x4a4aa,%ebx
    4b5c:	83 ec 08             	sub    $0x8,%esp
    4b5f:	8b 54 24 10          	mov    0x10(%esp),%edx
    4b63:	8b 83 64 20 00 00    	mov    0x2064(%ebx),%eax
    4b69:	85 c0                	test   %eax,%eax
    4b6b:	74 1c                	je     4b89 <find_breakpoint+0x39>
    4b6d:	8d 76 00             	lea    0x0(%esi),%esi
    4b70:	f6 40 01 02          	testb  $0x2,0x1(%eax)
    4b74:	74 18                	je     4b8e <find_breakpoint+0x3e>
    4b76:	8b 48 10             	mov    0x10(%eax),%ecx
    4b79:	85 c9                	test   %ecx,%ecx
    4b7b:	75 05                	jne    4b82 <find_breakpoint+0x32>
    4b7d:	39 50 04             	cmp    %edx,0x4(%eax)
    4b80:	74 07                	je     4b89 <find_breakpoint+0x39>
    4b82:	8b 40 14             	mov    0x14(%eax),%eax
    4b85:	85 c0                	test   %eax,%eax
    4b87:	75 e7                	jne    4b70 <find_breakpoint+0x20>
    4b89:	83 c4 08             	add    $0x8,%esp
    4b8c:	5b                   	pop    %ebx
    4b8d:	c3                   	ret    
    4b8e:	8d 83 bc 51 fe ff    	lea    -0x1ae44(%ebx),%eax
    4b94:	50                   	push   %eax
    4b95:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    4b9b:	68 ae 00 00 00       	push   $0xae
    4ba0:	50                   	push   %eax
    4ba1:	8d 83 e8 50 fe ff    	lea    -0x1af18(%ebx),%eax
    4ba7:	50                   	push   %eax
    4ba8:	e8 63 f7 ff ff       	call   4310 <__assert_fail@plt>
    4bad:	8d 76 00             	lea    0x0(%esi),%esi

00004bb0 <resume_breakpoints>:
    4bb0:	56                   	push   %esi
    4bb1:	53                   	push   %ebx
    4bb2:	e8 c9 f8 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4bb7:	81 c3 49 a4 04 00    	add    $0x4a449,%ebx
    4bbd:	83 ec 04             	sub    $0x4,%esp
    4bc0:	8b b3 64 20 00 00    	mov    0x2064(%ebx),%esi
    4bc6:	85 f6                	test   %esi,%esi
    4bc8:	75 0d                	jne    4bd7 <resume_breakpoints+0x27>
    4bca:	eb 46                	jmp    4c12 <resume_breakpoints+0x62>
    4bcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4bd0:	8b 76 14             	mov    0x14(%esi),%esi
    4bd3:	85 f6                	test   %esi,%esi
    4bd5:	74 3b                	je     4c12 <resume_breakpoints+0x62>
    4bd7:	f6 46 01 02          	testb  $0x2,0x1(%esi)
    4bdb:	74 3b                	je     4c18 <resume_breakpoints+0x68>
    4bdd:	8b 46 10             	mov    0x10(%esi),%eax
    4be0:	85 c0                	test   %eax,%eax
    4be2:	75 ec                	jne    4bd0 <resume_breakpoints+0x20>
    4be4:	83 ec 08             	sub    $0x8,%esp
    4be7:	6a 01                	push   $0x1
    4be9:	ff 76 04             	pushl  0x4(%esi)
    4bec:	e8 af a0 01 00       	call   1eca0 <instr_fetch>
    4bf1:	88 06                	mov    %al,(%esi)
    4bf3:	68 f1 00 00 00       	push   $0xf1
    4bf8:	6a 01                	push   $0x1
    4bfa:	6a 01                	push   $0x1
    4bfc:	ff 76 04             	pushl  0x4(%esi)
    4bff:	e8 ec 9f 01 00       	call   1ebf0 <vaddr_write>
    4c04:	80 4e 01 01          	orb    $0x1,0x1(%esi)
    4c08:	8b 76 14             	mov    0x14(%esi),%esi
    4c0b:	83 c4 20             	add    $0x20,%esp
    4c0e:	85 f6                	test   %esi,%esi
    4c10:	75 c5                	jne    4bd7 <resume_breakpoints+0x27>
    4c12:	83 c4 04             	add    $0x4,%esp
    4c15:	5b                   	pop    %ebx
    4c16:	5e                   	pop    %esi
    4c17:	c3                   	ret    
    4c18:	8d 83 a8 51 fe ff    	lea    -0x1ae58(%ebx),%eax
    4c1e:	50                   	push   %eax
    4c1f:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    4c25:	68 be 00 00 00       	push   $0xbe
    4c2a:	50                   	push   %eax
    4c2b:	8d 83 e8 50 fe ff    	lea    -0x1af18(%ebx),%eax
    4c31:	50                   	push   %eax
    4c32:	e8 d9 f6 ff ff       	call   4310 <__assert_fail@plt>
    4c37:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4c3e:	66 90                	xchg   %ax,%ax

00004c40 <mask_breakpoints>:
    4c40:	56                   	push   %esi
    4c41:	53                   	push   %ebx
    4c42:	e8 39 f8 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4c47:	81 c3 b9 a3 04 00    	add    $0x4a3b9,%ebx
    4c4d:	83 ec 04             	sub    $0x4,%esp
    4c50:	8b b3 64 20 00 00    	mov    0x2064(%ebx),%esi
    4c56:	85 f6                	test   %esi,%esi
    4c58:	75 0d                	jne    4c67 <mask_breakpoints+0x27>
    4c5a:	eb 32                	jmp    4c8e <mask_breakpoints+0x4e>
    4c5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4c60:	8b 76 14             	mov    0x14(%esi),%esi
    4c63:	85 f6                	test   %esi,%esi
    4c65:	74 27                	je     4c8e <mask_breakpoints+0x4e>
    4c67:	f6 46 01 02          	testb  $0x2,0x1(%esi)
    4c6b:	74 27                	je     4c94 <mask_breakpoints+0x54>
    4c6d:	8b 46 10             	mov    0x10(%esi),%eax
    4c70:	85 c0                	test   %eax,%eax
    4c72:	75 ec                	jne    4c60 <mask_breakpoints+0x20>
    4c74:	0f b6 06             	movzbl (%esi),%eax
    4c77:	50                   	push   %eax
    4c78:	6a 01                	push   $0x1
    4c7a:	6a 01                	push   $0x1
    4c7c:	ff 76 04             	pushl  0x4(%esi)
    4c7f:	e8 6c 9f 01 00       	call   1ebf0 <vaddr_write>
    4c84:	8b 76 14             	mov    0x14(%esi),%esi
    4c87:	83 c4 10             	add    $0x10,%esp
    4c8a:	85 f6                	test   %esi,%esi
    4c8c:	75 d9                	jne    4c67 <mask_breakpoints+0x27>
    4c8e:	83 c4 04             	add    $0x4,%esp
    4c91:	5b                   	pop    %ebx
    4c92:	5e                   	pop    %esi
    4c93:	c3                   	ret    
    4c94:	8d 83 94 51 fe ff    	lea    -0x1ae6c(%ebx),%eax
    4c9a:	50                   	push   %eax
    4c9b:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    4ca1:	68 da 00 00 00       	push   $0xda
    4ca6:	50                   	push   %eax
    4ca7:	8d 83 e8 50 fe ff    	lea    -0x1af18(%ebx),%eax
    4cad:	50                   	push   %eax
    4cae:	e8 5d f6 ff ff       	call   4310 <__assert_fail@plt>
    4cb3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4cba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00004cc0 <scan_watchpoint>:
    4cc0:	57                   	push   %edi
    4cc1:	56                   	push   %esi
    4cc2:	53                   	push   %ebx
    4cc3:	e8 b8 f7 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4cc8:	81 c3 38 a3 04 00    	add    $0x4a338,%ebx
    4cce:	83 ec 10             	sub    $0x10,%esp
    4cd1:	8b b3 64 20 00 00    	mov    0x2064(%ebx),%esi
    4cd7:	85 f6                	test   %esi,%esi
    4cd9:	74 4d                	je     4d28 <scan_watchpoint+0x68>
    4cdb:	f6 46 01 02          	testb  $0x2,0x1(%esi)
    4cdf:	74 52                	je     4d33 <scan_watchpoint+0x73>
    4ce1:	8d 7c 24 0f          	lea    0xf(%esp),%edi
    4ce5:	eb 16                	jmp    4cfd <scan_watchpoint+0x3d>
    4ce7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4cee:	66 90                	xchg   %ax,%ax
    4cf0:	8b 76 14             	mov    0x14(%esi),%esi
    4cf3:	85 f6                	test   %esi,%esi
    4cf5:	74 31                	je     4d28 <scan_watchpoint+0x68>
    4cf7:	f6 46 01 02          	testb  $0x2,0x1(%esi)
    4cfb:	74 36                	je     4d33 <scan_watchpoint+0x73>
    4cfd:	83 7e 10 01          	cmpl   $0x1,0x10(%esi)
    4d01:	75 ed                	jne    4cf0 <scan_watchpoint+0x30>
    4d03:	83 ec 08             	sub    $0x8,%esp
    4d06:	57                   	push   %edi
    4d07:	ff 76 04             	pushl  0x4(%esi)
    4d0a:	e8 81 06 00 00       	call   5390 <expr>
    4d0f:	83 c4 10             	add    $0x10,%esp
    4d12:	89 46 0c             	mov    %eax,0xc(%esi)
    4d15:	3b 46 08             	cmp    0x8(%esi),%eax
    4d18:	74 d6                	je     4cf0 <scan_watchpoint+0x30>
    4d1a:	83 c4 10             	add    $0x10,%esp
    4d1d:	89 f0                	mov    %esi,%eax
    4d1f:	5b                   	pop    %ebx
    4d20:	5e                   	pop    %esi
    4d21:	5f                   	pop    %edi
    4d22:	c3                   	ret    
    4d23:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4d27:	90                   	nop
    4d28:	83 c4 10             	add    $0x10,%esp
    4d2b:	31 f6                	xor    %esi,%esi
    4d2d:	89 f0                	mov    %esi,%eax
    4d2f:	5b                   	pop    %ebx
    4d30:	5e                   	pop    %esi
    4d31:	5f                   	pop    %edi
    4d32:	c3                   	ret    
    4d33:	8d 83 84 51 fe ff    	lea    -0x1ae7c(%ebx),%eax
    4d39:	50                   	push   %eax
    4d3a:	8d 83 ae 50 fe ff    	lea    -0x1af52(%ebx),%eax
    4d40:	68 eb 00 00 00       	push   $0xeb
    4d45:	50                   	push   %eax
    4d46:	8d 83 e8 50 fe ff    	lea    -0x1af18(%ebx),%eax
    4d4c:	50                   	push   %eax
    4d4d:	e8 be f5 ff ff       	call   4310 <__assert_fail@plt>

00004d52 <__x86.get_pc_thunk.cx>:
    4d52:	8b 0c 24             	mov    (%esp),%ecx
    4d55:	c3                   	ret    

00004d56 <__x86.get_pc_thunk.di>:
    4d56:	8b 3c 24             	mov    (%esp),%edi
    4d59:	c3                   	ret    
    4d5a:	66 90                	xchg   %ax,%ax
    4d5c:	66 90                	xchg   %ax,%ax
    4d5e:	66 90                	xchg   %ax,%ax

00004d60 <load_elf_tables>:
    4d60:	55                   	push   %ebp
    4d61:	57                   	push   %edi
    4d62:	56                   	push   %esi
    4d63:	53                   	push   %ebx
    4d64:	e8 17 f7 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    4d69:	81 c3 97 a2 04 00    	add    $0x4a297,%ebx
    4d6f:	81 ec 44 10 00 00    	sub    $0x1044,%esp
    4d75:	8d 83 6f 50 fe ff    	lea    -0x1af91(%ebx),%eax
    4d7b:	50                   	push   %eax
    4d7c:	ff b4 24 5c 10 00 00 	pushl  0x105c(%esp)
    4d83:	e8 98 f5 ff ff       	call   4320 <fopen@plt>
    4d88:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    4d8c:	83 c4 10             	add    $0x10,%esp
    4d8f:	85 c0                	test   %eax,%eax
    4d91:	0f 84 a8 02 00 00    	je     503f <load_elf_tables+0x2df>
    4d97:	ff 74 24 0c          	pushl  0xc(%esp)
    4d9b:	6a 01                	push   $0x1
    4d9d:	68 00 10 00 00       	push   $0x1000
    4da2:	8d 44 24 3c          	lea    0x3c(%esp),%eax
    4da6:	50                   	push   %eax
    4da7:	e8 94 f2 ff ff       	call   4040 <fread@plt>
    4dac:	c7 44 24 3c 7f 45 4c 	movl   $0x464c457f,0x3c(%esp)
    4db3:	46 
    4db4:	83 c4 10             	add    $0x10,%esp
    4db7:	81 7c 24 30 7f 45 4c 	cmpl   $0x464c457f,0x30(%esp)
    4dbe:	46 
    4dbf:	0f 85 ea 02 00 00    	jne    50af <load_elf_tables+0x34f>
    4dc5:	80 7c 24 34 01       	cmpb   $0x1,0x34(%esp)
    4dca:	0f 85 c3 02 00 00    	jne    5093 <load_elf_tables+0x333>
    4dd0:	80 7c 24 35 01       	cmpb   $0x1,0x35(%esp)
    4dd5:	0f 85 9c 02 00 00    	jne    5077 <load_elf_tables+0x317>
    4ddb:	80 7c 24 36 01       	cmpb   $0x1,0x36(%esp)
    4de0:	0f 85 75 02 00 00    	jne    505b <load_elf_tables+0x2fb>
    4de6:	0f b6 44 24 37       	movzbl 0x37(%esp),%eax
    4deb:	84 c0                	test   %al,%al
    4ded:	74 08                	je     4df7 <load_elf_tables+0x97>
    4def:	3c 03                	cmp    $0x3,%al
    4df1:	0f 85 44 03 00 00    	jne    513b <load_elf_tables+0x3db>
    4df7:	80 7c 24 38 00       	cmpb   $0x0,0x38(%esp)
    4dfc:	0f 85 1d 03 00 00    	jne    511f <load_elf_tables+0x3bf>
    4e02:	66 83 7c 24 40 02    	cmpw   $0x2,0x40(%esp)
    4e08:	0f 85 f5 02 00 00    	jne    5103 <load_elf_tables+0x3a3>
    4e0e:	66 83 7c 24 42 03    	cmpw   $0x3,0x42(%esp)
    4e14:	0f 85 cd 02 00 00    	jne    50e7 <load_elf_tables+0x387>
    4e1a:	83 7c 24 44 01       	cmpl   $0x1,0x44(%esp)
    4e1f:	0f 85 a6 02 00 00    	jne    50cb <load_elf_tables+0x36b>
    4e25:	0f b7 74 24 5e       	movzwl 0x5e(%esp),%esi
    4e2a:	0f b7 44 24 60       	movzwl 0x60(%esp),%eax
    4e2f:	83 ec 0c             	sub    $0xc,%esp
    4e32:	0f af f0             	imul   %eax,%esi
    4e35:	56                   	push   %esi
    4e36:	e8 65 f2 ff ff       	call   40a0 <malloc@plt>
    4e3b:	89 44 24 28          	mov    %eax,0x28(%esp)
    4e3f:	83 c4 0c             	add    $0xc,%esp
    4e42:	89 c7                	mov    %eax,%edi
    4e44:	6a 00                	push   $0x0
    4e46:	ff 74 24 58          	pushl  0x58(%esp)
    4e4a:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    4e4e:	55                   	push   %ebp
    4e4f:	e8 0c f3 ff ff       	call   4160 <fseek@plt>
    4e54:	55                   	push   %ebp
    4e55:	6a 01                	push   $0x1
    4e57:	56                   	push   %esi
    4e58:	57                   	push   %edi
    4e59:	e8 e2 f1 ff ff       	call   4040 <fread@plt>
    4e5e:	0f b7 84 24 82 00 00 	movzwl 0x82(%esp),%eax
    4e65:	00 
    4e66:	83 c4 14             	add    $0x14,%esp
    4e69:	8d 04 80             	lea    (%eax,%eax,4),%eax
    4e6c:	8d 34 c7             	lea    (%edi,%eax,8),%esi
    4e6f:	ff 76 14             	pushl  0x14(%esi)
    4e72:	e8 29 f2 ff ff       	call   40a0 <malloc@plt>
    4e77:	89 44 24 18          	mov    %eax,0x18(%esp)
    4e7b:	83 c4 0c             	add    $0xc,%esp
    4e7e:	6a 00                	push   $0x0
    4e80:	ff 76 10             	pushl  0x10(%esi)
    4e83:	55                   	push   %ebp
    4e84:	e8 d7 f2 ff ff       	call   4160 <fseek@plt>
    4e89:	55                   	push   %ebp
    4e8a:	6a 01                	push   $0x1
    4e8c:	0f b7 44 24 7a       	movzwl 0x7a(%esp),%eax
    4e91:	8d 04 80             	lea    (%eax,%eax,4),%eax
    4e94:	ff 74 c7 14          	pushl  0x14(%edi,%eax,8)
    4e98:	ff 74 24 24          	pushl  0x24(%esp)
    4e9c:	e8 9f f1 ff ff       	call   4040 <fread@plt>
    4ea1:	83 c4 20             	add    $0x20,%esp
    4ea4:	66 83 7c 24 60 00    	cmpw   $0x0,0x60(%esp)
    4eaa:	0f 84 c0 00 00 00    	je     4f70 <load_elf_tables+0x210>
    4eb0:	8d 83 45 52 fe ff    	lea    -0x1adbb(%ebx),%eax
    4eb6:	89 fd                	mov    %edi,%ebp
    4eb8:	31 d2                	xor    %edx,%edx
    4eba:	89 44 24 14          	mov    %eax,0x14(%esp)
    4ebe:	8d 83 3d 52 fe ff    	lea    -0x1adc3(%ebx),%eax
    4ec4:	89 44 24 10          	mov    %eax,0x10(%esp)
    4ec8:	eb 22                	jmp    4eec <load_elf_tables+0x18c>
    4eca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4ed0:	83 f8 03             	cmp    $0x3,%eax
    4ed3:	0f 84 e7 00 00 00    	je     4fc0 <load_elf_tables+0x260>
    4ed9:	0f b7 44 24 60       	movzwl 0x60(%esp),%eax
    4ede:	83 c2 01             	add    $0x1,%edx
    4ee1:	83 c5 28             	add    $0x28,%ebp
    4ee4:	39 d0                	cmp    %edx,%eax
    4ee6:	0f 8e 84 00 00 00    	jle    4f70 <load_elf_tables+0x210>
    4eec:	8b 45 04             	mov    0x4(%ebp),%eax
    4eef:	83 f8 02             	cmp    $0x2,%eax
    4ef2:	75 dc                	jne    4ed0 <load_elf_tables+0x170>
    4ef4:	8b 7c 24 10          	mov    0x10(%esp),%edi
    4ef8:	8b 74 24 08          	mov    0x8(%esp),%esi
    4efc:	b9 08 00 00 00       	mov    $0x8,%ecx
    4f01:	03 75 00             	add    0x0(%ebp),%esi
    4f04:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
    4f06:	0f 97 c0             	seta   %al
    4f09:	1c 00                	sbb    $0x0,%al
    4f0b:	84 c0                	test   %al,%al
    4f0d:	75 ca                	jne    4ed9 <load_elf_tables+0x179>
    4f0f:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    4f13:	83 ec 0c             	sub    $0xc,%esp
    4f16:	83 c5 28             	add    $0x28,%ebp
    4f19:	ff 75 ec             	pushl  -0x14(%ebp)
    4f1c:	e8 7f f1 ff ff       	call   40a0 <malloc@plt>
    4f21:	83 c4 0c             	add    $0xc,%esp
    4f24:	6a 00                	push   $0x0
    4f26:	ff 75 e8             	pushl  -0x18(%ebp)
    4f29:	8b 7c 24 18          	mov    0x18(%esp),%edi
    4f2d:	89 83 84 23 00 00    	mov    %eax,0x2384(%ebx)
    4f33:	57                   	push   %edi
    4f34:	e8 27 f2 ff ff       	call   4160 <fseek@plt>
    4f39:	57                   	push   %edi
    4f3a:	6a 01                	push   $0x1
    4f3c:	ff 75 ec             	pushl  -0x14(%ebp)
    4f3f:	ff b3 84 23 00 00    	pushl  0x2384(%ebx)
    4f45:	e8 f6 f0 ff ff       	call   4040 <fread@plt>
    4f4a:	8b 45 ec             	mov    -0x14(%ebp),%eax
    4f4d:	83 c4 20             	add    $0x20,%esp
    4f50:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    4f54:	c1 e8 04             	shr    $0x4,%eax
    4f57:	83 c2 01             	add    $0x1,%edx
    4f5a:	89 83 80 23 00 00    	mov    %eax,0x2380(%ebx)
    4f60:	0f b7 44 24 60       	movzwl 0x60(%esp),%eax
    4f65:	39 d0                	cmp    %edx,%eax
    4f67:	7f 83                	jg     4eec <load_elf_tables+0x18c>
    4f69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4f70:	83 ec 0c             	sub    $0xc,%esp
    4f73:	ff 74 24 24          	pushl  0x24(%esp)
    4f77:	e8 a4 f2 ff ff       	call   4220 <free@plt>
    4f7c:	5a                   	pop    %edx
    4f7d:	ff 74 24 14          	pushl  0x14(%esp)
    4f81:	e8 9a f2 ff ff       	call   4220 <free@plt>
    4f86:	8b 8b 88 23 00 00    	mov    0x2388(%ebx),%ecx
    4f8c:	83 c4 10             	add    $0x10,%esp
    4f8f:	85 c9                	test   %ecx,%ecx
    4f91:	0f 84 8c 00 00 00    	je     5023 <load_elf_tables+0x2c3>
    4f97:	8b 83 84 23 00 00    	mov    0x2384(%ebx),%eax
    4f9d:	85 c0                	test   %eax,%eax
    4f9f:	0f 84 7e 00 00 00    	je     5023 <load_elf_tables+0x2c3>
    4fa5:	83 ec 0c             	sub    $0xc,%esp
    4fa8:	ff 74 24 18          	pushl  0x18(%esp)
    4fac:	e8 2f f3 ff ff       	call   42e0 <fclose@plt>
    4fb1:	81 c4 4c 10 00 00    	add    $0x104c,%esp
    4fb7:	5b                   	pop    %ebx
    4fb8:	5e                   	pop    %esi
    4fb9:	5f                   	pop    %edi
    4fba:	5d                   	pop    %ebp
    4fbb:	c3                   	ret    
    4fbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4fc0:	8b 7c 24 14          	mov    0x14(%esp),%edi
    4fc4:	8b 74 24 08          	mov    0x8(%esp),%esi
    4fc8:	b9 08 00 00 00       	mov    $0x8,%ecx
    4fcd:	03 75 00             	add    0x0(%ebp),%esi
    4fd0:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
    4fd2:	0f 97 c0             	seta   %al
    4fd5:	1c 00                	sbb    $0x0,%al
    4fd7:	84 c0                	test   %al,%al
    4fd9:	0f 85 fa fe ff ff    	jne    4ed9 <load_elf_tables+0x179>
    4fdf:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    4fe3:	83 ec 0c             	sub    $0xc,%esp
    4fe6:	ff 75 14             	pushl  0x14(%ebp)
    4fe9:	e8 b2 f0 ff ff       	call   40a0 <malloc@plt>
    4fee:	83 c4 0c             	add    $0xc,%esp
    4ff1:	6a 00                	push   $0x0
    4ff3:	ff 75 10             	pushl  0x10(%ebp)
    4ff6:	8b 7c 24 18          	mov    0x18(%esp),%edi
    4ffa:	89 83 88 23 00 00    	mov    %eax,0x2388(%ebx)
    5000:	57                   	push   %edi
    5001:	e8 5a f1 ff ff       	call   4160 <fseek@plt>
    5006:	57                   	push   %edi
    5007:	6a 01                	push   $0x1
    5009:	ff 75 14             	pushl  0x14(%ebp)
    500c:	ff b3 88 23 00 00    	pushl  0x2388(%ebx)
    5012:	e8 29 f0 ff ff       	call   4040 <fread@plt>
    5017:	83 c4 20             	add    $0x20,%esp
    501a:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    501e:	e9 b6 fe ff ff       	jmp    4ed9 <load_elf_tables+0x179>
    5023:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    5029:	50                   	push   %eax
    502a:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    5030:	6a 4c                	push   $0x4c
    5032:	50                   	push   %eax
    5033:	8d 83 64 53 fe ff    	lea    -0x1ac9c(%ebx),%eax
    5039:	50                   	push   %eax
    503a:	e8 d1 f2 ff ff       	call   4310 <__assert_fail@plt>
    503f:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    5045:	50                   	push   %eax
    5046:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    504c:	6a 0f                	push   $0xf
    504e:	50                   	push   %eax
    504f:	8d 83 ed 51 fe ff    	lea    -0x1ae13(%ebx),%eax
    5055:	50                   	push   %eax
    5056:	e8 b5 f2 ff ff       	call   4310 <__assert_fail@plt>
    505b:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    5061:	50                   	push   %eax
    5062:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    5068:	6a 1e                	push   $0x1e
    506a:	50                   	push   %eax
    506b:	8d 83 c4 52 fe ff    	lea    -0x1ad3c(%ebx),%eax
    5071:	50                   	push   %eax
    5072:	e8 99 f2 ff ff       	call   4310 <__assert_fail@plt>
    5077:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    507d:	50                   	push   %eax
    507e:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    5084:	6a 1d                	push   $0x1d
    5086:	50                   	push   %eax
    5087:	8d 83 9c 52 fe ff    	lea    -0x1ad64(%ebx),%eax
    508d:	50                   	push   %eax
    508e:	e8 7d f2 ff ff       	call   4310 <__assert_fail@plt>
    5093:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    5099:	50                   	push   %eax
    509a:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    50a0:	6a 1c                	push   $0x1c
    50a2:	50                   	push   %eax
    50a3:	8d 83 74 52 fe ff    	lea    -0x1ad8c(%ebx),%eax
    50a9:	50                   	push   %eax
    50aa:	e8 61 f2 ff ff       	call   4310 <__assert_fail@plt>
    50af:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    50b5:	50                   	push   %eax
    50b6:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    50bc:	6a 1b                	push   $0x1b
    50be:	50                   	push   %eax
    50bf:	8d 83 50 52 fe ff    	lea    -0x1adb0(%ebx),%eax
    50c5:	50                   	push   %eax
    50c6:	e8 45 f2 ff ff       	call   4310 <__assert_fail@plt>
    50cb:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    50d1:	50                   	push   %eax
    50d2:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    50d8:	6a 24                	push   $0x24
    50da:	50                   	push   %eax
    50db:	8d 83 20 52 fe ff    	lea    -0x1ade0(%ebx),%eax
    50e1:	50                   	push   %eax
    50e2:	e8 29 f2 ff ff       	call   4310 <__assert_fail@plt>
    50e7:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    50ed:	50                   	push   %eax
    50ee:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    50f4:	6a 23                	push   $0x23
    50f6:	50                   	push   %eax
    50f7:	8d 83 07 52 fe ff    	lea    -0x1adf9(%ebx),%eax
    50fd:	50                   	push   %eax
    50fe:	e8 0d f2 ff ff       	call   4310 <__assert_fail@plt>
    5103:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    5109:	50                   	push   %eax
    510a:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    5110:	6a 22                	push   $0x22
    5112:	50                   	push   %eax
    5113:	8d 83 f0 51 fe ff    	lea    -0x1ae10(%ebx),%eax
    5119:	50                   	push   %eax
    511a:	e8 f1 f1 ff ff       	call   4310 <__assert_fail@plt>
    511f:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    5125:	50                   	push   %eax
    5126:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    512c:	6a 21                	push   $0x21
    512e:	50                   	push   %eax
    512f:	8d 83 40 53 fe ff    	lea    -0x1acc0(%ebx),%eax
    5135:	50                   	push   %eax
    5136:	e8 d5 f1 ff ff       	call   4310 <__assert_fail@plt>
    513b:	8d 83 8c 53 fe ff    	lea    -0x1ac74(%ebx),%eax
    5141:	50                   	push   %eax
    5142:	8d 83 db 51 fe ff    	lea    -0x1ae25(%ebx),%eax
    5148:	6a 20                	push   $0x20
    514a:	50                   	push   %eax
    514b:	8d 83 ec 52 fe ff    	lea    -0x1ad14(%ebx),%eax
    5151:	50                   	push   %eax
    5152:	e8 b9 f1 ff ff       	call   4310 <__assert_fail@plt>
    5157:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    515e:	66 90                	xchg   %ax,%ax

00005160 <look_up_fun_symtab>:
    5160:	55                   	push   %ebp
    5161:	57                   	push   %edi
    5162:	56                   	push   %esi
    5163:	53                   	push   %ebx
    5164:	e8 17 f3 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5169:	81 c3 97 9e 04 00    	add    $0x49e97,%ebx
    516f:	83 ec 1c             	sub    $0x1c,%esp
    5172:	8b ab 80 23 00 00    	mov    0x2380(%ebx),%ebp
    5178:	85 ed                	test   %ebp,%ebp
    517a:	7e 5c                	jle    51d8 <look_up_fun_symtab+0x78>
    517c:	8b 83 88 23 00 00    	mov    0x2388(%ebx),%eax
    5182:	8b b3 84 23 00 00    	mov    0x2384(%ebx),%esi
    5188:	31 ff                	xor    %edi,%edi
    518a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    518e:	eb 0a                	jmp    519a <look_up_fun_symtab+0x3a>
    5190:	83 c7 01             	add    $0x1,%edi
    5193:	83 c6 10             	add    $0x10,%esi
    5196:	39 ef                	cmp    %ebp,%edi
    5198:	74 3e                	je     51d8 <look_up_fun_symtab+0x78>
    519a:	0f b6 46 0c          	movzbl 0xc(%esi),%eax
    519e:	83 e0 0f             	and    $0xf,%eax
    51a1:	3c 02                	cmp    $0x2,%al
    51a3:	75 eb                	jne    5190 <look_up_fun_symtab+0x30>
    51a5:	83 ec 08             	sub    $0x8,%esp
    51a8:	ff 74 24 38          	pushl  0x38(%esp)
    51ac:	8b 44 24 18          	mov    0x18(%esp),%eax
    51b0:	03 06                	add    (%esi),%eax
    51b2:	50                   	push   %eax
    51b3:	e8 58 ef ff ff       	call   4110 <strcmp@plt>
    51b8:	83 c4 10             	add    $0x10,%esp
    51bb:	85 c0                	test   %eax,%eax
    51bd:	75 d1                	jne    5190 <look_up_fun_symtab+0x30>
    51bf:	8b 44 24 34          	mov    0x34(%esp),%eax
    51c3:	c6 00 01             	movb   $0x1,(%eax)
    51c6:	8b 46 04             	mov    0x4(%esi),%eax
    51c9:	83 c4 1c             	add    $0x1c,%esp
    51cc:	5b                   	pop    %ebx
    51cd:	5e                   	pop    %esi
    51ce:	5f                   	pop    %edi
    51cf:	5d                   	pop    %ebp
    51d0:	c3                   	ret    
    51d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    51d8:	8b 44 24 34          	mov    0x34(%esp),%eax
    51dc:	c6 00 00             	movb   $0x0,(%eax)
    51df:	83 c4 1c             	add    $0x1c,%esp
    51e2:	31 c0                	xor    %eax,%eax
    51e4:	5b                   	pop    %ebx
    51e5:	5e                   	pop    %esi
    51e6:	5f                   	pop    %edi
    51e7:	5d                   	pop    %ebp
    51e8:	c3                   	ret    
    51e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000051f0 <look_up_symtab>:
    51f0:	55                   	push   %ebp
    51f1:	57                   	push   %edi
    51f2:	56                   	push   %esi
    51f3:	53                   	push   %ebx
    51f4:	e8 87 f2 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    51f9:	81 c3 07 9e 04 00    	add    $0x49e07,%ebx
    51ff:	83 ec 1c             	sub    $0x1c,%esp
    5202:	8b ab 80 23 00 00    	mov    0x2380(%ebx),%ebp
    5208:	85 ed                	test   %ebp,%ebp
    520a:	7e 5c                	jle    5268 <look_up_symtab+0x78>
    520c:	8b 83 88 23 00 00    	mov    0x2388(%ebx),%eax
    5212:	8b b3 84 23 00 00    	mov    0x2384(%ebx),%esi
    5218:	31 ff                	xor    %edi,%edi
    521a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    521e:	eb 0a                	jmp    522a <look_up_symtab+0x3a>
    5220:	83 c7 01             	add    $0x1,%edi
    5223:	83 c6 10             	add    $0x10,%esi
    5226:	39 ef                	cmp    %ebp,%edi
    5228:	74 3e                	je     5268 <look_up_symtab+0x78>
    522a:	0f b6 46 0c          	movzbl 0xc(%esi),%eax
    522e:	83 e0 0f             	and    $0xf,%eax
    5231:	83 e8 01             	sub    $0x1,%eax
    5234:	3c 01                	cmp    $0x1,%al
    5236:	77 e8                	ja     5220 <look_up_symtab+0x30>
    5238:	83 ec 08             	sub    $0x8,%esp
    523b:	ff 74 24 38          	pushl  0x38(%esp)
    523f:	8b 44 24 18          	mov    0x18(%esp),%eax
    5243:	03 06                	add    (%esi),%eax
    5245:	50                   	push   %eax
    5246:	e8 c5 ee ff ff       	call   4110 <strcmp@plt>
    524b:	83 c4 10             	add    $0x10,%esp
    524e:	85 c0                	test   %eax,%eax
    5250:	75 ce                	jne    5220 <look_up_symtab+0x30>
    5252:	8b 44 24 34          	mov    0x34(%esp),%eax
    5256:	c6 00 01             	movb   $0x1,(%eax)
    5259:	8b 46 04             	mov    0x4(%esi),%eax
    525c:	83 c4 1c             	add    $0x1c,%esp
    525f:	5b                   	pop    %ebx
    5260:	5e                   	pop    %esi
    5261:	5f                   	pop    %edi
    5262:	5d                   	pop    %ebp
    5263:	c3                   	ret    
    5264:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5268:	8b 44 24 34          	mov    0x34(%esp),%eax
    526c:	c6 00 00             	movb   $0x0,(%eax)
    526f:	83 c4 1c             	add    $0x1c,%esp
    5272:	31 c0                	xor    %eax,%eax
    5274:	5b                   	pop    %ebx
    5275:	5e                   	pop    %esi
    5276:	5f                   	pop    %edi
    5277:	5d                   	pop    %ebp
    5278:	c3                   	ret    
    5279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005280 <find_fun_name>:
    5280:	57                   	push   %edi
    5281:	e8 d0 fa ff ff       	call   4d56 <__x86.get_pc_thunk.di>
    5286:	81 c7 7a 9d 04 00    	add    $0x49d7a,%edi
    528c:	56                   	push   %esi
    528d:	53                   	push   %ebx
    528e:	8b 74 24 10          	mov    0x10(%esp),%esi
    5292:	8b 9f 80 23 00 00    	mov    0x2380(%edi),%ebx
    5298:	85 db                	test   %ebx,%ebx
    529a:	7e 44                	jle    52e0 <find_fun_name+0x60>
    529c:	8b 97 84 23 00 00    	mov    0x2384(%edi),%edx
    52a2:	31 c9                	xor    %ecx,%ecx
    52a4:	eb 14                	jmp    52ba <find_fun_name+0x3a>
    52a6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    52ad:	8d 76 00             	lea    0x0(%esi),%esi
    52b0:	83 c1 01             	add    $0x1,%ecx
    52b3:	83 c2 10             	add    $0x10,%edx
    52b6:	39 d9                	cmp    %ebx,%ecx
    52b8:	74 26                	je     52e0 <find_fun_name+0x60>
    52ba:	0f b6 42 0c          	movzbl 0xc(%edx),%eax
    52be:	83 e0 0f             	and    $0xf,%eax
    52c1:	3c 02                	cmp    $0x2,%al
    52c3:	75 eb                	jne    52b0 <find_fun_name+0x30>
    52c5:	8b 42 04             	mov    0x4(%edx),%eax
    52c8:	39 f0                	cmp    %esi,%eax
    52ca:	77 e4                	ja     52b0 <find_fun_name+0x30>
    52cc:	03 42 08             	add    0x8(%edx),%eax
    52cf:	39 f0                	cmp    %esi,%eax
    52d1:	76 dd                	jbe    52b0 <find_fun_name+0x30>
    52d3:	5b                   	pop    %ebx
    52d4:	8b 02                	mov    (%edx),%eax
    52d6:	5e                   	pop    %esi
    52d7:	03 87 88 23 00 00    	add    0x2388(%edi),%eax
    52dd:	5f                   	pop    %edi
    52de:	c3                   	ret    
    52df:	90                   	nop
    52e0:	8d 87 88 53 fe ff    	lea    -0x1ac78(%edi),%eax
    52e6:	5b                   	pop    %ebx
    52e7:	5e                   	pop    %esi
    52e8:	5f                   	pop    %edi
    52e9:	c3                   	ret    
    52ea:	66 90                	xchg   %ax,%ax
    52ec:	66 90                	xchg   %ax,%ax
    52ee:	66 90                	xchg   %ax,%ax

000052f0 <init_regex>:
    52f0:	56                   	push   %esi
    52f1:	53                   	push   %ebx
    52f2:	e8 89 f1 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    52f7:	81 c3 09 9d 04 00    	add    $0x49d09,%ebx
    52fd:	81 ec 88 00 00 00    	sub    $0x88,%esp
    5303:	6a 01                	push   $0x1
    5305:	8d 83 9c 53 fe ff    	lea    -0x1ac64(%ebx),%eax
    530b:	8d b3 a0 23 00 00    	lea    0x23a0(%ebx),%esi
    5311:	50                   	push   %eax
    5312:	56                   	push   %esi
    5313:	e8 28 ef ff ff       	call   4240 <regcomp@plt>
    5318:	83 c4 10             	add    $0x10,%esp
    531b:	85 c0                	test   %eax,%eax
    531d:	75 31                	jne    5350 <init_regex+0x60>
    531f:	83 ec 04             	sub    $0x4,%esp
    5322:	8d 83 9f 53 fe ff    	lea    -0x1ac61(%ebx),%eax
    5328:	8d b3 c0 23 00 00    	lea    0x23c0(%ebx),%esi
    532e:	6a 01                	push   $0x1
    5330:	50                   	push   %eax
    5331:	56                   	push   %esi
    5332:	e8 09 ef ff ff       	call   4240 <regcomp@plt>
    5337:	83 c4 10             	add    $0x10,%esp
    533a:	85 c0                	test   %eax,%eax
    533c:	75 32                	jne    5370 <init_regex+0x80>
    533e:	81 c4 84 00 00 00    	add    $0x84,%esp
    5344:	5b                   	pop    %ebx
    5345:	5e                   	pop    %esi
    5346:	c3                   	ret    
    5347:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    534e:	66 90                	xchg   %ax,%ax
    5350:	68 80 00 00 00       	push   $0x80
    5355:	8d 54 24 04          	lea    0x4(%esp),%edx
    5359:	52                   	push   %edx
    535a:	56                   	push   %esi
    535b:	50                   	push   %eax
    535c:	e8 0f ef ff ff       	call   4270 <regerror@plt>
    5361:	83 c4 10             	add    $0x10,%esp
    5364:	eb b9                	jmp    531f <init_regex+0x2f>
    5366:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    536d:	8d 76 00             	lea    0x0(%esi),%esi
    5370:	68 80 00 00 00       	push   $0x80
    5375:	8d 54 24 04          	lea    0x4(%esp),%edx
    5379:	52                   	push   %edx
    537a:	56                   	push   %esi
    537b:	50                   	push   %eax
    537c:	e8 ef ee ff ff       	call   4270 <regerror@plt>
    5381:	83 c4 10             	add    $0x10,%esp
    5384:	81 c4 84 00 00 00    	add    $0x84,%esp
    538a:	5b                   	pop    %ebx
    538b:	5e                   	pop    %esi
    538c:	c3                   	ret    
    538d:	8d 76 00             	lea    0x0(%esi),%esi

00005390 <expr>:
    5390:	55                   	push   %ebp
    5391:	57                   	push   %edi
    5392:	56                   	push   %esi
    5393:	53                   	push   %ebx
    5394:	e8 e7 f0 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5399:	81 c3 67 9c 04 00    	add    $0x49c67,%ebx
    539f:	83 ec 3c             	sub    $0x3c,%esp
    53a2:	8b 44 24 50          	mov    0x50(%esp),%eax
    53a6:	8d ab e0 29 05 00    	lea    0x529e0(%ebx),%ebp
    53ac:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%ebp)
    53b3:	80 38 00             	cmpb   $0x0,(%eax)
    53b6:	0f 84 07 01 00 00    	je     54c3 <expr+0x133>
    53bc:	8d 44 24 28          	lea    0x28(%esp),%eax
    53c0:	8b 54 24 50          	mov    0x50(%esp),%edx
    53c4:	31 f6                	xor    %esi,%esi
    53c6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    53ca:	8d 83 a0 23 00 00    	lea    0x23a0(%ebx),%eax
    53d0:	89 44 24 14          	mov    %eax,0x14(%esp)
    53d4:	8d 83 c0 23 00 00    	lea    0x23c0(%ebx),%eax
    53da:	89 44 24 18          	mov    %eax,0x18(%esp)
    53de:	8d 83 60 25 05 00    	lea    0x52560(%ebx),%eax
    53e4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    53e8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    53ef:	90                   	nop
    53f0:	83 ec 0c             	sub    $0xc,%esp
    53f3:	6a 00                	push   $0x0
    53f5:	ff 74 24 1c          	pushl  0x1c(%esp)
    53f9:	6a 01                	push   $0x1
    53fb:	52                   	push   %edx
    53fc:	89 54 24 2c          	mov    %edx,0x2c(%esp)
    5400:	ff 74 24 30          	pushl  0x30(%esp)
    5404:	e8 07 ee ff ff       	call   4210 <regexec@plt>
    5409:	83 c4 20             	add    $0x20,%esp
    540c:	8b 54 24 10          	mov    0x10(%esp),%edx
    5410:	0b 44 24 28          	or     0x28(%esp),%eax
    5414:	89 c7                	mov    %eax,%edi
    5416:	74 5d                	je     5475 <expr+0xe5>
    5418:	83 ec 0c             	sub    $0xc,%esp
    541b:	6a 00                	push   $0x0
    541d:	ff 74 24 1c          	pushl  0x1c(%esp)
    5421:	6a 01                	push   $0x1
    5423:	52                   	push   %edx
    5424:	89 54 24 2c          	mov    %edx,0x2c(%esp)
    5428:	ff 74 24 34          	pushl  0x34(%esp)
    542c:	e8 df ed ff ff       	call   4210 <regexec@plt>
    5431:	83 c4 20             	add    $0x20,%esp
    5434:	8b 54 24 10          	mov    0x10(%esp),%edx
    5438:	0b 44 24 28          	or     0x28(%esp),%eax
    543c:	74 32                	je     5470 <expr+0xe0>
    543e:	83 ec 0c             	sub    $0xc,%esp
    5441:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
    5447:	50                   	push   %eax
    5448:	8d 83 ec 53 fe ff    	lea    -0x1ac14(%ebx),%eax
    544e:	56                   	push   %esi
    544f:	ff 74 24 64          	pushl  0x64(%esp)
    5453:	56                   	push   %esi
    5454:	50                   	push   %eax
    5455:	e8 06 ee ff ff       	call   4260 <printf@plt>
    545a:	8b 44 24 74          	mov    0x74(%esp),%eax
    545e:	c6 00 00             	movb   $0x0,(%eax)
    5461:	83 c4 5c             	add    $0x5c,%esp
    5464:	31 c0                	xor    %eax,%eax
    5466:	5b                   	pop    %ebx
    5467:	5e                   	pop    %esi
    5468:	5f                   	pop    %edi
    5469:	5d                   	pop    %ebp
    546a:	c3                   	ret    
    546b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    546f:	90                   	nop
    5470:	bf 01 00 00 00       	mov    $0x1,%edi
    5475:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
    5479:	83 ec 08             	sub    $0x8,%esp
    547c:	8d 83 b8 53 fe ff    	lea    -0x1ac48(%ebx),%eax
    5482:	52                   	push   %edx
    5483:	51                   	push   %ecx
    5484:	51                   	push   %ecx
    5485:	89 4c 24 24          	mov    %ecx,0x24(%esp)
    5489:	56                   	push   %esi
    548a:	57                   	push   %edi
    548b:	50                   	push   %eax
    548c:	e8 cf ed ff ff       	call   4260 <printf@plt>
    5491:	8b 4c 24 30          	mov    0x30(%esp),%ecx
    5495:	8b 45 00             	mov    0x0(%ebp),%eax
    5498:	01 ce                	add    %ecx,%esi
    549a:	8b 8c fb 04 fc ff ff 	mov    -0x3fc(%ebx,%edi,8),%ecx
    54a1:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
    54a5:	8d 14 c0             	lea    (%eax,%eax,8),%edx
    54a8:	83 c0 01             	add    $0x1,%eax
    54ab:	89 0c 97             	mov    %ecx,(%edi,%edx,4)
    54ae:	8b 54 24 70          	mov    0x70(%esp),%edx
    54b2:	83 c4 20             	add    $0x20,%esp
    54b5:	89 45 00             	mov    %eax,0x0(%ebp)
    54b8:	01 f2                	add    %esi,%edx
    54ba:	80 3a 00             	cmpb   $0x0,(%edx)
    54bd:	0f 85 2d ff ff ff    	jne    53f0 <expr+0x60>
    54c3:	83 ec 0c             	sub    $0xc,%esp
    54c6:	8d 83 10 54 fe ff    	lea    -0x1abf0(%ebx),%eax
    54cc:	50                   	push   %eax
    54cd:	e8 de ed ff ff       	call   42b0 <puts@plt>
    54d2:	8d 83 34 54 fe ff    	lea    -0x1abcc(%ebx),%eax
    54d8:	50                   	push   %eax
    54d9:	8d 83 a2 53 fe ff    	lea    -0x1ac5e(%ebx),%eax
    54df:	6a 7f                	push   $0x7f
    54e1:	50                   	push   %eax
    54e2:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
    54e8:	50                   	push   %eax
    54e9:	e8 22 ee ff ff       	call   4310 <__assert_fail@plt>
    54ee:	66 90                	xchg   %ax,%ax

000054f0 <cmd_q>:
    54f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    54f5:	c3                   	ret    
    54f6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    54fd:	8d 76 00             	lea    0x0(%esi),%esi

00005500 <cmd_info>:
    5500:	57                   	push   %edi
    5501:	56                   	push   %esi
    5502:	53                   	push   %ebx
    5503:	e8 78 ef ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5508:	81 c3 f8 9a 04 00    	add    $0x49af8,%ebx
    550e:	83 ec 08             	sub    $0x8,%esp
    5511:	8d 83 e5 64 fe ff    	lea    -0x19b1b(%ebx),%eax
    5517:	8d bb 79 70 fe ff    	lea    -0x18f87(%ebx),%edi
    551d:	50                   	push   %eax
    551e:	6a 00                	push   $0x0
    5520:	e8 7b ed ff ff       	call   42a0 <strtok@plt>
    5525:	b9 02 00 00 00       	mov    $0x2,%ecx
    552a:	89 c6                	mov    %eax,%esi
    552c:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
    552e:	0f 97 c2             	seta   %dl
    5531:	80 da 00             	sbb    $0x0,%dl
    5534:	83 c4 10             	add    $0x10,%esp
    5537:	84 d2                	test   %dl,%dl
    5539:	74 45                	je     5580 <cmd_info+0x80>
    553b:	89 c6                	mov    %eax,%esi
    553d:	b9 02 00 00 00       	mov    $0x2,%ecx
    5542:	8d bb bb 6a fe ff    	lea    -0x19545(%ebx),%edi
    5548:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
    554a:	0f 97 c0             	seta   %al
    554d:	1c 00                	sbb    $0x0,%al
    554f:	84 c0                	test   %al,%al
    5551:	74 1d                	je     5570 <cmd_info+0x70>
    5553:	83 ec 0c             	sub    $0xc,%esp
    5556:	8d 83 39 54 fe ff    	lea    -0x1abc7(%ebx),%eax
    555c:	50                   	push   %eax
    555d:	e8 4e ed ff ff       	call   42b0 <puts@plt>
    5562:	83 c4 10             	add    $0x10,%esp
    5565:	31 c0                	xor    %eax,%eax
    5567:	5b                   	pop    %ebx
    5568:	5e                   	pop    %esi
    5569:	5f                   	pop    %edi
    556a:	c3                   	ret    
    556b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    556f:	90                   	nop
    5570:	e8 db f4 ff ff       	call   4a50 <list_breakpoint>
    5575:	5b                   	pop    %ebx
    5576:	31 c0                	xor    %eax,%eax
    5578:	5e                   	pop    %esi
    5579:	5f                   	pop    %edi
    557a:	c3                   	ret    
    557b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    557f:	90                   	nop
    5580:	e8 7b aa 00 00       	call   10000 <print_reg>
    5585:	5b                   	pop    %ebx
    5586:	31 c0                	xor    %eax,%eax
    5588:	5e                   	pop    %esi
    5589:	5f                   	pop    %edi
    558a:	c3                   	ret    
    558b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    558f:	90                   	nop

00005590 <cmd_c>:
    5590:	53                   	push   %ebx
    5591:	e8 ea ee ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5596:	81 c3 6a 9a 04 00    	add    $0x49a6a,%ebx
    559c:	83 ec 14             	sub    $0x14,%esp
    559f:	6a ff                	push   $0xffffffff
    55a1:	e8 0a c3 00 00       	call   118b0 <exec>
    55a6:	83 c4 18             	add    $0x18,%esp
    55a9:	31 c0                	xor    %eax,%eax
    55ab:	5b                   	pop    %ebx
    55ac:	c3                   	ret    
    55ad:	8d 76 00             	lea    0x0(%esi),%esi

000055b0 <cmd_si>:
    55b0:	56                   	push   %esi
    55b1:	53                   	push   %ebx
    55b2:	e8 c9 ee ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    55b7:	81 c3 49 9a 04 00    	add    $0x49a49,%ebx
    55bd:	83 ec 14             	sub    $0x14,%esp
    55c0:	8b 44 24 20          	mov    0x20(%esp),%eax
    55c4:	85 c0                	test   %eax,%eax
    55c6:	74 68                	je     5630 <cmd_si+0x80>
    55c8:	83 ec 08             	sub    $0x8,%esp
    55cb:	8d 83 e5 64 fe ff    	lea    -0x19b1b(%ebx),%eax
    55d1:	50                   	push   %eax
    55d2:	6a 00                	push   $0x0
    55d4:	e8 c7 ec ff ff       	call   42a0 <strtok@plt>
    55d9:	83 c4 10             	add    $0x10,%esp
    55dc:	89 c6                	mov    %eax,%esi
    55de:	85 c0                	test   %eax,%eax
    55e0:	74 4e                	je     5630 <cmd_si+0x80>
    55e2:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    55e9:	00 
    55ea:	83 ec 04             	sub    $0x4,%esp
    55ed:	8d 44 24 10          	lea    0x10(%esp),%eax
    55f1:	50                   	push   %eax
    55f2:	8d 83 f5 6e fe ff    	lea    -0x1910b(%ebx),%eax
    55f8:	50                   	push   %eax
    55f9:	56                   	push   %esi
    55fa:	e8 d1 eb ff ff       	call   41d0 <__isoc99_sscanf@plt>
    55ff:	83 c4 10             	add    $0x10,%esp
    5602:	83 f8 01             	cmp    $0x1,%eax
    5605:	75 08                	jne    560f <cmd_si+0x5f>
    5607:	8b 44 24 0c          	mov    0xc(%esp),%eax
    560b:	85 c0                	test   %eax,%eax
    560d:	7f 39                	jg     5648 <cmd_si+0x98>
    560f:	83 ec 08             	sub    $0x8,%esp
    5612:	8d 83 4d 54 fe ff    	lea    -0x1abb3(%ebx),%eax
    5618:	56                   	push   %esi
    5619:	50                   	push   %eax
    561a:	e8 41 ec ff ff       	call   4260 <printf@plt>
    561f:	83 c4 10             	add    $0x10,%esp
    5622:	31 c0                	xor    %eax,%eax
    5624:	83 c4 14             	add    $0x14,%esp
    5627:	5b                   	pop    %ebx
    5628:	5e                   	pop    %esi
    5629:	c3                   	ret    
    562a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5630:	83 ec 0c             	sub    $0xc,%esp
    5633:	6a 01                	push   $0x1
    5635:	e8 76 c2 00 00       	call   118b0 <exec>
    563a:	83 c4 10             	add    $0x10,%esp
    563d:	31 c0                	xor    %eax,%eax
    563f:	83 c4 14             	add    $0x14,%esp
    5642:	5b                   	pop    %ebx
    5643:	5e                   	pop    %esi
    5644:	c3                   	ret    
    5645:	8d 76 00             	lea    0x0(%esi),%esi
    5648:	83 ec 0c             	sub    $0xc,%esp
    564b:	50                   	push   %eax
    564c:	e8 5f c2 00 00       	call   118b0 <exec>
    5651:	83 c4 10             	add    $0x10,%esp
    5654:	31 c0                	xor    %eax,%eax
    5656:	83 c4 14             	add    $0x14,%esp
    5659:	5b                   	pop    %ebx
    565a:	5e                   	pop    %esi
    565b:	c3                   	ret    
    565c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005660 <cmd_w>:
    5660:	56                   	push   %esi
    5661:	53                   	push   %ebx
    5662:	e8 19 ee ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5667:	81 c3 99 99 04 00    	add    $0x49999,%ebx
    566d:	83 ec 04             	sub    $0x4,%esp
    5670:	8b 74 24 10          	mov    0x10(%esp),%esi
    5674:	85 f6                	test   %esi,%esi
    5676:	74 40                	je     56b8 <cmd_w+0x58>
    5678:	83 ec 08             	sub    $0x8,%esp
    567b:	8d 83 e5 64 fe ff    	lea    -0x19b1b(%ebx),%eax
    5681:	50                   	push   %eax
    5682:	56                   	push   %esi
    5683:	e8 48 ec ff ff       	call   42d0 <strspn@plt>
    5688:	01 c6                	add    %eax,%esi
    568a:	89 34 24             	mov    %esi,(%esp)
    568d:	e8 4e f2 ff ff       	call   48e0 <set_watchpoint>
    5692:	83 c4 10             	add    $0x10,%esp
    5695:	83 f8 ff             	cmp    $0xffffffff,%eax
    5698:	74 3e                	je     56d8 <cmd_w+0x78>
    569a:	83 ec 08             	sub    $0x8,%esp
    569d:	50                   	push   %eax
    569e:	8d 83 9b 54 fe ff    	lea    -0x1ab65(%ebx),%eax
    56a4:	50                   	push   %eax
    56a5:	e8 b6 eb ff ff       	call   4260 <printf@plt>
    56aa:	83 c4 10             	add    $0x10,%esp
    56ad:	31 c0                	xor    %eax,%eax
    56af:	83 c4 04             	add    $0x4,%esp
    56b2:	5b                   	pop    %ebx
    56b3:	5e                   	pop    %esi
    56b4:	c3                   	ret    
    56b5:	8d 76 00             	lea    0x0(%esi),%esi
    56b8:	83 ec 0c             	sub    $0xc,%esp
    56bb:	8d 83 68 54 fe ff    	lea    -0x1ab98(%ebx),%eax
    56c1:	50                   	push   %eax
    56c2:	e8 e9 eb ff ff       	call   42b0 <puts@plt>
    56c7:	83 c4 10             	add    $0x10,%esp
    56ca:	31 c0                	xor    %eax,%eax
    56cc:	83 c4 04             	add    $0x4,%esp
    56cf:	5b                   	pop    %ebx
    56d0:	5e                   	pop    %esi
    56d1:	c3                   	ret    
    56d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    56d8:	83 ec 08             	sub    $0x8,%esp
    56db:	8d 83 81 54 fe ff    	lea    -0x1ab7f(%ebx),%eax
    56e1:	56                   	push   %esi
    56e2:	50                   	push   %eax
    56e3:	e8 78 eb ff ff       	call   4260 <printf@plt>
    56e8:	83 c4 10             	add    $0x10,%esp
    56eb:	31 c0                	xor    %eax,%eax
    56ed:	83 c4 04             	add    $0x4,%esp
    56f0:	5b                   	pop    %ebx
    56f1:	5e                   	pop    %esi
    56f2:	c3                   	ret    
    56f3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    56fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005700 <cmd_p>:
    5700:	56                   	push   %esi
    5701:	53                   	push   %ebx
    5702:	e8 79 ed ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5707:	81 c3 f9 98 04 00    	add    $0x498f9,%ebx
    570d:	83 ec 14             	sub    $0x14,%esp
    5710:	8b 74 24 20          	mov    0x20(%esp),%esi
    5714:	85 f6                	test   %esi,%esi
    5716:	74 58                	je     5770 <cmd_p+0x70>
    5718:	83 ec 08             	sub    $0x8,%esp
    571b:	8d 44 24 17          	lea    0x17(%esp),%eax
    571f:	50                   	push   %eax
    5720:	56                   	push   %esi
    5721:	e8 6a fc ff ff       	call   5390 <expr>
    5726:	83 c4 10             	add    $0x10,%esp
    5729:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    572e:	74 20                	je     5750 <cmd_p+0x50>
    5730:	83 ec 08             	sub    $0x8,%esp
    5733:	50                   	push   %eax
    5734:	8d 83 eb 65 fe ff    	lea    -0x19a15(%ebx),%eax
    573a:	50                   	push   %eax
    573b:	e8 20 eb ff ff       	call   4260 <printf@plt>
    5740:	83 c4 10             	add    $0x10,%esp
    5743:	31 c0                	xor    %eax,%eax
    5745:	83 c4 14             	add    $0x14,%esp
    5748:	5b                   	pop    %ebx
    5749:	5e                   	pop    %esi
    574a:	c3                   	ret    
    574b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    574f:	90                   	nop
    5750:	83 ec 08             	sub    $0x8,%esp
    5753:	8d 83 81 54 fe ff    	lea    -0x1ab7f(%ebx),%eax
    5759:	56                   	push   %esi
    575a:	50                   	push   %eax
    575b:	e8 00 eb ff ff       	call   4260 <printf@plt>
    5760:	83 c4 10             	add    $0x10,%esp
    5763:	31 c0                	xor    %eax,%eax
    5765:	83 c4 14             	add    $0x14,%esp
    5768:	5b                   	pop    %ebx
    5769:	5e                   	pop    %esi
    576a:	c3                   	ret    
    576b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    576f:	90                   	nop
    5770:	83 ec 0c             	sub    $0xc,%esp
    5773:	8d 83 ae 54 fe ff    	lea    -0x1ab52(%ebx),%eax
    5779:	50                   	push   %eax
    577a:	e8 31 eb ff ff       	call   42b0 <puts@plt>
    577f:	83 c4 10             	add    $0x10,%esp
    5782:	31 c0                	xor    %eax,%eax
    5784:	83 c4 14             	add    $0x14,%esp
    5787:	5b                   	pop    %ebx
    5788:	5e                   	pop    %esi
    5789:	c3                   	ret    
    578a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005790 <cmd_b>:
    5790:	55                   	push   %ebp
    5791:	57                   	push   %edi
    5792:	56                   	push   %esi
    5793:	53                   	push   %ebx
    5794:	e8 e7 ec ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5799:	81 c3 67 98 04 00    	add    $0x49867,%ebx
    579f:	83 ec 6c             	sub    $0x6c,%esp
    57a2:	8b b4 24 80 00 00 00 	mov    0x80(%esp),%esi
    57a9:	85 f6                	test   %esi,%esi
    57ab:	74 37                	je     57e4 <cmd_b+0x54>
    57ad:	83 ec 08             	sub    $0x8,%esp
    57b0:	8d 83 e5 64 fe ff    	lea    -0x19b1b(%ebx),%eax
    57b6:	50                   	push   %eax
    57b7:	56                   	push   %esi
    57b8:	e8 13 eb ff ff       	call   42d0 <strspn@plt>
    57bd:	83 c4 10             	add    $0x10,%esp
    57c0:	01 c6                	add    %eax,%esi
    57c2:	80 3e 2a             	cmpb   $0x2a,(%esi)
    57c5:	74 39                	je     5800 <cmd_b+0x70>
    57c7:	83 ec 04             	sub    $0x4,%esp
    57ca:	8d 83 c7 54 fe ff    	lea    -0x1ab39(%ebx),%eax
    57d0:	8d 7c 24 13          	lea    0x13(%esp),%edi
    57d4:	57                   	push   %edi
    57d5:	50                   	push   %eax
    57d6:	56                   	push   %esi
    57d7:	e8 f4 e9 ff ff       	call   41d0 <__isoc99_sscanf@plt>
    57dc:	83 c4 10             	add    $0x10,%esp
    57df:	83 f8 01             	cmp    $0x1,%eax
    57e2:	74 64                	je     5848 <cmd_b+0xb8>
    57e4:	83 ec 0c             	sub    $0xc,%esp
    57e7:	8d 83 b4 55 fe ff    	lea    -0x1aa4c(%ebx),%eax
    57ed:	50                   	push   %eax
    57ee:	e8 bd ea ff ff       	call   42b0 <puts@plt>
    57f3:	83 c4 10             	add    $0x10,%esp
    57f6:	83 c4 6c             	add    $0x6c,%esp
    57f9:	31 c0                	xor    %eax,%eax
    57fb:	5b                   	pop    %ebx
    57fc:	5e                   	pop    %esi
    57fd:	5f                   	pop    %edi
    57fe:	5d                   	pop    %ebp
    57ff:	c3                   	ret    
    5800:	83 ec 08             	sub    $0x8,%esp
    5803:	83 c6 01             	add    $0x1,%esi
    5806:	8d 44 24 16          	lea    0x16(%esp),%eax
    580a:	50                   	push   %eax
    580b:	56                   	push   %esi
    580c:	e8 7f fb ff ff       	call   5390 <expr>
    5811:	83 c4 10             	add    $0x10,%esp
    5814:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
    5819:	89 c5                	mov    %eax,%ebp
    581b:	74 63                	je     5880 <cmd_b+0xf0>
    581d:	83 ec 0c             	sub    $0xc,%esp
    5820:	55                   	push   %ebp
    5821:	e8 5a f0 ff ff       	call   4880 <set_breakpoint>
    5826:	83 c4 0c             	add    $0xc,%esp
    5829:	55                   	push   %ebp
    582a:	50                   	push   %eax
    582b:	8d 83 dc 55 fe ff    	lea    -0x1aa24(%ebx),%eax
    5831:	50                   	push   %eax
    5832:	e8 29 ea ff ff       	call   4260 <printf@plt>
    5837:	83 c4 10             	add    $0x10,%esp
    583a:	31 c0                	xor    %eax,%eax
    583c:	83 c4 6c             	add    $0x6c,%esp
    583f:	5b                   	pop    %ebx
    5840:	5e                   	pop    %esi
    5841:	5f                   	pop    %edi
    5842:	5d                   	pop    %ebp
    5843:	c3                   	ret    
    5844:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5848:	83 ec 08             	sub    $0x8,%esp
    584b:	8d 44 24 16          	lea    0x16(%esp),%eax
    584f:	50                   	push   %eax
    5850:	57                   	push   %edi
    5851:	e8 0a f9 ff ff       	call   5160 <look_up_fun_symtab>
    5856:	83 c4 10             	add    $0x10,%esp
    5859:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
    585e:	89 c5                	mov    %eax,%ebp
    5860:	75 bb                	jne    581d <cmd_b+0x8d>
    5862:	83 ec 08             	sub    $0x8,%esp
    5865:	8d 83 d7 54 fe ff    	lea    -0x1ab29(%ebx),%eax
    586b:	57                   	push   %edi
    586c:	50                   	push   %eax
    586d:	e8 ee e9 ff ff       	call   4260 <printf@plt>
    5872:	83 c4 10             	add    $0x10,%esp
    5875:	e9 7c ff ff ff       	jmp    57f6 <cmd_b+0x66>
    587a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5880:	83 ec 08             	sub    $0x8,%esp
    5883:	8d 83 81 54 fe ff    	lea    -0x1ab7f(%ebx),%eax
    5889:	56                   	push   %esi
    588a:	50                   	push   %eax
    588b:	e8 d0 e9 ff ff       	call   4260 <printf@plt>
    5890:	83 c4 10             	add    $0x10,%esp
    5893:	e9 5e ff ff ff       	jmp    57f6 <cmd_b+0x66>
    5898:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    589f:	90                   	nop

000058a0 <cmd_help>:
    58a0:	55                   	push   %ebp
    58a1:	57                   	push   %edi
    58a2:	56                   	push   %esi
    58a3:	53                   	push   %ebx
    58a4:	e8 d7 eb ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    58a9:	81 c3 57 97 04 00    	add    $0x49757,%ebx
    58af:	83 ec 24             	sub    $0x24,%esp
    58b2:	8d 83 e5 64 fe ff    	lea    -0x19b1b(%ebx),%eax
    58b8:	8d ab 2c fc ff ff    	lea    -0x3d4(%ebx),%ebp
    58be:	50                   	push   %eax
    58bf:	6a 00                	push   $0x0
    58c1:	e8 da e9 ff ff       	call   42a0 <strtok@plt>
    58c6:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    58ca:	83 c4 10             	add    $0x10,%esp
    58cd:	85 c0                	test   %eax,%eax
    58cf:	74 57                	je     5928 <cmd_help+0x88>
    58d1:	8d bb f0 54 fe ff    	lea    -0x1ab10(%ebx),%edi
    58d7:	31 f6                	xor    %esi,%esi
    58d9:	eb 0b                	jmp    58e6 <cmd_help+0x46>
    58db:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    58df:	90                   	nop
    58e0:	8b 7d 00             	mov    0x0(%ebp),%edi
    58e3:	83 c5 0c             	add    $0xc,%ebp
    58e6:	83 ec 08             	sub    $0x8,%esp
    58e9:	57                   	push   %edi
    58ea:	ff 74 24 18          	pushl  0x18(%esp)
    58ee:	e8 1d e8 ff ff       	call   4110 <strcmp@plt>
    58f3:	83 c4 10             	add    $0x10,%esp
    58f6:	85 c0                	test   %eax,%eax
    58f8:	74 76                	je     5970 <cmd_help+0xd0>
    58fa:	83 c6 01             	add    $0x1,%esi
    58fd:	83 fe 0a             	cmp    $0xa,%esi
    5900:	75 de                	jne    58e0 <cmd_help+0x40>
    5902:	83 ec 08             	sub    $0x8,%esp
    5905:	8d 83 38 56 fe ff    	lea    -0x1a9c8(%ebx),%eax
    590b:	ff 74 24 14          	pushl  0x14(%esp)
    590f:	50                   	push   %eax
    5910:	e8 4b e9 ff ff       	call   4260 <printf@plt>
    5915:	83 c4 10             	add    $0x10,%esp
    5918:	31 c0                	xor    %eax,%eax
    591a:	83 c4 1c             	add    $0x1c,%esp
    591d:	5b                   	pop    %ebx
    591e:	5e                   	pop    %esi
    591f:	5f                   	pop    %edi
    5920:	5d                   	pop    %ebp
    5921:	c3                   	ret    
    5922:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5928:	8d bb 98 fc ff ff    	lea    -0x368(%ebx),%edi
    592e:	8d 93 f0 54 fe ff    	lea    -0x1ab10(%ebx),%edx
    5934:	8d 83 04 56 fe ff    	lea    -0x1a9fc(%ebx),%eax
    593a:	8d b3 f5 54 fe ff    	lea    -0x1ab0b(%ebx),%esi
    5940:	eb 0f                	jmp    5951 <cmd_help+0xb1>
    5942:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5948:	8b 45 04             	mov    0x4(%ebp),%eax
    594b:	8b 55 00             	mov    0x0(%ebp),%edx
    594e:	83 c5 0c             	add    $0xc,%ebp
    5951:	83 ec 04             	sub    $0x4,%esp
    5954:	50                   	push   %eax
    5955:	52                   	push   %edx
    5956:	56                   	push   %esi
    5957:	e8 04 e9 ff ff       	call   4260 <printf@plt>
    595c:	83 c4 10             	add    $0x10,%esp
    595f:	39 fd                	cmp    %edi,%ebp
    5961:	75 e5                	jne    5948 <cmd_help+0xa8>
    5963:	83 c4 1c             	add    $0x1c,%esp
    5966:	31 c0                	xor    %eax,%eax
    5968:	5b                   	pop    %ebx
    5969:	5e                   	pop    %esi
    596a:	5f                   	pop    %edi
    596b:	5d                   	pop    %ebp
    596c:	c3                   	ret    
    596d:	8d 76 00             	lea    0x0(%esi),%esi
    5970:	8d 04 76             	lea    (%esi,%esi,2),%eax
    5973:	83 ec 04             	sub    $0x4,%esp
    5976:	ff b4 83 24 fc ff ff 	pushl  -0x3dc(%ebx,%eax,4)
    597d:	8d 83 f5 54 fe ff    	lea    -0x1ab0b(%ebx),%eax
    5983:	57                   	push   %edi
    5984:	50                   	push   %eax
    5985:	e8 d6 e8 ff ff       	call   4260 <printf@plt>
    598a:	83 c4 10             	add    $0x10,%esp
    598d:	31 c0                	xor    %eax,%eax
    598f:	83 c4 1c             	add    $0x1c,%esp
    5992:	5b                   	pop    %ebx
    5993:	5e                   	pop    %esi
    5994:	5f                   	pop    %edi
    5995:	5d                   	pop    %ebp
    5996:	c3                   	ret    
    5997:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    599e:	66 90                	xchg   %ax,%ax

000059a0 <cmd_d>:
    59a0:	55                   	push   %ebp
    59a1:	57                   	push   %edi
    59a2:	56                   	push   %esi
    59a3:	53                   	push   %ebx
    59a4:	e8 d7 ea ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    59a9:	81 c3 57 96 04 00    	add    $0x49657,%ebx
    59af:	83 ec 34             	sub    $0x34,%esp
    59b2:	8d b3 e5 64 fe ff    	lea    -0x19b1b(%ebx),%esi
    59b8:	8d bb f5 6e fe ff    	lea    -0x1910b(%ebx),%edi
    59be:	56                   	push   %esi
    59bf:	6a 00                	push   $0x0
    59c1:	e8 da e8 ff ff       	call   42a0 <strtok@plt>
    59c6:	83 c4 10             	add    $0x10,%esp
    59c9:	89 c5                	mov    %eax,%ebp
    59cb:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    59cf:	89 44 24 0c          	mov    %eax,0xc(%esp)
    59d3:	85 ed                	test   %ebp,%ebp
    59d5:	74 69                	je     5a40 <cmd_d+0xa0>
    59d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    59de:	66 90                	xchg   %ax,%ax
    59e0:	83 ec 04             	sub    $0x4,%esp
    59e3:	ff 74 24 10          	pushl  0x10(%esp)
    59e7:	57                   	push   %edi
    59e8:	55                   	push   %ebp
    59e9:	e8 e2 e7 ff ff       	call   41d0 <__isoc99_sscanf@plt>
    59ee:	83 c4 10             	add    $0x10,%esp
    59f1:	83 f8 01             	cmp    $0x1,%eax
    59f4:	75 2a                	jne    5a20 <cmd_d+0x80>
    59f6:	83 ec 0c             	sub    $0xc,%esp
    59f9:	ff 74 24 28          	pushl  0x28(%esp)
    59fd:	e8 5e ef ff ff       	call   4960 <delete_breakpoint>
    5a02:	58                   	pop    %eax
    5a03:	5a                   	pop    %edx
    5a04:	56                   	push   %esi
    5a05:	6a 00                	push   $0x0
    5a07:	e8 94 e8 ff ff       	call   42a0 <strtok@plt>
    5a0c:	83 c4 10             	add    $0x10,%esp
    5a0f:	89 c5                	mov    %eax,%ebp
    5a11:	85 c0                	test   %eax,%eax
    5a13:	75 cb                	jne    59e0 <cmd_d+0x40>
    5a15:	83 c4 2c             	add    $0x2c,%esp
    5a18:	31 c0                	xor    %eax,%eax
    5a1a:	5b                   	pop    %ebx
    5a1b:	5e                   	pop    %esi
    5a1c:	5f                   	pop    %edi
    5a1d:	5d                   	pop    %ebp
    5a1e:	c3                   	ret    
    5a1f:	90                   	nop
    5a20:	83 ec 08             	sub    $0x8,%esp
    5a23:	8d 83 17 55 fe ff    	lea    -0x1aae9(%ebx),%eax
    5a29:	55                   	push   %ebp
    5a2a:	50                   	push   %eax
    5a2b:	e8 30 e8 ff ff       	call   4260 <printf@plt>
    5a30:	83 c4 10             	add    $0x10,%esp
    5a33:	31 c0                	xor    %eax,%eax
    5a35:	83 c4 2c             	add    $0x2c,%esp
    5a38:	5b                   	pop    %ebx
    5a39:	5e                   	pop    %esi
    5a3a:	5f                   	pop    %edi
    5a3b:	5d                   	pop    %ebp
    5a3c:	c3                   	ret    
    5a3d:	8d 76 00             	lea    0x0(%esi),%esi
    5a40:	8d bb 58 56 fe ff    	lea    -0x1a9a8(%ebx),%edi
    5a46:	8d b3 fe 54 fe ff    	lea    -0x1ab02(%ebx),%esi
    5a4c:	8d ab 01 55 fe ff    	lea    -0x1aaff(%ebx),%ebp
    5a52:	83 ec 0c             	sub    $0xc,%esp
    5a55:	57                   	push   %edi
    5a56:	e8 05 e8 ff ff       	call   4260 <printf@plt>
    5a5b:	59                   	pop    %ecx
    5a5c:	58                   	pop    %eax
    5a5d:	ff 74 24 14          	pushl  0x14(%esp)
    5a61:	56                   	push   %esi
    5a62:	e8 99 e7 ff ff       	call   4200 <__isoc99_scanf@plt>
    5a67:	0f b6 44 24 2c       	movzbl 0x2c(%esp),%eax
    5a6c:	83 c4 10             	add    $0x10,%esp
    5a6f:	3c 6e                	cmp    $0x6e,%al
    5a71:	74 a2                	je     5a15 <cmd_d+0x75>
    5a73:	3c 79                	cmp    $0x79,%al
    5a75:	75 09                	jne    5a80 <cmd_d+0xe0>
    5a77:	e8 a4 ef ff ff       	call   4a20 <delete_all_breakpoint>
    5a7c:	eb 97                	jmp    5a15 <cmd_d+0x75>
    5a7e:	66 90                	xchg   %ax,%ax
    5a80:	83 ec 0c             	sub    $0xc,%esp
    5a83:	55                   	push   %ebp
    5a84:	e8 27 e8 ff ff       	call   42b0 <puts@plt>
    5a89:	83 c4 10             	add    $0x10,%esp
    5a8c:	eb c4                	jmp    5a52 <cmd_d+0xb2>
    5a8e:	66 90                	xchg   %ax,%ax

00005a90 <rl_gets>:
    5a90:	56                   	push   %esi
    5a91:	53                   	push   %ebx
    5a92:	e8 e9 e9 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5a97:	81 c3 69 95 04 00    	add    $0x49569,%ebx
    5a9d:	83 ec 04             	sub    $0x4,%esp
    5aa0:	8b 83 e0 23 00 00    	mov    0x23e0(%ebx),%eax
    5aa6:	85 c0                	test   %eax,%eax
    5aa8:	74 16                	je     5ac0 <rl_gets+0x30>
    5aaa:	83 ec 0c             	sub    $0xc,%esp
    5aad:	50                   	push   %eax
    5aae:	e8 6d e7 ff ff       	call   4220 <free@plt>
    5ab3:	83 c4 10             	add    $0x10,%esp
    5ab6:	c7 83 e0 23 00 00 00 	movl   $0x0,0x23e0(%ebx)
    5abd:	00 00 00 
    5ac0:	8d b3 34 55 fe ff    	lea    -0x1aacc(%ebx),%esi
    5ac6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5acd:	8d 76 00             	lea    0x0(%esi),%esi
    5ad0:	83 ec 0c             	sub    $0xc,%esp
    5ad3:	56                   	push   %esi
    5ad4:	e8 a7 e6 ff ff       	call   4180 <readline@plt>
    5ad9:	83 c4 10             	add    $0x10,%esp
    5adc:	89 83 e0 23 00 00    	mov    %eax,0x23e0(%ebx)
    5ae2:	85 c0                	test   %eax,%eax
    5ae4:	74 ea                	je     5ad0 <rl_gets+0x40>
    5ae6:	80 38 00             	cmpb   $0x0,(%eax)
    5ae9:	74 e5                	je     5ad0 <rl_gets+0x40>
    5aeb:	83 ec 0c             	sub    $0xc,%esp
    5aee:	50                   	push   %eax
    5aef:	e8 3c e7 ff ff       	call   4230 <add_history@plt>
    5af4:	8b 83 e0 23 00 00    	mov    0x23e0(%ebx),%eax
    5afa:	83 c4 14             	add    $0x14,%esp
    5afd:	5b                   	pop    %ebx
    5afe:	5e                   	pop    %esi
    5aff:	c3                   	ret    

00005b00 <ui_mainloop>:
    5b00:	55                   	push   %ebp
    5b01:	57                   	push   %edi
    5b02:	56                   	push   %esi
    5b03:	53                   	push   %ebx
    5b04:	e8 77 e9 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5b09:	81 c3 f7 94 04 00    	add    $0x494f7,%ebx
    5b0f:	83 ec 2c             	sub    $0x2c,%esp
    5b12:	80 7c 24 40 00       	cmpb   $0x0,0x40(%esp)
    5b17:	0f 85 13 01 00 00    	jne    5c30 <ui_mainloop+0x130>
    5b1d:	8d 83 e5 64 fe ff    	lea    -0x19b1b(%ebx),%eax
    5b23:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5b27:	8d 83 2c fc ff ff    	lea    -0x3d4(%ebx),%eax
    5b2d:	89 44 24 18          	mov    %eax,0x18(%esp)
    5b31:	8d 83 f0 54 fe ff    	lea    -0x1ab10(%ebx),%eax
    5b37:	89 44 24 14          	mov    %eax,0x14(%esp)
    5b3b:	8d 83 04 33 05 00    	lea    0x53304(%ebx),%eax
    5b41:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    5b45:	8d 76 00             	lea    0x0(%esi),%esi
    5b48:	e8 43 ff ff ff       	call   5a90 <rl_gets>
    5b4d:	83 ec 0c             	sub    $0xc,%esp
    5b50:	89 44 24 14          	mov    %eax,0x14(%esp)
    5b54:	89 c7                	mov    %eax,%edi
    5b56:	50                   	push   %eax
    5b57:	e8 64 e5 ff ff       	call   40c0 <strlen@plt>
    5b5c:	5e                   	pop    %esi
    5b5d:	5d                   	pop    %ebp
    5b5e:	ff 74 24 14          	pushl  0x14(%esp)
    5b62:	57                   	push   %edi
    5b63:	89 c5                	mov    %eax,%ebp
    5b65:	e8 36 e7 ff ff       	call   42a0 <strtok@plt>
    5b6a:	83 c4 10             	add    $0x10,%esp
    5b6d:	89 c6                	mov    %eax,%esi
    5b6f:	85 c0                	test   %eax,%eax
    5b71:	74 d5                	je     5b48 <ui_mainloop+0x48>
    5b73:	83 ec 0c             	sub    $0xc,%esp
    5b76:	50                   	push   %eax
    5b77:	e8 44 e5 ff ff       	call   40c0 <strlen@plt>
    5b7c:	5a                   	pop    %edx
    5b7d:	59                   	pop    %ecx
    5b7e:	89 7c 24 10          	mov    %edi,0x10(%esp)
    5b82:	8d 7c 07 01          	lea    0x1(%edi,%eax,1),%edi
    5b86:	ff 74 24 14          	pushl  0x14(%esp)
    5b8a:	57                   	push   %edi
    5b8b:	e8 40 e7 ff ff       	call   42d0 <strspn@plt>
    5b90:	83 c4 10             	add    $0x10,%esp
    5b93:	8b 54 24 08          	mov    0x8(%esp),%edx
    5b97:	8d 0c 07             	lea    (%edi,%eax,1),%ecx
    5b9a:	8d 04 2a             	lea    (%edx,%ebp,1),%eax
    5b9d:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    5ba1:	39 c1                	cmp    %eax,%ecx
    5ba3:	b8 00 00 00 00       	mov    $0x0,%eax
    5ba8:	0f 42 c1             	cmovb  %ecx,%eax
    5bab:	31 ff                	xor    %edi,%edi
    5bad:	89 44 24 10          	mov    %eax,0x10(%esp)
    5bb1:	8b 44 24 14          	mov    0x14(%esp),%eax
    5bb5:	eb 0f                	jmp    5bc6 <ui_mainloop+0xc6>
    5bb7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5bbe:	66 90                	xchg   %ax,%ax
    5bc0:	8b 45 00             	mov    0x0(%ebp),%eax
    5bc3:	83 c5 0c             	add    $0xc,%ebp
    5bc6:	83 ec 08             	sub    $0x8,%esp
    5bc9:	50                   	push   %eax
    5bca:	56                   	push   %esi
    5bcb:	e8 40 e5 ff ff       	call   4110 <strcmp@plt>
    5bd0:	83 c4 10             	add    $0x10,%esp
    5bd3:	85 c0                	test   %eax,%eax
    5bd5:	74 39                	je     5c10 <ui_mainloop+0x110>
    5bd7:	83 c7 01             	add    $0x1,%edi
    5bda:	83 ff 0a             	cmp    $0xa,%edi
    5bdd:	75 e1                	jne    5bc0 <ui_mainloop+0xc0>
    5bdf:	83 ec 08             	sub    $0x8,%esp
    5be2:	8d 83 7c 56 fe ff    	lea    -0x1a984(%ebx),%eax
    5be8:	ff 74 24 10          	pushl  0x10(%esp)
    5bec:	50                   	push   %eax
    5bed:	e8 6e e6 ff ff       	call   4260 <printf@plt>
    5bf2:	83 c4 10             	add    $0x10,%esp
    5bf5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    5bf9:	8b 00                	mov    (%eax),%eax
    5bfb:	85 c0                	test   %eax,%eax
    5bfd:	0f 85 45 ff ff ff    	jne    5b48 <ui_mainloop+0x48>
    5c03:	83 c4 2c             	add    $0x2c,%esp
    5c06:	5b                   	pop    %ebx
    5c07:	5e                   	pop    %esi
    5c08:	5f                   	pop    %edi
    5c09:	5d                   	pop    %ebp
    5c0a:	c3                   	ret    
    5c0b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5c0f:	90                   	nop
    5c10:	83 ec 0c             	sub    $0xc,%esp
    5c13:	8d 04 7f             	lea    (%edi,%edi,2),%eax
    5c16:	ff 74 24 1c          	pushl  0x1c(%esp)
    5c1a:	ff 94 83 28 fc ff ff 	call   *-0x3d8(%ebx,%eax,4)
    5c21:	83 c4 10             	add    $0x10,%esp
    5c24:	85 c0                	test   %eax,%eax
    5c26:	79 cd                	jns    5bf5 <ui_mainloop+0xf5>
    5c28:	83 c4 2c             	add    $0x2c,%esp
    5c2b:	5b                   	pop    %ebx
    5c2c:	5e                   	pop    %esi
    5c2d:	5f                   	pop    %edi
    5c2e:	5d                   	pop    %ebp
    5c2f:	c3                   	ret    
    5c30:	83 ec 0c             	sub    $0xc,%esp
    5c33:	6a ff                	push   $0xffffffff
    5c35:	e8 76 bc 00 00       	call   118b0 <exec>
    5c3a:	8d 83 04 33 05 00    	lea    0x53304(%ebx),%eax
    5c40:	83 c4 10             	add    $0x10,%esp
    5c43:	8b 00                	mov    (%eax),%eax
    5c45:	85 c0                	test   %eax,%eax
    5c47:	0f 85 d0 fe ff ff    	jne    5b1d <ui_mainloop+0x1d>
    5c4d:	83 c4 2c             	add    $0x2c,%esp
    5c50:	5b                   	pop    %ebx
    5c51:	5e                   	pop    %esi
    5c52:	5f                   	pop    %edi
    5c53:	5d                   	pop    %ebp
    5c54:	c3                   	ret    
    5c55:	66 90                	xchg   %ax,%ax
    5c57:	66 90                	xchg   %ax,%ax
    5c59:	66 90                	xchg   %ax,%ax
    5c5b:	66 90                	xchg   %ax,%ax
    5c5d:	66 90                	xchg   %ax,%ax
    5c5f:	90                   	nop

00005c60 <main_arg_expr_score>:
    5c60:	e8 72 06 00 00       	call   62d7 <__x86.get_pc_thunk.ax>
    5c65:	05 9b 93 04 00       	add    $0x4939b,%eax
    5c6a:	c6 80 e4 23 00 00 01 	movb   $0x1,0x23e4(%eax)
    5c71:	b8 01 00 00 00       	mov    $0x1,%eax
    5c76:	c3                   	ret    
    5c77:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5c7e:	66 90                	xchg   %ax,%ax

00005c80 <main_arg_score>:
    5c80:	e8 52 06 00 00       	call   62d7 <__x86.get_pc_thunk.ax>
    5c85:	05 7b 93 04 00       	add    $0x4937b,%eax
    5c8a:	c6 80 e5 23 00 00 01 	movb   $0x1,0x23e5(%eax)
    5c91:	b8 01 00 00 00       	mov    $0x1,%eax
    5c96:	c3                   	ret    
    5c97:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5c9e:	66 90                	xchg   %ax,%ax

00005ca0 <main_arg_reg_test>:
    5ca0:	e8 32 06 00 00       	call   62d7 <__x86.get_pc_thunk.ax>
    5ca5:	05 5b 93 04 00       	add    $0x4935b,%eax
    5caa:	8d 90 f4 31 05 00    	lea    0x531f4(%eax),%edx
    5cb0:	8d 88 30 12 fc ff    	lea    -0x3edd0(%eax),%ecx
    5cb6:	c6 80 e6 23 00 00 01 	movb   $0x1,0x23e6(%eax)
    5cbd:	89 0a                	mov    %ecx,(%edx)
    5cbf:	8d 90 f4 2d 05 00    	lea    0x52df4(%eax),%edx
    5cc5:	8d 88 b0 c0 fd ff    	lea    -0x23f50(%eax),%ecx
    5ccb:	b8 01 00 00 00       	mov    $0x1,%eax
    5cd0:	89 0a                	mov    %ecx,(%edx)
    5cd2:	c3                   	ret    
    5cd3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5cda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005ce0 <main_arg_autorun>:
    5ce0:	e8 f2 05 00 00       	call   62d7 <__x86.get_pc_thunk.ax>
    5ce5:	05 1b 93 04 00       	add    $0x4931b,%eax
    5cea:	c6 80 e7 23 00 00 01 	movb   $0x1,0x23e7(%eax)
    5cf1:	b8 01 00 00 00       	mov    $0x1,%eax
    5cf6:	c3                   	ret    
    5cf7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5cfe:	66 90                	xchg   %ax,%ax

00005d00 <main_arg_alu_test>:
    5d00:	55                   	push   %ebp
    5d01:	57                   	push   %edi
    5d02:	56                   	push   %esi
    5d03:	31 f6                	xor    %esi,%esi
    5d05:	53                   	push   %ebx
    5d06:	e8 75 e7 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5d0b:	81 c3 f5 92 04 00    	add    $0x492f5,%ebx
    5d11:	83 ec 0c             	sub    $0xc,%esp
    5d14:	8b 6c 24 20          	mov    0x20(%esp),%ebp
    5d18:	8d bb 6c fd ff ff    	lea    -0x294(%ebx),%edi
    5d1e:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
    5d24:	eb 0f                	jmp    5d35 <main_arg_alu_test+0x35>
    5d26:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5d2d:	8d 76 00             	lea    0x0(%esi),%esi
    5d30:	8b 07                	mov    (%edi),%eax
    5d32:	83 c7 0c             	add    $0xc,%edi
    5d35:	83 ec 08             	sub    $0x8,%esp
    5d38:	50                   	push   %eax
    5d39:	55                   	push   %ebp
    5d3a:	e8 d1 e3 ff ff       	call   4110 <strcmp@plt>
    5d3f:	83 c4 10             	add    $0x10,%esp
    5d42:	85 c0                	test   %eax,%eax
    5d44:	74 2a                	je     5d70 <main_arg_alu_test+0x70>
    5d46:	83 c6 01             	add    $0x1,%esi
    5d49:	83 fe 0f             	cmp    $0xf,%esi
    5d4c:	75 e2                	jne    5d30 <main_arg_alu_test+0x30>
    5d4e:	83 ec 08             	sub    $0x8,%esp
    5d51:	8d 83 60 57 fe ff    	lea    -0x1a8a0(%ebx),%eax
    5d57:	55                   	push   %ebp
    5d58:	50                   	push   %eax
    5d59:	e8 02 e5 ff ff       	call   4260 <printf@plt>
    5d5e:	83 c4 10             	add    $0x10,%esp
    5d61:	31 c0                	xor    %eax,%eax
    5d63:	83 c4 0c             	add    $0xc,%esp
    5d66:	5b                   	pop    %ebx
    5d67:	5e                   	pop    %esi
    5d68:	5f                   	pop    %edi
    5d69:	5d                   	pop    %ebp
    5d6a:	c3                   	ret    
    5d6b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5d6f:	90                   	nop
    5d70:	8d 04 76             	lea    (%esi,%esi,2),%eax
    5d73:	8d 93 f4 31 05 00    	lea    0x531f4(%ebx),%edx
    5d79:	c6 83 e6 23 00 00 01 	movb   $0x1,0x23e6(%ebx)
    5d80:	8d 84 83 60 fd ff ff 	lea    -0x2a0(%ebx,%eax,4),%eax
    5d87:	8b 48 04             	mov    0x4(%eax),%ecx
    5d8a:	89 0a                	mov    %ecx,(%edx)
    5d8c:	8b 50 08             	mov    0x8(%eax),%edx
    5d8f:	8d 83 f4 2d 05 00    	lea    0x52df4(%ebx),%eax
    5d95:	89 10                	mov    %edx,(%eax)
    5d97:	83 c4 0c             	add    $0xc,%esp
    5d9a:	b8 01 00 00 00       	mov    $0x1,%eax
    5d9f:	5b                   	pop    %ebx
    5da0:	5e                   	pop    %esi
    5da1:	5f                   	pop    %edi
    5da2:	5d                   	pop    %ebp
    5da3:	c3                   	ret    
    5da4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5dab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5daf:	90                   	nop

00005db0 <main_arg_kernel>:
    5db0:	e8 c0 e7 ff ff       	call   4575 <__x86.get_pc_thunk.dx>
    5db5:	81 c2 4b 92 04 00    	add    $0x4924b,%edx
    5dbb:	8d 82 00 30 05 00    	lea    0x53000(%edx),%eax
    5dc1:	c6 82 ea 23 00 00 01 	movb   $0x1,0x23ea(%edx)
    5dc8:	c7 00 2e 2f 6b 65    	movl   $0x656b2f2e,(%eax)
    5dce:	c7 40 04 72 6e 65 6c 	movl   $0x6c656e72,0x4(%eax)
    5dd5:	c7 40 08 2f 6b 65 72 	movl   $0x72656b2f,0x8(%eax)
    5ddc:	c7 40 0c 6e 65 6c 2e 	movl   $0x2e6c656e,0xc(%eax)
    5de3:	c7 40 10 69 6d 67 00 	movl   $0x676d69,0x10(%eax)
    5dea:	8d 82 00 2e 05 00    	lea    0x52e00(%edx),%eax
    5df0:	c7 00 2e 2f 6b 65    	movl   $0x656b2f2e,(%eax)
    5df6:	c7 40 04 72 6e 65 6c 	movl   $0x6c656e72,0x4(%eax)
    5dfd:	c7 40 08 2f 6b 65 72 	movl   $0x72656b2f,0x8(%eax)
    5e04:	c7 40 0c 6e 65 6c 2e 	movl   $0x2e6c656e,0xc(%eax)
    5e0b:	c7 40 10 69 6d 67 00 	movl   $0x676d69,0x10(%eax)
    5e12:	b8 01 00 00 00       	mov    $0x1,%eax
    5e17:	c3                   	ret    
    5e18:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5e1f:	90                   	nop

00005e20 <main_arg_game>:
    5e20:	e8 50 e7 ff ff       	call   4575 <__x86.get_pc_thunk.dx>
    5e25:	81 c2 db 91 04 00    	add    $0x491db,%edx
    5e2b:	b9 6d 65 00 00       	mov    $0x656d,%ecx
    5e30:	8d 82 00 2c 05 00    	lea    0x52c00(%edx),%eax
    5e36:	c6 82 e9 23 00 00 01 	movb   $0x1,0x23e9(%edx)
    5e3d:	c7 00 2e 2f 67 61    	movl   $0x61672f2e,(%eax)
    5e43:	c7 40 04 6d 65 2f 67 	movl   $0x672f656d,0x4(%eax)
    5e4a:	c7 40 08 61 6d 65 00 	movl   $0x656d61,0x8(%eax)
    5e51:	8d 82 00 2a 05 00    	lea    0x52a00(%edx),%eax
    5e57:	c7 00 2e 2f 73 63    	movl   $0x63732f2e,(%eax)
    5e5d:	c7 40 04 72 69 70 74 	movl   $0x74706972,0x4(%eax)
    5e64:	c7 40 08 73 2f 73 63 	movl   $0x63732f73,0x8(%eax)
    5e6b:	c7 40 0c 6f 72 65 5f 	movl   $0x5f65726f,0xc(%eax)
    5e72:	c7 40 10 74 65 73 74 	movl   $0x74736574,0x10(%eax)
    5e79:	c7 40 14 63 61 73 65 	movl   $0x65736163,0x14(%eax)
    5e80:	c7 40 18 73 2f 67 61 	movl   $0x61672f73,0x18(%eax)
    5e87:	66 89 48 1c          	mov    %cx,0x1c(%eax)
    5e8b:	c6 40 1e 00          	movb   $0x0,0x1e(%eax)
    5e8f:	b8 01 00 00 00       	mov    $0x1,%eax
    5e94:	c3                   	ret    
    5e95:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5e9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005ea0 <main_arg_fpu_test>:
    5ea0:	55                   	push   %ebp
    5ea1:	57                   	push   %edi
    5ea2:	56                   	push   %esi
    5ea3:	31 f6                	xor    %esi,%esi
    5ea5:	53                   	push   %ebx
    5ea6:	e8 d5 e5 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5eab:	81 c3 55 91 04 00    	add    $0x49155,%ebx
    5eb1:	83 ec 0c             	sub    $0xc,%esp
    5eb4:	8b 7c 24 20          	mov    0x20(%esp),%edi
    5eb8:	e8 b3 1e 00 00       	call   7d70 <init_fpu_test>
    5ebd:	8d ab 20 fd ff ff    	lea    -0x2e0(%ebx),%ebp
    5ec3:	e8 d8 d1 02 00       	call   330a0 <__score_init_fpu_test>
    5ec8:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
    5ece:	83 ec 08             	sub    $0x8,%esp
    5ed1:	50                   	push   %eax
    5ed2:	57                   	push   %edi
    5ed3:	e8 38 e2 ff ff       	call   4110 <strcmp@plt>
    5ed8:	83 c4 10             	add    $0x10,%esp
    5edb:	85 c0                	test   %eax,%eax
    5edd:	74 11                	je     5ef0 <main_arg_fpu_test+0x50>
    5edf:	83 c6 01             	add    $0x1,%esi
    5ee2:	83 c5 0c             	add    $0xc,%ebp
    5ee5:	83 fe 04             	cmp    $0x4,%esi
    5ee8:	74 3e                	je     5f28 <main_arg_fpu_test+0x88>
    5eea:	8b 45 00             	mov    0x0(%ebp),%eax
    5eed:	eb df                	jmp    5ece <main_arg_fpu_test+0x2e>
    5eef:	90                   	nop
    5ef0:	8d 04 76             	lea    (%esi,%esi,2),%eax
    5ef3:	8d 93 f4 31 05 00    	lea    0x531f4(%ebx),%edx
    5ef9:	c6 83 e6 23 00 00 01 	movb   $0x1,0x23e6(%ebx)
    5f00:	8d 84 83 20 fd ff ff 	lea    -0x2e0(%ebx,%eax,4),%eax
    5f07:	8b 48 04             	mov    0x4(%eax),%ecx
    5f0a:	89 0a                	mov    %ecx,(%edx)
    5f0c:	8b 50 08             	mov    0x8(%eax),%edx
    5f0f:	8d 83 f4 2d 05 00    	lea    0x52df4(%ebx),%eax
    5f15:	89 10                	mov    %edx,(%eax)
    5f17:	83 c4 0c             	add    $0xc,%esp
    5f1a:	b8 01 00 00 00       	mov    $0x1,%eax
    5f1f:	5b                   	pop    %ebx
    5f20:	5e                   	pop    %esi
    5f21:	5f                   	pop    %edi
    5f22:	5d                   	pop    %ebp
    5f23:	c3                   	ret    
    5f24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5f28:	83 ec 08             	sub    $0x8,%esp
    5f2b:	8d 83 8c 57 fe ff    	lea    -0x1a874(%ebx),%eax
    5f31:	57                   	push   %edi
    5f32:	50                   	push   %eax
    5f33:	e8 28 e3 ff ff       	call   4260 <printf@plt>
    5f38:	83 c4 10             	add    $0x10,%esp
    5f3b:	31 c0                	xor    %eax,%eax
    5f3d:	83 c4 0c             	add    $0xc,%esp
    5f40:	5b                   	pop    %ebx
    5f41:	5e                   	pop    %esi
    5f42:	5f                   	pop    %edi
    5f43:	5d                   	pop    %ebp
    5f44:	c3                   	ret    
    5f45:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5f4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005f50 <main_arg_testcase>:
    5f50:	55                   	push   %ebp
    5f51:	b9 0c 00 00 00       	mov    $0xc,%ecx
    5f56:	57                   	push   %edi
    5f57:	56                   	push   %esi
    5f58:	53                   	push   %ebx
    5f59:	e8 22 e5 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    5f5e:	81 c3 a2 90 04 00    	add    $0x490a2,%ebx
    5f64:	83 ec 0c             	sub    $0xc,%esp
    5f67:	8b 6c 24 20          	mov    0x20(%esp),%ebp
    5f6b:	89 ee                	mov    %ebp,%esi
    5f6d:	8d bb ec 56 fe ff    	lea    -0x1a914(%ebx),%edi
    5f73:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
    5f75:	0f 97 c0             	seta   %al
    5f78:	1c 00                	sbb    $0x0,%al
    5f7a:	84 c0                	test   %al,%al
    5f7c:	0f 84 5e 01 00 00    	je     60e0 <main_arg_testcase+0x190>
    5f82:	80 bb ea 23 00 00 00 	cmpb   $0x0,0x23ea(%ebx)
    5f89:	0f 84 91 00 00 00    	je     6020 <main_arg_testcase+0xd0>
    5f8f:	8d 83 00 2c 05 00    	lea    0x52c00(%ebx),%eax
    5f95:	83 ec 08             	sub    $0x8,%esp
    5f98:	c7 00 2e 2f 74 65    	movl   $0x65742f2e,(%eax)
    5f9e:	83 c0 0f             	add    $0xf,%eax
    5fa1:	c7 40 f5 73 74 63 61 	movl   $0x61637473,-0xb(%eax)
    5fa8:	c7 40 f9 73 65 2f 62 	movl   $0x622f6573,-0x7(%eax)
    5faf:	c7 40 fd 69 6e 2f 00 	movl   $0x2f6e69,-0x3(%eax)
    5fb6:	55                   	push   %ebp
    5fb7:	50                   	push   %eax
    5fb8:	e8 43 e3 ff ff       	call   4300 <strcpy@plt>
    5fbd:	83 c4 10             	add    $0x10,%esp
    5fc0:	8d 83 00 2a 05 00    	lea    0x52a00(%ebx),%eax
    5fc6:	ba 73 2f 00 00       	mov    $0x2f73,%edx
    5fcb:	83 ec 08             	sub    $0x8,%esp
    5fce:	c7 00 2e 2f 73 63    	movl   $0x63732f2e,(%eax)
    5fd4:	83 c0 1a             	add    $0x1a,%eax
    5fd7:	c7 40 ea 72 69 70 74 	movl   $0x74706972,-0x16(%eax)
    5fde:	c7 40 ee 73 2f 73 63 	movl   $0x63732f73,-0x12(%eax)
    5fe5:	c7 40 f2 6f 72 65 5f 	movl   $0x5f65726f,-0xe(%eax)
    5fec:	c7 40 f6 74 65 73 74 	movl   $0x74736574,-0xa(%eax)
    5ff3:	c7 40 fa 63 61 73 65 	movl   $0x65736163,-0x6(%eax)
    5ffa:	66 89 50 fe          	mov    %dx,-0x2(%eax)
    5ffe:	55                   	push   %ebp
    5fff:	50                   	push   %eax
    6000:	e8 fb e2 ff ff       	call   4300 <strcpy@plt>
    6005:	83 c4 10             	add    $0x10,%esp
    6008:	b8 01 00 00 00       	mov    $0x1,%eax
    600d:	c6 83 e8 23 00 00 01 	movb   $0x1,0x23e8(%ebx)
    6014:	83 c4 0c             	add    $0xc,%esp
    6017:	5b                   	pop    %ebx
    6018:	5e                   	pop    %esi
    6019:	5f                   	pop    %edi
    601a:	5d                   	pop    %ebp
    601b:	c3                   	ret    
    601c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6020:	8d 83 00 30 05 00    	lea    0x53000(%ebx),%eax
    6026:	83 ec 08             	sub    $0x8,%esp
    6029:	bf 73 2f 00 00       	mov    $0x2f73,%edi
    602e:	c7 00 2e 2f 74 65    	movl   $0x65742f2e,(%eax)
    6034:	83 c0 0f             	add    $0xf,%eax
    6037:	c7 40 f5 73 74 63 61 	movl   $0x61637473,-0xb(%eax)
    603e:	c7 40 f9 73 65 2f 62 	movl   $0x622f6573,-0x7(%eax)
    6045:	c7 40 fd 69 6e 2f 00 	movl   $0x2f6e69,-0x3(%eax)
    604c:	55                   	push   %ebp
    604d:	50                   	push   %eax
    604e:	e8 2d e2 ff ff       	call   4280 <stpcpy@plt>
    6053:	c7 00 2e 69 6d 67    	movl   $0x676d692e,(%eax)
    6059:	c6 40 04 00          	movb   $0x0,0x4(%eax)
    605d:	8d 83 00 2c 05 00    	lea    0x52c00(%ebx),%eax
    6063:	c7 00 2e 2f 74 65    	movl   $0x65742f2e,(%eax)
    6069:	83 c0 0f             	add    $0xf,%eax
    606c:	c7 40 f5 73 74 63 61 	movl   $0x61637473,-0xb(%eax)
    6073:	c7 40 f9 73 65 2f 62 	movl   $0x622f6573,-0x7(%eax)
    607a:	c7 40 fd 69 6e 2f 00 	movl   $0x2f6e69,-0x3(%eax)
    6081:	59                   	pop    %ecx
    6082:	5e                   	pop    %esi
    6083:	55                   	push   %ebp
    6084:	50                   	push   %eax
    6085:	e8 76 e2 ff ff       	call   4300 <strcpy@plt>
    608a:	8d 83 00 2e 05 00    	lea    0x52e00(%ebx),%eax
    6090:	c7 00 2e 2f 73 63    	movl   $0x63732f2e,(%eax)
    6096:	83 c0 1a             	add    $0x1a,%eax
    6099:	c7 40 ea 72 69 70 74 	movl   $0x74706972,-0x16(%eax)
    60a0:	c7 40 ee 73 2f 73 63 	movl   $0x63732f73,-0x12(%eax)
    60a7:	c7 40 f2 6f 72 65 5f 	movl   $0x5f65726f,-0xe(%eax)
    60ae:	c7 40 f6 74 65 73 74 	movl   $0x74736574,-0xa(%eax)
    60b5:	c7 40 fa 63 61 73 65 	movl   $0x65736163,-0x6(%eax)
    60bc:	66 89 78 fe          	mov    %di,-0x2(%eax)
    60c0:	5a                   	pop    %edx
    60c1:	59                   	pop    %ecx
    60c2:	55                   	push   %ebp
    60c3:	50                   	push   %eax
    60c4:	e8 b7 e1 ff ff       	call   4280 <stpcpy@plt>
    60c9:	83 c4 10             	add    $0x10,%esp
    60cc:	c7 00 2e 69 6d 67    	movl   $0x676d692e,(%eax)
    60d2:	c6 40 04 00          	movb   $0x0,0x4(%eax)
    60d6:	e9 e5 fe ff ff       	jmp    5fc0 <main_arg_testcase+0x70>
    60db:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    60df:	90                   	nop
    60e0:	83 ec 0c             	sub    $0xc,%esp
    60e3:	8d 83 b8 57 fe ff    	lea    -0x1a848(%ebx),%eax
    60e9:	50                   	push   %eax
    60ea:	e8 c1 e1 ff ff       	call   42b0 <puts@plt>
    60ef:	83 c4 10             	add    $0x10,%esp
    60f2:	31 c0                	xor    %eax,%eax
    60f4:	83 c4 0c             	add    $0xc,%esp
    60f7:	5b                   	pop    %ebx
    60f8:	5e                   	pop    %esi
    60f9:	5f                   	pop    %edi
    60fa:	5d                   	pop    %ebp
    60fb:	c3                   	ret    
    60fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006100 <parse_args>:
    6100:	55                   	push   %ebp
    6101:	57                   	push   %edi
    6102:	56                   	push   %esi
    6103:	53                   	push   %ebx
    6104:	e8 77 e3 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6109:	81 c3 f7 8e 04 00    	add    $0x48ef7,%ebx
    610f:	83 ec 2c             	sub    $0x2c,%esp
    6112:	83 7c 24 40 01       	cmpl   $0x1,0x40(%esp)
    6117:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    611e:	00 
    611f:	8d 83 ac fc ff ff    	lea    -0x354(%ebx),%eax
    6125:	89 44 24 14          	mov    %eax,0x14(%esp)
    6129:	8d 83 f8 56 fe ff    	lea    -0x1a908(%ebx),%eax
    612f:	89 44 24 18          	mov    %eax,0x18(%esp)
    6133:	8d 83 ec 56 fe ff    	lea    -0x1a914(%ebx),%eax
    6139:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    613d:	0f 8e c1 00 00 00    	jle    6204 <parse_args+0x104>
    6143:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6147:	90                   	nop
    6148:	8b 44 24 0c          	mov    0xc(%esp),%eax
    614c:	8b 4c 24 44          	mov    0x44(%esp),%ecx
    6150:	31 ed                	xor    %ebp,%ebp
    6152:	8b 74 24 14          	mov    0x14(%esp),%esi
    6156:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    615d:	8b 3c 81             	mov    (%ecx,%eax,4),%edi
    6160:	8b 44 24 18          	mov    0x18(%esp),%eax
    6164:	89 54 24 10          	mov    %edx,0x10(%esp)
    6168:	eb 0b                	jmp    6175 <parse_args+0x75>
    616a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6170:	8b 06                	mov    (%esi),%eax
    6172:	83 c6 0c             	add    $0xc,%esi
    6175:	83 ec 08             	sub    $0x8,%esp
    6178:	50                   	push   %eax
    6179:	57                   	push   %edi
    617a:	e8 91 df ff ff       	call   4110 <strcmp@plt>
    617f:	83 c4 10             	add    $0x10,%esp
    6182:	85 c0                	test   %eax,%eax
    6184:	74 2a                	je     61b0 <parse_args+0xb0>
    6186:	83 c5 01             	add    $0x1,%ebp
    6189:	83 fd 09             	cmp    $0x9,%ebp
    618c:	75 e2                	jne    6170 <parse_args+0x70>
    618e:	83 ec 08             	sub    $0x8,%esp
    6191:	8d 83 14 59 fe ff    	lea    -0x1a6ec(%ebx),%eax
    6197:	57                   	push   %edi
    6198:	50                   	push   %eax
    6199:	e8 c2 e0 ff ff       	call   4260 <printf@plt>
    619e:	83 c4 10             	add    $0x10,%esp
    61a1:	31 d2                	xor    %edx,%edx
    61a3:	83 c4 2c             	add    $0x2c,%esp
    61a6:	89 d0                	mov    %edx,%eax
    61a8:	5b                   	pop    %ebx
    61a9:	5e                   	pop    %esi
    61aa:	5f                   	pop    %edi
    61ab:	5d                   	pop    %ebp
    61ac:	c3                   	ret    
    61ad:	8d 76 00             	lea    0x0(%esi),%esi
    61b0:	8d 44 6d 00          	lea    0x0(%ebp,%ebp,2),%eax
    61b4:	8b 8c 83 a4 fc ff ff 	mov    -0x35c(%ebx,%eax,4),%ecx
    61bb:	8b 44 24 0c          	mov    0xc(%esp),%eax
    61bf:	83 c0 01             	add    $0x1,%eax
    61c2:	3b 44 24 40          	cmp    0x40(%esp),%eax
    61c6:	0f 8d 84 00 00 00    	jge    6250 <parse_args+0x150>
    61cc:	83 ec 0c             	sub    $0xc,%esp
    61cf:	8b 44 24 50          	mov    0x50(%esp),%eax
    61d3:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    61d7:	ff 74 10 04          	pushl  0x4(%eax,%edx,1)
    61db:	ff d1                	call   *%ecx
    61dd:	83 c4 10             	add    $0x10,%esp
    61e0:	84 c0                	test   %al,%al
    61e2:	74 7c                	je     6260 <parse_args+0x160>
    61e4:	8d 44 6d 00          	lea    0x0(%ebp,%ebp,2),%eax
    61e8:	8b 74 24 0c          	mov    0xc(%esp),%esi
    61ec:	03 b4 83 a8 fc ff ff 	add    -0x358(%ebx,%eax,4),%esi
    61f3:	8d 46 01             	lea    0x1(%esi),%eax
    61f6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    61fa:	39 44 24 40          	cmp    %eax,0x40(%esp)
    61fe:	0f 8f 44 ff ff ff    	jg     6148 <parse_args+0x48>
    6204:	31 c0                	xor    %eax,%eax
    6206:	80 bb e6 23 00 00 01 	cmpb   $0x1,0x23e6(%ebx)
    620d:	0f 94 c0             	sete   %al
    6210:	31 d2                	xor    %edx,%edx
    6212:	80 bb e8 23 00 00 01 	cmpb   $0x1,0x23e8(%ebx)
    6219:	0f 94 c2             	sete   %dl
    621c:	01 d0                	add    %edx,%eax
    621e:	80 bb e9 23 00 00 01 	cmpb   $0x1,0x23e9(%ebx)
    6225:	0f b6 93 e4 23 00 00 	movzbl 0x23e4(%ebx),%edx
    622c:	74 5f                	je     628d <parse_args+0x18d>
    622e:	80 fa 01             	cmp    $0x1,%dl
    6231:	74 39                	je     626c <parse_args+0x16c>
    6233:	85 c0                	test   %eax,%eax
    6235:	0f 84 86 00 00 00    	je     62c1 <parse_args+0x1c1>
    623b:	83 f8 01             	cmp    $0x1,%eax
    623e:	75 34                	jne    6274 <parse_args+0x174>
    6240:	83 c4 2c             	add    $0x2c,%esp
    6243:	ba 01 00 00 00       	mov    $0x1,%edx
    6248:	5b                   	pop    %ebx
    6249:	89 d0                	mov    %edx,%eax
    624b:	5e                   	pop    %esi
    624c:	5f                   	pop    %edi
    624d:	5d                   	pop    %ebp
    624e:	c3                   	ret    
    624f:	90                   	nop
    6250:	83 ec 0c             	sub    $0xc,%esp
    6253:	ff 74 24 28          	pushl  0x28(%esp)
    6257:	ff d1                	call   *%ecx
    6259:	83 c4 10             	add    $0x10,%esp
    625c:	84 c0                	test   %al,%al
    625e:	75 84                	jne    61e4 <parse_args+0xe4>
    6260:	31 d2                	xor    %edx,%edx
    6262:	83 c4 2c             	add    $0x2c,%esp
    6265:	89 d0                	mov    %edx,%eax
    6267:	5b                   	pop    %ebx
    6268:	5e                   	pop    %esi
    6269:	5f                   	pop    %edi
    626a:	5d                   	pop    %ebp
    626b:	c3                   	ret    
    626c:	85 c0                	test   %eax,%eax
    626e:	0f 84 2f ff ff ff    	je     61a3 <parse_args+0xa3>
    6274:	83 ec 0c             	sub    $0xc,%esp
    6277:	8d 83 64 58 fe ff    	lea    -0x1a79c(%ebx),%eax
    627d:	50                   	push   %eax
    627e:	e8 2d e0 ff ff       	call   42b0 <puts@plt>
    6283:	83 c4 10             	add    $0x10,%esp
    6286:	31 d2                	xor    %edx,%edx
    6288:	e9 16 ff ff ff       	jmp    61a3 <parse_args+0xa3>
    628d:	80 fa 01             	cmp    $0x1,%dl
    6290:	74 e2                	je     6274 <parse_args+0x174>
    6292:	85 c0                	test   %eax,%eax
    6294:	75 de                	jne    6274 <parse_args+0x174>
    6296:	0f b6 93 ea 23 00 00 	movzbl 0x23ea(%ebx),%edx
    629d:	84 d2                	test   %dl,%dl
    629f:	75 9f                	jne    6240 <parse_args+0x140>
    62a1:	88 54 24 0c          	mov    %dl,0xc(%esp)
    62a5:	8d 83 dc 58 fe ff    	lea    -0x1a724(%ebx),%eax
    62ab:	83 ec 0c             	sub    $0xc,%esp
    62ae:	50                   	push   %eax
    62af:	e8 fc df ff ff       	call   42b0 <puts@plt>
    62b4:	83 c4 10             	add    $0x10,%esp
    62b7:	0f b6 54 24 0c       	movzbl 0xc(%esp),%edx
    62bc:	e9 e2 fe ff ff       	jmp    61a3 <parse_args+0xa3>
    62c1:	83 ec 0c             	sub    $0xc,%esp
    62c4:	8d 83 f4 57 fe ff    	lea    -0x1a80c(%ebx),%eax
    62ca:	50                   	push   %eax
    62cb:	e8 e0 df ff ff       	call   42b0 <puts@plt>
    62d0:	83 c4 10             	add    $0x10,%esp
    62d3:	31 d2                	xor    %edx,%edx
    62d5:	eb 8b                	jmp    6262 <parse_args+0x162>

000062d7 <__x86.get_pc_thunk.ax>:
    62d7:	8b 04 24             	mov    (%esp),%eax
    62da:	c3                   	ret    
    62db:	66 90                	xchg   %ax,%ax
    62dd:	66 90                	xchg   %ax,%ax
    62df:	90                   	nop

000062e0 <handler_serial>:
    62e0:	56                   	push   %esi
    62e1:	53                   	push   %ebx
    62e2:	e8 99 e1 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    62e7:	81 c3 19 8d 04 00    	add    $0x48d19,%ebx
    62ed:	83 ec 04             	sub    $0x4,%esp
    62f0:	80 7c 24 18 00       	cmpb   $0x0,0x18(%esp)
    62f5:	8b 44 24 10          	mov    0x10(%esp),%eax
    62f9:	74 0d                	je     6308 <handler_serial+0x28>
    62fb:	83 7c 24 14 01       	cmpl   $0x1,0x14(%esp)
    6300:	75 41                	jne    6343 <handler_serial+0x63>
    6302:	66 3d f8 03          	cmp    $0x3f8,%ax
    6306:	74 08                	je     6310 <handler_serial+0x30>
    6308:	83 c4 04             	add    $0x4,%esp
    630b:	5b                   	pop    %ebx
    630c:	5e                   	pop    %esi
    630d:	c3                   	ret    
    630e:	66 90                	xchg   %ax,%ax
    6310:	83 ec 08             	sub    $0x8,%esp
    6313:	6a 01                	push   $0x1
    6315:	68 f8 03 00 00       	push   $0x3f8
    631a:	e8 21 0b 00 00       	call   6e40 <read_io_port>
    631f:	8b b3 d0 ff ff ff    	mov    -0x30(%ebx),%esi
    6325:	5a                   	pop    %edx
    6326:	0f be c0             	movsbl %al,%eax
    6329:	59                   	pop    %ecx
    632a:	ff 36                	pushl  (%esi)
    632c:	50                   	push   %eax
    632d:	e8 2e dd ff ff       	call   4060 <putc@plt>
    6332:	58                   	pop    %eax
    6333:	ff 36                	pushl  (%esi)
    6335:	e8 16 de ff ff       	call   4150 <fflush@plt>
    633a:	83 c4 10             	add    $0x10,%esp
    633d:	83 c4 04             	add    $0x4,%esp
    6340:	5b                   	pop    %ebx
    6341:	5e                   	pop    %esi
    6342:	c3                   	ret    
    6343:	8d 83 58 59 fe ff    	lea    -0x1a6a8(%ebx),%eax
    6349:	50                   	push   %eax
    634a:	8d 83 35 59 fe ff    	lea    -0x1a6cb(%ebx),%eax
    6350:	6a 08                	push   $0x8
    6352:	50                   	push   %eax
    6353:	8d 83 4d 59 fe ff    	lea    -0x1a6b3(%ebx),%eax
    6359:	50                   	push   %eax
    635a:	e8 b1 df ff ff       	call   4310 <__assert_fail@plt>
    635f:	90                   	nop

00006360 <init_serial>:
    6360:	53                   	push   %ebx
    6361:	e8 1a e1 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6366:	81 c3 9a 8c 04 00    	add    $0x48c9a,%ebx
    636c:	83 ec 0c             	sub    $0xc,%esp
    636f:	6a 20                	push   $0x20
    6371:	6a 01                	push   $0x1
    6373:	68 fd 03 00 00       	push   $0x3fd
    6378:	e8 83 0a 00 00       	call   6e00 <write_io_port>
    637d:	83 c4 18             	add    $0x18,%esp
    6380:	5b                   	pop    %ebx
    6381:	c3                   	ret    
    6382:	66 90                	xchg   %ax,%ax
    6384:	66 90                	xchg   %ax,%ax
    6386:	66 90                	xchg   %ax,%ax
    6388:	66 90                	xchg   %ax,%ax
    638a:	66 90                	xchg   %ax,%ax
    638c:	66 90                	xchg   %ax,%ax
    638e:	66 90                	xchg   %ax,%ax

00006390 <init_ide>:
    6390:	53                   	push   %ebx
    6391:	e8 ea e0 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6396:	81 c3 6a 8c 04 00    	add    $0x48c6a,%ebx
    639c:	83 ec 10             	sub    $0x10,%esp
    639f:	8d 83 6f 50 fe ff    	lea    -0x1af91(%ebx),%eax
    63a5:	50                   	push   %eax
    63a6:	ff 74 24 1c          	pushl  0x1c(%esp)
    63aa:	e8 71 df ff ff       	call   4320 <fopen@plt>
    63af:	83 c4 10             	add    $0x10,%esp
    63b2:	89 83 ec 23 00 00    	mov    %eax,0x23ec(%ebx)
    63b8:	85 c0                	test   %eax,%eax
    63ba:	74 16                	je     63d2 <init_ide+0x42>
    63bc:	83 ec 04             	sub    $0x4,%esp
    63bf:	6a 40                	push   $0x40
    63c1:	6a 01                	push   $0x1
    63c3:	68 f7 01 00 00       	push   $0x1f7
    63c8:	e8 33 0a 00 00       	call   6e00 <write_io_port>
    63cd:	83 c4 18             	add    $0x18,%esp
    63d0:	5b                   	pop    %ebx
    63d1:	c3                   	ret    
    63d2:	8d 83 b0 59 fe ff    	lea    -0x1a650(%ebx),%eax
    63d8:	50                   	push   %eax
    63d9:	8d 83 67 59 fe ff    	lea    -0x1a699(%ebx),%eax
    63df:	6a 10                	push   $0x10
    63e1:	50                   	push   %eax
    63e2:	8d 83 7c 59 fe ff    	lea    -0x1a684(%ebx),%eax
    63e8:	50                   	push   %eax
    63e9:	e8 22 df ff ff       	call   4310 <__assert_fail@plt>
    63ee:	66 90                	xchg   %ax,%ax

000063f0 <handler_ide>:
    63f0:	57                   	push   %edi
    63f1:	56                   	push   %esi
    63f2:	53                   	push   %ebx
    63f3:	e8 88 e0 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    63f8:	81 c3 08 8c 04 00    	add    $0x48c08,%ebx
    63fe:	83 ec 10             	sub    $0x10,%esp
    6401:	8b 54 24 20          	mov    0x20(%esp),%edx
    6405:	8b 4c 24 28          	mov    0x28(%esp),%ecx
    6409:	81 bb f4 23 00 00 00 	cmpl   $0x200,0x23f4(%ebx)
    6410:	02 00 00 
    6413:	0f 87 18 02 00 00    	ja     6631 <handler_ide+0x241>
    6419:	66 81 fa f0 01       	cmp    $0x1f0,%dx
    641e:	0f 94 c0             	sete   %al
    6421:	83 7c 24 24 04       	cmpl   $0x4,0x24(%esp)
    6426:	89 c7                	mov    %eax,%edi
    6428:	0f 94 c0             	sete   %al
    642b:	89 c6                	mov    %eax,%esi
    642d:	89 f8                	mov    %edi,%eax
    642f:	21 f0                	and    %esi,%eax
    6431:	84 c9                	test   %cl,%cl
    6433:	74 63                	je     6498 <handler_ide+0xa8>
    6435:	84 c0                	test   %al,%al
    6437:	0f 84 cb 00 00 00    	je     6508 <handler_ide+0x118>
    643d:	80 bb f0 23 00 00 00 	cmpb   $0x0,0x23f0(%ebx)
    6444:	0f 84 1f 02 00 00    	je     6669 <handler_ide+0x279>
    644a:	83 ec 08             	sub    $0x8,%esp
    644d:	6a 04                	push   $0x4
    644f:	68 f0 01 00 00       	push   $0x1f0
    6454:	e8 e7 09 00 00       	call   6e40 <read_io_port>
    6459:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    645d:	ff b3 ec 23 00 00    	pushl  0x23ec(%ebx)
    6463:	6a 01                	push   $0x1
    6465:	6a 04                	push   $0x4
    6467:	8d 44 24 28          	lea    0x28(%esp),%eax
    646b:	50                   	push   %eax
    646c:	e8 0f dc ff ff       	call   4080 <fwrite@plt>
    6471:	8b 83 f4 23 00 00    	mov    0x23f4(%ebx),%eax
    6477:	83 c4 20             	add    $0x20,%esp
    647a:	83 c0 04             	add    $0x4,%eax
    647d:	89 83 f4 23 00 00    	mov    %eax,0x23f4(%ebx)
    6483:	3d 00 02 00 00       	cmp    $0x200,%eax
    6488:	74 5f                	je     64e9 <handler_ide+0xf9>
    648a:	83 c4 10             	add    $0x10,%esp
    648d:	5b                   	pop    %ebx
    648e:	5e                   	pop    %esi
    648f:	5f                   	pop    %edi
    6490:	c3                   	ret    
    6491:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6498:	84 c0                	test   %al,%al
    649a:	74 ee                	je     648a <handler_ide+0x9a>
    649c:	80 bb f0 23 00 00 00 	cmpb   $0x0,0x23f0(%ebx)
    64a3:	0f 85 a4 01 00 00    	jne    664d <handler_ide+0x25d>
    64a9:	ff b3 ec 23 00 00    	pushl  0x23ec(%ebx)
    64af:	6a 01                	push   $0x1
    64b1:	6a 04                	push   $0x4
    64b3:	8d 44 24 18          	lea    0x18(%esp),%eax
    64b7:	50                   	push   %eax
    64b8:	e8 83 db ff ff       	call   4040 <fread@plt>
    64bd:	83 c4 0c             	add    $0xc,%esp
    64c0:	ff 74 24 10          	pushl  0x10(%esp)
    64c4:	6a 04                	push   $0x4
    64c6:	68 f0 01 00 00       	push   $0x1f0
    64cb:	e8 30 09 00 00       	call   6e00 <write_io_port>
    64d0:	8b 83 f4 23 00 00    	mov    0x23f4(%ebx),%eax
    64d6:	83 c4 10             	add    $0x10,%esp
    64d9:	83 c0 04             	add    $0x4,%eax
    64dc:	89 83 f4 23 00 00    	mov    %eax,0x23f4(%ebx)
    64e2:	3d 00 02 00 00       	cmp    $0x200,%eax
    64e7:	75 a1                	jne    648a <handler_ide+0x9a>
    64e9:	83 ec 04             	sub    $0x4,%esp
    64ec:	6a 40                	push   $0x40
    64ee:	6a 01                	push   $0x1
    64f0:	68 f7 01 00 00       	push   $0x1f7
    64f5:	e8 06 09 00 00       	call   6e00 <write_io_port>
    64fa:	83 c4 10             	add    $0x10,%esp
    64fd:	83 c4 10             	add    $0x10,%esp
    6500:	5b                   	pop    %ebx
    6501:	5e                   	pop    %esi
    6502:	5f                   	pop    %edi
    6503:	c3                   	ret    
    6504:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6508:	66 81 fa f7 01       	cmp    $0x1f7,%dx
    650d:	0f 85 77 ff ff ff    	jne    648a <handler_ide+0x9a>
    6513:	83 ec 08             	sub    $0x8,%esp
    6516:	6a 01                	push   $0x1
    6518:	68 f7 01 00 00       	push   $0x1f7
    651d:	e8 1e 09 00 00       	call   6e40 <read_io_port>
    6522:	83 c4 10             	add    $0x10,%esp
    6525:	83 f8 20             	cmp    $0x20,%eax
    6528:	74 56                	je     6580 <handler_ide+0x190>
    652a:	83 ec 08             	sub    $0x8,%esp
    652d:	6a 01                	push   $0x1
    652f:	68 f7 01 00 00       	push   $0x1f7
    6534:	e8 07 09 00 00       	call   6e40 <read_io_port>
    6539:	83 c4 10             	add    $0x10,%esp
    653c:	83 f8 30             	cmp    $0x30,%eax
    653f:	74 3f                	je     6580 <handler_ide+0x190>
    6541:	83 ec 08             	sub    $0x8,%esp
    6544:	6a 01                	push   $0x1
    6546:	68 f7 01 00 00       	push   $0x1f7
    654b:	e8 f0 08 00 00       	call   6e40 <read_io_port>
    6550:	83 c4 10             	add    $0x10,%esp
    6553:	3d c8 00 00 00       	cmp    $0xc8,%eax
    6558:	0f 84 2c ff ff ff    	je     648a <handler_ide+0x9a>
    655e:	8d 83 a4 59 fe ff    	lea    -0x1a65c(%ebx),%eax
    6564:	50                   	push   %eax
    6565:	8d 83 67 59 fe ff    	lea    -0x1a699(%ebx),%eax
    656b:	6a 4b                	push   $0x4b
    656d:	50                   	push   %eax
    656e:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
    6574:	50                   	push   %eax
    6575:	e8 96 dd ff ff       	call   4310 <__assert_fail@plt>
    657a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6580:	83 ec 08             	sub    $0x8,%esp
    6583:	6a 01                	push   $0x1
    6585:	68 f6 01 00 00       	push   $0x1f6
    658a:	e8 b1 08 00 00       	call   6e40 <read_io_port>
    658f:	58                   	pop    %eax
    6590:	5a                   	pop    %edx
    6591:	6a 01                	push   $0x1
    6593:	68 f5 01 00 00       	push   $0x1f5
    6598:	e8 a3 08 00 00       	call   6e40 <read_io_port>
    659d:	59                   	pop    %ecx
    659e:	5f                   	pop    %edi
    659f:	6a 01                	push   $0x1
    65a1:	68 f4 01 00 00       	push   $0x1f4
    65a6:	89 c6                	mov    %eax,%esi
    65a8:	c1 e6 10             	shl    $0x10,%esi
    65ab:	e8 90 08 00 00       	call   6e40 <read_io_port>
    65b0:	c1 e0 08             	shl    $0x8,%eax
    65b3:	09 c6                	or     %eax,%esi
    65b5:	58                   	pop    %eax
    65b6:	5a                   	pop    %edx
    65b7:	6a 01                	push   $0x1
    65b9:	68 f3 01 00 00       	push   $0x1f3
    65be:	e8 7d 08 00 00       	call   6e40 <read_io_port>
    65c3:	83 c4 0c             	add    $0xc,%esp
    65c6:	09 f0                	or     %esi,%eax
    65c8:	6a 00                	push   $0x0
    65ca:	c1 e0 09             	shl    $0x9,%eax
    65cd:	50                   	push   %eax
    65ce:	ff b3 ec 23 00 00    	pushl  0x23ec(%ebx)
    65d4:	e8 87 db ff ff       	call   4160 <fseek@plt>
    65d9:	59                   	pop    %ecx
    65da:	5e                   	pop    %esi
    65db:	6a 01                	push   $0x1
    65dd:	68 f7 01 00 00       	push   $0x1f7
    65e2:	c7 83 f4 23 00 00 00 	movl   $0x0,0x23f4(%ebx)
    65e9:	00 00 00 
    65ec:	e8 4f 08 00 00       	call   6e40 <read_io_port>
    65f1:	83 c4 10             	add    $0x10,%esp
    65f4:	83 f8 20             	cmp    $0x20,%eax
    65f7:	74 0c                	je     6605 <handler_ide+0x215>
    65f9:	c6 83 f0 23 00 00 01 	movb   $0x1,0x23f0(%ebx)
    6600:	e9 85 fe ff ff       	jmp    648a <handler_ide+0x9a>
    6605:	83 ec 04             	sub    $0x4,%esp
    6608:	c6 83 f0 23 00 00 00 	movb   $0x0,0x23f0(%ebx)
    660f:	6a 40                	push   $0x40
    6611:	6a 01                	push   $0x1
    6613:	68 f7 01 00 00       	push   $0x1f7
    6618:	e8 e3 07 00 00       	call   6e00 <write_io_port>
    661d:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)
    6624:	e8 67 04 00 00       	call   6a90 <i8259_raise_intr>
    6629:	83 c4 10             	add    $0x10,%esp
    662c:	e9 59 fe ff ff       	jmp    648a <handler_ide+0x9a>
    6631:	8d 83 a4 59 fe ff    	lea    -0x1a65c(%ebx),%eax
    6637:	50                   	push   %eax
    6638:	8d 83 67 59 fe ff    	lea    -0x1a699(%ebx),%eax
    663e:	6a 18                	push   $0x18
    6640:	50                   	push   %eax
    6641:	8d 83 89 59 fe ff    	lea    -0x1a677(%ebx),%eax
    6647:	50                   	push   %eax
    6648:	e8 c3 dc ff ff       	call   4310 <__assert_fail@plt>
    664d:	8d 83 a4 59 fe ff    	lea    -0x1a65c(%ebx),%eax
    6653:	50                   	push   %eax
    6654:	8d 83 67 59 fe ff    	lea    -0x1a699(%ebx),%eax
    665a:	6a 54                	push   $0x54
    665c:	50                   	push   %eax
    665d:	8d 83 99 59 fe ff    	lea    -0x1a667(%ebx),%eax
    6663:	50                   	push   %eax
    6664:	e8 a7 dc ff ff       	call   4310 <__assert_fail@plt>
    6669:	8d 83 a4 59 fe ff    	lea    -0x1a65c(%ebx),%eax
    666f:	50                   	push   %eax
    6670:	8d 83 67 59 fe ff    	lea    -0x1a699(%ebx),%eax
    6676:	6a 1e                	push   $0x1e
    6678:	50                   	push   %eax
    6679:	8d 83 9a 59 fe ff    	lea    -0x1a666(%ebx),%eax
    667f:	50                   	push   %eax
    6680:	e8 8b dc ff ff       	call   4310 <__assert_fail@plt>
    6685:	66 90                	xchg   %ax,%ax
    6687:	66 90                	xchg   %ax,%ax
    6689:	66 90                	xchg   %ax,%ax
    668b:	66 90                	xchg   %ax,%ax
    668d:	66 90                	xchg   %ax,%ax
    668f:	90                   	nop

00006690 <KEYBOARD_Thread>:
    6690:	55                   	push   %ebp
    6691:	57                   	push   %edi
    6692:	56                   	push   %esi
    6693:	53                   	push   %ebx
    6694:	e8 e7 dd ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6699:	81 c3 67 89 04 00    	add    $0x48967,%ebx
    669f:	83 ec 2c             	sub    $0x2c,%esp
    66a2:	8d 74 24 0c          	lea    0xc(%esp),%esi
    66a6:	80 bb f8 23 00 00 00 	cmpb   $0x0,0x23f8(%ebx)
    66ad:	8d ab 04 33 05 00    	lea    0x53304(%ebx),%ebp
    66b3:	74 7d                	je     6732 <KEYBOARD_Thread+0xa2>
    66b5:	8d 76 00             	lea    0x0(%esi),%esi
    66b8:	8d bb c0 59 fe ff    	lea    -0x1a640(%ebx),%edi
    66be:	66 90                	xchg   %ax,%ax
    66c0:	83 ec 0c             	sub    $0xc,%esp
    66c3:	56                   	push   %esi
    66c4:	e8 17 da ff ff       	call   40e0 <SDL_PollEvent@plt>
    66c9:	83 c4 10             	add    $0x10,%esp
    66cc:	85 c0                	test   %eax,%eax
    66ce:	74 4c                	je     671c <KEYBOARD_Thread+0x8c>
    66d0:	0f b6 44 24 0c       	movzbl 0xc(%esp),%eax
    66d5:	3c 0c                	cmp    $0xc,%al
    66d7:	74 67                	je     6740 <KEYBOARD_Thread+0xb0>
    66d9:	3c 02                	cmp    $0x2,%al
    66db:	74 7b                	je     6758 <KEYBOARD_Thread+0xc8>
    66dd:	3c 03                	cmp    $0x3,%al
    66df:	75 df                	jne    66c0 <KEYBOARD_Thread+0x30>
    66e1:	8b 54 24 14          	mov    0x14(%esp),%edx
    66e5:	89 d0                	mov    %edx,%eax
    66e7:	0f b6 d2             	movzbl %dl,%edx
    66ea:	c1 e8 08             	shr    $0x8,%eax
    66ed:	c1 e0 07             	shl    $0x7,%eax
    66f0:	01 d0                	add    %edx,%eax
    66f2:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
    66f6:	83 c8 80             	or     $0xffffff80,%eax
    66f9:	83 ec 0c             	sub    $0xc,%esp
    66fc:	88 83 f9 23 00 00    	mov    %al,0x23f9(%ebx)
    6702:	6a 01                	push   $0x1
    6704:	e8 87 03 00 00       	call   6a90 <i8259_raise_intr>
    6709:	83 c4 10             	add    $0x10,%esp
    670c:	83 ec 0c             	sub    $0xc,%esp
    670f:	56                   	push   %esi
    6710:	e8 cb d9 ff ff       	call   40e0 <SDL_PollEvent@plt>
    6715:	83 c4 10             	add    $0x10,%esp
    6718:	85 c0                	test   %eax,%eax
    671a:	75 b4                	jne    66d0 <KEYBOARD_Thread+0x40>
    671c:	83 ec 0c             	sub    $0xc,%esp
    671f:	6a 01                	push   $0x1
    6721:	e8 da d9 ff ff       	call   4100 <SDL_Delay@plt>
    6726:	83 c4 10             	add    $0x10,%esp
    6729:	80 bb f8 23 00 00 00 	cmpb   $0x0,0x23f8(%ebx)
    6730:	75 86                	jne    66b8 <KEYBOARD_Thread+0x28>
    6732:	83 c4 2c             	add    $0x2c,%esp
    6735:	31 c0                	xor    %eax,%eax
    6737:	5b                   	pop    %ebx
    6738:	5e                   	pop    %esi
    6739:	5f                   	pop    %edi
    673a:	5d                   	pop    %ebp
    673b:	c3                   	ret    
    673c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6740:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%ebp)
    6747:	c6 83 f8 23 00 00 00 	movb   $0x0,0x23f8(%ebx)
    674e:	e9 6d ff ff ff       	jmp    66c0 <KEYBOARD_Thread+0x30>
    6753:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6757:	90                   	nop
    6758:	8b 54 24 14          	mov    0x14(%esp),%edx
    675c:	89 d0                	mov    %edx,%eax
    675e:	0f b6 d2             	movzbl %dl,%edx
    6761:	c1 e8 08             	shr    $0x8,%eax
    6764:	c1 e0 07             	shl    $0x7,%eax
    6767:	01 d0                	add    %edx,%eax
    6769:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
    676d:	eb 8a                	jmp    66f9 <KEYBOARD_Thread+0x69>
    676f:	90                   	nop

00006770 <keyboard_down>:
    6770:	53                   	push   %ebx
    6771:	e8 0a dd ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6776:	81 c3 8a 88 04 00    	add    $0x4888a,%ebx
    677c:	83 ec 14             	sub    $0x14,%esp
    677f:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    6783:	6a 01                	push   $0x1
    6785:	89 d0                	mov    %edx,%eax
    6787:	0f b6 d2             	movzbl %dl,%edx
    678a:	c1 e8 08             	shr    $0x8,%eax
    678d:	c1 e0 07             	shl    $0x7,%eax
    6790:	01 d0                	add    %edx,%eax
    6792:	0f b6 84 03 c0 59 fe 	movzbl -0x1a640(%ebx,%eax,1),%eax
    6799:	ff 
    679a:	88 83 f9 23 00 00    	mov    %al,0x23f9(%ebx)
    67a0:	e8 eb 02 00 00       	call   6a90 <i8259_raise_intr>
    67a5:	83 c4 18             	add    $0x18,%esp
    67a8:	5b                   	pop    %ebx
    67a9:	c3                   	ret    
    67aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000067b0 <keyboard_up>:
    67b0:	53                   	push   %ebx
    67b1:	e8 ca dc ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    67b6:	81 c3 4a 88 04 00    	add    $0x4884a,%ebx
    67bc:	83 ec 14             	sub    $0x14,%esp
    67bf:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    67c3:	6a 01                	push   $0x1
    67c5:	89 d0                	mov    %edx,%eax
    67c7:	0f b6 d2             	movzbl %dl,%edx
    67ca:	c1 e8 08             	shr    $0x8,%eax
    67cd:	c1 e0 07             	shl    $0x7,%eax
    67d0:	01 d0                	add    %edx,%eax
    67d2:	0f b6 84 03 c0 59 fe 	movzbl -0x1a640(%ebx,%eax,1),%eax
    67d9:	ff 
    67da:	83 c8 80             	or     $0xffffff80,%eax
    67dd:	88 83 f9 23 00 00    	mov    %al,0x23f9(%ebx)
    67e3:	e8 a8 02 00 00       	call   6a90 <i8259_raise_intr>
    67e8:	83 c4 18             	add    $0x18,%esp
    67eb:	5b                   	pop    %ebx
    67ec:	c3                   	ret    
    67ed:	8d 76 00             	lea    0x0(%esi),%esi

000067f0 <handler_keyboard_data>:
    67f0:	53                   	push   %ebx
    67f1:	e8 8a dc ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    67f6:	81 c3 0a 88 04 00    	add    $0x4880a,%ebx
    67fc:	83 ec 08             	sub    $0x8,%esp
    67ff:	80 7c 24 18 00       	cmpb   $0x0,0x18(%esp)
    6804:	8b 44 24 10          	mov    0x10(%esp),%eax
    6808:	74 06                	je     6810 <handler_keyboard_data+0x20>
    680a:	83 c4 08             	add    $0x8,%esp
    680d:	5b                   	pop    %ebx
    680e:	c3                   	ret    
    680f:	90                   	nop
    6810:	0f b6 93 f9 23 00 00 	movzbl 0x23f9(%ebx),%edx
    6817:	83 ec 04             	sub    $0x4,%esp
    681a:	0f b7 c0             	movzwl %ax,%eax
    681d:	52                   	push   %edx
    681e:	ff 74 24 1c          	pushl  0x1c(%esp)
    6822:	50                   	push   %eax
    6823:	e8 d8 05 00 00       	call   6e00 <write_io_port>
    6828:	83 c4 10             	add    $0x10,%esp
    682b:	83 c4 08             	add    $0x8,%esp
    682e:	5b                   	pop    %ebx
    682f:	c3                   	ret    

00006830 <keyboard_start>:
    6830:	53                   	push   %ebx
    6831:	e8 4a dc ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6836:	81 c3 ca 87 04 00    	add    $0x487ca,%ebx
    683c:	83 ec 10             	sub    $0x10,%esp
    683f:	6a 00                	push   $0x0
    6841:	8d 83 90 76 fb ff    	lea    -0x48970(%ebx),%eax
    6847:	c6 83 f8 23 00 00 01 	movb   $0x1,0x23f8(%ebx)
    684e:	50                   	push   %eax
    684f:	e8 ec d8 ff ff       	call   4140 <SDL_CreateThread@plt>
    6854:	83 c4 18             	add    $0x18,%esp
    6857:	5b                   	pop    %ebx
    6858:	c3                   	ret    
    6859:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006860 <keyboard_stop>:
    6860:	e8 72 fa ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    6865:	05 9b 87 04 00       	add    $0x4879b,%eax
    686a:	c6 80 f8 23 00 00 00 	movb   $0x0,0x23f8(%eax)
    6871:	c3                   	ret    
    6872:	66 90                	xchg   %ax,%ax
    6874:	66 90                	xchg   %ax,%ax
    6876:	66 90                	xchg   %ax,%ax
    6878:	66 90                	xchg   %ax,%ax
    687a:	66 90                	xchg   %ax,%ax
    687c:	66 90                	xchg   %ax,%ax
    687e:	66 90                	xchg   %ax,%ax

00006880 <TIMER_Thread>:
    6880:	56                   	push   %esi
    6881:	53                   	push   %ebx
    6882:	e8 f9 db ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6887:	81 c3 79 87 04 00    	add    $0x48779,%ebx
    688d:	83 ec 04             	sub    $0x4,%esp
    6890:	80 bb fa 23 00 00 00 	cmpb   $0x0,0x23fa(%ebx)
    6897:	74 3f                	je     68d8 <TIMER_Thread+0x58>
    6899:	8d b3 04 33 05 00    	lea    0x53304(%ebx),%esi
    689f:	eb 1d                	jmp    68be <TIMER_Thread+0x3e>
    68a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    68a8:	83 ec 0c             	sub    $0xc,%esp
    68ab:	6a 0a                	push   $0xa
    68ad:	e8 4e d8 ff ff       	call   4100 <SDL_Delay@plt>
    68b2:	83 c4 10             	add    $0x10,%esp
    68b5:	80 bb fa 23 00 00 00 	cmpb   $0x0,0x23fa(%ebx)
    68bc:	74 1a                	je     68d8 <TIMER_Thread+0x58>
    68be:	83 3e 01             	cmpl   $0x1,(%esi)
    68c1:	75 e5                	jne    68a8 <TIMER_Thread+0x28>
    68c3:	83 ec 0c             	sub    $0xc,%esp
    68c6:	6a 00                	push   $0x0
    68c8:	e8 c3 01 00 00       	call   6a90 <i8259_raise_intr>
    68cd:	83 c4 10             	add    $0x10,%esp
    68d0:	eb d6                	jmp    68a8 <TIMER_Thread+0x28>
    68d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    68d8:	83 c4 04             	add    $0x4,%esp
    68db:	31 c0                	xor    %eax,%eax
    68dd:	5b                   	pop    %ebx
    68de:	5e                   	pop    %esi
    68df:	c3                   	ret    

000068e0 <timer_intr>:
    68e0:	53                   	push   %ebx
    68e1:	e8 9a db ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    68e6:	81 c3 1a 87 04 00    	add    $0x4871a,%ebx
    68ec:	83 ec 08             	sub    $0x8,%esp
    68ef:	8d 83 04 33 05 00    	lea    0x53304(%ebx),%eax
    68f5:	83 38 01             	cmpl   $0x1,(%eax)
    68f8:	74 06                	je     6900 <timer_intr+0x20>
    68fa:	83 c4 08             	add    $0x8,%esp
    68fd:	5b                   	pop    %ebx
    68fe:	c3                   	ret    
    68ff:	90                   	nop
    6900:	83 ec 0c             	sub    $0xc,%esp
    6903:	6a 00                	push   $0x0
    6905:	e8 86 01 00 00       	call   6a90 <i8259_raise_intr>
    690a:	83 c4 10             	add    $0x10,%esp
    690d:	83 c4 08             	add    $0x8,%esp
    6910:	5b                   	pop    %ebx
    6911:	c3                   	ret    
    6912:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6919:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006920 <timer_start>:
    6920:	53                   	push   %ebx
    6921:	e8 5a db ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6926:	81 c3 da 86 04 00    	add    $0x486da,%ebx
    692c:	83 ec 10             	sub    $0x10,%esp
    692f:	8d 44 24 18          	lea    0x18(%esp),%eax
    6933:	50                   	push   %eax
    6934:	8d 83 80 78 fb ff    	lea    -0x48780(%ebx),%eax
    693a:	c6 83 fa 23 00 00 01 	movb   $0x1,0x23fa(%ebx)
    6941:	50                   	push   %eax
    6942:	e8 f9 d7 ff ff       	call   4140 <SDL_CreateThread@plt>
    6947:	83 c4 18             	add    $0x18,%esp
    694a:	5b                   	pop    %ebx
    694b:	c3                   	ret    
    694c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006950 <timer_stop>:
    6950:	e8 82 f9 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    6955:	05 ab 86 04 00       	add    $0x486ab,%eax
    695a:	c6 80 fa 23 00 00 00 	movb   $0x0,0x23fa(%eax)
    6961:	c3                   	ret    
    6962:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006970 <handler_timer>:
    6970:	c3                   	ret    
    6971:	66 90                	xchg   %ax,%ax
    6973:	66 90                	xchg   %ax,%ax
    6975:	66 90                	xchg   %ax,%ax
    6977:	66 90                	xchg   %ax,%ax
    6979:	66 90                	xchg   %ax,%ax
    697b:	66 90                	xchg   %ax,%ax
    697d:	66 90                	xchg   %ax,%ax
    697f:	90                   	nop

00006980 <close_sdl>:
    6980:	53                   	push   %ebx
    6981:	e8 fa da ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6986:	81 c3 7a 86 04 00    	add    $0x4867a,%ebx
    698c:	83 ec 08             	sub    $0x8,%esp
    698f:	80 bb fb 23 00 00 00 	cmpb   $0x0,0x23fb(%ebx)
    6996:	75 08                	jne    69a0 <close_sdl+0x20>
    6998:	83 c4 08             	add    $0x8,%esp
    699b:	5b                   	pop    %ebx
    699c:	c3                   	ret    
    699d:	8d 76 00             	lea    0x0(%esi),%esi
    69a0:	c6 83 fb 23 00 00 00 	movb   $0x0,0x23fb(%ebx)
    69a7:	e8 a4 ff ff ff       	call   6950 <timer_stop>
    69ac:	e8 af fe ff ff       	call   6860 <keyboard_stop>
    69b1:	e8 9a d6 ff ff       	call   4050 <SDL_Quit@plt>
    69b6:	83 c4 08             	add    $0x8,%esp
    69b9:	5b                   	pop    %ebx
    69ba:	c3                   	ret    
    69bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    69bf:	90                   	nop

000069c0 <init_sdl>:
    69c0:	53                   	push   %ebx
    69c1:	e8 ba da ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    69c6:	81 c3 3a 86 04 00    	add    $0x4863a,%ebx
    69cc:	83 ec 08             	sub    $0x8,%esp
    69cf:	80 bb fb 23 00 00 00 	cmpb   $0x0,0x23fb(%ebx)
    69d6:	74 08                	je     69e0 <init_sdl+0x20>
    69d8:	83 c4 08             	add    $0x8,%esp
    69db:	5b                   	pop    %ebx
    69dc:	c3                   	ret    
    69dd:	8d 76 00             	lea    0x0(%esi),%esi
    69e0:	83 ec 0c             	sub    $0xc,%esp
    69e3:	6a 64                	push   $0x64
    69e5:	e8 36 ff ff ff       	call   6920 <timer_start>
    69ea:	c7 04 24 21 00 10 00 	movl   $0x100021,(%esp)
    69f1:	e8 7a d7 ff ff       	call   4170 <SDL_Init@plt>
    69f6:	83 c4 10             	add    $0x10,%esp
    69f9:	85 c0                	test   %eax,%eax
    69fb:	75 50                	jne    6a4d <init_sdl+0x8d>
    69fd:	68 05 01 00 20       	push   $0x20000105
    6a02:	6a 08                	push   $0x8
    6a04:	68 90 01 00 00       	push   $0x190
    6a09:	68 80 02 00 00       	push   $0x280
    6a0e:	e8 8d d7 ff ff       	call   41a0 <SDL_SetVideoMode@plt>
    6a13:	8d 93 f8 31 05 00    	lea    0x531f8(%ebx),%edx
    6a19:	89 02                	mov    %eax,(%edx)
    6a1b:	58                   	pop    %eax
    6a1c:	8d 83 da 5a fe ff    	lea    -0x1a526(%ebx),%eax
    6a22:	5a                   	pop    %edx
    6a23:	6a 00                	push   $0x0
    6a25:	50                   	push   %eax
    6a26:	e8 85 d7 ff ff       	call   41b0 <SDL_WM_SetCaption@plt>
    6a2b:	59                   	pop    %ecx
    6a2c:	58                   	pop    %eax
    6a2d:	6a 1e                	push   $0x1e
    6a2f:	68 f4 01 00 00       	push   $0x1f4
    6a34:	e8 77 d6 ff ff       	call   40b0 <SDL_EnableKeyRepeat@plt>
    6a39:	e8 f2 fd ff ff       	call   6830 <keyboard_start>
    6a3e:	83 c4 10             	add    $0x10,%esp
    6a41:	c6 83 fb 23 00 00 01 	movb   $0x1,0x23fb(%ebx)
    6a48:	83 c4 08             	add    $0x8,%esp
    6a4b:	5b                   	pop    %ebx
    6a4c:	c3                   	ret    
    6a4d:	8d 83 e4 5a fe ff    	lea    -0x1a51c(%ebx),%eax
    6a53:	50                   	push   %eax
    6a54:	8d 83 c0 5a fe ff    	lea    -0x1a540(%ebx),%eax
    6a5a:	6a 1d                	push   $0x1d
    6a5c:	50                   	push   %eax
    6a5d:	8d 83 d1 5a fe ff    	lea    -0x1a52f(%ebx),%eax
    6a63:	50                   	push   %eax
    6a64:	e8 a7 d8 ff ff       	call   4310 <__assert_fail@plt>
    6a69:	66 90                	xchg   %ax,%ax
    6a6b:	66 90                	xchg   %ax,%ax
    6a6d:	66 90                	xchg   %ax,%ax
    6a6f:	90                   	nop

00006a70 <i8259_query_intr_no>:
    6a70:	e8 62 f8 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    6a75:	05 8b 85 04 00       	add    $0x4858b,%eax
    6a7a:	0f b6 80 00 05 00 00 	movzbl 0x500(%eax),%eax
    6a81:	c3                   	ret    
    6a82:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006a90 <i8259_raise_intr>:
    6a90:	57                   	push   %edi
    6a91:	56                   	push   %esi
    6a92:	53                   	push   %ebx
    6a93:	8b 7c 24 10          	mov    0x10(%esp),%edi
    6a97:	e8 e4 d9 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6a9c:	81 c3 64 85 04 00    	add    $0x48564,%ebx
    6aa2:	8d b3 04 33 05 00    	lea    0x53304(%ebx),%esi
    6aa8:	eb 19                	jmp    6ac3 <i8259_raise_intr+0x33>
    6aaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6ab0:	8b 06                	mov    (%esi),%eax
    6ab2:	85 c0                	test   %eax,%eax
    6ab4:	74 60                	je     6b16 <i8259_raise_intr+0x86>
    6ab6:	83 ec 0c             	sub    $0xc,%esp
    6ab9:	6a 01                	push   $0x1
    6abb:	e8 40 d6 ff ff       	call   4100 <SDL_Delay@plt>
    6ac0:	83 c4 10             	add    $0x10,%esp
    6ac3:	83 ec 0c             	sub    $0xc,%esp
    6ac6:	ff b3 fc 23 00 00    	pushl  0x23fc(%ebx)
    6acc:	e8 5f d5 ff ff       	call   4030 <SDL_mutexP@plt>
    6ad1:	83 c4 10             	add    $0x10,%esp
    6ad4:	85 c0                	test   %eax,%eax
    6ad6:	75 d8                	jne    6ab0 <i8259_raise_intr+0x20>
    6ad8:	0f b6 83 00 05 00 00 	movzbl 0x500(%ebx),%eax
    6adf:	3c ff                	cmp    $0xff,%al
    6ae1:	74 0c                	je     6aef <i8259_raise_intr+0x5f>
    6ae3:	89 f9                	mov    %edi,%ecx
    6ae5:	83 e8 1f             	sub    $0x1f,%eax
    6ae8:	0f b6 d1             	movzbl %cl,%edx
    6aeb:	39 d0                	cmp    %edx,%eax
    6aed:	7f 09                	jg     6af8 <i8259_raise_intr+0x68>
    6aef:	8d 47 20             	lea    0x20(%edi),%eax
    6af2:	88 83 00 05 00 00    	mov    %al,0x500(%ebx)
    6af8:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
    6afe:	83 ec 0c             	sub    $0xc,%esp
    6b01:	c6 80 a0 00 00 00 01 	movb   $0x1,0xa0(%eax)
    6b08:	ff b3 fc 23 00 00    	pushl  0x23fc(%ebx)
    6b0e:	e8 7d d7 ff ff       	call   4290 <SDL_mutexV@plt>
    6b13:	83 c4 10             	add    $0x10,%esp
    6b16:	5b                   	pop    %ebx
    6b17:	5e                   	pop    %esi
    6b18:	5f                   	pop    %edi
    6b19:	c3                   	ret    
    6b1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00006b20 <i8259_ack_intr>:
    6b20:	56                   	push   %esi
    6b21:	53                   	push   %ebx
    6b22:	e8 59 d9 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6b27:	81 c3 d9 84 04 00    	add    $0x484d9,%ebx
    6b2d:	83 ec 04             	sub    $0x4,%esp
    6b30:	8d b3 04 33 05 00    	lea    0x53304(%ebx),%esi
    6b36:	eb 1b                	jmp    6b53 <i8259_ack_intr+0x33>
    6b38:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6b3f:	90                   	nop
    6b40:	8b 06                	mov    (%esi),%eax
    6b42:	85 c0                	test   %eax,%eax
    6b44:	74 47                	je     6b8d <i8259_ack_intr+0x6d>
    6b46:	83 ec 0c             	sub    $0xc,%esp
    6b49:	6a 01                	push   $0x1
    6b4b:	e8 b0 d5 ff ff       	call   4100 <SDL_Delay@plt>
    6b50:	83 c4 10             	add    $0x10,%esp
    6b53:	83 ec 0c             	sub    $0xc,%esp
    6b56:	ff b3 fc 23 00 00    	pushl  0x23fc(%ebx)
    6b5c:	e8 cf d4 ff ff       	call   4030 <SDL_mutexP@plt>
    6b61:	83 c4 10             	add    $0x10,%esp
    6b64:	85 c0                	test   %eax,%eax
    6b66:	75 d8                	jne    6b40 <i8259_ack_intr+0x20>
    6b68:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
    6b6e:	83 ec 0c             	sub    $0xc,%esp
    6b71:	c6 83 00 05 00 00 ff 	movb   $0xff,0x500(%ebx)
    6b78:	c6 80 a0 00 00 00 00 	movb   $0x0,0xa0(%eax)
    6b7f:	ff b3 fc 23 00 00    	pushl  0x23fc(%ebx)
    6b85:	e8 06 d7 ff ff       	call   4290 <SDL_mutexV@plt>
    6b8a:	83 c4 10             	add    $0x10,%esp
    6b8d:	83 c4 04             	add    $0x4,%esp
    6b90:	5b                   	pop    %ebx
    6b91:	5e                   	pop    %esi
    6b92:	c3                   	ret    
    6b93:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6b9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00006ba0 <i8259_init>:
    6ba0:	53                   	push   %ebx
    6ba1:	e8 da d8 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6ba6:	81 c3 5a 84 04 00    	add    $0x4845a,%ebx
    6bac:	83 ec 08             	sub    $0x8,%esp
    6baf:	e8 9c d6 ff ff       	call   4250 <SDL_CreateMutex@plt>
    6bb4:	c6 83 00 05 00 00 ff 	movb   $0xff,0x500(%ebx)
    6bbb:	89 83 fc 23 00 00    	mov    %eax,0x23fc(%ebx)
    6bc1:	85 c0                	test   %eax,%eax
    6bc3:	74 05                	je     6bca <i8259_init+0x2a>
    6bc5:	83 c4 08             	add    $0x8,%esp
    6bc8:	5b                   	pop    %ebx
    6bc9:	c3                   	ret    
    6bca:	8d 83 18 5b fe ff    	lea    -0x1a4e8(%ebx),%eax
    6bd0:	50                   	push   %eax
    6bd1:	8d 83 f4 5a fe ff    	lea    -0x1a50c(%ebx),%eax
    6bd7:	6a 3a                	push   $0x3a
    6bd9:	50                   	push   %eax
    6bda:	8d 83 0b 5b fe ff    	lea    -0x1a4f5(%ebx),%eax
    6be0:	50                   	push   %eax
    6be1:	e8 2a d7 ff ff       	call   4310 <__assert_fail@plt>
    6be6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6bed:	8d 76 00             	lea    0x0(%esi),%esi

00006bf0 <i8259_destroy>:
    6bf0:	53                   	push   %ebx
    6bf1:	e8 8a d8 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6bf6:	81 c3 0a 84 04 00    	add    $0x4840a,%ebx
    6bfc:	83 ec 14             	sub    $0x14,%esp
    6bff:	ff b3 fc 23 00 00    	pushl  0x23fc(%ebx)
    6c05:	e8 d6 d5 ff ff       	call   41e0 <SDL_DestroyMutex@plt>
    6c0a:	83 c4 18             	add    $0x18,%esp
    6c0d:	5b                   	pop    %ebx
    6c0e:	c3                   	ret    
    6c0f:	90                   	nop

00006c10 <pio_write>:
    6c10:	55                   	push   %ebp
    6c11:	57                   	push   %edi
    6c12:	56                   	push   %esi
    6c13:	53                   	push   %ebx
    6c14:	e8 67 d8 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6c19:	81 c3 e7 83 04 00    	add    $0x483e7,%ebx
    6c1f:	83 ec 2c             	sub    $0x2c,%esp
    6c22:	8b 7c 24 44          	mov    0x44(%esp),%edi
    6c26:	8b 54 24 40          	mov    0x40(%esp),%edx
    6c2a:	8b 44 24 48          	mov    0x48(%esp),%eax
    6c2e:	8d 4f ff             	lea    -0x1(%edi),%ecx
    6c31:	89 d6                	mov    %edx,%esi
    6c33:	83 f9 01             	cmp    $0x1,%ecx
    6c36:	76 09                	jbe    6c41 <pio_write+0x31>
    6c38:	83 ff 04             	cmp    $0x4,%edi
    6c3b:	0f 85 a7 00 00 00    	jne    6ce8 <pio_write+0xd8>
    6c41:	0f b7 ea             	movzwl %dx,%ebp
    6c44:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    6c48:	8d 4c 24 1c          	lea    0x1c(%esp),%ecx
    6c4c:	83 ec 04             	sub    $0x4,%esp
    6c4f:	89 54 24 10          	mov    %edx,0x10(%esp)
    6c53:	8d 84 2b 00 24 00 00 	lea    0x2400(%ebx,%ebp,1),%eax
    6c5a:	57                   	push   %edi
    6c5b:	51                   	push   %ecx
    6c5c:	50                   	push   %eax
    6c5d:	e8 2e d4 ff ff       	call   4090 <memcpy@plt>
    6c62:	83 c4 10             	add    $0x10,%esp
    6c65:	8b 54 24 0c          	mov    0xc(%esp),%edx
    6c69:	66 81 fa f0 01       	cmp    $0x1f0,%dx
    6c6e:	74 45                	je     6cb5 <pio_write+0xa5>
    6c70:	ba f1 01 00 00       	mov    $0x1f1,%edx
    6c75:	b8 01 00 00 00       	mov    $0x1,%eax
    6c7a:	eb 14                	jmp    6c90 <pio_write+0x80>
    6c7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6c80:	83 c0 01             	add    $0x1,%eax
    6c83:	83 f8 15             	cmp    $0x15,%eax
    6c86:	74 35                	je     6cbd <pio_write+0xad>
    6c88:	0f b7 94 c3 20 fe ff 	movzwl -0x1e0(%ebx,%eax,8),%edx
    6c8f:	ff 
    6c90:	66 39 d6             	cmp    %dx,%si
    6c93:	75 eb                	jne    6c80 <pio_write+0x70>
    6c95:	8b 84 c3 24 fe ff ff 	mov    -0x1dc(%ebx,%eax,8),%eax
    6c9c:	89 7c 24 44          	mov    %edi,0x44(%esp)
    6ca0:	89 6c 24 40          	mov    %ebp,0x40(%esp)
    6ca4:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%esp)
    6cab:	00 
    6cac:	83 c4 2c             	add    $0x2c,%esp
    6caf:	5b                   	pop    %ebx
    6cb0:	5e                   	pop    %esi
    6cb1:	5f                   	pop    %edi
    6cb2:	5d                   	pop    %ebp
    6cb3:	ff e0                	jmp    *%eax
    6cb5:	8d 83 f0 73 fb ff    	lea    -0x48c10(%ebx),%eax
    6cbb:	eb df                	jmp    6c9c <pio_write+0x8c>
    6cbd:	50                   	push   %eax
    6cbe:	8d 83 60 5b fe ff    	lea    -0x1a4a0(%ebx),%eax
    6cc4:	55                   	push   %ebp
    6cc5:	55                   	push   %ebp
    6cc6:	50                   	push   %eax
    6cc7:	e8 94 d5 ff ff       	call   4260 <printf@plt>
    6ccc:	8d 83 b8 5b fe ff    	lea    -0x1a448(%ebx),%eax
    6cd2:	50                   	push   %eax
    6cd3:	8d 83 23 5b fe ff    	lea    -0x1a4dd(%ebx),%eax
    6cd9:	6a 61                	push   $0x61
    6cdb:	50                   	push   %eax
    6cdc:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
    6ce2:	50                   	push   %eax
    6ce3:	e8 28 d6 ff ff       	call   4310 <__assert_fail@plt>
    6ce8:	8d 83 b8 5b fe ff    	lea    -0x1a448(%ebx),%eax
    6cee:	50                   	push   %eax
    6cef:	8d 83 23 5b fe ff    	lea    -0x1a4dd(%ebx),%eax
    6cf5:	6a 53                	push   $0x53
    6cf7:	50                   	push   %eax
    6cf8:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
    6cfe:	50                   	push   %eax
    6cff:	e8 0c d6 ff ff       	call   4310 <__assert_fail@plt>
    6d04:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6d0b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6d0f:	90                   	nop

00006d10 <pio_read>:
    6d10:	57                   	push   %edi
    6d11:	56                   	push   %esi
    6d12:	53                   	push   %ebx
    6d13:	e8 68 d7 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6d18:	81 c3 e8 82 04 00    	add    $0x482e8,%ebx
    6d1e:	83 ec 10             	sub    $0x10,%esp
    6d21:	8b 7c 24 24          	mov    0x24(%esp),%edi
    6d25:	8b 74 24 20          	mov    0x20(%esp),%esi
    6d29:	8d 47 ff             	lea    -0x1(%edi),%eax
    6d2c:	89 f1                	mov    %esi,%ecx
    6d2e:	83 f8 01             	cmp    $0x1,%eax
    6d31:	76 09                	jbe    6d3c <pio_read+0x2c>
    6d33:	83 ff 04             	cmp    $0x4,%edi
    6d36:	0f 85 9b 00 00 00    	jne    6dd7 <pio_read+0xc7>
    6d3c:	66 81 fe f0 01       	cmp    $0x1f0,%si
    6d41:	74 5e                	je     6da1 <pio_read+0x91>
    6d43:	ba f1 01 00 00       	mov    $0x1f1,%edx
    6d48:	b8 01 00 00 00       	mov    $0x1,%eax
    6d4d:	eb 11                	jmp    6d60 <pio_read+0x50>
    6d4f:	90                   	nop
    6d50:	83 c0 01             	add    $0x1,%eax
    6d53:	83 f8 15             	cmp    $0x15,%eax
    6d56:	74 51                	je     6da9 <pio_read+0x99>
    6d58:	0f b7 94 c3 20 fe ff 	movzwl -0x1e0(%ebx,%eax,8),%edx
    6d5f:	ff 
    6d60:	66 39 ca             	cmp    %cx,%dx
    6d63:	75 eb                	jne    6d50 <pio_read+0x40>
    6d65:	8b 84 c3 24 fe ff ff 	mov    -0x1dc(%ebx,%eax,8),%eax
    6d6c:	83 ec 04             	sub    $0x4,%esp
    6d6f:	0f b7 f6             	movzwl %si,%esi
    6d72:	6a 00                	push   $0x0
    6d74:	57                   	push   %edi
    6d75:	56                   	push   %esi
    6d76:	ff d0                	call   *%eax
    6d78:	8d 94 33 00 24 00 00 	lea    0x2400(%ebx,%esi,1),%edx
    6d7f:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    6d83:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
    6d8a:	00 
    6d8b:	83 c4 0c             	add    $0xc,%esp
    6d8e:	57                   	push   %edi
    6d8f:	52                   	push   %edx
    6d90:	50                   	push   %eax
    6d91:	e8 fa d2 ff ff       	call   4090 <memcpy@plt>
    6d96:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    6d9a:	83 c4 20             	add    $0x20,%esp
    6d9d:	5b                   	pop    %ebx
    6d9e:	5e                   	pop    %esi
    6d9f:	5f                   	pop    %edi
    6da0:	c3                   	ret    
    6da1:	8d 83 f0 73 fb ff    	lea    -0x48c10(%ebx),%eax
    6da7:	eb c3                	jmp    6d6c <pio_read+0x5c>
    6da9:	0f b7 f6             	movzwl %si,%esi
    6dac:	50                   	push   %eax
    6dad:	8d 83 88 5b fe ff    	lea    -0x1a478(%ebx),%eax
    6db3:	56                   	push   %esi
    6db4:	56                   	push   %esi
    6db5:	50                   	push   %eax
    6db6:	e8 a5 d4 ff ff       	call   4260 <printf@plt>
    6dbb:	8d 83 ac 5b fe ff    	lea    -0x1a454(%ebx),%eax
    6dc1:	50                   	push   %eax
    6dc2:	8d 83 23 5b fe ff    	lea    -0x1a4dd(%ebx),%eax
    6dc8:	6a 76                	push   $0x76
    6dca:	50                   	push   %eax
    6dcb:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
    6dd1:	50                   	push   %eax
    6dd2:	e8 39 d5 ff ff       	call   4310 <__assert_fail@plt>
    6dd7:	8d 83 ac 5b fe ff    	lea    -0x1a454(%ebx),%eax
    6ddd:	50                   	push   %eax
    6dde:	8d 83 23 5b fe ff    	lea    -0x1a4dd(%ebx),%eax
    6de4:	6a 68                	push   $0x68
    6de6:	50                   	push   %eax
    6de7:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
    6ded:	50                   	push   %eax
    6dee:	e8 1d d5 ff ff       	call   4310 <__assert_fail@plt>
    6df3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6dfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00006e00 <write_io_port>:
    6e00:	53                   	push   %ebx
    6e01:	e8 7a d6 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6e06:	81 c3 fa 81 04 00    	add    $0x481fa,%ebx
    6e0c:	83 ec 08             	sub    $0x8,%esp
    6e0f:	0f b7 44 24 10       	movzwl 0x10(%esp),%eax
    6e14:	8d 54 24 18          	lea    0x18(%esp),%edx
    6e18:	83 ec 04             	sub    $0x4,%esp
    6e1b:	ff 74 24 18          	pushl  0x18(%esp)
    6e1f:	52                   	push   %edx
    6e20:	8d 84 03 00 24 00 00 	lea    0x2400(%ebx,%eax,1),%eax
    6e27:	50                   	push   %eax
    6e28:	e8 63 d2 ff ff       	call   4090 <memcpy@plt>
    6e2d:	83 c4 18             	add    $0x18,%esp
    6e30:	5b                   	pop    %ebx
    6e31:	c3                   	ret    
    6e32:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6e39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006e40 <read_io_port>:
    6e40:	53                   	push   %ebx
    6e41:	e8 3a d6 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6e46:	81 c3 ba 81 04 00    	add    $0x481ba,%ebx
    6e4c:	83 ec 18             	sub    $0x18,%esp
    6e4f:	0f b7 54 24 20       	movzwl 0x20(%esp),%edx
    6e54:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    6e5b:	00 
    6e5c:	8d 44 24 0c          	lea    0xc(%esp),%eax
    6e60:	83 ec 04             	sub    $0x4,%esp
    6e63:	ff 74 24 28          	pushl  0x28(%esp)
    6e67:	8d 94 13 00 24 00 00 	lea    0x2400(%ebx,%edx,1),%edx
    6e6e:	52                   	push   %edx
    6e6f:	50                   	push   %eax
    6e70:	e8 1b d2 ff ff       	call   4090 <memcpy@plt>
    6e75:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    6e79:	83 c4 28             	add    $0x28,%esp
    6e7c:	5b                   	pop    %ebx
    6e7d:	c3                   	ret    
    6e7e:	66 90                	xchg   %ax,%ax

00006e80 <add_mmio_map>:
    6e80:	e8 f0 d6 ff ff       	call   4575 <__x86.get_pc_thunk.dx>
    6e85:	81 c2 7b 81 04 00    	add    $0x4817b,%edx
    6e8b:	55                   	push   %ebp
    6e8c:	57                   	push   %edi
    6e8d:	56                   	push   %esi
    6e8e:	53                   	push   %ebx
    6e8f:	83 ec 0c             	sub    $0xc,%esp
    6e92:	8b 8a 00 24 01 00    	mov    0x12400(%edx),%ecx
    6e98:	8b 6c 24 20          	mov    0x20(%esp),%ebp
    6e9c:	8b 74 24 24          	mov    0x24(%esp),%esi
    6ea0:	83 f9 07             	cmp    $0x7,%ecx
    6ea3:	7f 53                	jg     6ef8 <add_mmio_map+0x78>
    6ea5:	8b 82 a0 24 01 00    	mov    0x124a0(%edx),%eax
    6eab:	8d 3c 30             	lea    (%eax,%esi,1),%edi
    6eae:	81 ff 00 00 04 00    	cmp    $0x40000,%edi
    6eb4:	77 60                	ja     6f16 <add_mmio_map+0x96>
    6eb6:	89 cb                	mov    %ecx,%ebx
    6eb8:	8d 74 35 ff          	lea    -0x1(%ebp,%esi,1),%esi
    6ebc:	83 c1 01             	add    $0x1,%ecx
    6ebf:	89 ba a0 24 01 00    	mov    %edi,0x124a0(%edx)
    6ec5:	c1 e3 04             	shl    $0x4,%ebx
    6ec8:	8d 84 02 c0 24 01 00 	lea    0x124c0(%edx,%eax,1),%eax
    6ecf:	89 8a 00 24 01 00    	mov    %ecx,0x12400(%edx)
    6ed5:	89 ac 1a 20 24 01 00 	mov    %ebp,0x12420(%edx,%ebx,1)
    6edc:	8d 9c 1a 20 24 01 00 	lea    0x12420(%edx,%ebx,1),%ebx
    6ee3:	89 73 04             	mov    %esi,0x4(%ebx)
    6ee6:	8b 74 24 28          	mov    0x28(%esp),%esi
    6eea:	89 43 08             	mov    %eax,0x8(%ebx)
    6eed:	89 73 0c             	mov    %esi,0xc(%ebx)
    6ef0:	83 c4 0c             	add    $0xc,%esp
    6ef3:	5b                   	pop    %ebx
    6ef4:	5e                   	pop    %esi
    6ef5:	5f                   	pop    %edi
    6ef6:	5d                   	pop    %ebp
    6ef7:	c3                   	ret    
    6ef8:	8d 82 38 5c fe ff    	lea    -0x1a3c8(%edx),%eax
    6efe:	89 d3                	mov    %edx,%ebx
    6f00:	50                   	push   %eax
    6f01:	8d 82 c2 5b fe ff    	lea    -0x1a43e(%edx),%eax
    6f07:	6a 17                	push   $0x17
    6f09:	50                   	push   %eax
    6f0a:	8d 82 d8 5b fe ff    	lea    -0x1a428(%edx),%eax
    6f10:	50                   	push   %eax
    6f11:	e8 fa d3 ff ff       	call   4310 <__assert_fail@plt>
    6f16:	8d 82 38 5c fe ff    	lea    -0x1a3c8(%edx),%eax
    6f1c:	89 d3                	mov    %edx,%ebx
    6f1e:	50                   	push   %eax
    6f1f:	8d 82 c2 5b fe ff    	lea    -0x1a43e(%edx),%eax
    6f25:	6a 18                	push   $0x18
    6f27:	50                   	push   %eax
    6f28:	8d 82 f0 5b fe ff    	lea    -0x1a410(%edx),%eax
    6f2e:	50                   	push   %eax
    6f2f:	e8 dc d3 ff ff       	call   4310 <__assert_fail@plt>
    6f34:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6f3b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6f3f:	90                   	nop

00006f40 <clear_mmio_map>:
    6f40:	e8 92 f3 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    6f45:	05 bb 80 04 00       	add    $0x480bb,%eax
    6f4a:	c7 80 00 24 01 00 00 	movl   $0x0,0x12400(%eax)
    6f51:	00 00 00 
    6f54:	c7 80 a0 24 01 00 00 	movl   $0x0,0x124a0(%eax)
    6f5b:	00 00 00 
    6f5e:	c3                   	ret    
    6f5f:	90                   	nop

00006f60 <is_mmio>:
    6f60:	e8 72 f3 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    6f65:	05 9b 80 04 00       	add    $0x4809b,%eax
    6f6a:	53                   	push   %ebx
    6f6b:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    6f6f:	8b 98 00 24 01 00    	mov    0x12400(%eax),%ebx
    6f75:	85 db                	test   %ebx,%ebx
    6f77:	7e 22                	jle    6f9b <is_mmio+0x3b>
    6f79:	8d 90 20 24 01 00    	lea    0x12420(%eax),%edx
    6f7f:	31 c0                	xor    %eax,%eax
    6f81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6f88:	39 0a                	cmp    %ecx,(%edx)
    6f8a:	77 05                	ja     6f91 <is_mmio+0x31>
    6f8c:	39 4a 04             	cmp    %ecx,0x4(%edx)
    6f8f:	73 0f                	jae    6fa0 <is_mmio+0x40>
    6f91:	83 c0 01             	add    $0x1,%eax
    6f94:	83 c2 10             	add    $0x10,%edx
    6f97:	39 d8                	cmp    %ebx,%eax
    6f99:	75 ed                	jne    6f88 <is_mmio+0x28>
    6f9b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6fa0:	5b                   	pop    %ebx
    6fa1:	c3                   	ret    
    6fa2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6fa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006fb0 <mmio_read>:
    6fb0:	55                   	push   %ebp
    6fb1:	57                   	push   %edi
    6fb2:	56                   	push   %esi
    6fb3:	53                   	push   %ebx
    6fb4:	e8 c7 d4 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    6fb9:	81 c3 47 80 04 00    	add    $0x48047,%ebx
    6fbf:	83 ec 14             	sub    $0x14,%esp
    6fc2:	8b 74 24 30          	mov    0x30(%esp),%esi
    6fc6:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
    6fca:	8b 7c 24 28          	mov    0x28(%esp),%edi
    6fce:	56                   	push   %esi
    6fcf:	8d 83 e8 5b fe ff    	lea    -0x1a418(%ebx),%eax
    6fd5:	50                   	push   %eax
    6fd6:	e8 85 d2 ff ff       	call   4260 <printf@plt>
    6fdb:	8d 45 ff             	lea    -0x1(%ebp),%eax
    6fde:	83 c4 10             	add    $0x10,%esp
    6fe1:	83 f8 01             	cmp    $0x1,%eax
    6fe4:	76 05                	jbe    6feb <mmio_read+0x3b>
    6fe6:	83 fd 04             	cmp    $0x4,%ebp
    6fe9:	75 40                	jne    702b <mmio_read+0x7b>
    6feb:	c1 e6 04             	shl    $0x4,%esi
    6fee:	89 f8                	mov    %edi,%eax
    6ff0:	b9 04 00 00 00       	mov    $0x4,%ecx
    6ff5:	83 ec 04             	sub    $0x4,%esp
    6ff8:	8d 94 33 20 24 01 00 	lea    0x12420(%ebx,%esi,1),%edx
    6fff:	2b 84 33 20 24 01 00 	sub    0x12420(%ebx,%esi,1),%eax
    7006:	29 e9                	sub    %ebp,%ecx
    7008:	be ff ff ff ff       	mov    $0xffffffff,%esi
    700d:	89 c3                	mov    %eax,%ebx
    700f:	8b 42 08             	mov    0x8(%edx),%eax
    7012:	c1 e1 03             	shl    $0x3,%ecx
    7015:	d3 ee                	shr    %cl,%esi
    7017:	23 34 18             	and    (%eax,%ebx,1),%esi
    701a:	6a 00                	push   $0x0
    701c:	55                   	push   %ebp
    701d:	57                   	push   %edi
    701e:	ff 52 0c             	call   *0xc(%edx)
    7021:	89 f0                	mov    %esi,%eax
    7023:	83 c4 1c             	add    $0x1c,%esp
    7026:	5b                   	pop    %ebx
    7027:	5e                   	pop    %esi
    7028:	5f                   	pop    %edi
    7029:	5d                   	pop    %ebp
    702a:	c3                   	ret    
    702b:	8d 83 2c 5c fe ff    	lea    -0x1a3d4(%ebx),%eax
    7031:	50                   	push   %eax
    7032:	8d 83 c2 5b fe ff    	lea    -0x1a43e(%ebx),%eax
    7038:	6a 3b                	push   $0x3b
    703a:	50                   	push   %eax
    703b:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
    7041:	50                   	push   %eax
    7042:	e8 c9 d2 ff ff       	call   4310 <__assert_fail@plt>
    7047:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    704e:	66 90                	xchg   %ax,%ax

00007050 <mmio_write>:
    7050:	55                   	push   %ebp
    7051:	57                   	push   %edi
    7052:	56                   	push   %esi
    7053:	53                   	push   %ebx
    7054:	e8 27 d4 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    7059:	81 c3 a7 7f 04 00    	add    $0x47fa7,%ebx
    705f:	83 ec 1c             	sub    $0x1c,%esp
    7062:	8b 54 24 34          	mov    0x34(%esp),%edx
    7066:	8b 7c 24 30          	mov    0x30(%esp),%edi
    706a:	8d 42 ff             	lea    -0x1(%edx),%eax
    706d:	83 f8 01             	cmp    $0x1,%eax
    7070:	76 05                	jbe    7077 <mmio_write+0x27>
    7072:	83 fa 04             	cmp    $0x4,%edx
    7075:	75 74                	jne    70eb <mmio_write+0x9b>
    7077:	b9 04 00 00 00       	mov    $0x4,%ecx
    707c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    7081:	89 fd                	mov    %edi,%ebp
    7083:	29 d1                	sub    %edx,%ecx
    7085:	c1 e1 03             	shl    $0x3,%ecx
    7088:	d3 e8                	shr    %cl,%eax
    708a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    708e:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    7092:	c1 e0 04             	shl    $0x4,%eax
    7095:	8b b4 03 28 24 01 00 	mov    0x12428(%ebx,%eax,1),%esi
    709c:	2b ac 03 20 24 01 00 	sub    0x12420(%ebx,%eax,1),%ebp
    70a3:	85 d2                	test   %edx,%edx
    70a5:	74 27                	je     70ce <mmio_write+0x7e>
    70a7:	8d 4c 24 0c          	lea    0xc(%esp),%ecx
    70ab:	01 ee                	add    %ebp,%esi
    70ad:	31 c0                	xor    %eax,%eax
    70af:	89 cd                	mov    %ecx,%ebp
    70b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    70b8:	80 7c 05 00 00       	cmpb   $0x0,0x0(%ebp,%eax,1)
    70bd:	74 08                	je     70c7 <mmio_write+0x77>
    70bf:	0f b6 4c 04 38       	movzbl 0x38(%esp,%eax,1),%ecx
    70c4:	88 0c 06             	mov    %cl,(%esi,%eax,1)
    70c7:	83 c0 01             	add    $0x1,%eax
    70ca:	39 d0                	cmp    %edx,%eax
    70cc:	75 ea                	jne    70b8 <mmio_write+0x68>
    70ce:	83 ec 04             	sub    $0x4,%esp
    70d1:	8b 44 24 40          	mov    0x40(%esp),%eax
    70d5:	6a 01                	push   $0x1
    70d7:	52                   	push   %edx
    70d8:	57                   	push   %edi
    70d9:	c1 e0 04             	shl    $0x4,%eax
    70dc:	ff 94 03 2c 24 01 00 	call   *0x1242c(%ebx,%eax,1)
    70e3:	83 c4 2c             	add    $0x2c,%esp
    70e6:	5b                   	pop    %ebx
    70e7:	5e                   	pop    %esi
    70e8:	5f                   	pop    %edi
    70e9:	5d                   	pop    %ebp
    70ea:	c3                   	ret    
    70eb:	8d 83 20 5c fe ff    	lea    -0x1a3e0(%ebx),%eax
    70f1:	50                   	push   %eax
    70f2:	8d 83 c2 5b fe ff    	lea    -0x1a43e(%ebx),%eax
    70f8:	6a 44                	push   $0x44
    70fa:	50                   	push   %eax
    70fb:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
    7101:	50                   	push   %eax
    7102:	e8 09 d2 ff ff       	call   4310 <__assert_fail@plt>
    7107:	66 90                	xchg   %ax,%ax
    7109:	66 90                	xchg   %ax,%ax
    710b:	66 90                	xchg   %ax,%ax
    710d:	66 90                	xchg   %ax,%ax
    710f:	90                   	nop

00007110 <raise_intr>:
    7110:	57                   	push   %edi
    7111:	56                   	push   %esi
    7112:	53                   	push   %ebx
    7113:	e8 68 d3 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    7118:	81 c3 e8 7e 04 00    	add    $0x47ee8,%ebx
    711e:	83 ec 08             	sub    $0x8,%esp
    7121:	6a 03                	push   $0x3
    7123:	0f b6 54 24 1c       	movzbl 0x1c(%esp),%edx
    7128:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
    712e:	8b 86 9c 00 00 00    	mov    0x9c(%esi),%eax
    7134:	8d 04 d0             	lea    (%eax,%edx,8),%eax
    7137:	50                   	push   %eax
    7138:	e8 63 76 01 00       	call   1e7a0 <segment_translate>
    713d:	89 04 24             	mov    %eax,(%esp)
    7140:	e8 8b 77 01 00       	call   1e8d0 <page_translate>
    7145:	03 83 d8 ff ff ff    	add    -0x28(%ebx),%eax
    714b:	ff 76 24             	pushl  0x24(%esi)
    714e:	89 c7                	mov    %eax,%edi
    7150:	8b 46 10             	mov    0x10(%esi),%eax
    7153:	6a 04                	push   $0x4
    7155:	6a 03                	push   $0x3
    7157:	83 e8 04             	sub    $0x4,%eax
    715a:	50                   	push   %eax
    715b:	89 46 10             	mov    %eax,0x10(%esi)
    715e:	e8 8d 7a 01 00       	call   1ebf0 <vaddr_write>
    7163:	8b 46 10             	mov    0x10(%esi),%eax
    7166:	0f b7 56 40          	movzwl 0x40(%esi),%edx
    716a:	83 c4 20             	add    $0x20,%esp
    716d:	83 e8 02             	sub    $0x2,%eax
    7170:	52                   	push   %edx
    7171:	6a 02                	push   $0x2
    7173:	6a 03                	push   $0x3
    7175:	50                   	push   %eax
    7176:	89 46 10             	mov    %eax,0x10(%esi)
    7179:	e8 72 7a 01 00       	call   1ebf0 <vaddr_write>
    717e:	8b 46 10             	mov    0x10(%esi),%eax
    7181:	ff 76 20             	pushl  0x20(%esi)
    7184:	6a 04                	push   $0x4
    7186:	83 e8 04             	sub    $0x4,%eax
    7189:	6a 03                	push   $0x3
    718b:	50                   	push   %eax
    718c:	89 46 10             	mov    %eax,0x10(%esi)
    718f:	e8 5c 7a 01 00       	call   1ebf0 <vaddr_write>
    7194:	0f b6 47 05          	movzbl 0x5(%edi),%eax
    7198:	83 c4 20             	add    $0x20,%esp
    719b:	83 e0 0f             	and    $0xf,%eax
    719e:	3c 0e                	cmp    $0xe,%al
    71a0:	74 2e                	je     71d0 <raise_intr+0xc0>
    71a2:	3c 0f                	cmp    $0xf,%al
    71a4:	74 1a                	je     71c0 <raise_intr+0xb0>
    71a6:	0f b7 47 06          	movzwl 0x6(%edi),%eax
    71aa:	0f b7 17             	movzwl (%edi),%edx
    71ad:	5b                   	pop    %ebx
    71ae:	c1 e0 10             	shl    $0x10,%eax
    71b1:	01 d0                	add    %edx,%eax
    71b3:	89 46 20             	mov    %eax,0x20(%esi)
    71b6:	5e                   	pop    %esi
    71b7:	5f                   	pop    %edi
    71b8:	c3                   	ret    
    71b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    71c0:	80 4e 25 02          	orb    $0x2,0x25(%esi)
    71c4:	eb e0                	jmp    71a6 <raise_intr+0x96>
    71c6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    71cd:	8d 76 00             	lea    0x0(%esi),%esi
    71d0:	80 66 25 fd          	andb   $0xfd,0x25(%esi)
    71d4:	eb d0                	jmp    71a6 <raise_intr+0x96>
    71d6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    71dd:	8d 76 00             	lea    0x0(%esi),%esi

000071e0 <raise_sw_intr>:
    71e0:	e8 f2 f0 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    71e5:	05 1b 7e 04 00       	add    $0x47e1b,%eax
    71ea:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
    71f0:	83 40 20 02          	addl   $0x2,0x20(%eax)
    71f4:	0f b6 44 24 04       	movzbl 0x4(%esp),%eax
    71f9:	89 44 24 04          	mov    %eax,0x4(%esp)
    71fd:	e9 0e ff ff ff       	jmp    7110 <raise_intr>
    7202:	66 90                	xchg   %ax,%ax
    7204:	66 90                	xchg   %ax,%ax
    7206:	66 90                	xchg   %ax,%ax
    7208:	66 90                	xchg   %ax,%ax
    720a:	66 90                	xchg   %ax,%ax
    720c:	66 90                	xchg   %ax,%ax
    720e:	66 90                	xchg   %ax,%ax

00007210 <fpu_test_add>:
    7210:	55                   	push   %ebp
    7211:	57                   	push   %edi
    7212:	56                   	push   %esi
    7213:	53                   	push   %ebx
    7214:	e8 67 d2 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    7219:	81 c3 e7 7d 04 00    	add    $0x47de7,%ebx
    721f:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    7225:	8d 44 24 30          	lea    0x30(%esp),%eax
    7229:	8d bc 24 c0 00 00 00 	lea    0xc0(%esp),%edi
    7230:	d9 83 f0 24 05 00    	flds   0x524f0(%ebx)
    7236:	d9 54 24 18          	fsts   0x18(%esp)
    723a:	d9 54 24 2c          	fsts   0x2c(%esp)
    723e:	d9 83 ec 24 05 00    	flds   0x524ec(%ebx)
    7244:	d9 5c 24 30          	fstps  0x30(%esp)
    7248:	d9 83 e8 24 05 00    	flds   0x524e8(%ebx)
    724e:	d9 5c 24 34          	fstps  0x34(%esp)
    7252:	d9 83 e4 24 05 00    	flds   0x524e4(%ebx)
    7258:	d9 5c 24 38          	fstps  0x38(%esp)
    725c:	d9 83 d8 24 05 00    	flds   0x524d8(%ebx)
    7262:	d9 5c 24 3c          	fstps  0x3c(%esp)
    7266:	d9 83 d4 24 05 00    	flds   0x524d4(%ebx)
    726c:	d9 5c 24 40          	fstps  0x40(%esp)
    7270:	d9 83 cc 24 05 00    	flds   0x524cc(%ebx)
    7276:	d9 5c 24 44          	fstps  0x44(%esp)
    727a:	d9 83 c8 24 05 00    	flds   0x524c8(%ebx)
    7280:	d9 5c 24 48          	fstps  0x48(%esp)
    7284:	d9 83 e0 24 05 00    	flds   0x524e0(%ebx)
    728a:	d9 5c 24 4c          	fstps  0x4c(%esp)
    728e:	d9 83 dc 24 05 00    	flds   0x524dc(%ebx)
    7294:	d9 5c 24 50          	fstps  0x50(%esp)
    7298:	d9 83 d0 24 05 00    	flds   0x524d0(%ebx)
    729e:	d9 5c 24 54          	fstps  0x54(%esp)
    72a2:	d9 83 c4 24 05 00    	flds   0x524c4(%ebx)
    72a8:	d9 5c 24 58          	fstps  0x58(%esp)
    72ac:	d9 83 c0 24 05 00    	flds   0x524c0(%ebx)
    72b2:	d9 5c 24 5c          	fstps  0x5c(%esp)
    72b6:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    72bd:	4b 
    72be:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    72c5:	3f 
    72c6:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    72cd:	3f 
    72ce:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    72d5:	3f 
    72d6:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    72dd:	3f 
    72de:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    72e5:	3f 
    72e6:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    72ed:	3f 
    72ee:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    72f5:	3f 
    72f6:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    72fd:	00 00 00 3f 
    7301:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    7308:	cd cc cc 3e 
    730c:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    7313:	9a 99 99 3e 
    7317:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    731e:	cd cc 4c 3e 
    7322:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    7329:	cd cc cc 3d 
    732d:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    7334:	cd cc cc bd 
    7338:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    733f:	cd cc 4c be 
    7343:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    734a:	9a 99 99 be 
    734e:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    7355:	cd cc cc be 
    7359:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    7360:	00 00 00 bf 
    7364:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    736b:	9a 99 19 bf 
    736f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    7376:	33 33 33 bf 
    737a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    7381:	cd cc 4c bf 
    7385:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    738c:	66 66 66 bf 
    7390:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    7397:	00 00 80 bf 
    739b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    73a2:	80 96 18 cb 
    73a6:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    73aa:	89 44 24 14          	mov    %eax,0x14(%esp)
    73ae:	d9 5c 24 10          	fstps  0x10(%esp)
    73b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    73b8:	d9 44 24 18          	flds   0x18(%esp)
    73bc:	8b 6c 24 10          	mov    0x10(%esp),%ebp
    73c0:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    73c4:	d9 5c 24 0c          	fstps  0xc(%esp)
    73c8:	eb 0f                	jmp    73d9 <fpu_test_add+0x1c9>
    73ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    73d0:	d9 06                	flds   (%esi)
    73d2:	83 c6 04             	add    $0x4,%esi
    73d5:	d9 5c 24 0c          	fstps  0xc(%esp)
    73d9:	83 ec 08             	sub    $0x8,%esp
    73dc:	55                   	push   %ebp
    73dd:	ff 74 24 18          	pushl  0x18(%esp)
    73e1:	e8 8a 94 00 00       	call   10870 <internal_float_add>
    73e6:	d9 44 24 1c          	flds   0x1c(%esp)
    73ea:	d8 44 24 20          	fadds  0x20(%esp)
    73ee:	d9 5c 24 1c          	fstps  0x1c(%esp)
    73f2:	83 c4 10             	add    $0x10,%esp
    73f5:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    73f9:	0f 85 ad 00 00 00    	jne    74ac <fpu_test_add+0x29c>
    73ff:	39 fe                	cmp    %edi,%esi
    7401:	75 cd                	jne    73d0 <fpu_test_add+0x1c0>
    7403:	8b 44 24 14          	mov    0x14(%esp),%eax
    7407:	39 f8                	cmp    %edi,%eax
    7409:	74 0f                	je     741a <fpu_test_add+0x20a>
    740b:	d9 00                	flds   (%eax)
    740d:	83 c0 04             	add    $0x4,%eax
    7410:	89 44 24 14          	mov    %eax,0x14(%esp)
    7414:	d9 5c 24 10          	fstps  0x10(%esp)
    7418:	eb 9e                	jmp    73b8 <fpu_test_add+0x1a8>
    741a:	83 ec 0c             	sub    $0xc,%esp
    741d:	bf 40 42 0f 00       	mov    $0xf4240,%edi
    7422:	6a 00                	push   $0x0
    7424:	e8 07 cd ff ff       	call   4130 <time@plt>
    7429:	89 04 24             	mov    %eax,(%esp)
    742c:	e8 5f cd ff ff       	call   4190 <srand@plt>
    7431:	83 c4 10             	add    $0x10,%esp
    7434:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7438:	e8 b3 cd ff ff       	call   41f0 <rand@plt>
    743d:	89 c6                	mov    %eax,%esi
    743f:	e8 ac cd ff ff       	call   41f0 <rand@plt>
    7444:	89 c5                	mov    %eax,%ebp
    7446:	89 f0                	mov    %esi,%eax
    7448:	c1 e8 10             	shr    $0x10,%eax
    744b:	66 25 80 7f          	and    $0x7f80,%ax
    744f:	66 3d 80 7f          	cmp    $0x7f80,%ax
    7453:	74 38                	je     748d <fpu_test_add+0x27d>
    7455:	89 e8                	mov    %ebp,%eax
    7457:	c1 e8 10             	shr    $0x10,%eax
    745a:	66 25 80 7f          	and    $0x7f80,%ax
    745e:	66 3d 80 7f          	cmp    $0x7f80,%ax
    7462:	74 29                	je     748d <fpu_test_add+0x27d>
    7464:	83 ec 08             	sub    $0x8,%esp
    7467:	56                   	push   %esi
    7468:	55                   	push   %ebp
    7469:	e8 02 94 00 00       	call   10870 <internal_float_add>
    746e:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    7472:	d9 44 24 1c          	flds   0x1c(%esp)
    7476:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
    747a:	d9 44 24 1c          	flds   0x1c(%esp)
    747e:	de c1                	faddp  %st,%st(1)
    7480:	d9 5c 24 1c          	fstps  0x1c(%esp)
    7484:	83 c4 10             	add    $0x10,%esp
    7487:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    748b:	75 3b                	jne    74c8 <fpu_test_add+0x2b8>
    748d:	83 ef 01             	sub    $0x1,%edi
    7490:	75 a6                	jne    7438 <fpu_test_add+0x228>
    7492:	83 ec 0c             	sub    $0xc,%esp
    7495:	8d 83 e4 74 fe ff    	lea    -0x18b1c(%ebx),%eax
    749b:	50                   	push   %eax
    749c:	e8 0f ce ff ff       	call   42b0 <puts@plt>
    74a1:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    74a7:	5b                   	pop    %ebx
    74a8:	5e                   	pop    %esi
    74a9:	5f                   	pop    %edi
    74aa:	5d                   	pop    %ebp
    74ab:	c3                   	ret    
    74ac:	8d 83 dc 5c fe ff    	lea    -0x1a324(%ebx),%eax
    74b2:	50                   	push   %eax
    74b3:	6a 1b                	push   $0x1b
    74b5:	8d 83 45 5c fe ff    	lea    -0x1a3bb(%ebx),%eax
    74bb:	50                   	push   %eax
    74bc:	8d 83 5d 5c fe ff    	lea    -0x1a3a3(%ebx),%eax
    74c2:	50                   	push   %eax
    74c3:	e8 48 ce ff ff       	call   4310 <__assert_fail@plt>
    74c8:	8d 83 dc 5c fe ff    	lea    -0x1a324(%ebx),%eax
    74ce:	50                   	push   %eax
    74cf:	6a 28                	push   $0x28
    74d1:	eb e2                	jmp    74b5 <fpu_test_add+0x2a5>
    74d3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    74da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000074e0 <fpu_test_sub>:
    74e0:	55                   	push   %ebp
    74e1:	57                   	push   %edi
    74e2:	56                   	push   %esi
    74e3:	53                   	push   %ebx
    74e4:	e8 97 cf ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    74e9:	81 c3 17 7b 04 00    	add    $0x47b17,%ebx
    74ef:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    74f5:	8d 44 24 30          	lea    0x30(%esp),%eax
    74f9:	8d bc 24 c0 00 00 00 	lea    0xc0(%esp),%edi
    7500:	d9 83 f0 24 05 00    	flds   0x524f0(%ebx)
    7506:	d9 54 24 18          	fsts   0x18(%esp)
    750a:	d9 54 24 2c          	fsts   0x2c(%esp)
    750e:	d9 83 ec 24 05 00    	flds   0x524ec(%ebx)
    7514:	d9 5c 24 30          	fstps  0x30(%esp)
    7518:	d9 83 e8 24 05 00    	flds   0x524e8(%ebx)
    751e:	d9 5c 24 34          	fstps  0x34(%esp)
    7522:	d9 83 e4 24 05 00    	flds   0x524e4(%ebx)
    7528:	d9 5c 24 38          	fstps  0x38(%esp)
    752c:	d9 83 d8 24 05 00    	flds   0x524d8(%ebx)
    7532:	d9 5c 24 3c          	fstps  0x3c(%esp)
    7536:	d9 83 d4 24 05 00    	flds   0x524d4(%ebx)
    753c:	d9 5c 24 40          	fstps  0x40(%esp)
    7540:	d9 83 cc 24 05 00    	flds   0x524cc(%ebx)
    7546:	d9 5c 24 44          	fstps  0x44(%esp)
    754a:	d9 83 c8 24 05 00    	flds   0x524c8(%ebx)
    7550:	d9 5c 24 48          	fstps  0x48(%esp)
    7554:	d9 83 e0 24 05 00    	flds   0x524e0(%ebx)
    755a:	d9 5c 24 4c          	fstps  0x4c(%esp)
    755e:	d9 83 dc 24 05 00    	flds   0x524dc(%ebx)
    7564:	d9 5c 24 50          	fstps  0x50(%esp)
    7568:	d9 83 d0 24 05 00    	flds   0x524d0(%ebx)
    756e:	d9 5c 24 54          	fstps  0x54(%esp)
    7572:	d9 83 c4 24 05 00    	flds   0x524c4(%ebx)
    7578:	d9 5c 24 58          	fstps  0x58(%esp)
    757c:	d9 83 c0 24 05 00    	flds   0x524c0(%ebx)
    7582:	d9 5c 24 5c          	fstps  0x5c(%esp)
    7586:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    758d:	4b 
    758e:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    7595:	3f 
    7596:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    759d:	3f 
    759e:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    75a5:	3f 
    75a6:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    75ad:	3f 
    75ae:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    75b5:	3f 
    75b6:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    75bd:	3f 
    75be:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    75c5:	3f 
    75c6:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    75cd:	00 00 00 3f 
    75d1:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    75d8:	cd cc cc 3e 
    75dc:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    75e3:	9a 99 99 3e 
    75e7:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    75ee:	cd cc 4c 3e 
    75f2:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    75f9:	cd cc cc 3d 
    75fd:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    7604:	cd cc cc bd 
    7608:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    760f:	cd cc 4c be 
    7613:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    761a:	9a 99 99 be 
    761e:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    7625:	cd cc cc be 
    7629:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    7630:	00 00 00 bf 
    7634:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    763b:	9a 99 19 bf 
    763f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    7646:	33 33 33 bf 
    764a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    7651:	cd cc 4c bf 
    7655:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    765c:	66 66 66 bf 
    7660:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    7667:	00 00 80 bf 
    766b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    7672:	80 96 18 cb 
    7676:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    767a:	89 44 24 14          	mov    %eax,0x14(%esp)
    767e:	d9 5c 24 10          	fstps  0x10(%esp)
    7682:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7688:	d9 44 24 18          	flds   0x18(%esp)
    768c:	8b 6c 24 10          	mov    0x10(%esp),%ebp
    7690:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    7694:	d9 5c 24 0c          	fstps  0xc(%esp)
    7698:	eb 0f                	jmp    76a9 <fpu_test_sub+0x1c9>
    769a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    76a0:	d9 06                	flds   (%esi)
    76a2:	83 c6 04             	add    $0x4,%esi
    76a5:	d9 5c 24 0c          	fstps  0xc(%esp)
    76a9:	83 ec 08             	sub    $0x8,%esp
    76ac:	55                   	push   %ebp
    76ad:	ff 74 24 18          	pushl  0x18(%esp)
    76b1:	e8 da 94 00 00       	call   10b90 <internal_float_sub>
    76b6:	d9 44 24 1c          	flds   0x1c(%esp)
    76ba:	d8 6c 24 20          	fsubrs 0x20(%esp)
    76be:	d9 5c 24 1c          	fstps  0x1c(%esp)
    76c2:	83 c4 10             	add    $0x10,%esp
    76c5:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    76c9:	0f 85 ad 00 00 00    	jne    777c <fpu_test_sub+0x29c>
    76cf:	39 fe                	cmp    %edi,%esi
    76d1:	75 cd                	jne    76a0 <fpu_test_sub+0x1c0>
    76d3:	8b 44 24 14          	mov    0x14(%esp),%eax
    76d7:	39 f8                	cmp    %edi,%eax
    76d9:	74 0f                	je     76ea <fpu_test_sub+0x20a>
    76db:	d9 00                	flds   (%eax)
    76dd:	83 c0 04             	add    $0x4,%eax
    76e0:	89 44 24 14          	mov    %eax,0x14(%esp)
    76e4:	d9 5c 24 10          	fstps  0x10(%esp)
    76e8:	eb 9e                	jmp    7688 <fpu_test_sub+0x1a8>
    76ea:	83 ec 0c             	sub    $0xc,%esp
    76ed:	bf 40 42 0f 00       	mov    $0xf4240,%edi
    76f2:	6a 00                	push   $0x0
    76f4:	e8 37 ca ff ff       	call   4130 <time@plt>
    76f9:	89 04 24             	mov    %eax,(%esp)
    76fc:	e8 8f ca ff ff       	call   4190 <srand@plt>
    7701:	83 c4 10             	add    $0x10,%esp
    7704:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7708:	e8 e3 ca ff ff       	call   41f0 <rand@plt>
    770d:	89 c6                	mov    %eax,%esi
    770f:	e8 dc ca ff ff       	call   41f0 <rand@plt>
    7714:	89 c5                	mov    %eax,%ebp
    7716:	89 f0                	mov    %esi,%eax
    7718:	c1 e8 10             	shr    $0x10,%eax
    771b:	66 25 80 7f          	and    $0x7f80,%ax
    771f:	66 3d 80 7f          	cmp    $0x7f80,%ax
    7723:	74 38                	je     775d <fpu_test_sub+0x27d>
    7725:	89 e8                	mov    %ebp,%eax
    7727:	c1 e8 10             	shr    $0x10,%eax
    772a:	66 25 80 7f          	and    $0x7f80,%ax
    772e:	66 3d 80 7f          	cmp    $0x7f80,%ax
    7732:	74 29                	je     775d <fpu_test_sub+0x27d>
    7734:	83 ec 08             	sub    $0x8,%esp
    7737:	56                   	push   %esi
    7738:	55                   	push   %ebp
    7739:	e8 52 94 00 00       	call   10b90 <internal_float_sub>
    773e:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    7742:	d9 44 24 1c          	flds   0x1c(%esp)
    7746:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
    774a:	d9 44 24 1c          	flds   0x1c(%esp)
    774e:	de e9                	fsubrp %st,%st(1)
    7750:	d9 5c 24 1c          	fstps  0x1c(%esp)
    7754:	83 c4 10             	add    $0x10,%esp
    7757:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    775b:	75 3b                	jne    7798 <fpu_test_sub+0x2b8>
    775d:	83 ef 01             	sub    $0x1,%edi
    7760:	75 a6                	jne    7708 <fpu_test_sub+0x228>
    7762:	83 ec 0c             	sub    $0xc,%esp
    7765:	8d 83 0c 75 fe ff    	lea    -0x18af4(%ebx),%eax
    776b:	50                   	push   %eax
    776c:	e8 3f cb ff ff       	call   42b0 <puts@plt>
    7771:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    7777:	5b                   	pop    %ebx
    7778:	5e                   	pop    %esi
    7779:	5f                   	pop    %edi
    777a:	5d                   	pop    %ebp
    777b:	c3                   	ret    
    777c:	8d 83 cc 5c fe ff    	lea    -0x1a334(%ebx),%eax
    7782:	50                   	push   %eax
    7783:	6a 40                	push   $0x40
    7785:	8d 83 45 5c fe ff    	lea    -0x1a3bb(%ebx),%eax
    778b:	50                   	push   %eax
    778c:	8d 83 5d 5c fe ff    	lea    -0x1a3a3(%ebx),%eax
    7792:	50                   	push   %eax
    7793:	e8 78 cb ff ff       	call   4310 <__assert_fail@plt>
    7798:	8d 83 cc 5c fe ff    	lea    -0x1a334(%ebx),%eax
    779e:	50                   	push   %eax
    779f:	6a 4d                	push   $0x4d
    77a1:	eb e2                	jmp    7785 <fpu_test_sub+0x2a5>
    77a3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    77aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000077b0 <fpu_test_div>:
    77b0:	55                   	push   %ebp
    77b1:	57                   	push   %edi
    77b2:	56                   	push   %esi
    77b3:	53                   	push   %ebx
    77b4:	e8 c7 cc ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    77b9:	81 c3 47 78 04 00    	add    $0x47847,%ebx
    77bf:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    77c5:	8d 44 24 30          	lea    0x30(%esp),%eax
    77c9:	8d 8c 24 c0 00 00 00 	lea    0xc0(%esp),%ecx
    77d0:	d9 83 f0 24 05 00    	flds   0x524f0(%ebx)
    77d6:	d9 54 24 18          	fsts   0x18(%esp)
    77da:	d9 54 24 2c          	fsts   0x2c(%esp)
    77de:	d9 83 ec 24 05 00    	flds   0x524ec(%ebx)
    77e4:	d9 5c 24 30          	fstps  0x30(%esp)
    77e8:	d9 83 e8 24 05 00    	flds   0x524e8(%ebx)
    77ee:	d9 5c 24 34          	fstps  0x34(%esp)
    77f2:	d9 83 e4 24 05 00    	flds   0x524e4(%ebx)
    77f8:	d9 5c 24 38          	fstps  0x38(%esp)
    77fc:	d9 83 d8 24 05 00    	flds   0x524d8(%ebx)
    7802:	d9 5c 24 3c          	fstps  0x3c(%esp)
    7806:	d9 83 d4 24 05 00    	flds   0x524d4(%ebx)
    780c:	d9 5c 24 40          	fstps  0x40(%esp)
    7810:	d9 83 cc 24 05 00    	flds   0x524cc(%ebx)
    7816:	d9 5c 24 44          	fstps  0x44(%esp)
    781a:	d9 83 c8 24 05 00    	flds   0x524c8(%ebx)
    7820:	d9 5c 24 48          	fstps  0x48(%esp)
    7824:	d9 83 e0 24 05 00    	flds   0x524e0(%ebx)
    782a:	d9 5c 24 4c          	fstps  0x4c(%esp)
    782e:	d9 83 dc 24 05 00    	flds   0x524dc(%ebx)
    7834:	d9 5c 24 50          	fstps  0x50(%esp)
    7838:	d9 83 d0 24 05 00    	flds   0x524d0(%ebx)
    783e:	d9 5c 24 54          	fstps  0x54(%esp)
    7842:	d9 83 c4 24 05 00    	flds   0x524c4(%ebx)
    7848:	d9 5c 24 58          	fstps  0x58(%esp)
    784c:	d9 83 c0 24 05 00    	flds   0x524c0(%ebx)
    7852:	d9 5c 24 5c          	fstps  0x5c(%esp)
    7856:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    785d:	4b 
    785e:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    7865:	3f 
    7866:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    786d:	3f 
    786e:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    7875:	3f 
    7876:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    787d:	3f 
    787e:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    7885:	3f 
    7886:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    788d:	3f 
    788e:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    7895:	3f 
    7896:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    789d:	00 00 00 3f 
    78a1:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    78a8:	cd cc cc 3e 
    78ac:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    78b3:	9a 99 99 3e 
    78b7:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    78be:	cd cc 4c 3e 
    78c2:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    78c9:	cd cc cc 3d 
    78cd:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    78d4:	cd cc cc bd 
    78d8:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    78df:	cd cc 4c be 
    78e3:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    78ea:	9a 99 99 be 
    78ee:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    78f5:	cd cc cc be 
    78f9:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    7900:	00 00 00 bf 
    7904:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    790b:	9a 99 19 bf 
    790f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    7916:	33 33 33 bf 
    791a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    7921:	cd cc 4c bf 
    7925:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    792c:	66 66 66 bf 
    7930:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    7937:	00 00 80 bf 
    793b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    7942:	80 96 18 cb 
    7946:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    794a:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    794e:	89 44 24 14          	mov    %eax,0x14(%esp)
    7952:	d9 5c 24 0c          	fstps  0xc(%esp)
    7956:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    795d:	8d 76 00             	lea    0x0(%esi),%esi
    7960:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
    7964:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    7968:	8b 44 24 18          	mov    0x18(%esp),%eax
    796c:	eb 07                	jmp    7975 <fpu_test_div+0x1c5>
    796e:	66 90                	xchg   %ax,%ax
    7970:	8b 07                	mov    (%edi),%eax
    7972:	83 c7 04             	add    $0x4,%edi
    7975:	89 44 24 08          	mov    %eax,0x8(%esp)
    7979:	d9 44 24 08          	flds   0x8(%esp)
    797d:	83 ec 08             	sub    $0x8,%esp
    7980:	d8 7c 24 14          	fdivrs 0x14(%esp)
    7984:	d9 5c 24 10          	fstps  0x10(%esp)
    7988:	8b 74 24 10          	mov    0x10(%esp),%esi
    798c:	55                   	push   %ebp
    798d:	50                   	push   %eax
    798e:	e8 ad 96 00 00       	call   11040 <internal_float_div>
    7993:	83 c4 10             	add    $0x10,%esp
    7996:	39 f0                	cmp    %esi,%eax
    7998:	74 0b                	je     79a5 <fpu_test_div+0x1f5>
    799a:	29 c6                	sub    %eax,%esi
    799c:	83 fe 01             	cmp    $0x1,%esi
    799f:	0f 85 dd 00 00 00    	jne    7a82 <fpu_test_div+0x2d2>
    79a5:	3b 7c 24 10          	cmp    0x10(%esp),%edi
    79a9:	75 c5                	jne    7970 <fpu_test_div+0x1c0>
    79ab:	8b 44 24 14          	mov    0x14(%esp),%eax
    79af:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    79b3:	39 c8                	cmp    %ecx,%eax
    79b5:	74 0f                	je     79c6 <fpu_test_div+0x216>
    79b7:	d9 00                	flds   (%eax)
    79b9:	83 c0 04             	add    $0x4,%eax
    79bc:	89 44 24 14          	mov    %eax,0x14(%esp)
    79c0:	d9 5c 24 0c          	fstps  0xc(%esp)
    79c4:	eb 9a                	jmp    7960 <fpu_test_div+0x1b0>
    79c6:	83 ec 0c             	sub    $0xc,%esp
    79c9:	be 40 42 0f 00       	mov    $0xf4240,%esi
    79ce:	6a 00                	push   $0x0
    79d0:	e8 5b c7 ff ff       	call   4130 <time@plt>
    79d5:	89 04 24             	mov    %eax,(%esp)
    79d8:	e8 b3 c7 ff ff       	call   4190 <srand@plt>
    79dd:	83 c4 10             	add    $0x10,%esp
    79e0:	eb 0f                	jmp    79f1 <fpu_test_div+0x241>
    79e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    79e8:	75 45                	jne    7a2f <fpu_test_div+0x27f>
    79ea:	dd d8                	fstp   %st(0)
    79ec:	83 ee 01             	sub    $0x1,%esi
    79ef:	74 77                	je     7a68 <fpu_test_div+0x2b8>
    79f1:	e8 fa c7 ff ff       	call   41f0 <rand@plt>
    79f6:	89 c7                	mov    %eax,%edi
    79f8:	e8 f3 c7 ff ff       	call   41f0 <rand@plt>
    79fd:	89 fa                	mov    %edi,%edx
    79ff:	c1 ea 10             	shr    $0x10,%edx
    7a02:	66 81 e2 80 7f       	and    $0x7f80,%dx
    7a07:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    7a0c:	74 de                	je     79ec <fpu_test_div+0x23c>
    7a0e:	89 c2                	mov    %eax,%edx
    7a10:	c1 ea 10             	shr    $0x10,%edx
    7a13:	66 81 e2 80 7f       	and    $0x7f80,%dx
    7a18:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
    7a1d:	74 cd                	je     79ec <fpu_test_div+0x23c>
    7a1f:	89 44 24 08          	mov    %eax,0x8(%esp)
    7a23:	d9 ee                	fldz   
    7a25:	d9 44 24 08          	flds   0x8(%esp)
    7a29:	db e9                	fucomi %st(1),%st
    7a2b:	dd d9                	fstp   %st(1)
    7a2d:	7b b9                	jnp    79e8 <fpu_test_div+0x238>
    7a2f:	89 7c 24 08          	mov    %edi,0x8(%esp)
    7a33:	d9 44 24 08          	flds   0x8(%esp)
    7a37:	83 ec 08             	sub    $0x8,%esp
    7a3a:	de f1                	fdivp  %st,%st(1)
    7a3c:	d9 5c 24 10          	fstps  0x10(%esp)
    7a40:	8b 6c 24 10          	mov    0x10(%esp),%ebp
    7a44:	57                   	push   %edi
    7a45:	50                   	push   %eax
    7a46:	e8 f5 95 00 00       	call   11040 <internal_float_div>
    7a4b:	83 c4 10             	add    $0x10,%esp
    7a4e:	39 e8                	cmp    %ebp,%eax
    7a50:	74 9a                	je     79ec <fpu_test_div+0x23c>
    7a52:	29 c5                	sub    %eax,%ebp
    7a54:	83 fd 01             	cmp    $0x1,%ebp
    7a57:	74 93                	je     79ec <fpu_test_div+0x23c>
    7a59:	8d 83 bc 5c fe ff    	lea    -0x1a344(%ebx),%eax
    7a5f:	50                   	push   %eax
    7a60:	6a 7a                	push   $0x7a
    7a62:	eb 27                	jmp    7a8b <fpu_test_div+0x2db>
    7a64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7a68:	83 ec 0c             	sub    $0xc,%esp
    7a6b:	8d 83 34 75 fe ff    	lea    -0x18acc(%ebx),%eax
    7a71:	50                   	push   %eax
    7a72:	e8 39 c8 ff ff       	call   42b0 <puts@plt>
    7a77:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    7a7d:	5b                   	pop    %ebx
    7a7e:	5e                   	pop    %esi
    7a7f:	5f                   	pop    %edi
    7a80:	5d                   	pop    %ebp
    7a81:	c3                   	ret    
    7a82:	8d 83 bc 5c fe ff    	lea    -0x1a344(%ebx),%eax
    7a88:	50                   	push   %eax
    7a89:	6a 6b                	push   $0x6b
    7a8b:	8d 83 45 5c fe ff    	lea    -0x1a3bb(%ebx),%eax
    7a91:	50                   	push   %eax
    7a92:	8d 83 74 5c fe ff    	lea    -0x1a38c(%ebx),%eax
    7a98:	50                   	push   %eax
    7a99:	e8 72 c8 ff ff       	call   4310 <__assert_fail@plt>
    7a9e:	66 90                	xchg   %ax,%ax

00007aa0 <fpu_test_mul>:
    7aa0:	55                   	push   %ebp
    7aa1:	57                   	push   %edi
    7aa2:	56                   	push   %esi
    7aa3:	53                   	push   %ebx
    7aa4:	e8 d7 c9 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    7aa9:	81 c3 57 75 04 00    	add    $0x47557,%ebx
    7aaf:	81 ec cc 00 00 00    	sub    $0xcc,%esp
    7ab5:	8d 44 24 30          	lea    0x30(%esp),%eax
    7ab9:	8d bc 24 c0 00 00 00 	lea    0xc0(%esp),%edi
    7ac0:	d9 83 f0 24 05 00    	flds   0x524f0(%ebx)
    7ac6:	d9 54 24 18          	fsts   0x18(%esp)
    7aca:	d9 54 24 2c          	fsts   0x2c(%esp)
    7ace:	d9 83 ec 24 05 00    	flds   0x524ec(%ebx)
    7ad4:	d9 5c 24 30          	fstps  0x30(%esp)
    7ad8:	d9 83 e8 24 05 00    	flds   0x524e8(%ebx)
    7ade:	d9 5c 24 34          	fstps  0x34(%esp)
    7ae2:	d9 83 e4 24 05 00    	flds   0x524e4(%ebx)
    7ae8:	d9 5c 24 38          	fstps  0x38(%esp)
    7aec:	d9 83 d8 24 05 00    	flds   0x524d8(%ebx)
    7af2:	d9 5c 24 3c          	fstps  0x3c(%esp)
    7af6:	d9 83 d4 24 05 00    	flds   0x524d4(%ebx)
    7afc:	d9 5c 24 40          	fstps  0x40(%esp)
    7b00:	d9 83 cc 24 05 00    	flds   0x524cc(%ebx)
    7b06:	d9 5c 24 44          	fstps  0x44(%esp)
    7b0a:	d9 83 c8 24 05 00    	flds   0x524c8(%ebx)
    7b10:	d9 5c 24 48          	fstps  0x48(%esp)
    7b14:	d9 83 e0 24 05 00    	flds   0x524e0(%ebx)
    7b1a:	d9 5c 24 4c          	fstps  0x4c(%esp)
    7b1e:	d9 83 dc 24 05 00    	flds   0x524dc(%ebx)
    7b24:	d9 5c 24 50          	fstps  0x50(%esp)
    7b28:	d9 83 d0 24 05 00    	flds   0x524d0(%ebx)
    7b2e:	d9 5c 24 54          	fstps  0x54(%esp)
    7b32:	d9 83 c4 24 05 00    	flds   0x524c4(%ebx)
    7b38:	d9 5c 24 58          	fstps  0x58(%esp)
    7b3c:	d9 83 c0 24 05 00    	flds   0x524c0(%ebx)
    7b42:	d9 5c 24 5c          	fstps  0x5c(%esp)
    7b46:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
    7b4d:	4b 
    7b4e:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
    7b55:	3f 
    7b56:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
    7b5d:	3f 
    7b5e:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
    7b65:	3f 
    7b66:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
    7b6d:	3f 
    7b6e:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
    7b75:	3f 
    7b76:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
    7b7d:	3f 
    7b7e:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
    7b85:	3f 
    7b86:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
    7b8d:	00 00 00 3f 
    7b91:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
    7b98:	cd cc cc 3e 
    7b9c:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
    7ba3:	9a 99 99 3e 
    7ba7:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
    7bae:	cd cc 4c 3e 
    7bb2:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
    7bb9:	cd cc cc 3d 
    7bbd:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
    7bc4:	cd cc cc bd 
    7bc8:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
    7bcf:	cd cc 4c be 
    7bd3:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
    7bda:	9a 99 99 be 
    7bde:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
    7be5:	cd cc cc be 
    7be9:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
    7bf0:	00 00 00 bf 
    7bf4:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
    7bfb:	9a 99 19 bf 
    7bff:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
    7c06:	33 33 33 bf 
    7c0a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
    7c11:	cd cc 4c bf 
    7c15:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
    7c1c:	66 66 66 bf 
    7c20:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
    7c27:	00 00 80 bf 
    7c2b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
    7c32:	80 96 18 cb 
    7c36:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    7c3a:	89 44 24 14          	mov    %eax,0x14(%esp)
    7c3e:	d9 5c 24 10          	fstps  0x10(%esp)
    7c42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7c48:	d9 44 24 18          	flds   0x18(%esp)
    7c4c:	8b 6c 24 10          	mov    0x10(%esp),%ebp
    7c50:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    7c54:	d9 5c 24 0c          	fstps  0xc(%esp)
    7c58:	eb 0f                	jmp    7c69 <fpu_test_mul+0x1c9>
    7c5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7c60:	d9 06                	flds   (%esi)
    7c62:	83 c6 04             	add    $0x4,%esi
    7c65:	d9 5c 24 0c          	fstps  0xc(%esp)
    7c69:	83 ec 08             	sub    $0x8,%esp
    7c6c:	55                   	push   %ebp
    7c6d:	ff 74 24 18          	pushl  0x18(%esp)
    7c71:	e8 aa 8f 00 00       	call   10c20 <internal_float_mul>
    7c76:	d9 44 24 1c          	flds   0x1c(%esp)
    7c7a:	d8 4c 24 20          	fmuls  0x20(%esp)
    7c7e:	d9 5c 24 1c          	fstps  0x1c(%esp)
    7c82:	83 c4 10             	add    $0x10,%esp
    7c85:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    7c89:	0f 85 ad 00 00 00    	jne    7d3c <fpu_test_mul+0x29c>
    7c8f:	39 fe                	cmp    %edi,%esi
    7c91:	75 cd                	jne    7c60 <fpu_test_mul+0x1c0>
    7c93:	8b 44 24 14          	mov    0x14(%esp),%eax
    7c97:	39 f8                	cmp    %edi,%eax
    7c99:	74 0f                	je     7caa <fpu_test_mul+0x20a>
    7c9b:	d9 00                	flds   (%eax)
    7c9d:	83 c0 04             	add    $0x4,%eax
    7ca0:	89 44 24 14          	mov    %eax,0x14(%esp)
    7ca4:	d9 5c 24 10          	fstps  0x10(%esp)
    7ca8:	eb 9e                	jmp    7c48 <fpu_test_mul+0x1a8>
    7caa:	83 ec 0c             	sub    $0xc,%esp
    7cad:	bf 40 42 0f 00       	mov    $0xf4240,%edi
    7cb2:	6a 00                	push   $0x0
    7cb4:	e8 77 c4 ff ff       	call   4130 <time@plt>
    7cb9:	89 04 24             	mov    %eax,(%esp)
    7cbc:	e8 cf c4 ff ff       	call   4190 <srand@plt>
    7cc1:	83 c4 10             	add    $0x10,%esp
    7cc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7cc8:	e8 23 c5 ff ff       	call   41f0 <rand@plt>
    7ccd:	89 c6                	mov    %eax,%esi
    7ccf:	e8 1c c5 ff ff       	call   41f0 <rand@plt>
    7cd4:	89 c5                	mov    %eax,%ebp
    7cd6:	89 f0                	mov    %esi,%eax
    7cd8:	c1 e8 10             	shr    $0x10,%eax
    7cdb:	66 25 80 7f          	and    $0x7f80,%ax
    7cdf:	66 3d 80 7f          	cmp    $0x7f80,%ax
    7ce3:	74 38                	je     7d1d <fpu_test_mul+0x27d>
    7ce5:	89 e8                	mov    %ebp,%eax
    7ce7:	c1 e8 10             	shr    $0x10,%eax
    7cea:	66 25 80 7f          	and    $0x7f80,%ax
    7cee:	66 3d 80 7f          	cmp    $0x7f80,%ax
    7cf2:	74 29                	je     7d1d <fpu_test_mul+0x27d>
    7cf4:	83 ec 08             	sub    $0x8,%esp
    7cf7:	56                   	push   %esi
    7cf8:	55                   	push   %ebp
    7cf9:	e8 22 8f 00 00       	call   10c20 <internal_float_mul>
    7cfe:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    7d02:	d9 44 24 1c          	flds   0x1c(%esp)
    7d06:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
    7d0a:	d9 44 24 1c          	flds   0x1c(%esp)
    7d0e:	de c9                	fmulp  %st,%st(1)
    7d10:	d9 5c 24 1c          	fstps  0x1c(%esp)
    7d14:	83 c4 10             	add    $0x10,%esp
    7d17:	3b 44 24 0c          	cmp    0xc(%esp),%eax
    7d1b:	75 3e                	jne    7d5b <fpu_test_mul+0x2bb>
    7d1d:	83 ef 01             	sub    $0x1,%edi
    7d20:	75 a6                	jne    7cc8 <fpu_test_mul+0x228>
    7d22:	83 ec 0c             	sub    $0xc,%esp
    7d25:	8d 83 5c 75 fe ff    	lea    -0x18aa4(%ebx),%eax
    7d2b:	50                   	push   %eax
    7d2c:	e8 7f c5 ff ff       	call   42b0 <puts@plt>
    7d31:	81 c4 dc 00 00 00    	add    $0xdc,%esp
    7d37:	5b                   	pop    %ebx
    7d38:	5e                   	pop    %esi
    7d39:	5f                   	pop    %edi
    7d3a:	5d                   	pop    %ebp
    7d3b:	c3                   	ret    
    7d3c:	8d 83 ac 5c fe ff    	lea    -0x1a354(%ebx),%eax
    7d42:	50                   	push   %eax
    7d43:	68 96 00 00 00       	push   $0x96
    7d48:	8d 83 45 5c fe ff    	lea    -0x1a3bb(%ebx),%eax
    7d4e:	50                   	push   %eax
    7d4f:	8d 83 5d 5c fe ff    	lea    -0x1a3a3(%ebx),%eax
    7d55:	50                   	push   %eax
    7d56:	e8 b5 c5 ff ff       	call   4310 <__assert_fail@plt>
    7d5b:	8d 83 ac 5c fe ff    	lea    -0x1a354(%ebx),%eax
    7d61:	50                   	push   %eax
    7d62:	68 a3 00 00 00       	push   $0xa3
    7d67:	eb df                	jmp    7d48 <fpu_test_mul+0x2a8>
    7d69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00007d70 <init_fpu_test>:
    7d70:	e8 62 e5 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    7d75:	05 8b 72 04 00       	add    $0x4728b,%eax
    7d7a:	0f b7 90 ea 24 05 00 	movzwl 0x524ea(%eax),%edx
    7d81:	66 83 88 e6 24 05 00 	orw    $0xff80,0x524e6(%eax)
    7d88:	80 
    7d89:	c7 80 f0 24 05 00 00 	movl   $0x0,0x524f0(%eax)
    7d90:	00 00 00 
    7d93:	c7 80 ec 24 05 00 00 	movl   $0x80000000,0x524ec(%eax)
    7d9a:	00 00 80 
    7d9d:	83 e2 7f             	and    $0x7f,%edx
    7da0:	c7 80 e0 24 05 00 00 	movl   $0x7fc00000,0x524e0(%eax)
    7da7:	00 c0 7f 
    7daa:	66 81 ca 80 7f       	or     $0x7f80,%dx
    7daf:	66 89 90 ea 24 05 00 	mov    %dx,0x524ea(%eax)
    7db6:	c7 80 dc 24 05 00 00 	movl   $0xffc00000,0x524dc(%eax)
    7dbd:	00 c0 ff 
    7dc0:	c7 80 d8 24 05 00 01 	movl   $0x1,0x524d8(%eax)
    7dc7:	00 00 00 
    7dca:	c7 80 d4 24 05 00 02 	movl   $0x2,0x524d4(%eax)
    7dd1:	00 00 00 
    7dd4:	c7 80 d0 24 05 00 00 	movl   $0x80400000,0x524d0(%eax)
    7ddb:	00 40 80 
    7dde:	c7 80 c4 24 05 00 00 	movl   $0x800000,0x524c4(%eax)
    7de5:	00 80 00 
    7de8:	c7 80 c0 24 05 00 01 	movl   $0x800001,0x524c0(%eax)
    7def:	00 80 00 
    7df2:	c7 80 cc 24 05 00 01 	movl   $0x7f000001,0x524cc(%eax)
    7df9:	00 00 7f 
    7dfc:	c7 80 c8 24 05 00 01 	movl   $0xff000001,0x524c8(%eax)
    7e03:	00 00 ff 
    7e06:	c3                   	ret    
    7e07:	66 90                	xchg   %ax,%ax
    7e09:	66 90                	xchg   %ax,%ax
    7e0b:	66 90                	xchg   %ax,%ax
    7e0d:	66 90                	xchg   %ax,%ax
    7e0f:	90                   	nop

00007e10 <alu_test_add>:
    7e10:	e8 c2 e4 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    7e15:	05 eb 71 04 00       	add    $0x471eb,%eax
    7e1a:	55                   	push   %ebp
    7e1b:	57                   	push   %edi
    7e1c:	56                   	push   %esi
    7e1d:	53                   	push   %ebx
    7e1e:	83 ec 4c             	sub    $0x4c,%esp
    7e21:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
    7e27:	8d 74 24 40          	lea    0x40(%esp),%esi
    7e2b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    7e2f:	8d 7c 24 28          	lea    0x28(%esp),%edi
    7e33:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    7e3a:	10 
    7e3b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    7e42:	ff 
    7e43:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    7e4a:	ff 
    7e4b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    7e52:	ff 
    7e53:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    7e5a:	00 
    7e5b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    7e62:	00 
    7e63:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    7e6a:	00 
    7e6b:	89 74 24 14          	mov    %esi,0x14(%esp)
    7e6f:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    7e73:	89 7c 24 18          	mov    %edi,0x18(%esp)
    7e77:	bf 00 00 00 10       	mov    $0x10000000,%edi
    7e7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7e80:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    7e84:	be 00 00 00 10       	mov    $0x10000000,%esi
    7e89:	89 44 24 10          	mov    %eax,0x10(%esp)
    7e8d:	eb 0e                	jmp    7e9d <alu_test_add+0x8d>
    7e8f:	90                   	nop
    7e90:	8b 44 24 10          	mov    0x10(%esp),%eax
    7e94:	8b 30                	mov    (%eax),%esi
    7e96:	83 c0 04             	add    $0x4,%eax
    7e99:	89 44 24 10          	mov    %eax,0x10(%esp)
    7e9d:	83 ec 04             	sub    $0x4,%esp
    7ea0:	6a 20                	push   $0x20
    7ea2:	57                   	push   %edi
    7ea3:	56                   	push   %esi
    7ea4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    7ea8:	e8 e3 74 00 00       	call   f390 <alu_add>
    7ead:	89 f1                	mov    %esi,%ecx
    7eaf:	83 c4 10             	add    $0x10,%esp
    7eb2:	89 c3                	mov    %eax,%ebx
    7eb4:	89 f8                	mov    %edi,%eax
    7eb6:	01 c8                	add    %ecx,%eax
    7eb8:	9c                   	pushf  
    7eb9:	5a                   	pop    %edx
    7eba:	39 c3                	cmp    %eax,%ebx
    7ebc:	0f 85 f3 05 00 00    	jne    84b5 <alu_test_add+0x6a5>
    7ec2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    7ec6:	89 d1                	mov    %edx,%ecx
    7ec8:	83 e1 01             	and    $0x1,%ecx
    7ecb:	89 c3                	mov    %eax,%ebx
    7ecd:	83 e3 01             	and    $0x1,%ebx
    7ed0:	38 cb                	cmp    %cl,%bl
    7ed2:	0f 85 37 06 00 00    	jne    850f <alu_test_add+0x6ff>
    7ed8:	89 c3                	mov    %eax,%ebx
    7eda:	89 d1                	mov    %edx,%ecx
    7edc:	c0 eb 02             	shr    $0x2,%bl
    7edf:	c1 e9 02             	shr    $0x2,%ecx
    7ee2:	83 e3 01             	and    $0x1,%ebx
    7ee5:	83 e1 01             	and    $0x1,%ecx
    7ee8:	38 cb                	cmp    %cl,%bl
    7eea:	0f 85 0d 06 00 00    	jne    84fd <alu_test_add+0x6ed>
    7ef0:	89 c3                	mov    %eax,%ebx
    7ef2:	89 d1                	mov    %edx,%ecx
    7ef4:	c0 eb 07             	shr    $0x7,%bl
    7ef7:	c0 e9 07             	shr    $0x7,%cl
    7efa:	38 cb                	cmp    %cl,%bl
    7efc:	0f 85 e9 05 00 00    	jne    84eb <alu_test_add+0x6db>
    7f02:	89 d1                	mov    %edx,%ecx
    7f04:	c0 e8 06             	shr    $0x6,%al
    7f07:	c1 e9 06             	shr    $0x6,%ecx
    7f0a:	83 e0 01             	and    $0x1,%eax
    7f0d:	83 e1 01             	and    $0x1,%ecx
    7f10:	38 c8                	cmp    %cl,%al
    7f12:	0f 85 51 06 00 00    	jne    8569 <alu_test_add+0x759>
    7f18:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    7f1c:	c1 ea 0b             	shr    $0xb,%edx
    7f1f:	83 e2 01             	and    $0x1,%edx
    7f22:	c0 e8 03             	shr    $0x3,%al
    7f25:	83 e0 01             	and    $0x1,%eax
    7f28:	38 d0                	cmp    %dl,%al
    7f2a:	0f 85 27 06 00 00    	jne    8557 <alu_test_add+0x747>
    7f30:	83 ec 04             	sub    $0x4,%esp
    7f33:	6a 10                	push   $0x10
    7f35:	57                   	push   %edi
    7f36:	56                   	push   %esi
    7f37:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    7f3b:	e8 50 74 00 00       	call   f390 <alu_add>
    7f40:	89 f1                	mov    %esi,%ecx
    7f42:	83 c4 10             	add    $0x10,%esp
    7f45:	89 c3                	mov    %eax,%ebx
    7f47:	89 f8                	mov    %edi,%eax
    7f49:	66 01 c8             	add    %cx,%ax
    7f4c:	9c                   	pushf  
    7f4d:	5a                   	pop    %edx
    7f4e:	0f b7 c0             	movzwl %ax,%eax
    7f51:	39 c3                	cmp    %eax,%ebx
    7f53:	0f 85 ec 05 00 00    	jne    8545 <alu_test_add+0x735>
    7f59:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    7f5d:	89 d1                	mov    %edx,%ecx
    7f5f:	83 e1 01             	and    $0x1,%ecx
    7f62:	89 c3                	mov    %eax,%ebx
    7f64:	83 e3 01             	and    $0x1,%ebx
    7f67:	38 cb                	cmp    %cl,%bl
    7f69:	0f 85 c4 05 00 00    	jne    8533 <alu_test_add+0x723>
    7f6f:	89 c3                	mov    %eax,%ebx
    7f71:	89 d1                	mov    %edx,%ecx
    7f73:	c0 eb 02             	shr    $0x2,%bl
    7f76:	c1 e9 02             	shr    $0x2,%ecx
    7f79:	83 e3 01             	and    $0x1,%ebx
    7f7c:	83 e1 01             	and    $0x1,%ecx
    7f7f:	38 cb                	cmp    %cl,%bl
    7f81:	0f 85 9a 05 00 00    	jne    8521 <alu_test_add+0x711>
    7f87:	89 d1                	mov    %edx,%ecx
    7f89:	c0 e8 07             	shr    $0x7,%al
    7f8c:	c0 e9 07             	shr    $0x7,%cl
    7f8f:	38 c8                	cmp    %cl,%al
    7f91:	0f 85 e8 04 00 00    	jne    847f <alu_test_add+0x66f>
    7f97:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    7f9b:	89 d1                	mov    %edx,%ecx
    7f9d:	c1 e9 06             	shr    $0x6,%ecx
    7fa0:	c0 e8 06             	shr    $0x6,%al
    7fa3:	83 e1 01             	and    $0x1,%ecx
    7fa6:	83 e0 01             	and    $0x1,%eax
    7fa9:	38 c8                	cmp    %cl,%al
    7fab:	0f 85 bc 04 00 00    	jne    846d <alu_test_add+0x65d>
    7fb1:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    7fb5:	c1 ea 0b             	shr    $0xb,%edx
    7fb8:	83 e2 01             	and    $0x1,%edx
    7fbb:	c0 e8 03             	shr    $0x3,%al
    7fbe:	83 e0 01             	and    $0x1,%eax
    7fc1:	38 d0                	cmp    %dl,%al
    7fc3:	0f 85 c8 04 00 00    	jne    8491 <alu_test_add+0x681>
    7fc9:	83 ec 04             	sub    $0x4,%esp
    7fcc:	6a 08                	push   $0x8
    7fce:	57                   	push   %edi
    7fcf:	56                   	push   %esi
    7fd0:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    7fd4:	e8 b7 73 00 00       	call   f390 <alu_add>
    7fd9:	89 f1                	mov    %esi,%ecx
    7fdb:	83 c4 10             	add    $0x10,%esp
    7fde:	89 c3                	mov    %eax,%ebx
    7fe0:	89 f8                	mov    %edi,%eax
    7fe2:	00 c8                	add    %cl,%al
    7fe4:	9c                   	pushf  
    7fe5:	5a                   	pop    %edx
    7fe6:	0f b6 c0             	movzbl %al,%eax
    7fe9:	39 c3                	cmp    %eax,%ebx
    7feb:	0f 85 e8 04 00 00    	jne    84d9 <alu_test_add+0x6c9>
    7ff1:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    7ff5:	89 d1                	mov    %edx,%ecx
    7ff7:	83 e1 01             	and    $0x1,%ecx
    7ffa:	89 c3                	mov    %eax,%ebx
    7ffc:	83 e3 01             	and    $0x1,%ebx
    7fff:	38 cb                	cmp    %cl,%bl
    8001:	0f 85 98 05 00 00    	jne    859f <alu_test_add+0x78f>
    8007:	89 c3                	mov    %eax,%ebx
    8009:	89 d1                	mov    %edx,%ecx
    800b:	c0 eb 02             	shr    $0x2,%bl
    800e:	c1 e9 02             	shr    $0x2,%ecx
    8011:	83 e3 01             	and    $0x1,%ebx
    8014:	83 e1 01             	and    $0x1,%ecx
    8017:	38 cb                	cmp    %cl,%bl
    8019:	0f 85 6e 05 00 00    	jne    858d <alu_test_add+0x77d>
    801f:	89 c3                	mov    %eax,%ebx
    8021:	89 d1                	mov    %edx,%ecx
    8023:	c0 eb 07             	shr    $0x7,%bl
    8026:	c0 e9 07             	shr    $0x7,%cl
    8029:	38 cb                	cmp    %cl,%bl
    802b:	0f 85 4a 05 00 00    	jne    857b <alu_test_add+0x76b>
    8031:	89 d1                	mov    %edx,%ecx
    8033:	c0 e8 06             	shr    $0x6,%al
    8036:	c1 e9 06             	shr    $0x6,%ecx
    8039:	83 e0 01             	and    $0x1,%eax
    803c:	83 e1 01             	and    $0x1,%ecx
    803f:	38 c8                	cmp    %cl,%al
    8041:	0f 85 5c 04 00 00    	jne    84a3 <alu_test_add+0x693>
    8047:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    804b:	c1 ea 0b             	shr    $0xb,%edx
    804e:	83 e2 01             	and    $0x1,%edx
    8051:	c0 e8 03             	shr    $0x3,%al
    8054:	83 e0 01             	and    $0x1,%eax
    8057:	38 d0                	cmp    %dl,%al
    8059:	0f 85 68 04 00 00    	jne    84c7 <alu_test_add+0x6b7>
    805f:	8b 74 24 14          	mov    0x14(%esp),%esi
    8063:	39 74 24 10          	cmp    %esi,0x10(%esp)
    8067:	0f 85 23 fe ff ff    	jne    7e90 <alu_test_add+0x80>
    806d:	8b 44 24 18          	mov    0x18(%esp),%eax
    8071:	39 f0                	cmp    %esi,%eax
    8073:	74 13                	je     8088 <alu_test_add+0x278>
    8075:	8b 38                	mov    (%eax),%edi
    8077:	83 c0 04             	add    $0x4,%eax
    807a:	89 44 24 18          	mov    %eax,0x18(%esp)
    807e:	e9 fd fd ff ff       	jmp    7e80 <alu_test_add+0x70>
    8083:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8087:	90                   	nop
    8088:	83 ec 0c             	sub    $0xc,%esp
    808b:	6a 00                	push   $0x0
    808d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    8091:	89 fb                	mov    %edi,%ebx
    8093:	e8 98 c0 ff ff       	call   4130 <time@plt>
    8098:	89 04 24             	mov    %eax,(%esp)
    809b:	e8 f0 c0 ff ff       	call   4190 <srand@plt>
    80a0:	83 c4 10             	add    $0x10,%esp
    80a3:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    80aa:	00 
    80ab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    80af:	90                   	nop
    80b0:	8b 74 24 0c          	mov    0xc(%esp),%esi
    80b4:	89 f3                	mov    %esi,%ebx
    80b6:	e8 35 c1 ff ff       	call   41f0 <rand@plt>
    80bb:	89 74 24 0c          	mov    %esi,0xc(%esp)
    80bf:	89 c7                	mov    %eax,%edi
    80c1:	e8 2a c1 ff ff       	call   41f0 <rand@plt>
    80c6:	83 ec 04             	sub    $0x4,%esp
    80c9:	6a 20                	push   $0x20
    80cb:	89 c6                	mov    %eax,%esi
    80cd:	57                   	push   %edi
    80ce:	50                   	push   %eax
    80cf:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    80d3:	e8 b8 72 00 00       	call   f390 <alu_add>
    80d8:	89 f1                	mov    %esi,%ecx
    80da:	83 c4 10             	add    $0x10,%esp
    80dd:	89 c3                	mov    %eax,%ebx
    80df:	89 f8                	mov    %edi,%eax
    80e1:	01 c8                	add    %ecx,%eax
    80e3:	9c                   	pushf  
    80e4:	5a                   	pop    %edx
    80e5:	39 c3                	cmp    %eax,%ebx
    80e7:	0f 85 eb 01 00 00    	jne    82d8 <alu_test_add+0x4c8>
    80ed:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    80f1:	89 d1                	mov    %edx,%ecx
    80f3:	83 e1 01             	and    $0x1,%ecx
    80f6:	89 c3                	mov    %eax,%ebx
    80f8:	83 e3 01             	and    $0x1,%ebx
    80fb:	38 cb                	cmp    %cl,%bl
    80fd:	0f 85 58 03 00 00    	jne    845b <alu_test_add+0x64b>
    8103:	89 c3                	mov    %eax,%ebx
    8105:	89 d1                	mov    %edx,%ecx
    8107:	c0 eb 02             	shr    $0x2,%bl
    810a:	c1 e9 02             	shr    $0x2,%ecx
    810d:	83 e3 01             	and    $0x1,%ebx
    8110:	83 e1 01             	and    $0x1,%ecx
    8113:	38 cb                	cmp    %cl,%bl
    8115:	0f 85 2e 03 00 00    	jne    8449 <alu_test_add+0x639>
    811b:	89 c3                	mov    %eax,%ebx
    811d:	89 d1                	mov    %edx,%ecx
    811f:	c0 eb 07             	shr    $0x7,%bl
    8122:	c0 e9 07             	shr    $0x7,%cl
    8125:	38 cb                	cmp    %cl,%bl
    8127:	0f 85 0a 03 00 00    	jne    8437 <alu_test_add+0x627>
    812d:	89 d1                	mov    %edx,%ecx
    812f:	c0 e8 06             	shr    $0x6,%al
    8132:	c1 e9 06             	shr    $0x6,%ecx
    8135:	83 e0 01             	and    $0x1,%eax
    8138:	83 e1 01             	and    $0x1,%ecx
    813b:	38 c8                	cmp    %cl,%al
    813d:	0f 85 e2 02 00 00    	jne    8425 <alu_test_add+0x615>
    8143:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    8147:	c1 ea 0b             	shr    $0xb,%edx
    814a:	83 e2 01             	and    $0x1,%edx
    814d:	c0 e8 03             	shr    $0x3,%al
    8150:	83 e0 01             	and    $0x1,%eax
    8153:	38 d0                	cmp    %dl,%al
    8155:	0f 85 b8 02 00 00    	jne    8413 <alu_test_add+0x603>
    815b:	83 ec 04             	sub    $0x4,%esp
    815e:	6a 10                	push   $0x10
    8160:	57                   	push   %edi
    8161:	56                   	push   %esi
    8162:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8166:	e8 25 72 00 00       	call   f390 <alu_add>
    816b:	89 f1                	mov    %esi,%ecx
    816d:	83 c4 10             	add    $0x10,%esp
    8170:	89 c3                	mov    %eax,%ebx
    8172:	89 f8                	mov    %edi,%eax
    8174:	66 01 c8             	add    %cx,%ax
    8177:	9c                   	pushf  
    8178:	5a                   	pop    %edx
    8179:	0f b7 c0             	movzwl %ax,%eax
    817c:	39 c3                	cmp    %eax,%ebx
    817e:	0f 85 7d 02 00 00    	jne    8401 <alu_test_add+0x5f1>
    8184:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    8188:	89 d1                	mov    %edx,%ecx
    818a:	83 e1 01             	and    $0x1,%ecx
    818d:	89 c3                	mov    %eax,%ebx
    818f:	83 e3 01             	and    $0x1,%ebx
    8192:	38 cb                	cmp    %cl,%bl
    8194:	0f 85 58 02 00 00    	jne    83f2 <alu_test_add+0x5e2>
    819a:	89 c3                	mov    %eax,%ebx
    819c:	89 d1                	mov    %edx,%ecx
    819e:	c0 eb 02             	shr    $0x2,%bl
    81a1:	c1 e9 02             	shr    $0x2,%ecx
    81a4:	83 e3 01             	and    $0x1,%ebx
    81a7:	83 e1 01             	and    $0x1,%ecx
    81aa:	38 cb                	cmp    %cl,%bl
    81ac:	0f 85 2e 02 00 00    	jne    83e0 <alu_test_add+0x5d0>
    81b2:	89 d1                	mov    %edx,%ecx
    81b4:	c0 e8 07             	shr    $0x7,%al
    81b7:	c0 e9 07             	shr    $0x7,%cl
    81ba:	38 c8                	cmp    %cl,%al
    81bc:	0f 85 0c 02 00 00    	jne    83ce <alu_test_add+0x5be>
    81c2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    81c6:	89 d1                	mov    %edx,%ecx
    81c8:	c1 e9 06             	shr    $0x6,%ecx
    81cb:	c0 e8 06             	shr    $0x6,%al
    81ce:	83 e1 01             	and    $0x1,%ecx
    81d1:	83 e0 01             	and    $0x1,%eax
    81d4:	38 c8                	cmp    %cl,%al
    81d6:	0f 85 e0 01 00 00    	jne    83bc <alu_test_add+0x5ac>
    81dc:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    81e0:	c1 ea 0b             	shr    $0xb,%edx
    81e3:	83 e2 01             	and    $0x1,%edx
    81e6:	c0 e8 03             	shr    $0x3,%al
    81e9:	83 e0 01             	and    $0x1,%eax
    81ec:	38 d0                	cmp    %dl,%al
    81ee:	0f 85 b6 01 00 00    	jne    83aa <alu_test_add+0x59a>
    81f4:	83 ec 04             	sub    $0x4,%esp
    81f7:	6a 08                	push   $0x8
    81f9:	57                   	push   %edi
    81fa:	56                   	push   %esi
    81fb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    81ff:	e8 8c 71 00 00       	call   f390 <alu_add>
    8204:	89 f1                	mov    %esi,%ecx
    8206:	83 c4 10             	add    $0x10,%esp
    8209:	89 c3                	mov    %eax,%ebx
    820b:	89 f8                	mov    %edi,%eax
    820d:	00 c8                	add    %cl,%al
    820f:	9c                   	pushf  
    8210:	5a                   	pop    %edx
    8211:	0f b6 c0             	movzbl %al,%eax
    8214:	39 c3                	cmp    %eax,%ebx
    8216:	0f 85 7c 01 00 00    	jne    8398 <alu_test_add+0x588>
    821c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    8220:	89 d1                	mov    %edx,%ecx
    8222:	83 e1 01             	and    $0x1,%ecx
    8225:	89 c3                	mov    %eax,%ebx
    8227:	83 e3 01             	and    $0x1,%ebx
    822a:	38 cb                	cmp    %cl,%bl
    822c:	0f 85 46 01 00 00    	jne    8378 <alu_test_add+0x568>
    8232:	89 c3                	mov    %eax,%ebx
    8234:	89 d1                	mov    %edx,%ecx
    8236:	c0 eb 02             	shr    $0x2,%bl
    8239:	c1 e9 02             	shr    $0x2,%ecx
    823c:	83 e3 01             	and    $0x1,%ebx
    823f:	83 e1 01             	and    $0x1,%ecx
    8242:	38 cb                	cmp    %cl,%bl
    8244:	0f 85 0e 01 00 00    	jne    8358 <alu_test_add+0x548>
    824a:	89 c3                	mov    %eax,%ebx
    824c:	89 d1                	mov    %edx,%ecx
    824e:	c0 eb 07             	shr    $0x7,%bl
    8251:	c0 e9 07             	shr    $0x7,%cl
    8254:	38 cb                	cmp    %cl,%bl
    8256:	0f 85 dc 00 00 00    	jne    8338 <alu_test_add+0x528>
    825c:	89 d1                	mov    %edx,%ecx
    825e:	c0 e8 06             	shr    $0x6,%al
    8261:	c1 e9 06             	shr    $0x6,%ecx
    8264:	83 e0 01             	and    $0x1,%eax
    8267:	83 e1 01             	and    $0x1,%ecx
    826a:	38 c8                	cmp    %cl,%al
    826c:	0f 85 a6 00 00 00    	jne    8318 <alu_test_add+0x508>
    8272:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    8276:	c1 ea 0b             	shr    $0xb,%edx
    8279:	83 e2 01             	and    $0x1,%edx
    827c:	c0 e8 03             	shr    $0x3,%al
    827f:	83 e0 01             	and    $0x1,%eax
    8282:	38 d0                	cmp    %dl,%al
    8284:	75 72                	jne    82f8 <alu_test_add+0x4e8>
    8286:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    828b:	0f 85 1f fe ff ff    	jne    80b0 <alu_test_add+0x2a0>
    8291:	83 ec 0c             	sub    $0xc,%esp
    8294:	8b 7c 24 18          	mov    0x18(%esp),%edi
    8298:	8d 87 dc 70 fe ff    	lea    -0x18f24(%edi),%eax
    829e:	89 fb                	mov    %edi,%ebx
    82a0:	50                   	push   %eax
    82a1:	e8 0a c0 ff ff       	call   42b0 <puts@plt>
    82a6:	e8 55 25 02 00       	call   2a800 <get_ref>
    82ab:	83 c4 10             	add    $0x10,%esp
    82ae:	85 c0                	test   %eax,%eax
    82b0:	75 08                	jne    82ba <alu_test_add+0x4aa>
    82b2:	83 c4 4c             	add    $0x4c,%esp
    82b5:	5b                   	pop    %ebx
    82b6:	5e                   	pop    %esi
    82b7:	5f                   	pop    %edi
    82b8:	5d                   	pop    %ebp
    82b9:	c3                   	ret    
    82ba:	83 ec 0c             	sub    $0xc,%esp
    82bd:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    82c1:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    82c7:	50                   	push   %eax
    82c8:	e8 e3 bf ff ff       	call   42b0 <puts@plt>
    82cd:	83 c4 10             	add    $0x10,%esp
    82d0:	83 c4 4c             	add    $0x4c,%esp
    82d3:	5b                   	pop    %ebx
    82d4:	5e                   	pop    %esi
    82d5:	5f                   	pop    %edi
    82d6:	5d                   	pop    %ebp
    82d7:	c3                   	ret    
    82d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    82dc:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    82e2:	50                   	push   %eax
    82e3:	6a 74                	push   $0x74
    82e5:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    82eb:	50                   	push   %eax
    82ec:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    82f2:	50                   	push   %eax
    82f3:	e8 18 c0 ff ff       	call   4310 <__assert_fail@plt>
    82f8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    82fc:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8302:	50                   	push   %eax
    8303:	6a 76                	push   $0x76
    8305:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    830b:	50                   	push   %eax
    830c:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    8312:	50                   	push   %eax
    8313:	e8 f8 bf ff ff       	call   4310 <__assert_fail@plt>
    8318:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    831c:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8322:	50                   	push   %eax
    8323:	6a 76                	push   $0x76
    8325:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    832b:	50                   	push   %eax
    832c:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    8332:	50                   	push   %eax
    8333:	e8 d8 bf ff ff       	call   4310 <__assert_fail@plt>
    8338:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    833c:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8342:	50                   	push   %eax
    8343:	6a 76                	push   $0x76
    8345:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    834b:	50                   	push   %eax
    834c:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    8352:	50                   	push   %eax
    8353:	e8 b8 bf ff ff       	call   4310 <__assert_fail@plt>
    8358:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    835c:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8362:	50                   	push   %eax
    8363:	6a 76                	push   $0x76
    8365:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    836b:	50                   	push   %eax
    836c:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    8372:	50                   	push   %eax
    8373:	e8 98 bf ff ff       	call   4310 <__assert_fail@plt>
    8378:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    837c:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8382:	50                   	push   %eax
    8383:	6a 76                	push   $0x76
    8385:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    838b:	50                   	push   %eax
    838c:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    8392:	50                   	push   %eax
    8393:	e8 78 bf ff ff       	call   4310 <__assert_fail@plt>
    8398:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    839c:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    83a2:	50                   	push   %eax
    83a3:	6a 76                	push   $0x76
    83a5:	e9 3b ff ff ff       	jmp    82e5 <alu_test_add+0x4d5>
    83aa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    83ae:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    83b4:	50                   	push   %eax
    83b5:	6a 75                	push   $0x75
    83b7:	e9 49 ff ff ff       	jmp    8305 <alu_test_add+0x4f5>
    83bc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    83c0:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    83c6:	50                   	push   %eax
    83c7:	6a 75                	push   $0x75
    83c9:	e9 57 ff ff ff       	jmp    8325 <alu_test_add+0x515>
    83ce:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    83d2:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    83d8:	50                   	push   %eax
    83d9:	6a 75                	push   $0x75
    83db:	e9 65 ff ff ff       	jmp    8345 <alu_test_add+0x535>
    83e0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    83e4:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    83ea:	50                   	push   %eax
    83eb:	6a 75                	push   $0x75
    83ed:	e9 73 ff ff ff       	jmp    8365 <alu_test_add+0x555>
    83f2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    83f6:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    83fc:	50                   	push   %eax
    83fd:	6a 75                	push   $0x75
    83ff:	eb 84                	jmp    8385 <alu_test_add+0x575>
    8401:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8405:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    840b:	50                   	push   %eax
    840c:	6a 75                	push   $0x75
    840e:	e9 d2 fe ff ff       	jmp    82e5 <alu_test_add+0x4d5>
    8413:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8417:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    841d:	50                   	push   %eax
    841e:	6a 74                	push   $0x74
    8420:	e9 e0 fe ff ff       	jmp    8305 <alu_test_add+0x4f5>
    8425:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8429:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    842f:	50                   	push   %eax
    8430:	6a 74                	push   $0x74
    8432:	e9 ee fe ff ff       	jmp    8325 <alu_test_add+0x515>
    8437:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    843b:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8441:	50                   	push   %eax
    8442:	6a 74                	push   $0x74
    8444:	e9 fc fe ff ff       	jmp    8345 <alu_test_add+0x535>
    8449:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    844d:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8453:	50                   	push   %eax
    8454:	6a 74                	push   $0x74
    8456:	e9 0a ff ff ff       	jmp    8365 <alu_test_add+0x555>
    845b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    845f:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8465:	50                   	push   %eax
    8466:	6a 74                	push   $0x74
    8468:	e9 18 ff ff ff       	jmp    8385 <alu_test_add+0x575>
    846d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8471:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8477:	50                   	push   %eax
    8478:	6a 6b                	push   $0x6b
    847a:	e9 a6 fe ff ff       	jmp    8325 <alu_test_add+0x515>
    847f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8483:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8489:	50                   	push   %eax
    848a:	6a 6b                	push   $0x6b
    848c:	e9 b4 fe ff ff       	jmp    8345 <alu_test_add+0x535>
    8491:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8495:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    849b:	50                   	push   %eax
    849c:	6a 6b                	push   $0x6b
    849e:	e9 62 fe ff ff       	jmp    8305 <alu_test_add+0x4f5>
    84a3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    84a7:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    84ad:	50                   	push   %eax
    84ae:	6a 6c                	push   $0x6c
    84b0:	e9 70 fe ff ff       	jmp    8325 <alu_test_add+0x515>
    84b5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    84b9:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    84bf:	50                   	push   %eax
    84c0:	6a 6a                	push   $0x6a
    84c2:	e9 1e fe ff ff       	jmp    82e5 <alu_test_add+0x4d5>
    84c7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    84cb:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    84d1:	50                   	push   %eax
    84d2:	6a 6c                	push   $0x6c
    84d4:	e9 2c fe ff ff       	jmp    8305 <alu_test_add+0x4f5>
    84d9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    84dd:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    84e3:	50                   	push   %eax
    84e4:	6a 6c                	push   $0x6c
    84e6:	e9 fa fd ff ff       	jmp    82e5 <alu_test_add+0x4d5>
    84eb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    84ef:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    84f5:	50                   	push   %eax
    84f6:	6a 6a                	push   $0x6a
    84f8:	e9 48 fe ff ff       	jmp    8345 <alu_test_add+0x535>
    84fd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8501:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8507:	50                   	push   %eax
    8508:	6a 6a                	push   $0x6a
    850a:	e9 56 fe ff ff       	jmp    8365 <alu_test_add+0x555>
    850f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8513:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8519:	50                   	push   %eax
    851a:	6a 6a                	push   $0x6a
    851c:	e9 64 fe ff ff       	jmp    8385 <alu_test_add+0x575>
    8521:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8525:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    852b:	50                   	push   %eax
    852c:	6a 6b                	push   $0x6b
    852e:	e9 32 fe ff ff       	jmp    8365 <alu_test_add+0x555>
    8533:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8537:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    853d:	50                   	push   %eax
    853e:	6a 6b                	push   $0x6b
    8540:	e9 40 fe ff ff       	jmp    8385 <alu_test_add+0x575>
    8545:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8549:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    854f:	50                   	push   %eax
    8550:	6a 6b                	push   $0x6b
    8552:	e9 8e fd ff ff       	jmp    82e5 <alu_test_add+0x4d5>
    8557:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    855b:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8561:	50                   	push   %eax
    8562:	6a 6a                	push   $0x6a
    8564:	e9 9c fd ff ff       	jmp    8305 <alu_test_add+0x4f5>
    8569:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    856d:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8573:	50                   	push   %eax
    8574:	6a 6a                	push   $0x6a
    8576:	e9 aa fd ff ff       	jmp    8325 <alu_test_add+0x515>
    857b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    857f:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8585:	50                   	push   %eax
    8586:	6a 6c                	push   $0x6c
    8588:	e9 b8 fd ff ff       	jmp    8345 <alu_test_add+0x535>
    858d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8591:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    8597:	50                   	push   %eax
    8598:	6a 6c                	push   $0x6c
    859a:	e9 c6 fd ff ff       	jmp    8365 <alu_test_add+0x555>
    859f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    85a3:	8d 83 4c 60 fe ff    	lea    -0x19fb4(%ebx),%eax
    85a9:	50                   	push   %eax
    85aa:	6a 6c                	push   $0x6c
    85ac:	e9 d4 fd ff ff       	jmp    8385 <alu_test_add+0x575>
    85b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    85b8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    85bf:	90                   	nop

000085c0 <alu_test_adc>:
    85c0:	e8 12 dd ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    85c5:	05 3b 6a 04 00       	add    $0x46a3b,%eax
    85ca:	55                   	push   %ebp
    85cb:	bd 00 00 00 10       	mov    $0x10000000,%ebp
    85d0:	57                   	push   %edi
    85d1:	56                   	push   %esi
    85d2:	53                   	push   %ebx
    85d3:	83 ec 4c             	sub    $0x4c,%esp
    85d6:	8d 7c 24 28          	lea    0x28(%esp),%edi
    85da:	8d 74 24 40          	lea    0x40(%esp),%esi
    85de:	89 44 24 0c          	mov    %eax,0xc(%esp)
    85e2:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    85e9:	10 
    85ea:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    85f1:	ff 
    85f2:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    85f9:	ff 
    85fa:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    8601:	ff 
    8602:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    8609:	00 
    860a:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    8611:	00 
    8612:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    8619:	00 
    861a:	89 7c 24 18          	mov    %edi,0x18(%esp)
    861e:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    8622:	89 74 24 14          	mov    %esi,0x14(%esp)
    8626:	8d b0 60 32 05 00    	lea    0x53260(%eax),%esi
    862c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8630:	8b 44 24 18          	mov    0x18(%esp),%eax
    8634:	bf 00 00 00 10       	mov    $0x10000000,%edi
    8639:	89 44 24 10          	mov    %eax,0x10(%esp)
    863d:	eb 0e                	jmp    864d <alu_test_adc+0x8d>
    863f:	90                   	nop
    8640:	8b 44 24 10          	mov    0x10(%esp),%eax
    8644:	8b 38                	mov    (%eax),%edi
    8646:	83 c0 04             	add    $0x4,%eax
    8649:	89 44 24 10          	mov    %eax,0x10(%esp)
    864d:	83 ec 04             	sub    $0x4,%esp
    8650:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    8654:	6a 20                	push   $0x20
    8656:	55                   	push   %ebp
    8657:	57                   	push   %edi
    8658:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    865c:	e8 1f 6e 00 00       	call   f480 <alu_adc>
    8661:	89 f9                	mov    %edi,%ecx
    8663:	83 c4 10             	add    $0x10,%esp
    8666:	89 c3                	mov    %eax,%ebx
    8668:	89 e8                	mov    %ebp,%eax
    866a:	f8                   	clc    
    866b:	11 c8                	adc    %ecx,%eax
    866d:	9c                   	pushf  
    866e:	5a                   	pop    %edx
    866f:	39 c3                	cmp    %eax,%ebx
    8671:	0f 85 76 08 00 00    	jne    8eed <alu_test_adc+0x92d>
    8677:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    867b:	89 d1                	mov    %edx,%ecx
    867d:	83 e1 01             	and    $0x1,%ecx
    8680:	89 c3                	mov    %eax,%ebx
    8682:	83 e3 01             	and    $0x1,%ebx
    8685:	38 cb                	cmp    %cl,%bl
    8687:	0f 85 0d 0d 00 00    	jne    939a <alu_test_adc+0xdda>
    868d:	89 c3                	mov    %eax,%ebx
    868f:	89 d1                	mov    %edx,%ecx
    8691:	c0 eb 02             	shr    $0x2,%bl
    8694:	c1 e9 02             	shr    $0x2,%ecx
    8697:	83 e3 01             	and    $0x1,%ebx
    869a:	83 e1 01             	and    $0x1,%ecx
    869d:	38 cb                	cmp    %cl,%bl
    869f:	0f 85 e0 0c 00 00    	jne    9385 <alu_test_adc+0xdc5>
    86a5:	89 c3                	mov    %eax,%ebx
    86a7:	89 d1                	mov    %edx,%ecx
    86a9:	c0 eb 07             	shr    $0x7,%bl
    86ac:	c0 e9 07             	shr    $0x7,%cl
    86af:	38 cb                	cmp    %cl,%bl
    86b1:	0f 85 b9 0c 00 00    	jne    9370 <alu_test_adc+0xdb0>
    86b7:	89 c3                	mov    %eax,%ebx
    86b9:	89 d1                	mov    %edx,%ecx
    86bb:	c0 eb 06             	shr    $0x6,%bl
    86be:	c1 e9 06             	shr    $0x6,%ecx
    86c1:	83 e3 01             	and    $0x1,%ebx
    86c4:	83 e1 01             	and    $0x1,%ecx
    86c7:	38 cb                	cmp    %cl,%bl
    86c9:	0f 85 8c 0c 00 00    	jne    935b <alu_test_adc+0xd9b>
    86cf:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    86d3:	c1 ea 0b             	shr    $0xb,%edx
    86d6:	83 e2 01             	and    $0x1,%edx
    86d9:	c0 e9 03             	shr    $0x3,%cl
    86dc:	83 e1 01             	and    $0x1,%ecx
    86df:	38 d1                	cmp    %dl,%cl
    86e1:	0f 85 5f 0c 00 00    	jne    9346 <alu_test_adc+0xd86>
    86e7:	83 ec 04             	sub    $0x4,%esp
    86ea:	83 e0 fe             	and    $0xfffffffe,%eax
    86ed:	88 46 24             	mov    %al,0x24(%esi)
    86f0:	6a 10                	push   $0x10
    86f2:	55                   	push   %ebp
    86f3:	57                   	push   %edi
    86f4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    86f8:	e8 83 6d 00 00       	call   f480 <alu_adc>
    86fd:	89 f9                	mov    %edi,%ecx
    86ff:	83 c4 10             	add    $0x10,%esp
    8702:	89 c3                	mov    %eax,%ebx
    8704:	89 e8                	mov    %ebp,%eax
    8706:	f8                   	clc    
    8707:	66 11 c8             	adc    %cx,%ax
    870a:	9c                   	pushf  
    870b:	5a                   	pop    %edx
    870c:	0f b7 c0             	movzwl %ax,%eax
    870f:	39 c3                	cmp    %eax,%ebx
    8711:	0f 85 1a 0c 00 00    	jne    9331 <alu_test_adc+0xd71>
    8717:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    871b:	89 d1                	mov    %edx,%ecx
    871d:	83 e1 01             	and    $0x1,%ecx
    8720:	89 c3                	mov    %eax,%ebx
    8722:	83 e3 01             	and    $0x1,%ebx
    8725:	38 cb                	cmp    %cl,%bl
    8727:	0f 85 ef 0b 00 00    	jne    931c <alu_test_adc+0xd5c>
    872d:	89 c3                	mov    %eax,%ebx
    872f:	89 d1                	mov    %edx,%ecx
    8731:	c0 eb 02             	shr    $0x2,%bl
    8734:	c1 e9 02             	shr    $0x2,%ecx
    8737:	83 e3 01             	and    $0x1,%ebx
    873a:	83 e1 01             	and    $0x1,%ecx
    873d:	38 cb                	cmp    %cl,%bl
    873f:	0f 85 c2 0b 00 00    	jne    9307 <alu_test_adc+0xd47>
    8745:	89 d1                	mov    %edx,%ecx
    8747:	c0 e8 07             	shr    $0x7,%al
    874a:	c0 e9 07             	shr    $0x7,%cl
    874d:	38 c8                	cmp    %cl,%al
    874f:	0f 85 9d 0b 00 00    	jne    92f2 <alu_test_adc+0xd32>
    8755:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8759:	89 d1                	mov    %edx,%ecx
    875b:	c1 e9 06             	shr    $0x6,%ecx
    875e:	89 c3                	mov    %eax,%ebx
    8760:	83 e1 01             	and    $0x1,%ecx
    8763:	c0 eb 06             	shr    $0x6,%bl
    8766:	83 e3 01             	and    $0x1,%ebx
    8769:	38 cb                	cmp    %cl,%bl
    876b:	0f 85 6c 0b 00 00    	jne    92dd <alu_test_adc+0xd1d>
    8771:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    8775:	c1 ea 0b             	shr    $0xb,%edx
    8778:	83 e2 01             	and    $0x1,%edx
    877b:	c0 e9 03             	shr    $0x3,%cl
    877e:	83 e1 01             	and    $0x1,%ecx
    8781:	38 d1                	cmp    %dl,%cl
    8783:	0f 85 3f 0b 00 00    	jne    92c8 <alu_test_adc+0xd08>
    8789:	83 ec 04             	sub    $0x4,%esp
    878c:	83 e0 fe             	and    $0xfffffffe,%eax
    878f:	88 46 24             	mov    %al,0x24(%esi)
    8792:	6a 08                	push   $0x8
    8794:	55                   	push   %ebp
    8795:	57                   	push   %edi
    8796:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    879a:	e8 e1 6c 00 00       	call   f480 <alu_adc>
    879f:	89 f9                	mov    %edi,%ecx
    87a1:	83 c4 10             	add    $0x10,%esp
    87a4:	89 c3                	mov    %eax,%ebx
    87a6:	89 e8                	mov    %ebp,%eax
    87a8:	f8                   	clc    
    87a9:	10 c8                	adc    %cl,%al
    87ab:	9c                   	pushf  
    87ac:	5a                   	pop    %edx
    87ad:	0f b6 c0             	movzbl %al,%eax
    87b0:	39 c3                	cmp    %eax,%ebx
    87b2:	0f 85 fb 0a 00 00    	jne    92b3 <alu_test_adc+0xcf3>
    87b8:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    87bc:	89 d1                	mov    %edx,%ecx
    87be:	83 e1 01             	and    $0x1,%ecx
    87c1:	89 c3                	mov    %eax,%ebx
    87c3:	83 e3 01             	and    $0x1,%ebx
    87c6:	38 cb                	cmp    %cl,%bl
    87c8:	0f 85 d0 0a 00 00    	jne    929e <alu_test_adc+0xcde>
    87ce:	89 c3                	mov    %eax,%ebx
    87d0:	89 d1                	mov    %edx,%ecx
    87d2:	c0 eb 02             	shr    $0x2,%bl
    87d5:	c1 e9 02             	shr    $0x2,%ecx
    87d8:	83 e3 01             	and    $0x1,%ebx
    87db:	83 e1 01             	and    $0x1,%ecx
    87de:	38 cb                	cmp    %cl,%bl
    87e0:	0f 85 a3 0a 00 00    	jne    9289 <alu_test_adc+0xcc9>
    87e6:	89 c3                	mov    %eax,%ebx
    87e8:	89 d1                	mov    %edx,%ecx
    87ea:	c0 eb 07             	shr    $0x7,%bl
    87ed:	c0 e9 07             	shr    $0x7,%cl
    87f0:	38 cb                	cmp    %cl,%bl
    87f2:	0f 85 7c 0a 00 00    	jne    9274 <alu_test_adc+0xcb4>
    87f8:	89 d1                	mov    %edx,%ecx
    87fa:	c0 e8 06             	shr    $0x6,%al
    87fd:	c1 e9 06             	shr    $0x6,%ecx
    8800:	83 e0 01             	and    $0x1,%eax
    8803:	83 e1 01             	and    $0x1,%ecx
    8806:	38 c8                	cmp    %cl,%al
    8808:	0f 85 51 0a 00 00    	jne    925f <alu_test_adc+0xc9f>
    880e:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    8812:	c1 ea 0b             	shr    $0xb,%edx
    8815:	83 e2 01             	and    $0x1,%edx
    8818:	c0 e8 03             	shr    $0x3,%al
    881b:	83 e0 01             	and    $0x1,%eax
    881e:	38 d0                	cmp    %dl,%al
    8820:	0f 85 24 0a 00 00    	jne    924a <alu_test_adc+0xc8a>
    8826:	8b 7c 24 14          	mov    0x14(%esp),%edi
    882a:	39 7c 24 10          	cmp    %edi,0x10(%esp)
    882e:	0f 85 0c fe ff ff    	jne    8640 <alu_test_adc+0x80>
    8834:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    8838:	39 f8                	cmp    %edi,%eax
    883a:	74 14                	je     8850 <alu_test_adc+0x290>
    883c:	8b 28                	mov    (%eax),%ebp
    883e:	83 c0 04             	add    $0x4,%eax
    8841:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8845:	e9 e6 fd ff ff       	jmp    8630 <alu_test_adc+0x70>
    884a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8850:	8b 44 24 18          	mov    0x18(%esp),%eax
    8854:	bd 00 00 00 10       	mov    $0x10000000,%ebp
    8859:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    885d:	8d 76 00             	lea    0x0(%esi),%esi
    8860:	8b 44 24 18          	mov    0x18(%esp),%eax
    8864:	bf 00 00 00 10       	mov    $0x10000000,%edi
    8869:	89 44 24 10          	mov    %eax,0x10(%esp)
    886d:	eb 0e                	jmp    887d <alu_test_adc+0x2bd>
    886f:	90                   	nop
    8870:	8b 44 24 10          	mov    0x10(%esp),%eax
    8874:	8b 38                	mov    (%eax),%edi
    8876:	83 c0 04             	add    $0x4,%eax
    8879:	89 44 24 10          	mov    %eax,0x10(%esp)
    887d:	83 ec 04             	sub    $0x4,%esp
    8880:	80 4e 24 01          	orb    $0x1,0x24(%esi)
    8884:	6a 20                	push   $0x20
    8886:	55                   	push   %ebp
    8887:	57                   	push   %edi
    8888:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    888c:	e8 ef 6b 00 00       	call   f480 <alu_adc>
    8891:	89 f9                	mov    %edi,%ecx
    8893:	83 c4 10             	add    $0x10,%esp
    8896:	89 c3                	mov    %eax,%ebx
    8898:	89 e8                	mov    %ebp,%eax
    889a:	f9                   	stc    
    889b:	11 c8                	adc    %ecx,%eax
    889d:	9c                   	pushf  
    889e:	5a                   	pop    %edx
    889f:	39 c3                	cmp    %eax,%ebx
    88a1:	0f 85 8e 09 00 00    	jne    9235 <alu_test_adc+0xc75>
    88a7:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    88ab:	89 d1                	mov    %edx,%ecx
    88ad:	83 e1 01             	and    $0x1,%ecx
    88b0:	89 c3                	mov    %eax,%ebx
    88b2:	83 e3 01             	and    $0x1,%ebx
    88b5:	38 cb                	cmp    %cl,%bl
    88b7:	0f 85 63 09 00 00    	jne    9220 <alu_test_adc+0xc60>
    88bd:	89 c3                	mov    %eax,%ebx
    88bf:	89 d1                	mov    %edx,%ecx
    88c1:	c0 eb 02             	shr    $0x2,%bl
    88c4:	c1 e9 02             	shr    $0x2,%ecx
    88c7:	83 e3 01             	and    $0x1,%ebx
    88ca:	83 e1 01             	and    $0x1,%ecx
    88cd:	38 cb                	cmp    %cl,%bl
    88cf:	0f 85 36 09 00 00    	jne    920b <alu_test_adc+0xc4b>
    88d5:	89 c3                	mov    %eax,%ebx
    88d7:	89 d1                	mov    %edx,%ecx
    88d9:	c0 eb 07             	shr    $0x7,%bl
    88dc:	c0 e9 07             	shr    $0x7,%cl
    88df:	38 cb                	cmp    %cl,%bl
    88e1:	0f 85 0f 09 00 00    	jne    91f6 <alu_test_adc+0xc36>
    88e7:	89 c3                	mov    %eax,%ebx
    88e9:	89 d1                	mov    %edx,%ecx
    88eb:	c0 eb 06             	shr    $0x6,%bl
    88ee:	c1 e9 06             	shr    $0x6,%ecx
    88f1:	83 e3 01             	and    $0x1,%ebx
    88f4:	83 e1 01             	and    $0x1,%ecx
    88f7:	38 cb                	cmp    %cl,%bl
    88f9:	0f 85 e2 08 00 00    	jne    91e1 <alu_test_adc+0xc21>
    88ff:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    8903:	c1 ea 0b             	shr    $0xb,%edx
    8906:	83 e2 01             	and    $0x1,%edx
    8909:	c0 e9 03             	shr    $0x3,%cl
    890c:	83 e1 01             	and    $0x1,%ecx
    890f:	38 d1                	cmp    %dl,%cl
    8911:	0f 85 b5 08 00 00    	jne    91cc <alu_test_adc+0xc0c>
    8917:	83 ec 04             	sub    $0x4,%esp
    891a:	83 c8 01             	or     $0x1,%eax
    891d:	88 46 24             	mov    %al,0x24(%esi)
    8920:	6a 10                	push   $0x10
    8922:	55                   	push   %ebp
    8923:	57                   	push   %edi
    8924:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8928:	e8 53 6b 00 00       	call   f480 <alu_adc>
    892d:	89 f9                	mov    %edi,%ecx
    892f:	83 c4 10             	add    $0x10,%esp
    8932:	89 c3                	mov    %eax,%ebx
    8934:	89 e8                	mov    %ebp,%eax
    8936:	f9                   	stc    
    8937:	66 11 c8             	adc    %cx,%ax
    893a:	9c                   	pushf  
    893b:	5a                   	pop    %edx
    893c:	0f b7 c0             	movzwl %ax,%eax
    893f:	39 c3                	cmp    %eax,%ebx
    8941:	0f 85 70 08 00 00    	jne    91b7 <alu_test_adc+0xbf7>
    8947:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    894b:	89 d1                	mov    %edx,%ecx
    894d:	83 e1 01             	and    $0x1,%ecx
    8950:	89 c3                	mov    %eax,%ebx
    8952:	83 e3 01             	and    $0x1,%ebx
    8955:	38 cb                	cmp    %cl,%bl
    8957:	0f 85 45 08 00 00    	jne    91a2 <alu_test_adc+0xbe2>
    895d:	89 c3                	mov    %eax,%ebx
    895f:	89 d1                	mov    %edx,%ecx
    8961:	c0 eb 02             	shr    $0x2,%bl
    8964:	c1 e9 02             	shr    $0x2,%ecx
    8967:	83 e3 01             	and    $0x1,%ebx
    896a:	83 e1 01             	and    $0x1,%ecx
    896d:	38 cb                	cmp    %cl,%bl
    896f:	0f 85 18 08 00 00    	jne    918d <alu_test_adc+0xbcd>
    8975:	89 d1                	mov    %edx,%ecx
    8977:	c0 e8 07             	shr    $0x7,%al
    897a:	c0 e9 07             	shr    $0x7,%cl
    897d:	38 c8                	cmp    %cl,%al
    897f:	0f 85 f3 07 00 00    	jne    9178 <alu_test_adc+0xbb8>
    8985:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8989:	89 d1                	mov    %edx,%ecx
    898b:	c1 e9 06             	shr    $0x6,%ecx
    898e:	89 c3                	mov    %eax,%ebx
    8990:	83 e1 01             	and    $0x1,%ecx
    8993:	c0 eb 06             	shr    $0x6,%bl
    8996:	83 e3 01             	and    $0x1,%ebx
    8999:	38 cb                	cmp    %cl,%bl
    899b:	0f 85 c2 07 00 00    	jne    9163 <alu_test_adc+0xba3>
    89a1:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    89a5:	c1 ea 0b             	shr    $0xb,%edx
    89a8:	83 e2 01             	and    $0x1,%edx
    89ab:	c0 e9 03             	shr    $0x3,%cl
    89ae:	83 e1 01             	and    $0x1,%ecx
    89b1:	38 d1                	cmp    %dl,%cl
    89b3:	0f 85 95 07 00 00    	jne    914e <alu_test_adc+0xb8e>
    89b9:	83 ec 04             	sub    $0x4,%esp
    89bc:	83 c8 01             	or     $0x1,%eax
    89bf:	88 46 24             	mov    %al,0x24(%esi)
    89c2:	6a 08                	push   $0x8
    89c4:	55                   	push   %ebp
    89c5:	57                   	push   %edi
    89c6:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    89ca:	e8 b1 6a 00 00       	call   f480 <alu_adc>
    89cf:	89 f9                	mov    %edi,%ecx
    89d1:	83 c4 10             	add    $0x10,%esp
    89d4:	89 c3                	mov    %eax,%ebx
    89d6:	89 e8                	mov    %ebp,%eax
    89d8:	f9                   	stc    
    89d9:	10 c8                	adc    %cl,%al
    89db:	9c                   	pushf  
    89dc:	5a                   	pop    %edx
    89dd:	0f b6 c0             	movzbl %al,%eax
    89e0:	39 c3                	cmp    %eax,%ebx
    89e2:	0f 85 51 07 00 00    	jne    9139 <alu_test_adc+0xb79>
    89e8:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    89ec:	89 d1                	mov    %edx,%ecx
    89ee:	83 e1 01             	and    $0x1,%ecx
    89f1:	89 c3                	mov    %eax,%ebx
    89f3:	83 e3 01             	and    $0x1,%ebx
    89f6:	38 cb                	cmp    %cl,%bl
    89f8:	0f 85 26 07 00 00    	jne    9124 <alu_test_adc+0xb64>
    89fe:	89 c3                	mov    %eax,%ebx
    8a00:	89 d1                	mov    %edx,%ecx
    8a02:	c0 eb 02             	shr    $0x2,%bl
    8a05:	c1 e9 02             	shr    $0x2,%ecx
    8a08:	83 e3 01             	and    $0x1,%ebx
    8a0b:	83 e1 01             	and    $0x1,%ecx
    8a0e:	38 cb                	cmp    %cl,%bl
    8a10:	0f 85 f9 06 00 00    	jne    910f <alu_test_adc+0xb4f>
    8a16:	89 c3                	mov    %eax,%ebx
    8a18:	89 d1                	mov    %edx,%ecx
    8a1a:	c0 eb 07             	shr    $0x7,%bl
    8a1d:	c0 e9 07             	shr    $0x7,%cl
    8a20:	38 cb                	cmp    %cl,%bl
    8a22:	0f 85 d2 06 00 00    	jne    90fa <alu_test_adc+0xb3a>
    8a28:	89 d1                	mov    %edx,%ecx
    8a2a:	c0 e8 06             	shr    $0x6,%al
    8a2d:	c1 e9 06             	shr    $0x6,%ecx
    8a30:	83 e0 01             	and    $0x1,%eax
    8a33:	83 e1 01             	and    $0x1,%ecx
    8a36:	38 c8                	cmp    %cl,%al
    8a38:	0f 85 a7 06 00 00    	jne    90e5 <alu_test_adc+0xb25>
    8a3e:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    8a42:	c1 ea 0b             	shr    $0xb,%edx
    8a45:	83 e2 01             	and    $0x1,%edx
    8a48:	c0 e8 03             	shr    $0x3,%al
    8a4b:	83 e0 01             	and    $0x1,%eax
    8a4e:	38 d0                	cmp    %dl,%al
    8a50:	0f 85 7a 06 00 00    	jne    90d0 <alu_test_adc+0xb10>
    8a56:	8b 7c 24 14          	mov    0x14(%esp),%edi
    8a5a:	39 7c 24 10          	cmp    %edi,0x10(%esp)
    8a5e:	0f 85 0c fe ff ff    	jne    8870 <alu_test_adc+0x2b0>
    8a64:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    8a68:	39 f8                	cmp    %edi,%eax
    8a6a:	74 14                	je     8a80 <alu_test_adc+0x4c0>
    8a6c:	8b 28                	mov    (%eax),%ebp
    8a6e:	83 c0 04             	add    $0x4,%eax
    8a71:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8a75:	e9 e6 fd ff ff       	jmp    8860 <alu_test_adc+0x2a0>
    8a7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8a80:	83 ec 0c             	sub    $0xc,%esp
    8a83:	6a 00                	push   $0x0
    8a85:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    8a89:	89 fb                	mov    %edi,%ebx
    8a8b:	e8 a0 b6 ff ff       	call   4130 <time@plt>
    8a90:	89 04 24             	mov    %eax,(%esp)
    8a93:	e8 f8 b6 ff ff       	call   4190 <srand@plt>
    8a98:	83 c4 10             	add    $0x10,%esp
    8a9b:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    8aa2:	00 
    8aa3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8aa7:	90                   	nop
    8aa8:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    8aac:	89 fb                	mov    %edi,%ebx
    8aae:	e8 3d b7 ff ff       	call   41f0 <rand@plt>
    8ab3:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    8ab7:	89 c5                	mov    %eax,%ebp
    8ab9:	e8 32 b7 ff ff       	call   41f0 <rand@plt>
    8abe:	83 ec 04             	sub    $0x4,%esp
    8ac1:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    8ac5:	6a 20                	push   $0x20
    8ac7:	89 c7                	mov    %eax,%edi
    8ac9:	55                   	push   %ebp
    8aca:	50                   	push   %eax
    8acb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8acf:	e8 ac 69 00 00       	call   f480 <alu_adc>
    8ad4:	89 f9                	mov    %edi,%ecx
    8ad6:	83 c4 10             	add    $0x10,%esp
    8ad9:	89 c3                	mov    %eax,%ebx
    8adb:	89 e8                	mov    %ebp,%eax
    8add:	f8                   	clc    
    8ade:	11 c8                	adc    %ecx,%eax
    8ae0:	9c                   	pushf  
    8ae1:	5a                   	pop    %edx
    8ae2:	39 c3                	cmp    %eax,%ebx
    8ae4:	0f 85 d1 05 00 00    	jne    90bb <alu_test_adc+0xafb>
    8aea:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8aee:	89 d1                	mov    %edx,%ecx
    8af0:	83 e1 01             	and    $0x1,%ecx
    8af3:	89 c3                	mov    %eax,%ebx
    8af5:	83 e3 01             	and    $0x1,%ebx
    8af8:	38 cb                	cmp    %cl,%bl
    8afa:	0f 85 a6 05 00 00    	jne    90a6 <alu_test_adc+0xae6>
    8b00:	89 c3                	mov    %eax,%ebx
    8b02:	89 d1                	mov    %edx,%ecx
    8b04:	c0 eb 02             	shr    $0x2,%bl
    8b07:	c1 e9 02             	shr    $0x2,%ecx
    8b0a:	83 e3 01             	and    $0x1,%ebx
    8b0d:	83 e1 01             	and    $0x1,%ecx
    8b10:	38 cb                	cmp    %cl,%bl
    8b12:	0f 85 79 05 00 00    	jne    9091 <alu_test_adc+0xad1>
    8b18:	89 c3                	mov    %eax,%ebx
    8b1a:	89 d1                	mov    %edx,%ecx
    8b1c:	c0 eb 07             	shr    $0x7,%bl
    8b1f:	c0 e9 07             	shr    $0x7,%cl
    8b22:	38 cb                	cmp    %cl,%bl
    8b24:	0f 85 52 05 00 00    	jne    907c <alu_test_adc+0xabc>
    8b2a:	89 c3                	mov    %eax,%ebx
    8b2c:	89 d1                	mov    %edx,%ecx
    8b2e:	c0 eb 06             	shr    $0x6,%bl
    8b31:	c1 e9 06             	shr    $0x6,%ecx
    8b34:	83 e3 01             	and    $0x1,%ebx
    8b37:	83 e1 01             	and    $0x1,%ecx
    8b3a:	38 cb                	cmp    %cl,%bl
    8b3c:	0f 85 25 05 00 00    	jne    9067 <alu_test_adc+0xaa7>
    8b42:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    8b46:	c1 ea 0b             	shr    $0xb,%edx
    8b49:	83 e2 01             	and    $0x1,%edx
    8b4c:	c0 e9 03             	shr    $0x3,%cl
    8b4f:	83 e1 01             	and    $0x1,%ecx
    8b52:	38 d1                	cmp    %dl,%cl
    8b54:	0f 85 f8 04 00 00    	jne    9052 <alu_test_adc+0xa92>
    8b5a:	83 ec 04             	sub    $0x4,%esp
    8b5d:	83 e0 fe             	and    $0xfffffffe,%eax
    8b60:	88 46 24             	mov    %al,0x24(%esi)
    8b63:	6a 10                	push   $0x10
    8b65:	55                   	push   %ebp
    8b66:	57                   	push   %edi
    8b67:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8b6b:	e8 10 69 00 00       	call   f480 <alu_adc>
    8b70:	89 f9                	mov    %edi,%ecx
    8b72:	83 c4 10             	add    $0x10,%esp
    8b75:	89 c3                	mov    %eax,%ebx
    8b77:	89 e8                	mov    %ebp,%eax
    8b79:	f8                   	clc    
    8b7a:	66 11 c8             	adc    %cx,%ax
    8b7d:	9c                   	pushf  
    8b7e:	5a                   	pop    %edx
    8b7f:	0f b7 c0             	movzwl %ax,%eax
    8b82:	39 c3                	cmp    %eax,%ebx
    8b84:	0f 85 b3 04 00 00    	jne    903d <alu_test_adc+0xa7d>
    8b8a:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8b8e:	89 d1                	mov    %edx,%ecx
    8b90:	83 e1 01             	and    $0x1,%ecx
    8b93:	89 c3                	mov    %eax,%ebx
    8b95:	83 e3 01             	and    $0x1,%ebx
    8b98:	38 cb                	cmp    %cl,%bl
    8b9a:	0f 85 88 04 00 00    	jne    9028 <alu_test_adc+0xa68>
    8ba0:	89 c3                	mov    %eax,%ebx
    8ba2:	89 d1                	mov    %edx,%ecx
    8ba4:	c0 eb 02             	shr    $0x2,%bl
    8ba7:	c1 e9 02             	shr    $0x2,%ecx
    8baa:	83 e3 01             	and    $0x1,%ebx
    8bad:	83 e1 01             	and    $0x1,%ecx
    8bb0:	38 cb                	cmp    %cl,%bl
    8bb2:	0f 85 5b 04 00 00    	jne    9013 <alu_test_adc+0xa53>
    8bb8:	89 d1                	mov    %edx,%ecx
    8bba:	c0 e8 07             	shr    $0x7,%al
    8bbd:	c0 e9 07             	shr    $0x7,%cl
    8bc0:	38 c8                	cmp    %cl,%al
    8bc2:	0f 85 36 04 00 00    	jne    8ffe <alu_test_adc+0xa3e>
    8bc8:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8bcc:	89 d1                	mov    %edx,%ecx
    8bce:	c1 e9 06             	shr    $0x6,%ecx
    8bd1:	89 c3                	mov    %eax,%ebx
    8bd3:	83 e1 01             	and    $0x1,%ecx
    8bd6:	c0 eb 06             	shr    $0x6,%bl
    8bd9:	83 e3 01             	and    $0x1,%ebx
    8bdc:	38 cb                	cmp    %cl,%bl
    8bde:	0f 85 05 04 00 00    	jne    8fe9 <alu_test_adc+0xa29>
    8be4:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    8be8:	c1 ea 0b             	shr    $0xb,%edx
    8beb:	83 e2 01             	and    $0x1,%edx
    8bee:	c0 e9 03             	shr    $0x3,%cl
    8bf1:	83 e1 01             	and    $0x1,%ecx
    8bf4:	38 d1                	cmp    %dl,%cl
    8bf6:	0f 85 d8 03 00 00    	jne    8fd4 <alu_test_adc+0xa14>
    8bfc:	83 ec 04             	sub    $0x4,%esp
    8bff:	83 e0 fe             	and    $0xfffffffe,%eax
    8c02:	88 46 24             	mov    %al,0x24(%esi)
    8c05:	6a 08                	push   $0x8
    8c07:	55                   	push   %ebp
    8c08:	57                   	push   %edi
    8c09:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8c0d:	e8 6e 68 00 00       	call   f480 <alu_adc>
    8c12:	89 f9                	mov    %edi,%ecx
    8c14:	83 c4 10             	add    $0x10,%esp
    8c17:	89 c3                	mov    %eax,%ebx
    8c19:	89 e8                	mov    %ebp,%eax
    8c1b:	f8                   	clc    
    8c1c:	10 c8                	adc    %cl,%al
    8c1e:	9c                   	pushf  
    8c1f:	5a                   	pop    %edx
    8c20:	0f b6 c0             	movzbl %al,%eax
    8c23:	39 c3                	cmp    %eax,%ebx
    8c25:	0f 85 94 03 00 00    	jne    8fbf <alu_test_adc+0x9ff>
    8c2b:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8c2f:	89 d1                	mov    %edx,%ecx
    8c31:	83 e1 01             	and    $0x1,%ecx
    8c34:	89 c3                	mov    %eax,%ebx
    8c36:	83 e3 01             	and    $0x1,%ebx
    8c39:	38 cb                	cmp    %cl,%bl
    8c3b:	0f 85 5b 03 00 00    	jne    8f9c <alu_test_adc+0x9dc>
    8c41:	89 c3                	mov    %eax,%ebx
    8c43:	89 d1                	mov    %edx,%ecx
    8c45:	c0 eb 02             	shr    $0x2,%bl
    8c48:	c1 e9 02             	shr    $0x2,%ecx
    8c4b:	83 e3 01             	and    $0x1,%ebx
    8c4e:	83 e1 01             	and    $0x1,%ecx
    8c51:	38 cb                	cmp    %cl,%bl
    8c53:	0f 85 20 03 00 00    	jne    8f79 <alu_test_adc+0x9b9>
    8c59:	89 c3                	mov    %eax,%ebx
    8c5b:	89 d1                	mov    %edx,%ecx
    8c5d:	c0 eb 07             	shr    $0x7,%bl
    8c60:	c0 e9 07             	shr    $0x7,%cl
    8c63:	38 cb                	cmp    %cl,%bl
    8c65:	0f 85 eb 02 00 00    	jne    8f56 <alu_test_adc+0x996>
    8c6b:	89 d1                	mov    %edx,%ecx
    8c6d:	c0 e8 06             	shr    $0x6,%al
    8c70:	c1 e9 06             	shr    $0x6,%ecx
    8c73:	83 e0 01             	and    $0x1,%eax
    8c76:	83 e1 01             	and    $0x1,%ecx
    8c79:	38 c8                	cmp    %cl,%al
    8c7b:	0f 85 b2 02 00 00    	jne    8f33 <alu_test_adc+0x973>
    8c81:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    8c85:	c1 ea 0b             	shr    $0xb,%edx
    8c88:	83 e2 01             	and    $0x1,%edx
    8c8b:	c0 e8 03             	shr    $0x3,%al
    8c8e:	83 e0 01             	and    $0x1,%eax
    8c91:	38 d0                	cmp    %dl,%al
    8c93:	0f 85 77 02 00 00    	jne    8f10 <alu_test_adc+0x950>
    8c99:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    8c9e:	0f 85 04 fe ff ff    	jne    8aa8 <alu_test_adc+0x4e8>
    8ca4:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    8cab:	00 
    8cac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8cb0:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    8cb4:	89 fb                	mov    %edi,%ebx
    8cb6:	e8 35 b5 ff ff       	call   41f0 <rand@plt>
    8cbb:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    8cbf:	89 c5                	mov    %eax,%ebp
    8cc1:	e8 2a b5 ff ff       	call   41f0 <rand@plt>
    8cc6:	83 ec 04             	sub    $0x4,%esp
    8cc9:	80 4e 24 01          	orb    $0x1,0x24(%esi)
    8ccd:	6a 20                	push   $0x20
    8ccf:	89 c7                	mov    %eax,%edi
    8cd1:	55                   	push   %ebp
    8cd2:	50                   	push   %eax
    8cd3:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8cd7:	e8 a4 67 00 00       	call   f480 <alu_adc>
    8cdc:	89 f9                	mov    %edi,%ecx
    8cde:	83 c4 10             	add    $0x10,%esp
    8ce1:	89 c3                	mov    %eax,%ebx
    8ce3:	89 e8                	mov    %ebp,%eax
    8ce5:	f9                   	stc    
    8ce6:	11 c8                	adc    %ecx,%eax
    8ce8:	9c                   	pushf  
    8ce9:	5a                   	pop    %edx
    8cea:	39 c3                	cmp    %eax,%ebx
    8cec:	0f 85 7a 07 00 00    	jne    946c <alu_test_adc+0xeac>
    8cf2:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8cf6:	89 d1                	mov    %edx,%ecx
    8cf8:	83 e1 01             	and    $0x1,%ecx
    8cfb:	89 c3                	mov    %eax,%ebx
    8cfd:	83 e3 01             	and    $0x1,%ebx
    8d00:	38 cb                	cmp    %cl,%bl
    8d02:	0f 85 3a 07 00 00    	jne    9442 <alu_test_adc+0xe82>
    8d08:	89 c3                	mov    %eax,%ebx
    8d0a:	89 d1                	mov    %edx,%ecx
    8d0c:	c0 eb 02             	shr    $0x2,%bl
    8d0f:	c1 e9 02             	shr    $0x2,%ecx
    8d12:	83 e3 01             	and    $0x1,%ebx
    8d15:	83 e1 01             	and    $0x1,%ecx
    8d18:	38 cb                	cmp    %cl,%bl
    8d1a:	0f 85 0d 07 00 00    	jne    942d <alu_test_adc+0xe6d>
    8d20:	89 c3                	mov    %eax,%ebx
    8d22:	89 d1                	mov    %edx,%ecx
    8d24:	c0 eb 07             	shr    $0x7,%bl
    8d27:	c0 e9 07             	shr    $0x7,%cl
    8d2a:	38 cb                	cmp    %cl,%bl
    8d2c:	0f 85 7d 06 00 00    	jne    93af <alu_test_adc+0xdef>
    8d32:	89 c3                	mov    %eax,%ebx
    8d34:	89 d1                	mov    %edx,%ecx
    8d36:	c0 eb 06             	shr    $0x6,%bl
    8d39:	c1 e9 06             	shr    $0x6,%ecx
    8d3c:	83 e3 01             	and    $0x1,%ebx
    8d3f:	83 e1 01             	and    $0x1,%ecx
    8d42:	38 cb                	cmp    %cl,%bl
    8d44:	0f 85 7a 06 00 00    	jne    93c4 <alu_test_adc+0xe04>
    8d4a:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    8d4e:	c1 ea 0b             	shr    $0xb,%edx
    8d51:	83 e2 01             	and    $0x1,%edx
    8d54:	c0 e9 03             	shr    $0x3,%cl
    8d57:	83 e1 01             	and    $0x1,%ecx
    8d5a:	38 d1                	cmp    %dl,%cl
    8d5c:	0f 85 77 06 00 00    	jne    93d9 <alu_test_adc+0xe19>
    8d62:	83 ec 04             	sub    $0x4,%esp
    8d65:	83 c8 01             	or     $0x1,%eax
    8d68:	88 46 24             	mov    %al,0x24(%esi)
    8d6b:	6a 10                	push   $0x10
    8d6d:	55                   	push   %ebp
    8d6e:	57                   	push   %edi
    8d6f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8d73:	e8 08 67 00 00       	call   f480 <alu_adc>
    8d78:	89 f9                	mov    %edi,%ecx
    8d7a:	83 c4 10             	add    $0x10,%esp
    8d7d:	89 c3                	mov    %eax,%ebx
    8d7f:	89 e8                	mov    %ebp,%eax
    8d81:	f9                   	stc    
    8d82:	66 11 c8             	adc    %cx,%ax
    8d85:	9c                   	pushf  
    8d86:	5a                   	pop    %edx
    8d87:	0f b7 c0             	movzwl %ax,%eax
    8d8a:	39 c3                	cmp    %eax,%ebx
    8d8c:	0f 85 5c 06 00 00    	jne    93ee <alu_test_adc+0xe2e>
    8d92:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8d96:	89 d1                	mov    %edx,%ecx
    8d98:	83 e1 01             	and    $0x1,%ecx
    8d9b:	89 c3                	mov    %eax,%ebx
    8d9d:	83 e3 01             	and    $0x1,%ebx
    8da0:	38 cb                	cmp    %cl,%bl
    8da2:	0f 85 5b 06 00 00    	jne    9403 <alu_test_adc+0xe43>
    8da8:	89 c3                	mov    %eax,%ebx
    8daa:	89 d1                	mov    %edx,%ecx
    8dac:	c0 eb 02             	shr    $0x2,%bl
    8daf:	c1 e9 02             	shr    $0x2,%ecx
    8db2:	83 e3 01             	and    $0x1,%ebx
    8db5:	83 e1 01             	and    $0x1,%ecx
    8db8:	38 cb                	cmp    %cl,%bl
    8dba:	0f 85 58 06 00 00    	jne    9418 <alu_test_adc+0xe58>
    8dc0:	89 d1                	mov    %edx,%ecx
    8dc2:	c0 e8 07             	shr    $0x7,%al
    8dc5:	c0 e9 07             	shr    $0x7,%cl
    8dc8:	38 c8                	cmp    %cl,%al
    8dca:	0f 85 b1 06 00 00    	jne    9481 <alu_test_adc+0xec1>
    8dd0:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8dd4:	89 d1                	mov    %edx,%ecx
    8dd6:	c1 e9 06             	shr    $0x6,%ecx
    8dd9:	89 c3                	mov    %eax,%ebx
    8ddb:	83 e1 01             	and    $0x1,%ecx
    8dde:	c0 eb 06             	shr    $0x6,%bl
    8de1:	83 e3 01             	and    $0x1,%ebx
    8de4:	38 cb                	cmp    %cl,%bl
    8de6:	0f 85 aa 06 00 00    	jne    9496 <alu_test_adc+0xed6>
    8dec:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    8df0:	c1 ea 0b             	shr    $0xb,%edx
    8df3:	83 e2 01             	and    $0x1,%edx
    8df6:	c0 e9 03             	shr    $0x3,%cl
    8df9:	83 e1 01             	and    $0x1,%ecx
    8dfc:	38 d1                	cmp    %dl,%cl
    8dfe:	0f 85 a7 06 00 00    	jne    94ab <alu_test_adc+0xeeb>
    8e04:	83 ec 04             	sub    $0x4,%esp
    8e07:	83 c8 01             	or     $0x1,%eax
    8e0a:	88 46 24             	mov    %al,0x24(%esi)
    8e0d:	6a 08                	push   $0x8
    8e0f:	55                   	push   %ebp
    8e10:	57                   	push   %edi
    8e11:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8e15:	e8 66 66 00 00       	call   f480 <alu_adc>
    8e1a:	89 f9                	mov    %edi,%ecx
    8e1c:	83 c4 10             	add    $0x10,%esp
    8e1f:	89 c3                	mov    %eax,%ebx
    8e21:	89 e8                	mov    %ebp,%eax
    8e23:	f9                   	stc    
    8e24:	10 c8                	adc    %cl,%al
    8e26:	9c                   	pushf  
    8e27:	5a                   	pop    %edx
    8e28:	0f b6 c0             	movzbl %al,%eax
    8e2b:	39 c3                	cmp    %eax,%ebx
    8e2d:	0f 85 8d 06 00 00    	jne    94c0 <alu_test_adc+0xf00>
    8e33:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    8e37:	89 d1                	mov    %edx,%ecx
    8e39:	83 e1 01             	and    $0x1,%ecx
    8e3c:	89 c3                	mov    %eax,%ebx
    8e3e:	83 e3 01             	and    $0x1,%ebx
    8e41:	38 cb                	cmp    %cl,%bl
    8e43:	0f 85 8c 06 00 00    	jne    94d5 <alu_test_adc+0xf15>
    8e49:	89 c3                	mov    %eax,%ebx
    8e4b:	89 d1                	mov    %edx,%ecx
    8e4d:	c0 eb 02             	shr    $0x2,%bl
    8e50:	c1 e9 02             	shr    $0x2,%ecx
    8e53:	83 e3 01             	and    $0x1,%ebx
    8e56:	83 e1 01             	and    $0x1,%ecx
    8e59:	38 cb                	cmp    %cl,%bl
    8e5b:	0f 85 89 06 00 00    	jne    94ea <alu_test_adc+0xf2a>
    8e61:	89 c3                	mov    %eax,%ebx
    8e63:	89 d1                	mov    %edx,%ecx
    8e65:	c0 eb 07             	shr    $0x7,%bl
    8e68:	c0 e9 07             	shr    $0x7,%cl
    8e6b:	38 cb                	cmp    %cl,%bl
    8e6d:	0f 85 8c 06 00 00    	jne    94ff <alu_test_adc+0xf3f>
    8e73:	89 d1                	mov    %edx,%ecx
    8e75:	c0 e8 06             	shr    $0x6,%al
    8e78:	c1 e9 06             	shr    $0x6,%ecx
    8e7b:	83 e0 01             	and    $0x1,%eax
    8e7e:	83 e1 01             	and    $0x1,%ecx
    8e81:	38 c8                	cmp    %cl,%al
    8e83:	0f 85 8b 06 00 00    	jne    9514 <alu_test_adc+0xf54>
    8e89:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    8e8d:	c1 ea 0b             	shr    $0xb,%edx
    8e90:	83 e2 01             	and    $0x1,%edx
    8e93:	c0 e8 03             	shr    $0x3,%al
    8e96:	83 e0 01             	and    $0x1,%eax
    8e99:	38 d0                	cmp    %dl,%al
    8e9b:	0f 85 b6 05 00 00    	jne    9457 <alu_test_adc+0xe97>
    8ea1:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    8ea6:	0f 85 04 fe ff ff    	jne    8cb0 <alu_test_adc+0x6f0>
    8eac:	83 ec 0c             	sub    $0xc,%esp
    8eaf:	8b 7c 24 18          	mov    0x18(%esp),%edi
    8eb3:	8d 87 04 71 fe ff    	lea    -0x18efc(%edi),%eax
    8eb9:	89 fb                	mov    %edi,%ebx
    8ebb:	50                   	push   %eax
    8ebc:	e8 ef b3 ff ff       	call   42b0 <puts@plt>
    8ec1:	e8 3a 19 02 00       	call   2a800 <get_ref>
    8ec6:	83 c4 10             	add    $0x10,%esp
    8ec9:	85 c0                	test   %eax,%eax
    8ecb:	75 08                	jne    8ed5 <alu_test_adc+0x915>
    8ecd:	83 c4 4c             	add    $0x4c,%esp
    8ed0:	5b                   	pop    %ebx
    8ed1:	5e                   	pop    %esi
    8ed2:	5f                   	pop    %edi
    8ed3:	5d                   	pop    %ebp
    8ed4:	c3                   	ret    
    8ed5:	83 ec 0c             	sub    $0xc,%esp
    8ed8:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    8edc:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    8ee2:	50                   	push   %eax
    8ee3:	e8 c8 b3 ff ff       	call   42b0 <puts@plt>
    8ee8:	83 c4 10             	add    $0x10,%esp
    8eeb:	eb e0                	jmp    8ecd <alu_test_adc+0x90d>
    8eed:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8ef1:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8ef7:	50                   	push   %eax
    8ef8:	68 85 00 00 00       	push   $0x85
    8efd:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    8f03:	50                   	push   %eax
    8f04:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    8f0a:	50                   	push   %eax
    8f0b:	e8 00 b4 ff ff       	call   4310 <__assert_fail@plt>
    8f10:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8f14:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8f1a:	50                   	push   %eax
    8f1b:	68 9b 00 00 00       	push   $0x9b
    8f20:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    8f26:	50                   	push   %eax
    8f27:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    8f2d:	50                   	push   %eax
    8f2e:	e8 dd b3 ff ff       	call   4310 <__assert_fail@plt>
    8f33:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8f37:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8f3d:	50                   	push   %eax
    8f3e:	68 9b 00 00 00       	push   $0x9b
    8f43:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    8f49:	50                   	push   %eax
    8f4a:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    8f50:	50                   	push   %eax
    8f51:	e8 ba b3 ff ff       	call   4310 <__assert_fail@plt>
    8f56:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8f5a:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8f60:	50                   	push   %eax
    8f61:	68 9b 00 00 00       	push   $0x9b
    8f66:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    8f6c:	50                   	push   %eax
    8f6d:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    8f73:	50                   	push   %eax
    8f74:	e8 97 b3 ff ff       	call   4310 <__assert_fail@plt>
    8f79:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8f7d:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8f83:	50                   	push   %eax
    8f84:	68 9b 00 00 00       	push   $0x9b
    8f89:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    8f8f:	50                   	push   %eax
    8f90:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    8f96:	50                   	push   %eax
    8f97:	e8 74 b3 ff ff       	call   4310 <__assert_fail@plt>
    8f9c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8fa0:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8fa6:	50                   	push   %eax
    8fa7:	68 9b 00 00 00       	push   $0x9b
    8fac:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    8fb2:	50                   	push   %eax
    8fb3:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    8fb9:	50                   	push   %eax
    8fba:	e8 51 b3 ff ff       	call   4310 <__assert_fail@plt>
    8fbf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8fc3:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8fc9:	50                   	push   %eax
    8fca:	68 9b 00 00 00       	push   $0x9b
    8fcf:	e9 29 ff ff ff       	jmp    8efd <alu_test_adc+0x93d>
    8fd4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8fd8:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8fde:	50                   	push   %eax
    8fdf:	68 9a 00 00 00       	push   $0x9a
    8fe4:	e9 37 ff ff ff       	jmp    8f20 <alu_test_adc+0x960>
    8fe9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    8fed:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    8ff3:	50                   	push   %eax
    8ff4:	68 9a 00 00 00       	push   $0x9a
    8ff9:	e9 45 ff ff ff       	jmp    8f43 <alu_test_adc+0x983>
    8ffe:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9002:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9008:	50                   	push   %eax
    9009:	68 9a 00 00 00       	push   $0x9a
    900e:	e9 53 ff ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    9013:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9017:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    901d:	50                   	push   %eax
    901e:	68 9a 00 00 00       	push   $0x9a
    9023:	e9 61 ff ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    9028:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    902c:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9032:	50                   	push   %eax
    9033:	68 9a 00 00 00       	push   $0x9a
    9038:	e9 6f ff ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    903d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9041:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9047:	50                   	push   %eax
    9048:	68 9a 00 00 00       	push   $0x9a
    904d:	e9 ab fe ff ff       	jmp    8efd <alu_test_adc+0x93d>
    9052:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9056:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    905c:	50                   	push   %eax
    905d:	68 99 00 00 00       	push   $0x99
    9062:	e9 b9 fe ff ff       	jmp    8f20 <alu_test_adc+0x960>
    9067:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    906b:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9071:	50                   	push   %eax
    9072:	68 99 00 00 00       	push   $0x99
    9077:	e9 c7 fe ff ff       	jmp    8f43 <alu_test_adc+0x983>
    907c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9080:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9086:	50                   	push   %eax
    9087:	68 99 00 00 00       	push   $0x99
    908c:	e9 d5 fe ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    9091:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9095:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    909b:	50                   	push   %eax
    909c:	68 99 00 00 00       	push   $0x99
    90a1:	e9 e3 fe ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    90a6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    90aa:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    90b0:	50                   	push   %eax
    90b1:	68 99 00 00 00       	push   $0x99
    90b6:	e9 f1 fe ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    90bb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    90bf:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    90c5:	50                   	push   %eax
    90c6:	68 99 00 00 00       	push   $0x99
    90cb:	e9 2d fe ff ff       	jmp    8efd <alu_test_adc+0x93d>
    90d0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    90d4:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    90da:	50                   	push   %eax
    90db:	68 91 00 00 00       	push   $0x91
    90e0:	e9 3b fe ff ff       	jmp    8f20 <alu_test_adc+0x960>
    90e5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    90e9:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    90ef:	50                   	push   %eax
    90f0:	68 91 00 00 00       	push   $0x91
    90f5:	e9 49 fe ff ff       	jmp    8f43 <alu_test_adc+0x983>
    90fa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    90fe:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9104:	50                   	push   %eax
    9105:	68 91 00 00 00       	push   $0x91
    910a:	e9 57 fe ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    910f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9113:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9119:	50                   	push   %eax
    911a:	68 91 00 00 00       	push   $0x91
    911f:	e9 65 fe ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    9124:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9128:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    912e:	50                   	push   %eax
    912f:	68 91 00 00 00       	push   $0x91
    9134:	e9 73 fe ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    9139:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    913d:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9143:	50                   	push   %eax
    9144:	68 91 00 00 00       	push   $0x91
    9149:	e9 af fd ff ff       	jmp    8efd <alu_test_adc+0x93d>
    914e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9152:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9158:	50                   	push   %eax
    9159:	68 90 00 00 00       	push   $0x90
    915e:	e9 bd fd ff ff       	jmp    8f20 <alu_test_adc+0x960>
    9163:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9167:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    916d:	50                   	push   %eax
    916e:	68 90 00 00 00       	push   $0x90
    9173:	e9 cb fd ff ff       	jmp    8f43 <alu_test_adc+0x983>
    9178:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    917c:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9182:	50                   	push   %eax
    9183:	68 90 00 00 00       	push   $0x90
    9188:	e9 d9 fd ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    918d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9191:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9197:	50                   	push   %eax
    9198:	68 90 00 00 00       	push   $0x90
    919d:	e9 e7 fd ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    91a2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    91a6:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    91ac:	50                   	push   %eax
    91ad:	68 90 00 00 00       	push   $0x90
    91b2:	e9 f5 fd ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    91b7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    91bb:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    91c1:	50                   	push   %eax
    91c2:	68 90 00 00 00       	push   $0x90
    91c7:	e9 31 fd ff ff       	jmp    8efd <alu_test_adc+0x93d>
    91cc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    91d0:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    91d6:	50                   	push   %eax
    91d7:	68 8f 00 00 00       	push   $0x8f
    91dc:	e9 3f fd ff ff       	jmp    8f20 <alu_test_adc+0x960>
    91e1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    91e5:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    91eb:	50                   	push   %eax
    91ec:	68 8f 00 00 00       	push   $0x8f
    91f1:	e9 4d fd ff ff       	jmp    8f43 <alu_test_adc+0x983>
    91f6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    91fa:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9200:	50                   	push   %eax
    9201:	68 8f 00 00 00       	push   $0x8f
    9206:	e9 5b fd ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    920b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    920f:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9215:	50                   	push   %eax
    9216:	68 8f 00 00 00       	push   $0x8f
    921b:	e9 69 fd ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    9220:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9224:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    922a:	50                   	push   %eax
    922b:	68 8f 00 00 00       	push   $0x8f
    9230:	e9 77 fd ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    9235:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9239:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    923f:	50                   	push   %eax
    9240:	68 8f 00 00 00       	push   $0x8f
    9245:	e9 b3 fc ff ff       	jmp    8efd <alu_test_adc+0x93d>
    924a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    924e:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9254:	50                   	push   %eax
    9255:	68 87 00 00 00       	push   $0x87
    925a:	e9 c1 fc ff ff       	jmp    8f20 <alu_test_adc+0x960>
    925f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9263:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9269:	50                   	push   %eax
    926a:	68 87 00 00 00       	push   $0x87
    926f:	e9 cf fc ff ff       	jmp    8f43 <alu_test_adc+0x983>
    9274:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9278:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    927e:	50                   	push   %eax
    927f:	68 87 00 00 00       	push   $0x87
    9284:	e9 dd fc ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    9289:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    928d:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9293:	50                   	push   %eax
    9294:	68 87 00 00 00       	push   $0x87
    9299:	e9 eb fc ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    929e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    92a2:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    92a8:	50                   	push   %eax
    92a9:	68 87 00 00 00       	push   $0x87
    92ae:	e9 f9 fc ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    92b3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    92b7:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    92bd:	50                   	push   %eax
    92be:	68 87 00 00 00       	push   $0x87
    92c3:	e9 35 fc ff ff       	jmp    8efd <alu_test_adc+0x93d>
    92c8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    92cc:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    92d2:	50                   	push   %eax
    92d3:	68 86 00 00 00       	push   $0x86
    92d8:	e9 43 fc ff ff       	jmp    8f20 <alu_test_adc+0x960>
    92dd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    92e1:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    92e7:	50                   	push   %eax
    92e8:	68 86 00 00 00       	push   $0x86
    92ed:	e9 51 fc ff ff       	jmp    8f43 <alu_test_adc+0x983>
    92f2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    92f6:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    92fc:	50                   	push   %eax
    92fd:	68 86 00 00 00       	push   $0x86
    9302:	e9 5f fc ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    9307:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    930b:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9311:	50                   	push   %eax
    9312:	68 86 00 00 00       	push   $0x86
    9317:	e9 6d fc ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    931c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9320:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9326:	50                   	push   %eax
    9327:	68 86 00 00 00       	push   $0x86
    932c:	e9 7b fc ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    9331:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9335:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    933b:	50                   	push   %eax
    933c:	68 86 00 00 00       	push   $0x86
    9341:	e9 b7 fb ff ff       	jmp    8efd <alu_test_adc+0x93d>
    9346:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    934a:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9350:	50                   	push   %eax
    9351:	68 85 00 00 00       	push   $0x85
    9356:	e9 c5 fb ff ff       	jmp    8f20 <alu_test_adc+0x960>
    935b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    935f:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9365:	50                   	push   %eax
    9366:	68 85 00 00 00       	push   $0x85
    936b:	e9 d3 fb ff ff       	jmp    8f43 <alu_test_adc+0x983>
    9370:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9374:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    937a:	50                   	push   %eax
    937b:	68 85 00 00 00       	push   $0x85
    9380:	e9 e1 fb ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    9385:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9389:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    938f:	50                   	push   %eax
    9390:	68 85 00 00 00       	push   $0x85
    9395:	e9 ef fb ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    939a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    939e:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    93a4:	50                   	push   %eax
    93a5:	68 85 00 00 00       	push   $0x85
    93aa:	e9 fd fb ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    93af:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    93b3:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    93b9:	50                   	push   %eax
    93ba:	68 a1 00 00 00       	push   $0xa1
    93bf:	e9 a2 fb ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    93c4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    93c8:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    93ce:	50                   	push   %eax
    93cf:	68 a1 00 00 00       	push   $0xa1
    93d4:	e9 6a fb ff ff       	jmp    8f43 <alu_test_adc+0x983>
    93d9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    93dd:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    93e3:	50                   	push   %eax
    93e4:	68 a1 00 00 00       	push   $0xa1
    93e9:	e9 32 fb ff ff       	jmp    8f20 <alu_test_adc+0x960>
    93ee:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    93f2:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    93f8:	50                   	push   %eax
    93f9:	68 a2 00 00 00       	push   $0xa2
    93fe:	e9 fa fa ff ff       	jmp    8efd <alu_test_adc+0x93d>
    9403:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9407:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    940d:	50                   	push   %eax
    940e:	68 a2 00 00 00       	push   $0xa2
    9413:	e9 94 fb ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    9418:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    941c:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9422:	50                   	push   %eax
    9423:	68 a2 00 00 00       	push   $0xa2
    9428:	e9 5c fb ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    942d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9431:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9437:	50                   	push   %eax
    9438:	68 a1 00 00 00       	push   $0xa1
    943d:	e9 47 fb ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    9442:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9446:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    944c:	50                   	push   %eax
    944d:	68 a1 00 00 00       	push   $0xa1
    9452:	e9 55 fb ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    9457:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    945b:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9461:	50                   	push   %eax
    9462:	68 a3 00 00 00       	push   $0xa3
    9467:	e9 b4 fa ff ff       	jmp    8f20 <alu_test_adc+0x960>
    946c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9470:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9476:	50                   	push   %eax
    9477:	68 a1 00 00 00       	push   $0xa1
    947c:	e9 7c fa ff ff       	jmp    8efd <alu_test_adc+0x93d>
    9481:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9485:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    948b:	50                   	push   %eax
    948c:	68 a2 00 00 00       	push   $0xa2
    9491:	e9 d0 fa ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    9496:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    949a:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    94a0:	50                   	push   %eax
    94a1:	68 a2 00 00 00       	push   $0xa2
    94a6:	e9 98 fa ff ff       	jmp    8f43 <alu_test_adc+0x983>
    94ab:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    94af:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    94b5:	50                   	push   %eax
    94b6:	68 a2 00 00 00       	push   $0xa2
    94bb:	e9 60 fa ff ff       	jmp    8f20 <alu_test_adc+0x960>
    94c0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    94c4:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    94ca:	50                   	push   %eax
    94cb:	68 a3 00 00 00       	push   $0xa3
    94d0:	e9 28 fa ff ff       	jmp    8efd <alu_test_adc+0x93d>
    94d5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    94d9:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    94df:	50                   	push   %eax
    94e0:	68 a3 00 00 00       	push   $0xa3
    94e5:	e9 c2 fa ff ff       	jmp    8fac <alu_test_adc+0x9ec>
    94ea:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    94ee:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    94f4:	50                   	push   %eax
    94f5:	68 a3 00 00 00       	push   $0xa3
    94fa:	e9 8a fa ff ff       	jmp    8f89 <alu_test_adc+0x9c9>
    94ff:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9503:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    9509:	50                   	push   %eax
    950a:	68 a3 00 00 00       	push   $0xa3
    950f:	e9 52 fa ff ff       	jmp    8f66 <alu_test_adc+0x9a6>
    9514:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9518:	8d 83 3c 60 fe ff    	lea    -0x19fc4(%ebx),%eax
    951e:	50                   	push   %eax
    951f:	68 a3 00 00 00       	push   $0xa3
    9524:	e9 1a fa ff ff       	jmp    8f43 <alu_test_adc+0x983>
    9529:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009530 <alu_test_sub>:
    9530:	e8 a2 cd ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    9535:	05 cb 5a 04 00       	add    $0x45acb,%eax
    953a:	55                   	push   %ebp
    953b:	57                   	push   %edi
    953c:	56                   	push   %esi
    953d:	53                   	push   %ebx
    953e:	83 ec 4c             	sub    $0x4c,%esp
    9541:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
    9547:	8d 74 24 40          	lea    0x40(%esp),%esi
    954b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    954f:	8d 7c 24 28          	lea    0x28(%esp),%edi
    9553:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    955a:	10 
    955b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    9562:	ff 
    9563:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    956a:	ff 
    956b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    9572:	ff 
    9573:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    957a:	00 
    957b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    9582:	00 
    9583:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    958a:	00 
    958b:	89 74 24 14          	mov    %esi,0x14(%esp)
    958f:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    9593:	89 7c 24 18          	mov    %edi,0x18(%esp)
    9597:	bf 00 00 00 10       	mov    $0x10000000,%edi
    959c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    95a0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    95a4:	be 00 00 00 10       	mov    $0x10000000,%esi
    95a9:	89 44 24 10          	mov    %eax,0x10(%esp)
    95ad:	eb 0e                	jmp    95bd <alu_test_sub+0x8d>
    95af:	90                   	nop
    95b0:	8b 44 24 10          	mov    0x10(%esp),%eax
    95b4:	8b 30                	mov    (%eax),%esi
    95b6:	83 c0 04             	add    $0x4,%eax
    95b9:	89 44 24 10          	mov    %eax,0x10(%esp)
    95bd:	83 ec 04             	sub    $0x4,%esp
    95c0:	6a 20                	push   $0x20
    95c2:	57                   	push   %edi
    95c3:	56                   	push   %esi
    95c4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    95c8:	e8 a3 5f 00 00       	call   f570 <alu_sub>
    95cd:	89 f1                	mov    %esi,%ecx
    95cf:	83 c4 10             	add    $0x10,%esp
    95d2:	89 c3                	mov    %eax,%ebx
    95d4:	89 f8                	mov    %edi,%eax
    95d6:	29 c8                	sub    %ecx,%eax
    95d8:	9c                   	pushf  
    95d9:	5a                   	pop    %edx
    95da:	39 c3                	cmp    %eax,%ebx
    95dc:	0f 85 38 06 00 00    	jne    9c1a <alu_test_sub+0x6ea>
    95e2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    95e6:	89 d1                	mov    %edx,%ecx
    95e8:	83 e1 01             	and    $0x1,%ecx
    95eb:	89 c3                	mov    %eax,%ebx
    95ed:	83 e3 01             	and    $0x1,%ebx
    95f0:	38 cb                	cmp    %cl,%bl
    95f2:	0f 85 8b 06 00 00    	jne    9c83 <alu_test_sub+0x753>
    95f8:	89 c3                	mov    %eax,%ebx
    95fa:	89 d1                	mov    %edx,%ecx
    95fc:	c0 eb 02             	shr    $0x2,%bl
    95ff:	c1 e9 02             	shr    $0x2,%ecx
    9602:	83 e3 01             	and    $0x1,%ebx
    9605:	83 e1 01             	and    $0x1,%ecx
    9608:	38 cb                	cmp    %cl,%bl
    960a:	0f 85 5e 06 00 00    	jne    9c6e <alu_test_sub+0x73e>
    9610:	89 c3                	mov    %eax,%ebx
    9612:	89 d1                	mov    %edx,%ecx
    9614:	c0 eb 07             	shr    $0x7,%bl
    9617:	c0 e9 07             	shr    $0x7,%cl
    961a:	38 cb                	cmp    %cl,%bl
    961c:	0f 85 37 06 00 00    	jne    9c59 <alu_test_sub+0x729>
    9622:	89 d1                	mov    %edx,%ecx
    9624:	c0 e8 06             	shr    $0x6,%al
    9627:	c1 e9 06             	shr    $0x6,%ecx
    962a:	83 e0 01             	and    $0x1,%eax
    962d:	83 e1 01             	and    $0x1,%ecx
    9630:	38 c8                	cmp    %cl,%al
    9632:	0f 85 b4 06 00 00    	jne    9cec <alu_test_sub+0x7bc>
    9638:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    963c:	c1 ea 0b             	shr    $0xb,%edx
    963f:	83 e2 01             	and    $0x1,%edx
    9642:	c0 e8 03             	shr    $0x3,%al
    9645:	83 e0 01             	and    $0x1,%eax
    9648:	38 d0                	cmp    %dl,%al
    964a:	0f 85 87 06 00 00    	jne    9cd7 <alu_test_sub+0x7a7>
    9650:	83 ec 04             	sub    $0x4,%esp
    9653:	6a 10                	push   $0x10
    9655:	57                   	push   %edi
    9656:	56                   	push   %esi
    9657:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    965b:	e8 10 5f 00 00       	call   f570 <alu_sub>
    9660:	89 f1                	mov    %esi,%ecx
    9662:	83 c4 10             	add    $0x10,%esp
    9665:	89 c3                	mov    %eax,%ebx
    9667:	89 f8                	mov    %edi,%eax
    9669:	66 29 c8             	sub    %cx,%ax
    966c:	9c                   	pushf  
    966d:	5a                   	pop    %edx
    966e:	0f b7 c0             	movzwl %ax,%eax
    9671:	39 c3                	cmp    %eax,%ebx
    9673:	0f 85 49 06 00 00    	jne    9cc2 <alu_test_sub+0x792>
    9679:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    967d:	89 d1                	mov    %edx,%ecx
    967f:	83 e1 01             	and    $0x1,%ecx
    9682:	89 c3                	mov    %eax,%ebx
    9684:	83 e3 01             	and    $0x1,%ebx
    9687:	38 cb                	cmp    %cl,%bl
    9689:	0f 85 1e 06 00 00    	jne    9cad <alu_test_sub+0x77d>
    968f:	89 c3                	mov    %eax,%ebx
    9691:	89 d1                	mov    %edx,%ecx
    9693:	c0 eb 02             	shr    $0x2,%bl
    9696:	c1 e9 02             	shr    $0x2,%ecx
    9699:	83 e3 01             	and    $0x1,%ebx
    969c:	83 e1 01             	and    $0x1,%ecx
    969f:	38 cb                	cmp    %cl,%bl
    96a1:	0f 85 f1 05 00 00    	jne    9c98 <alu_test_sub+0x768>
    96a7:	89 d1                	mov    %edx,%ecx
    96a9:	c0 e8 07             	shr    $0x7,%al
    96ac:	c0 e9 07             	shr    $0x7,%cl
    96af:	38 c8                	cmp    %cl,%al
    96b1:	0f 85 24 05 00 00    	jne    9bdb <alu_test_sub+0x6ab>
    96b7:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    96bb:	89 d1                	mov    %edx,%ecx
    96bd:	c1 e9 06             	shr    $0x6,%ecx
    96c0:	c0 e8 06             	shr    $0x6,%al
    96c3:	83 e1 01             	and    $0x1,%ecx
    96c6:	83 e0 01             	and    $0x1,%eax
    96c9:	38 c8                	cmp    %cl,%al
    96cb:	0f 85 f5 04 00 00    	jne    9bc6 <alu_test_sub+0x696>
    96d1:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    96d5:	c1 ea 0b             	shr    $0xb,%edx
    96d8:	83 e2 01             	and    $0x1,%edx
    96db:	c0 e8 03             	shr    $0x3,%al
    96de:	83 e0 01             	and    $0x1,%eax
    96e1:	38 d0                	cmp    %dl,%al
    96e3:	0f 85 07 05 00 00    	jne    9bf0 <alu_test_sub+0x6c0>
    96e9:	83 ec 04             	sub    $0x4,%esp
    96ec:	6a 08                	push   $0x8
    96ee:	57                   	push   %edi
    96ef:	56                   	push   %esi
    96f0:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    96f4:	e8 77 5e 00 00       	call   f570 <alu_sub>
    96f9:	89 f1                	mov    %esi,%ecx
    96fb:	83 c4 10             	add    $0x10,%esp
    96fe:	89 c3                	mov    %eax,%ebx
    9700:	89 f8                	mov    %edi,%eax
    9702:	28 c8                	sub    %cl,%al
    9704:	9c                   	pushf  
    9705:	5a                   	pop    %edx
    9706:	0f b6 c0             	movzbl %al,%eax
    9709:	39 c3                	cmp    %eax,%ebx
    970b:	0f 85 33 05 00 00    	jne    9c44 <alu_test_sub+0x714>
    9711:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    9715:	89 d1                	mov    %edx,%ecx
    9717:	83 e1 01             	and    $0x1,%ecx
    971a:	89 c3                	mov    %eax,%ebx
    971c:	83 e3 01             	and    $0x1,%ebx
    971f:	38 cb                	cmp    %cl,%bl
    9721:	0f 85 04 06 00 00    	jne    9d2b <alu_test_sub+0x7fb>
    9727:	89 c3                	mov    %eax,%ebx
    9729:	89 d1                	mov    %edx,%ecx
    972b:	c0 eb 02             	shr    $0x2,%bl
    972e:	c1 e9 02             	shr    $0x2,%ecx
    9731:	83 e3 01             	and    $0x1,%ebx
    9734:	83 e1 01             	and    $0x1,%ecx
    9737:	38 cb                	cmp    %cl,%bl
    9739:	0f 85 d7 05 00 00    	jne    9d16 <alu_test_sub+0x7e6>
    973f:	89 c3                	mov    %eax,%ebx
    9741:	89 d1                	mov    %edx,%ecx
    9743:	c0 eb 07             	shr    $0x7,%bl
    9746:	c0 e9 07             	shr    $0x7,%cl
    9749:	38 cb                	cmp    %cl,%bl
    974b:	0f 85 b0 05 00 00    	jne    9d01 <alu_test_sub+0x7d1>
    9751:	89 d1                	mov    %edx,%ecx
    9753:	c0 e8 06             	shr    $0x6,%al
    9756:	c1 e9 06             	shr    $0x6,%ecx
    9759:	83 e0 01             	and    $0x1,%eax
    975c:	83 e1 01             	and    $0x1,%ecx
    975f:	38 c8                	cmp    %cl,%al
    9761:	0f 85 9e 04 00 00    	jne    9c05 <alu_test_sub+0x6d5>
    9767:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    976b:	c1 ea 0b             	shr    $0xb,%edx
    976e:	83 e2 01             	and    $0x1,%edx
    9771:	c0 e8 03             	shr    $0x3,%al
    9774:	83 e0 01             	and    $0x1,%eax
    9777:	38 d0                	cmp    %dl,%al
    9779:	0f 85 b0 04 00 00    	jne    9c2f <alu_test_sub+0x6ff>
    977f:	8b 74 24 14          	mov    0x14(%esp),%esi
    9783:	39 74 24 10          	cmp    %esi,0x10(%esp)
    9787:	0f 85 23 fe ff ff    	jne    95b0 <alu_test_sub+0x80>
    978d:	8b 44 24 18          	mov    0x18(%esp),%eax
    9791:	39 f0                	cmp    %esi,%eax
    9793:	74 13                	je     97a8 <alu_test_sub+0x278>
    9795:	8b 38                	mov    (%eax),%edi
    9797:	83 c0 04             	add    $0x4,%eax
    979a:	89 44 24 18          	mov    %eax,0x18(%esp)
    979e:	e9 fd fd ff ff       	jmp    95a0 <alu_test_sub+0x70>
    97a3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    97a7:	90                   	nop
    97a8:	83 ec 0c             	sub    $0xc,%esp
    97ab:	6a 00                	push   $0x0
    97ad:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    97b1:	89 fb                	mov    %edi,%ebx
    97b3:	e8 78 a9 ff ff       	call   4130 <time@plt>
    97b8:	89 04 24             	mov    %eax,(%esp)
    97bb:	e8 d0 a9 ff ff       	call   4190 <srand@plt>
    97c0:	83 c4 10             	add    $0x10,%esp
    97c3:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    97ca:	00 
    97cb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    97cf:	90                   	nop
    97d0:	8b 74 24 0c          	mov    0xc(%esp),%esi
    97d4:	89 f3                	mov    %esi,%ebx
    97d6:	e8 15 aa ff ff       	call   41f0 <rand@plt>
    97db:	89 74 24 0c          	mov    %esi,0xc(%esp)
    97df:	89 c7                	mov    %eax,%edi
    97e1:	e8 0a aa ff ff       	call   41f0 <rand@plt>
    97e6:	83 ec 04             	sub    $0x4,%esp
    97e9:	6a 20                	push   $0x20
    97eb:	89 c6                	mov    %eax,%esi
    97ed:	57                   	push   %edi
    97ee:	50                   	push   %eax
    97ef:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    97f3:	e8 78 5d 00 00       	call   f570 <alu_sub>
    97f8:	89 f1                	mov    %esi,%ecx
    97fa:	83 c4 10             	add    $0x10,%esp
    97fd:	89 c3                	mov    %eax,%ebx
    97ff:	89 f8                	mov    %edi,%eax
    9801:	29 c8                	sub    %ecx,%eax
    9803:	9c                   	pushf  
    9804:	5a                   	pop    %edx
    9805:	39 c3                	cmp    %eax,%ebx
    9807:	0f 85 eb 01 00 00    	jne    99f8 <alu_test_sub+0x4c8>
    980d:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    9811:	89 d1                	mov    %edx,%ecx
    9813:	83 e1 01             	and    $0x1,%ecx
    9816:	89 c3                	mov    %eax,%ebx
    9818:	83 e3 01             	and    $0x1,%ebx
    981b:	38 cb                	cmp    %cl,%bl
    981d:	0f 85 8e 03 00 00    	jne    9bb1 <alu_test_sub+0x681>
    9823:	89 c3                	mov    %eax,%ebx
    9825:	89 d1                	mov    %edx,%ecx
    9827:	c0 eb 02             	shr    $0x2,%bl
    982a:	c1 e9 02             	shr    $0x2,%ecx
    982d:	83 e3 01             	and    $0x1,%ebx
    9830:	83 e1 01             	and    $0x1,%ecx
    9833:	38 cb                	cmp    %cl,%bl
    9835:	0f 85 61 03 00 00    	jne    9b9c <alu_test_sub+0x66c>
    983b:	89 c3                	mov    %eax,%ebx
    983d:	89 d1                	mov    %edx,%ecx
    983f:	c0 eb 07             	shr    $0x7,%bl
    9842:	c0 e9 07             	shr    $0x7,%cl
    9845:	38 cb                	cmp    %cl,%bl
    9847:	0f 85 3a 03 00 00    	jne    9b87 <alu_test_sub+0x657>
    984d:	89 d1                	mov    %edx,%ecx
    984f:	c0 e8 06             	shr    $0x6,%al
    9852:	c1 e9 06             	shr    $0x6,%ecx
    9855:	83 e0 01             	and    $0x1,%eax
    9858:	83 e1 01             	and    $0x1,%ecx
    985b:	38 c8                	cmp    %cl,%al
    985d:	0f 85 0f 03 00 00    	jne    9b72 <alu_test_sub+0x642>
    9863:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    9867:	c1 ea 0b             	shr    $0xb,%edx
    986a:	83 e2 01             	and    $0x1,%edx
    986d:	c0 e8 03             	shr    $0x3,%al
    9870:	83 e0 01             	and    $0x1,%eax
    9873:	38 d0                	cmp    %dl,%al
    9875:	0f 85 e2 02 00 00    	jne    9b5d <alu_test_sub+0x62d>
    987b:	83 ec 04             	sub    $0x4,%esp
    987e:	6a 10                	push   $0x10
    9880:	57                   	push   %edi
    9881:	56                   	push   %esi
    9882:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    9886:	e8 e5 5c 00 00       	call   f570 <alu_sub>
    988b:	89 f1                	mov    %esi,%ecx
    988d:	83 c4 10             	add    $0x10,%esp
    9890:	89 c3                	mov    %eax,%ebx
    9892:	89 f8                	mov    %edi,%eax
    9894:	66 29 c8             	sub    %cx,%ax
    9897:	9c                   	pushf  
    9898:	5a                   	pop    %edx
    9899:	0f b7 c0             	movzwl %ax,%eax
    989c:	39 c3                	cmp    %eax,%ebx
    989e:	0f 85 a4 02 00 00    	jne    9b48 <alu_test_sub+0x618>
    98a4:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    98a8:	89 d1                	mov    %edx,%ecx
    98aa:	83 e1 01             	and    $0x1,%ecx
    98ad:	89 c3                	mov    %eax,%ebx
    98af:	83 e3 01             	and    $0x1,%ebx
    98b2:	38 cb                	cmp    %cl,%bl
    98b4:	0f 85 79 02 00 00    	jne    9b33 <alu_test_sub+0x603>
    98ba:	89 c3                	mov    %eax,%ebx
    98bc:	89 d1                	mov    %edx,%ecx
    98be:	c0 eb 02             	shr    $0x2,%bl
    98c1:	c1 e9 02             	shr    $0x2,%ecx
    98c4:	83 e3 01             	and    $0x1,%ebx
    98c7:	83 e1 01             	and    $0x1,%ecx
    98ca:	38 cb                	cmp    %cl,%bl
    98cc:	0f 85 4c 02 00 00    	jne    9b1e <alu_test_sub+0x5ee>
    98d2:	89 d1                	mov    %edx,%ecx
    98d4:	c0 e8 07             	shr    $0x7,%al
    98d7:	c0 e9 07             	shr    $0x7,%cl
    98da:	38 c8                	cmp    %cl,%al
    98dc:	0f 85 27 02 00 00    	jne    9b09 <alu_test_sub+0x5d9>
    98e2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    98e6:	89 d1                	mov    %edx,%ecx
    98e8:	c1 e9 06             	shr    $0x6,%ecx
    98eb:	c0 e8 06             	shr    $0x6,%al
    98ee:	83 e1 01             	and    $0x1,%ecx
    98f1:	83 e0 01             	and    $0x1,%eax
    98f4:	38 c8                	cmp    %cl,%al
    98f6:	0f 85 f8 01 00 00    	jne    9af4 <alu_test_sub+0x5c4>
    98fc:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    9900:	c1 ea 0b             	shr    $0xb,%edx
    9903:	83 e2 01             	and    $0x1,%edx
    9906:	c0 e8 03             	shr    $0x3,%al
    9909:	83 e0 01             	and    $0x1,%eax
    990c:	38 d0                	cmp    %dl,%al
    990e:	0f 85 cb 01 00 00    	jne    9adf <alu_test_sub+0x5af>
    9914:	83 ec 04             	sub    $0x4,%esp
    9917:	6a 08                	push   $0x8
    9919:	57                   	push   %edi
    991a:	56                   	push   %esi
    991b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    991f:	e8 4c 5c 00 00       	call   f570 <alu_sub>
    9924:	89 f1                	mov    %esi,%ecx
    9926:	83 c4 10             	add    $0x10,%esp
    9929:	89 c3                	mov    %eax,%ebx
    992b:	89 f8                	mov    %edi,%eax
    992d:	28 c8                	sub    %cl,%al
    992f:	9c                   	pushf  
    9930:	5a                   	pop    %edx
    9931:	0f b6 c0             	movzbl %al,%eax
    9934:	39 c3                	cmp    %eax,%ebx
    9936:	0f 85 8e 01 00 00    	jne    9aca <alu_test_sub+0x59a>
    993c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    9940:	89 d1                	mov    %edx,%ecx
    9942:	83 e1 01             	and    $0x1,%ecx
    9945:	89 c3                	mov    %eax,%ebx
    9947:	83 e3 01             	and    $0x1,%ebx
    994a:	38 cb                	cmp    %cl,%bl
    994c:	0f 85 55 01 00 00    	jne    9aa7 <alu_test_sub+0x577>
    9952:	89 c3                	mov    %eax,%ebx
    9954:	89 d1                	mov    %edx,%ecx
    9956:	c0 eb 02             	shr    $0x2,%bl
    9959:	c1 e9 02             	shr    $0x2,%ecx
    995c:	83 e3 01             	and    $0x1,%ebx
    995f:	83 e1 01             	and    $0x1,%ecx
    9962:	38 cb                	cmp    %cl,%bl
    9964:	0f 85 1a 01 00 00    	jne    9a84 <alu_test_sub+0x554>
    996a:	89 c3                	mov    %eax,%ebx
    996c:	89 d1                	mov    %edx,%ecx
    996e:	c0 eb 07             	shr    $0x7,%bl
    9971:	c0 e9 07             	shr    $0x7,%cl
    9974:	38 cb                	cmp    %cl,%bl
    9976:	0f 85 e5 00 00 00    	jne    9a61 <alu_test_sub+0x531>
    997c:	89 d1                	mov    %edx,%ecx
    997e:	c0 e8 06             	shr    $0x6,%al
    9981:	c1 e9 06             	shr    $0x6,%ecx
    9984:	83 e0 01             	and    $0x1,%eax
    9987:	83 e1 01             	and    $0x1,%ecx
    998a:	38 c8                	cmp    %cl,%al
    998c:	0f 85 ac 00 00 00    	jne    9a3e <alu_test_sub+0x50e>
    9992:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    9996:	c1 ea 0b             	shr    $0xb,%edx
    9999:	83 e2 01             	and    $0x1,%edx
    999c:	c0 e8 03             	shr    $0x3,%al
    999f:	83 e0 01             	and    $0x1,%eax
    99a2:	38 d0                	cmp    %dl,%al
    99a4:	75 75                	jne    9a1b <alu_test_sub+0x4eb>
    99a6:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    99ab:	0f 85 1f fe ff ff    	jne    97d0 <alu_test_sub+0x2a0>
    99b1:	83 ec 0c             	sub    $0xc,%esp
    99b4:	8b 7c 24 18          	mov    0x18(%esp),%edi
    99b8:	8d 87 2c 71 fe ff    	lea    -0x18ed4(%edi),%eax
    99be:	89 fb                	mov    %edi,%ebx
    99c0:	50                   	push   %eax
    99c1:	e8 ea a8 ff ff       	call   42b0 <puts@plt>
    99c6:	e8 35 0e 02 00       	call   2a800 <get_ref>
    99cb:	83 c4 10             	add    $0x10,%esp
    99ce:	85 c0                	test   %eax,%eax
    99d0:	75 08                	jne    99da <alu_test_sub+0x4aa>
    99d2:	83 c4 4c             	add    $0x4c,%esp
    99d5:	5b                   	pop    %ebx
    99d6:	5e                   	pop    %esi
    99d7:	5f                   	pop    %edi
    99d8:	5d                   	pop    %ebp
    99d9:	c3                   	ret    
    99da:	83 ec 0c             	sub    $0xc,%esp
    99dd:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    99e1:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    99e7:	50                   	push   %eax
    99e8:	e8 c3 a8 ff ff       	call   42b0 <puts@plt>
    99ed:	83 c4 10             	add    $0x10,%esp
    99f0:	83 c4 4c             	add    $0x4c,%esp
    99f3:	5b                   	pop    %ebx
    99f4:	5e                   	pop    %esi
    99f5:	5f                   	pop    %edi
    99f6:	5d                   	pop    %ebp
    99f7:	c3                   	ret    
    99f8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    99fc:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9a02:	50                   	push   %eax
    9a03:	68 bd 00 00 00       	push   $0xbd
    9a08:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    9a0e:	50                   	push   %eax
    9a0f:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    9a15:	50                   	push   %eax
    9a16:	e8 f5 a8 ff ff       	call   4310 <__assert_fail@plt>
    9a1b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9a1f:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9a25:	50                   	push   %eax
    9a26:	68 bf 00 00 00       	push   $0xbf
    9a2b:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    9a31:	50                   	push   %eax
    9a32:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    9a38:	50                   	push   %eax
    9a39:	e8 d2 a8 ff ff       	call   4310 <__assert_fail@plt>
    9a3e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9a42:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9a48:	50                   	push   %eax
    9a49:	68 bf 00 00 00       	push   $0xbf
    9a4e:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    9a54:	50                   	push   %eax
    9a55:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    9a5b:	50                   	push   %eax
    9a5c:	e8 af a8 ff ff       	call   4310 <__assert_fail@plt>
    9a61:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9a65:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9a6b:	50                   	push   %eax
    9a6c:	68 bf 00 00 00       	push   $0xbf
    9a71:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    9a77:	50                   	push   %eax
    9a78:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    9a7e:	50                   	push   %eax
    9a7f:	e8 8c a8 ff ff       	call   4310 <__assert_fail@plt>
    9a84:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9a88:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9a8e:	50                   	push   %eax
    9a8f:	68 bf 00 00 00       	push   $0xbf
    9a94:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    9a9a:	50                   	push   %eax
    9a9b:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    9aa1:	50                   	push   %eax
    9aa2:	e8 69 a8 ff ff       	call   4310 <__assert_fail@plt>
    9aa7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9aab:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9ab1:	50                   	push   %eax
    9ab2:	68 bf 00 00 00       	push   $0xbf
    9ab7:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    9abd:	50                   	push   %eax
    9abe:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    9ac4:	50                   	push   %eax
    9ac5:	e8 46 a8 ff ff       	call   4310 <__assert_fail@plt>
    9aca:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9ace:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9ad4:	50                   	push   %eax
    9ad5:	68 bf 00 00 00       	push   $0xbf
    9ada:	e9 29 ff ff ff       	jmp    9a08 <alu_test_sub+0x4d8>
    9adf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9ae3:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9ae9:	50                   	push   %eax
    9aea:	68 be 00 00 00       	push   $0xbe
    9aef:	e9 37 ff ff ff       	jmp    9a2b <alu_test_sub+0x4fb>
    9af4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9af8:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9afe:	50                   	push   %eax
    9aff:	68 be 00 00 00       	push   $0xbe
    9b04:	e9 45 ff ff ff       	jmp    9a4e <alu_test_sub+0x51e>
    9b09:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9b0d:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9b13:	50                   	push   %eax
    9b14:	68 be 00 00 00       	push   $0xbe
    9b19:	e9 53 ff ff ff       	jmp    9a71 <alu_test_sub+0x541>
    9b1e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9b22:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9b28:	50                   	push   %eax
    9b29:	68 be 00 00 00       	push   $0xbe
    9b2e:	e9 61 ff ff ff       	jmp    9a94 <alu_test_sub+0x564>
    9b33:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9b37:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9b3d:	50                   	push   %eax
    9b3e:	68 be 00 00 00       	push   $0xbe
    9b43:	e9 6f ff ff ff       	jmp    9ab7 <alu_test_sub+0x587>
    9b48:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9b4c:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9b52:	50                   	push   %eax
    9b53:	68 be 00 00 00       	push   $0xbe
    9b58:	e9 ab fe ff ff       	jmp    9a08 <alu_test_sub+0x4d8>
    9b5d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9b61:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9b67:	50                   	push   %eax
    9b68:	68 bd 00 00 00       	push   $0xbd
    9b6d:	e9 b9 fe ff ff       	jmp    9a2b <alu_test_sub+0x4fb>
    9b72:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9b76:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9b7c:	50                   	push   %eax
    9b7d:	68 bd 00 00 00       	push   $0xbd
    9b82:	e9 c7 fe ff ff       	jmp    9a4e <alu_test_sub+0x51e>
    9b87:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9b8b:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9b91:	50                   	push   %eax
    9b92:	68 bd 00 00 00       	push   $0xbd
    9b97:	e9 d5 fe ff ff       	jmp    9a71 <alu_test_sub+0x541>
    9b9c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9ba0:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9ba6:	50                   	push   %eax
    9ba7:	68 bd 00 00 00       	push   $0xbd
    9bac:	e9 e3 fe ff ff       	jmp    9a94 <alu_test_sub+0x564>
    9bb1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9bb5:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9bbb:	50                   	push   %eax
    9bbc:	68 bd 00 00 00       	push   $0xbd
    9bc1:	e9 f1 fe ff ff       	jmp    9ab7 <alu_test_sub+0x587>
    9bc6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9bca:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9bd0:	50                   	push   %eax
    9bd1:	68 b4 00 00 00       	push   $0xb4
    9bd6:	e9 73 fe ff ff       	jmp    9a4e <alu_test_sub+0x51e>
    9bdb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9bdf:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9be5:	50                   	push   %eax
    9be6:	68 b4 00 00 00       	push   $0xb4
    9beb:	e9 81 fe ff ff       	jmp    9a71 <alu_test_sub+0x541>
    9bf0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9bf4:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9bfa:	50                   	push   %eax
    9bfb:	68 b4 00 00 00       	push   $0xb4
    9c00:	e9 26 fe ff ff       	jmp    9a2b <alu_test_sub+0x4fb>
    9c05:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c09:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9c0f:	50                   	push   %eax
    9c10:	68 b5 00 00 00       	push   $0xb5
    9c15:	e9 34 fe ff ff       	jmp    9a4e <alu_test_sub+0x51e>
    9c1a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c1e:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9c24:	50                   	push   %eax
    9c25:	68 b3 00 00 00       	push   $0xb3
    9c2a:	e9 d9 fd ff ff       	jmp    9a08 <alu_test_sub+0x4d8>
    9c2f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c33:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9c39:	50                   	push   %eax
    9c3a:	68 b5 00 00 00       	push   $0xb5
    9c3f:	e9 e7 fd ff ff       	jmp    9a2b <alu_test_sub+0x4fb>
    9c44:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c48:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9c4e:	50                   	push   %eax
    9c4f:	68 b5 00 00 00       	push   $0xb5
    9c54:	e9 af fd ff ff       	jmp    9a08 <alu_test_sub+0x4d8>
    9c59:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c5d:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9c63:	50                   	push   %eax
    9c64:	68 b3 00 00 00       	push   $0xb3
    9c69:	e9 03 fe ff ff       	jmp    9a71 <alu_test_sub+0x541>
    9c6e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c72:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9c78:	50                   	push   %eax
    9c79:	68 b3 00 00 00       	push   $0xb3
    9c7e:	e9 11 fe ff ff       	jmp    9a94 <alu_test_sub+0x564>
    9c83:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c87:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9c8d:	50                   	push   %eax
    9c8e:	68 b3 00 00 00       	push   $0xb3
    9c93:	e9 1f fe ff ff       	jmp    9ab7 <alu_test_sub+0x587>
    9c98:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9c9c:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9ca2:	50                   	push   %eax
    9ca3:	68 b4 00 00 00       	push   $0xb4
    9ca8:	e9 e7 fd ff ff       	jmp    9a94 <alu_test_sub+0x564>
    9cad:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9cb1:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9cb7:	50                   	push   %eax
    9cb8:	68 b4 00 00 00       	push   $0xb4
    9cbd:	e9 f5 fd ff ff       	jmp    9ab7 <alu_test_sub+0x587>
    9cc2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9cc6:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9ccc:	50                   	push   %eax
    9ccd:	68 b4 00 00 00       	push   $0xb4
    9cd2:	e9 31 fd ff ff       	jmp    9a08 <alu_test_sub+0x4d8>
    9cd7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9cdb:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9ce1:	50                   	push   %eax
    9ce2:	68 b3 00 00 00       	push   $0xb3
    9ce7:	e9 3f fd ff ff       	jmp    9a2b <alu_test_sub+0x4fb>
    9cec:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9cf0:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9cf6:	50                   	push   %eax
    9cf7:	68 b3 00 00 00       	push   $0xb3
    9cfc:	e9 4d fd ff ff       	jmp    9a4e <alu_test_sub+0x51e>
    9d01:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9d05:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9d0b:	50                   	push   %eax
    9d0c:	68 b5 00 00 00       	push   $0xb5
    9d11:	e9 5b fd ff ff       	jmp    9a71 <alu_test_sub+0x541>
    9d16:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9d1a:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9d20:	50                   	push   %eax
    9d21:	68 b5 00 00 00       	push   $0xb5
    9d26:	e9 69 fd ff ff       	jmp    9a94 <alu_test_sub+0x564>
    9d2b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9d2f:	8d 83 2c 60 fe ff    	lea    -0x19fd4(%ebx),%eax
    9d35:	50                   	push   %eax
    9d36:	68 b5 00 00 00       	push   $0xb5
    9d3b:	e9 77 fd ff ff       	jmp    9ab7 <alu_test_sub+0x587>

00009d40 <alu_test_sbb>:
    9d40:	e8 92 c5 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    9d45:	05 bb 52 04 00       	add    $0x452bb,%eax
    9d4a:	55                   	push   %ebp
    9d4b:	bd 00 00 00 10       	mov    $0x10000000,%ebp
    9d50:	57                   	push   %edi
    9d51:	56                   	push   %esi
    9d52:	53                   	push   %ebx
    9d53:	83 ec 4c             	sub    $0x4c,%esp
    9d56:	8d 7c 24 24          	lea    0x24(%esp),%edi
    9d5a:	8d 74 24 40          	lea    0x40(%esp),%esi
    9d5e:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9d62:	c7 44 24 20 00 00 00 	movl   $0x10000000,0x20(%esp)
    9d69:	10 
    9d6a:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
    9d71:	ff 
    9d72:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
    9d79:	ff 
    9d7a:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
    9d81:	ff 
    9d82:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
    9d89:	00 
    9d8a:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%esp)
    9d91:	00 
    9d92:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
    9d99:	00 
    9d9a:	c7 44 24 3c 00 00 00 	movl   $0x80000000,0x3c(%esp)
    9da1:	80 
    9da2:	89 7c 24 18          	mov    %edi,0x18(%esp)
    9da6:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    9daa:	89 74 24 14          	mov    %esi,0x14(%esp)
    9dae:	8d b0 60 32 05 00    	lea    0x53260(%eax),%esi
    9db4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9db8:	8b 44 24 18          	mov    0x18(%esp),%eax
    9dbc:	bf 00 00 00 10       	mov    $0x10000000,%edi
    9dc1:	89 44 24 10          	mov    %eax,0x10(%esp)
    9dc5:	eb 16                	jmp    9ddd <alu_test_sbb+0x9d>
    9dc7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9dce:	66 90                	xchg   %ax,%ax
    9dd0:	8b 44 24 10          	mov    0x10(%esp),%eax
    9dd4:	8b 38                	mov    (%eax),%edi
    9dd6:	83 c0 04             	add    $0x4,%eax
    9dd9:	89 44 24 10          	mov    %eax,0x10(%esp)
    9ddd:	83 ec 04             	sub    $0x4,%esp
    9de0:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    9de4:	6a 20                	push   $0x20
    9de6:	55                   	push   %ebp
    9de7:	57                   	push   %edi
    9de8:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    9dec:	e8 6f 58 00 00       	call   f660 <alu_sbb>
    9df1:	89 f9                	mov    %edi,%ecx
    9df3:	83 c4 10             	add    $0x10,%esp
    9df6:	89 c3                	mov    %eax,%ebx
    9df8:	89 e8                	mov    %ebp,%eax
    9dfa:	f8                   	clc    
    9dfb:	19 c8                	sbb    %ecx,%eax
    9dfd:	9c                   	pushf  
    9dfe:	5a                   	pop    %edx
    9dff:	39 c3                	cmp    %eax,%ebx
    9e01:	0f 85 76 08 00 00    	jne    a67d <alu_test_sbb+0x93d>
    9e07:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    9e0b:	89 d1                	mov    %edx,%ecx
    9e0d:	83 e1 01             	and    $0x1,%ecx
    9e10:	89 c3                	mov    %eax,%ebx
    9e12:	83 e3 01             	and    $0x1,%ebx
    9e15:	38 cb                	cmp    %cl,%bl
    9e17:	0f 85 19 0a 00 00    	jne    a836 <alu_test_sbb+0xaf6>
    9e1d:	89 c3                	mov    %eax,%ebx
    9e1f:	89 d1                	mov    %edx,%ecx
    9e21:	c0 eb 02             	shr    $0x2,%bl
    9e24:	c1 e9 02             	shr    $0x2,%ecx
    9e27:	83 e3 01             	and    $0x1,%ebx
    9e2a:	83 e1 01             	and    $0x1,%ecx
    9e2d:	38 cb                	cmp    %cl,%bl
    9e2f:	0f 85 ec 09 00 00    	jne    a821 <alu_test_sbb+0xae1>
    9e35:	89 c3                	mov    %eax,%ebx
    9e37:	89 d1                	mov    %edx,%ecx
    9e39:	c0 eb 07             	shr    $0x7,%bl
    9e3c:	c0 e9 07             	shr    $0x7,%cl
    9e3f:	38 cb                	cmp    %cl,%bl
    9e41:	0f 85 c5 09 00 00    	jne    a80c <alu_test_sbb+0xacc>
    9e47:	89 c3                	mov    %eax,%ebx
    9e49:	89 d1                	mov    %edx,%ecx
    9e4b:	c0 eb 06             	shr    $0x6,%bl
    9e4e:	c1 e9 06             	shr    $0x6,%ecx
    9e51:	83 e3 01             	and    $0x1,%ebx
    9e54:	83 e1 01             	and    $0x1,%ecx
    9e57:	38 cb                	cmp    %cl,%bl
    9e59:	0f 85 98 09 00 00    	jne    a7f7 <alu_test_sbb+0xab7>
    9e5f:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    9e63:	c1 ea 0b             	shr    $0xb,%edx
    9e66:	83 e2 01             	and    $0x1,%edx
    9e69:	c0 e9 03             	shr    $0x3,%cl
    9e6c:	83 e1 01             	and    $0x1,%ecx
    9e6f:	38 d1                	cmp    %dl,%cl
    9e71:	0f 85 6b 09 00 00    	jne    a7e2 <alu_test_sbb+0xaa2>
    9e77:	83 ec 04             	sub    $0x4,%esp
    9e7a:	83 e0 fe             	and    $0xfffffffe,%eax
    9e7d:	88 46 24             	mov    %al,0x24(%esi)
    9e80:	6a 10                	push   $0x10
    9e82:	55                   	push   %ebp
    9e83:	57                   	push   %edi
    9e84:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    9e88:	e8 d3 57 00 00       	call   f660 <alu_sbb>
    9e8d:	89 f9                	mov    %edi,%ecx
    9e8f:	83 c4 10             	add    $0x10,%esp
    9e92:	89 c3                	mov    %eax,%ebx
    9e94:	89 e8                	mov    %ebp,%eax
    9e96:	f8                   	clc    
    9e97:	66 19 c8             	sbb    %cx,%ax
    9e9a:	9c                   	pushf  
    9e9b:	5a                   	pop    %edx
    9e9c:	0f b7 c0             	movzwl %ax,%eax
    9e9f:	39 c3                	cmp    %eax,%ebx
    9ea1:	0f 85 26 09 00 00    	jne    a7cd <alu_test_sbb+0xa8d>
    9ea7:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    9eab:	89 d1                	mov    %edx,%ecx
    9ead:	83 e1 01             	and    $0x1,%ecx
    9eb0:	89 c3                	mov    %eax,%ebx
    9eb2:	83 e3 01             	and    $0x1,%ebx
    9eb5:	38 cb                	cmp    %cl,%bl
    9eb7:	0f 85 fb 08 00 00    	jne    a7b8 <alu_test_sbb+0xa78>
    9ebd:	89 c3                	mov    %eax,%ebx
    9ebf:	89 d1                	mov    %edx,%ecx
    9ec1:	c0 eb 02             	shr    $0x2,%bl
    9ec4:	c1 e9 02             	shr    $0x2,%ecx
    9ec7:	83 e3 01             	and    $0x1,%ebx
    9eca:	83 e1 01             	and    $0x1,%ecx
    9ecd:	38 cb                	cmp    %cl,%bl
    9ecf:	0f 85 ce 08 00 00    	jne    a7a3 <alu_test_sbb+0xa63>
    9ed5:	89 d1                	mov    %edx,%ecx
    9ed7:	c0 e8 07             	shr    $0x7,%al
    9eda:	c0 e9 07             	shr    $0x7,%cl
    9edd:	38 c8                	cmp    %cl,%al
    9edf:	0f 85 a9 08 00 00    	jne    a78e <alu_test_sbb+0xa4e>
    9ee5:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    9ee9:	89 d1                	mov    %edx,%ecx
    9eeb:	c1 e9 06             	shr    $0x6,%ecx
    9eee:	89 c3                	mov    %eax,%ebx
    9ef0:	83 e1 01             	and    $0x1,%ecx
    9ef3:	c0 eb 06             	shr    $0x6,%bl
    9ef6:	83 e3 01             	and    $0x1,%ebx
    9ef9:	38 cb                	cmp    %cl,%bl
    9efb:	0f 85 78 08 00 00    	jne    a779 <alu_test_sbb+0xa39>
    9f01:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    9f05:	c1 ea 0b             	shr    $0xb,%edx
    9f08:	83 e2 01             	and    $0x1,%edx
    9f0b:	c0 e9 03             	shr    $0x3,%cl
    9f0e:	83 e1 01             	and    $0x1,%ecx
    9f11:	38 d1                	cmp    %dl,%cl
    9f13:	0f 85 4b 08 00 00    	jne    a764 <alu_test_sbb+0xa24>
    9f19:	83 ec 04             	sub    $0x4,%esp
    9f1c:	83 e0 fe             	and    $0xfffffffe,%eax
    9f1f:	88 46 24             	mov    %al,0x24(%esi)
    9f22:	6a 08                	push   $0x8
    9f24:	55                   	push   %ebp
    9f25:	57                   	push   %edi
    9f26:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    9f2a:	e8 31 57 00 00       	call   f660 <alu_sbb>
    9f2f:	89 f9                	mov    %edi,%ecx
    9f31:	83 c4 10             	add    $0x10,%esp
    9f34:	89 c3                	mov    %eax,%ebx
    9f36:	89 e8                	mov    %ebp,%eax
    9f38:	f8                   	clc    
    9f39:	18 c8                	sbb    %cl,%al
    9f3b:	9c                   	pushf  
    9f3c:	5a                   	pop    %edx
    9f3d:	0f b6 c0             	movzbl %al,%eax
    9f40:	39 c3                	cmp    %eax,%ebx
    9f42:	0f 85 07 08 00 00    	jne    a74f <alu_test_sbb+0xa0f>
    9f48:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    9f4c:	89 d1                	mov    %edx,%ecx
    9f4e:	83 e1 01             	and    $0x1,%ecx
    9f51:	89 c3                	mov    %eax,%ebx
    9f53:	83 e3 01             	and    $0x1,%ebx
    9f56:	38 cb                	cmp    %cl,%bl
    9f58:	0f 85 ce 07 00 00    	jne    a72c <alu_test_sbb+0x9ec>
    9f5e:	89 c3                	mov    %eax,%ebx
    9f60:	89 d1                	mov    %edx,%ecx
    9f62:	c0 eb 02             	shr    $0x2,%bl
    9f65:	c1 e9 02             	shr    $0x2,%ecx
    9f68:	83 e3 01             	and    $0x1,%ebx
    9f6b:	83 e1 01             	and    $0x1,%ecx
    9f6e:	38 cb                	cmp    %cl,%bl
    9f70:	0f 85 93 07 00 00    	jne    a709 <alu_test_sbb+0x9c9>
    9f76:	89 c3                	mov    %eax,%ebx
    9f78:	89 d1                	mov    %edx,%ecx
    9f7a:	c0 eb 07             	shr    $0x7,%bl
    9f7d:	c0 e9 07             	shr    $0x7,%cl
    9f80:	38 cb                	cmp    %cl,%bl
    9f82:	0f 85 5e 07 00 00    	jne    a6e6 <alu_test_sbb+0x9a6>
    9f88:	89 d1                	mov    %edx,%ecx
    9f8a:	c0 e8 06             	shr    $0x6,%al
    9f8d:	c1 e9 06             	shr    $0x6,%ecx
    9f90:	83 e0 01             	and    $0x1,%eax
    9f93:	83 e1 01             	and    $0x1,%ecx
    9f96:	38 c8                	cmp    %cl,%al
    9f98:	0f 85 25 07 00 00    	jne    a6c3 <alu_test_sbb+0x983>
    9f9e:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    9fa2:	c1 ea 0b             	shr    $0xb,%edx
    9fa5:	83 e2 01             	and    $0x1,%edx
    9fa8:	c0 e8 03             	shr    $0x3,%al
    9fab:	83 e0 01             	and    $0x1,%eax
    9fae:	38 d0                	cmp    %dl,%al
    9fb0:	0f 85 ea 06 00 00    	jne    a6a0 <alu_test_sbb+0x960>
    9fb6:	8b 7c 24 14          	mov    0x14(%esp),%edi
    9fba:	39 7c 24 10          	cmp    %edi,0x10(%esp)
    9fbe:	0f 85 0c fe ff ff    	jne    9dd0 <alu_test_sbb+0x90>
    9fc4:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    9fc8:	39 f8                	cmp    %edi,%eax
    9fca:	74 14                	je     9fe0 <alu_test_sbb+0x2a0>
    9fcc:	8b 28                	mov    (%eax),%ebp
    9fce:	83 c0 04             	add    $0x4,%eax
    9fd1:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    9fd5:	e9 de fd ff ff       	jmp    9db8 <alu_test_sbb+0x78>
    9fda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9fe0:	8b 44 24 18          	mov    0x18(%esp),%eax
    9fe4:	bd 00 00 00 10       	mov    $0x10000000,%ebp
    9fe9:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    9fed:	8d 76 00             	lea    0x0(%esi),%esi
    9ff0:	8b 44 24 18          	mov    0x18(%esp),%eax
    9ff4:	bf 00 00 00 10       	mov    $0x10000000,%edi
    9ff9:	89 44 24 10          	mov    %eax,0x10(%esp)
    9ffd:	eb 0e                	jmp    a00d <alu_test_sbb+0x2cd>
    9fff:	90                   	nop
    a000:	8b 44 24 10          	mov    0x10(%esp),%eax
    a004:	8b 38                	mov    (%eax),%edi
    a006:	83 c0 04             	add    $0x4,%eax
    a009:	89 44 24 10          	mov    %eax,0x10(%esp)
    a00d:	83 ec 04             	sub    $0x4,%esp
    a010:	80 4e 24 01          	orb    $0x1,0x24(%esi)
    a014:	6a 20                	push   $0x20
    a016:	55                   	push   %ebp
    a017:	57                   	push   %edi
    a018:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a01c:	e8 3f 56 00 00       	call   f660 <alu_sbb>
    a021:	89 f9                	mov    %edi,%ecx
    a023:	83 c4 10             	add    $0x10,%esp
    a026:	89 c3                	mov    %eax,%ebx
    a028:	89 e8                	mov    %ebp,%eax
    a02a:	f9                   	stc    
    a02b:	19 c8                	sbb    %ecx,%eax
    a02d:	9c                   	pushf  
    a02e:	5a                   	pop    %edx
    a02f:	39 c3                	cmp    %eax,%ebx
    a031:	0f 85 14 08 00 00    	jne    a84b <alu_test_sbb+0xb0b>
    a037:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a03b:	89 d1                	mov    %edx,%ecx
    a03d:	83 e1 01             	and    $0x1,%ecx
    a040:	89 c3                	mov    %eax,%ebx
    a042:	83 e3 01             	and    $0x1,%ebx
    a045:	38 cb                	cmp    %cl,%bl
    a047:	0f 85 28 08 00 00    	jne    a875 <alu_test_sbb+0xb35>
    a04d:	89 c3                	mov    %eax,%ebx
    a04f:	89 d1                	mov    %edx,%ecx
    a051:	c0 eb 02             	shr    $0x2,%bl
    a054:	c1 e9 02             	shr    $0x2,%ecx
    a057:	83 e3 01             	and    $0x1,%ebx
    a05a:	83 e1 01             	and    $0x1,%ecx
    a05d:	38 cb                	cmp    %cl,%bl
    a05f:	0f 85 cd 08 00 00    	jne    a932 <alu_test_sbb+0xbf2>
    a065:	89 c3                	mov    %eax,%ebx
    a067:	89 d1                	mov    %edx,%ecx
    a069:	c0 eb 07             	shr    $0x7,%bl
    a06c:	c0 e9 07             	shr    $0x7,%cl
    a06f:	38 cb                	cmp    %cl,%bl
    a071:	0f 85 a6 08 00 00    	jne    a91d <alu_test_sbb+0xbdd>
    a077:	89 c3                	mov    %eax,%ebx
    a079:	89 d1                	mov    %edx,%ecx
    a07b:	c0 eb 06             	shr    $0x6,%bl
    a07e:	c1 e9 06             	shr    $0x6,%ecx
    a081:	83 e3 01             	and    $0x1,%ebx
    a084:	83 e1 01             	and    $0x1,%ecx
    a087:	38 cb                	cmp    %cl,%bl
    a089:	0f 85 79 08 00 00    	jne    a908 <alu_test_sbb+0xbc8>
    a08f:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    a093:	c1 ea 0b             	shr    $0xb,%edx
    a096:	83 e2 01             	and    $0x1,%edx
    a099:	c0 e9 03             	shr    $0x3,%cl
    a09c:	83 e1 01             	and    $0x1,%ecx
    a09f:	38 d1                	cmp    %dl,%cl
    a0a1:	0f 85 4c 08 00 00    	jne    a8f3 <alu_test_sbb+0xbb3>
    a0a7:	83 ec 04             	sub    $0x4,%esp
    a0aa:	83 c8 01             	or     $0x1,%eax
    a0ad:	88 46 24             	mov    %al,0x24(%esi)
    a0b0:	6a 10                	push   $0x10
    a0b2:	55                   	push   %ebp
    a0b3:	57                   	push   %edi
    a0b4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a0b8:	e8 a3 55 00 00       	call   f660 <alu_sbb>
    a0bd:	89 f9                	mov    %edi,%ecx
    a0bf:	83 c4 10             	add    $0x10,%esp
    a0c2:	89 c3                	mov    %eax,%ebx
    a0c4:	89 e8                	mov    %ebp,%eax
    a0c6:	f9                   	stc    
    a0c7:	66 19 c8             	sbb    %cx,%ax
    a0ca:	9c                   	pushf  
    a0cb:	5a                   	pop    %edx
    a0cc:	0f b7 c0             	movzwl %ax,%eax
    a0cf:	39 c3                	cmp    %eax,%ebx
    a0d1:	0f 85 ee 08 00 00    	jne    a9c5 <alu_test_sbb+0xc85>
    a0d7:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a0db:	89 d1                	mov    %edx,%ecx
    a0dd:	83 e1 01             	and    $0x1,%ecx
    a0e0:	89 c3                	mov    %eax,%ebx
    a0e2:	83 e3 01             	and    $0x1,%ebx
    a0e5:	38 cb                	cmp    %cl,%bl
    a0e7:	0f 85 c3 08 00 00    	jne    a9b0 <alu_test_sbb+0xc70>
    a0ed:	89 c3                	mov    %eax,%ebx
    a0ef:	89 d1                	mov    %edx,%ecx
    a0f1:	c0 eb 02             	shr    $0x2,%bl
    a0f4:	c1 e9 02             	shr    $0x2,%ecx
    a0f7:	83 e3 01             	and    $0x1,%ebx
    a0fa:	83 e1 01             	and    $0x1,%ecx
    a0fd:	38 cb                	cmp    %cl,%bl
    a0ff:	0f 85 96 08 00 00    	jne    a99b <alu_test_sbb+0xc5b>
    a105:	89 d1                	mov    %edx,%ecx
    a107:	c0 e8 07             	shr    $0x7,%al
    a10a:	c0 e9 07             	shr    $0x7,%cl
    a10d:	38 c8                	cmp    %cl,%al
    a10f:	0f 85 71 08 00 00    	jne    a986 <alu_test_sbb+0xc46>
    a115:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a119:	89 d1                	mov    %edx,%ecx
    a11b:	c1 e9 06             	shr    $0x6,%ecx
    a11e:	89 c3                	mov    %eax,%ebx
    a120:	83 e1 01             	and    $0x1,%ecx
    a123:	c0 eb 06             	shr    $0x6,%bl
    a126:	83 e3 01             	and    $0x1,%ebx
    a129:	38 cb                	cmp    %cl,%bl
    a12b:	0f 85 59 07 00 00    	jne    a88a <alu_test_sbb+0xb4a>
    a131:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    a135:	c1 ea 0b             	shr    $0xb,%edx
    a138:	83 e2 01             	and    $0x1,%edx
    a13b:	c0 e9 03             	shr    $0x3,%cl
    a13e:	83 e1 01             	and    $0x1,%ecx
    a141:	38 d1                	cmp    %dl,%cl
    a143:	0f 85 28 08 00 00    	jne    a971 <alu_test_sbb+0xc31>
    a149:	83 ec 04             	sub    $0x4,%esp
    a14c:	83 c8 01             	or     $0x1,%eax
    a14f:	88 46 24             	mov    %al,0x24(%esi)
    a152:	6a 08                	push   $0x8
    a154:	55                   	push   %ebp
    a155:	57                   	push   %edi
    a156:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a15a:	e8 01 55 00 00       	call   f660 <alu_sbb>
    a15f:	89 f9                	mov    %edi,%ecx
    a161:	83 c4 10             	add    $0x10,%esp
    a164:	89 c3                	mov    %eax,%ebx
    a166:	89 e8                	mov    %ebp,%eax
    a168:	f9                   	stc    
    a169:	18 c8                	sbb    %cl,%al
    a16b:	9c                   	pushf  
    a16c:	5a                   	pop    %edx
    a16d:	0f b6 c0             	movzbl %al,%eax
    a170:	39 c3                	cmp    %eax,%ebx
    a172:	0f 85 e4 07 00 00    	jne    a95c <alu_test_sbb+0xc1c>
    a178:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a17c:	89 d1                	mov    %edx,%ecx
    a17e:	83 e1 01             	and    $0x1,%ecx
    a181:	89 c3                	mov    %eax,%ebx
    a183:	83 e3 01             	and    $0x1,%ebx
    a186:	38 cb                	cmp    %cl,%bl
    a188:	0f 85 b9 07 00 00    	jne    a947 <alu_test_sbb+0xc07>
    a18e:	89 c3                	mov    %eax,%ebx
    a190:	89 d1                	mov    %edx,%ecx
    a192:	c0 eb 02             	shr    $0x2,%bl
    a195:	c1 e9 02             	shr    $0x2,%ecx
    a198:	83 e3 01             	and    $0x1,%ebx
    a19b:	83 e1 01             	and    $0x1,%ecx
    a19e:	38 cb                	cmp    %cl,%bl
    a1a0:	0f 85 ba 06 00 00    	jne    a860 <alu_test_sbb+0xb20>
    a1a6:	89 c3                	mov    %eax,%ebx
    a1a8:	89 d1                	mov    %edx,%ecx
    a1aa:	c0 eb 07             	shr    $0x7,%bl
    a1ad:	c0 e9 07             	shr    $0x7,%cl
    a1b0:	38 cb                	cmp    %cl,%bl
    a1b2:	0f 85 11 07 00 00    	jne    a8c9 <alu_test_sbb+0xb89>
    a1b8:	89 d1                	mov    %edx,%ecx
    a1ba:	c0 e8 06             	shr    $0x6,%al
    a1bd:	c1 e9 06             	shr    $0x6,%ecx
    a1c0:	83 e0 01             	and    $0x1,%eax
    a1c3:	83 e1 01             	and    $0x1,%ecx
    a1c6:	38 c8                	cmp    %cl,%al
    a1c8:	0f 85 e6 06 00 00    	jne    a8b4 <alu_test_sbb+0xb74>
    a1ce:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    a1d2:	c1 ea 0b             	shr    $0xb,%edx
    a1d5:	83 e2 01             	and    $0x1,%edx
    a1d8:	c0 e8 03             	shr    $0x3,%al
    a1db:	83 e0 01             	and    $0x1,%eax
    a1de:	38 d0                	cmp    %dl,%al
    a1e0:	0f 85 b9 06 00 00    	jne    a89f <alu_test_sbb+0xb5f>
    a1e6:	8b 7c 24 14          	mov    0x14(%esp),%edi
    a1ea:	39 7c 24 10          	cmp    %edi,0x10(%esp)
    a1ee:	0f 85 0c fe ff ff    	jne    a000 <alu_test_sbb+0x2c0>
    a1f4:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    a1f8:	39 f8                	cmp    %edi,%eax
    a1fa:	74 14                	je     a210 <alu_test_sbb+0x4d0>
    a1fc:	8b 28                	mov    (%eax),%ebp
    a1fe:	83 c0 04             	add    $0x4,%eax
    a201:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    a205:	e9 e6 fd ff ff       	jmp    9ff0 <alu_test_sbb+0x2b0>
    a20a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a210:	83 ec 0c             	sub    $0xc,%esp
    a213:	6a 00                	push   $0x0
    a215:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    a219:	89 fb                	mov    %edi,%ebx
    a21b:	e8 10 9f ff ff       	call   4130 <time@plt>
    a220:	89 04 24             	mov    %eax,(%esp)
    a223:	e8 68 9f ff ff       	call   4190 <srand@plt>
    a228:	83 c4 10             	add    $0x10,%esp
    a22b:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    a232:	00 
    a233:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a237:	90                   	nop
    a238:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    a23c:	89 fb                	mov    %edi,%ebx
    a23e:	e8 ad 9f ff ff       	call   41f0 <rand@plt>
    a243:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    a247:	89 c5                	mov    %eax,%ebp
    a249:	e8 a2 9f ff ff       	call   41f0 <rand@plt>
    a24e:	83 ec 04             	sub    $0x4,%esp
    a251:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    a255:	6a 20                	push   $0x20
    a257:	89 c7                	mov    %eax,%edi
    a259:	55                   	push   %ebp
    a25a:	50                   	push   %eax
    a25b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a25f:	e8 fc 53 00 00       	call   f660 <alu_sbb>
    a264:	89 f9                	mov    %edi,%ecx
    a266:	83 c4 10             	add    $0x10,%esp
    a269:	89 c3                	mov    %eax,%ebx
    a26b:	89 e8                	mov    %ebp,%eax
    a26d:	f8                   	clc    
    a26e:	19 c8                	sbb    %ecx,%eax
    a270:	9c                   	pushf  
    a271:	5a                   	pop    %edx
    a272:	39 c3                	cmp    %eax,%ebx
    a274:	0f 85 60 07 00 00    	jne    a9da <alu_test_sbb+0xc9a>
    a27a:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a27e:	89 d1                	mov    %edx,%ecx
    a280:	83 e1 01             	and    $0x1,%ecx
    a283:	89 c3                	mov    %eax,%ebx
    a285:	83 e3 01             	and    $0x1,%ebx
    a288:	38 cb                	cmp    %cl,%bl
    a28a:	0f 85 5f 07 00 00    	jne    a9ef <alu_test_sbb+0xcaf>
    a290:	89 c3                	mov    %eax,%ebx
    a292:	89 d1                	mov    %edx,%ecx
    a294:	c0 eb 02             	shr    $0x2,%bl
    a297:	c1 e9 02             	shr    $0x2,%ecx
    a29a:	83 e3 01             	and    $0x1,%ebx
    a29d:	83 e1 01             	and    $0x1,%ecx
    a2a0:	38 cb                	cmp    %cl,%bl
    a2a2:	0f 85 5c 07 00 00    	jne    aa04 <alu_test_sbb+0xcc4>
    a2a8:	89 c3                	mov    %eax,%ebx
    a2aa:	89 d1                	mov    %edx,%ecx
    a2ac:	c0 eb 07             	shr    $0x7,%bl
    a2af:	c0 e9 07             	shr    $0x7,%cl
    a2b2:	38 cb                	cmp    %cl,%bl
    a2b4:	0f 85 5f 07 00 00    	jne    aa19 <alu_test_sbb+0xcd9>
    a2ba:	89 c3                	mov    %eax,%ebx
    a2bc:	89 d1                	mov    %edx,%ecx
    a2be:	c0 eb 06             	shr    $0x6,%bl
    a2c1:	c1 e9 06             	shr    $0x6,%ecx
    a2c4:	83 e3 01             	and    $0x1,%ebx
    a2c7:	83 e1 01             	and    $0x1,%ecx
    a2ca:	38 cb                	cmp    %cl,%bl
    a2cc:	0f 85 5c 07 00 00    	jne    aa2e <alu_test_sbb+0xcee>
    a2d2:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    a2d6:	c1 ea 0b             	shr    $0xb,%edx
    a2d9:	83 e2 01             	and    $0x1,%edx
    a2dc:	c0 e9 03             	shr    $0x3,%cl
    a2df:	83 e1 01             	and    $0x1,%ecx
    a2e2:	38 d1                	cmp    %dl,%cl
    a2e4:	0f 85 59 07 00 00    	jne    aa43 <alu_test_sbb+0xd03>
    a2ea:	83 ec 04             	sub    $0x4,%esp
    a2ed:	83 e0 fe             	and    $0xfffffffe,%eax
    a2f0:	88 46 24             	mov    %al,0x24(%esi)
    a2f3:	6a 10                	push   $0x10
    a2f5:	55                   	push   %ebp
    a2f6:	57                   	push   %edi
    a2f7:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a2fb:	e8 60 53 00 00       	call   f660 <alu_sbb>
    a300:	89 f9                	mov    %edi,%ecx
    a302:	83 c4 10             	add    $0x10,%esp
    a305:	89 c3                	mov    %eax,%ebx
    a307:	89 e8                	mov    %ebp,%eax
    a309:	f8                   	clc    
    a30a:	66 19 c8             	sbb    %cx,%ax
    a30d:	9c                   	pushf  
    a30e:	5a                   	pop    %edx
    a30f:	0f b7 c0             	movzwl %ax,%eax
    a312:	39 c3                	cmp    %eax,%ebx
    a314:	0f 85 3e 07 00 00    	jne    aa58 <alu_test_sbb+0xd18>
    a31a:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a31e:	89 d1                	mov    %edx,%ecx
    a320:	83 e1 01             	and    $0x1,%ecx
    a323:	89 c3                	mov    %eax,%ebx
    a325:	83 e3 01             	and    $0x1,%ebx
    a328:	38 cb                	cmp    %cl,%bl
    a32a:	0f 85 3d 07 00 00    	jne    aa6d <alu_test_sbb+0xd2d>
    a330:	89 c3                	mov    %eax,%ebx
    a332:	89 d1                	mov    %edx,%ecx
    a334:	c0 eb 02             	shr    $0x2,%bl
    a337:	c1 e9 02             	shr    $0x2,%ecx
    a33a:	83 e3 01             	and    $0x1,%ebx
    a33d:	83 e1 01             	and    $0x1,%ecx
    a340:	38 cb                	cmp    %cl,%bl
    a342:	0f 85 3a 07 00 00    	jne    aa82 <alu_test_sbb+0xd42>
    a348:	89 d1                	mov    %edx,%ecx
    a34a:	c0 e8 07             	shr    $0x7,%al
    a34d:	c0 e9 07             	shr    $0x7,%cl
    a350:	38 c8                	cmp    %cl,%al
    a352:	0f 85 3f 07 00 00    	jne    aa97 <alu_test_sbb+0xd57>
    a358:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a35c:	89 d1                	mov    %edx,%ecx
    a35e:	c1 e9 06             	shr    $0x6,%ecx
    a361:	89 c3                	mov    %eax,%ebx
    a363:	83 e1 01             	and    $0x1,%ecx
    a366:	c0 eb 06             	shr    $0x6,%bl
    a369:	83 e3 01             	and    $0x1,%ebx
    a36c:	38 cb                	cmp    %cl,%bl
    a36e:	0f 85 38 07 00 00    	jne    aaac <alu_test_sbb+0xd6c>
    a374:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    a378:	c1 ea 0b             	shr    $0xb,%edx
    a37b:	83 e2 01             	and    $0x1,%edx
    a37e:	c0 e9 03             	shr    $0x3,%cl
    a381:	83 e1 01             	and    $0x1,%ecx
    a384:	38 d1                	cmp    %dl,%cl
    a386:	0f 85 35 07 00 00    	jne    aac1 <alu_test_sbb+0xd81>
    a38c:	83 ec 04             	sub    $0x4,%esp
    a38f:	83 e0 fe             	and    $0xfffffffe,%eax
    a392:	88 46 24             	mov    %al,0x24(%esi)
    a395:	6a 08                	push   $0x8
    a397:	55                   	push   %ebp
    a398:	57                   	push   %edi
    a399:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a39d:	e8 be 52 00 00       	call   f660 <alu_sbb>
    a3a2:	89 f9                	mov    %edi,%ecx
    a3a4:	83 c4 10             	add    $0x10,%esp
    a3a7:	89 c3                	mov    %eax,%ebx
    a3a9:	89 e8                	mov    %ebp,%eax
    a3ab:	f8                   	clc    
    a3ac:	18 c8                	sbb    %cl,%al
    a3ae:	9c                   	pushf  
    a3af:	5a                   	pop    %edx
    a3b0:	0f b6 c0             	movzbl %al,%eax
    a3b3:	39 c3                	cmp    %eax,%ebx
    a3b5:	0f 85 1b 07 00 00    	jne    aad6 <alu_test_sbb+0xd96>
    a3bb:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a3bf:	89 d1                	mov    %edx,%ecx
    a3c1:	83 e1 01             	and    $0x1,%ecx
    a3c4:	89 c3                	mov    %eax,%ebx
    a3c6:	83 e3 01             	and    $0x1,%ebx
    a3c9:	38 cb                	cmp    %cl,%bl
    a3cb:	0f 85 1a 07 00 00    	jne    aaeb <alu_test_sbb+0xdab>
    a3d1:	89 c3                	mov    %eax,%ebx
    a3d3:	89 d1                	mov    %edx,%ecx
    a3d5:	c0 eb 02             	shr    $0x2,%bl
    a3d8:	c1 e9 02             	shr    $0x2,%ecx
    a3db:	83 e3 01             	and    $0x1,%ebx
    a3de:	83 e1 01             	and    $0x1,%ecx
    a3e1:	38 cb                	cmp    %cl,%bl
    a3e3:	0f 85 17 07 00 00    	jne    ab00 <alu_test_sbb+0xdc0>
    a3e9:	89 c3                	mov    %eax,%ebx
    a3eb:	89 d1                	mov    %edx,%ecx
    a3ed:	c0 eb 07             	shr    $0x7,%bl
    a3f0:	c0 e9 07             	shr    $0x7,%cl
    a3f3:	38 cb                	cmp    %cl,%bl
    a3f5:	0f 85 1a 07 00 00    	jne    ab15 <alu_test_sbb+0xdd5>
    a3fb:	89 d1                	mov    %edx,%ecx
    a3fd:	c0 e8 06             	shr    $0x6,%al
    a400:	c1 e9 06             	shr    $0x6,%ecx
    a403:	83 e0 01             	and    $0x1,%eax
    a406:	83 e1 01             	and    $0x1,%ecx
    a409:	38 c8                	cmp    %cl,%al
    a40b:	0f 85 19 07 00 00    	jne    ab2a <alu_test_sbb+0xdea>
    a411:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    a415:	c1 ea 0b             	shr    $0xb,%edx
    a418:	83 e2 01             	and    $0x1,%edx
    a41b:	c0 e8 03             	shr    $0x3,%al
    a41e:	83 e0 01             	and    $0x1,%eax
    a421:	38 d0                	cmp    %dl,%al
    a423:	0f 85 b5 04 00 00    	jne    a8de <alu_test_sbb+0xb9e>
    a429:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    a42e:	0f 85 04 fe ff ff    	jne    a238 <alu_test_sbb+0x4f8>
    a434:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    a43b:	00 
    a43c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a440:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    a444:	89 fb                	mov    %edi,%ebx
    a446:	e8 a5 9d ff ff       	call   41f0 <rand@plt>
    a44b:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    a44f:	89 c5                	mov    %eax,%ebp
    a451:	e8 9a 9d ff ff       	call   41f0 <rand@plt>
    a456:	83 ec 04             	sub    $0x4,%esp
    a459:	80 4e 24 01          	orb    $0x1,0x24(%esi)
    a45d:	6a 20                	push   $0x20
    a45f:	89 c7                	mov    %eax,%edi
    a461:	55                   	push   %ebp
    a462:	50                   	push   %eax
    a463:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a467:	e8 f4 51 00 00       	call   f660 <alu_sbb>
    a46c:	89 f9                	mov    %edi,%ecx
    a46e:	83 c4 10             	add    $0x10,%esp
    a471:	89 c3                	mov    %eax,%ebx
    a473:	89 e8                	mov    %ebp,%eax
    a475:	f9                   	stc    
    a476:	19 c8                	sbb    %ecx,%eax
    a478:	9c                   	pushf  
    a479:	5a                   	pop    %edx
    a47a:	39 c3                	cmp    %eax,%ebx
    a47c:	0f 85 7a 07 00 00    	jne    abfc <alu_test_sbb+0xebc>
    a482:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a486:	89 d1                	mov    %edx,%ecx
    a488:	83 e1 01             	and    $0x1,%ecx
    a48b:	89 c3                	mov    %eax,%ebx
    a48d:	83 e3 01             	and    $0x1,%ebx
    a490:	38 cb                	cmp    %cl,%bl
    a492:	0f 85 3a 07 00 00    	jne    abd2 <alu_test_sbb+0xe92>
    a498:	89 c3                	mov    %eax,%ebx
    a49a:	89 d1                	mov    %edx,%ecx
    a49c:	c0 eb 02             	shr    $0x2,%bl
    a49f:	c1 e9 02             	shr    $0x2,%ecx
    a4a2:	83 e3 01             	and    $0x1,%ebx
    a4a5:	83 e1 01             	and    $0x1,%ecx
    a4a8:	38 cb                	cmp    %cl,%bl
    a4aa:	0f 85 0d 07 00 00    	jne    abbd <alu_test_sbb+0xe7d>
    a4b0:	89 c3                	mov    %eax,%ebx
    a4b2:	89 d1                	mov    %edx,%ecx
    a4b4:	c0 eb 07             	shr    $0x7,%bl
    a4b7:	c0 e9 07             	shr    $0x7,%cl
    a4ba:	38 cb                	cmp    %cl,%bl
    a4bc:	0f 85 7d 06 00 00    	jne    ab3f <alu_test_sbb+0xdff>
    a4c2:	89 c3                	mov    %eax,%ebx
    a4c4:	89 d1                	mov    %edx,%ecx
    a4c6:	c0 eb 06             	shr    $0x6,%bl
    a4c9:	c1 e9 06             	shr    $0x6,%ecx
    a4cc:	83 e3 01             	and    $0x1,%ebx
    a4cf:	83 e1 01             	and    $0x1,%ecx
    a4d2:	38 cb                	cmp    %cl,%bl
    a4d4:	0f 85 7a 06 00 00    	jne    ab54 <alu_test_sbb+0xe14>
    a4da:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    a4de:	c1 ea 0b             	shr    $0xb,%edx
    a4e1:	83 e2 01             	and    $0x1,%edx
    a4e4:	c0 e9 03             	shr    $0x3,%cl
    a4e7:	83 e1 01             	and    $0x1,%ecx
    a4ea:	38 d1                	cmp    %dl,%cl
    a4ec:	0f 85 77 06 00 00    	jne    ab69 <alu_test_sbb+0xe29>
    a4f2:	83 ec 04             	sub    $0x4,%esp
    a4f5:	83 c8 01             	or     $0x1,%eax
    a4f8:	88 46 24             	mov    %al,0x24(%esi)
    a4fb:	6a 10                	push   $0x10
    a4fd:	55                   	push   %ebp
    a4fe:	57                   	push   %edi
    a4ff:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a503:	e8 58 51 00 00       	call   f660 <alu_sbb>
    a508:	89 f9                	mov    %edi,%ecx
    a50a:	83 c4 10             	add    $0x10,%esp
    a50d:	89 c3                	mov    %eax,%ebx
    a50f:	89 e8                	mov    %ebp,%eax
    a511:	f9                   	stc    
    a512:	66 19 c8             	sbb    %cx,%ax
    a515:	9c                   	pushf  
    a516:	5a                   	pop    %edx
    a517:	0f b7 c0             	movzwl %ax,%eax
    a51a:	39 c3                	cmp    %eax,%ebx
    a51c:	0f 85 5c 06 00 00    	jne    ab7e <alu_test_sbb+0xe3e>
    a522:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a526:	89 d1                	mov    %edx,%ecx
    a528:	83 e1 01             	and    $0x1,%ecx
    a52b:	89 c3                	mov    %eax,%ebx
    a52d:	83 e3 01             	and    $0x1,%ebx
    a530:	38 cb                	cmp    %cl,%bl
    a532:	0f 85 5b 06 00 00    	jne    ab93 <alu_test_sbb+0xe53>
    a538:	89 c3                	mov    %eax,%ebx
    a53a:	89 d1                	mov    %edx,%ecx
    a53c:	c0 eb 02             	shr    $0x2,%bl
    a53f:	c1 e9 02             	shr    $0x2,%ecx
    a542:	83 e3 01             	and    $0x1,%ebx
    a545:	83 e1 01             	and    $0x1,%ecx
    a548:	38 cb                	cmp    %cl,%bl
    a54a:	0f 85 58 06 00 00    	jne    aba8 <alu_test_sbb+0xe68>
    a550:	89 d1                	mov    %edx,%ecx
    a552:	c0 e8 07             	shr    $0x7,%al
    a555:	c0 e9 07             	shr    $0x7,%cl
    a558:	38 c8                	cmp    %cl,%al
    a55a:	0f 85 b1 06 00 00    	jne    ac11 <alu_test_sbb+0xed1>
    a560:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a564:	89 d1                	mov    %edx,%ecx
    a566:	c1 e9 06             	shr    $0x6,%ecx
    a569:	89 c3                	mov    %eax,%ebx
    a56b:	83 e1 01             	and    $0x1,%ecx
    a56e:	c0 eb 06             	shr    $0x6,%bl
    a571:	83 e3 01             	and    $0x1,%ebx
    a574:	38 cb                	cmp    %cl,%bl
    a576:	0f 85 aa 06 00 00    	jne    ac26 <alu_test_sbb+0xee6>
    a57c:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    a580:	c1 ea 0b             	shr    $0xb,%edx
    a583:	83 e2 01             	and    $0x1,%edx
    a586:	c0 e9 03             	shr    $0x3,%cl
    a589:	83 e1 01             	and    $0x1,%ecx
    a58c:	38 d1                	cmp    %dl,%cl
    a58e:	0f 85 a7 06 00 00    	jne    ac3b <alu_test_sbb+0xefb>
    a594:	83 ec 04             	sub    $0x4,%esp
    a597:	83 c8 01             	or     $0x1,%eax
    a59a:	88 46 24             	mov    %al,0x24(%esi)
    a59d:	6a 08                	push   $0x8
    a59f:	55                   	push   %ebp
    a5a0:	57                   	push   %edi
    a5a1:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    a5a5:	e8 b6 50 00 00       	call   f660 <alu_sbb>
    a5aa:	89 f9                	mov    %edi,%ecx
    a5ac:	83 c4 10             	add    $0x10,%esp
    a5af:	89 c3                	mov    %eax,%ebx
    a5b1:	89 e8                	mov    %ebp,%eax
    a5b3:	f9                   	stc    
    a5b4:	18 c8                	sbb    %cl,%al
    a5b6:	9c                   	pushf  
    a5b7:	5a                   	pop    %edx
    a5b8:	0f b6 c0             	movzbl %al,%eax
    a5bb:	39 c3                	cmp    %eax,%ebx
    a5bd:	0f 85 8d 06 00 00    	jne    ac50 <alu_test_sbb+0xf10>
    a5c3:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    a5c7:	89 d1                	mov    %edx,%ecx
    a5c9:	83 e1 01             	and    $0x1,%ecx
    a5cc:	89 c3                	mov    %eax,%ebx
    a5ce:	83 e3 01             	and    $0x1,%ebx
    a5d1:	38 cb                	cmp    %cl,%bl
    a5d3:	0f 85 8c 06 00 00    	jne    ac65 <alu_test_sbb+0xf25>
    a5d9:	89 c3                	mov    %eax,%ebx
    a5db:	89 d1                	mov    %edx,%ecx
    a5dd:	c0 eb 02             	shr    $0x2,%bl
    a5e0:	c1 e9 02             	shr    $0x2,%ecx
    a5e3:	83 e3 01             	and    $0x1,%ebx
    a5e6:	83 e1 01             	and    $0x1,%ecx
    a5e9:	38 cb                	cmp    %cl,%bl
    a5eb:	0f 85 89 06 00 00    	jne    ac7a <alu_test_sbb+0xf3a>
    a5f1:	89 c3                	mov    %eax,%ebx
    a5f3:	89 d1                	mov    %edx,%ecx
    a5f5:	c0 eb 07             	shr    $0x7,%bl
    a5f8:	c0 e9 07             	shr    $0x7,%cl
    a5fb:	38 cb                	cmp    %cl,%bl
    a5fd:	0f 85 8c 06 00 00    	jne    ac8f <alu_test_sbb+0xf4f>
    a603:	89 d1                	mov    %edx,%ecx
    a605:	c0 e8 06             	shr    $0x6,%al
    a608:	c1 e9 06             	shr    $0x6,%ecx
    a60b:	83 e0 01             	and    $0x1,%eax
    a60e:	83 e1 01             	and    $0x1,%ecx
    a611:	38 c8                	cmp    %cl,%al
    a613:	0f 85 8b 06 00 00    	jne    aca4 <alu_test_sbb+0xf64>
    a619:	0f b6 46 25          	movzbl 0x25(%esi),%eax
    a61d:	c1 ea 0b             	shr    $0xb,%edx
    a620:	83 e2 01             	and    $0x1,%edx
    a623:	c0 e8 03             	shr    $0x3,%al
    a626:	83 e0 01             	and    $0x1,%eax
    a629:	38 d0                	cmp    %dl,%al
    a62b:	0f 85 b6 05 00 00    	jne    abe7 <alu_test_sbb+0xea7>
    a631:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    a636:	0f 85 04 fe ff ff    	jne    a440 <alu_test_sbb+0x700>
    a63c:	83 ec 0c             	sub    $0xc,%esp
    a63f:	8b 7c 24 18          	mov    0x18(%esp),%edi
    a643:	8d 87 54 71 fe ff    	lea    -0x18eac(%edi),%eax
    a649:	89 fb                	mov    %edi,%ebx
    a64b:	50                   	push   %eax
    a64c:	e8 5f 9c ff ff       	call   42b0 <puts@plt>
    a651:	e8 aa 01 02 00       	call   2a800 <get_ref>
    a656:	83 c4 10             	add    $0x10,%esp
    a659:	85 c0                	test   %eax,%eax
    a65b:	75 08                	jne    a665 <alu_test_sbb+0x925>
    a65d:	83 c4 4c             	add    $0x4c,%esp
    a660:	5b                   	pop    %ebx
    a661:	5e                   	pop    %esi
    a662:	5f                   	pop    %edi
    a663:	5d                   	pop    %ebp
    a664:	c3                   	ret    
    a665:	83 ec 0c             	sub    $0xc,%esp
    a668:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    a66c:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    a672:	50                   	push   %eax
    a673:	e8 38 9c ff ff       	call   42b0 <puts@plt>
    a678:	83 c4 10             	add    $0x10,%esp
    a67b:	eb e0                	jmp    a65d <alu_test_sbb+0x91d>
    a67d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a681:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a687:	50                   	push   %eax
    a688:	68 cf 00 00 00       	push   $0xcf
    a68d:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    a693:	50                   	push   %eax
    a694:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    a69a:	50                   	push   %eax
    a69b:	e8 70 9c ff ff       	call   4310 <__assert_fail@plt>
    a6a0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a6a4:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a6aa:	50                   	push   %eax
    a6ab:	68 d1 00 00 00       	push   $0xd1
    a6b0:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    a6b6:	50                   	push   %eax
    a6b7:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    a6bd:	50                   	push   %eax
    a6be:	e8 4d 9c ff ff       	call   4310 <__assert_fail@plt>
    a6c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a6c7:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a6cd:	50                   	push   %eax
    a6ce:	68 d1 00 00 00       	push   $0xd1
    a6d3:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    a6d9:	50                   	push   %eax
    a6da:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    a6e0:	50                   	push   %eax
    a6e1:	e8 2a 9c ff ff       	call   4310 <__assert_fail@plt>
    a6e6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a6ea:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a6f0:	50                   	push   %eax
    a6f1:	68 d1 00 00 00       	push   $0xd1
    a6f6:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    a6fc:	50                   	push   %eax
    a6fd:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    a703:	50                   	push   %eax
    a704:	e8 07 9c ff ff       	call   4310 <__assert_fail@plt>
    a709:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a70d:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a713:	50                   	push   %eax
    a714:	68 d1 00 00 00       	push   $0xd1
    a719:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    a71f:	50                   	push   %eax
    a720:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    a726:	50                   	push   %eax
    a727:	e8 e4 9b ff ff       	call   4310 <__assert_fail@plt>
    a72c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a730:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a736:	50                   	push   %eax
    a737:	68 d1 00 00 00       	push   $0xd1
    a73c:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    a742:	50                   	push   %eax
    a743:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    a749:	50                   	push   %eax
    a74a:	e8 c1 9b ff ff       	call   4310 <__assert_fail@plt>
    a74f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a753:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a759:	50                   	push   %eax
    a75a:	68 d1 00 00 00       	push   $0xd1
    a75f:	e9 29 ff ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    a764:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a768:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a76e:	50                   	push   %eax
    a76f:	68 d0 00 00 00       	push   $0xd0
    a774:	e9 37 ff ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    a779:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a77d:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a783:	50                   	push   %eax
    a784:	68 d0 00 00 00       	push   $0xd0
    a789:	e9 45 ff ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    a78e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a792:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a798:	50                   	push   %eax
    a799:	68 d0 00 00 00       	push   $0xd0
    a79e:	e9 53 ff ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    a7a3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a7a7:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a7ad:	50                   	push   %eax
    a7ae:	68 d0 00 00 00       	push   $0xd0
    a7b3:	e9 61 ff ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    a7b8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a7bc:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a7c2:	50                   	push   %eax
    a7c3:	68 d0 00 00 00       	push   $0xd0
    a7c8:	e9 6f ff ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    a7cd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a7d1:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a7d7:	50                   	push   %eax
    a7d8:	68 d0 00 00 00       	push   $0xd0
    a7dd:	e9 ab fe ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    a7e2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a7e6:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a7ec:	50                   	push   %eax
    a7ed:	68 cf 00 00 00       	push   $0xcf
    a7f2:	e9 b9 fe ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    a7f7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a7fb:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a801:	50                   	push   %eax
    a802:	68 cf 00 00 00       	push   $0xcf
    a807:	e9 c7 fe ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    a80c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a810:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a816:	50                   	push   %eax
    a817:	68 cf 00 00 00       	push   $0xcf
    a81c:	e9 d5 fe ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    a821:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a825:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a82b:	50                   	push   %eax
    a82c:	68 cf 00 00 00       	push   $0xcf
    a831:	e9 e3 fe ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    a836:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a83a:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a840:	50                   	push   %eax
    a841:	68 cf 00 00 00       	push   $0xcf
    a846:	e9 f1 fe ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    a84b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a84f:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a855:	50                   	push   %eax
    a856:	68 d9 00 00 00       	push   $0xd9
    a85b:	e9 2d fe ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    a860:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a864:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a86a:	50                   	push   %eax
    a86b:	68 db 00 00 00       	push   $0xdb
    a870:	e9 a4 fe ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    a875:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a879:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a87f:	50                   	push   %eax
    a880:	68 d9 00 00 00       	push   $0xd9
    a885:	e9 b2 fe ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    a88a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a88e:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a894:	50                   	push   %eax
    a895:	68 da 00 00 00       	push   $0xda
    a89a:	e9 34 fe ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    a89f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a8a3:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a8a9:	50                   	push   %eax
    a8aa:	68 db 00 00 00       	push   $0xdb
    a8af:	e9 fc fd ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    a8b4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a8b8:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a8be:	50                   	push   %eax
    a8bf:	68 db 00 00 00       	push   $0xdb
    a8c4:	e9 0a fe ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    a8c9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a8cd:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a8d3:	50                   	push   %eax
    a8d4:	68 db 00 00 00       	push   $0xdb
    a8d9:	e9 18 fe ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    a8de:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a8e2:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a8e8:	50                   	push   %eax
    a8e9:	68 e5 00 00 00       	push   $0xe5
    a8ee:	e9 bd fd ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    a8f3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a8f7:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a8fd:	50                   	push   %eax
    a8fe:	68 d9 00 00 00       	push   $0xd9
    a903:	e9 a8 fd ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    a908:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a90c:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a912:	50                   	push   %eax
    a913:	68 d9 00 00 00       	push   $0xd9
    a918:	e9 b6 fd ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    a91d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a921:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a927:	50                   	push   %eax
    a928:	68 d9 00 00 00       	push   $0xd9
    a92d:	e9 c4 fd ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    a932:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a936:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a93c:	50                   	push   %eax
    a93d:	68 d9 00 00 00       	push   $0xd9
    a942:	e9 d2 fd ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    a947:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a94b:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a951:	50                   	push   %eax
    a952:	68 db 00 00 00       	push   $0xdb
    a957:	e9 e0 fd ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    a95c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a960:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a966:	50                   	push   %eax
    a967:	68 db 00 00 00       	push   $0xdb
    a96c:	e9 1c fd ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    a971:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a975:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a97b:	50                   	push   %eax
    a97c:	68 da 00 00 00       	push   $0xda
    a981:	e9 2a fd ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    a986:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a98a:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a990:	50                   	push   %eax
    a991:	68 da 00 00 00       	push   $0xda
    a996:	e9 5b fd ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    a99b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a99f:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a9a5:	50                   	push   %eax
    a9a6:	68 da 00 00 00       	push   $0xda
    a9ab:	e9 69 fd ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    a9b0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a9b4:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a9ba:	50                   	push   %eax
    a9bb:	68 da 00 00 00       	push   $0xda
    a9c0:	e9 77 fd ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    a9c5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a9c9:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a9cf:	50                   	push   %eax
    a9d0:	68 da 00 00 00       	push   $0xda
    a9d5:	e9 b3 fc ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    a9da:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a9de:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a9e4:	50                   	push   %eax
    a9e5:	68 e3 00 00 00       	push   $0xe3
    a9ea:	e9 9e fc ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    a9ef:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    a9f3:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    a9f9:	50                   	push   %eax
    a9fa:	68 e3 00 00 00       	push   $0xe3
    a9ff:	e9 38 fd ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    aa04:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa08:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aa0e:	50                   	push   %eax
    aa0f:	68 e3 00 00 00       	push   $0xe3
    aa14:	e9 00 fd ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    aa19:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa1d:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aa23:	50                   	push   %eax
    aa24:	68 e3 00 00 00       	push   $0xe3
    aa29:	e9 c8 fc ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    aa2e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa32:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aa38:	50                   	push   %eax
    aa39:	68 e3 00 00 00       	push   $0xe3
    aa3e:	e9 90 fc ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    aa43:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa47:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aa4d:	50                   	push   %eax
    aa4e:	68 e3 00 00 00       	push   $0xe3
    aa53:	e9 58 fc ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    aa58:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa5c:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aa62:	50                   	push   %eax
    aa63:	68 e4 00 00 00       	push   $0xe4
    aa68:	e9 20 fc ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    aa6d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa71:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aa77:	50                   	push   %eax
    aa78:	68 e4 00 00 00       	push   $0xe4
    aa7d:	e9 ba fc ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    aa82:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa86:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aa8c:	50                   	push   %eax
    aa8d:	68 e4 00 00 00       	push   $0xe4
    aa92:	e9 82 fc ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    aa97:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aa9b:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aaa1:	50                   	push   %eax
    aaa2:	68 e4 00 00 00       	push   $0xe4
    aaa7:	e9 4a fc ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    aaac:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aab0:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aab6:	50                   	push   %eax
    aab7:	68 e4 00 00 00       	push   $0xe4
    aabc:	e9 12 fc ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    aac1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aac5:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aacb:	50                   	push   %eax
    aacc:	68 e4 00 00 00       	push   $0xe4
    aad1:	e9 da fb ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    aad6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aada:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aae0:	50                   	push   %eax
    aae1:	68 e5 00 00 00       	push   $0xe5
    aae6:	e9 a2 fb ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    aaeb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aaef:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    aaf5:	50                   	push   %eax
    aaf6:	68 e5 00 00 00       	push   $0xe5
    aafb:	e9 3c fc ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    ab00:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab04:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab0a:	50                   	push   %eax
    ab0b:	68 e5 00 00 00       	push   $0xe5
    ab10:	e9 04 fc ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    ab15:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab19:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab1f:	50                   	push   %eax
    ab20:	68 e5 00 00 00       	push   $0xe5
    ab25:	e9 cc fb ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    ab2a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab2e:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab34:	50                   	push   %eax
    ab35:	68 e5 00 00 00       	push   $0xe5
    ab3a:	e9 94 fb ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    ab3f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab43:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab49:	50                   	push   %eax
    ab4a:	68 eb 00 00 00       	push   $0xeb
    ab4f:	e9 a2 fb ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    ab54:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab58:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab5e:	50                   	push   %eax
    ab5f:	68 eb 00 00 00       	push   $0xeb
    ab64:	e9 6a fb ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    ab69:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab6d:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab73:	50                   	push   %eax
    ab74:	68 eb 00 00 00       	push   $0xeb
    ab79:	e9 32 fb ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    ab7e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab82:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab88:	50                   	push   %eax
    ab89:	68 ec 00 00 00       	push   $0xec
    ab8e:	e9 fa fa ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    ab93:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ab97:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ab9d:	50                   	push   %eax
    ab9e:	68 ec 00 00 00       	push   $0xec
    aba3:	e9 94 fb ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    aba8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    abac:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    abb2:	50                   	push   %eax
    abb3:	68 ec 00 00 00       	push   $0xec
    abb8:	e9 5c fb ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    abbd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    abc1:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    abc7:	50                   	push   %eax
    abc8:	68 eb 00 00 00       	push   $0xeb
    abcd:	e9 47 fb ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    abd2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    abd6:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    abdc:	50                   	push   %eax
    abdd:	68 eb 00 00 00       	push   $0xeb
    abe2:	e9 55 fb ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    abe7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    abeb:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    abf1:	50                   	push   %eax
    abf2:	68 ed 00 00 00       	push   $0xed
    abf7:	e9 b4 fa ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    abfc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac00:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac06:	50                   	push   %eax
    ac07:	68 eb 00 00 00       	push   $0xeb
    ac0c:	e9 7c fa ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    ac11:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac15:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac1b:	50                   	push   %eax
    ac1c:	68 ec 00 00 00       	push   $0xec
    ac21:	e9 d0 fa ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    ac26:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac2a:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac30:	50                   	push   %eax
    ac31:	68 ec 00 00 00       	push   $0xec
    ac36:	e9 98 fa ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    ac3b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac3f:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac45:	50                   	push   %eax
    ac46:	68 ec 00 00 00       	push   $0xec
    ac4b:	e9 60 fa ff ff       	jmp    a6b0 <alu_test_sbb+0x970>
    ac50:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac54:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac5a:	50                   	push   %eax
    ac5b:	68 ed 00 00 00       	push   $0xed
    ac60:	e9 28 fa ff ff       	jmp    a68d <alu_test_sbb+0x94d>
    ac65:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac69:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac6f:	50                   	push   %eax
    ac70:	68 ed 00 00 00       	push   $0xed
    ac75:	e9 c2 fa ff ff       	jmp    a73c <alu_test_sbb+0x9fc>
    ac7a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac7e:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac84:	50                   	push   %eax
    ac85:	68 ed 00 00 00       	push   $0xed
    ac8a:	e9 8a fa ff ff       	jmp    a719 <alu_test_sbb+0x9d9>
    ac8f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ac93:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    ac99:	50                   	push   %eax
    ac9a:	68 ed 00 00 00       	push   $0xed
    ac9f:	e9 52 fa ff ff       	jmp    a6f6 <alu_test_sbb+0x9b6>
    aca4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    aca8:	8d 83 1c 60 fe ff    	lea    -0x19fe4(%ebx),%eax
    acae:	50                   	push   %eax
    acaf:	68 ed 00 00 00       	push   $0xed
    acb4:	e9 1a fa ff ff       	jmp    a6d3 <alu_test_sbb+0x993>
    acb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000acc0 <alu_test_and>:
    acc0:	e8 12 b6 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    acc5:	05 3b 43 04 00       	add    $0x4433b,%eax
    acca:	55                   	push   %ebp
    accb:	57                   	push   %edi
    accc:	56                   	push   %esi
    accd:	53                   	push   %ebx
    acce:	83 ec 4c             	sub    $0x4c,%esp
    acd1:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
    acd7:	8d 74 24 40          	lea    0x40(%esp),%esi
    acdb:	89 44 24 0c          	mov    %eax,0xc(%esp)
    acdf:	8d 7c 24 28          	lea    0x28(%esp),%edi
    ace3:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    acea:	10 
    aceb:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    acf2:	ff 
    acf3:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    acfa:	ff 
    acfb:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    ad02:	ff 
    ad03:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    ad0a:	00 
    ad0b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    ad12:	00 
    ad13:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    ad1a:	00 
    ad1b:	89 74 24 14          	mov    %esi,0x14(%esp)
    ad1f:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    ad23:	89 7c 24 18          	mov    %edi,0x18(%esp)
    ad27:	bf 00 00 00 10       	mov    $0x10000000,%edi
    ad2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ad30:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    ad34:	be 00 00 00 10       	mov    $0x10000000,%esi
    ad39:	89 44 24 10          	mov    %eax,0x10(%esp)
    ad3d:	eb 0e                	jmp    ad4d <alu_test_and+0x8d>
    ad3f:	90                   	nop
    ad40:	8b 44 24 10          	mov    0x10(%esp),%eax
    ad44:	8b 30                	mov    (%eax),%esi
    ad46:	83 c0 04             	add    $0x4,%eax
    ad49:	89 44 24 10          	mov    %eax,0x10(%esp)
    ad4d:	83 ec 04             	sub    $0x4,%esp
    ad50:	6a 20                	push   $0x20
    ad52:	57                   	push   %edi
    ad53:	56                   	push   %esi
    ad54:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    ad58:	e8 13 4c 00 00       	call   f970 <alu_and>
    ad5d:	89 f1                	mov    %esi,%ecx
    ad5f:	83 c4 10             	add    $0x10,%esp
    ad62:	89 c3                	mov    %eax,%ebx
    ad64:	89 f8                	mov    %edi,%eax
    ad66:	21 c8                	and    %ecx,%eax
    ad68:	9c                   	pushf  
    ad69:	5a                   	pop    %edx
    ad6a:	39 c3                	cmp    %eax,%ebx
    ad6c:	0f 85 38 06 00 00    	jne    b3aa <alu_test_and+0x6ea>
    ad72:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    ad76:	89 d1                	mov    %edx,%ecx
    ad78:	83 e1 01             	and    $0x1,%ecx
    ad7b:	89 c3                	mov    %eax,%ebx
    ad7d:	83 e3 01             	and    $0x1,%ebx
    ad80:	38 cb                	cmp    %cl,%bl
    ad82:	0f 85 8b 06 00 00    	jne    b413 <alu_test_and+0x753>
    ad88:	89 c3                	mov    %eax,%ebx
    ad8a:	89 d1                	mov    %edx,%ecx
    ad8c:	c0 eb 02             	shr    $0x2,%bl
    ad8f:	c1 e9 02             	shr    $0x2,%ecx
    ad92:	83 e3 01             	and    $0x1,%ebx
    ad95:	83 e1 01             	and    $0x1,%ecx
    ad98:	38 cb                	cmp    %cl,%bl
    ad9a:	0f 85 5e 06 00 00    	jne    b3fe <alu_test_and+0x73e>
    ada0:	89 c3                	mov    %eax,%ebx
    ada2:	89 d1                	mov    %edx,%ecx
    ada4:	c0 eb 07             	shr    $0x7,%bl
    ada7:	c0 e9 07             	shr    $0x7,%cl
    adaa:	38 cb                	cmp    %cl,%bl
    adac:	0f 85 37 06 00 00    	jne    b3e9 <alu_test_and+0x729>
    adb2:	89 d1                	mov    %edx,%ecx
    adb4:	c0 e8 06             	shr    $0x6,%al
    adb7:	c1 e9 06             	shr    $0x6,%ecx
    adba:	83 e0 01             	and    $0x1,%eax
    adbd:	83 e1 01             	and    $0x1,%ecx
    adc0:	38 c8                	cmp    %cl,%al
    adc2:	0f 85 b4 06 00 00    	jne    b47c <alu_test_and+0x7bc>
    adc8:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    adcc:	c1 ea 0b             	shr    $0xb,%edx
    adcf:	83 e2 01             	and    $0x1,%edx
    add2:	c0 e8 03             	shr    $0x3,%al
    add5:	83 e0 01             	and    $0x1,%eax
    add8:	38 d0                	cmp    %dl,%al
    adda:	0f 85 87 06 00 00    	jne    b467 <alu_test_and+0x7a7>
    ade0:	83 ec 04             	sub    $0x4,%esp
    ade3:	6a 10                	push   $0x10
    ade5:	57                   	push   %edi
    ade6:	56                   	push   %esi
    ade7:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    adeb:	e8 80 4b 00 00       	call   f970 <alu_and>
    adf0:	89 f1                	mov    %esi,%ecx
    adf2:	83 c4 10             	add    $0x10,%esp
    adf5:	89 c3                	mov    %eax,%ebx
    adf7:	89 f8                	mov    %edi,%eax
    adf9:	66 21 c8             	and    %cx,%ax
    adfc:	9c                   	pushf  
    adfd:	5a                   	pop    %edx
    adfe:	0f b7 c0             	movzwl %ax,%eax
    ae01:	39 c3                	cmp    %eax,%ebx
    ae03:	0f 85 49 06 00 00    	jne    b452 <alu_test_and+0x792>
    ae09:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    ae0d:	89 d1                	mov    %edx,%ecx
    ae0f:	83 e1 01             	and    $0x1,%ecx
    ae12:	89 c3                	mov    %eax,%ebx
    ae14:	83 e3 01             	and    $0x1,%ebx
    ae17:	38 cb                	cmp    %cl,%bl
    ae19:	0f 85 1e 06 00 00    	jne    b43d <alu_test_and+0x77d>
    ae1f:	89 c3                	mov    %eax,%ebx
    ae21:	89 d1                	mov    %edx,%ecx
    ae23:	c0 eb 02             	shr    $0x2,%bl
    ae26:	c1 e9 02             	shr    $0x2,%ecx
    ae29:	83 e3 01             	and    $0x1,%ebx
    ae2c:	83 e1 01             	and    $0x1,%ecx
    ae2f:	38 cb                	cmp    %cl,%bl
    ae31:	0f 85 f1 05 00 00    	jne    b428 <alu_test_and+0x768>
    ae37:	89 d1                	mov    %edx,%ecx
    ae39:	c0 e8 07             	shr    $0x7,%al
    ae3c:	c0 e9 07             	shr    $0x7,%cl
    ae3f:	38 c8                	cmp    %cl,%al
    ae41:	0f 85 24 05 00 00    	jne    b36b <alu_test_and+0x6ab>
    ae47:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    ae4b:	89 d1                	mov    %edx,%ecx
    ae4d:	c1 e9 06             	shr    $0x6,%ecx
    ae50:	c0 e8 06             	shr    $0x6,%al
    ae53:	83 e1 01             	and    $0x1,%ecx
    ae56:	83 e0 01             	and    $0x1,%eax
    ae59:	38 c8                	cmp    %cl,%al
    ae5b:	0f 85 f5 04 00 00    	jne    b356 <alu_test_and+0x696>
    ae61:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    ae65:	c1 ea 0b             	shr    $0xb,%edx
    ae68:	83 e2 01             	and    $0x1,%edx
    ae6b:	c0 e8 03             	shr    $0x3,%al
    ae6e:	83 e0 01             	and    $0x1,%eax
    ae71:	38 d0                	cmp    %dl,%al
    ae73:	0f 85 07 05 00 00    	jne    b380 <alu_test_and+0x6c0>
    ae79:	83 ec 04             	sub    $0x4,%esp
    ae7c:	6a 08                	push   $0x8
    ae7e:	57                   	push   %edi
    ae7f:	56                   	push   %esi
    ae80:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    ae84:	e8 e7 4a 00 00       	call   f970 <alu_and>
    ae89:	89 f1                	mov    %esi,%ecx
    ae8b:	83 c4 10             	add    $0x10,%esp
    ae8e:	89 c3                	mov    %eax,%ebx
    ae90:	89 f8                	mov    %edi,%eax
    ae92:	20 c8                	and    %cl,%al
    ae94:	9c                   	pushf  
    ae95:	5a                   	pop    %edx
    ae96:	0f b6 c0             	movzbl %al,%eax
    ae99:	39 c3                	cmp    %eax,%ebx
    ae9b:	0f 85 33 05 00 00    	jne    b3d4 <alu_test_and+0x714>
    aea1:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    aea5:	89 d1                	mov    %edx,%ecx
    aea7:	83 e1 01             	and    $0x1,%ecx
    aeaa:	89 c3                	mov    %eax,%ebx
    aeac:	83 e3 01             	and    $0x1,%ebx
    aeaf:	38 cb                	cmp    %cl,%bl
    aeb1:	0f 85 04 06 00 00    	jne    b4bb <alu_test_and+0x7fb>
    aeb7:	89 c3                	mov    %eax,%ebx
    aeb9:	89 d1                	mov    %edx,%ecx
    aebb:	c0 eb 02             	shr    $0x2,%bl
    aebe:	c1 e9 02             	shr    $0x2,%ecx
    aec1:	83 e3 01             	and    $0x1,%ebx
    aec4:	83 e1 01             	and    $0x1,%ecx
    aec7:	38 cb                	cmp    %cl,%bl
    aec9:	0f 85 d7 05 00 00    	jne    b4a6 <alu_test_and+0x7e6>
    aecf:	89 c3                	mov    %eax,%ebx
    aed1:	89 d1                	mov    %edx,%ecx
    aed3:	c0 eb 07             	shr    $0x7,%bl
    aed6:	c0 e9 07             	shr    $0x7,%cl
    aed9:	38 cb                	cmp    %cl,%bl
    aedb:	0f 85 b0 05 00 00    	jne    b491 <alu_test_and+0x7d1>
    aee1:	89 d1                	mov    %edx,%ecx
    aee3:	c0 e8 06             	shr    $0x6,%al
    aee6:	c1 e9 06             	shr    $0x6,%ecx
    aee9:	83 e0 01             	and    $0x1,%eax
    aeec:	83 e1 01             	and    $0x1,%ecx
    aeef:	38 c8                	cmp    %cl,%al
    aef1:	0f 85 9e 04 00 00    	jne    b395 <alu_test_and+0x6d5>
    aef7:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    aefb:	c1 ea 0b             	shr    $0xb,%edx
    aefe:	83 e2 01             	and    $0x1,%edx
    af01:	c0 e8 03             	shr    $0x3,%al
    af04:	83 e0 01             	and    $0x1,%eax
    af07:	38 d0                	cmp    %dl,%al
    af09:	0f 85 b0 04 00 00    	jne    b3bf <alu_test_and+0x6ff>
    af0f:	8b 74 24 14          	mov    0x14(%esp),%esi
    af13:	39 74 24 10          	cmp    %esi,0x10(%esp)
    af17:	0f 85 23 fe ff ff    	jne    ad40 <alu_test_and+0x80>
    af1d:	8b 44 24 18          	mov    0x18(%esp),%eax
    af21:	39 f0                	cmp    %esi,%eax
    af23:	74 13                	je     af38 <alu_test_and+0x278>
    af25:	8b 38                	mov    (%eax),%edi
    af27:	83 c0 04             	add    $0x4,%eax
    af2a:	89 44 24 18          	mov    %eax,0x18(%esp)
    af2e:	e9 fd fd ff ff       	jmp    ad30 <alu_test_and+0x70>
    af33:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    af37:	90                   	nop
    af38:	83 ec 0c             	sub    $0xc,%esp
    af3b:	6a 00                	push   $0x0
    af3d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    af41:	89 fb                	mov    %edi,%ebx
    af43:	e8 e8 91 ff ff       	call   4130 <time@plt>
    af48:	89 04 24             	mov    %eax,(%esp)
    af4b:	e8 40 92 ff ff       	call   4190 <srand@plt>
    af50:	83 c4 10             	add    $0x10,%esp
    af53:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    af5a:	00 
    af5b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    af5f:	90                   	nop
    af60:	8b 74 24 0c          	mov    0xc(%esp),%esi
    af64:	89 f3                	mov    %esi,%ebx
    af66:	e8 85 92 ff ff       	call   41f0 <rand@plt>
    af6b:	89 74 24 0c          	mov    %esi,0xc(%esp)
    af6f:	89 c7                	mov    %eax,%edi
    af71:	e8 7a 92 ff ff       	call   41f0 <rand@plt>
    af76:	83 ec 04             	sub    $0x4,%esp
    af79:	6a 20                	push   $0x20
    af7b:	89 c6                	mov    %eax,%esi
    af7d:	57                   	push   %edi
    af7e:	50                   	push   %eax
    af7f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    af83:	e8 e8 49 00 00       	call   f970 <alu_and>
    af88:	89 f1                	mov    %esi,%ecx
    af8a:	83 c4 10             	add    $0x10,%esp
    af8d:	89 c3                	mov    %eax,%ebx
    af8f:	89 f8                	mov    %edi,%eax
    af91:	21 c8                	and    %ecx,%eax
    af93:	9c                   	pushf  
    af94:	5a                   	pop    %edx
    af95:	39 c3                	cmp    %eax,%ebx
    af97:	0f 85 eb 01 00 00    	jne    b188 <alu_test_and+0x4c8>
    af9d:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    afa1:	89 d1                	mov    %edx,%ecx
    afa3:	83 e1 01             	and    $0x1,%ecx
    afa6:	89 c3                	mov    %eax,%ebx
    afa8:	83 e3 01             	and    $0x1,%ebx
    afab:	38 cb                	cmp    %cl,%bl
    afad:	0f 85 8e 03 00 00    	jne    b341 <alu_test_and+0x681>
    afb3:	89 c3                	mov    %eax,%ebx
    afb5:	89 d1                	mov    %edx,%ecx
    afb7:	c0 eb 02             	shr    $0x2,%bl
    afba:	c1 e9 02             	shr    $0x2,%ecx
    afbd:	83 e3 01             	and    $0x1,%ebx
    afc0:	83 e1 01             	and    $0x1,%ecx
    afc3:	38 cb                	cmp    %cl,%bl
    afc5:	0f 85 61 03 00 00    	jne    b32c <alu_test_and+0x66c>
    afcb:	89 c3                	mov    %eax,%ebx
    afcd:	89 d1                	mov    %edx,%ecx
    afcf:	c0 eb 07             	shr    $0x7,%bl
    afd2:	c0 e9 07             	shr    $0x7,%cl
    afd5:	38 cb                	cmp    %cl,%bl
    afd7:	0f 85 3a 03 00 00    	jne    b317 <alu_test_and+0x657>
    afdd:	89 d1                	mov    %edx,%ecx
    afdf:	c0 e8 06             	shr    $0x6,%al
    afe2:	c1 e9 06             	shr    $0x6,%ecx
    afe5:	83 e0 01             	and    $0x1,%eax
    afe8:	83 e1 01             	and    $0x1,%ecx
    afeb:	38 c8                	cmp    %cl,%al
    afed:	0f 85 0f 03 00 00    	jne    b302 <alu_test_and+0x642>
    aff3:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    aff7:	c1 ea 0b             	shr    $0xb,%edx
    affa:	83 e2 01             	and    $0x1,%edx
    affd:	c0 e8 03             	shr    $0x3,%al
    b000:	83 e0 01             	and    $0x1,%eax
    b003:	38 d0                	cmp    %dl,%al
    b005:	0f 85 e2 02 00 00    	jne    b2ed <alu_test_and+0x62d>
    b00b:	83 ec 04             	sub    $0x4,%esp
    b00e:	6a 10                	push   $0x10
    b010:	57                   	push   %edi
    b011:	56                   	push   %esi
    b012:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b016:	e8 55 49 00 00       	call   f970 <alu_and>
    b01b:	89 f1                	mov    %esi,%ecx
    b01d:	83 c4 10             	add    $0x10,%esp
    b020:	89 c3                	mov    %eax,%ebx
    b022:	89 f8                	mov    %edi,%eax
    b024:	66 21 c8             	and    %cx,%ax
    b027:	9c                   	pushf  
    b028:	5a                   	pop    %edx
    b029:	0f b7 c0             	movzwl %ax,%eax
    b02c:	39 c3                	cmp    %eax,%ebx
    b02e:	0f 85 a4 02 00 00    	jne    b2d8 <alu_test_and+0x618>
    b034:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b038:	89 d1                	mov    %edx,%ecx
    b03a:	83 e1 01             	and    $0x1,%ecx
    b03d:	89 c3                	mov    %eax,%ebx
    b03f:	83 e3 01             	and    $0x1,%ebx
    b042:	38 cb                	cmp    %cl,%bl
    b044:	0f 85 79 02 00 00    	jne    b2c3 <alu_test_and+0x603>
    b04a:	89 c3                	mov    %eax,%ebx
    b04c:	89 d1                	mov    %edx,%ecx
    b04e:	c0 eb 02             	shr    $0x2,%bl
    b051:	c1 e9 02             	shr    $0x2,%ecx
    b054:	83 e3 01             	and    $0x1,%ebx
    b057:	83 e1 01             	and    $0x1,%ecx
    b05a:	38 cb                	cmp    %cl,%bl
    b05c:	0f 85 4c 02 00 00    	jne    b2ae <alu_test_and+0x5ee>
    b062:	89 d1                	mov    %edx,%ecx
    b064:	c0 e8 07             	shr    $0x7,%al
    b067:	c0 e9 07             	shr    $0x7,%cl
    b06a:	38 c8                	cmp    %cl,%al
    b06c:	0f 85 27 02 00 00    	jne    b299 <alu_test_and+0x5d9>
    b072:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b076:	89 d1                	mov    %edx,%ecx
    b078:	c1 e9 06             	shr    $0x6,%ecx
    b07b:	c0 e8 06             	shr    $0x6,%al
    b07e:	83 e1 01             	and    $0x1,%ecx
    b081:	83 e0 01             	and    $0x1,%eax
    b084:	38 c8                	cmp    %cl,%al
    b086:	0f 85 f8 01 00 00    	jne    b284 <alu_test_and+0x5c4>
    b08c:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b090:	c1 ea 0b             	shr    $0xb,%edx
    b093:	83 e2 01             	and    $0x1,%edx
    b096:	c0 e8 03             	shr    $0x3,%al
    b099:	83 e0 01             	and    $0x1,%eax
    b09c:	38 d0                	cmp    %dl,%al
    b09e:	0f 85 cb 01 00 00    	jne    b26f <alu_test_and+0x5af>
    b0a4:	83 ec 04             	sub    $0x4,%esp
    b0a7:	6a 08                	push   $0x8
    b0a9:	57                   	push   %edi
    b0aa:	56                   	push   %esi
    b0ab:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b0af:	e8 bc 48 00 00       	call   f970 <alu_and>
    b0b4:	89 f1                	mov    %esi,%ecx
    b0b6:	83 c4 10             	add    $0x10,%esp
    b0b9:	89 c3                	mov    %eax,%ebx
    b0bb:	89 f8                	mov    %edi,%eax
    b0bd:	20 c8                	and    %cl,%al
    b0bf:	9c                   	pushf  
    b0c0:	5a                   	pop    %edx
    b0c1:	0f b6 c0             	movzbl %al,%eax
    b0c4:	39 c3                	cmp    %eax,%ebx
    b0c6:	0f 85 8e 01 00 00    	jne    b25a <alu_test_and+0x59a>
    b0cc:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b0d0:	89 d1                	mov    %edx,%ecx
    b0d2:	83 e1 01             	and    $0x1,%ecx
    b0d5:	89 c3                	mov    %eax,%ebx
    b0d7:	83 e3 01             	and    $0x1,%ebx
    b0da:	38 cb                	cmp    %cl,%bl
    b0dc:	0f 85 55 01 00 00    	jne    b237 <alu_test_and+0x577>
    b0e2:	89 c3                	mov    %eax,%ebx
    b0e4:	89 d1                	mov    %edx,%ecx
    b0e6:	c0 eb 02             	shr    $0x2,%bl
    b0e9:	c1 e9 02             	shr    $0x2,%ecx
    b0ec:	83 e3 01             	and    $0x1,%ebx
    b0ef:	83 e1 01             	and    $0x1,%ecx
    b0f2:	38 cb                	cmp    %cl,%bl
    b0f4:	0f 85 1a 01 00 00    	jne    b214 <alu_test_and+0x554>
    b0fa:	89 c3                	mov    %eax,%ebx
    b0fc:	89 d1                	mov    %edx,%ecx
    b0fe:	c0 eb 07             	shr    $0x7,%bl
    b101:	c0 e9 07             	shr    $0x7,%cl
    b104:	38 cb                	cmp    %cl,%bl
    b106:	0f 85 e5 00 00 00    	jne    b1f1 <alu_test_and+0x531>
    b10c:	89 d1                	mov    %edx,%ecx
    b10e:	c0 e8 06             	shr    $0x6,%al
    b111:	c1 e9 06             	shr    $0x6,%ecx
    b114:	83 e0 01             	and    $0x1,%eax
    b117:	83 e1 01             	and    $0x1,%ecx
    b11a:	38 c8                	cmp    %cl,%al
    b11c:	0f 85 ac 00 00 00    	jne    b1ce <alu_test_and+0x50e>
    b122:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b126:	c1 ea 0b             	shr    $0xb,%edx
    b129:	83 e2 01             	and    $0x1,%edx
    b12c:	c0 e8 03             	shr    $0x3,%al
    b12f:	83 e0 01             	and    $0x1,%eax
    b132:	38 d0                	cmp    %dl,%al
    b134:	75 75                	jne    b1ab <alu_test_and+0x4eb>
    b136:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    b13b:	0f 85 1f fe ff ff    	jne    af60 <alu_test_and+0x2a0>
    b141:	83 ec 0c             	sub    $0xc,%esp
    b144:	8b 7c 24 18          	mov    0x18(%esp),%edi
    b148:	8d 87 7c 71 fe ff    	lea    -0x18e84(%edi),%eax
    b14e:	89 fb                	mov    %edi,%ebx
    b150:	50                   	push   %eax
    b151:	e8 5a 91 ff ff       	call   42b0 <puts@plt>
    b156:	e8 a5 f6 01 00       	call   2a800 <get_ref>
    b15b:	83 c4 10             	add    $0x10,%esp
    b15e:	85 c0                	test   %eax,%eax
    b160:	75 08                	jne    b16a <alu_test_and+0x4aa>
    b162:	83 c4 4c             	add    $0x4c,%esp
    b165:	5b                   	pop    %ebx
    b166:	5e                   	pop    %esi
    b167:	5f                   	pop    %edi
    b168:	5d                   	pop    %ebp
    b169:	c3                   	ret    
    b16a:	83 ec 0c             	sub    $0xc,%esp
    b16d:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    b171:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    b177:	50                   	push   %eax
    b178:	e8 33 91 ff ff       	call   42b0 <puts@plt>
    b17d:	83 c4 10             	add    $0x10,%esp
    b180:	83 c4 4c             	add    $0x4c,%esp
    b183:	5b                   	pop    %ebx
    b184:	5e                   	pop    %esi
    b185:	5f                   	pop    %edi
    b186:	5d                   	pop    %ebp
    b187:	c3                   	ret    
    b188:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b18c:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b192:	50                   	push   %eax
    b193:	68 09 01 00 00       	push   $0x109
    b198:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b19e:	50                   	push   %eax
    b19f:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    b1a5:	50                   	push   %eax
    b1a6:	e8 65 91 ff ff       	call   4310 <__assert_fail@plt>
    b1ab:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b1af:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b1b5:	50                   	push   %eax
    b1b6:	68 0b 01 00 00       	push   $0x10b
    b1bb:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b1c1:	50                   	push   %eax
    b1c2:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    b1c8:	50                   	push   %eax
    b1c9:	e8 42 91 ff ff       	call   4310 <__assert_fail@plt>
    b1ce:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b1d2:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b1d8:	50                   	push   %eax
    b1d9:	68 0b 01 00 00       	push   $0x10b
    b1de:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b1e4:	50                   	push   %eax
    b1e5:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    b1eb:	50                   	push   %eax
    b1ec:	e8 1f 91 ff ff       	call   4310 <__assert_fail@plt>
    b1f1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b1f5:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b1fb:	50                   	push   %eax
    b1fc:	68 0b 01 00 00       	push   $0x10b
    b201:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b207:	50                   	push   %eax
    b208:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    b20e:	50                   	push   %eax
    b20f:	e8 fc 90 ff ff       	call   4310 <__assert_fail@plt>
    b214:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b218:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b21e:	50                   	push   %eax
    b21f:	68 0b 01 00 00       	push   $0x10b
    b224:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b22a:	50                   	push   %eax
    b22b:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    b231:	50                   	push   %eax
    b232:	e8 d9 90 ff ff       	call   4310 <__assert_fail@plt>
    b237:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b23b:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b241:	50                   	push   %eax
    b242:	68 0b 01 00 00       	push   $0x10b
    b247:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b24d:	50                   	push   %eax
    b24e:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    b254:	50                   	push   %eax
    b255:	e8 b6 90 ff ff       	call   4310 <__assert_fail@plt>
    b25a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b25e:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b264:	50                   	push   %eax
    b265:	68 0b 01 00 00       	push   $0x10b
    b26a:	e9 29 ff ff ff       	jmp    b198 <alu_test_and+0x4d8>
    b26f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b273:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b279:	50                   	push   %eax
    b27a:	68 0a 01 00 00       	push   $0x10a
    b27f:	e9 37 ff ff ff       	jmp    b1bb <alu_test_and+0x4fb>
    b284:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b288:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b28e:	50                   	push   %eax
    b28f:	68 0a 01 00 00       	push   $0x10a
    b294:	e9 45 ff ff ff       	jmp    b1de <alu_test_and+0x51e>
    b299:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b29d:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b2a3:	50                   	push   %eax
    b2a4:	68 0a 01 00 00       	push   $0x10a
    b2a9:	e9 53 ff ff ff       	jmp    b201 <alu_test_and+0x541>
    b2ae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b2b2:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b2b8:	50                   	push   %eax
    b2b9:	68 0a 01 00 00       	push   $0x10a
    b2be:	e9 61 ff ff ff       	jmp    b224 <alu_test_and+0x564>
    b2c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b2c7:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b2cd:	50                   	push   %eax
    b2ce:	68 0a 01 00 00       	push   $0x10a
    b2d3:	e9 6f ff ff ff       	jmp    b247 <alu_test_and+0x587>
    b2d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b2dc:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b2e2:	50                   	push   %eax
    b2e3:	68 0a 01 00 00       	push   $0x10a
    b2e8:	e9 ab fe ff ff       	jmp    b198 <alu_test_and+0x4d8>
    b2ed:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b2f1:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b2f7:	50                   	push   %eax
    b2f8:	68 09 01 00 00       	push   $0x109
    b2fd:	e9 b9 fe ff ff       	jmp    b1bb <alu_test_and+0x4fb>
    b302:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b306:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b30c:	50                   	push   %eax
    b30d:	68 09 01 00 00       	push   $0x109
    b312:	e9 c7 fe ff ff       	jmp    b1de <alu_test_and+0x51e>
    b317:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b31b:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b321:	50                   	push   %eax
    b322:	68 09 01 00 00       	push   $0x109
    b327:	e9 d5 fe ff ff       	jmp    b201 <alu_test_and+0x541>
    b32c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b330:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b336:	50                   	push   %eax
    b337:	68 09 01 00 00       	push   $0x109
    b33c:	e9 e3 fe ff ff       	jmp    b224 <alu_test_and+0x564>
    b341:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b345:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b34b:	50                   	push   %eax
    b34c:	68 09 01 00 00       	push   $0x109
    b351:	e9 f1 fe ff ff       	jmp    b247 <alu_test_and+0x587>
    b356:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b35a:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b360:	50                   	push   %eax
    b361:	68 00 01 00 00       	push   $0x100
    b366:	e9 73 fe ff ff       	jmp    b1de <alu_test_and+0x51e>
    b36b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b36f:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b375:	50                   	push   %eax
    b376:	68 00 01 00 00       	push   $0x100
    b37b:	e9 81 fe ff ff       	jmp    b201 <alu_test_and+0x541>
    b380:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b384:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b38a:	50                   	push   %eax
    b38b:	68 00 01 00 00       	push   $0x100
    b390:	e9 26 fe ff ff       	jmp    b1bb <alu_test_and+0x4fb>
    b395:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b399:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b39f:	50                   	push   %eax
    b3a0:	68 01 01 00 00       	push   $0x101
    b3a5:	e9 34 fe ff ff       	jmp    b1de <alu_test_and+0x51e>
    b3aa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b3ae:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b3b4:	50                   	push   %eax
    b3b5:	68 ff 00 00 00       	push   $0xff
    b3ba:	e9 d9 fd ff ff       	jmp    b198 <alu_test_and+0x4d8>
    b3bf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b3c3:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b3c9:	50                   	push   %eax
    b3ca:	68 01 01 00 00       	push   $0x101
    b3cf:	e9 e7 fd ff ff       	jmp    b1bb <alu_test_and+0x4fb>
    b3d4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b3d8:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b3de:	50                   	push   %eax
    b3df:	68 01 01 00 00       	push   $0x101
    b3e4:	e9 af fd ff ff       	jmp    b198 <alu_test_and+0x4d8>
    b3e9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b3ed:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b3f3:	50                   	push   %eax
    b3f4:	68 ff 00 00 00       	push   $0xff
    b3f9:	e9 03 fe ff ff       	jmp    b201 <alu_test_and+0x541>
    b3fe:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b402:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b408:	50                   	push   %eax
    b409:	68 ff 00 00 00       	push   $0xff
    b40e:	e9 11 fe ff ff       	jmp    b224 <alu_test_and+0x564>
    b413:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b417:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b41d:	50                   	push   %eax
    b41e:	68 ff 00 00 00       	push   $0xff
    b423:	e9 1f fe ff ff       	jmp    b247 <alu_test_and+0x587>
    b428:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b42c:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b432:	50                   	push   %eax
    b433:	68 00 01 00 00       	push   $0x100
    b438:	e9 e7 fd ff ff       	jmp    b224 <alu_test_and+0x564>
    b43d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b441:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b447:	50                   	push   %eax
    b448:	68 00 01 00 00       	push   $0x100
    b44d:	e9 f5 fd ff ff       	jmp    b247 <alu_test_and+0x587>
    b452:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b456:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b45c:	50                   	push   %eax
    b45d:	68 00 01 00 00       	push   $0x100
    b462:	e9 31 fd ff ff       	jmp    b198 <alu_test_and+0x4d8>
    b467:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b46b:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b471:	50                   	push   %eax
    b472:	68 ff 00 00 00       	push   $0xff
    b477:	e9 3f fd ff ff       	jmp    b1bb <alu_test_and+0x4fb>
    b47c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b480:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b486:	50                   	push   %eax
    b487:	68 ff 00 00 00       	push   $0xff
    b48c:	e9 4d fd ff ff       	jmp    b1de <alu_test_and+0x51e>
    b491:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b495:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b49b:	50                   	push   %eax
    b49c:	68 01 01 00 00       	push   $0x101
    b4a1:	e9 5b fd ff ff       	jmp    b201 <alu_test_and+0x541>
    b4a6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b4aa:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b4b0:	50                   	push   %eax
    b4b1:	68 01 01 00 00       	push   $0x101
    b4b6:	e9 69 fd ff ff       	jmp    b224 <alu_test_and+0x564>
    b4bb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b4bf:	8d 83 0c 60 fe ff    	lea    -0x19ff4(%ebx),%eax
    b4c5:	50                   	push   %eax
    b4c6:	68 01 01 00 00       	push   $0x101
    b4cb:	e9 77 fd ff ff       	jmp    b247 <alu_test_and+0x587>

0000b4d0 <alu_test_or>:
    b4d0:	e8 02 ae ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    b4d5:	05 2b 3b 04 00       	add    $0x43b2b,%eax
    b4da:	55                   	push   %ebp
    b4db:	57                   	push   %edi
    b4dc:	56                   	push   %esi
    b4dd:	53                   	push   %ebx
    b4de:	83 ec 4c             	sub    $0x4c,%esp
    b4e1:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
    b4e7:	8d 74 24 40          	lea    0x40(%esp),%esi
    b4eb:	89 44 24 0c          	mov    %eax,0xc(%esp)
    b4ef:	8d 7c 24 28          	lea    0x28(%esp),%edi
    b4f3:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    b4fa:	10 
    b4fb:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    b502:	ff 
    b503:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    b50a:	ff 
    b50b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    b512:	ff 
    b513:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    b51a:	00 
    b51b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    b522:	00 
    b523:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    b52a:	00 
    b52b:	89 74 24 14          	mov    %esi,0x14(%esp)
    b52f:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    b533:	89 7c 24 18          	mov    %edi,0x18(%esp)
    b537:	bf 00 00 00 10       	mov    $0x10000000,%edi
    b53c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b540:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    b544:	be 00 00 00 10       	mov    $0x10000000,%esi
    b549:	89 44 24 10          	mov    %eax,0x10(%esp)
    b54d:	eb 0e                	jmp    b55d <alu_test_or+0x8d>
    b54f:	90                   	nop
    b550:	8b 44 24 10          	mov    0x10(%esp),%eax
    b554:	8b 30                	mov    (%eax),%esi
    b556:	83 c0 04             	add    $0x4,%eax
    b559:	89 44 24 10          	mov    %eax,0x10(%esp)
    b55d:	83 ec 04             	sub    $0x4,%esp
    b560:	6a 20                	push   $0x20
    b562:	57                   	push   %edi
    b563:	56                   	push   %esi
    b564:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b568:	e8 a3 45 00 00       	call   fb10 <alu_or>
    b56d:	89 f1                	mov    %esi,%ecx
    b56f:	83 c4 10             	add    $0x10,%esp
    b572:	89 c3                	mov    %eax,%ebx
    b574:	89 f8                	mov    %edi,%eax
    b576:	09 c8                	or     %ecx,%eax
    b578:	9c                   	pushf  
    b579:	5a                   	pop    %edx
    b57a:	39 c3                	cmp    %eax,%ebx
    b57c:	0f 85 38 06 00 00    	jne    bbba <alu_test_or+0x6ea>
    b582:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b586:	89 d1                	mov    %edx,%ecx
    b588:	83 e1 01             	and    $0x1,%ecx
    b58b:	89 c3                	mov    %eax,%ebx
    b58d:	83 e3 01             	and    $0x1,%ebx
    b590:	38 cb                	cmp    %cl,%bl
    b592:	0f 85 8b 06 00 00    	jne    bc23 <alu_test_or+0x753>
    b598:	89 c3                	mov    %eax,%ebx
    b59a:	89 d1                	mov    %edx,%ecx
    b59c:	c0 eb 02             	shr    $0x2,%bl
    b59f:	c1 e9 02             	shr    $0x2,%ecx
    b5a2:	83 e3 01             	and    $0x1,%ebx
    b5a5:	83 e1 01             	and    $0x1,%ecx
    b5a8:	38 cb                	cmp    %cl,%bl
    b5aa:	0f 85 5e 06 00 00    	jne    bc0e <alu_test_or+0x73e>
    b5b0:	89 c3                	mov    %eax,%ebx
    b5b2:	89 d1                	mov    %edx,%ecx
    b5b4:	c0 eb 07             	shr    $0x7,%bl
    b5b7:	c0 e9 07             	shr    $0x7,%cl
    b5ba:	38 cb                	cmp    %cl,%bl
    b5bc:	0f 85 37 06 00 00    	jne    bbf9 <alu_test_or+0x729>
    b5c2:	89 d1                	mov    %edx,%ecx
    b5c4:	c0 e8 06             	shr    $0x6,%al
    b5c7:	c1 e9 06             	shr    $0x6,%ecx
    b5ca:	83 e0 01             	and    $0x1,%eax
    b5cd:	83 e1 01             	and    $0x1,%ecx
    b5d0:	38 c8                	cmp    %cl,%al
    b5d2:	0f 85 b4 06 00 00    	jne    bc8c <alu_test_or+0x7bc>
    b5d8:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b5dc:	c1 ea 0b             	shr    $0xb,%edx
    b5df:	83 e2 01             	and    $0x1,%edx
    b5e2:	c0 e8 03             	shr    $0x3,%al
    b5e5:	83 e0 01             	and    $0x1,%eax
    b5e8:	38 d0                	cmp    %dl,%al
    b5ea:	0f 85 87 06 00 00    	jne    bc77 <alu_test_or+0x7a7>
    b5f0:	83 ec 04             	sub    $0x4,%esp
    b5f3:	6a 10                	push   $0x10
    b5f5:	57                   	push   %edi
    b5f6:	56                   	push   %esi
    b5f7:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b5fb:	e8 10 45 00 00       	call   fb10 <alu_or>
    b600:	89 f1                	mov    %esi,%ecx
    b602:	83 c4 10             	add    $0x10,%esp
    b605:	89 c3                	mov    %eax,%ebx
    b607:	89 f8                	mov    %edi,%eax
    b609:	66 09 c8             	or     %cx,%ax
    b60c:	9c                   	pushf  
    b60d:	5a                   	pop    %edx
    b60e:	0f b7 c0             	movzwl %ax,%eax
    b611:	39 c3                	cmp    %eax,%ebx
    b613:	0f 85 49 06 00 00    	jne    bc62 <alu_test_or+0x792>
    b619:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b61d:	89 d1                	mov    %edx,%ecx
    b61f:	83 e1 01             	and    $0x1,%ecx
    b622:	89 c3                	mov    %eax,%ebx
    b624:	83 e3 01             	and    $0x1,%ebx
    b627:	38 cb                	cmp    %cl,%bl
    b629:	0f 85 1e 06 00 00    	jne    bc4d <alu_test_or+0x77d>
    b62f:	89 c3                	mov    %eax,%ebx
    b631:	89 d1                	mov    %edx,%ecx
    b633:	c0 eb 02             	shr    $0x2,%bl
    b636:	c1 e9 02             	shr    $0x2,%ecx
    b639:	83 e3 01             	and    $0x1,%ebx
    b63c:	83 e1 01             	and    $0x1,%ecx
    b63f:	38 cb                	cmp    %cl,%bl
    b641:	0f 85 f1 05 00 00    	jne    bc38 <alu_test_or+0x768>
    b647:	89 d1                	mov    %edx,%ecx
    b649:	c0 e8 07             	shr    $0x7,%al
    b64c:	c0 e9 07             	shr    $0x7,%cl
    b64f:	38 c8                	cmp    %cl,%al
    b651:	0f 85 24 05 00 00    	jne    bb7b <alu_test_or+0x6ab>
    b657:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b65b:	89 d1                	mov    %edx,%ecx
    b65d:	c1 e9 06             	shr    $0x6,%ecx
    b660:	c0 e8 06             	shr    $0x6,%al
    b663:	83 e1 01             	and    $0x1,%ecx
    b666:	83 e0 01             	and    $0x1,%eax
    b669:	38 c8                	cmp    %cl,%al
    b66b:	0f 85 f5 04 00 00    	jne    bb66 <alu_test_or+0x696>
    b671:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b675:	c1 ea 0b             	shr    $0xb,%edx
    b678:	83 e2 01             	and    $0x1,%edx
    b67b:	c0 e8 03             	shr    $0x3,%al
    b67e:	83 e0 01             	and    $0x1,%eax
    b681:	38 d0                	cmp    %dl,%al
    b683:	0f 85 07 05 00 00    	jne    bb90 <alu_test_or+0x6c0>
    b689:	83 ec 04             	sub    $0x4,%esp
    b68c:	6a 08                	push   $0x8
    b68e:	57                   	push   %edi
    b68f:	56                   	push   %esi
    b690:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b694:	e8 77 44 00 00       	call   fb10 <alu_or>
    b699:	89 f1                	mov    %esi,%ecx
    b69b:	83 c4 10             	add    $0x10,%esp
    b69e:	89 c3                	mov    %eax,%ebx
    b6a0:	89 f8                	mov    %edi,%eax
    b6a2:	08 c8                	or     %cl,%al
    b6a4:	9c                   	pushf  
    b6a5:	5a                   	pop    %edx
    b6a6:	0f b6 c0             	movzbl %al,%eax
    b6a9:	39 c3                	cmp    %eax,%ebx
    b6ab:	0f 85 33 05 00 00    	jne    bbe4 <alu_test_or+0x714>
    b6b1:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b6b5:	89 d1                	mov    %edx,%ecx
    b6b7:	83 e1 01             	and    $0x1,%ecx
    b6ba:	89 c3                	mov    %eax,%ebx
    b6bc:	83 e3 01             	and    $0x1,%ebx
    b6bf:	38 cb                	cmp    %cl,%bl
    b6c1:	0f 85 04 06 00 00    	jne    bccb <alu_test_or+0x7fb>
    b6c7:	89 c3                	mov    %eax,%ebx
    b6c9:	89 d1                	mov    %edx,%ecx
    b6cb:	c0 eb 02             	shr    $0x2,%bl
    b6ce:	c1 e9 02             	shr    $0x2,%ecx
    b6d1:	83 e3 01             	and    $0x1,%ebx
    b6d4:	83 e1 01             	and    $0x1,%ecx
    b6d7:	38 cb                	cmp    %cl,%bl
    b6d9:	0f 85 d7 05 00 00    	jne    bcb6 <alu_test_or+0x7e6>
    b6df:	89 c3                	mov    %eax,%ebx
    b6e1:	89 d1                	mov    %edx,%ecx
    b6e3:	c0 eb 07             	shr    $0x7,%bl
    b6e6:	c0 e9 07             	shr    $0x7,%cl
    b6e9:	38 cb                	cmp    %cl,%bl
    b6eb:	0f 85 b0 05 00 00    	jne    bca1 <alu_test_or+0x7d1>
    b6f1:	89 d1                	mov    %edx,%ecx
    b6f3:	c0 e8 06             	shr    $0x6,%al
    b6f6:	c1 e9 06             	shr    $0x6,%ecx
    b6f9:	83 e0 01             	and    $0x1,%eax
    b6fc:	83 e1 01             	and    $0x1,%ecx
    b6ff:	38 c8                	cmp    %cl,%al
    b701:	0f 85 9e 04 00 00    	jne    bba5 <alu_test_or+0x6d5>
    b707:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b70b:	c1 ea 0b             	shr    $0xb,%edx
    b70e:	83 e2 01             	and    $0x1,%edx
    b711:	c0 e8 03             	shr    $0x3,%al
    b714:	83 e0 01             	and    $0x1,%eax
    b717:	38 d0                	cmp    %dl,%al
    b719:	0f 85 b0 04 00 00    	jne    bbcf <alu_test_or+0x6ff>
    b71f:	8b 74 24 14          	mov    0x14(%esp),%esi
    b723:	39 74 24 10          	cmp    %esi,0x10(%esp)
    b727:	0f 85 23 fe ff ff    	jne    b550 <alu_test_or+0x80>
    b72d:	8b 44 24 18          	mov    0x18(%esp),%eax
    b731:	39 f0                	cmp    %esi,%eax
    b733:	74 13                	je     b748 <alu_test_or+0x278>
    b735:	8b 38                	mov    (%eax),%edi
    b737:	83 c0 04             	add    $0x4,%eax
    b73a:	89 44 24 18          	mov    %eax,0x18(%esp)
    b73e:	e9 fd fd ff ff       	jmp    b540 <alu_test_or+0x70>
    b743:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b747:	90                   	nop
    b748:	83 ec 0c             	sub    $0xc,%esp
    b74b:	6a 00                	push   $0x0
    b74d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    b751:	89 fb                	mov    %edi,%ebx
    b753:	e8 d8 89 ff ff       	call   4130 <time@plt>
    b758:	89 04 24             	mov    %eax,(%esp)
    b75b:	e8 30 8a ff ff       	call   4190 <srand@plt>
    b760:	83 c4 10             	add    $0x10,%esp
    b763:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    b76a:	00 
    b76b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b76f:	90                   	nop
    b770:	8b 74 24 0c          	mov    0xc(%esp),%esi
    b774:	89 f3                	mov    %esi,%ebx
    b776:	e8 75 8a ff ff       	call   41f0 <rand@plt>
    b77b:	89 74 24 0c          	mov    %esi,0xc(%esp)
    b77f:	89 c7                	mov    %eax,%edi
    b781:	e8 6a 8a ff ff       	call   41f0 <rand@plt>
    b786:	83 ec 04             	sub    $0x4,%esp
    b789:	6a 20                	push   $0x20
    b78b:	89 c6                	mov    %eax,%esi
    b78d:	57                   	push   %edi
    b78e:	50                   	push   %eax
    b78f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b793:	e8 78 43 00 00       	call   fb10 <alu_or>
    b798:	89 f1                	mov    %esi,%ecx
    b79a:	83 c4 10             	add    $0x10,%esp
    b79d:	89 c3                	mov    %eax,%ebx
    b79f:	89 f8                	mov    %edi,%eax
    b7a1:	09 c8                	or     %ecx,%eax
    b7a3:	9c                   	pushf  
    b7a4:	5a                   	pop    %edx
    b7a5:	39 c3                	cmp    %eax,%ebx
    b7a7:	0f 85 eb 01 00 00    	jne    b998 <alu_test_or+0x4c8>
    b7ad:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b7b1:	89 d1                	mov    %edx,%ecx
    b7b3:	83 e1 01             	and    $0x1,%ecx
    b7b6:	89 c3                	mov    %eax,%ebx
    b7b8:	83 e3 01             	and    $0x1,%ebx
    b7bb:	38 cb                	cmp    %cl,%bl
    b7bd:	0f 85 8e 03 00 00    	jne    bb51 <alu_test_or+0x681>
    b7c3:	89 c3                	mov    %eax,%ebx
    b7c5:	89 d1                	mov    %edx,%ecx
    b7c7:	c0 eb 02             	shr    $0x2,%bl
    b7ca:	c1 e9 02             	shr    $0x2,%ecx
    b7cd:	83 e3 01             	and    $0x1,%ebx
    b7d0:	83 e1 01             	and    $0x1,%ecx
    b7d3:	38 cb                	cmp    %cl,%bl
    b7d5:	0f 85 61 03 00 00    	jne    bb3c <alu_test_or+0x66c>
    b7db:	89 c3                	mov    %eax,%ebx
    b7dd:	89 d1                	mov    %edx,%ecx
    b7df:	c0 eb 07             	shr    $0x7,%bl
    b7e2:	c0 e9 07             	shr    $0x7,%cl
    b7e5:	38 cb                	cmp    %cl,%bl
    b7e7:	0f 85 3a 03 00 00    	jne    bb27 <alu_test_or+0x657>
    b7ed:	89 d1                	mov    %edx,%ecx
    b7ef:	c0 e8 06             	shr    $0x6,%al
    b7f2:	c1 e9 06             	shr    $0x6,%ecx
    b7f5:	83 e0 01             	and    $0x1,%eax
    b7f8:	83 e1 01             	and    $0x1,%ecx
    b7fb:	38 c8                	cmp    %cl,%al
    b7fd:	0f 85 0f 03 00 00    	jne    bb12 <alu_test_or+0x642>
    b803:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b807:	c1 ea 0b             	shr    $0xb,%edx
    b80a:	83 e2 01             	and    $0x1,%edx
    b80d:	c0 e8 03             	shr    $0x3,%al
    b810:	83 e0 01             	and    $0x1,%eax
    b813:	38 d0                	cmp    %dl,%al
    b815:	0f 85 e2 02 00 00    	jne    bafd <alu_test_or+0x62d>
    b81b:	83 ec 04             	sub    $0x4,%esp
    b81e:	6a 10                	push   $0x10
    b820:	57                   	push   %edi
    b821:	56                   	push   %esi
    b822:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b826:	e8 e5 42 00 00       	call   fb10 <alu_or>
    b82b:	89 f1                	mov    %esi,%ecx
    b82d:	83 c4 10             	add    $0x10,%esp
    b830:	89 c3                	mov    %eax,%ebx
    b832:	89 f8                	mov    %edi,%eax
    b834:	66 09 c8             	or     %cx,%ax
    b837:	9c                   	pushf  
    b838:	5a                   	pop    %edx
    b839:	0f b7 c0             	movzwl %ax,%eax
    b83c:	39 c3                	cmp    %eax,%ebx
    b83e:	0f 85 a4 02 00 00    	jne    bae8 <alu_test_or+0x618>
    b844:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b848:	89 d1                	mov    %edx,%ecx
    b84a:	83 e1 01             	and    $0x1,%ecx
    b84d:	89 c3                	mov    %eax,%ebx
    b84f:	83 e3 01             	and    $0x1,%ebx
    b852:	38 cb                	cmp    %cl,%bl
    b854:	0f 85 79 02 00 00    	jne    bad3 <alu_test_or+0x603>
    b85a:	89 c3                	mov    %eax,%ebx
    b85c:	89 d1                	mov    %edx,%ecx
    b85e:	c0 eb 02             	shr    $0x2,%bl
    b861:	c1 e9 02             	shr    $0x2,%ecx
    b864:	83 e3 01             	and    $0x1,%ebx
    b867:	83 e1 01             	and    $0x1,%ecx
    b86a:	38 cb                	cmp    %cl,%bl
    b86c:	0f 85 4c 02 00 00    	jne    babe <alu_test_or+0x5ee>
    b872:	89 d1                	mov    %edx,%ecx
    b874:	c0 e8 07             	shr    $0x7,%al
    b877:	c0 e9 07             	shr    $0x7,%cl
    b87a:	38 c8                	cmp    %cl,%al
    b87c:	0f 85 27 02 00 00    	jne    baa9 <alu_test_or+0x5d9>
    b882:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b886:	89 d1                	mov    %edx,%ecx
    b888:	c1 e9 06             	shr    $0x6,%ecx
    b88b:	c0 e8 06             	shr    $0x6,%al
    b88e:	83 e1 01             	and    $0x1,%ecx
    b891:	83 e0 01             	and    $0x1,%eax
    b894:	38 c8                	cmp    %cl,%al
    b896:	0f 85 f8 01 00 00    	jne    ba94 <alu_test_or+0x5c4>
    b89c:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b8a0:	c1 ea 0b             	shr    $0xb,%edx
    b8a3:	83 e2 01             	and    $0x1,%edx
    b8a6:	c0 e8 03             	shr    $0x3,%al
    b8a9:	83 e0 01             	and    $0x1,%eax
    b8ac:	38 d0                	cmp    %dl,%al
    b8ae:	0f 85 cb 01 00 00    	jne    ba7f <alu_test_or+0x5af>
    b8b4:	83 ec 04             	sub    $0x4,%esp
    b8b7:	6a 08                	push   $0x8
    b8b9:	57                   	push   %edi
    b8ba:	56                   	push   %esi
    b8bb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    b8bf:	e8 4c 42 00 00       	call   fb10 <alu_or>
    b8c4:	89 f1                	mov    %esi,%ecx
    b8c6:	83 c4 10             	add    $0x10,%esp
    b8c9:	89 c3                	mov    %eax,%ebx
    b8cb:	89 f8                	mov    %edi,%eax
    b8cd:	08 c8                	or     %cl,%al
    b8cf:	9c                   	pushf  
    b8d0:	5a                   	pop    %edx
    b8d1:	0f b6 c0             	movzbl %al,%eax
    b8d4:	39 c3                	cmp    %eax,%ebx
    b8d6:	0f 85 8e 01 00 00    	jne    ba6a <alu_test_or+0x59a>
    b8dc:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    b8e0:	89 d1                	mov    %edx,%ecx
    b8e2:	83 e1 01             	and    $0x1,%ecx
    b8e5:	89 c3                	mov    %eax,%ebx
    b8e7:	83 e3 01             	and    $0x1,%ebx
    b8ea:	38 cb                	cmp    %cl,%bl
    b8ec:	0f 85 55 01 00 00    	jne    ba47 <alu_test_or+0x577>
    b8f2:	89 c3                	mov    %eax,%ebx
    b8f4:	89 d1                	mov    %edx,%ecx
    b8f6:	c0 eb 02             	shr    $0x2,%bl
    b8f9:	c1 e9 02             	shr    $0x2,%ecx
    b8fc:	83 e3 01             	and    $0x1,%ebx
    b8ff:	83 e1 01             	and    $0x1,%ecx
    b902:	38 cb                	cmp    %cl,%bl
    b904:	0f 85 1a 01 00 00    	jne    ba24 <alu_test_or+0x554>
    b90a:	89 c3                	mov    %eax,%ebx
    b90c:	89 d1                	mov    %edx,%ecx
    b90e:	c0 eb 07             	shr    $0x7,%bl
    b911:	c0 e9 07             	shr    $0x7,%cl
    b914:	38 cb                	cmp    %cl,%bl
    b916:	0f 85 e5 00 00 00    	jne    ba01 <alu_test_or+0x531>
    b91c:	89 d1                	mov    %edx,%ecx
    b91e:	c0 e8 06             	shr    $0x6,%al
    b921:	c1 e9 06             	shr    $0x6,%ecx
    b924:	83 e0 01             	and    $0x1,%eax
    b927:	83 e1 01             	and    $0x1,%ecx
    b92a:	38 c8                	cmp    %cl,%al
    b92c:	0f 85 ac 00 00 00    	jne    b9de <alu_test_or+0x50e>
    b932:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    b936:	c1 ea 0b             	shr    $0xb,%edx
    b939:	83 e2 01             	and    $0x1,%edx
    b93c:	c0 e8 03             	shr    $0x3,%al
    b93f:	83 e0 01             	and    $0x1,%eax
    b942:	38 d0                	cmp    %dl,%al
    b944:	75 75                	jne    b9bb <alu_test_or+0x4eb>
    b946:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    b94b:	0f 85 1f fe ff ff    	jne    b770 <alu_test_or+0x2a0>
    b951:	83 ec 0c             	sub    $0xc,%esp
    b954:	8b 7c 24 18          	mov    0x18(%esp),%edi
    b958:	8d 87 a4 71 fe ff    	lea    -0x18e5c(%edi),%eax
    b95e:	89 fb                	mov    %edi,%ebx
    b960:	50                   	push   %eax
    b961:	e8 4a 89 ff ff       	call   42b0 <puts@plt>
    b966:	e8 95 ee 01 00       	call   2a800 <get_ref>
    b96b:	83 c4 10             	add    $0x10,%esp
    b96e:	85 c0                	test   %eax,%eax
    b970:	75 08                	jne    b97a <alu_test_or+0x4aa>
    b972:	83 c4 4c             	add    $0x4c,%esp
    b975:	5b                   	pop    %ebx
    b976:	5e                   	pop    %esi
    b977:	5f                   	pop    %edi
    b978:	5d                   	pop    %ebp
    b979:	c3                   	ret    
    b97a:	83 ec 0c             	sub    $0xc,%esp
    b97d:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    b981:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    b987:	50                   	push   %eax
    b988:	e8 23 89 ff ff       	call   42b0 <puts@plt>
    b98d:	83 c4 10             	add    $0x10,%esp
    b990:	83 c4 4c             	add    $0x4c,%esp
    b993:	5b                   	pop    %ebx
    b994:	5e                   	pop    %esi
    b995:	5f                   	pop    %edi
    b996:	5d                   	pop    %ebp
    b997:	c3                   	ret    
    b998:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b99c:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    b9a2:	50                   	push   %eax
    b9a3:	68 26 01 00 00       	push   $0x126
    b9a8:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b9ae:	50                   	push   %eax
    b9af:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    b9b5:	50                   	push   %eax
    b9b6:	e8 55 89 ff ff       	call   4310 <__assert_fail@plt>
    b9bb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b9bf:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    b9c5:	50                   	push   %eax
    b9c6:	68 28 01 00 00       	push   $0x128
    b9cb:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b9d1:	50                   	push   %eax
    b9d2:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    b9d8:	50                   	push   %eax
    b9d9:	e8 32 89 ff ff       	call   4310 <__assert_fail@plt>
    b9de:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    b9e2:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    b9e8:	50                   	push   %eax
    b9e9:	68 28 01 00 00       	push   $0x128
    b9ee:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    b9f4:	50                   	push   %eax
    b9f5:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    b9fb:	50                   	push   %eax
    b9fc:	e8 0f 89 ff ff       	call   4310 <__assert_fail@plt>
    ba01:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ba05:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    ba0b:	50                   	push   %eax
    ba0c:	68 28 01 00 00       	push   $0x128
    ba11:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ba17:	50                   	push   %eax
    ba18:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    ba1e:	50                   	push   %eax
    ba1f:	e8 ec 88 ff ff       	call   4310 <__assert_fail@plt>
    ba24:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ba28:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    ba2e:	50                   	push   %eax
    ba2f:	68 28 01 00 00       	push   $0x128
    ba34:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ba3a:	50                   	push   %eax
    ba3b:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    ba41:	50                   	push   %eax
    ba42:	e8 c9 88 ff ff       	call   4310 <__assert_fail@plt>
    ba47:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ba4b:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    ba51:	50                   	push   %eax
    ba52:	68 28 01 00 00       	push   $0x128
    ba57:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ba5d:	50                   	push   %eax
    ba5e:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    ba64:	50                   	push   %eax
    ba65:	e8 a6 88 ff ff       	call   4310 <__assert_fail@plt>
    ba6a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ba6e:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    ba74:	50                   	push   %eax
    ba75:	68 28 01 00 00       	push   $0x128
    ba7a:	e9 29 ff ff ff       	jmp    b9a8 <alu_test_or+0x4d8>
    ba7f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ba83:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    ba89:	50                   	push   %eax
    ba8a:	68 27 01 00 00       	push   $0x127
    ba8f:	e9 37 ff ff ff       	jmp    b9cb <alu_test_or+0x4fb>
    ba94:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ba98:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    ba9e:	50                   	push   %eax
    ba9f:	68 27 01 00 00       	push   $0x127
    baa4:	e9 45 ff ff ff       	jmp    b9ee <alu_test_or+0x51e>
    baa9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    baad:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bab3:	50                   	push   %eax
    bab4:	68 27 01 00 00       	push   $0x127
    bab9:	e9 53 ff ff ff       	jmp    ba11 <alu_test_or+0x541>
    babe:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bac2:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bac8:	50                   	push   %eax
    bac9:	68 27 01 00 00       	push   $0x127
    bace:	e9 61 ff ff ff       	jmp    ba34 <alu_test_or+0x564>
    bad3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bad7:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    badd:	50                   	push   %eax
    bade:	68 27 01 00 00       	push   $0x127
    bae3:	e9 6f ff ff ff       	jmp    ba57 <alu_test_or+0x587>
    bae8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    baec:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    baf2:	50                   	push   %eax
    baf3:	68 27 01 00 00       	push   $0x127
    baf8:	e9 ab fe ff ff       	jmp    b9a8 <alu_test_or+0x4d8>
    bafd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb01:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb07:	50                   	push   %eax
    bb08:	68 26 01 00 00       	push   $0x126
    bb0d:	e9 b9 fe ff ff       	jmp    b9cb <alu_test_or+0x4fb>
    bb12:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb16:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb1c:	50                   	push   %eax
    bb1d:	68 26 01 00 00       	push   $0x126
    bb22:	e9 c7 fe ff ff       	jmp    b9ee <alu_test_or+0x51e>
    bb27:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb2b:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb31:	50                   	push   %eax
    bb32:	68 26 01 00 00       	push   $0x126
    bb37:	e9 d5 fe ff ff       	jmp    ba11 <alu_test_or+0x541>
    bb3c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb40:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb46:	50                   	push   %eax
    bb47:	68 26 01 00 00       	push   $0x126
    bb4c:	e9 e3 fe ff ff       	jmp    ba34 <alu_test_or+0x564>
    bb51:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb55:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb5b:	50                   	push   %eax
    bb5c:	68 26 01 00 00       	push   $0x126
    bb61:	e9 f1 fe ff ff       	jmp    ba57 <alu_test_or+0x587>
    bb66:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb6a:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb70:	50                   	push   %eax
    bb71:	68 1d 01 00 00       	push   $0x11d
    bb76:	e9 73 fe ff ff       	jmp    b9ee <alu_test_or+0x51e>
    bb7b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb7f:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb85:	50                   	push   %eax
    bb86:	68 1d 01 00 00       	push   $0x11d
    bb8b:	e9 81 fe ff ff       	jmp    ba11 <alu_test_or+0x541>
    bb90:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bb94:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bb9a:	50                   	push   %eax
    bb9b:	68 1d 01 00 00       	push   $0x11d
    bba0:	e9 26 fe ff ff       	jmp    b9cb <alu_test_or+0x4fb>
    bba5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bba9:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bbaf:	50                   	push   %eax
    bbb0:	68 1e 01 00 00       	push   $0x11e
    bbb5:	e9 34 fe ff ff       	jmp    b9ee <alu_test_or+0x51e>
    bbba:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bbbe:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bbc4:	50                   	push   %eax
    bbc5:	68 1c 01 00 00       	push   $0x11c
    bbca:	e9 d9 fd ff ff       	jmp    b9a8 <alu_test_or+0x4d8>
    bbcf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bbd3:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bbd9:	50                   	push   %eax
    bbda:	68 1e 01 00 00       	push   $0x11e
    bbdf:	e9 e7 fd ff ff       	jmp    b9cb <alu_test_or+0x4fb>
    bbe4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bbe8:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bbee:	50                   	push   %eax
    bbef:	68 1e 01 00 00       	push   $0x11e
    bbf4:	e9 af fd ff ff       	jmp    b9a8 <alu_test_or+0x4d8>
    bbf9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bbfd:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc03:	50                   	push   %eax
    bc04:	68 1c 01 00 00       	push   $0x11c
    bc09:	e9 03 fe ff ff       	jmp    ba11 <alu_test_or+0x541>
    bc0e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bc12:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc18:	50                   	push   %eax
    bc19:	68 1c 01 00 00       	push   $0x11c
    bc1e:	e9 11 fe ff ff       	jmp    ba34 <alu_test_or+0x564>
    bc23:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bc27:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc2d:	50                   	push   %eax
    bc2e:	68 1c 01 00 00       	push   $0x11c
    bc33:	e9 1f fe ff ff       	jmp    ba57 <alu_test_or+0x587>
    bc38:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bc3c:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc42:	50                   	push   %eax
    bc43:	68 1d 01 00 00       	push   $0x11d
    bc48:	e9 e7 fd ff ff       	jmp    ba34 <alu_test_or+0x564>
    bc4d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bc51:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc57:	50                   	push   %eax
    bc58:	68 1d 01 00 00       	push   $0x11d
    bc5d:	e9 f5 fd ff ff       	jmp    ba57 <alu_test_or+0x587>
    bc62:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bc66:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc6c:	50                   	push   %eax
    bc6d:	68 1d 01 00 00       	push   $0x11d
    bc72:	e9 31 fd ff ff       	jmp    b9a8 <alu_test_or+0x4d8>
    bc77:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bc7b:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc81:	50                   	push   %eax
    bc82:	68 1c 01 00 00       	push   $0x11c
    bc87:	e9 3f fd ff ff       	jmp    b9cb <alu_test_or+0x4fb>
    bc8c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bc90:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bc96:	50                   	push   %eax
    bc97:	68 1c 01 00 00       	push   $0x11c
    bc9c:	e9 4d fd ff ff       	jmp    b9ee <alu_test_or+0x51e>
    bca1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bca5:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bcab:	50                   	push   %eax
    bcac:	68 1e 01 00 00       	push   $0x11e
    bcb1:	e9 5b fd ff ff       	jmp    ba11 <alu_test_or+0x541>
    bcb6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bcba:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bcc0:	50                   	push   %eax
    bcc1:	68 1e 01 00 00       	push   $0x11e
    bcc6:	e9 69 fd ff ff       	jmp    ba34 <alu_test_or+0x564>
    bccb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    bccf:	8d 83 00 60 fe ff    	lea    -0x1a000(%ebx),%eax
    bcd5:	50                   	push   %eax
    bcd6:	68 1e 01 00 00       	push   $0x11e
    bcdb:	e9 77 fd ff ff       	jmp    ba57 <alu_test_or+0x587>

0000bce0 <alu_test_xor>:
    bce0:	e8 f2 a5 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    bce5:	05 1b 33 04 00       	add    $0x4331b,%eax
    bcea:	55                   	push   %ebp
    bceb:	57                   	push   %edi
    bcec:	56                   	push   %esi
    bced:	53                   	push   %ebx
    bcee:	83 ec 4c             	sub    $0x4c,%esp
    bcf1:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
    bcf7:	8d 74 24 40          	lea    0x40(%esp),%esi
    bcfb:	89 44 24 0c          	mov    %eax,0xc(%esp)
    bcff:	8d 7c 24 28          	lea    0x28(%esp),%edi
    bd03:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
    bd0a:	10 
    bd0b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    bd12:	ff 
    bd13:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    bd1a:	ff 
    bd1b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    bd22:	ff 
    bd23:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    bd2a:	00 
    bd2b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    bd32:	00 
    bd33:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    bd3a:	00 
    bd3b:	89 74 24 14          	mov    %esi,0x14(%esp)
    bd3f:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    bd43:	89 7c 24 18          	mov    %edi,0x18(%esp)
    bd47:	bf 00 00 00 10       	mov    $0x10000000,%edi
    bd4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bd50:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    bd54:	be 00 00 00 10       	mov    $0x10000000,%esi
    bd59:	89 44 24 10          	mov    %eax,0x10(%esp)
    bd5d:	eb 0e                	jmp    bd6d <alu_test_xor+0x8d>
    bd5f:	90                   	nop
    bd60:	8b 44 24 10          	mov    0x10(%esp),%eax
    bd64:	8b 30                	mov    (%eax),%esi
    bd66:	83 c0 04             	add    $0x4,%eax
    bd69:	89 44 24 10          	mov    %eax,0x10(%esp)
    bd6d:	83 ec 04             	sub    $0x4,%esp
    bd70:	6a 20                	push   $0x20
    bd72:	57                   	push   %edi
    bd73:	56                   	push   %esi
    bd74:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    bd78:	e8 c3 3c 00 00       	call   fa40 <alu_xor>
    bd7d:	89 f1                	mov    %esi,%ecx
    bd7f:	83 c4 10             	add    $0x10,%esp
    bd82:	89 c3                	mov    %eax,%ebx
    bd84:	89 f8                	mov    %edi,%eax
    bd86:	31 c8                	xor    %ecx,%eax
    bd88:	9c                   	pushf  
    bd89:	5a                   	pop    %edx
    bd8a:	39 c3                	cmp    %eax,%ebx
    bd8c:	0f 85 38 06 00 00    	jne    c3ca <alu_test_xor+0x6ea>
    bd92:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    bd96:	89 d1                	mov    %edx,%ecx
    bd98:	83 e1 01             	and    $0x1,%ecx
    bd9b:	89 c3                	mov    %eax,%ebx
    bd9d:	83 e3 01             	and    $0x1,%ebx
    bda0:	38 cb                	cmp    %cl,%bl
    bda2:	0f 85 8b 06 00 00    	jne    c433 <alu_test_xor+0x753>
    bda8:	89 c3                	mov    %eax,%ebx
    bdaa:	89 d1                	mov    %edx,%ecx
    bdac:	c0 eb 02             	shr    $0x2,%bl
    bdaf:	c1 e9 02             	shr    $0x2,%ecx
    bdb2:	83 e3 01             	and    $0x1,%ebx
    bdb5:	83 e1 01             	and    $0x1,%ecx
    bdb8:	38 cb                	cmp    %cl,%bl
    bdba:	0f 85 5e 06 00 00    	jne    c41e <alu_test_xor+0x73e>
    bdc0:	89 c3                	mov    %eax,%ebx
    bdc2:	89 d1                	mov    %edx,%ecx
    bdc4:	c0 eb 07             	shr    $0x7,%bl
    bdc7:	c0 e9 07             	shr    $0x7,%cl
    bdca:	38 cb                	cmp    %cl,%bl
    bdcc:	0f 85 37 06 00 00    	jne    c409 <alu_test_xor+0x729>
    bdd2:	89 d1                	mov    %edx,%ecx
    bdd4:	c0 e8 06             	shr    $0x6,%al
    bdd7:	c1 e9 06             	shr    $0x6,%ecx
    bdda:	83 e0 01             	and    $0x1,%eax
    bddd:	83 e1 01             	and    $0x1,%ecx
    bde0:	38 c8                	cmp    %cl,%al
    bde2:	0f 85 b4 06 00 00    	jne    c49c <alu_test_xor+0x7bc>
    bde8:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    bdec:	c1 ea 0b             	shr    $0xb,%edx
    bdef:	83 e2 01             	and    $0x1,%edx
    bdf2:	c0 e8 03             	shr    $0x3,%al
    bdf5:	83 e0 01             	and    $0x1,%eax
    bdf8:	38 d0                	cmp    %dl,%al
    bdfa:	0f 85 87 06 00 00    	jne    c487 <alu_test_xor+0x7a7>
    be00:	83 ec 04             	sub    $0x4,%esp
    be03:	6a 10                	push   $0x10
    be05:	57                   	push   %edi
    be06:	56                   	push   %esi
    be07:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    be0b:	e8 30 3c 00 00       	call   fa40 <alu_xor>
    be10:	89 f1                	mov    %esi,%ecx
    be12:	83 c4 10             	add    $0x10,%esp
    be15:	89 c3                	mov    %eax,%ebx
    be17:	89 f8                	mov    %edi,%eax
    be19:	66 31 c8             	xor    %cx,%ax
    be1c:	9c                   	pushf  
    be1d:	5a                   	pop    %edx
    be1e:	0f b7 c0             	movzwl %ax,%eax
    be21:	39 c3                	cmp    %eax,%ebx
    be23:	0f 85 49 06 00 00    	jne    c472 <alu_test_xor+0x792>
    be29:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    be2d:	89 d1                	mov    %edx,%ecx
    be2f:	83 e1 01             	and    $0x1,%ecx
    be32:	89 c3                	mov    %eax,%ebx
    be34:	83 e3 01             	and    $0x1,%ebx
    be37:	38 cb                	cmp    %cl,%bl
    be39:	0f 85 1e 06 00 00    	jne    c45d <alu_test_xor+0x77d>
    be3f:	89 c3                	mov    %eax,%ebx
    be41:	89 d1                	mov    %edx,%ecx
    be43:	c0 eb 02             	shr    $0x2,%bl
    be46:	c1 e9 02             	shr    $0x2,%ecx
    be49:	83 e3 01             	and    $0x1,%ebx
    be4c:	83 e1 01             	and    $0x1,%ecx
    be4f:	38 cb                	cmp    %cl,%bl
    be51:	0f 85 f1 05 00 00    	jne    c448 <alu_test_xor+0x768>
    be57:	89 d1                	mov    %edx,%ecx
    be59:	c0 e8 07             	shr    $0x7,%al
    be5c:	c0 e9 07             	shr    $0x7,%cl
    be5f:	38 c8                	cmp    %cl,%al
    be61:	0f 85 24 05 00 00    	jne    c38b <alu_test_xor+0x6ab>
    be67:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    be6b:	89 d1                	mov    %edx,%ecx
    be6d:	c1 e9 06             	shr    $0x6,%ecx
    be70:	c0 e8 06             	shr    $0x6,%al
    be73:	83 e1 01             	and    $0x1,%ecx
    be76:	83 e0 01             	and    $0x1,%eax
    be79:	38 c8                	cmp    %cl,%al
    be7b:	0f 85 f5 04 00 00    	jne    c376 <alu_test_xor+0x696>
    be81:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    be85:	c1 ea 0b             	shr    $0xb,%edx
    be88:	83 e2 01             	and    $0x1,%edx
    be8b:	c0 e8 03             	shr    $0x3,%al
    be8e:	83 e0 01             	and    $0x1,%eax
    be91:	38 d0                	cmp    %dl,%al
    be93:	0f 85 07 05 00 00    	jne    c3a0 <alu_test_xor+0x6c0>
    be99:	83 ec 04             	sub    $0x4,%esp
    be9c:	6a 08                	push   $0x8
    be9e:	57                   	push   %edi
    be9f:	56                   	push   %esi
    bea0:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    bea4:	e8 97 3b 00 00       	call   fa40 <alu_xor>
    bea9:	89 f1                	mov    %esi,%ecx
    beab:	83 c4 10             	add    $0x10,%esp
    beae:	89 c3                	mov    %eax,%ebx
    beb0:	89 f8                	mov    %edi,%eax
    beb2:	30 c8                	xor    %cl,%al
    beb4:	9c                   	pushf  
    beb5:	5a                   	pop    %edx
    beb6:	0f b6 c0             	movzbl %al,%eax
    beb9:	39 c3                	cmp    %eax,%ebx
    bebb:	0f 85 33 05 00 00    	jne    c3f4 <alu_test_xor+0x714>
    bec1:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    bec5:	89 d1                	mov    %edx,%ecx
    bec7:	83 e1 01             	and    $0x1,%ecx
    beca:	89 c3                	mov    %eax,%ebx
    becc:	83 e3 01             	and    $0x1,%ebx
    becf:	38 cb                	cmp    %cl,%bl
    bed1:	0f 85 04 06 00 00    	jne    c4db <alu_test_xor+0x7fb>
    bed7:	89 c3                	mov    %eax,%ebx
    bed9:	89 d1                	mov    %edx,%ecx
    bedb:	c0 eb 02             	shr    $0x2,%bl
    bede:	c1 e9 02             	shr    $0x2,%ecx
    bee1:	83 e3 01             	and    $0x1,%ebx
    bee4:	83 e1 01             	and    $0x1,%ecx
    bee7:	38 cb                	cmp    %cl,%bl
    bee9:	0f 85 d7 05 00 00    	jne    c4c6 <alu_test_xor+0x7e6>
    beef:	89 c3                	mov    %eax,%ebx
    bef1:	89 d1                	mov    %edx,%ecx
    bef3:	c0 eb 07             	shr    $0x7,%bl
    bef6:	c0 e9 07             	shr    $0x7,%cl
    bef9:	38 cb                	cmp    %cl,%bl
    befb:	0f 85 b0 05 00 00    	jne    c4b1 <alu_test_xor+0x7d1>
    bf01:	89 d1                	mov    %edx,%ecx
    bf03:	c0 e8 06             	shr    $0x6,%al
    bf06:	c1 e9 06             	shr    $0x6,%ecx
    bf09:	83 e0 01             	and    $0x1,%eax
    bf0c:	83 e1 01             	and    $0x1,%ecx
    bf0f:	38 c8                	cmp    %cl,%al
    bf11:	0f 85 9e 04 00 00    	jne    c3b5 <alu_test_xor+0x6d5>
    bf17:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    bf1b:	c1 ea 0b             	shr    $0xb,%edx
    bf1e:	83 e2 01             	and    $0x1,%edx
    bf21:	c0 e8 03             	shr    $0x3,%al
    bf24:	83 e0 01             	and    $0x1,%eax
    bf27:	38 d0                	cmp    %dl,%al
    bf29:	0f 85 b0 04 00 00    	jne    c3df <alu_test_xor+0x6ff>
    bf2f:	8b 74 24 14          	mov    0x14(%esp),%esi
    bf33:	39 74 24 10          	cmp    %esi,0x10(%esp)
    bf37:	0f 85 23 fe ff ff    	jne    bd60 <alu_test_xor+0x80>
    bf3d:	8b 44 24 18          	mov    0x18(%esp),%eax
    bf41:	39 f0                	cmp    %esi,%eax
    bf43:	74 13                	je     bf58 <alu_test_xor+0x278>
    bf45:	8b 38                	mov    (%eax),%edi
    bf47:	83 c0 04             	add    $0x4,%eax
    bf4a:	89 44 24 18          	mov    %eax,0x18(%esp)
    bf4e:	e9 fd fd ff ff       	jmp    bd50 <alu_test_xor+0x70>
    bf53:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bf57:	90                   	nop
    bf58:	83 ec 0c             	sub    $0xc,%esp
    bf5b:	6a 00                	push   $0x0
    bf5d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    bf61:	89 fb                	mov    %edi,%ebx
    bf63:	e8 c8 81 ff ff       	call   4130 <time@plt>
    bf68:	89 04 24             	mov    %eax,(%esp)
    bf6b:	e8 20 82 ff ff       	call   4190 <srand@plt>
    bf70:	83 c4 10             	add    $0x10,%esp
    bf73:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    bf7a:	00 
    bf7b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bf7f:	90                   	nop
    bf80:	8b 74 24 0c          	mov    0xc(%esp),%esi
    bf84:	89 f3                	mov    %esi,%ebx
    bf86:	e8 65 82 ff ff       	call   41f0 <rand@plt>
    bf8b:	89 74 24 0c          	mov    %esi,0xc(%esp)
    bf8f:	89 c7                	mov    %eax,%edi
    bf91:	e8 5a 82 ff ff       	call   41f0 <rand@plt>
    bf96:	83 ec 04             	sub    $0x4,%esp
    bf99:	6a 20                	push   $0x20
    bf9b:	89 c6                	mov    %eax,%esi
    bf9d:	57                   	push   %edi
    bf9e:	50                   	push   %eax
    bf9f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    bfa3:	e8 98 3a 00 00       	call   fa40 <alu_xor>
    bfa8:	89 f1                	mov    %esi,%ecx
    bfaa:	83 c4 10             	add    $0x10,%esp
    bfad:	89 c3                	mov    %eax,%ebx
    bfaf:	89 f8                	mov    %edi,%eax
    bfb1:	31 c8                	xor    %ecx,%eax
    bfb3:	9c                   	pushf  
    bfb4:	5a                   	pop    %edx
    bfb5:	39 c3                	cmp    %eax,%ebx
    bfb7:	0f 85 eb 01 00 00    	jne    c1a8 <alu_test_xor+0x4c8>
    bfbd:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    bfc1:	89 d1                	mov    %edx,%ecx
    bfc3:	83 e1 01             	and    $0x1,%ecx
    bfc6:	89 c3                	mov    %eax,%ebx
    bfc8:	83 e3 01             	and    $0x1,%ebx
    bfcb:	38 cb                	cmp    %cl,%bl
    bfcd:	0f 85 8e 03 00 00    	jne    c361 <alu_test_xor+0x681>
    bfd3:	89 c3                	mov    %eax,%ebx
    bfd5:	89 d1                	mov    %edx,%ecx
    bfd7:	c0 eb 02             	shr    $0x2,%bl
    bfda:	c1 e9 02             	shr    $0x2,%ecx
    bfdd:	83 e3 01             	and    $0x1,%ebx
    bfe0:	83 e1 01             	and    $0x1,%ecx
    bfe3:	38 cb                	cmp    %cl,%bl
    bfe5:	0f 85 61 03 00 00    	jne    c34c <alu_test_xor+0x66c>
    bfeb:	89 c3                	mov    %eax,%ebx
    bfed:	89 d1                	mov    %edx,%ecx
    bfef:	c0 eb 07             	shr    $0x7,%bl
    bff2:	c0 e9 07             	shr    $0x7,%cl
    bff5:	38 cb                	cmp    %cl,%bl
    bff7:	0f 85 3a 03 00 00    	jne    c337 <alu_test_xor+0x657>
    bffd:	89 d1                	mov    %edx,%ecx
    bfff:	c0 e8 06             	shr    $0x6,%al
    c002:	c1 e9 06             	shr    $0x6,%ecx
    c005:	83 e0 01             	and    $0x1,%eax
    c008:	83 e1 01             	and    $0x1,%ecx
    c00b:	38 c8                	cmp    %cl,%al
    c00d:	0f 85 0f 03 00 00    	jne    c322 <alu_test_xor+0x642>
    c013:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    c017:	c1 ea 0b             	shr    $0xb,%edx
    c01a:	83 e2 01             	and    $0x1,%edx
    c01d:	c0 e8 03             	shr    $0x3,%al
    c020:	83 e0 01             	and    $0x1,%eax
    c023:	38 d0                	cmp    %dl,%al
    c025:	0f 85 e2 02 00 00    	jne    c30d <alu_test_xor+0x62d>
    c02b:	83 ec 04             	sub    $0x4,%esp
    c02e:	6a 10                	push   $0x10
    c030:	57                   	push   %edi
    c031:	56                   	push   %esi
    c032:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c036:	e8 05 3a 00 00       	call   fa40 <alu_xor>
    c03b:	89 f1                	mov    %esi,%ecx
    c03d:	83 c4 10             	add    $0x10,%esp
    c040:	89 c3                	mov    %eax,%ebx
    c042:	89 f8                	mov    %edi,%eax
    c044:	66 31 c8             	xor    %cx,%ax
    c047:	9c                   	pushf  
    c048:	5a                   	pop    %edx
    c049:	0f b7 c0             	movzwl %ax,%eax
    c04c:	39 c3                	cmp    %eax,%ebx
    c04e:	0f 85 a4 02 00 00    	jne    c2f8 <alu_test_xor+0x618>
    c054:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    c058:	89 d1                	mov    %edx,%ecx
    c05a:	83 e1 01             	and    $0x1,%ecx
    c05d:	89 c3                	mov    %eax,%ebx
    c05f:	83 e3 01             	and    $0x1,%ebx
    c062:	38 cb                	cmp    %cl,%bl
    c064:	0f 85 79 02 00 00    	jne    c2e3 <alu_test_xor+0x603>
    c06a:	89 c3                	mov    %eax,%ebx
    c06c:	89 d1                	mov    %edx,%ecx
    c06e:	c0 eb 02             	shr    $0x2,%bl
    c071:	c1 e9 02             	shr    $0x2,%ecx
    c074:	83 e3 01             	and    $0x1,%ebx
    c077:	83 e1 01             	and    $0x1,%ecx
    c07a:	38 cb                	cmp    %cl,%bl
    c07c:	0f 85 4c 02 00 00    	jne    c2ce <alu_test_xor+0x5ee>
    c082:	89 d1                	mov    %edx,%ecx
    c084:	c0 e8 07             	shr    $0x7,%al
    c087:	c0 e9 07             	shr    $0x7,%cl
    c08a:	38 c8                	cmp    %cl,%al
    c08c:	0f 85 27 02 00 00    	jne    c2b9 <alu_test_xor+0x5d9>
    c092:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    c096:	89 d1                	mov    %edx,%ecx
    c098:	c1 e9 06             	shr    $0x6,%ecx
    c09b:	c0 e8 06             	shr    $0x6,%al
    c09e:	83 e1 01             	and    $0x1,%ecx
    c0a1:	83 e0 01             	and    $0x1,%eax
    c0a4:	38 c8                	cmp    %cl,%al
    c0a6:	0f 85 f8 01 00 00    	jne    c2a4 <alu_test_xor+0x5c4>
    c0ac:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    c0b0:	c1 ea 0b             	shr    $0xb,%edx
    c0b3:	83 e2 01             	and    $0x1,%edx
    c0b6:	c0 e8 03             	shr    $0x3,%al
    c0b9:	83 e0 01             	and    $0x1,%eax
    c0bc:	38 d0                	cmp    %dl,%al
    c0be:	0f 85 cb 01 00 00    	jne    c28f <alu_test_xor+0x5af>
    c0c4:	83 ec 04             	sub    $0x4,%esp
    c0c7:	6a 08                	push   $0x8
    c0c9:	57                   	push   %edi
    c0ca:	56                   	push   %esi
    c0cb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c0cf:	e8 6c 39 00 00       	call   fa40 <alu_xor>
    c0d4:	89 f1                	mov    %esi,%ecx
    c0d6:	83 c4 10             	add    $0x10,%esp
    c0d9:	89 c3                	mov    %eax,%ebx
    c0db:	89 f8                	mov    %edi,%eax
    c0dd:	30 c8                	xor    %cl,%al
    c0df:	9c                   	pushf  
    c0e0:	5a                   	pop    %edx
    c0e1:	0f b6 c0             	movzbl %al,%eax
    c0e4:	39 c3                	cmp    %eax,%ebx
    c0e6:	0f 85 8e 01 00 00    	jne    c27a <alu_test_xor+0x59a>
    c0ec:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    c0f0:	89 d1                	mov    %edx,%ecx
    c0f2:	83 e1 01             	and    $0x1,%ecx
    c0f5:	89 c3                	mov    %eax,%ebx
    c0f7:	83 e3 01             	and    $0x1,%ebx
    c0fa:	38 cb                	cmp    %cl,%bl
    c0fc:	0f 85 55 01 00 00    	jne    c257 <alu_test_xor+0x577>
    c102:	89 c3                	mov    %eax,%ebx
    c104:	89 d1                	mov    %edx,%ecx
    c106:	c0 eb 02             	shr    $0x2,%bl
    c109:	c1 e9 02             	shr    $0x2,%ecx
    c10c:	83 e3 01             	and    $0x1,%ebx
    c10f:	83 e1 01             	and    $0x1,%ecx
    c112:	38 cb                	cmp    %cl,%bl
    c114:	0f 85 1a 01 00 00    	jne    c234 <alu_test_xor+0x554>
    c11a:	89 c3                	mov    %eax,%ebx
    c11c:	89 d1                	mov    %edx,%ecx
    c11e:	c0 eb 07             	shr    $0x7,%bl
    c121:	c0 e9 07             	shr    $0x7,%cl
    c124:	38 cb                	cmp    %cl,%bl
    c126:	0f 85 e5 00 00 00    	jne    c211 <alu_test_xor+0x531>
    c12c:	89 d1                	mov    %edx,%ecx
    c12e:	c0 e8 06             	shr    $0x6,%al
    c131:	c1 e9 06             	shr    $0x6,%ecx
    c134:	83 e0 01             	and    $0x1,%eax
    c137:	83 e1 01             	and    $0x1,%ecx
    c13a:	38 c8                	cmp    %cl,%al
    c13c:	0f 85 ac 00 00 00    	jne    c1ee <alu_test_xor+0x50e>
    c142:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    c146:	c1 ea 0b             	shr    $0xb,%edx
    c149:	83 e2 01             	and    $0x1,%edx
    c14c:	c0 e8 03             	shr    $0x3,%al
    c14f:	83 e0 01             	and    $0x1,%eax
    c152:	38 d0                	cmp    %dl,%al
    c154:	75 75                	jne    c1cb <alu_test_xor+0x4eb>
    c156:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    c15b:	0f 85 1f fe ff ff    	jne    bf80 <alu_test_xor+0x2a0>
    c161:	83 ec 0c             	sub    $0xc,%esp
    c164:	8b 7c 24 18          	mov    0x18(%esp),%edi
    c168:	8d 87 cc 71 fe ff    	lea    -0x18e34(%edi),%eax
    c16e:	89 fb                	mov    %edi,%ebx
    c170:	50                   	push   %eax
    c171:	e8 3a 81 ff ff       	call   42b0 <puts@plt>
    c176:	e8 85 e6 01 00       	call   2a800 <get_ref>
    c17b:	83 c4 10             	add    $0x10,%esp
    c17e:	85 c0                	test   %eax,%eax
    c180:	75 08                	jne    c18a <alu_test_xor+0x4aa>
    c182:	83 c4 4c             	add    $0x4c,%esp
    c185:	5b                   	pop    %ebx
    c186:	5e                   	pop    %esi
    c187:	5f                   	pop    %edi
    c188:	5d                   	pop    %ebp
    c189:	c3                   	ret    
    c18a:	83 ec 0c             	sub    $0xc,%esp
    c18d:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    c191:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    c197:	50                   	push   %eax
    c198:	e8 13 81 ff ff       	call   42b0 <puts@plt>
    c19d:	83 c4 10             	add    $0x10,%esp
    c1a0:	83 c4 4c             	add    $0x4c,%esp
    c1a3:	5b                   	pop    %ebx
    c1a4:	5e                   	pop    %esi
    c1a5:	5f                   	pop    %edi
    c1a6:	5d                   	pop    %ebp
    c1a7:	c3                   	ret    
    c1a8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c1ac:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c1b2:	50                   	push   %eax
    c1b3:	68 42 01 00 00       	push   $0x142
    c1b8:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c1be:	50                   	push   %eax
    c1bf:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    c1c5:	50                   	push   %eax
    c1c6:	e8 45 81 ff ff       	call   4310 <__assert_fail@plt>
    c1cb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c1cf:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c1d5:	50                   	push   %eax
    c1d6:	68 44 01 00 00       	push   $0x144
    c1db:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c1e1:	50                   	push   %eax
    c1e2:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    c1e8:	50                   	push   %eax
    c1e9:	e8 22 81 ff ff       	call   4310 <__assert_fail@plt>
    c1ee:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c1f2:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c1f8:	50                   	push   %eax
    c1f9:	68 44 01 00 00       	push   $0x144
    c1fe:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c204:	50                   	push   %eax
    c205:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    c20b:	50                   	push   %eax
    c20c:	e8 ff 80 ff ff       	call   4310 <__assert_fail@plt>
    c211:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c215:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c21b:	50                   	push   %eax
    c21c:	68 44 01 00 00       	push   $0x144
    c221:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c227:	50                   	push   %eax
    c228:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    c22e:	50                   	push   %eax
    c22f:	e8 dc 80 ff ff       	call   4310 <__assert_fail@plt>
    c234:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c238:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c23e:	50                   	push   %eax
    c23f:	68 44 01 00 00       	push   $0x144
    c244:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c24a:	50                   	push   %eax
    c24b:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    c251:	50                   	push   %eax
    c252:	e8 b9 80 ff ff       	call   4310 <__assert_fail@plt>
    c257:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c25b:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c261:	50                   	push   %eax
    c262:	68 44 01 00 00       	push   $0x144
    c267:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c26d:	50                   	push   %eax
    c26e:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    c274:	50                   	push   %eax
    c275:	e8 96 80 ff ff       	call   4310 <__assert_fail@plt>
    c27a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c27e:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c284:	50                   	push   %eax
    c285:	68 44 01 00 00       	push   $0x144
    c28a:	e9 29 ff ff ff       	jmp    c1b8 <alu_test_xor+0x4d8>
    c28f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c293:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c299:	50                   	push   %eax
    c29a:	68 43 01 00 00       	push   $0x143
    c29f:	e9 37 ff ff ff       	jmp    c1db <alu_test_xor+0x4fb>
    c2a4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c2a8:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c2ae:	50                   	push   %eax
    c2af:	68 43 01 00 00       	push   $0x143
    c2b4:	e9 45 ff ff ff       	jmp    c1fe <alu_test_xor+0x51e>
    c2b9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c2bd:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c2c3:	50                   	push   %eax
    c2c4:	68 43 01 00 00       	push   $0x143
    c2c9:	e9 53 ff ff ff       	jmp    c221 <alu_test_xor+0x541>
    c2ce:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c2d2:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c2d8:	50                   	push   %eax
    c2d9:	68 43 01 00 00       	push   $0x143
    c2de:	e9 61 ff ff ff       	jmp    c244 <alu_test_xor+0x564>
    c2e3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c2e7:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c2ed:	50                   	push   %eax
    c2ee:	68 43 01 00 00       	push   $0x143
    c2f3:	e9 6f ff ff ff       	jmp    c267 <alu_test_xor+0x587>
    c2f8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c2fc:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c302:	50                   	push   %eax
    c303:	68 43 01 00 00       	push   $0x143
    c308:	e9 ab fe ff ff       	jmp    c1b8 <alu_test_xor+0x4d8>
    c30d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c311:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c317:	50                   	push   %eax
    c318:	68 42 01 00 00       	push   $0x142
    c31d:	e9 b9 fe ff ff       	jmp    c1db <alu_test_xor+0x4fb>
    c322:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c326:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c32c:	50                   	push   %eax
    c32d:	68 42 01 00 00       	push   $0x142
    c332:	e9 c7 fe ff ff       	jmp    c1fe <alu_test_xor+0x51e>
    c337:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c33b:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c341:	50                   	push   %eax
    c342:	68 42 01 00 00       	push   $0x142
    c347:	e9 d5 fe ff ff       	jmp    c221 <alu_test_xor+0x541>
    c34c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c350:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c356:	50                   	push   %eax
    c357:	68 42 01 00 00       	push   $0x142
    c35c:	e9 e3 fe ff ff       	jmp    c244 <alu_test_xor+0x564>
    c361:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c365:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c36b:	50                   	push   %eax
    c36c:	68 42 01 00 00       	push   $0x142
    c371:	e9 f1 fe ff ff       	jmp    c267 <alu_test_xor+0x587>
    c376:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c37a:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c380:	50                   	push   %eax
    c381:	68 39 01 00 00       	push   $0x139
    c386:	e9 73 fe ff ff       	jmp    c1fe <alu_test_xor+0x51e>
    c38b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c38f:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c395:	50                   	push   %eax
    c396:	68 39 01 00 00       	push   $0x139
    c39b:	e9 81 fe ff ff       	jmp    c221 <alu_test_xor+0x541>
    c3a0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c3a4:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c3aa:	50                   	push   %eax
    c3ab:	68 39 01 00 00       	push   $0x139
    c3b0:	e9 26 fe ff ff       	jmp    c1db <alu_test_xor+0x4fb>
    c3b5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c3b9:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c3bf:	50                   	push   %eax
    c3c0:	68 3a 01 00 00       	push   $0x13a
    c3c5:	e9 34 fe ff ff       	jmp    c1fe <alu_test_xor+0x51e>
    c3ca:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c3ce:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c3d4:	50                   	push   %eax
    c3d5:	68 38 01 00 00       	push   $0x138
    c3da:	e9 d9 fd ff ff       	jmp    c1b8 <alu_test_xor+0x4d8>
    c3df:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c3e3:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c3e9:	50                   	push   %eax
    c3ea:	68 3a 01 00 00       	push   $0x13a
    c3ef:	e9 e7 fd ff ff       	jmp    c1db <alu_test_xor+0x4fb>
    c3f4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c3f8:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c3fe:	50                   	push   %eax
    c3ff:	68 3a 01 00 00       	push   $0x13a
    c404:	e9 af fd ff ff       	jmp    c1b8 <alu_test_xor+0x4d8>
    c409:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c40d:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c413:	50                   	push   %eax
    c414:	68 38 01 00 00       	push   $0x138
    c419:	e9 03 fe ff ff       	jmp    c221 <alu_test_xor+0x541>
    c41e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c422:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c428:	50                   	push   %eax
    c429:	68 38 01 00 00       	push   $0x138
    c42e:	e9 11 fe ff ff       	jmp    c244 <alu_test_xor+0x564>
    c433:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c437:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c43d:	50                   	push   %eax
    c43e:	68 38 01 00 00       	push   $0x138
    c443:	e9 1f fe ff ff       	jmp    c267 <alu_test_xor+0x587>
    c448:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c44c:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c452:	50                   	push   %eax
    c453:	68 39 01 00 00       	push   $0x139
    c458:	e9 e7 fd ff ff       	jmp    c244 <alu_test_xor+0x564>
    c45d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c461:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c467:	50                   	push   %eax
    c468:	68 39 01 00 00       	push   $0x139
    c46d:	e9 f5 fd ff ff       	jmp    c267 <alu_test_xor+0x587>
    c472:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c476:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c47c:	50                   	push   %eax
    c47d:	68 39 01 00 00       	push   $0x139
    c482:	e9 31 fd ff ff       	jmp    c1b8 <alu_test_xor+0x4d8>
    c487:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c48b:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c491:	50                   	push   %eax
    c492:	68 38 01 00 00       	push   $0x138
    c497:	e9 3f fd ff ff       	jmp    c1db <alu_test_xor+0x4fb>
    c49c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c4a0:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c4a6:	50                   	push   %eax
    c4a7:	68 38 01 00 00       	push   $0x138
    c4ac:	e9 4d fd ff ff       	jmp    c1fe <alu_test_xor+0x51e>
    c4b1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c4b5:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c4bb:	50                   	push   %eax
    c4bc:	68 3a 01 00 00       	push   $0x13a
    c4c1:	e9 5b fd ff ff       	jmp    c221 <alu_test_xor+0x541>
    c4c6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c4ca:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c4d0:	50                   	push   %eax
    c4d1:	68 3a 01 00 00       	push   $0x13a
    c4d6:	e9 69 fd ff ff       	jmp    c244 <alu_test_xor+0x564>
    c4db:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c4df:	8d 83 f0 5f fe ff    	lea    -0x1a010(%ebx),%eax
    c4e5:	50                   	push   %eax
    c4e6:	68 3a 01 00 00       	push   $0x13a
    c4eb:	e9 77 fd ff ff       	jmp    c267 <alu_test_xor+0x587>

0000c4f0 <alu_test_shl>:
    c4f0:	e8 e2 9d ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    c4f5:	05 0b 2b 04 00       	add    $0x42b0b,%eax
    c4fa:	55                   	push   %ebp
    c4fb:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    c500:	57                   	push   %edi
    c501:	56                   	push   %esi
    c502:	53                   	push   %ebx
    c503:	83 ec 4c             	sub    $0x4c,%esp
    c506:	8d 74 24 24          	lea    0x24(%esp),%esi
    c50a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    c50e:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
    c514:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    c518:	8d 74 24 30          	lea    0x30(%esp),%esi
    c51c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
    c523:	00 
    c524:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
    c52b:	00 
    c52c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
    c533:	00 
    c534:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
    c53b:	00 
    c53c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
    c543:	ff 
    c544:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    c54b:	00 
    c54c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
    c553:	10 
    c554:	89 74 24 18          	mov    %esi,0x18(%esp)
    c558:	89 44 24 10          	mov    %eax,0x10(%esp)
    c55c:	8d 44 24 40          	lea    0x40(%esp),%eax
    c560:	8b 7c 24 18          	mov    0x18(%esp),%edi
    c564:	be 01 00 00 00       	mov    $0x1,%esi
    c569:	89 44 24 14          	mov    %eax,0x14(%esp)
    c56d:	83 ec 04             	sub    $0x4,%esp
    c570:	6a 08                	push   $0x8
    c572:	55                   	push   %ebp
    c573:	56                   	push   %esi
    c574:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c578:	e8 63 36 00 00       	call   fbe0 <alu_shl>
    c57d:	89 f1                	mov    %esi,%ecx
    c57f:	83 c4 10             	add    $0x10,%esp
    c582:	89 c3                	mov    %eax,%ebx
    c584:	89 e8                	mov    %ebp,%eax
    c586:	d2 e0                	shl    %cl,%al
    c588:	9c                   	pushf  
    c589:	5a                   	pop    %edx
    c58a:	0f b6 c0             	movzbl %al,%eax
    c58d:	39 c3                	cmp    %eax,%ebx
    c58f:	0f 85 32 05 00 00    	jne    cac7 <alu_test_shl+0x5d7>
    c595:	8b 44 24 10          	mov    0x10(%esp),%eax
    c599:	89 d1                	mov    %edx,%ecx
    c59b:	83 e1 01             	and    $0x1,%ecx
    c59e:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    c5a2:	89 c3                	mov    %eax,%ebx
    c5a4:	83 e3 01             	and    $0x1,%ebx
    c5a7:	38 cb                	cmp    %cl,%bl
    c5a9:	0f 85 29 06 00 00    	jne    cbd8 <alu_test_shl+0x6e8>
    c5af:	89 c3                	mov    %eax,%ebx
    c5b1:	89 d1                	mov    %edx,%ecx
    c5b3:	c0 eb 02             	shr    $0x2,%bl
    c5b6:	c1 e9 02             	shr    $0x2,%ecx
    c5b9:	83 e3 01             	and    $0x1,%ebx
    c5bc:	83 e1 01             	and    $0x1,%ecx
    c5bf:	38 cb                	cmp    %cl,%bl
    c5c1:	0f 85 fc 05 00 00    	jne    cbc3 <alu_test_shl+0x6d3>
    c5c7:	89 c3                	mov    %eax,%ebx
    c5c9:	89 d1                	mov    %edx,%ecx
    c5cb:	c0 eb 07             	shr    $0x7,%bl
    c5ce:	c0 e9 07             	shr    $0x7,%cl
    c5d1:	38 cb                	cmp    %cl,%bl
    c5d3:	0f 85 d5 05 00 00    	jne    cbae <alu_test_shl+0x6be>
    c5d9:	c0 e8 06             	shr    $0x6,%al
    c5dc:	c1 ea 06             	shr    $0x6,%edx
    c5df:	83 e0 01             	and    $0x1,%eax
    c5e2:	83 e2 01             	and    $0x1,%edx
    c5e5:	38 d0                	cmp    %dl,%al
    c5e7:	0f 85 ac 05 00 00    	jne    cb99 <alu_test_shl+0x6a9>
    c5ed:	83 ec 04             	sub    $0x4,%esp
    c5f0:	6a 10                	push   $0x10
    c5f2:	55                   	push   %ebp
    c5f3:	56                   	push   %esi
    c5f4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c5f8:	e8 e3 35 00 00       	call   fbe0 <alu_shl>
    c5fd:	89 f1                	mov    %esi,%ecx
    c5ff:	83 c4 10             	add    $0x10,%esp
    c602:	89 c3                	mov    %eax,%ebx
    c604:	89 e8                	mov    %ebp,%eax
    c606:	66 d3 e0             	shl    %cl,%ax
    c609:	9c                   	pushf  
    c60a:	5a                   	pop    %edx
    c60b:	0f b7 c0             	movzwl %ax,%eax
    c60e:	39 c3                	cmp    %eax,%ebx
    c610:	0f 85 6e 05 00 00    	jne    cb84 <alu_test_shl+0x694>
    c616:	8b 44 24 10          	mov    0x10(%esp),%eax
    c61a:	89 d1                	mov    %edx,%ecx
    c61c:	83 e1 01             	and    $0x1,%ecx
    c61f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    c623:	89 c3                	mov    %eax,%ebx
    c625:	83 e3 01             	and    $0x1,%ebx
    c628:	38 cb                	cmp    %cl,%bl
    c62a:	0f 85 3f 05 00 00    	jne    cb6f <alu_test_shl+0x67f>
    c630:	89 c3                	mov    %eax,%ebx
    c632:	89 d1                	mov    %edx,%ecx
    c634:	c0 eb 02             	shr    $0x2,%bl
    c637:	c1 e9 02             	shr    $0x2,%ecx
    c63a:	83 e3 01             	and    $0x1,%ebx
    c63d:	83 e1 01             	and    $0x1,%ecx
    c640:	38 cb                	cmp    %cl,%bl
    c642:	0f 85 12 05 00 00    	jne    cb5a <alu_test_shl+0x66a>
    c648:	89 c3                	mov    %eax,%ebx
    c64a:	89 d1                	mov    %edx,%ecx
    c64c:	c0 eb 07             	shr    $0x7,%bl
    c64f:	c0 e9 07             	shr    $0x7,%cl
    c652:	38 cb                	cmp    %cl,%bl
    c654:	0f 85 eb 04 00 00    	jne    cb45 <alu_test_shl+0x655>
    c65a:	c0 e8 06             	shr    $0x6,%al
    c65d:	c1 ea 06             	shr    $0x6,%edx
    c660:	83 e0 01             	and    $0x1,%eax
    c663:	83 e2 01             	and    $0x1,%edx
    c666:	38 d0                	cmp    %dl,%al
    c668:	0f 85 c2 04 00 00    	jne    cb30 <alu_test_shl+0x640>
    c66e:	83 ec 04             	sub    $0x4,%esp
    c671:	6a 20                	push   $0x20
    c673:	55                   	push   %ebp
    c674:	56                   	push   %esi
    c675:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c679:	e8 62 35 00 00       	call   fbe0 <alu_shl>
    c67e:	89 f1                	mov    %esi,%ecx
    c680:	83 c4 10             	add    $0x10,%esp
    c683:	89 c3                	mov    %eax,%ebx
    c685:	89 e8                	mov    %ebp,%eax
    c687:	d3 e0                	shl    %cl,%eax
    c689:	9c                   	pushf  
    c68a:	5a                   	pop    %edx
    c68b:	39 c3                	cmp    %eax,%ebx
    c68d:	0f 85 88 04 00 00    	jne    cb1b <alu_test_shl+0x62b>
    c693:	8b 44 24 10          	mov    0x10(%esp),%eax
    c697:	89 d1                	mov    %edx,%ecx
    c699:	83 e1 01             	and    $0x1,%ecx
    c69c:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    c6a0:	89 c3                	mov    %eax,%ebx
    c6a2:	83 e3 01             	and    $0x1,%ebx
    c6a5:	38 cb                	cmp    %cl,%bl
    c6a7:	0f 85 59 04 00 00    	jne    cb06 <alu_test_shl+0x616>
    c6ad:	89 c3                	mov    %eax,%ebx
    c6af:	89 d1                	mov    %edx,%ecx
    c6b1:	c0 eb 02             	shr    $0x2,%bl
    c6b4:	c1 e9 02             	shr    $0x2,%ecx
    c6b7:	83 e3 01             	and    $0x1,%ebx
    c6ba:	83 e1 01             	and    $0x1,%ecx
    c6bd:	38 cb                	cmp    %cl,%bl
    c6bf:	0f 85 2c 04 00 00    	jne    caf1 <alu_test_shl+0x601>
    c6c5:	89 c3                	mov    %eax,%ebx
    c6c7:	89 d1                	mov    %edx,%ecx
    c6c9:	c0 eb 07             	shr    $0x7,%bl
    c6cc:	c0 e9 07             	shr    $0x7,%cl
    c6cf:	38 cb                	cmp    %cl,%bl
    c6d1:	0f 85 db 03 00 00    	jne    cab2 <alu_test_shl+0x5c2>
    c6d7:	c0 e8 06             	shr    $0x6,%al
    c6da:	c1 ea 06             	shr    $0x6,%edx
    c6dd:	83 e0 01             	and    $0x1,%eax
    c6e0:	83 e2 01             	and    $0x1,%edx
    c6e3:	38 d0                	cmp    %dl,%al
    c6e5:	0f 85 f1 03 00 00    	jne    cadc <alu_test_shl+0x5ec>
    c6eb:	83 c7 04             	add    $0x4,%edi
    c6ee:	3b 7c 24 14          	cmp    0x14(%esp),%edi
    c6f2:	74 0c                	je     c700 <alu_test_shl+0x210>
    c6f4:	8b 37                	mov    (%edi),%esi
    c6f6:	e9 72 fe ff ff       	jmp    c56d <alu_test_shl+0x7d>
    c6fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c6ff:	90                   	nop
    c700:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
    c705:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    c709:	3b 44 24 18          	cmp    0x18(%esp),%eax
    c70d:	74 07                	je     c716 <alu_test_shl+0x226>
    c70f:	8b 28                	mov    (%eax),%ebp
    c711:	e9 46 fe ff ff       	jmp    c55c <alu_test_shl+0x6c>
    c716:	83 ec 0c             	sub    $0xc,%esp
    c719:	6a 00                	push   $0x0
    c71b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    c71f:	89 f3                	mov    %esi,%ebx
    c721:	e8 0a 7a ff ff       	call   4130 <time@plt>
    c726:	89 04 24             	mov    %eax,(%esp)
    c729:	e8 62 7a ff ff       	call   4190 <srand@plt>
    c72e:	83 c4 10             	add    $0x10,%esp
    c731:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    c738:	00 
    c739:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c740:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    c744:	bf 01 00 00 00       	mov    $0x1,%edi
    c749:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c74d:	e8 9e 7a ff ff       	call   41f0 <rand@plt>
    c752:	83 ec 04             	sub    $0x4,%esp
    c755:	6a 08                	push   $0x8
    c757:	89 c6                	mov    %eax,%esi
    c759:	50                   	push   %eax
    c75a:	57                   	push   %edi
    c75b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c75f:	e8 7c 34 00 00       	call   fbe0 <alu_shl>
    c764:	89 f9                	mov    %edi,%ecx
    c766:	83 c4 10             	add    $0x10,%esp
    c769:	89 c3                	mov    %eax,%ebx
    c76b:	89 f0                	mov    %esi,%eax
    c76d:	d2 e0                	shl    %cl,%al
    c76f:	9c                   	pushf  
    c770:	5a                   	pop    %edx
    c771:	0f b6 c0             	movzbl %al,%eax
    c774:	39 c3                	cmp    %eax,%ebx
    c776:	0f 85 b8 01 00 00    	jne    c934 <alu_test_shl+0x444>
    c77c:	8b 44 24 10          	mov    0x10(%esp),%eax
    c780:	89 d1                	mov    %edx,%ecx
    c782:	83 e1 01             	and    $0x1,%ecx
    c785:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    c789:	89 c3                	mov    %eax,%ebx
    c78b:	83 e3 01             	and    $0x1,%ebx
    c78e:	38 cb                	cmp    %cl,%bl
    c790:	0f 85 07 03 00 00    	jne    ca9d <alu_test_shl+0x5ad>
    c796:	89 c3                	mov    %eax,%ebx
    c798:	89 d1                	mov    %edx,%ecx
    c79a:	c0 eb 02             	shr    $0x2,%bl
    c79d:	c1 e9 02             	shr    $0x2,%ecx
    c7a0:	83 e3 01             	and    $0x1,%ebx
    c7a3:	83 e1 01             	and    $0x1,%ecx
    c7a6:	38 cb                	cmp    %cl,%bl
    c7a8:	0f 85 da 02 00 00    	jne    ca88 <alu_test_shl+0x598>
    c7ae:	89 c3                	mov    %eax,%ebx
    c7b0:	89 d1                	mov    %edx,%ecx
    c7b2:	c0 eb 07             	shr    $0x7,%bl
    c7b5:	c0 e9 07             	shr    $0x7,%cl
    c7b8:	38 cb                	cmp    %cl,%bl
    c7ba:	0f 85 b3 02 00 00    	jne    ca73 <alu_test_shl+0x583>
    c7c0:	c0 e8 06             	shr    $0x6,%al
    c7c3:	c1 ea 06             	shr    $0x6,%edx
    c7c6:	83 e0 01             	and    $0x1,%eax
    c7c9:	83 e2 01             	and    $0x1,%edx
    c7cc:	38 d0                	cmp    %dl,%al
    c7ce:	0f 85 8a 02 00 00    	jne    ca5e <alu_test_shl+0x56e>
    c7d4:	83 ec 04             	sub    $0x4,%esp
    c7d7:	6a 10                	push   $0x10
    c7d9:	56                   	push   %esi
    c7da:	57                   	push   %edi
    c7db:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c7df:	e8 fc 33 00 00       	call   fbe0 <alu_shl>
    c7e4:	89 f9                	mov    %edi,%ecx
    c7e6:	83 c4 10             	add    $0x10,%esp
    c7e9:	89 c3                	mov    %eax,%ebx
    c7eb:	89 f0                	mov    %esi,%eax
    c7ed:	66 d3 e0             	shl    %cl,%ax
    c7f0:	9c                   	pushf  
    c7f1:	5a                   	pop    %edx
    c7f2:	0f b7 c0             	movzwl %ax,%eax
    c7f5:	39 c3                	cmp    %eax,%ebx
    c7f7:	0f 85 4c 02 00 00    	jne    ca49 <alu_test_shl+0x559>
    c7fd:	8b 44 24 10          	mov    0x10(%esp),%eax
    c801:	89 d1                	mov    %edx,%ecx
    c803:	83 e1 01             	and    $0x1,%ecx
    c806:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    c80a:	89 c3                	mov    %eax,%ebx
    c80c:	83 e3 01             	and    $0x1,%ebx
    c80f:	38 cb                	cmp    %cl,%bl
    c811:	0f 85 20 02 00 00    	jne    ca37 <alu_test_shl+0x547>
    c817:	89 c3                	mov    %eax,%ebx
    c819:	89 d1                	mov    %edx,%ecx
    c81b:	c0 eb 02             	shr    $0x2,%bl
    c81e:	c1 e9 02             	shr    $0x2,%ecx
    c821:	83 e3 01             	and    $0x1,%ebx
    c824:	83 e1 01             	and    $0x1,%ecx
    c827:	38 cb                	cmp    %cl,%bl
    c829:	0f 85 f3 01 00 00    	jne    ca22 <alu_test_shl+0x532>
    c82f:	89 c3                	mov    %eax,%ebx
    c831:	89 d1                	mov    %edx,%ecx
    c833:	c0 eb 07             	shr    $0x7,%bl
    c836:	c0 e9 07             	shr    $0x7,%cl
    c839:	38 cb                	cmp    %cl,%bl
    c83b:	0f 85 cc 01 00 00    	jne    ca0d <alu_test_shl+0x51d>
    c841:	c0 e8 06             	shr    $0x6,%al
    c844:	c1 ea 06             	shr    $0x6,%edx
    c847:	83 e0 01             	and    $0x1,%eax
    c84a:	83 e2 01             	and    $0x1,%edx
    c84d:	38 d0                	cmp    %dl,%al
    c84f:	0f 85 a3 01 00 00    	jne    c9f8 <alu_test_shl+0x508>
    c855:	83 ec 04             	sub    $0x4,%esp
    c858:	6a 20                	push   $0x20
    c85a:	56                   	push   %esi
    c85b:	57                   	push   %edi
    c85c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    c860:	e8 7b 33 00 00       	call   fbe0 <alu_shl>
    c865:	89 f9                	mov    %edi,%ecx
    c867:	83 c4 10             	add    $0x10,%esp
    c86a:	89 c3                	mov    %eax,%ebx
    c86c:	89 f0                	mov    %esi,%eax
    c86e:	d3 e0                	shl    %cl,%eax
    c870:	9c                   	pushf  
    c871:	5a                   	pop    %edx
    c872:	39 c3                	cmp    %eax,%ebx
    c874:	0f 85 69 01 00 00    	jne    c9e3 <alu_test_shl+0x4f3>
    c87a:	8b 44 24 10          	mov    0x10(%esp),%eax
    c87e:	89 d1                	mov    %edx,%ecx
    c880:	83 e1 01             	and    $0x1,%ecx
    c883:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    c887:	89 c3                	mov    %eax,%ebx
    c889:	83 e3 01             	and    $0x1,%ebx
    c88c:	38 cb                	cmp    %cl,%bl
    c88e:	0f 85 2c 01 00 00    	jne    c9c0 <alu_test_shl+0x4d0>
    c894:	89 c3                	mov    %eax,%ebx
    c896:	89 d1                	mov    %edx,%ecx
    c898:	c0 eb 02             	shr    $0x2,%bl
    c89b:	c1 e9 02             	shr    $0x2,%ecx
    c89e:	83 e3 01             	and    $0x1,%ebx
    c8a1:	83 e1 01             	and    $0x1,%ecx
    c8a4:	38 cb                	cmp    %cl,%bl
    c8a6:	0f 85 f1 00 00 00    	jne    c99d <alu_test_shl+0x4ad>
    c8ac:	89 c3                	mov    %eax,%ebx
    c8ae:	89 d1                	mov    %edx,%ecx
    c8b0:	c0 eb 07             	shr    $0x7,%bl
    c8b3:	c0 e9 07             	shr    $0x7,%cl
    c8b6:	38 cb                	cmp    %cl,%bl
    c8b8:	0f 85 bc 00 00 00    	jne    c97a <alu_test_shl+0x48a>
    c8be:	c0 e8 06             	shr    $0x6,%al
    c8c1:	c1 ea 06             	shr    $0x6,%edx
    c8c4:	83 e0 01             	and    $0x1,%eax
    c8c7:	83 e2 01             	and    $0x1,%edx
    c8ca:	38 d0                	cmp    %dl,%al
    c8cc:	0f 85 85 00 00 00    	jne    c957 <alu_test_shl+0x467>
    c8d2:	83 c5 04             	add    $0x4,%ebp
    c8d5:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
    c8d9:	74 0d                	je     c8e8 <alu_test_shl+0x3f8>
    c8db:	8b 7d 00             	mov    0x0(%ebp),%edi
    c8de:	e9 66 fe ff ff       	jmp    c749 <alu_test_shl+0x259>
    c8e3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c8e7:	90                   	nop
    c8e8:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    c8ed:	0f 85 4d fe ff ff    	jne    c740 <alu_test_shl+0x250>
    c8f3:	83 ec 0c             	sub    $0xc,%esp
    c8f6:	8b 7c 24 18          	mov    0x18(%esp),%edi
    c8fa:	8d 87 f4 71 fe ff    	lea    -0x18e0c(%edi),%eax
    c900:	89 fb                	mov    %edi,%ebx
    c902:	50                   	push   %eax
    c903:	e8 a8 79 ff ff       	call   42b0 <puts@plt>
    c908:	e8 f3 de 01 00       	call   2a800 <get_ref>
    c90d:	83 c4 10             	add    $0x10,%esp
    c910:	85 c0                	test   %eax,%eax
    c912:	75 08                	jne    c91c <alu_test_shl+0x42c>
    c914:	83 c4 4c             	add    $0x4c,%esp
    c917:	5b                   	pop    %ebx
    c918:	5e                   	pop    %esi
    c919:	5f                   	pop    %edi
    c91a:	5d                   	pop    %ebp
    c91b:	c3                   	ret    
    c91c:	83 ec 0c             	sub    $0xc,%esp
    c91f:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    c923:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    c929:	50                   	push   %eax
    c92a:	e8 81 79 ff ff       	call   42b0 <puts@plt>
    c92f:	83 c4 10             	add    $0x10,%esp
    c932:	eb e0                	jmp    c914 <alu_test_shl+0x424>
    c934:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c938:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    c93e:	50                   	push   %eax
    c93f:	68 61 01 00 00       	push   $0x161
    c944:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c94a:	50                   	push   %eax
    c94b:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    c951:	50                   	push   %eax
    c952:	e8 b9 79 ff ff       	call   4310 <__assert_fail@plt>
    c957:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c95b:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    c961:	50                   	push   %eax
    c962:	68 63 01 00 00       	push   $0x163
    c967:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c96d:	50                   	push   %eax
    c96e:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    c974:	50                   	push   %eax
    c975:	e8 96 79 ff ff       	call   4310 <__assert_fail@plt>
    c97a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c97e:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    c984:	50                   	push   %eax
    c985:	68 63 01 00 00       	push   $0x163
    c98a:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c990:	50                   	push   %eax
    c991:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    c997:	50                   	push   %eax
    c998:	e8 73 79 ff ff       	call   4310 <__assert_fail@plt>
    c99d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c9a1:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    c9a7:	50                   	push   %eax
    c9a8:	68 63 01 00 00       	push   $0x163
    c9ad:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c9b3:	50                   	push   %eax
    c9b4:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    c9ba:	50                   	push   %eax
    c9bb:	e8 50 79 ff ff       	call   4310 <__assert_fail@plt>
    c9c0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c9c4:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    c9ca:	50                   	push   %eax
    c9cb:	68 63 01 00 00       	push   $0x163
    c9d0:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    c9d6:	50                   	push   %eax
    c9d7:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    c9dd:	50                   	push   %eax
    c9de:	e8 2d 79 ff ff       	call   4310 <__assert_fail@plt>
    c9e3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c9e7:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    c9ed:	50                   	push   %eax
    c9ee:	68 63 01 00 00       	push   $0x163
    c9f3:	e9 4c ff ff ff       	jmp    c944 <alu_test_shl+0x454>
    c9f8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    c9fc:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca02:	50                   	push   %eax
    ca03:	68 62 01 00 00       	push   $0x162
    ca08:	e9 5a ff ff ff       	jmp    c967 <alu_test_shl+0x477>
    ca0d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ca11:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca17:	50                   	push   %eax
    ca18:	68 62 01 00 00       	push   $0x162
    ca1d:	e9 68 ff ff ff       	jmp    c98a <alu_test_shl+0x49a>
    ca22:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ca26:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca2c:	50                   	push   %eax
    ca2d:	68 62 01 00 00       	push   $0x162
    ca32:	e9 76 ff ff ff       	jmp    c9ad <alu_test_shl+0x4bd>
    ca37:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ca3b:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca41:	50                   	push   %eax
    ca42:	68 62 01 00 00       	push   $0x162
    ca47:	eb 87                	jmp    c9d0 <alu_test_shl+0x4e0>
    ca49:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ca4d:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca53:	50                   	push   %eax
    ca54:	68 62 01 00 00       	push   $0x162
    ca59:	e9 e6 fe ff ff       	jmp    c944 <alu_test_shl+0x454>
    ca5e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ca62:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca68:	50                   	push   %eax
    ca69:	68 61 01 00 00       	push   $0x161
    ca6e:	e9 f4 fe ff ff       	jmp    c967 <alu_test_shl+0x477>
    ca73:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ca77:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca7d:	50                   	push   %eax
    ca7e:	68 61 01 00 00       	push   $0x161
    ca83:	e9 02 ff ff ff       	jmp    c98a <alu_test_shl+0x49a>
    ca88:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ca8c:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    ca92:	50                   	push   %eax
    ca93:	68 61 01 00 00       	push   $0x161
    ca98:	e9 10 ff ff ff       	jmp    c9ad <alu_test_shl+0x4bd>
    ca9d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    caa1:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    caa7:	50                   	push   %eax
    caa8:	68 61 01 00 00       	push   $0x161
    caad:	e9 1e ff ff ff       	jmp    c9d0 <alu_test_shl+0x4e0>
    cab2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cab6:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cabc:	50                   	push   %eax
    cabd:	68 58 01 00 00       	push   $0x158
    cac2:	e9 c3 fe ff ff       	jmp    c98a <alu_test_shl+0x49a>
    cac7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cacb:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cad1:	50                   	push   %eax
    cad2:	68 56 01 00 00       	push   $0x156
    cad7:	e9 68 fe ff ff       	jmp    c944 <alu_test_shl+0x454>
    cadc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cae0:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cae6:	50                   	push   %eax
    cae7:	68 58 01 00 00       	push   $0x158
    caec:	e9 76 fe ff ff       	jmp    c967 <alu_test_shl+0x477>
    caf1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    caf5:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cafb:	50                   	push   %eax
    cafc:	68 58 01 00 00       	push   $0x158
    cb01:	e9 a7 fe ff ff       	jmp    c9ad <alu_test_shl+0x4bd>
    cb06:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb0a:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cb10:	50                   	push   %eax
    cb11:	68 58 01 00 00       	push   $0x158
    cb16:	e9 b5 fe ff ff       	jmp    c9d0 <alu_test_shl+0x4e0>
    cb1b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb1f:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cb25:	50                   	push   %eax
    cb26:	68 58 01 00 00       	push   $0x158
    cb2b:	e9 14 fe ff ff       	jmp    c944 <alu_test_shl+0x454>
    cb30:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb34:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cb3a:	50                   	push   %eax
    cb3b:	68 57 01 00 00       	push   $0x157
    cb40:	e9 22 fe ff ff       	jmp    c967 <alu_test_shl+0x477>
    cb45:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb49:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cb4f:	50                   	push   %eax
    cb50:	68 57 01 00 00       	push   $0x157
    cb55:	e9 30 fe ff ff       	jmp    c98a <alu_test_shl+0x49a>
    cb5a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb5e:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cb64:	50                   	push   %eax
    cb65:	68 57 01 00 00       	push   $0x157
    cb6a:	e9 3e fe ff ff       	jmp    c9ad <alu_test_shl+0x4bd>
    cb6f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb73:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cb79:	50                   	push   %eax
    cb7a:	68 57 01 00 00       	push   $0x157
    cb7f:	e9 4c fe ff ff       	jmp    c9d0 <alu_test_shl+0x4e0>
    cb84:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb88:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cb8e:	50                   	push   %eax
    cb8f:	68 57 01 00 00       	push   $0x157
    cb94:	e9 ab fd ff ff       	jmp    c944 <alu_test_shl+0x454>
    cb99:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cb9d:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cba3:	50                   	push   %eax
    cba4:	68 56 01 00 00       	push   $0x156
    cba9:	e9 b9 fd ff ff       	jmp    c967 <alu_test_shl+0x477>
    cbae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cbb2:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cbb8:	50                   	push   %eax
    cbb9:	68 56 01 00 00       	push   $0x156
    cbbe:	e9 c7 fd ff ff       	jmp    c98a <alu_test_shl+0x49a>
    cbc3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cbc7:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cbcd:	50                   	push   %eax
    cbce:	68 56 01 00 00       	push   $0x156
    cbd3:	e9 d5 fd ff ff       	jmp    c9ad <alu_test_shl+0x4bd>
    cbd8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    cbdc:	8d 83 e0 5f fe ff    	lea    -0x1a020(%ebx),%eax
    cbe2:	50                   	push   %eax
    cbe3:	68 56 01 00 00       	push   $0x156
    cbe8:	e9 e3 fd ff ff       	jmp    c9d0 <alu_test_shl+0x4e0>
    cbed:	8d 76 00             	lea    0x0(%esi),%esi

0000cbf0 <alu_test_shr>:
    cbf0:	e8 e2 96 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    cbf5:	05 0b 24 04 00       	add    $0x4240b,%eax
    cbfa:	55                   	push   %ebp
    cbfb:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    cc00:	57                   	push   %edi
    cc01:	56                   	push   %esi
    cc02:	53                   	push   %ebx
    cc03:	83 ec 4c             	sub    $0x4c,%esp
    cc06:	8d 74 24 24          	lea    0x24(%esp),%esi
    cc0a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    cc0e:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
    cc14:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    cc18:	8d 74 24 30          	lea    0x30(%esp),%esi
    cc1c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
    cc23:	00 
    cc24:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
    cc2b:	00 
    cc2c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
    cc33:	00 
    cc34:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
    cc3b:	00 
    cc3c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
    cc43:	ff 
    cc44:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    cc4b:	00 
    cc4c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
    cc53:	10 
    cc54:	89 74 24 18          	mov    %esi,0x18(%esp)
    cc58:	89 44 24 10          	mov    %eax,0x10(%esp)
    cc5c:	8d 44 24 40          	lea    0x40(%esp),%eax
    cc60:	8b 7c 24 18          	mov    0x18(%esp),%edi
    cc64:	be 01 00 00 00       	mov    $0x1,%esi
    cc69:	89 44 24 14          	mov    %eax,0x14(%esp)
    cc6d:	83 ec 04             	sub    $0x4,%esp
    cc70:	6a 08                	push   $0x8
    cc72:	55                   	push   %ebp
    cc73:	56                   	push   %esi
    cc74:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    cc78:	e8 93 30 00 00       	call   fd10 <alu_shr>
    cc7d:	89 f1                	mov    %esi,%ecx
    cc7f:	83 c4 10             	add    $0x10,%esp
    cc82:	89 c3                	mov    %eax,%ebx
    cc84:	89 e8                	mov    %ebp,%eax
    cc86:	d2 e8                	shr    %cl,%al
    cc88:	9c                   	pushf  
    cc89:	5a                   	pop    %edx
    cc8a:	0f b6 c0             	movzbl %al,%eax
    cc8d:	39 c3                	cmp    %eax,%ebx
    cc8f:	0f 85 32 05 00 00    	jne    d1c7 <alu_test_shr+0x5d7>
    cc95:	8b 44 24 10          	mov    0x10(%esp),%eax
    cc99:	89 d1                	mov    %edx,%ecx
    cc9b:	83 e1 01             	and    $0x1,%ecx
    cc9e:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    cca2:	89 c3                	mov    %eax,%ebx
    cca4:	83 e3 01             	and    $0x1,%ebx
    cca7:	38 cb                	cmp    %cl,%bl
    cca9:	0f 85 29 06 00 00    	jne    d2d8 <alu_test_shr+0x6e8>
    ccaf:	89 c3                	mov    %eax,%ebx
    ccb1:	89 d1                	mov    %edx,%ecx
    ccb3:	c0 eb 02             	shr    $0x2,%bl
    ccb6:	c1 e9 02             	shr    $0x2,%ecx
    ccb9:	83 e3 01             	and    $0x1,%ebx
    ccbc:	83 e1 01             	and    $0x1,%ecx
    ccbf:	38 cb                	cmp    %cl,%bl
    ccc1:	0f 85 fc 05 00 00    	jne    d2c3 <alu_test_shr+0x6d3>
    ccc7:	89 c3                	mov    %eax,%ebx
    ccc9:	89 d1                	mov    %edx,%ecx
    cccb:	c0 eb 07             	shr    $0x7,%bl
    ccce:	c0 e9 07             	shr    $0x7,%cl
    ccd1:	38 cb                	cmp    %cl,%bl
    ccd3:	0f 85 d5 05 00 00    	jne    d2ae <alu_test_shr+0x6be>
    ccd9:	c0 e8 06             	shr    $0x6,%al
    ccdc:	c1 ea 06             	shr    $0x6,%edx
    ccdf:	83 e0 01             	and    $0x1,%eax
    cce2:	83 e2 01             	and    $0x1,%edx
    cce5:	38 d0                	cmp    %dl,%al
    cce7:	0f 85 ac 05 00 00    	jne    d299 <alu_test_shr+0x6a9>
    cced:	83 ec 04             	sub    $0x4,%esp
    ccf0:	6a 10                	push   $0x10
    ccf2:	55                   	push   %ebp
    ccf3:	56                   	push   %esi
    ccf4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    ccf8:	e8 13 30 00 00       	call   fd10 <alu_shr>
    ccfd:	89 f1                	mov    %esi,%ecx
    ccff:	83 c4 10             	add    $0x10,%esp
    cd02:	89 c3                	mov    %eax,%ebx
    cd04:	89 e8                	mov    %ebp,%eax
    cd06:	66 d3 e8             	shr    %cl,%ax
    cd09:	9c                   	pushf  
    cd0a:	5a                   	pop    %edx
    cd0b:	0f b7 c0             	movzwl %ax,%eax
    cd0e:	39 c3                	cmp    %eax,%ebx
    cd10:	0f 85 6e 05 00 00    	jne    d284 <alu_test_shr+0x694>
    cd16:	8b 44 24 10          	mov    0x10(%esp),%eax
    cd1a:	89 d1                	mov    %edx,%ecx
    cd1c:	83 e1 01             	and    $0x1,%ecx
    cd1f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    cd23:	89 c3                	mov    %eax,%ebx
    cd25:	83 e3 01             	and    $0x1,%ebx
    cd28:	38 cb                	cmp    %cl,%bl
    cd2a:	0f 85 3f 05 00 00    	jne    d26f <alu_test_shr+0x67f>
    cd30:	89 c3                	mov    %eax,%ebx
    cd32:	89 d1                	mov    %edx,%ecx
    cd34:	c0 eb 02             	shr    $0x2,%bl
    cd37:	c1 e9 02             	shr    $0x2,%ecx
    cd3a:	83 e3 01             	and    $0x1,%ebx
    cd3d:	83 e1 01             	and    $0x1,%ecx
    cd40:	38 cb                	cmp    %cl,%bl
    cd42:	0f 85 12 05 00 00    	jne    d25a <alu_test_shr+0x66a>
    cd48:	89 c3                	mov    %eax,%ebx
    cd4a:	89 d1                	mov    %edx,%ecx
    cd4c:	c0 eb 07             	shr    $0x7,%bl
    cd4f:	c0 e9 07             	shr    $0x7,%cl
    cd52:	38 cb                	cmp    %cl,%bl
    cd54:	0f 85 eb 04 00 00    	jne    d245 <alu_test_shr+0x655>
    cd5a:	c0 e8 06             	shr    $0x6,%al
    cd5d:	c1 ea 06             	shr    $0x6,%edx
    cd60:	83 e0 01             	and    $0x1,%eax
    cd63:	83 e2 01             	and    $0x1,%edx
    cd66:	38 d0                	cmp    %dl,%al
    cd68:	0f 85 c2 04 00 00    	jne    d230 <alu_test_shr+0x640>
    cd6e:	83 ec 04             	sub    $0x4,%esp
    cd71:	6a 20                	push   $0x20
    cd73:	55                   	push   %ebp
    cd74:	56                   	push   %esi
    cd75:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    cd79:	e8 92 2f 00 00       	call   fd10 <alu_shr>
    cd7e:	89 f1                	mov    %esi,%ecx
    cd80:	83 c4 10             	add    $0x10,%esp
    cd83:	89 c3                	mov    %eax,%ebx
    cd85:	89 e8                	mov    %ebp,%eax
    cd87:	d3 e8                	shr    %cl,%eax
    cd89:	9c                   	pushf  
    cd8a:	5a                   	pop    %edx
    cd8b:	39 c3                	cmp    %eax,%ebx
    cd8d:	0f 85 88 04 00 00    	jne    d21b <alu_test_shr+0x62b>
    cd93:	8b 44 24 10          	mov    0x10(%esp),%eax
    cd97:	89 d1                	mov    %edx,%ecx
    cd99:	83 e1 01             	and    $0x1,%ecx
    cd9c:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    cda0:	89 c3                	mov    %eax,%ebx
    cda2:	83 e3 01             	and    $0x1,%ebx
    cda5:	38 cb                	cmp    %cl,%bl
    cda7:	0f 85 59 04 00 00    	jne    d206 <alu_test_shr+0x616>
    cdad:	89 c3                	mov    %eax,%ebx
    cdaf:	89 d1                	mov    %edx,%ecx
    cdb1:	c0 eb 02             	shr    $0x2,%bl
    cdb4:	c1 e9 02             	shr    $0x2,%ecx
    cdb7:	83 e3 01             	and    $0x1,%ebx
    cdba:	83 e1 01             	and    $0x1,%ecx
    cdbd:	38 cb                	cmp    %cl,%bl
    cdbf:	0f 85 2c 04 00 00    	jne    d1f1 <alu_test_shr+0x601>
    cdc5:	89 c3                	mov    %eax,%ebx
    cdc7:	89 d1                	mov    %edx,%ecx
    cdc9:	c0 eb 07             	shr    $0x7,%bl
    cdcc:	c0 e9 07             	shr    $0x7,%cl
    cdcf:	38 cb                	cmp    %cl,%bl
    cdd1:	0f 85 db 03 00 00    	jne    d1b2 <alu_test_shr+0x5c2>
    cdd7:	c0 e8 06             	shr    $0x6,%al
    cdda:	c1 ea 06             	shr    $0x6,%edx
    cddd:	83 e0 01             	and    $0x1,%eax
    cde0:	83 e2 01             	and    $0x1,%edx
    cde3:	38 d0                	cmp    %dl,%al
    cde5:	0f 85 f1 03 00 00    	jne    d1dc <alu_test_shr+0x5ec>
    cdeb:	83 c7 04             	add    $0x4,%edi
    cdee:	3b 7c 24 14          	cmp    0x14(%esp),%edi
    cdf2:	74 0c                	je     ce00 <alu_test_shr+0x210>
    cdf4:	8b 37                	mov    (%edi),%esi
    cdf6:	e9 72 fe ff ff       	jmp    cc6d <alu_test_shr+0x7d>
    cdfb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cdff:	90                   	nop
    ce00:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
    ce05:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    ce09:	3b 44 24 18          	cmp    0x18(%esp),%eax
    ce0d:	74 07                	je     ce16 <alu_test_shr+0x226>
    ce0f:	8b 28                	mov    (%eax),%ebp
    ce11:	e9 46 fe ff ff       	jmp    cc5c <alu_test_shr+0x6c>
    ce16:	83 ec 0c             	sub    $0xc,%esp
    ce19:	6a 00                	push   $0x0
    ce1b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    ce1f:	89 f3                	mov    %esi,%ebx
    ce21:	e8 0a 73 ff ff       	call   4130 <time@plt>
    ce26:	89 04 24             	mov    %eax,(%esp)
    ce29:	e8 62 73 ff ff       	call   4190 <srand@plt>
    ce2e:	83 c4 10             	add    $0x10,%esp
    ce31:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    ce38:	00 
    ce39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ce40:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    ce44:	bf 01 00 00 00       	mov    $0x1,%edi
    ce49:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    ce4d:	e8 9e 73 ff ff       	call   41f0 <rand@plt>
    ce52:	83 ec 04             	sub    $0x4,%esp
    ce55:	6a 08                	push   $0x8
    ce57:	89 c6                	mov    %eax,%esi
    ce59:	50                   	push   %eax
    ce5a:	57                   	push   %edi
    ce5b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    ce5f:	e8 ac 2e 00 00       	call   fd10 <alu_shr>
    ce64:	89 f9                	mov    %edi,%ecx
    ce66:	83 c4 10             	add    $0x10,%esp
    ce69:	89 c3                	mov    %eax,%ebx
    ce6b:	89 f0                	mov    %esi,%eax
    ce6d:	d2 e8                	shr    %cl,%al
    ce6f:	9c                   	pushf  
    ce70:	5a                   	pop    %edx
    ce71:	0f b6 c0             	movzbl %al,%eax
    ce74:	39 c3                	cmp    %eax,%ebx
    ce76:	0f 85 b8 01 00 00    	jne    d034 <alu_test_shr+0x444>
    ce7c:	8b 44 24 10          	mov    0x10(%esp),%eax
    ce80:	89 d1                	mov    %edx,%ecx
    ce82:	83 e1 01             	and    $0x1,%ecx
    ce85:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    ce89:	89 c3                	mov    %eax,%ebx
    ce8b:	83 e3 01             	and    $0x1,%ebx
    ce8e:	38 cb                	cmp    %cl,%bl
    ce90:	0f 85 07 03 00 00    	jne    d19d <alu_test_shr+0x5ad>
    ce96:	89 c3                	mov    %eax,%ebx
    ce98:	89 d1                	mov    %edx,%ecx
    ce9a:	c0 eb 02             	shr    $0x2,%bl
    ce9d:	c1 e9 02             	shr    $0x2,%ecx
    cea0:	83 e3 01             	and    $0x1,%ebx
    cea3:	83 e1 01             	and    $0x1,%ecx
    cea6:	38 cb                	cmp    %cl,%bl
    cea8:	0f 85 da 02 00 00    	jne    d188 <alu_test_shr+0x598>
    ceae:	89 c3                	mov    %eax,%ebx
    ceb0:	89 d1                	mov    %edx,%ecx
    ceb2:	c0 eb 07             	shr    $0x7,%bl
    ceb5:	c0 e9 07             	shr    $0x7,%cl
    ceb8:	38 cb                	cmp    %cl,%bl
    ceba:	0f 85 b3 02 00 00    	jne    d173 <alu_test_shr+0x583>
    cec0:	c0 e8 06             	shr    $0x6,%al
    cec3:	c1 ea 06             	shr    $0x6,%edx
    cec6:	83 e0 01             	and    $0x1,%eax
    cec9:	83 e2 01             	and    $0x1,%edx
    cecc:	38 d0                	cmp    %dl,%al
    cece:	0f 85 8a 02 00 00    	jne    d15e <alu_test_shr+0x56e>
    ced4:	83 ec 04             	sub    $0x4,%esp
    ced7:	6a 10                	push   $0x10
    ced9:	56                   	push   %esi
    ceda:	57                   	push   %edi
    cedb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    cedf:	e8 2c 2e 00 00       	call   fd10 <alu_shr>
    cee4:	89 f9                	mov    %edi,%ecx
    cee6:	83 c4 10             	add    $0x10,%esp
    cee9:	89 c3                	mov    %eax,%ebx
    ceeb:	89 f0                	mov    %esi,%eax
    ceed:	66 d3 e8             	shr    %cl,%ax
    cef0:	9c                   	pushf  
    cef1:	5a                   	pop    %edx
    cef2:	0f b7 c0             	movzwl %ax,%eax
    cef5:	39 c3                	cmp    %eax,%ebx
    cef7:	0f 85 4c 02 00 00    	jne    d149 <alu_test_shr+0x559>
    cefd:	8b 44 24 10          	mov    0x10(%esp),%eax
    cf01:	89 d1                	mov    %edx,%ecx
    cf03:	83 e1 01             	and    $0x1,%ecx
    cf06:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    cf0a:	89 c3                	mov    %eax,%ebx
    cf0c:	83 e3 01             	and    $0x1,%ebx
    cf0f:	38 cb                	cmp    %cl,%bl
    cf11:	0f 85 20 02 00 00    	jne    d137 <alu_test_shr+0x547>
    cf17:	89 c3                	mov    %eax,%ebx
    cf19:	89 d1                	mov    %edx,%ecx
    cf1b:	c0 eb 02             	shr    $0x2,%bl
    cf1e:	c1 e9 02             	shr    $0x2,%ecx
    cf21:	83 e3 01             	and    $0x1,%ebx
    cf24:	83 e1 01             	and    $0x1,%ecx
    cf27:	38 cb                	cmp    %cl,%bl
    cf29:	0f 85 f3 01 00 00    	jne    d122 <alu_test_shr+0x532>
    cf2f:	89 c3                	mov    %eax,%ebx
    cf31:	89 d1                	mov    %edx,%ecx
    cf33:	c0 eb 07             	shr    $0x7,%bl
    cf36:	c0 e9 07             	shr    $0x7,%cl
    cf39:	38 cb                	cmp    %cl,%bl
    cf3b:	0f 85 cc 01 00 00    	jne    d10d <alu_test_shr+0x51d>
    cf41:	c0 e8 06             	shr    $0x6,%al
    cf44:	c1 ea 06             	shr    $0x6,%edx
    cf47:	83 e0 01             	and    $0x1,%eax
    cf4a:	83 e2 01             	and    $0x1,%edx
    cf4d:	38 d0                	cmp    %dl,%al
    cf4f:	0f 85 a3 01 00 00    	jne    d0f8 <alu_test_shr+0x508>
    cf55:	83 ec 04             	sub    $0x4,%esp
    cf58:	6a 20                	push   $0x20
    cf5a:	56                   	push   %esi
    cf5b:	57                   	push   %edi
    cf5c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    cf60:	e8 ab 2d 00 00       	call   fd10 <alu_shr>
    cf65:	89 f9                	mov    %edi,%ecx
    cf67:	83 c4 10             	add    $0x10,%esp
    cf6a:	89 c3                	mov    %eax,%ebx
    cf6c:	89 f0                	mov    %esi,%eax
    cf6e:	d3 e8                	shr    %cl,%eax
    cf70:	9c                   	pushf  
    cf71:	5a                   	pop    %edx
    cf72:	39 c3                	cmp    %eax,%ebx
    cf74:	0f 85 69 01 00 00    	jne    d0e3 <alu_test_shr+0x4f3>
    cf7a:	8b 44 24 10          	mov    0x10(%esp),%eax
    cf7e:	89 d1                	mov    %edx,%ecx
    cf80:	83 e1 01             	and    $0x1,%ecx
    cf83:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    cf87:	89 c3                	mov    %eax,%ebx
    cf89:	83 e3 01             	and    $0x1,%ebx
    cf8c:	38 cb                	cmp    %cl,%bl
    cf8e:	0f 85 2c 01 00 00    	jne    d0c0 <alu_test_shr+0x4d0>
    cf94:	89 c3                	mov    %eax,%ebx
    cf96:	89 d1                	mov    %edx,%ecx
    cf98:	c0 eb 02             	shr    $0x2,%bl
    cf9b:	c1 e9 02             	shr    $0x2,%ecx
    cf9e:	83 e3 01             	and    $0x1,%ebx
    cfa1:	83 e1 01             	and    $0x1,%ecx
    cfa4:	38 cb                	cmp    %cl,%bl
    cfa6:	0f 85 f1 00 00 00    	jne    d09d <alu_test_shr+0x4ad>
    cfac:	89 c3                	mov    %eax,%ebx
    cfae:	89 d1                	mov    %edx,%ecx
    cfb0:	c0 eb 07             	shr    $0x7,%bl
    cfb3:	c0 e9 07             	shr    $0x7,%cl
    cfb6:	38 cb                	cmp    %cl,%bl
    cfb8:	0f 85 bc 00 00 00    	jne    d07a <alu_test_shr+0x48a>
    cfbe:	c0 e8 06             	shr    $0x6,%al
    cfc1:	c1 ea 06             	shr    $0x6,%edx
    cfc4:	83 e0 01             	and    $0x1,%eax
    cfc7:	83 e2 01             	and    $0x1,%edx
    cfca:	38 d0                	cmp    %dl,%al
    cfcc:	0f 85 85 00 00 00    	jne    d057 <alu_test_shr+0x467>
    cfd2:	83 c5 04             	add    $0x4,%ebp
    cfd5:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
    cfd9:	74 0d                	je     cfe8 <alu_test_shr+0x3f8>
    cfdb:	8b 7d 00             	mov    0x0(%ebp),%edi
    cfde:	e9 66 fe ff ff       	jmp    ce49 <alu_test_shr+0x259>
    cfe3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cfe7:	90                   	nop
    cfe8:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    cfed:	0f 85 4d fe ff ff    	jne    ce40 <alu_test_shr+0x250>
    cff3:	83 ec 0c             	sub    $0xc,%esp
    cff6:	8b 7c 24 18          	mov    0x18(%esp),%edi
    cffa:	8d 87 1c 72 fe ff    	lea    -0x18de4(%edi),%eax
    d000:	89 fb                	mov    %edi,%ebx
    d002:	50                   	push   %eax
    d003:	e8 a8 72 ff ff       	call   42b0 <puts@plt>
    d008:	e8 f3 d7 01 00       	call   2a800 <get_ref>
    d00d:	83 c4 10             	add    $0x10,%esp
    d010:	85 c0                	test   %eax,%eax
    d012:	75 08                	jne    d01c <alu_test_shr+0x42c>
    d014:	83 c4 4c             	add    $0x4c,%esp
    d017:	5b                   	pop    %ebx
    d018:	5e                   	pop    %esi
    d019:	5f                   	pop    %edi
    d01a:	5d                   	pop    %ebp
    d01b:	c3                   	ret    
    d01c:	83 ec 0c             	sub    $0xc,%esp
    d01f:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    d023:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    d029:	50                   	push   %eax
    d02a:	e8 81 72 ff ff       	call   42b0 <puts@plt>
    d02f:	83 c4 10             	add    $0x10,%esp
    d032:	eb e0                	jmp    d014 <alu_test_shr+0x424>
    d034:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d038:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d03e:	50                   	push   %eax
    d03f:	68 81 01 00 00       	push   $0x181
    d044:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d04a:	50                   	push   %eax
    d04b:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    d051:	50                   	push   %eax
    d052:	e8 b9 72 ff ff       	call   4310 <__assert_fail@plt>
    d057:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d05b:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d061:	50                   	push   %eax
    d062:	68 83 01 00 00       	push   $0x183
    d067:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d06d:	50                   	push   %eax
    d06e:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    d074:	50                   	push   %eax
    d075:	e8 96 72 ff ff       	call   4310 <__assert_fail@plt>
    d07a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d07e:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d084:	50                   	push   %eax
    d085:	68 83 01 00 00       	push   $0x183
    d08a:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d090:	50                   	push   %eax
    d091:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    d097:	50                   	push   %eax
    d098:	e8 73 72 ff ff       	call   4310 <__assert_fail@plt>
    d09d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d0a1:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d0a7:	50                   	push   %eax
    d0a8:	68 83 01 00 00       	push   $0x183
    d0ad:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d0b3:	50                   	push   %eax
    d0b4:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    d0ba:	50                   	push   %eax
    d0bb:	e8 50 72 ff ff       	call   4310 <__assert_fail@plt>
    d0c0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d0c4:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d0ca:	50                   	push   %eax
    d0cb:	68 83 01 00 00       	push   $0x183
    d0d0:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d0d6:	50                   	push   %eax
    d0d7:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    d0dd:	50                   	push   %eax
    d0de:	e8 2d 72 ff ff       	call   4310 <__assert_fail@plt>
    d0e3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d0e7:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d0ed:	50                   	push   %eax
    d0ee:	68 83 01 00 00       	push   $0x183
    d0f3:	e9 4c ff ff ff       	jmp    d044 <alu_test_shr+0x454>
    d0f8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d0fc:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d102:	50                   	push   %eax
    d103:	68 82 01 00 00       	push   $0x182
    d108:	e9 5a ff ff ff       	jmp    d067 <alu_test_shr+0x477>
    d10d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d111:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d117:	50                   	push   %eax
    d118:	68 82 01 00 00       	push   $0x182
    d11d:	e9 68 ff ff ff       	jmp    d08a <alu_test_shr+0x49a>
    d122:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d126:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d12c:	50                   	push   %eax
    d12d:	68 82 01 00 00       	push   $0x182
    d132:	e9 76 ff ff ff       	jmp    d0ad <alu_test_shr+0x4bd>
    d137:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d13b:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d141:	50                   	push   %eax
    d142:	68 82 01 00 00       	push   $0x182
    d147:	eb 87                	jmp    d0d0 <alu_test_shr+0x4e0>
    d149:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d14d:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d153:	50                   	push   %eax
    d154:	68 82 01 00 00       	push   $0x182
    d159:	e9 e6 fe ff ff       	jmp    d044 <alu_test_shr+0x454>
    d15e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d162:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d168:	50                   	push   %eax
    d169:	68 81 01 00 00       	push   $0x181
    d16e:	e9 f4 fe ff ff       	jmp    d067 <alu_test_shr+0x477>
    d173:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d177:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d17d:	50                   	push   %eax
    d17e:	68 81 01 00 00       	push   $0x181
    d183:	e9 02 ff ff ff       	jmp    d08a <alu_test_shr+0x49a>
    d188:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d18c:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d192:	50                   	push   %eax
    d193:	68 81 01 00 00       	push   $0x181
    d198:	e9 10 ff ff ff       	jmp    d0ad <alu_test_shr+0x4bd>
    d19d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d1a1:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d1a7:	50                   	push   %eax
    d1a8:	68 81 01 00 00       	push   $0x181
    d1ad:	e9 1e ff ff ff       	jmp    d0d0 <alu_test_shr+0x4e0>
    d1b2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d1b6:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d1bc:	50                   	push   %eax
    d1bd:	68 78 01 00 00       	push   $0x178
    d1c2:	e9 c3 fe ff ff       	jmp    d08a <alu_test_shr+0x49a>
    d1c7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d1cb:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d1d1:	50                   	push   %eax
    d1d2:	68 76 01 00 00       	push   $0x176
    d1d7:	e9 68 fe ff ff       	jmp    d044 <alu_test_shr+0x454>
    d1dc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d1e0:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d1e6:	50                   	push   %eax
    d1e7:	68 78 01 00 00       	push   $0x178
    d1ec:	e9 76 fe ff ff       	jmp    d067 <alu_test_shr+0x477>
    d1f1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d1f5:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d1fb:	50                   	push   %eax
    d1fc:	68 78 01 00 00       	push   $0x178
    d201:	e9 a7 fe ff ff       	jmp    d0ad <alu_test_shr+0x4bd>
    d206:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d20a:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d210:	50                   	push   %eax
    d211:	68 78 01 00 00       	push   $0x178
    d216:	e9 b5 fe ff ff       	jmp    d0d0 <alu_test_shr+0x4e0>
    d21b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d21f:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d225:	50                   	push   %eax
    d226:	68 78 01 00 00       	push   $0x178
    d22b:	e9 14 fe ff ff       	jmp    d044 <alu_test_shr+0x454>
    d230:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d234:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d23a:	50                   	push   %eax
    d23b:	68 77 01 00 00       	push   $0x177
    d240:	e9 22 fe ff ff       	jmp    d067 <alu_test_shr+0x477>
    d245:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d249:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d24f:	50                   	push   %eax
    d250:	68 77 01 00 00       	push   $0x177
    d255:	e9 30 fe ff ff       	jmp    d08a <alu_test_shr+0x49a>
    d25a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d25e:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d264:	50                   	push   %eax
    d265:	68 77 01 00 00       	push   $0x177
    d26a:	e9 3e fe ff ff       	jmp    d0ad <alu_test_shr+0x4bd>
    d26f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d273:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d279:	50                   	push   %eax
    d27a:	68 77 01 00 00       	push   $0x177
    d27f:	e9 4c fe ff ff       	jmp    d0d0 <alu_test_shr+0x4e0>
    d284:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d288:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d28e:	50                   	push   %eax
    d28f:	68 77 01 00 00       	push   $0x177
    d294:	e9 ab fd ff ff       	jmp    d044 <alu_test_shr+0x454>
    d299:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d29d:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d2a3:	50                   	push   %eax
    d2a4:	68 76 01 00 00       	push   $0x176
    d2a9:	e9 b9 fd ff ff       	jmp    d067 <alu_test_shr+0x477>
    d2ae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d2b2:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d2b8:	50                   	push   %eax
    d2b9:	68 76 01 00 00       	push   $0x176
    d2be:	e9 c7 fd ff ff       	jmp    d08a <alu_test_shr+0x49a>
    d2c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d2c7:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d2cd:	50                   	push   %eax
    d2ce:	68 76 01 00 00       	push   $0x176
    d2d3:	e9 d5 fd ff ff       	jmp    d0ad <alu_test_shr+0x4bd>
    d2d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d2dc:	8d 83 d0 5f fe ff    	lea    -0x1a030(%ebx),%eax
    d2e2:	50                   	push   %eax
    d2e3:	68 76 01 00 00       	push   $0x176
    d2e8:	e9 e3 fd ff ff       	jmp    d0d0 <alu_test_shr+0x4e0>
    d2ed:	8d 76 00             	lea    0x0(%esi),%esi

0000d2f0 <alu_test_sal>:
    d2f0:	e8 e2 8f ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    d2f5:	05 0b 1d 04 00       	add    $0x41d0b,%eax
    d2fa:	55                   	push   %ebp
    d2fb:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    d300:	57                   	push   %edi
    d301:	56                   	push   %esi
    d302:	53                   	push   %ebx
    d303:	83 ec 4c             	sub    $0x4c,%esp
    d306:	8d 74 24 24          	lea    0x24(%esp),%esi
    d30a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    d30e:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
    d314:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    d318:	8d 74 24 30          	lea    0x30(%esp),%esi
    d31c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
    d323:	00 
    d324:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
    d32b:	00 
    d32c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
    d333:	00 
    d334:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
    d33b:	00 
    d33c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
    d343:	ff 
    d344:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    d34b:	00 
    d34c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
    d353:	10 
    d354:	89 74 24 18          	mov    %esi,0x18(%esp)
    d358:	89 44 24 10          	mov    %eax,0x10(%esp)
    d35c:	8d 44 24 40          	lea    0x40(%esp),%eax
    d360:	8b 7c 24 18          	mov    0x18(%esp),%edi
    d364:	be 01 00 00 00       	mov    $0x1,%esi
    d369:	89 44 24 14          	mov    %eax,0x14(%esp)
    d36d:	83 ec 04             	sub    $0x4,%esp
    d370:	6a 08                	push   $0x8
    d372:	55                   	push   %ebp
    d373:	56                   	push   %esi
    d374:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    d378:	e8 73 2c 00 00       	call   fff0 <alu_sal>
    d37d:	89 f1                	mov    %esi,%ecx
    d37f:	83 c4 10             	add    $0x10,%esp
    d382:	89 c3                	mov    %eax,%ebx
    d384:	89 e8                	mov    %ebp,%eax
    d386:	d2 e0                	shl    %cl,%al
    d388:	9c                   	pushf  
    d389:	5a                   	pop    %edx
    d38a:	0f b6 c0             	movzbl %al,%eax
    d38d:	39 c3                	cmp    %eax,%ebx
    d38f:	0f 85 32 05 00 00    	jne    d8c7 <alu_test_sal+0x5d7>
    d395:	8b 44 24 10          	mov    0x10(%esp),%eax
    d399:	89 d1                	mov    %edx,%ecx
    d39b:	83 e1 01             	and    $0x1,%ecx
    d39e:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    d3a2:	89 c3                	mov    %eax,%ebx
    d3a4:	83 e3 01             	and    $0x1,%ebx
    d3a7:	38 cb                	cmp    %cl,%bl
    d3a9:	0f 85 29 06 00 00    	jne    d9d8 <alu_test_sal+0x6e8>
    d3af:	89 c3                	mov    %eax,%ebx
    d3b1:	89 d1                	mov    %edx,%ecx
    d3b3:	c0 eb 02             	shr    $0x2,%bl
    d3b6:	c1 e9 02             	shr    $0x2,%ecx
    d3b9:	83 e3 01             	and    $0x1,%ebx
    d3bc:	83 e1 01             	and    $0x1,%ecx
    d3bf:	38 cb                	cmp    %cl,%bl
    d3c1:	0f 85 fc 05 00 00    	jne    d9c3 <alu_test_sal+0x6d3>
    d3c7:	89 c3                	mov    %eax,%ebx
    d3c9:	89 d1                	mov    %edx,%ecx
    d3cb:	c0 eb 07             	shr    $0x7,%bl
    d3ce:	c0 e9 07             	shr    $0x7,%cl
    d3d1:	38 cb                	cmp    %cl,%bl
    d3d3:	0f 85 d5 05 00 00    	jne    d9ae <alu_test_sal+0x6be>
    d3d9:	c0 e8 06             	shr    $0x6,%al
    d3dc:	c1 ea 06             	shr    $0x6,%edx
    d3df:	83 e0 01             	and    $0x1,%eax
    d3e2:	83 e2 01             	and    $0x1,%edx
    d3e5:	38 d0                	cmp    %dl,%al
    d3e7:	0f 85 ac 05 00 00    	jne    d999 <alu_test_sal+0x6a9>
    d3ed:	83 ec 04             	sub    $0x4,%esp
    d3f0:	6a 10                	push   $0x10
    d3f2:	55                   	push   %ebp
    d3f3:	56                   	push   %esi
    d3f4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    d3f8:	e8 f3 2b 00 00       	call   fff0 <alu_sal>
    d3fd:	89 f1                	mov    %esi,%ecx
    d3ff:	83 c4 10             	add    $0x10,%esp
    d402:	89 c3                	mov    %eax,%ebx
    d404:	89 e8                	mov    %ebp,%eax
    d406:	66 d3 e0             	shl    %cl,%ax
    d409:	9c                   	pushf  
    d40a:	5a                   	pop    %edx
    d40b:	0f b7 c0             	movzwl %ax,%eax
    d40e:	39 c3                	cmp    %eax,%ebx
    d410:	0f 85 6e 05 00 00    	jne    d984 <alu_test_sal+0x694>
    d416:	8b 44 24 10          	mov    0x10(%esp),%eax
    d41a:	89 d1                	mov    %edx,%ecx
    d41c:	83 e1 01             	and    $0x1,%ecx
    d41f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    d423:	89 c3                	mov    %eax,%ebx
    d425:	83 e3 01             	and    $0x1,%ebx
    d428:	38 cb                	cmp    %cl,%bl
    d42a:	0f 85 3f 05 00 00    	jne    d96f <alu_test_sal+0x67f>
    d430:	89 c3                	mov    %eax,%ebx
    d432:	89 d1                	mov    %edx,%ecx
    d434:	c0 eb 02             	shr    $0x2,%bl
    d437:	c1 e9 02             	shr    $0x2,%ecx
    d43a:	83 e3 01             	and    $0x1,%ebx
    d43d:	83 e1 01             	and    $0x1,%ecx
    d440:	38 cb                	cmp    %cl,%bl
    d442:	0f 85 12 05 00 00    	jne    d95a <alu_test_sal+0x66a>
    d448:	89 c3                	mov    %eax,%ebx
    d44a:	89 d1                	mov    %edx,%ecx
    d44c:	c0 eb 07             	shr    $0x7,%bl
    d44f:	c0 e9 07             	shr    $0x7,%cl
    d452:	38 cb                	cmp    %cl,%bl
    d454:	0f 85 eb 04 00 00    	jne    d945 <alu_test_sal+0x655>
    d45a:	c0 e8 06             	shr    $0x6,%al
    d45d:	c1 ea 06             	shr    $0x6,%edx
    d460:	83 e0 01             	and    $0x1,%eax
    d463:	83 e2 01             	and    $0x1,%edx
    d466:	38 d0                	cmp    %dl,%al
    d468:	0f 85 c2 04 00 00    	jne    d930 <alu_test_sal+0x640>
    d46e:	83 ec 04             	sub    $0x4,%esp
    d471:	6a 20                	push   $0x20
    d473:	55                   	push   %ebp
    d474:	56                   	push   %esi
    d475:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    d479:	e8 72 2b 00 00       	call   fff0 <alu_sal>
    d47e:	89 f1                	mov    %esi,%ecx
    d480:	83 c4 10             	add    $0x10,%esp
    d483:	89 c3                	mov    %eax,%ebx
    d485:	89 e8                	mov    %ebp,%eax
    d487:	d3 e0                	shl    %cl,%eax
    d489:	9c                   	pushf  
    d48a:	5a                   	pop    %edx
    d48b:	39 c3                	cmp    %eax,%ebx
    d48d:	0f 85 88 04 00 00    	jne    d91b <alu_test_sal+0x62b>
    d493:	8b 44 24 10          	mov    0x10(%esp),%eax
    d497:	89 d1                	mov    %edx,%ecx
    d499:	83 e1 01             	and    $0x1,%ecx
    d49c:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    d4a0:	89 c3                	mov    %eax,%ebx
    d4a2:	83 e3 01             	and    $0x1,%ebx
    d4a5:	38 cb                	cmp    %cl,%bl
    d4a7:	0f 85 59 04 00 00    	jne    d906 <alu_test_sal+0x616>
    d4ad:	89 c3                	mov    %eax,%ebx
    d4af:	89 d1                	mov    %edx,%ecx
    d4b1:	c0 eb 02             	shr    $0x2,%bl
    d4b4:	c1 e9 02             	shr    $0x2,%ecx
    d4b7:	83 e3 01             	and    $0x1,%ebx
    d4ba:	83 e1 01             	and    $0x1,%ecx
    d4bd:	38 cb                	cmp    %cl,%bl
    d4bf:	0f 85 2c 04 00 00    	jne    d8f1 <alu_test_sal+0x601>
    d4c5:	89 c3                	mov    %eax,%ebx
    d4c7:	89 d1                	mov    %edx,%ecx
    d4c9:	c0 eb 07             	shr    $0x7,%bl
    d4cc:	c0 e9 07             	shr    $0x7,%cl
    d4cf:	38 cb                	cmp    %cl,%bl
    d4d1:	0f 85 db 03 00 00    	jne    d8b2 <alu_test_sal+0x5c2>
    d4d7:	c0 e8 06             	shr    $0x6,%al
    d4da:	c1 ea 06             	shr    $0x6,%edx
    d4dd:	83 e0 01             	and    $0x1,%eax
    d4e0:	83 e2 01             	and    $0x1,%edx
    d4e3:	38 d0                	cmp    %dl,%al
    d4e5:	0f 85 f1 03 00 00    	jne    d8dc <alu_test_sal+0x5ec>
    d4eb:	83 c7 04             	add    $0x4,%edi
    d4ee:	3b 7c 24 14          	cmp    0x14(%esp),%edi
    d4f2:	74 0c                	je     d500 <alu_test_sal+0x210>
    d4f4:	8b 37                	mov    (%edi),%esi
    d4f6:	e9 72 fe ff ff       	jmp    d36d <alu_test_sal+0x7d>
    d4fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d4ff:	90                   	nop
    d500:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
    d505:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    d509:	3b 44 24 18          	cmp    0x18(%esp),%eax
    d50d:	74 07                	je     d516 <alu_test_sal+0x226>
    d50f:	8b 28                	mov    (%eax),%ebp
    d511:	e9 46 fe ff ff       	jmp    d35c <alu_test_sal+0x6c>
    d516:	83 ec 0c             	sub    $0xc,%esp
    d519:	6a 00                	push   $0x0
    d51b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    d51f:	89 f3                	mov    %esi,%ebx
    d521:	e8 0a 6c ff ff       	call   4130 <time@plt>
    d526:	89 04 24             	mov    %eax,(%esp)
    d529:	e8 62 6c ff ff       	call   4190 <srand@plt>
    d52e:	83 c4 10             	add    $0x10,%esp
    d531:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    d538:	00 
    d539:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d540:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    d544:	bf 01 00 00 00       	mov    $0x1,%edi
    d549:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d54d:	e8 9e 6c ff ff       	call   41f0 <rand@plt>
    d552:	83 ec 04             	sub    $0x4,%esp
    d555:	6a 08                	push   $0x8
    d557:	89 c6                	mov    %eax,%esi
    d559:	50                   	push   %eax
    d55a:	57                   	push   %edi
    d55b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    d55f:	e8 8c 2a 00 00       	call   fff0 <alu_sal>
    d564:	89 f9                	mov    %edi,%ecx
    d566:	83 c4 10             	add    $0x10,%esp
    d569:	89 c3                	mov    %eax,%ebx
    d56b:	89 f0                	mov    %esi,%eax
    d56d:	d2 e0                	shl    %cl,%al
    d56f:	9c                   	pushf  
    d570:	5a                   	pop    %edx
    d571:	0f b6 c0             	movzbl %al,%eax
    d574:	39 c3                	cmp    %eax,%ebx
    d576:	0f 85 b8 01 00 00    	jne    d734 <alu_test_sal+0x444>
    d57c:	8b 44 24 10          	mov    0x10(%esp),%eax
    d580:	89 d1                	mov    %edx,%ecx
    d582:	83 e1 01             	and    $0x1,%ecx
    d585:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    d589:	89 c3                	mov    %eax,%ebx
    d58b:	83 e3 01             	and    $0x1,%ebx
    d58e:	38 cb                	cmp    %cl,%bl
    d590:	0f 85 07 03 00 00    	jne    d89d <alu_test_sal+0x5ad>
    d596:	89 c3                	mov    %eax,%ebx
    d598:	89 d1                	mov    %edx,%ecx
    d59a:	c0 eb 02             	shr    $0x2,%bl
    d59d:	c1 e9 02             	shr    $0x2,%ecx
    d5a0:	83 e3 01             	and    $0x1,%ebx
    d5a3:	83 e1 01             	and    $0x1,%ecx
    d5a6:	38 cb                	cmp    %cl,%bl
    d5a8:	0f 85 da 02 00 00    	jne    d888 <alu_test_sal+0x598>
    d5ae:	89 c3                	mov    %eax,%ebx
    d5b0:	89 d1                	mov    %edx,%ecx
    d5b2:	c0 eb 07             	shr    $0x7,%bl
    d5b5:	c0 e9 07             	shr    $0x7,%cl
    d5b8:	38 cb                	cmp    %cl,%bl
    d5ba:	0f 85 b3 02 00 00    	jne    d873 <alu_test_sal+0x583>
    d5c0:	c0 e8 06             	shr    $0x6,%al
    d5c3:	c1 ea 06             	shr    $0x6,%edx
    d5c6:	83 e0 01             	and    $0x1,%eax
    d5c9:	83 e2 01             	and    $0x1,%edx
    d5cc:	38 d0                	cmp    %dl,%al
    d5ce:	0f 85 8a 02 00 00    	jne    d85e <alu_test_sal+0x56e>
    d5d4:	83 ec 04             	sub    $0x4,%esp
    d5d7:	6a 10                	push   $0x10
    d5d9:	56                   	push   %esi
    d5da:	57                   	push   %edi
    d5db:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    d5df:	e8 0c 2a 00 00       	call   fff0 <alu_sal>
    d5e4:	89 f9                	mov    %edi,%ecx
    d5e6:	83 c4 10             	add    $0x10,%esp
    d5e9:	89 c3                	mov    %eax,%ebx
    d5eb:	89 f0                	mov    %esi,%eax
    d5ed:	66 d3 e0             	shl    %cl,%ax
    d5f0:	9c                   	pushf  
    d5f1:	5a                   	pop    %edx
    d5f2:	0f b7 c0             	movzwl %ax,%eax
    d5f5:	39 c3                	cmp    %eax,%ebx
    d5f7:	0f 85 4c 02 00 00    	jne    d849 <alu_test_sal+0x559>
    d5fd:	8b 44 24 10          	mov    0x10(%esp),%eax
    d601:	89 d1                	mov    %edx,%ecx
    d603:	83 e1 01             	and    $0x1,%ecx
    d606:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    d60a:	89 c3                	mov    %eax,%ebx
    d60c:	83 e3 01             	and    $0x1,%ebx
    d60f:	38 cb                	cmp    %cl,%bl
    d611:	0f 85 20 02 00 00    	jne    d837 <alu_test_sal+0x547>
    d617:	89 c3                	mov    %eax,%ebx
    d619:	89 d1                	mov    %edx,%ecx
    d61b:	c0 eb 02             	shr    $0x2,%bl
    d61e:	c1 e9 02             	shr    $0x2,%ecx
    d621:	83 e3 01             	and    $0x1,%ebx
    d624:	83 e1 01             	and    $0x1,%ecx
    d627:	38 cb                	cmp    %cl,%bl
    d629:	0f 85 f3 01 00 00    	jne    d822 <alu_test_sal+0x532>
    d62f:	89 c3                	mov    %eax,%ebx
    d631:	89 d1                	mov    %edx,%ecx
    d633:	c0 eb 07             	shr    $0x7,%bl
    d636:	c0 e9 07             	shr    $0x7,%cl
    d639:	38 cb                	cmp    %cl,%bl
    d63b:	0f 85 cc 01 00 00    	jne    d80d <alu_test_sal+0x51d>
    d641:	c0 e8 06             	shr    $0x6,%al
    d644:	c1 ea 06             	shr    $0x6,%edx
    d647:	83 e0 01             	and    $0x1,%eax
    d64a:	83 e2 01             	and    $0x1,%edx
    d64d:	38 d0                	cmp    %dl,%al
    d64f:	0f 85 a3 01 00 00    	jne    d7f8 <alu_test_sal+0x508>
    d655:	83 ec 04             	sub    $0x4,%esp
    d658:	6a 20                	push   $0x20
    d65a:	56                   	push   %esi
    d65b:	57                   	push   %edi
    d65c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    d660:	e8 8b 29 00 00       	call   fff0 <alu_sal>
    d665:	89 f9                	mov    %edi,%ecx
    d667:	83 c4 10             	add    $0x10,%esp
    d66a:	89 c3                	mov    %eax,%ebx
    d66c:	89 f0                	mov    %esi,%eax
    d66e:	d3 e0                	shl    %cl,%eax
    d670:	9c                   	pushf  
    d671:	5a                   	pop    %edx
    d672:	39 c3                	cmp    %eax,%ebx
    d674:	0f 85 69 01 00 00    	jne    d7e3 <alu_test_sal+0x4f3>
    d67a:	8b 44 24 10          	mov    0x10(%esp),%eax
    d67e:	89 d1                	mov    %edx,%ecx
    d680:	83 e1 01             	and    $0x1,%ecx
    d683:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    d687:	89 c3                	mov    %eax,%ebx
    d689:	83 e3 01             	and    $0x1,%ebx
    d68c:	38 cb                	cmp    %cl,%bl
    d68e:	0f 85 2c 01 00 00    	jne    d7c0 <alu_test_sal+0x4d0>
    d694:	89 c3                	mov    %eax,%ebx
    d696:	89 d1                	mov    %edx,%ecx
    d698:	c0 eb 02             	shr    $0x2,%bl
    d69b:	c1 e9 02             	shr    $0x2,%ecx
    d69e:	83 e3 01             	and    $0x1,%ebx
    d6a1:	83 e1 01             	and    $0x1,%ecx
    d6a4:	38 cb                	cmp    %cl,%bl
    d6a6:	0f 85 f1 00 00 00    	jne    d79d <alu_test_sal+0x4ad>
    d6ac:	89 c3                	mov    %eax,%ebx
    d6ae:	89 d1                	mov    %edx,%ecx
    d6b0:	c0 eb 07             	shr    $0x7,%bl
    d6b3:	c0 e9 07             	shr    $0x7,%cl
    d6b6:	38 cb                	cmp    %cl,%bl
    d6b8:	0f 85 bc 00 00 00    	jne    d77a <alu_test_sal+0x48a>
    d6be:	c0 e8 06             	shr    $0x6,%al
    d6c1:	c1 ea 06             	shr    $0x6,%edx
    d6c4:	83 e0 01             	and    $0x1,%eax
    d6c7:	83 e2 01             	and    $0x1,%edx
    d6ca:	38 d0                	cmp    %dl,%al
    d6cc:	0f 85 85 00 00 00    	jne    d757 <alu_test_sal+0x467>
    d6d2:	83 c5 04             	add    $0x4,%ebp
    d6d5:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
    d6d9:	74 0d                	je     d6e8 <alu_test_sal+0x3f8>
    d6db:	8b 7d 00             	mov    0x0(%ebp),%edi
    d6de:	e9 66 fe ff ff       	jmp    d549 <alu_test_sal+0x259>
    d6e3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d6e7:	90                   	nop
    d6e8:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    d6ed:	0f 85 4d fe ff ff    	jne    d540 <alu_test_sal+0x250>
    d6f3:	83 ec 0c             	sub    $0xc,%esp
    d6f6:	8b 7c 24 18          	mov    0x18(%esp),%edi
    d6fa:	8d 87 44 72 fe ff    	lea    -0x18dbc(%edi),%eax
    d700:	89 fb                	mov    %edi,%ebx
    d702:	50                   	push   %eax
    d703:	e8 a8 6b ff ff       	call   42b0 <puts@plt>
    d708:	e8 f3 d0 01 00       	call   2a800 <get_ref>
    d70d:	83 c4 10             	add    $0x10,%esp
    d710:	85 c0                	test   %eax,%eax
    d712:	75 08                	jne    d71c <alu_test_sal+0x42c>
    d714:	83 c4 4c             	add    $0x4c,%esp
    d717:	5b                   	pop    %ebx
    d718:	5e                   	pop    %esi
    d719:	5f                   	pop    %edi
    d71a:	5d                   	pop    %ebp
    d71b:	c3                   	ret    
    d71c:	83 ec 0c             	sub    $0xc,%esp
    d71f:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    d723:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    d729:	50                   	push   %eax
    d72a:	e8 81 6b ff ff       	call   42b0 <puts@plt>
    d72f:	83 c4 10             	add    $0x10,%esp
    d732:	eb e0                	jmp    d714 <alu_test_sal+0x424>
    d734:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d738:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d73e:	50                   	push   %eax
    d73f:	68 a0 01 00 00       	push   $0x1a0
    d744:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d74a:	50                   	push   %eax
    d74b:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    d751:	50                   	push   %eax
    d752:	e8 b9 6b ff ff       	call   4310 <__assert_fail@plt>
    d757:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d75b:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d761:	50                   	push   %eax
    d762:	68 a2 01 00 00       	push   $0x1a2
    d767:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d76d:	50                   	push   %eax
    d76e:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    d774:	50                   	push   %eax
    d775:	e8 96 6b ff ff       	call   4310 <__assert_fail@plt>
    d77a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d77e:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d784:	50                   	push   %eax
    d785:	68 a2 01 00 00       	push   $0x1a2
    d78a:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d790:	50                   	push   %eax
    d791:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    d797:	50                   	push   %eax
    d798:	e8 73 6b ff ff       	call   4310 <__assert_fail@plt>
    d79d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d7a1:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d7a7:	50                   	push   %eax
    d7a8:	68 a2 01 00 00       	push   $0x1a2
    d7ad:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d7b3:	50                   	push   %eax
    d7b4:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    d7ba:	50                   	push   %eax
    d7bb:	e8 50 6b ff ff       	call   4310 <__assert_fail@plt>
    d7c0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d7c4:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d7ca:	50                   	push   %eax
    d7cb:	68 a2 01 00 00       	push   $0x1a2
    d7d0:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    d7d6:	50                   	push   %eax
    d7d7:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    d7dd:	50                   	push   %eax
    d7de:	e8 2d 6b ff ff       	call   4310 <__assert_fail@plt>
    d7e3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d7e7:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d7ed:	50                   	push   %eax
    d7ee:	68 a2 01 00 00       	push   $0x1a2
    d7f3:	e9 4c ff ff ff       	jmp    d744 <alu_test_sal+0x454>
    d7f8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d7fc:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d802:	50                   	push   %eax
    d803:	68 a1 01 00 00       	push   $0x1a1
    d808:	e9 5a ff ff ff       	jmp    d767 <alu_test_sal+0x477>
    d80d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d811:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d817:	50                   	push   %eax
    d818:	68 a1 01 00 00       	push   $0x1a1
    d81d:	e9 68 ff ff ff       	jmp    d78a <alu_test_sal+0x49a>
    d822:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d826:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d82c:	50                   	push   %eax
    d82d:	68 a1 01 00 00       	push   $0x1a1
    d832:	e9 76 ff ff ff       	jmp    d7ad <alu_test_sal+0x4bd>
    d837:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d83b:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d841:	50                   	push   %eax
    d842:	68 a1 01 00 00       	push   $0x1a1
    d847:	eb 87                	jmp    d7d0 <alu_test_sal+0x4e0>
    d849:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d84d:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d853:	50                   	push   %eax
    d854:	68 a1 01 00 00       	push   $0x1a1
    d859:	e9 e6 fe ff ff       	jmp    d744 <alu_test_sal+0x454>
    d85e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d862:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d868:	50                   	push   %eax
    d869:	68 a0 01 00 00       	push   $0x1a0
    d86e:	e9 f4 fe ff ff       	jmp    d767 <alu_test_sal+0x477>
    d873:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d877:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d87d:	50                   	push   %eax
    d87e:	68 a0 01 00 00       	push   $0x1a0
    d883:	e9 02 ff ff ff       	jmp    d78a <alu_test_sal+0x49a>
    d888:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d88c:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d892:	50                   	push   %eax
    d893:	68 a0 01 00 00       	push   $0x1a0
    d898:	e9 10 ff ff ff       	jmp    d7ad <alu_test_sal+0x4bd>
    d89d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d8a1:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d8a7:	50                   	push   %eax
    d8a8:	68 a0 01 00 00       	push   $0x1a0
    d8ad:	e9 1e ff ff ff       	jmp    d7d0 <alu_test_sal+0x4e0>
    d8b2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d8b6:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d8bc:	50                   	push   %eax
    d8bd:	68 97 01 00 00       	push   $0x197
    d8c2:	e9 c3 fe ff ff       	jmp    d78a <alu_test_sal+0x49a>
    d8c7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d8cb:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d8d1:	50                   	push   %eax
    d8d2:	68 95 01 00 00       	push   $0x195
    d8d7:	e9 68 fe ff ff       	jmp    d744 <alu_test_sal+0x454>
    d8dc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d8e0:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d8e6:	50                   	push   %eax
    d8e7:	68 97 01 00 00       	push   $0x197
    d8ec:	e9 76 fe ff ff       	jmp    d767 <alu_test_sal+0x477>
    d8f1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d8f5:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d8fb:	50                   	push   %eax
    d8fc:	68 97 01 00 00       	push   $0x197
    d901:	e9 a7 fe ff ff       	jmp    d7ad <alu_test_sal+0x4bd>
    d906:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d90a:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d910:	50                   	push   %eax
    d911:	68 97 01 00 00       	push   $0x197
    d916:	e9 b5 fe ff ff       	jmp    d7d0 <alu_test_sal+0x4e0>
    d91b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d91f:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d925:	50                   	push   %eax
    d926:	68 97 01 00 00       	push   $0x197
    d92b:	e9 14 fe ff ff       	jmp    d744 <alu_test_sal+0x454>
    d930:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d934:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d93a:	50                   	push   %eax
    d93b:	68 96 01 00 00       	push   $0x196
    d940:	e9 22 fe ff ff       	jmp    d767 <alu_test_sal+0x477>
    d945:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d949:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d94f:	50                   	push   %eax
    d950:	68 96 01 00 00       	push   $0x196
    d955:	e9 30 fe ff ff       	jmp    d78a <alu_test_sal+0x49a>
    d95a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d95e:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d964:	50                   	push   %eax
    d965:	68 96 01 00 00       	push   $0x196
    d96a:	e9 3e fe ff ff       	jmp    d7ad <alu_test_sal+0x4bd>
    d96f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d973:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d979:	50                   	push   %eax
    d97a:	68 96 01 00 00       	push   $0x196
    d97f:	e9 4c fe ff ff       	jmp    d7d0 <alu_test_sal+0x4e0>
    d984:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d988:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d98e:	50                   	push   %eax
    d98f:	68 96 01 00 00       	push   $0x196
    d994:	e9 ab fd ff ff       	jmp    d744 <alu_test_sal+0x454>
    d999:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d99d:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d9a3:	50                   	push   %eax
    d9a4:	68 95 01 00 00       	push   $0x195
    d9a9:	e9 b9 fd ff ff       	jmp    d767 <alu_test_sal+0x477>
    d9ae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d9b2:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d9b8:	50                   	push   %eax
    d9b9:	68 95 01 00 00       	push   $0x195
    d9be:	e9 c7 fd ff ff       	jmp    d78a <alu_test_sal+0x49a>
    d9c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d9c7:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d9cd:	50                   	push   %eax
    d9ce:	68 95 01 00 00       	push   $0x195
    d9d3:	e9 d5 fd ff ff       	jmp    d7ad <alu_test_sal+0x4bd>
    d9d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    d9dc:	8d 83 c0 5f fe ff    	lea    -0x1a040(%ebx),%eax
    d9e2:	50                   	push   %eax
    d9e3:	68 95 01 00 00       	push   $0x195
    d9e8:	e9 e3 fd ff ff       	jmp    d7d0 <alu_test_sal+0x4e0>
    d9ed:	8d 76 00             	lea    0x0(%esi),%esi

0000d9f0 <alu_test_sar>:
    d9f0:	e8 e2 88 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    d9f5:	05 0b 16 04 00       	add    $0x4160b,%eax
    d9fa:	55                   	push   %ebp
    d9fb:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    da00:	57                   	push   %edi
    da01:	56                   	push   %esi
    da02:	53                   	push   %ebx
    da03:	83 ec 4c             	sub    $0x4c,%esp
    da06:	8d 74 24 24          	lea    0x24(%esp),%esi
    da0a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    da0e:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
    da14:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    da18:	8d 74 24 30          	lea    0x30(%esp),%esi
    da1c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
    da23:	00 
    da24:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
    da2b:	00 
    da2c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
    da33:	00 
    da34:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
    da3b:	00 
    da3c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
    da43:	ff 
    da44:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    da4b:	00 
    da4c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
    da53:	10 
    da54:	89 74 24 18          	mov    %esi,0x18(%esp)
    da58:	89 44 24 10          	mov    %eax,0x10(%esp)
    da5c:	8d 44 24 40          	lea    0x40(%esp),%eax
    da60:	8b 7c 24 18          	mov    0x18(%esp),%edi
    da64:	be 01 00 00 00       	mov    $0x1,%esi
    da69:	89 44 24 14          	mov    %eax,0x14(%esp)
    da6d:	83 ec 04             	sub    $0x4,%esp
    da70:	6a 08                	push   $0x8
    da72:	55                   	push   %ebp
    da73:	56                   	push   %esi
    da74:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    da78:	e8 93 23 00 00       	call   fe10 <alu_sar>
    da7d:	89 f1                	mov    %esi,%ecx
    da7f:	83 c4 10             	add    $0x10,%esp
    da82:	89 c3                	mov    %eax,%ebx
    da84:	89 e8                	mov    %ebp,%eax
    da86:	d2 f8                	sar    %cl,%al
    da88:	9c                   	pushf  
    da89:	5a                   	pop    %edx
    da8a:	0f b6 c0             	movzbl %al,%eax
    da8d:	39 c3                	cmp    %eax,%ebx
    da8f:	0f 85 32 05 00 00    	jne    dfc7 <alu_test_sar+0x5d7>
    da95:	8b 44 24 10          	mov    0x10(%esp),%eax
    da99:	89 d1                	mov    %edx,%ecx
    da9b:	83 e1 01             	and    $0x1,%ecx
    da9e:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    daa2:	89 c3                	mov    %eax,%ebx
    daa4:	83 e3 01             	and    $0x1,%ebx
    daa7:	38 cb                	cmp    %cl,%bl
    daa9:	0f 85 29 06 00 00    	jne    e0d8 <alu_test_sar+0x6e8>
    daaf:	89 c3                	mov    %eax,%ebx
    dab1:	89 d1                	mov    %edx,%ecx
    dab3:	c0 eb 02             	shr    $0x2,%bl
    dab6:	c1 e9 02             	shr    $0x2,%ecx
    dab9:	83 e3 01             	and    $0x1,%ebx
    dabc:	83 e1 01             	and    $0x1,%ecx
    dabf:	38 cb                	cmp    %cl,%bl
    dac1:	0f 85 fc 05 00 00    	jne    e0c3 <alu_test_sar+0x6d3>
    dac7:	89 c3                	mov    %eax,%ebx
    dac9:	89 d1                	mov    %edx,%ecx
    dacb:	c0 eb 07             	shr    $0x7,%bl
    dace:	c0 e9 07             	shr    $0x7,%cl
    dad1:	38 cb                	cmp    %cl,%bl
    dad3:	0f 85 d5 05 00 00    	jne    e0ae <alu_test_sar+0x6be>
    dad9:	c0 e8 06             	shr    $0x6,%al
    dadc:	c1 ea 06             	shr    $0x6,%edx
    dadf:	83 e0 01             	and    $0x1,%eax
    dae2:	83 e2 01             	and    $0x1,%edx
    dae5:	38 d0                	cmp    %dl,%al
    dae7:	0f 85 ac 05 00 00    	jne    e099 <alu_test_sar+0x6a9>
    daed:	83 ec 04             	sub    $0x4,%esp
    daf0:	6a 10                	push   $0x10
    daf2:	55                   	push   %ebp
    daf3:	56                   	push   %esi
    daf4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    daf8:	e8 13 23 00 00       	call   fe10 <alu_sar>
    dafd:	89 f1                	mov    %esi,%ecx
    daff:	83 c4 10             	add    $0x10,%esp
    db02:	89 c3                	mov    %eax,%ebx
    db04:	89 e8                	mov    %ebp,%eax
    db06:	66 d3 f8             	sar    %cl,%ax
    db09:	9c                   	pushf  
    db0a:	5a                   	pop    %edx
    db0b:	0f b7 c0             	movzwl %ax,%eax
    db0e:	39 c3                	cmp    %eax,%ebx
    db10:	0f 85 6e 05 00 00    	jne    e084 <alu_test_sar+0x694>
    db16:	8b 44 24 10          	mov    0x10(%esp),%eax
    db1a:	89 d1                	mov    %edx,%ecx
    db1c:	83 e1 01             	and    $0x1,%ecx
    db1f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    db23:	89 c3                	mov    %eax,%ebx
    db25:	83 e3 01             	and    $0x1,%ebx
    db28:	38 cb                	cmp    %cl,%bl
    db2a:	0f 85 3f 05 00 00    	jne    e06f <alu_test_sar+0x67f>
    db30:	89 c3                	mov    %eax,%ebx
    db32:	89 d1                	mov    %edx,%ecx
    db34:	c0 eb 02             	shr    $0x2,%bl
    db37:	c1 e9 02             	shr    $0x2,%ecx
    db3a:	83 e3 01             	and    $0x1,%ebx
    db3d:	83 e1 01             	and    $0x1,%ecx
    db40:	38 cb                	cmp    %cl,%bl
    db42:	0f 85 12 05 00 00    	jne    e05a <alu_test_sar+0x66a>
    db48:	89 c3                	mov    %eax,%ebx
    db4a:	89 d1                	mov    %edx,%ecx
    db4c:	c0 eb 07             	shr    $0x7,%bl
    db4f:	c0 e9 07             	shr    $0x7,%cl
    db52:	38 cb                	cmp    %cl,%bl
    db54:	0f 85 eb 04 00 00    	jne    e045 <alu_test_sar+0x655>
    db5a:	c0 e8 06             	shr    $0x6,%al
    db5d:	c1 ea 06             	shr    $0x6,%edx
    db60:	83 e0 01             	and    $0x1,%eax
    db63:	83 e2 01             	and    $0x1,%edx
    db66:	38 d0                	cmp    %dl,%al
    db68:	0f 85 c2 04 00 00    	jne    e030 <alu_test_sar+0x640>
    db6e:	83 ec 04             	sub    $0x4,%esp
    db71:	6a 20                	push   $0x20
    db73:	55                   	push   %ebp
    db74:	56                   	push   %esi
    db75:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    db79:	e8 92 22 00 00       	call   fe10 <alu_sar>
    db7e:	89 f1                	mov    %esi,%ecx
    db80:	83 c4 10             	add    $0x10,%esp
    db83:	89 c3                	mov    %eax,%ebx
    db85:	89 e8                	mov    %ebp,%eax
    db87:	d3 f8                	sar    %cl,%eax
    db89:	9c                   	pushf  
    db8a:	5a                   	pop    %edx
    db8b:	39 c3                	cmp    %eax,%ebx
    db8d:	0f 85 88 04 00 00    	jne    e01b <alu_test_sar+0x62b>
    db93:	8b 44 24 10          	mov    0x10(%esp),%eax
    db97:	89 d1                	mov    %edx,%ecx
    db99:	83 e1 01             	and    $0x1,%ecx
    db9c:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    dba0:	89 c3                	mov    %eax,%ebx
    dba2:	83 e3 01             	and    $0x1,%ebx
    dba5:	38 cb                	cmp    %cl,%bl
    dba7:	0f 85 59 04 00 00    	jne    e006 <alu_test_sar+0x616>
    dbad:	89 c3                	mov    %eax,%ebx
    dbaf:	89 d1                	mov    %edx,%ecx
    dbb1:	c0 eb 02             	shr    $0x2,%bl
    dbb4:	c1 e9 02             	shr    $0x2,%ecx
    dbb7:	83 e3 01             	and    $0x1,%ebx
    dbba:	83 e1 01             	and    $0x1,%ecx
    dbbd:	38 cb                	cmp    %cl,%bl
    dbbf:	0f 85 2c 04 00 00    	jne    dff1 <alu_test_sar+0x601>
    dbc5:	89 c3                	mov    %eax,%ebx
    dbc7:	89 d1                	mov    %edx,%ecx
    dbc9:	c0 eb 07             	shr    $0x7,%bl
    dbcc:	c0 e9 07             	shr    $0x7,%cl
    dbcf:	38 cb                	cmp    %cl,%bl
    dbd1:	0f 85 db 03 00 00    	jne    dfb2 <alu_test_sar+0x5c2>
    dbd7:	c0 e8 06             	shr    $0x6,%al
    dbda:	c1 ea 06             	shr    $0x6,%edx
    dbdd:	83 e0 01             	and    $0x1,%eax
    dbe0:	83 e2 01             	and    $0x1,%edx
    dbe3:	38 d0                	cmp    %dl,%al
    dbe5:	0f 85 f1 03 00 00    	jne    dfdc <alu_test_sar+0x5ec>
    dbeb:	83 c7 04             	add    $0x4,%edi
    dbee:	3b 7c 24 14          	cmp    0x14(%esp),%edi
    dbf2:	74 0c                	je     dc00 <alu_test_sar+0x210>
    dbf4:	8b 37                	mov    (%edi),%esi
    dbf6:	e9 72 fe ff ff       	jmp    da6d <alu_test_sar+0x7d>
    dbfb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    dbff:	90                   	nop
    dc00:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
    dc05:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    dc09:	3b 44 24 18          	cmp    0x18(%esp),%eax
    dc0d:	74 07                	je     dc16 <alu_test_sar+0x226>
    dc0f:	8b 28                	mov    (%eax),%ebp
    dc11:	e9 46 fe ff ff       	jmp    da5c <alu_test_sar+0x6c>
    dc16:	83 ec 0c             	sub    $0xc,%esp
    dc19:	6a 00                	push   $0x0
    dc1b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    dc1f:	89 f3                	mov    %esi,%ebx
    dc21:	e8 0a 65 ff ff       	call   4130 <time@plt>
    dc26:	89 04 24             	mov    %eax,(%esp)
    dc29:	e8 62 65 ff ff       	call   4190 <srand@plt>
    dc2e:	83 c4 10             	add    $0x10,%esp
    dc31:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
    dc38:	00 
    dc39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    dc40:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    dc44:	bf 01 00 00 00       	mov    $0x1,%edi
    dc49:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dc4d:	e8 9e 65 ff ff       	call   41f0 <rand@plt>
    dc52:	83 ec 04             	sub    $0x4,%esp
    dc55:	6a 08                	push   $0x8
    dc57:	89 c6                	mov    %eax,%esi
    dc59:	50                   	push   %eax
    dc5a:	57                   	push   %edi
    dc5b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    dc5f:	e8 ac 21 00 00       	call   fe10 <alu_sar>
    dc64:	89 f9                	mov    %edi,%ecx
    dc66:	83 c4 10             	add    $0x10,%esp
    dc69:	89 c3                	mov    %eax,%ebx
    dc6b:	89 f0                	mov    %esi,%eax
    dc6d:	d2 f8                	sar    %cl,%al
    dc6f:	9c                   	pushf  
    dc70:	5a                   	pop    %edx
    dc71:	0f b6 c0             	movzbl %al,%eax
    dc74:	39 c3                	cmp    %eax,%ebx
    dc76:	0f 85 b8 01 00 00    	jne    de34 <alu_test_sar+0x444>
    dc7c:	8b 44 24 10          	mov    0x10(%esp),%eax
    dc80:	89 d1                	mov    %edx,%ecx
    dc82:	83 e1 01             	and    $0x1,%ecx
    dc85:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    dc89:	89 c3                	mov    %eax,%ebx
    dc8b:	83 e3 01             	and    $0x1,%ebx
    dc8e:	38 cb                	cmp    %cl,%bl
    dc90:	0f 85 07 03 00 00    	jne    df9d <alu_test_sar+0x5ad>
    dc96:	89 c3                	mov    %eax,%ebx
    dc98:	89 d1                	mov    %edx,%ecx
    dc9a:	c0 eb 02             	shr    $0x2,%bl
    dc9d:	c1 e9 02             	shr    $0x2,%ecx
    dca0:	83 e3 01             	and    $0x1,%ebx
    dca3:	83 e1 01             	and    $0x1,%ecx
    dca6:	38 cb                	cmp    %cl,%bl
    dca8:	0f 85 da 02 00 00    	jne    df88 <alu_test_sar+0x598>
    dcae:	89 c3                	mov    %eax,%ebx
    dcb0:	89 d1                	mov    %edx,%ecx
    dcb2:	c0 eb 07             	shr    $0x7,%bl
    dcb5:	c0 e9 07             	shr    $0x7,%cl
    dcb8:	38 cb                	cmp    %cl,%bl
    dcba:	0f 85 b3 02 00 00    	jne    df73 <alu_test_sar+0x583>
    dcc0:	c0 e8 06             	shr    $0x6,%al
    dcc3:	c1 ea 06             	shr    $0x6,%edx
    dcc6:	83 e0 01             	and    $0x1,%eax
    dcc9:	83 e2 01             	and    $0x1,%edx
    dccc:	38 d0                	cmp    %dl,%al
    dcce:	0f 85 8a 02 00 00    	jne    df5e <alu_test_sar+0x56e>
    dcd4:	83 ec 04             	sub    $0x4,%esp
    dcd7:	6a 10                	push   $0x10
    dcd9:	56                   	push   %esi
    dcda:	57                   	push   %edi
    dcdb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    dcdf:	e8 2c 21 00 00       	call   fe10 <alu_sar>
    dce4:	89 f9                	mov    %edi,%ecx
    dce6:	83 c4 10             	add    $0x10,%esp
    dce9:	89 c3                	mov    %eax,%ebx
    dceb:	89 f0                	mov    %esi,%eax
    dced:	66 d3 f8             	sar    %cl,%ax
    dcf0:	9c                   	pushf  
    dcf1:	5a                   	pop    %edx
    dcf2:	0f b7 c0             	movzwl %ax,%eax
    dcf5:	39 c3                	cmp    %eax,%ebx
    dcf7:	0f 85 4c 02 00 00    	jne    df49 <alu_test_sar+0x559>
    dcfd:	8b 44 24 10          	mov    0x10(%esp),%eax
    dd01:	89 d1                	mov    %edx,%ecx
    dd03:	83 e1 01             	and    $0x1,%ecx
    dd06:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    dd0a:	89 c3                	mov    %eax,%ebx
    dd0c:	83 e3 01             	and    $0x1,%ebx
    dd0f:	38 cb                	cmp    %cl,%bl
    dd11:	0f 85 20 02 00 00    	jne    df37 <alu_test_sar+0x547>
    dd17:	89 c3                	mov    %eax,%ebx
    dd19:	89 d1                	mov    %edx,%ecx
    dd1b:	c0 eb 02             	shr    $0x2,%bl
    dd1e:	c1 e9 02             	shr    $0x2,%ecx
    dd21:	83 e3 01             	and    $0x1,%ebx
    dd24:	83 e1 01             	and    $0x1,%ecx
    dd27:	38 cb                	cmp    %cl,%bl
    dd29:	0f 85 f3 01 00 00    	jne    df22 <alu_test_sar+0x532>
    dd2f:	89 c3                	mov    %eax,%ebx
    dd31:	89 d1                	mov    %edx,%ecx
    dd33:	c0 eb 07             	shr    $0x7,%bl
    dd36:	c0 e9 07             	shr    $0x7,%cl
    dd39:	38 cb                	cmp    %cl,%bl
    dd3b:	0f 85 cc 01 00 00    	jne    df0d <alu_test_sar+0x51d>
    dd41:	c0 e8 06             	shr    $0x6,%al
    dd44:	c1 ea 06             	shr    $0x6,%edx
    dd47:	83 e0 01             	and    $0x1,%eax
    dd4a:	83 e2 01             	and    $0x1,%edx
    dd4d:	38 d0                	cmp    %dl,%al
    dd4f:	0f 85 a3 01 00 00    	jne    def8 <alu_test_sar+0x508>
    dd55:	83 ec 04             	sub    $0x4,%esp
    dd58:	6a 20                	push   $0x20
    dd5a:	56                   	push   %esi
    dd5b:	57                   	push   %edi
    dd5c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    dd60:	e8 ab 20 00 00       	call   fe10 <alu_sar>
    dd65:	89 f9                	mov    %edi,%ecx
    dd67:	83 c4 10             	add    $0x10,%esp
    dd6a:	89 c3                	mov    %eax,%ebx
    dd6c:	89 f0                	mov    %esi,%eax
    dd6e:	d3 f8                	sar    %cl,%eax
    dd70:	9c                   	pushf  
    dd71:	5a                   	pop    %edx
    dd72:	39 c3                	cmp    %eax,%ebx
    dd74:	0f 85 69 01 00 00    	jne    dee3 <alu_test_sar+0x4f3>
    dd7a:	8b 44 24 10          	mov    0x10(%esp),%eax
    dd7e:	89 d1                	mov    %edx,%ecx
    dd80:	83 e1 01             	and    $0x1,%ecx
    dd83:	0f b6 40 24          	movzbl 0x24(%eax),%eax
    dd87:	89 c3                	mov    %eax,%ebx
    dd89:	83 e3 01             	and    $0x1,%ebx
    dd8c:	38 cb                	cmp    %cl,%bl
    dd8e:	0f 85 2c 01 00 00    	jne    dec0 <alu_test_sar+0x4d0>
    dd94:	89 c3                	mov    %eax,%ebx
    dd96:	89 d1                	mov    %edx,%ecx
    dd98:	c0 eb 02             	shr    $0x2,%bl
    dd9b:	c1 e9 02             	shr    $0x2,%ecx
    dd9e:	83 e3 01             	and    $0x1,%ebx
    dda1:	83 e1 01             	and    $0x1,%ecx
    dda4:	38 cb                	cmp    %cl,%bl
    dda6:	0f 85 f1 00 00 00    	jne    de9d <alu_test_sar+0x4ad>
    ddac:	89 c3                	mov    %eax,%ebx
    ddae:	89 d1                	mov    %edx,%ecx
    ddb0:	c0 eb 07             	shr    $0x7,%bl
    ddb3:	c0 e9 07             	shr    $0x7,%cl
    ddb6:	38 cb                	cmp    %cl,%bl
    ddb8:	0f 85 bc 00 00 00    	jne    de7a <alu_test_sar+0x48a>
    ddbe:	c0 e8 06             	shr    $0x6,%al
    ddc1:	c1 ea 06             	shr    $0x6,%edx
    ddc4:	83 e0 01             	and    $0x1,%eax
    ddc7:	83 e2 01             	and    $0x1,%edx
    ddca:	38 d0                	cmp    %dl,%al
    ddcc:	0f 85 85 00 00 00    	jne    de57 <alu_test_sar+0x467>
    ddd2:	83 c5 04             	add    $0x4,%ebp
    ddd5:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
    ddd9:	74 0d                	je     dde8 <alu_test_sar+0x3f8>
    dddb:	8b 7d 00             	mov    0x0(%ebp),%edi
    ddde:	e9 66 fe ff ff       	jmp    dc49 <alu_test_sar+0x259>
    dde3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    dde7:	90                   	nop
    dde8:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
    dded:	0f 85 4d fe ff ff    	jne    dc40 <alu_test_sar+0x250>
    ddf3:	83 ec 0c             	sub    $0xc,%esp
    ddf6:	8b 7c 24 18          	mov    0x18(%esp),%edi
    ddfa:	8d 87 6c 72 fe ff    	lea    -0x18d94(%edi),%eax
    de00:	89 fb                	mov    %edi,%ebx
    de02:	50                   	push   %eax
    de03:	e8 a8 64 ff ff       	call   42b0 <puts@plt>
    de08:	e8 f3 c9 01 00       	call   2a800 <get_ref>
    de0d:	83 c4 10             	add    $0x10,%esp
    de10:	85 c0                	test   %eax,%eax
    de12:	75 08                	jne    de1c <alu_test_sar+0x42c>
    de14:	83 c4 4c             	add    $0x4c,%esp
    de17:	5b                   	pop    %ebx
    de18:	5e                   	pop    %esi
    de19:	5f                   	pop    %edi
    de1a:	5d                   	pop    %ebp
    de1b:	c3                   	ret    
    de1c:	83 ec 0c             	sub    $0xc,%esp
    de1f:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    de23:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    de29:	50                   	push   %eax
    de2a:	e8 81 64 ff ff       	call   42b0 <puts@plt>
    de2f:	83 c4 10             	add    $0x10,%esp
    de32:	eb e0                	jmp    de14 <alu_test_sar+0x424>
    de34:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    de38:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    de3e:	50                   	push   %eax
    de3f:	68 c0 01 00 00       	push   $0x1c0
    de44:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    de4a:	50                   	push   %eax
    de4b:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
    de51:	50                   	push   %eax
    de52:	e8 b9 64 ff ff       	call   4310 <__assert_fail@plt>
    de57:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    de5b:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    de61:	50                   	push   %eax
    de62:	68 c2 01 00 00       	push   $0x1c2
    de67:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    de6d:	50                   	push   %eax
    de6e:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
    de74:	50                   	push   %eax
    de75:	e8 96 64 ff ff       	call   4310 <__assert_fail@plt>
    de7a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    de7e:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    de84:	50                   	push   %eax
    de85:	68 c2 01 00 00       	push   $0x1c2
    de8a:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    de90:	50                   	push   %eax
    de91:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
    de97:	50                   	push   %eax
    de98:	e8 73 64 ff ff       	call   4310 <__assert_fail@plt>
    de9d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dea1:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    dea7:	50                   	push   %eax
    dea8:	68 c2 01 00 00       	push   $0x1c2
    dead:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    deb3:	50                   	push   %eax
    deb4:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
    deba:	50                   	push   %eax
    debb:	e8 50 64 ff ff       	call   4310 <__assert_fail@plt>
    dec0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dec4:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    deca:	50                   	push   %eax
    decb:	68 c2 01 00 00       	push   $0x1c2
    ded0:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ded6:	50                   	push   %eax
    ded7:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    dedd:	50                   	push   %eax
    dede:	e8 2d 64 ff ff       	call   4310 <__assert_fail@plt>
    dee3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dee7:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    deed:	50                   	push   %eax
    deee:	68 c2 01 00 00       	push   $0x1c2
    def3:	e9 4c ff ff ff       	jmp    de44 <alu_test_sar+0x454>
    def8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    defc:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df02:	50                   	push   %eax
    df03:	68 c1 01 00 00       	push   $0x1c1
    df08:	e9 5a ff ff ff       	jmp    de67 <alu_test_sar+0x477>
    df0d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    df11:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df17:	50                   	push   %eax
    df18:	68 c1 01 00 00       	push   $0x1c1
    df1d:	e9 68 ff ff ff       	jmp    de8a <alu_test_sar+0x49a>
    df22:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    df26:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df2c:	50                   	push   %eax
    df2d:	68 c1 01 00 00       	push   $0x1c1
    df32:	e9 76 ff ff ff       	jmp    dead <alu_test_sar+0x4bd>
    df37:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    df3b:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df41:	50                   	push   %eax
    df42:	68 c1 01 00 00       	push   $0x1c1
    df47:	eb 87                	jmp    ded0 <alu_test_sar+0x4e0>
    df49:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    df4d:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df53:	50                   	push   %eax
    df54:	68 c1 01 00 00       	push   $0x1c1
    df59:	e9 e6 fe ff ff       	jmp    de44 <alu_test_sar+0x454>
    df5e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    df62:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df68:	50                   	push   %eax
    df69:	68 c0 01 00 00       	push   $0x1c0
    df6e:	e9 f4 fe ff ff       	jmp    de67 <alu_test_sar+0x477>
    df73:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    df77:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df7d:	50                   	push   %eax
    df7e:	68 c0 01 00 00       	push   $0x1c0
    df83:	e9 02 ff ff ff       	jmp    de8a <alu_test_sar+0x49a>
    df88:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    df8c:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    df92:	50                   	push   %eax
    df93:	68 c0 01 00 00       	push   $0x1c0
    df98:	e9 10 ff ff ff       	jmp    dead <alu_test_sar+0x4bd>
    df9d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dfa1:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    dfa7:	50                   	push   %eax
    dfa8:	68 c0 01 00 00       	push   $0x1c0
    dfad:	e9 1e ff ff ff       	jmp    ded0 <alu_test_sar+0x4e0>
    dfb2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dfb6:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    dfbc:	50                   	push   %eax
    dfbd:	68 b7 01 00 00       	push   $0x1b7
    dfc2:	e9 c3 fe ff ff       	jmp    de8a <alu_test_sar+0x49a>
    dfc7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dfcb:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    dfd1:	50                   	push   %eax
    dfd2:	68 b5 01 00 00       	push   $0x1b5
    dfd7:	e9 68 fe ff ff       	jmp    de44 <alu_test_sar+0x454>
    dfdc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dfe0:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    dfe6:	50                   	push   %eax
    dfe7:	68 b7 01 00 00       	push   $0x1b7
    dfec:	e9 76 fe ff ff       	jmp    de67 <alu_test_sar+0x477>
    dff1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    dff5:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    dffb:	50                   	push   %eax
    dffc:	68 b7 01 00 00       	push   $0x1b7
    e001:	e9 a7 fe ff ff       	jmp    dead <alu_test_sar+0x4bd>
    e006:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e00a:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e010:	50                   	push   %eax
    e011:	68 b7 01 00 00       	push   $0x1b7
    e016:	e9 b5 fe ff ff       	jmp    ded0 <alu_test_sar+0x4e0>
    e01b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e01f:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e025:	50                   	push   %eax
    e026:	68 b7 01 00 00       	push   $0x1b7
    e02b:	e9 14 fe ff ff       	jmp    de44 <alu_test_sar+0x454>
    e030:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e034:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e03a:	50                   	push   %eax
    e03b:	68 b6 01 00 00       	push   $0x1b6
    e040:	e9 22 fe ff ff       	jmp    de67 <alu_test_sar+0x477>
    e045:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e049:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e04f:	50                   	push   %eax
    e050:	68 b6 01 00 00       	push   $0x1b6
    e055:	e9 30 fe ff ff       	jmp    de8a <alu_test_sar+0x49a>
    e05a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e05e:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e064:	50                   	push   %eax
    e065:	68 b6 01 00 00       	push   $0x1b6
    e06a:	e9 3e fe ff ff       	jmp    dead <alu_test_sar+0x4bd>
    e06f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e073:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e079:	50                   	push   %eax
    e07a:	68 b6 01 00 00       	push   $0x1b6
    e07f:	e9 4c fe ff ff       	jmp    ded0 <alu_test_sar+0x4e0>
    e084:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e088:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e08e:	50                   	push   %eax
    e08f:	68 b6 01 00 00       	push   $0x1b6
    e094:	e9 ab fd ff ff       	jmp    de44 <alu_test_sar+0x454>
    e099:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e09d:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e0a3:	50                   	push   %eax
    e0a4:	68 b5 01 00 00       	push   $0x1b5
    e0a9:	e9 b9 fd ff ff       	jmp    de67 <alu_test_sar+0x477>
    e0ae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e0b2:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e0b8:	50                   	push   %eax
    e0b9:	68 b5 01 00 00       	push   $0x1b5
    e0be:	e9 c7 fd ff ff       	jmp    de8a <alu_test_sar+0x49a>
    e0c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e0c7:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e0cd:	50                   	push   %eax
    e0ce:	68 b5 01 00 00       	push   $0x1b5
    e0d3:	e9 d5 fd ff ff       	jmp    dead <alu_test_sar+0x4bd>
    e0d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e0dc:	8d 83 b0 5f fe ff    	lea    -0x1a050(%ebx),%eax
    e0e2:	50                   	push   %eax
    e0e3:	68 b5 01 00 00       	push   $0x1b5
    e0e8:	e9 e3 fd ff ff       	jmp    ded0 <alu_test_sar+0x4e0>
    e0ed:	8d 76 00             	lea    0x0(%esi),%esi

0000e0f0 <alu_test_imul>:
    e0f0:	55                   	push   %ebp
    e0f1:	57                   	push   %edi
    e0f2:	56                   	push   %esi
    e0f3:	53                   	push   %ebx
    e0f4:	e8 87 63 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    e0f9:	81 c3 07 0f 04 00    	add    $0x40f07,%ebx
    e0ff:	83 ec 5c             	sub    $0x5c,%esp
    e102:	8d 7c 24 50          	lea    0x50(%esp),%edi
    e106:	c7 44 24 24 fc ff ff 	movl   $0xfffffffc,0x24(%esp)
    e10d:	ff 
    e10e:	8d 44 24 28          	lea    0x28(%esp),%eax
    e112:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
    e119:	ff 
    e11a:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
    e121:	ff 
    e122:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
    e129:	ff 
    e12a:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
    e131:	00 
    e132:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
    e139:	00 
    e13a:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
    e141:	00 
    e142:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%esp)
    e149:	00 
    e14a:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%esp)
    e151:	00 
    e152:	c7 44 24 48 ff ff ff 	movl   $0xfffffff,0x48(%esp)
    e159:	0f 
    e15a:	c7 44 24 4c ff ff ff 	movl   $0xefffffff,0x4c(%esp)
    e161:	ef 
    e162:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    e166:	89 44 24 18          	mov    %eax,0x18(%esp)
    e16a:	89 44 24 14          	mov    %eax,0x14(%esp)
    e16e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    e173:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e177:	90                   	nop
    e178:	0f be e8             	movsbl %al,%ebp
    e17b:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
    e180:	0f b6 c0             	movzbl %al,%eax
    e183:	8b 74 24 18          	mov    0x18(%esp),%esi
    e187:	89 44 24 10          	mov    %eax,0x10(%esp)
    e18b:	89 f8                	mov    %edi,%eax
    e18d:	89 ef                	mov    %ebp,%edi
    e18f:	89 c5                	mov    %eax,%ebp
    e191:	eb 0a                	jmp    e19d <alu_test_imul+0xad>
    e193:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e197:	90                   	nop
    e198:	8b 2e                	mov    (%esi),%ebp
    e19a:	83 c6 04             	add    $0x4,%esi
    e19d:	89 e8                	mov    %ebp,%eax
    e19f:	83 ec 04             	sub    $0x4,%esp
    e1a2:	0f be c0             	movsbl %al,%eax
    e1a5:	6a 08                	push   $0x8
    e1a7:	57                   	push   %edi
    e1a8:	50                   	push   %eax
    e1a9:	e8 12 16 00 00       	call   f7c0 <alu_imul>
    e1ae:	89 c2                	mov    %eax,%edx
    e1b0:	89 e8                	mov    %ebp,%eax
    e1b2:	0f b6 c8             	movzbl %al,%ecx
    e1b5:	8b 44 24 20          	mov    0x20(%esp),%eax
    e1b9:	83 c4 10             	add    $0x10,%esp
    e1bc:	f6 e9                	imul   %cl
    e1be:	9c                   	pushf  
    e1bf:	59                   	pop    %ecx
    e1c0:	0f bf c8             	movswl %ax,%ecx
    e1c3:	39 d1                	cmp    %edx,%ecx
    e1c5:	0f 85 6a 02 00 00    	jne    e435 <alu_test_imul+0x345>
    e1cb:	3b 74 24 0c          	cmp    0xc(%esp),%esi
    e1cf:	75 c7                	jne    e198 <alu_test_imul+0xa8>
    e1d1:	8b 7c 24 14          	mov    0x14(%esp),%edi
    e1d5:	8b 44 24 0c          	mov    0xc(%esp),%eax
    e1d9:	39 c7                	cmp    %eax,%edi
    e1db:	74 0b                	je     e1e8 <alu_test_imul+0xf8>
    e1dd:	8b 07                	mov    (%edi),%eax
    e1df:	83 c7 04             	add    $0x4,%edi
    e1e2:	89 7c 24 14          	mov    %edi,0x14(%esp)
    e1e6:	eb 90                	jmp    e178 <alu_test_imul+0x88>
    e1e8:	83 ec 0c             	sub    $0xc,%esp
    e1eb:	bf 40 42 0f 00       	mov    $0xf4240,%edi
    e1f0:	6a 00                	push   $0x0
    e1f2:	e8 39 5f ff ff       	call   4130 <time@plt>
    e1f7:	89 04 24             	mov    %eax,(%esp)
    e1fa:	e8 91 5f ff ff       	call   4190 <srand@plt>
    e1ff:	83 c4 10             	add    $0x10,%esp
    e202:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    e208:	e8 e3 5f ff ff       	call   41f0 <rand@plt>
    e20d:	89 c6                	mov    %eax,%esi
    e20f:	e8 dc 5f ff ff       	call   41f0 <rand@plt>
    e214:	83 ec 04             	sub    $0x4,%esp
    e217:	89 c5                	mov    %eax,%ebp
    e219:	89 f0                	mov    %esi,%eax
    e21b:	6a 08                	push   $0x8
    e21d:	0f be c0             	movsbl %al,%eax
    e220:	50                   	push   %eax
    e221:	89 e8                	mov    %ebp,%eax
    e223:	0f be c0             	movsbl %al,%eax
    e226:	50                   	push   %eax
    e227:	e8 94 15 00 00       	call   f7c0 <alu_imul>
    e22c:	89 e9                	mov    %ebp,%ecx
    e22e:	83 c4 10             	add    $0x10,%esp
    e231:	89 c2                	mov    %eax,%edx
    e233:	89 f0                	mov    %esi,%eax
    e235:	0f b6 c9             	movzbl %cl,%ecx
    e238:	0f b6 c0             	movzbl %al,%eax
    e23b:	f6 e9                	imul   %cl
    e23d:	9c                   	pushf  
    e23e:	59                   	pop    %ecx
    e23f:	98                   	cwtl   
    e240:	39 d0                	cmp    %edx,%eax
    e242:	0f 85 0c 02 00 00    	jne    e454 <alu_test_imul+0x364>
    e248:	83 ef 01             	sub    $0x1,%edi
    e24b:	75 bb                	jne    e208 <alu_test_imul+0x118>
    e24d:	8b 44 24 18          	mov    0x18(%esp),%eax
    e251:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
    e256:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e25a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    e260:	0f bf c7             	movswl %di,%eax
    e263:	8b 74 24 18          	mov    0x18(%esp),%esi
    e267:	bd fc ff ff ff       	mov    $0xfffffffc,%ebp
    e26c:	89 44 24 14          	mov    %eax,0x14(%esp)
    e270:	0f b7 c7             	movzwl %di,%eax
    e273:	89 44 24 10          	mov    %eax,0x10(%esp)
    e277:	eb 0c                	jmp    e285 <alu_test_imul+0x195>
    e279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e280:	8b 2e                	mov    (%esi),%ebp
    e282:	83 c6 04             	add    $0x4,%esi
    e285:	83 ec 04             	sub    $0x4,%esp
    e288:	0f bf c5             	movswl %bp,%eax
    e28b:	6a 10                	push   $0x10
    e28d:	ff 74 24 1c          	pushl  0x1c(%esp)
    e291:	50                   	push   %eax
    e292:	e8 29 15 00 00       	call   f7c0 <alu_imul>
    e297:	0f b7 cd             	movzwl %bp,%ecx
    e29a:	89 c7                	mov    %eax,%edi
    e29c:	8b 44 24 20          	mov    0x20(%esp),%eax
    e2a0:	83 c4 10             	add    $0x10,%esp
    e2a3:	66 f7 e9             	imul   %cx
    e2a6:	9c                   	pushf  
    e2a7:	59                   	pop    %ecx
    e2a8:	0f b7 c0             	movzwl %ax,%eax
    e2ab:	c1 e2 10             	shl    $0x10,%edx
    e2ae:	09 d0                	or     %edx,%eax
    e2b0:	39 f8                	cmp    %edi,%eax
    e2b2:	0f 85 e8 01 00 00    	jne    e4a0 <alu_test_imul+0x3b0>
    e2b8:	3b 74 24 0c          	cmp    0xc(%esp),%esi
    e2bc:	75 c2                	jne    e280 <alu_test_imul+0x190>
    e2be:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    e2c2:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    e2c6:	39 f8                	cmp    %edi,%eax
    e2c8:	74 0b                	je     e2d5 <alu_test_imul+0x1e5>
    e2ca:	8b 38                	mov    (%eax),%edi
    e2cc:	83 c0 04             	add    $0x4,%eax
    e2cf:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e2d3:	eb 8b                	jmp    e260 <alu_test_imul+0x170>
    e2d5:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    e2dc:	00 
    e2dd:	8d 76 00             	lea    0x0(%esi),%esi
    e2e0:	e8 0b 5f ff ff       	call   41f0 <rand@plt>
    e2e5:	89 c6                	mov    %eax,%esi
    e2e7:	e8 04 5f ff ff       	call   41f0 <rand@plt>
    e2ec:	83 ec 04             	sub    $0x4,%esp
    e2ef:	89 c7                	mov    %eax,%edi
    e2f1:	0f bf c6             	movswl %si,%eax
    e2f4:	6a 10                	push   $0x10
    e2f6:	50                   	push   %eax
    e2f7:	0f bf c7             	movswl %di,%eax
    e2fa:	50                   	push   %eax
    e2fb:	e8 c0 14 00 00       	call   f7c0 <alu_imul>
    e300:	0f b7 cf             	movzwl %di,%ecx
    e303:	83 c4 10             	add    $0x10,%esp
    e306:	89 c5                	mov    %eax,%ebp
    e308:	0f b7 c6             	movzwl %si,%eax
    e30b:	66 f7 e9             	imul   %cx
    e30e:	9c                   	pushf  
    e30f:	59                   	pop    %ecx
    e310:	0f b7 f0             	movzwl %ax,%esi
    e313:	89 d0                	mov    %edx,%eax
    e315:	c1 e0 10             	shl    $0x10,%eax
    e318:	09 f0                	or     %esi,%eax
    e31a:	39 e8                	cmp    %ebp,%eax
    e31c:	0f 85 5f 01 00 00    	jne    e481 <alu_test_imul+0x391>
    e322:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    e327:	75 b7                	jne    e2e0 <alu_test_imul+0x1f0>
    e329:	8b 44 24 18          	mov    0x18(%esp),%eax
    e32d:	c7 44 24 10 fc ff ff 	movl   $0xfffffffc,0x10(%esp)
    e334:	ff 
    e335:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e339:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e340:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    e344:	b9 fc ff ff ff       	mov    $0xfffffffc,%ecx
    e349:	eb 0b                	jmp    e356 <alu_test_imul+0x266>
    e34b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e34f:	90                   	nop
    e350:	8b 4d 00             	mov    0x0(%ebp),%ecx
    e353:	83 c5 04             	add    $0x4,%ebp
    e356:	83 ec 04             	sub    $0x4,%esp
    e359:	6a 20                	push   $0x20
    e35b:	ff 74 24 18          	pushl  0x18(%esp)
    e35f:	51                   	push   %ecx
    e360:	89 4c 24 24          	mov    %ecx,0x24(%esp)
    e364:	e8 57 14 00 00       	call   f7c0 <alu_imul>
    e369:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    e36d:	89 c6                	mov    %eax,%esi
    e36f:	89 d7                	mov    %edx,%edi
    e371:	8b 44 24 20          	mov    0x20(%esp),%eax
    e375:	83 c4 10             	add    $0x10,%esp
    e378:	f7 e9                	imul   %ecx
    e37a:	9c                   	pushf  
    e37b:	59                   	pop    %ecx
    e37c:	31 f0                	xor    %esi,%eax
    e37e:	31 fa                	xor    %edi,%edx
    e380:	09 c2                	or     %eax,%edx
    e382:	0f 85 da 00 00 00    	jne    e462 <alu_test_imul+0x372>
    e388:	3b 6c 24 0c          	cmp    0xc(%esp),%ebp
    e38c:	75 c2                	jne    e350 <alu_test_imul+0x260>
    e38e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    e392:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    e396:	39 f8                	cmp    %edi,%eax
    e398:	74 0f                	je     e3a9 <alu_test_imul+0x2b9>
    e39a:	8b 38                	mov    (%eax),%edi
    e39c:	83 c0 04             	add    $0x4,%eax
    e39f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e3a3:	89 7c 24 10          	mov    %edi,0x10(%esp)
    e3a7:	eb 97                	jmp    e340 <alu_test_imul+0x250>
    e3a9:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    e3b0:	00 
    e3b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e3b8:	e8 33 5e ff ff       	call   41f0 <rand@plt>
    e3bd:	89 c5                	mov    %eax,%ebp
    e3bf:	e8 2c 5e ff ff       	call   41f0 <rand@plt>
    e3c4:	83 ec 04             	sub    $0x4,%esp
    e3c7:	6a 20                	push   $0x20
    e3c9:	55                   	push   %ebp
    e3ca:	50                   	push   %eax
    e3cb:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e3cf:	e8 ec 13 00 00       	call   f7c0 <alu_imul>
    e3d4:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    e3d8:	83 c4 10             	add    $0x10,%esp
    e3db:	89 c7                	mov    %eax,%edi
    e3dd:	89 d6                	mov    %edx,%esi
    e3df:	89 e8                	mov    %ebp,%eax
    e3e1:	f7 e9                	imul   %ecx
    e3e3:	9c                   	pushf  
    e3e4:	59                   	pop    %ecx
    e3e5:	31 c7                	xor    %eax,%edi
    e3e7:	31 f2                	xor    %esi,%edx
    e3e9:	09 fa                	or     %edi,%edx
    e3eb:	0f 85 bd 00 00 00    	jne    e4ae <alu_test_imul+0x3be>
    e3f1:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    e3f6:	75 c0                	jne    e3b8 <alu_test_imul+0x2c8>
    e3f8:	83 ec 0c             	sub    $0xc,%esp
    e3fb:	8d 83 94 72 fe ff    	lea    -0x18d6c(%ebx),%eax
    e401:	50                   	push   %eax
    e402:	e8 a9 5e ff ff       	call   42b0 <puts@plt>
    e407:	e8 f4 c3 01 00       	call   2a800 <get_ref>
    e40c:	83 c4 10             	add    $0x10,%esp
    e40f:	85 c0                	test   %eax,%eax
    e411:	75 08                	jne    e41b <alu_test_imul+0x32b>
    e413:	83 c4 5c             	add    $0x5c,%esp
    e416:	5b                   	pop    %ebx
    e417:	5e                   	pop    %esi
    e418:	5f                   	pop    %edi
    e419:	5d                   	pop    %ebp
    e41a:	c3                   	ret    
    e41b:	83 ec 0c             	sub    $0xc,%esp
    e41e:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    e424:	50                   	push   %eax
    e425:	e8 86 5e ff ff       	call   42b0 <puts@plt>
    e42a:	83 c4 10             	add    $0x10,%esp
    e42d:	83 c4 5c             	add    $0x5c,%esp
    e430:	5b                   	pop    %ebx
    e431:	5e                   	pop    %esi
    e432:	5f                   	pop    %edi
    e433:	5d                   	pop    %ebp
    e434:	c3                   	ret    
    e435:	8d 83 a0 5f fe ff    	lea    -0x1a060(%ebx),%eax
    e43b:	50                   	push   %eax
    e43c:	68 dc 01 00 00       	push   $0x1dc
    e441:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    e447:	50                   	push   %eax
    e448:	8d 83 20 5e fe ff    	lea    -0x1a1e0(%ebx),%eax
    e44e:	50                   	push   %eax
    e44f:	e8 bc 5e ff ff       	call   4310 <__assert_fail@plt>
    e454:	8d 83 a0 5f fe ff    	lea    -0x1a060(%ebx),%eax
    e45a:	50                   	push   %eax
    e45b:	68 ec 01 00 00       	push   $0x1ec
    e460:	eb df                	jmp    e441 <alu_test_imul+0x351>
    e462:	8d 83 a0 5f fe ff    	lea    -0x1a060(%ebx),%eax
    e468:	50                   	push   %eax
    e469:	68 1b 02 00 00       	push   $0x21b
    e46e:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    e474:	50                   	push   %eax
    e475:	8d 83 a8 5e fe ff    	lea    -0x1a158(%ebx),%eax
    e47b:	50                   	push   %eax
    e47c:	e8 8f 5e ff ff       	call   4310 <__assert_fail@plt>
    e481:	8d 83 a0 5f fe ff    	lea    -0x1a060(%ebx),%eax
    e487:	50                   	push   %eax
    e488:	68 0a 02 00 00       	push   $0x20a
    e48d:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    e493:	50                   	push   %eax
    e494:	8d 83 54 5e fe ff    	lea    -0x1a1ac(%ebx),%eax
    e49a:	50                   	push   %eax
    e49b:	e8 70 5e ff ff       	call   4310 <__assert_fail@plt>
    e4a0:	8d 83 a0 5f fe ff    	lea    -0x1a060(%ebx),%eax
    e4a6:	50                   	push   %eax
    e4a7:	68 fb 01 00 00       	push   $0x1fb
    e4ac:	eb df                	jmp    e48d <alu_test_imul+0x39d>
    e4ae:	8d 83 a0 5f fe ff    	lea    -0x1a060(%ebx),%eax
    e4b4:	50                   	push   %eax
    e4b5:	68 2b 02 00 00       	push   $0x22b
    e4ba:	eb b2                	jmp    e46e <alu_test_imul+0x37e>
    e4bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000e4c0 <alu_test_mul>:
    e4c0:	e8 12 7e ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    e4c5:	05 3b 0b 04 00       	add    $0x40b3b,%eax
    e4ca:	55                   	push   %ebp
    e4cb:	57                   	push   %edi
    e4cc:	56                   	push   %esi
    e4cd:	53                   	push   %ebx
    e4ce:	83 ec 5c             	sub    $0x5c,%esp
    e4d1:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
    e4d7:	8d 5c 24 2c          	lea    0x2c(%esp),%ebx
    e4db:	8d 7c 24 50          	lea    0x50(%esp),%edi
    e4df:	89 44 24 08          	mov    %eax,0x8(%esp)
    e4e3:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%esp)
    e4ea:	ff 
    e4eb:	c7 44 24 2c fd ff ff 	movl   $0xfffffffd,0x2c(%esp)
    e4f2:	ff 
    e4f3:	c7 44 24 30 fe ff ff 	movl   $0xfffffffe,0x30(%esp)
    e4fa:	ff 
    e4fb:	c7 44 24 34 ff ff ff 	movl   $0xffffffff,0x34(%esp)
    e502:	ff 
    e503:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
    e50a:	00 
    e50b:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
    e512:	00 
    e513:	c7 44 24 40 02 00 00 	movl   $0x2,0x40(%esp)
    e51a:	00 
    e51b:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%esp)
    e522:	00 
    e523:	c7 44 24 48 05 00 00 	movl   $0x5,0x48(%esp)
    e52a:	00 
    e52b:	c7 44 24 4c ff ff ff 	movl   $0xefffffff,0x4c(%esp)
    e532:	ef 
    e533:	89 5c 24 18          	mov    %ebx,0x18(%esp)
    e537:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    e53b:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
    e53f:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
    e546:	ff 
    e547:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e54e:	66 90                	xchg   %ax,%ax
    e550:	8b 7c 24 18          	mov    0x18(%esp),%edi
    e554:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    e559:	eb 0a                	jmp    e565 <alu_test_mul+0xa5>
    e55b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e55f:	90                   	nop
    e560:	8b 0f                	mov    (%edi),%ecx
    e562:	83 c7 04             	add    $0x4,%edi
    e565:	83 ec 04             	sub    $0x4,%esp
    e568:	6a 20                	push   $0x20
    e56a:	ff 74 24 18          	pushl  0x18(%esp)
    e56e:	51                   	push   %ecx
    e56f:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    e573:	89 4c 24 24          	mov    %ecx,0x24(%esp)
    e577:	e8 d4 11 00 00       	call   f750 <alu_mul>
    e57c:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    e580:	89 c6                	mov    %eax,%esi
    e582:	89 d3                	mov    %edx,%ebx
    e584:	8b 44 24 20          	mov    0x20(%esp),%eax
    e588:	83 c4 10             	add    $0x10,%esp
    e58b:	f7 e1                	mul    %ecx
    e58d:	9c                   	pushf  
    e58e:	59                   	pop    %ecx
    e58f:	31 f0                	xor    %esi,%eax
    e591:	31 da                	xor    %ebx,%edx
    e593:	09 c2                	or     %eax,%edx
    e595:	0f 85 bb 03 00 00    	jne    e956 <alu_test_mul+0x496>
    e59b:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    e59f:	89 ca                	mov    %ecx,%edx
    e5a1:	83 e2 01             	and    $0x1,%edx
    e5a4:	83 e0 01             	and    $0x1,%eax
    e5a7:	38 d0                	cmp    %dl,%al
    e5a9:	0f 85 ed 03 00 00    	jne    e99c <alu_test_mul+0x4dc>
    e5af:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    e5b3:	c1 e9 0b             	shr    $0xb,%ecx
    e5b6:	83 e1 01             	and    $0x1,%ecx
    e5b9:	c0 e8 03             	shr    $0x3,%al
    e5bc:	83 e0 01             	and    $0x1,%eax
    e5bf:	38 c8                	cmp    %cl,%al
    e5c1:	0f 85 b2 03 00 00    	jne    e979 <alu_test_mul+0x4b9>
    e5c7:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
    e5cb:	75 93                	jne    e560 <alu_test_mul+0xa0>
    e5cd:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    e5d1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    e5d5:	39 d8                	cmp    %ebx,%eax
    e5d7:	74 12                	je     e5eb <alu_test_mul+0x12b>
    e5d9:	8b 18                	mov    (%eax),%ebx
    e5db:	83 c0 04             	add    $0x4,%eax
    e5de:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e5e2:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    e5e6:	e9 65 ff ff ff       	jmp    e550 <alu_test_mul+0x90>
    e5eb:	83 ec 0c             	sub    $0xc,%esp
    e5ee:	6a 00                	push   $0x0
    e5f0:	8b 7c 24 18          	mov    0x18(%esp),%edi
    e5f4:	89 fb                	mov    %edi,%ebx
    e5f6:	e8 35 5b ff ff       	call   4130 <time@plt>
    e5fb:	89 04 24             	mov    %eax,(%esp)
    e5fe:	e8 8d 5b ff ff       	call   4190 <srand@plt>
    e603:	83 c4 10             	add    $0x10,%esp
    e606:	c7 44 24 14 40 42 0f 	movl   $0xf4240,0x14(%esp)
    e60d:	00 
    e60e:	66 90                	xchg   %ax,%ax
    e610:	8b 7c 24 08          	mov    0x8(%esp),%edi
    e614:	89 fb                	mov    %edi,%ebx
    e616:	e8 d5 5b ff ff       	call   41f0 <rand@plt>
    e61b:	89 c6                	mov    %eax,%esi
    e61d:	e8 ce 5b ff ff       	call   41f0 <rand@plt>
    e622:	83 ec 04             	sub    $0x4,%esp
    e625:	6a 20                	push   $0x20
    e627:	56                   	push   %esi
    e628:	50                   	push   %eax
    e629:	89 44 24 20          	mov    %eax,0x20(%esp)
    e62d:	e8 1e 11 00 00       	call   f750 <alu_mul>
    e632:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    e636:	83 c4 10             	add    $0x10,%esp
    e639:	89 c7                	mov    %eax,%edi
    e63b:	89 d3                	mov    %edx,%ebx
    e63d:	89 f0                	mov    %esi,%eax
    e63f:	f7 e1                	mul    %ecx
    e641:	9c                   	pushf  
    e642:	59                   	pop    %ecx
    e643:	89 d6                	mov    %edx,%esi
    e645:	31 c7                	xor    %eax,%edi
    e647:	31 de                	xor    %ebx,%esi
    e649:	09 fe                	or     %edi,%esi
    e64b:	0f 85 80 03 00 00    	jne    e9d1 <alu_test_mul+0x511>
    e651:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    e655:	89 ca                	mov    %ecx,%edx
    e657:	83 e2 01             	and    $0x1,%edx
    e65a:	83 e0 01             	and    $0x1,%eax
    e65d:	38 d0                	cmp    %dl,%al
    e65f:	0f 85 5a 03 00 00    	jne    e9bf <alu_test_mul+0x4ff>
    e665:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    e669:	c1 e9 0b             	shr    $0xb,%ecx
    e66c:	83 e1 01             	and    $0x1,%ecx
    e66f:	c0 e8 03             	shr    $0x3,%al
    e672:	83 e0 01             	and    $0x1,%eax
    e675:	38 c8                	cmp    %cl,%al
    e677:	0f 85 ad 03 00 00    	jne    ea2a <alu_test_mul+0x56a>
    e67d:	83 6c 24 14 01       	subl   $0x1,0x14(%esp)
    e682:	75 8c                	jne    e610 <alu_test_mul+0x150>
    e684:	8b 44 24 18          	mov    0x18(%esp),%eax
    e688:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e68c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    e691:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e698:	0f b7 c0             	movzwl %ax,%eax
    e69b:	8b 7c 24 18          	mov    0x18(%esp),%edi
    e69f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    e6a4:	89 44 24 10          	mov    %eax,0x10(%esp)
    e6a8:	eb 0b                	jmp    e6b5 <alu_test_mul+0x1f5>
    e6aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    e6b0:	8b 0f                	mov    (%edi),%ecx
    e6b2:	83 c7 04             	add    $0x4,%edi
    e6b5:	83 ec 04             	sub    $0x4,%esp
    e6b8:	0f b7 c9             	movzwl %cx,%ecx
    e6bb:	6a 10                	push   $0x10
    e6bd:	ff 74 24 18          	pushl  0x18(%esp)
    e6c1:	51                   	push   %ecx
    e6c2:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    e6c6:	89 4c 24 24          	mov    %ecx,0x24(%esp)
    e6ca:	e8 81 10 00 00       	call   f750 <alu_mul>
    e6cf:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    e6d3:	89 c6                	mov    %eax,%esi
    e6d5:	89 d3                	mov    %edx,%ebx
    e6d7:	8b 44 24 20          	mov    0x20(%esp),%eax
    e6db:	83 c4 10             	add    $0x10,%esp
    e6de:	66 f7 e1             	mul    %cx
    e6e1:	9c                   	pushf  
    e6e2:	59                   	pop    %ecx
    e6e3:	c1 e2 10             	shl    $0x10,%edx
    e6e6:	09 c2                	or     %eax,%edx
    e6e8:	31 d6                	xor    %edx,%esi
    e6ea:	09 f3                	or     %esi,%ebx
    e6ec:	0f 85 15 03 00 00    	jne    ea07 <alu_test_mul+0x547>
    e6f2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    e6f6:	89 ca                	mov    %ecx,%edx
    e6f8:	83 e2 01             	and    $0x1,%edx
    e6fb:	83 e0 01             	and    $0x1,%eax
    e6fe:	38 d0                	cmp    %dl,%al
    e700:	0f 85 ef 02 00 00    	jne    e9f5 <alu_test_mul+0x535>
    e706:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    e70a:	c1 e9 0b             	shr    $0xb,%ecx
    e70d:	83 e1 01             	and    $0x1,%ecx
    e710:	c0 e8 03             	shr    $0x3,%al
    e713:	83 e0 01             	and    $0x1,%eax
    e716:	38 c8                	cmp    %cl,%al
    e718:	0f 85 c5 02 00 00    	jne    e9e3 <alu_test_mul+0x523>
    e71e:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
    e722:	75 8c                	jne    e6b0 <alu_test_mul+0x1f0>
    e724:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    e728:	8b 44 24 0c          	mov    0xc(%esp),%eax
    e72c:	39 c3                	cmp    %eax,%ebx
    e72e:	74 0e                	je     e73e <alu_test_mul+0x27e>
    e730:	8b 03                	mov    (%ebx),%eax
    e732:	83 c3 04             	add    $0x4,%ebx
    e735:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
    e739:	e9 5a ff ff ff       	jmp    e698 <alu_test_mul+0x1d8>
    e73e:	c7 44 24 14 40 42 0f 	movl   $0xf4240,0x14(%esp)
    e745:	00 
    e746:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e74d:	8d 76 00             	lea    0x0(%esi),%esi
    e750:	8b 7c 24 08          	mov    0x8(%esp),%edi
    e754:	89 fb                	mov    %edi,%ebx
    e756:	e8 95 5a ff ff       	call   41f0 <rand@plt>
    e75b:	89 c6                	mov    %eax,%esi
    e75d:	e8 8e 5a ff ff       	call   41f0 <rand@plt>
    e762:	0f b7 f6             	movzwl %si,%esi
    e765:	83 ec 04             	sub    $0x4,%esp
    e768:	0f b7 c8             	movzwl %ax,%ecx
    e76b:	6a 10                	push   $0x10
    e76d:	56                   	push   %esi
    e76e:	51                   	push   %ecx
    e76f:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    e773:	e8 d8 0f 00 00       	call   f750 <alu_mul>
    e778:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    e77c:	83 c4 10             	add    $0x10,%esp
    e77f:	89 c3                	mov    %eax,%ebx
    e781:	89 d7                	mov    %edx,%edi
    e783:	89 f0                	mov    %esi,%eax
    e785:	66 f7 e1             	mul    %cx
    e788:	9c                   	pushf  
    e789:	59                   	pop    %ecx
    e78a:	89 d6                	mov    %edx,%esi
    e78c:	c1 e6 10             	shl    $0x10,%esi
    e78f:	09 c6                	or     %eax,%esi
    e791:	31 f3                	xor    %esi,%ebx
    e793:	09 df                	or     %ebx,%edi
    e795:	0f 85 ce 02 00 00    	jne    ea69 <alu_test_mul+0x5a9>
    e79b:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    e79f:	89 ca                	mov    %ecx,%edx
    e7a1:	83 e2 01             	and    $0x1,%edx
    e7a4:	83 e0 01             	and    $0x1,%eax
    e7a7:	38 d0                	cmp    %dl,%al
    e7a9:	0f 85 a5 02 00 00    	jne    ea54 <alu_test_mul+0x594>
    e7af:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    e7b3:	c1 e9 0b             	shr    $0xb,%ecx
    e7b6:	83 e1 01             	and    $0x1,%ecx
    e7b9:	c0 e8 03             	shr    $0x3,%al
    e7bc:	83 e0 01             	and    $0x1,%eax
    e7bf:	38 c8                	cmp    %cl,%al
    e7c1:	0f 85 78 02 00 00    	jne    ea3f <alu_test_mul+0x57f>
    e7c7:	83 6c 24 14 01       	subl   $0x1,0x14(%esp)
    e7cc:	75 82                	jne    e750 <alu_test_mul+0x290>
    e7ce:	8b 44 24 18          	mov    0x18(%esp),%eax
    e7d2:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    e7d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    e7db:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e7df:	90                   	nop
    e7e0:	0f b6 c0             	movzbl %al,%eax
    e7e3:	8b 7c 24 18          	mov    0x18(%esp),%edi
    e7e7:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    e7ec:	89 44 24 10          	mov    %eax,0x10(%esp)
    e7f0:	eb 0b                	jmp    e7fd <alu_test_mul+0x33d>
    e7f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    e7f8:	8b 0f                	mov    (%edi),%ecx
    e7fa:	83 c7 04             	add    $0x4,%edi
    e7fd:	83 ec 04             	sub    $0x4,%esp
    e800:	0f b6 c9             	movzbl %cl,%ecx
    e803:	6a 08                	push   $0x8
    e805:	ff 74 24 18          	pushl  0x18(%esp)
    e809:	51                   	push   %ecx
    e80a:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    e80e:	89 4c 24 24          	mov    %ecx,0x24(%esp)
    e812:	e8 39 0f 00 00       	call   f750 <alu_mul>
    e817:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    e81b:	89 c6                	mov    %eax,%esi
    e81d:	89 d3                	mov    %edx,%ebx
    e81f:	8b 44 24 20          	mov    0x20(%esp),%eax
    e823:	83 c4 10             	add    $0x10,%esp
    e826:	f6 e1                	mul    %cl
    e828:	9c                   	pushf  
    e829:	59                   	pop    %ecx
    e82a:	c1 e2 08             	shl    $0x8,%edx
    e82d:	09 c2                	or     %eax,%edx
    e82f:	31 d6                	xor    %edx,%esi
    e831:	09 f3                	or     %esi,%ebx
    e833:	0f 85 57 02 00 00    	jne    ea90 <alu_test_mul+0x5d0>
    e839:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    e83d:	89 ca                	mov    %ecx,%edx
    e83f:	83 e2 01             	and    $0x1,%edx
    e842:	83 e0 01             	and    $0x1,%eax
    e845:	38 d0                	cmp    %dl,%al
    e847:	0f 85 a2 02 00 00    	jne    eaef <alu_test_mul+0x62f>
    e84d:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    e851:	c1 e9 0b             	shr    $0xb,%ecx
    e854:	83 e1 01             	and    $0x1,%ecx
    e857:	c0 e8 03             	shr    $0x3,%al
    e85a:	83 e0 01             	and    $0x1,%eax
    e85d:	38 c8                	cmp    %cl,%al
    e85f:	0f 85 75 02 00 00    	jne    eada <alu_test_mul+0x61a>
    e865:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
    e869:	75 8d                	jne    e7f8 <alu_test_mul+0x338>
    e86b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    e86f:	8b 44 24 0c          	mov    0xc(%esp),%eax
    e873:	39 c3                	cmp    %eax,%ebx
    e875:	74 0e                	je     e885 <alu_test_mul+0x3c5>
    e877:	8b 03                	mov    (%ebx),%eax
    e879:	83 c3 04             	add    $0x4,%ebx
    e87c:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
    e880:	e9 5b ff ff ff       	jmp    e7e0 <alu_test_mul+0x320>
    e885:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
    e88c:	00 
    e88d:	8d 76 00             	lea    0x0(%esi),%esi
    e890:	8b 7c 24 08          	mov    0x8(%esp),%edi
    e894:	89 fb                	mov    %edi,%ebx
    e896:	e8 55 59 ff ff       	call   41f0 <rand@plt>
    e89b:	89 c6                	mov    %eax,%esi
    e89d:	e8 4e 59 ff ff       	call   41f0 <rand@plt>
    e8a2:	89 f2                	mov    %esi,%edx
    e8a4:	83 ec 04             	sub    $0x4,%esp
    e8a7:	0f b6 f2             	movzbl %dl,%esi
    e8aa:	0f b6 c8             	movzbl %al,%ecx
    e8ad:	6a 08                	push   $0x8
    e8af:	56                   	push   %esi
    e8b0:	51                   	push   %ecx
    e8b1:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
    e8b5:	e8 96 0e 00 00       	call   f750 <alu_mul>
    e8ba:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    e8be:	83 c4 10             	add    $0x10,%esp
    e8c1:	89 c7                	mov    %eax,%edi
    e8c3:	89 d3                	mov    %edx,%ebx
    e8c5:	89 f0                	mov    %esi,%eax
    e8c7:	f6 e1                	mul    %cl
    e8c9:	9c                   	pushf  
    e8ca:	59                   	pop    %ecx
    e8cb:	89 d6                	mov    %edx,%esi
    e8cd:	c1 e6 08             	shl    $0x8,%esi
    e8d0:	09 c6                	or     %eax,%esi
    e8d2:	31 f7                	xor    %esi,%edi
    e8d4:	09 fb                	or     %edi,%ebx
    e8d6:	0f 85 ec 01 00 00    	jne    eac8 <alu_test_mul+0x608>
    e8dc:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
    e8e0:	89 ca                	mov    %ecx,%edx
    e8e2:	83 e2 01             	and    $0x1,%edx
    e8e5:	83 e0 01             	and    $0x1,%eax
    e8e8:	38 d0                	cmp    %dl,%al
    e8ea:	0f 85 c3 01 00 00    	jne    eab3 <alu_test_mul+0x5f3>
    e8f0:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
    e8f4:	c1 e9 0b             	shr    $0xb,%ecx
    e8f7:	83 e1 01             	and    $0x1,%ecx
    e8fa:	c0 e8 03             	shr    $0x3,%al
    e8fd:	83 e0 01             	and    $0x1,%eax
    e900:	38 c8                	cmp    %cl,%al
    e902:	0f 85 73 01 00 00    	jne    ea7b <alu_test_mul+0x5bb>
    e908:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
    e90d:	75 81                	jne    e890 <alu_test_mul+0x3d0>
    e90f:	83 ec 0c             	sub    $0xc,%esp
    e912:	8b 7c 24 14          	mov    0x14(%esp),%edi
    e916:	8d 87 bc 72 fe ff    	lea    -0x18d44(%edi),%eax
    e91c:	89 fb                	mov    %edi,%ebx
    e91e:	50                   	push   %eax
    e91f:	e8 8c 59 ff ff       	call   42b0 <puts@plt>
    e924:	e8 d7 be 01 00       	call   2a800 <get_ref>
    e929:	83 c4 10             	add    $0x10,%esp
    e92c:	85 c0                	test   %eax,%eax
    e92e:	75 08                	jne    e938 <alu_test_mul+0x478>
    e930:	83 c4 5c             	add    $0x5c,%esp
    e933:	5b                   	pop    %ebx
    e934:	5e                   	pop    %esi
    e935:	5f                   	pop    %edi
    e936:	5d                   	pop    %ebp
    e937:	c3                   	ret    
    e938:	83 ec 0c             	sub    $0xc,%esp
    e93b:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    e93f:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    e945:	50                   	push   %eax
    e946:	e8 65 59 ff ff       	call   42b0 <puts@plt>
    e94b:	83 c4 10             	add    $0x10,%esp
    e94e:	83 c4 5c             	add    $0x5c,%esp
    e951:	5b                   	pop    %ebx
    e952:	5e                   	pop    %esi
    e953:	5f                   	pop    %edi
    e954:	5d                   	pop    %ebp
    e955:	c3                   	ret    
    e956:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    e95a:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    e960:	50                   	push   %eax
    e961:	68 47 02 00 00       	push   $0x247
    e966:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    e96c:	50                   	push   %eax
    e96d:	8d 83 fc 5e fe ff    	lea    -0x1a104(%ebx),%eax
    e973:	50                   	push   %eax
    e974:	e8 97 59 ff ff       	call   4310 <__assert_fail@plt>
    e979:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    e97d:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    e983:	50                   	push   %eax
    e984:	68 49 02 00 00       	push   $0x249
    e989:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    e98f:	50                   	push   %eax
    e990:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
    e996:	50                   	push   %eax
    e997:	e8 74 59 ff ff       	call   4310 <__assert_fail@plt>
    e99c:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    e9a0:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    e9a6:	50                   	push   %eax
    e9a7:	68 48 02 00 00       	push   $0x248
    e9ac:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    e9b2:	50                   	push   %eax
    e9b3:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
    e9b9:	50                   	push   %eax
    e9ba:	e8 51 59 ff ff       	call   4310 <__assert_fail@plt>
    e9bf:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    e9c3:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    e9c9:	50                   	push   %eax
    e9ca:	68 5d 02 00 00       	push   $0x25d
    e9cf:	eb db                	jmp    e9ac <alu_test_mul+0x4ec>
    e9d1:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    e9d5:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    e9db:	50                   	push   %eax
    e9dc:	68 5c 02 00 00       	push   $0x25c
    e9e1:	eb 83                	jmp    e966 <alu_test_mul+0x4a6>
    e9e3:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    e9e7:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    e9ed:	50                   	push   %eax
    e9ee:	68 71 02 00 00       	push   $0x271
    e9f3:	eb 94                	jmp    e989 <alu_test_mul+0x4c9>
    e9f5:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    e9f9:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    e9ff:	50                   	push   %eax
    ea00:	68 70 02 00 00       	push   $0x270
    ea05:	eb a5                	jmp    e9ac <alu_test_mul+0x4ec>
    ea07:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ea0b:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ea11:	50                   	push   %eax
    ea12:	68 6f 02 00 00       	push   $0x26f
    ea17:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ea1d:	50                   	push   %eax
    ea1e:	8d 83 20 5f fe ff    	lea    -0x1a0e0(%ebx),%eax
    ea24:	50                   	push   %eax
    ea25:	e8 e6 58 ff ff       	call   4310 <__assert_fail@plt>
    ea2a:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ea2e:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ea34:	50                   	push   %eax
    ea35:	68 5e 02 00 00       	push   $0x25e
    ea3a:	e9 4a ff ff ff       	jmp    e989 <alu_test_mul+0x4c9>
    ea3f:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ea43:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ea49:	50                   	push   %eax
    ea4a:	68 83 02 00 00       	push   $0x283
    ea4f:	e9 35 ff ff ff       	jmp    e989 <alu_test_mul+0x4c9>
    ea54:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ea58:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ea5e:	50                   	push   %eax
    ea5f:	68 82 02 00 00       	push   $0x282
    ea64:	e9 43 ff ff ff       	jmp    e9ac <alu_test_mul+0x4ec>
    ea69:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ea6d:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ea73:	50                   	push   %eax
    ea74:	68 81 02 00 00       	push   $0x281
    ea79:	eb 9c                	jmp    ea17 <alu_test_mul+0x557>
    ea7b:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ea7f:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ea85:	50                   	push   %eax
    ea86:	68 a7 02 00 00       	push   $0x2a7
    ea8b:	e9 f9 fe ff ff       	jmp    e989 <alu_test_mul+0x4c9>
    ea90:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    ea94:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ea9a:	50                   	push   %eax
    ea9b:	68 93 02 00 00       	push   $0x293
    eaa0:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    eaa6:	50                   	push   %eax
    eaa7:	8d 83 48 5f fe ff    	lea    -0x1a0b8(%ebx),%eax
    eaad:	50                   	push   %eax
    eaae:	e8 5d 58 ff ff       	call   4310 <__assert_fail@plt>
    eab3:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    eab7:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    eabd:	50                   	push   %eax
    eabe:	68 a6 02 00 00       	push   $0x2a6
    eac3:	e9 e4 fe ff ff       	jmp    e9ac <alu_test_mul+0x4ec>
    eac8:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    eacc:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    ead2:	50                   	push   %eax
    ead3:	68 a5 02 00 00       	push   $0x2a5
    ead8:	eb c6                	jmp    eaa0 <alu_test_mul+0x5e0>
    eada:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    eade:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    eae4:	50                   	push   %eax
    eae5:	68 95 02 00 00       	push   $0x295
    eaea:	e9 9a fe ff ff       	jmp    e989 <alu_test_mul+0x4c9>
    eaef:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    eaf3:	8d 83 90 5f fe ff    	lea    -0x1a070(%ebx),%eax
    eaf9:	50                   	push   %eax
    eafa:	68 94 02 00 00       	push   $0x294
    eaff:	e9 a8 fe ff ff       	jmp    e9ac <alu_test_mul+0x4ec>
    eb04:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    eb0b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    eb0f:	90                   	nop

0000eb10 <alu_test_idiv>:
    eb10:	55                   	push   %ebp
    eb11:	57                   	push   %edi
    eb12:	56                   	push   %esi
    eb13:	53                   	push   %ebx
    eb14:	e8 67 59 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    eb19:	81 c3 e7 04 04 00    	add    $0x404e7,%ebx
    eb1f:	83 ec 5c             	sub    $0x5c,%esp
    eb22:	8d 44 24 38          	lea    0x38(%esp),%eax
    eb26:	8d 7c 24 50          	lea    0x50(%esp),%edi
    eb2a:	c7 44 24 34 fd ff ff 	movl   $0xfffffffd,0x34(%esp)
    eb31:	ff 
    eb32:	c7 44 24 38 fe ff ff 	movl   $0xfffffffe,0x38(%esp)
    eb39:	ff 
    eb3a:	c7 44 24 3c ff ff ff 	movl   $0xffffffff,0x3c(%esp)
    eb41:	ff 
    eb42:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
    eb49:	00 
    eb4a:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%esp)
    eb51:	00 
    eb52:	c7 44 24 48 03 00 00 	movl   $0x3,0x48(%esp)
    eb59:	00 
    eb5a:	c7 44 24 4c 04 00 00 	movl   $0x4,0x4c(%esp)
    eb61:	00 
    eb62:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    eb66:	89 7c 24 20          	mov    %edi,0x20(%esp)
    eb6a:	89 44 24 28          	mov    %eax,0x28(%esp)
    eb6e:	c7 44 24 1c fd ff ff 	movl   $0xfffffffd,0x1c(%esp)
    eb75:	ff 
    eb76:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    eb7d:	8d 76 00             	lea    0x0(%esi),%esi
    eb80:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    eb84:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
    eb88:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
    eb8d:	99                   	cltd   
    eb8e:	89 44 24 08          	mov    %eax,0x8(%esp)
    eb92:	89 54 24 0c          	mov    %edx,0xc(%esp)
    eb96:	89 54 24 24          	mov    %edx,0x24(%esp)
    eb9a:	eb 0a                	jmp    eba6 <alu_test_idiv+0x96>
    eb9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    eba0:	8b 4d 00             	mov    0x0(%ebp),%ecx
    eba3:	83 c5 04             	add    $0x4,%ebp
    eba6:	89 cf                	mov    %ecx,%edi
    eba8:	89 4c 24 18          	mov    %ecx,0x18(%esp)
    ebac:	83 ec 0c             	sub    $0xc,%esp
    ebaf:	89 ce                	mov    %ecx,%esi
    ebb1:	c1 ff 1f             	sar    $0x1f,%edi
    ebb4:	6a 20                	push   $0x20
    ebb6:	ff 74 24 1c          	pushl  0x1c(%esp)
    ebba:	ff 74 24 1c          	pushl  0x1c(%esp)
    ebbe:	57                   	push   %edi
    ebbf:	51                   	push   %ecx
    ebc0:	e8 7b 0c 00 00       	call   f840 <alu_idiv>
    ebc5:	89 44 24 34          	mov    %eax,0x34(%esp)
    ebc9:	83 c4 20             	add    $0x20,%esp
    ebcc:	ff 74 24 0c          	pushl  0xc(%esp)
    ebd0:	ff 74 24 0c          	pushl  0xc(%esp)
    ebd4:	57                   	push   %edi
    ebd5:	56                   	push   %esi
    ebd6:	e8 35 0d 00 00       	call   f910 <alu_imod>
    ebdb:	8b 54 24 34          	mov    0x34(%esp),%edx
    ebdf:	8b 4c 24 28          	mov    0x28(%esp),%ecx
    ebe3:	89 c6                	mov    %eax,%esi
    ebe5:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    ebe9:	83 c4 10             	add    $0x10,%esp
    ebec:	f7 f9                	idiv   %ecx
    ebee:	39 44 24 14          	cmp    %eax,0x14(%esp)
    ebf2:	0f 85 49 01 00 00    	jne    ed41 <alu_test_idiv+0x231>
    ebf8:	39 d6                	cmp    %edx,%esi
    ebfa:	0f 85 33 01 00 00    	jne    ed33 <alu_test_idiv+0x223>
    ec00:	39 6c 24 20          	cmp    %ebp,0x20(%esp)
    ec04:	75 9a                	jne    eba0 <alu_test_idiv+0x90>
    ec06:	8b 44 24 28          	mov    0x28(%esp),%eax
    ec0a:	39 44 24 20          	cmp    %eax,0x20(%esp)
    ec0e:	74 18                	je     ec28 <alu_test_idiv+0x118>
    ec10:	8b 38                	mov    (%eax),%edi
    ec12:	83 c0 04             	add    $0x4,%eax
    ec15:	89 44 24 28          	mov    %eax,0x28(%esp)
    ec19:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    ec1d:	e9 5e ff ff ff       	jmp    eb80 <alu_test_idiv+0x70>
    ec22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ec28:	83 ec 0c             	sub    $0xc,%esp
    ec2b:	6a 00                	push   $0x0
    ec2d:	e8 fe 54 ff ff       	call   4130 <time@plt>
    ec32:	89 04 24             	mov    %eax,(%esp)
    ec35:	e8 56 55 ff ff       	call   4190 <srand@plt>
    ec3a:	83 c4 10             	add    $0x10,%esp
    ec3d:	c7 44 24 18 40 42 0f 	movl   $0xf4240,0x18(%esp)
    ec44:	00 
    ec45:	8d 76 00             	lea    0x0(%esi),%esi
    ec48:	e8 a3 55 ff ff       	call   41f0 <rand@plt>
    ec4d:	89 c5                	mov    %eax,%ebp
    ec4f:	e8 9c 55 ff ff       	call   41f0 <rand@plt>
    ec54:	89 c7                	mov    %eax,%edi
    ec56:	89 c1                	mov    %eax,%ecx
    ec58:	89 c6                	mov    %eax,%esi
    ec5a:	c1 ff 1f             	sar    $0x1f,%edi
    ec5d:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    ec61:	89 f8                	mov    %edi,%eax
    ec63:	09 c8                	or     %ecx,%eax
    ec65:	74 4a                	je     ecb1 <alu_test_idiv+0x1a1>
    ec67:	83 ec 0c             	sub    $0xc,%esp
    ec6a:	89 e8                	mov    %ebp,%eax
    ec6c:	6a 20                	push   $0x20
    ec6e:	99                   	cltd   
    ec6f:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    ec73:	89 6c 24 18          	mov    %ebp,0x18(%esp)
    ec77:	52                   	push   %edx
    ec78:	55                   	push   %ebp
    ec79:	57                   	push   %edi
    ec7a:	51                   	push   %ecx
    ec7b:	e8 c0 0b 00 00       	call   f840 <alu_idiv>
    ec80:	89 44 24 3c          	mov    %eax,0x3c(%esp)
    ec84:	83 c4 20             	add    $0x20,%esp
    ec87:	ff 74 24 0c          	pushl  0xc(%esp)
    ec8b:	ff 74 24 0c          	pushl  0xc(%esp)
    ec8f:	57                   	push   %edi
    ec90:	56                   	push   %esi
    ec91:	e8 7a 0c 00 00       	call   f910 <alu_imod>
    ec96:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    ec9a:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    ec9e:	83 c4 10             	add    $0x10,%esp
    eca1:	89 c6                	mov    %eax,%esi
    eca3:	89 e8                	mov    %ebp,%eax
    eca5:	f7 f9                	idiv   %ecx
    eca7:	39 44 24 1c          	cmp    %eax,0x1c(%esp)
    ecab:	75 67                	jne    ed14 <alu_test_idiv+0x204>
    ecad:	39 d6                	cmp    %edx,%esi
    ecaf:	75 44                	jne    ecf5 <alu_test_idiv+0x1e5>
    ecb1:	83 6c 24 18 01       	subl   $0x1,0x18(%esp)
    ecb6:	75 90                	jne    ec48 <alu_test_idiv+0x138>
    ecb8:	83 ec 0c             	sub    $0xc,%esp
    ecbb:	8d 83 e4 72 fe ff    	lea    -0x18d1c(%ebx),%eax
    ecc1:	50                   	push   %eax
    ecc2:	e8 e9 55 ff ff       	call   42b0 <puts@plt>
    ecc7:	e8 34 bb 01 00       	call   2a800 <get_ref>
    eccc:	83 c4 10             	add    $0x10,%esp
    eccf:	85 c0                	test   %eax,%eax
    ecd1:	75 08                	jne    ecdb <alu_test_idiv+0x1cb>
    ecd3:	83 c4 5c             	add    $0x5c,%esp
    ecd6:	5b                   	pop    %ebx
    ecd7:	5e                   	pop    %esi
    ecd8:	5f                   	pop    %edi
    ecd9:	5d                   	pop    %ebp
    ecda:	c3                   	ret    
    ecdb:	83 ec 0c             	sub    $0xc,%esp
    ecde:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    ece4:	50                   	push   %eax
    ece5:	e8 c6 55 ff ff       	call   42b0 <puts@plt>
    ecea:	83 c4 10             	add    $0x10,%esp
    eced:	83 c4 5c             	add    $0x5c,%esp
    ecf0:	5b                   	pop    %ebx
    ecf1:	5e                   	pop    %esi
    ecf2:	5f                   	pop    %edi
    ecf3:	5d                   	pop    %ebp
    ecf4:	c3                   	ret    
    ecf5:	8d 83 80 5f fe ff    	lea    -0x1a080(%ebx),%eax
    ecfb:	50                   	push   %eax
    ecfc:	68 cc 02 00 00       	push   $0x2cc
    ed01:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ed07:	50                   	push   %eax
    ed08:	8d 83 1f 5d fe ff    	lea    -0x1a2e1(%ebx),%eax
    ed0e:	50                   	push   %eax
    ed0f:	e8 fc 55 ff ff       	call   4310 <__assert_fail@plt>
    ed14:	8d 83 80 5f fe ff    	lea    -0x1a080(%ebx),%eax
    ed1a:	50                   	push   %eax
    ed1b:	68 cb 02 00 00       	push   $0x2cb
    ed20:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ed26:	50                   	push   %eax
    ed27:	8d 83 10 5d fe ff    	lea    -0x1a2f0(%ebx),%eax
    ed2d:	50                   	push   %eax
    ed2e:	e8 dd 55 ff ff       	call   4310 <__assert_fail@plt>
    ed33:	8d 83 80 5f fe ff    	lea    -0x1a080(%ebx),%eax
    ed39:	50                   	push   %eax
    ed3a:	68 be 02 00 00       	push   $0x2be
    ed3f:	eb c0                	jmp    ed01 <alu_test_idiv+0x1f1>
    ed41:	8d 83 80 5f fe ff    	lea    -0x1a080(%ebx),%eax
    ed47:	50                   	push   %eax
    ed48:	68 bd 02 00 00       	push   $0x2bd
    ed4d:	eb d1                	jmp    ed20 <alu_test_idiv+0x210>
    ed4f:	90                   	nop

0000ed50 <alu_test_div>:
    ed50:	55                   	push   %ebp
    ed51:	57                   	push   %edi
    ed52:	56                   	push   %esi
    ed53:	53                   	push   %ebx
    ed54:	e8 27 57 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    ed59:	81 c3 a7 02 04 00    	add    $0x402a7,%ebx
    ed5f:	83 ec 4c             	sub    $0x4c,%esp
    ed62:	8d 44 24 28          	lea    0x28(%esp),%eax
    ed66:	8d 7c 24 40          	lea    0x40(%esp),%edi
    ed6a:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
    ed71:	ff 
    ed72:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
    ed79:	ff 
    ed7a:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
    ed81:	ff 
    ed82:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
    ed89:	00 
    ed8a:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
    ed91:	00 
    ed92:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
    ed99:	00 
    ed9a:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
    eda1:	00 
    eda2:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    eda6:	89 7c 24 14          	mov    %edi,0x14(%esp)
    edaa:	89 44 24 18          	mov    %eax,0x18(%esp)
    edae:	c7 44 24 10 fd ff ff 	movl   $0xfffffffd,0x10(%esp)
    edb5:	ff 
    edb6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    edbd:	8d 76 00             	lea    0x0(%esi),%esi
    edc0:	8b 44 24 10          	mov    0x10(%esp),%eax
    edc4:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
    edc8:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
    edcd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    edd4:	00 
    edd5:	89 04 24             	mov    %eax,(%esp)
    edd8:	eb 0c                	jmp    ede6 <alu_test_div+0x96>
    edda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ede0:	8b 4d 00             	mov    0x0(%ebp),%ecx
    ede3:	83 c5 04             	add    $0x4,%ebp
    ede6:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    edea:	31 ff                	xor    %edi,%edi
    edec:	83 ec 0c             	sub    $0xc,%esp
    edef:	89 ce                	mov    %ecx,%esi
    edf1:	6a 20                	push   $0x20
    edf3:	ff 74 24 14          	pushl  0x14(%esp)
    edf7:	ff 74 24 14          	pushl  0x14(%esp)
    edfb:	57                   	push   %edi
    edfc:	51                   	push   %ecx
    edfd:	e8 ce 09 00 00       	call   f7d0 <alu_div>
    ee02:	89 44 24 28          	mov    %eax,0x28(%esp)
    ee06:	83 c4 20             	add    $0x20,%esp
    ee09:	ff 74 24 04          	pushl  0x4(%esp)
    ee0d:	ff 74 24 04          	pushl  0x4(%esp)
    ee11:	57                   	push   %edi
    ee12:	56                   	push   %esi
    ee13:	e8 98 0a 00 00       	call   f8b0 <alu_mod>
    ee18:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    ee1c:	31 d2                	xor    %edx,%edx
    ee1e:	89 c6                	mov    %eax,%esi
    ee20:	8b 44 24 20          	mov    0x20(%esp),%eax
    ee24:	83 c4 10             	add    $0x10,%esp
    ee27:	f7 f1                	div    %ecx
    ee29:	39 44 24 08          	cmp    %eax,0x8(%esp)
    ee2d:	0f 85 41 01 00 00    	jne    ef74 <alu_test_div+0x224>
    ee33:	39 d6                	cmp    %edx,%esi
    ee35:	0f 85 2b 01 00 00    	jne    ef66 <alu_test_div+0x216>
    ee3b:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
    ee3f:	75 9f                	jne    ede0 <alu_test_div+0x90>
    ee41:	8b 44 24 18          	mov    0x18(%esp),%eax
    ee45:	8b 7c 24 14          	mov    0x14(%esp),%edi
    ee49:	39 f8                	cmp    %edi,%eax
    ee4b:	74 13                	je     ee60 <alu_test_div+0x110>
    ee4d:	8b 38                	mov    (%eax),%edi
    ee4f:	83 c0 04             	add    $0x4,%eax
    ee52:	89 44 24 18          	mov    %eax,0x18(%esp)
    ee56:	89 7c 24 10          	mov    %edi,0x10(%esp)
    ee5a:	e9 61 ff ff ff       	jmp    edc0 <alu_test_div+0x70>
    ee5f:	90                   	nop
    ee60:	83 ec 0c             	sub    $0xc,%esp
    ee63:	6a 00                	push   $0x0
    ee65:	e8 c6 52 ff ff       	call   4130 <time@plt>
    ee6a:	89 04 24             	mov    %eax,(%esp)
    ee6d:	e8 1e 53 ff ff       	call   4190 <srand@plt>
    ee72:	83 c4 10             	add    $0x10,%esp
    ee75:	c7 44 24 08 40 42 0f 	movl   $0xf4240,0x8(%esp)
    ee7c:	00 
    ee7d:	8d 76 00             	lea    0x0(%esi),%esi
    ee80:	e8 6b 53 ff ff       	call   41f0 <rand@plt>
    ee85:	89 c5                	mov    %eax,%ebp
    ee87:	e8 64 53 ff ff       	call   41f0 <rand@plt>
    ee8c:	89 c1                	mov    %eax,%ecx
    ee8e:	85 c0                	test   %eax,%eax
    ee90:	74 52                	je     eee4 <alu_test_div+0x194>
    ee92:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    ee96:	83 ec 0c             	sub    $0xc,%esp
    ee99:	89 e8                	mov    %ebp,%eax
    ee9b:	31 ff                	xor    %edi,%edi
    ee9d:	6a 20                	push   $0x20
    ee9f:	99                   	cltd   
    eea0:	89 ce                	mov    %ecx,%esi
    eea2:	89 54 24 14          	mov    %edx,0x14(%esp)
    eea6:	89 6c 24 10          	mov    %ebp,0x10(%esp)
    eeaa:	52                   	push   %edx
    eeab:	55                   	push   %ebp
    eeac:	57                   	push   %edi
    eead:	51                   	push   %ecx
    eeae:	e8 1d 09 00 00       	call   f7d0 <alu_div>
    eeb3:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    eeb7:	83 c4 20             	add    $0x20,%esp
    eeba:	ff 74 24 04          	pushl  0x4(%esp)
    eebe:	ff 74 24 04          	pushl  0x4(%esp)
    eec2:	57                   	push   %edi
    eec3:	56                   	push   %esi
    eec4:	e8 e7 09 00 00       	call   f8b0 <alu_mod>
    eec9:	8b 54 24 14          	mov    0x14(%esp),%edx
    eecd:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    eed1:	83 c4 10             	add    $0x10,%esp
    eed4:	89 c6                	mov    %eax,%esi
    eed6:	89 e8                	mov    %ebp,%eax
    eed8:	f7 f1                	div    %ecx
    eeda:	39 44 24 0c          	cmp    %eax,0xc(%esp)
    eede:	75 67                	jne    ef47 <alu_test_div+0x1f7>
    eee0:	39 d6                	cmp    %edx,%esi
    eee2:	75 44                	jne    ef28 <alu_test_div+0x1d8>
    eee4:	83 6c 24 08 01       	subl   $0x1,0x8(%esp)
    eee9:	75 95                	jne    ee80 <alu_test_div+0x130>
    eeeb:	83 ec 0c             	sub    $0xc,%esp
    eeee:	8d 83 0c 73 fe ff    	lea    -0x18cf4(%ebx),%eax
    eef4:	50                   	push   %eax
    eef5:	e8 b6 53 ff ff       	call   42b0 <puts@plt>
    eefa:	e8 01 b9 01 00       	call   2a800 <get_ref>
    eeff:	83 c4 10             	add    $0x10,%esp
    ef02:	85 c0                	test   %eax,%eax
    ef04:	75 08                	jne    ef0e <alu_test_div+0x1be>
    ef06:	83 c4 4c             	add    $0x4c,%esp
    ef09:	5b                   	pop    %ebx
    ef0a:	5e                   	pop    %esi
    ef0b:	5f                   	pop    %edi
    ef0c:	5d                   	pop    %ebp
    ef0d:	c3                   	ret    
    ef0e:	83 ec 0c             	sub    $0xc,%esp
    ef11:	8d 83 d0 5d fe ff    	lea    -0x1a230(%ebx),%eax
    ef17:	50                   	push   %eax
    ef18:	e8 93 53 ff ff       	call   42b0 <puts@plt>
    ef1d:	83 c4 10             	add    $0x10,%esp
    ef20:	83 c4 4c             	add    $0x4c,%esp
    ef23:	5b                   	pop    %ebx
    ef24:	5e                   	pop    %esi
    ef25:	5f                   	pop    %edi
    ef26:	5d                   	pop    %ebp
    ef27:	c3                   	ret    
    ef28:	8d 83 70 5f fe ff    	lea    -0x1a090(%ebx),%eax
    ef2e:	50                   	push   %eax
    ef2f:	68 f2 02 00 00       	push   $0x2f2
    ef34:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ef3a:	50                   	push   %eax
    ef3b:	8d 83 1f 5d fe ff    	lea    -0x1a2e1(%ebx),%eax
    ef41:	50                   	push   %eax
    ef42:	e8 c9 53 ff ff       	call   4310 <__assert_fail@plt>
    ef47:	8d 83 70 5f fe ff    	lea    -0x1a090(%ebx),%eax
    ef4d:	50                   	push   %eax
    ef4e:	68 f1 02 00 00       	push   $0x2f1
    ef53:	8d 83 e9 5c fe ff    	lea    -0x1a317(%ebx),%eax
    ef59:	50                   	push   %eax
    ef5a:	8d 83 10 5d fe ff    	lea    -0x1a2f0(%ebx),%eax
    ef60:	50                   	push   %eax
    ef61:	e8 aa 53 ff ff       	call   4310 <__assert_fail@plt>
    ef66:	8d 83 70 5f fe ff    	lea    -0x1a090(%ebx),%eax
    ef6c:	50                   	push   %eax
    ef6d:	68 e4 02 00 00       	push   $0x2e4
    ef72:	eb c0                	jmp    ef34 <alu_test_div+0x1e4>
    ef74:	8d 83 70 5f fe ff    	lea    -0x1a090(%ebx),%eax
    ef7a:	50                   	push   %eax
    ef7b:	68 e3 02 00 00       	push   $0x2e3
    ef80:	eb d1                	jmp    ef53 <alu_test_div+0x203>
    ef82:	66 90                	xchg   %ax,%ax
    ef84:	66 90                	xchg   %ax,%ax
    ef86:	66 90                	xchg   %ax,%ax
    ef88:	66 90                	xchg   %ax,%ax
    ef8a:	66 90                	xchg   %ax,%ax
    ef8c:	66 90                	xchg   %ax,%ax
    ef8e:	66 90                	xchg   %ax,%ax

0000ef90 <sign_ext.part.0>:
    ef90:	53                   	push   %ebx
    ef91:	e8 ea 54 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    ef96:	81 c3 6a 00 04 00    	add    $0x4006a,%ebx
    ef9c:	83 ec 08             	sub    $0x8,%esp
    ef9f:	8d 83 a8 60 fe ff    	lea    -0x19f58(%ebx),%eax
    efa5:	50                   	push   %eax
    efa6:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
    efac:	6a 2e                	push   $0x2e
    efae:	50                   	push   %eax
    efaf:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
    efb5:	50                   	push   %eax
    efb6:	e8 55 53 ff ff       	call   4310 <__assert_fail@plt>
    efbb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    efbf:	90                   	nop

0000efc0 <set_ZF>:
    efc0:	e8 12 73 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    efc5:	05 3b 00 04 00       	add    $0x4003b,%eax
    efca:	53                   	push   %ebx
    efcb:	b9 20 00 00 00       	mov    $0x20,%ecx
    efd0:	2b 4c 24 0c          	sub    0xc(%esp),%ecx
    efd4:	8d 98 60 32 05 00    	lea    0x53260(%eax),%ebx
    efda:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    efdf:	d3 e8                	shr    %cl,%eax
    efe1:	85 44 24 08          	test   %eax,0x8(%esp)
    efe5:	0f b6 43 24          	movzbl 0x24(%ebx),%eax
    efe9:	0f 94 c2             	sete   %dl
    efec:	c1 e2 06             	shl    $0x6,%edx
    efef:	83 e0 bf             	and    $0xffffffbf,%eax
    eff2:	09 d0                	or     %edx,%eax
    eff4:	88 43 24             	mov    %al,0x24(%ebx)
    eff7:	5b                   	pop    %ebx
    eff8:	c3                   	ret    
    eff9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f000 <set_SF>:
    f000:	53                   	push   %ebx
    f001:	b9 20 00 00 00       	mov    $0x20,%ecx
    f006:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f00b:	e8 70 54 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f010:	81 c3 f0 ff 03 00    	add    $0x3fff0,%ebx
    f016:	83 ec 08             	sub    $0x8,%esp
    f019:	8b 54 24 14          	mov    0x14(%esp),%edx
    f01d:	29 d1                	sub    %edx,%ecx
    f01f:	d3 e8                	shr    %cl,%eax
    f021:	8d 4a f8             	lea    -0x8(%edx),%ecx
    f024:	23 44 24 10          	and    0x10(%esp),%eax
    f028:	83 e1 f7             	and    $0xfffffff7,%ecx
    f02b:	74 05                	je     f032 <set_SF+0x32>
    f02d:	83 fa 20             	cmp    $0x20,%edx
    f030:	75 33                	jne    f065 <set_SF+0x65>
    f032:	83 fa 08             	cmp    $0x8,%edx
    f035:	74 29                	je     f060 <set_SF+0x60>
    f037:	0f bf c8             	movswl %ax,%ecx
    f03a:	83 fa 10             	cmp    $0x10,%edx
    f03d:	0f 44 c1             	cmove  %ecx,%eax
    f040:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
    f046:	c1 e8 1f             	shr    $0x1f,%eax
    f049:	c1 e0 07             	shl    $0x7,%eax
    f04c:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
    f050:	83 e2 7f             	and    $0x7f,%edx
    f053:	09 d0                	or     %edx,%eax
    f055:	88 41 24             	mov    %al,0x24(%ecx)
    f058:	83 c4 08             	add    $0x8,%esp
    f05b:	5b                   	pop    %ebx
    f05c:	c3                   	ret    
    f05d:	8d 76 00             	lea    0x0(%esi),%esi
    f060:	0f be c0             	movsbl %al,%eax
    f063:	eb db                	jmp    f040 <set_SF+0x40>
    f065:	e8 26 ff ff ff       	call   ef90 <sign_ext.part.0>
    f06a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f070 <set_PF>:
    f070:	57                   	push   %edi
    f071:	31 c9                	xor    %ecx,%ecx
    f073:	31 c0                	xor    %eax,%eax
    f075:	e8 dc 5c ff ff       	call   4d56 <__x86.get_pc_thunk.di>
    f07a:	81 c7 86 ff 03 00    	add    $0x3ff86,%edi
    f080:	56                   	push   %esi
    f081:	53                   	push   %ebx
    f082:	0f b6 74 24 10       	movzbl 0x10(%esp),%esi
    f087:	bb 80 00 00 00       	mov    $0x80,%ebx
    f08c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f090:	89 da                	mov    %ebx,%edx
    f092:	d3 fa                	sar    %cl,%edx
    f094:	85 f2                	test   %esi,%edx
    f096:	0f 95 c2             	setne  %dl
    f099:	83 c1 01             	add    $0x1,%ecx
    f09c:	0f b6 d2             	movzbl %dl,%edx
    f09f:	01 d0                	add    %edx,%eax
    f0a1:	83 f9 08             	cmp    $0x8,%ecx
    f0a4:	75 ea                	jne    f090 <set_PF+0x20>
    f0a6:	8d 8f 60 32 05 00    	lea    0x53260(%edi),%ecx
    f0ac:	f7 d0                	not    %eax
    f0ae:	83 e0 01             	and    $0x1,%eax
    f0b1:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
    f0b5:	c1 e0 02             	shl    $0x2,%eax
    f0b8:	83 e2 fb             	and    $0xfffffffb,%edx
    f0bb:	09 d0                	or     %edx,%eax
    f0bd:	88 41 24             	mov    %al,0x24(%ecx)
    f0c0:	5b                   	pop    %ebx
    f0c1:	5e                   	pop    %esi
    f0c2:	5f                   	pop    %edi
    f0c3:	c3                   	ret    
    f0c4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f0cb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f0cf:	90                   	nop

0000f0d0 <set_CF_add>:
    f0d0:	56                   	push   %esi
    f0d1:	b9 20 00 00 00       	mov    $0x20,%ecx
    f0d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f0db:	53                   	push   %ebx
    f0dc:	e8 9f 53 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f0e1:	81 c3 1f ff 03 00    	add    $0x3ff1f,%ebx
    f0e7:	83 ec 04             	sub    $0x4,%esp
    f0ea:	8b 54 24 18          	mov    0x18(%esp),%edx
    f0ee:	29 d1                	sub    %edx,%ecx
    f0f0:	8d 72 f8             	lea    -0x8(%edx),%esi
    f0f3:	d3 e8                	shr    %cl,%eax
    f0f5:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    f0f9:	21 c1                	and    %eax,%ecx
    f0fb:	83 e6 f7             	and    $0xfffffff7,%esi
    f0fe:	74 05                	je     f105 <set_CF_add+0x35>
    f100:	83 fa 20             	cmp    $0x20,%edx
    f103:	75 43                	jne    f148 <set_CF_add+0x78>
    f105:	23 44 24 14          	and    0x14(%esp),%eax
    f109:	83 fa 08             	cmp    $0x8,%edx
    f10c:	74 32                	je     f140 <set_CF_add+0x70>
    f10e:	83 fa 10             	cmp    $0x10,%edx
    f111:	74 1d                	je     f130 <set_CF_add+0x60>
    f113:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
    f119:	39 c8                	cmp    %ecx,%eax
    f11b:	0f 97 c1             	seta   %cl
    f11e:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    f122:	83 e0 fe             	and    $0xfffffffe,%eax
    f125:	09 c8                	or     %ecx,%eax
    f127:	88 42 24             	mov    %al,0x24(%edx)
    f12a:	83 c4 04             	add    $0x4,%esp
    f12d:	5b                   	pop    %ebx
    f12e:	5e                   	pop    %esi
    f12f:	c3                   	ret    
    f130:	0f bf c9             	movswl %cx,%ecx
    f133:	98                   	cwtl   
    f134:	eb dd                	jmp    f113 <set_CF_add+0x43>
    f136:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f13d:	8d 76 00             	lea    0x0(%esi),%esi
    f140:	0f be c9             	movsbl %cl,%ecx
    f143:	0f be c0             	movsbl %al,%eax
    f146:	eb cb                	jmp    f113 <set_CF_add+0x43>
    f148:	e8 43 fe ff ff       	call   ef90 <sign_ext.part.0>
    f14d:	8d 76 00             	lea    0x0(%esi),%esi

0000f150 <set_CF_adc>:
    f150:	56                   	push   %esi
    f151:	b9 20 00 00 00       	mov    $0x20,%ecx
    f156:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f15b:	53                   	push   %ebx
    f15c:	e8 1f 53 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f161:	81 c3 9f fe 03 00    	add    $0x3fe9f,%ebx
    f167:	83 ec 04             	sub    $0x4,%esp
    f16a:	8b 54 24 18          	mov    0x18(%esp),%edx
    f16e:	29 d1                	sub    %edx,%ecx
    f170:	8d 72 f8             	lea    -0x8(%edx),%esi
    f173:	d3 e8                	shr    %cl,%eax
    f175:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    f179:	21 c1                	and    %eax,%ecx
    f17b:	83 e6 f7             	and    $0xfffffff7,%esi
    f17e:	74 05                	je     f185 <set_CF_adc+0x35>
    f180:	83 fa 20             	cmp    $0x20,%edx
    f183:	75 77                	jne    f1fc <set_CF_adc+0xac>
    f185:	23 44 24 14          	and    0x14(%esp),%eax
    f189:	83 fa 08             	cmp    $0x8,%edx
    f18c:	74 5a                	je     f1e8 <set_CF_adc+0x98>
    f18e:	83 fa 10             	cmp    $0x10,%edx
    f191:	74 3d                	je     f1d0 <set_CF_adc+0x80>
    f193:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
    f199:	f6 42 24 01          	testb  $0x1,0x24(%edx)
    f19d:	75 21                	jne    f1c0 <set_CF_adc+0x70>
    f19f:	39 c8                	cmp    %ecx,%eax
    f1a1:	0f 97 c1             	seta   %cl
    f1a4:	0f b6 42 24          	movzbl 0x24(%edx),%eax
    f1a8:	83 e0 fe             	and    $0xfffffffe,%eax
    f1ab:	09 c8                	or     %ecx,%eax
    f1ad:	88 42 24             	mov    %al,0x24(%edx)
    f1b0:	83 c4 04             	add    $0x4,%esp
    f1b3:	5b                   	pop    %ebx
    f1b4:	5e                   	pop    %esi
    f1b5:	c3                   	ret    
    f1b6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f1bd:	8d 76 00             	lea    0x0(%esi),%esi
    f1c0:	39 c8                	cmp    %ecx,%eax
    f1c2:	0f 93 c1             	setae  %cl
    f1c5:	eb dd                	jmp    f1a4 <set_CF_adc+0x54>
    f1c7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f1ce:	66 90                	xchg   %ax,%ax
    f1d0:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
    f1d6:	0f bf c9             	movswl %cx,%ecx
    f1d9:	98                   	cwtl   
    f1da:	f6 42 24 01          	testb  $0x1,0x24(%edx)
    f1de:	74 bf                	je     f19f <set_CF_adc+0x4f>
    f1e0:	eb de                	jmp    f1c0 <set_CF_adc+0x70>
    f1e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f1e8:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
    f1ee:	0f be c9             	movsbl %cl,%ecx
    f1f1:	0f be c0             	movsbl %al,%eax
    f1f4:	f6 42 24 01          	testb  $0x1,0x24(%edx)
    f1f8:	74 a5                	je     f19f <set_CF_adc+0x4f>
    f1fa:	eb c4                	jmp    f1c0 <set_CF_adc+0x70>
    f1fc:	e8 8f fd ff ff       	call   ef90 <sign_ext.part.0>
    f201:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f208:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f20f:	90                   	nop

0000f210 <set_CF_sub>:
    f210:	e9 bb fe ff ff       	jmp    f0d0 <set_CF_add>
    f215:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f21c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000f220 <set_CF_sbb>:
    f220:	e9 2b ff ff ff       	jmp    f150 <set_CF_adc>
    f225:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f22c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000f230 <set_OF_add>:
    f230:	e8 40 53 ff ff       	call   4575 <__x86.get_pc_thunk.dx>
    f235:	81 c2 cb fd 03 00    	add    $0x3fdcb,%edx
    f23b:	56                   	push   %esi
    f23c:	b9 20 00 00 00       	mov    $0x20,%ecx
    f241:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f246:	53                   	push   %ebx
    f247:	83 ec 04             	sub    $0x4,%esp
    f24a:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    f24e:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    f252:	29 f1                	sub    %esi,%ecx
    f254:	d3 e8                	shr    %cl,%eax
    f256:	8d 4e f8             	lea    -0x8(%esi),%ecx
    f259:	21 c3                	and    %eax,%ebx
    f25b:	83 e1 f7             	and    $0xfffffff7,%ecx
    f25e:	74 05                	je     f265 <set_OF_add+0x35>
    f260:	83 fe 20             	cmp    $0x20,%esi
    f263:	75 72                	jne    f2d7 <set_OF_add+0xa7>
    f265:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    f269:	21 c1                	and    %eax,%ecx
    f26b:	83 fe 08             	cmp    $0x8,%esi
    f26e:	74 58                	je     f2c8 <set_OF_add+0x98>
    f270:	83 fe 10             	cmp    $0x10,%esi
    f273:	74 23                	je     f298 <set_OF_add+0x68>
    f275:	23 44 24 18          	and    0x18(%esp),%eax
    f279:	c1 e8 1f             	shr    $0x1f,%eax
    f27c:	c1 e9 1f             	shr    $0x1f,%ecx
    f27f:	39 c1                	cmp    %eax,%ecx
    f281:	8d 82 60 32 05 00    	lea    0x53260(%edx),%eax
    f287:	74 2a                	je     f2b3 <set_OF_add+0x83>
    f289:	80 60 25 f7          	andb   $0xf7,0x25(%eax)
    f28d:	83 c4 04             	add    $0x4,%esp
    f290:	5b                   	pop    %ebx
    f291:	5e                   	pop    %esi
    f292:	c3                   	ret    
    f293:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f297:	90                   	nop
    f298:	23 44 24 18          	and    0x18(%esp),%eax
    f29c:	0f bf c9             	movswl %cx,%ecx
    f29f:	0f bf db             	movswl %bx,%ebx
    f2a2:	98                   	cwtl   
    f2a3:	c1 e9 1f             	shr    $0x1f,%ecx
    f2a6:	c1 e8 1f             	shr    $0x1f,%eax
    f2a9:	39 c1                	cmp    %eax,%ecx
    f2ab:	8d 82 60 32 05 00    	lea    0x53260(%edx),%eax
    f2b1:	75 d6                	jne    f289 <set_OF_add+0x59>
    f2b3:	c1 eb 1f             	shr    $0x1f,%ebx
    f2b6:	39 d9                	cmp    %ebx,%ecx
    f2b8:	74 cf                	je     f289 <set_OF_add+0x59>
    f2ba:	80 48 25 08          	orb    $0x8,0x25(%eax)
    f2be:	83 c4 04             	add    $0x4,%esp
    f2c1:	5b                   	pop    %ebx
    f2c2:	5e                   	pop    %esi
    f2c3:	c3                   	ret    
    f2c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f2c8:	23 44 24 18          	and    0x18(%esp),%eax
    f2cc:	0f be db             	movsbl %bl,%ebx
    f2cf:	0f be c9             	movsbl %cl,%ecx
    f2d2:	0f be c0             	movsbl %al,%eax
    f2d5:	eb a2                	jmp    f279 <set_OF_add+0x49>
    f2d7:	e8 b4 fc ff ff       	call   ef90 <sign_ext.part.0>
    f2dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000f2e0 <set_OF_sub>:
    f2e0:	e8 90 52 ff ff       	call   4575 <__x86.get_pc_thunk.dx>
    f2e5:	81 c2 1b fd 03 00    	add    $0x3fd1b,%edx
    f2eb:	56                   	push   %esi
    f2ec:	b9 20 00 00 00       	mov    $0x20,%ecx
    f2f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f2f6:	53                   	push   %ebx
    f2f7:	83 ec 04             	sub    $0x4,%esp
    f2fa:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    f2fe:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    f302:	29 f1                	sub    %esi,%ecx
    f304:	d3 e8                	shr    %cl,%eax
    f306:	8d 4e f8             	lea    -0x8(%esi),%ecx
    f309:	21 c3                	and    %eax,%ebx
    f30b:	83 e1 f7             	and    $0xfffffff7,%ecx
    f30e:	74 05                	je     f315 <set_OF_sub+0x35>
    f310:	83 fe 20             	cmp    $0x20,%esi
    f313:	75 72                	jne    f387 <set_OF_sub+0xa7>
    f315:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    f319:	21 c1                	and    %eax,%ecx
    f31b:	83 fe 08             	cmp    $0x8,%esi
    f31e:	74 58                	je     f378 <set_OF_sub+0x98>
    f320:	83 fe 10             	cmp    $0x10,%esi
    f323:	74 2b                	je     f350 <set_OF_sub+0x70>
    f325:	23 44 24 18          	and    0x18(%esp),%eax
    f329:	c1 e8 1f             	shr    $0x1f,%eax
    f32c:	c1 e9 1f             	shr    $0x1f,%ecx
    f32f:	39 c1                	cmp    %eax,%ecx
    f331:	74 32                	je     f365 <set_OF_sub+0x85>
    f333:	c1 eb 1f             	shr    $0x1f,%ebx
    f336:	39 d8                	cmp    %ebx,%eax
    f338:	74 2b                	je     f365 <set_OF_sub+0x85>
    f33a:	8d 82 60 32 05 00    	lea    0x53260(%edx),%eax
    f340:	80 48 25 08          	orb    $0x8,0x25(%eax)
    f344:	83 c4 04             	add    $0x4,%esp
    f347:	5b                   	pop    %ebx
    f348:	5e                   	pop    %esi
    f349:	c3                   	ret    
    f34a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f350:	23 44 24 18          	and    0x18(%esp),%eax
    f354:	0f bf c9             	movswl %cx,%ecx
    f357:	0f bf db             	movswl %bx,%ebx
    f35a:	98                   	cwtl   
    f35b:	c1 e9 1f             	shr    $0x1f,%ecx
    f35e:	c1 e8 1f             	shr    $0x1f,%eax
    f361:	39 c1                	cmp    %eax,%ecx
    f363:	75 ce                	jne    f333 <set_OF_sub+0x53>
    f365:	8d 82 60 32 05 00    	lea    0x53260(%edx),%eax
    f36b:	80 60 25 f7          	andb   $0xf7,0x25(%eax)
    f36f:	83 c4 04             	add    $0x4,%esp
    f372:	5b                   	pop    %ebx
    f373:	5e                   	pop    %esi
    f374:	c3                   	ret    
    f375:	8d 76 00             	lea    0x0(%esi),%esi
    f378:	23 44 24 18          	and    0x18(%esp),%eax
    f37c:	0f be db             	movsbl %bl,%ebx
    f37f:	0f be c9             	movsbl %cl,%ecx
    f382:	0f be c0             	movsbl %al,%eax
    f385:	eb a2                	jmp    f329 <set_OF_sub+0x49>
    f387:	e8 04 fc ff ff       	call   ef90 <sign_ext.part.0>
    f38c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000f390 <alu_add>:
    f390:	e8 42 6f ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    f395:	05 6b fc 03 00       	add    $0x3fc6b,%eax
    f39a:	55                   	push   %ebp
    f39b:	31 c9                	xor    %ecx,%ecx
    f39d:	57                   	push   %edi
    f39e:	56                   	push   %esi
    f39f:	53                   	push   %ebx
    f3a0:	83 ec 1c             	sub    $0x1c,%esp
    f3a3:	8b 7c 24 34          	mov    0x34(%esp),%edi
    f3a7:	03 7c 24 30          	add    0x30(%esp),%edi
    f3ab:	89 44 24 0c          	mov    %eax,0xc(%esp)
    f3af:	8b 74 24 38          	mov    0x38(%esp),%esi
    f3b3:	89 f8                	mov    %edi,%eax
    f3b5:	0f b6 d8             	movzbl %al,%ebx
    f3b8:	31 c0                	xor    %eax,%eax
    f3ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f3c0:	bd 80 00 00 00       	mov    $0x80,%ebp
    f3c5:	31 d2                	xor    %edx,%edx
    f3c7:	d3 fd                	sar    %cl,%ebp
    f3c9:	85 dd                	test   %ebx,%ebp
    f3cb:	0f 95 c2             	setne  %dl
    f3ce:	83 c1 01             	add    $0x1,%ecx
    f3d1:	89 d5                	mov    %edx,%ebp
    f3d3:	01 e8                	add    %ebp,%eax
    f3d5:	83 f9 08             	cmp    $0x8,%ecx
    f3d8:	75 e6                	jne    f3c0 <alu_add+0x30>
    f3da:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    f3de:	f7 d0                	not    %eax
    f3e0:	b9 20 00 00 00       	mov    $0x20,%ecx
    f3e5:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    f3ea:	29 f1                	sub    %esi,%ecx
    f3ec:	83 e0 01             	and    $0x1,%eax
    f3ef:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
    f3f5:	c1 e0 02             	shl    $0x2,%eax
    f3f8:	d3 ed                	shr    %cl,%ebp
    f3fa:	0f b6 53 24          	movzbl 0x24(%ebx),%edx
    f3fe:	83 e2 fb             	and    $0xfffffffb,%edx
    f401:	09 c2                	or     %eax,%edx
    f403:	21 fd                	and    %edi,%ebp
    f405:	8d 46 f8             	lea    -0x8(%esi),%eax
    f408:	0f 94 c1             	sete   %cl
    f40b:	83 e2 bf             	and    $0xffffffbf,%edx
    f40e:	c1 e1 06             	shl    $0x6,%ecx
    f411:	09 ca                	or     %ecx,%edx
    f413:	83 e0 f7             	and    $0xfffffff7,%eax
    f416:	88 53 24             	mov    %dl,0x24(%ebx)
    f419:	74 05                	je     f420 <alu_add+0x90>
    f41b:	83 fe 20             	cmp    $0x20,%esi
    f41e:	75 4c                	jne    f46c <alu_add+0xdc>
    f420:	89 e8                	mov    %ebp,%eax
    f422:	0f be d0             	movsbl %al,%edx
    f425:	83 fe 08             	cmp    $0x8,%esi
    f428:	74 09                	je     f433 <alu_add+0xa3>
    f42a:	0f bf d5             	movswl %bp,%edx
    f42d:	83 fe 10             	cmp    $0x10,%esi
    f430:	0f 45 d5             	cmovne %ebp,%edx
    f433:	0f b6 43 24          	movzbl 0x24(%ebx),%eax
    f437:	c1 ea 1f             	shr    $0x1f,%edx
    f43a:	83 ec 04             	sub    $0x4,%esp
    f43d:	c1 e2 07             	shl    $0x7,%edx
    f440:	83 e0 7f             	and    $0x7f,%eax
    f443:	09 c2                	or     %eax,%edx
    f445:	88 53 24             	mov    %dl,0x24(%ebx)
    f448:	56                   	push   %esi
    f449:	ff 74 24 38          	pushl  0x38(%esp)
    f44d:	57                   	push   %edi
    f44e:	e8 7d fc ff ff       	call   f0d0 <set_CF_add>
    f453:	56                   	push   %esi
    f454:	ff 74 24 48          	pushl  0x48(%esp)
    f458:	ff 74 24 48          	pushl  0x48(%esp)
    f45c:	57                   	push   %edi
    f45d:	e8 ce fd ff ff       	call   f230 <set_OF_add>
    f462:	83 c4 3c             	add    $0x3c,%esp
    f465:	89 e8                	mov    %ebp,%eax
    f467:	5b                   	pop    %ebx
    f468:	5e                   	pop    %esi
    f469:	5f                   	pop    %edi
    f46a:	5d                   	pop    %ebp
    f46b:	c3                   	ret    
    f46c:	e8 1f fb ff ff       	call   ef90 <sign_ext.part.0>
    f471:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f478:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f47f:	90                   	nop

0000f480 <alu_adc>:
    f480:	e8 52 6e ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    f485:	05 7b fb 03 00       	add    $0x3fb7b,%eax
    f48a:	55                   	push   %ebp
    f48b:	31 c9                	xor    %ecx,%ecx
    f48d:	57                   	push   %edi
    f48e:	56                   	push   %esi
    f48f:	53                   	push   %ebx
    f490:	83 ec 1c             	sub    $0x1c,%esp
    f493:	8d b8 60 32 05 00    	lea    0x53260(%eax),%edi
    f499:	8b 74 24 38          	mov    0x38(%esp),%esi
    f49d:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    f4a1:	83 e0 01             	and    $0x1,%eax
    f4a4:	03 44 24 30          	add    0x30(%esp),%eax
    f4a8:	03 44 24 34          	add    0x34(%esp),%eax
    f4ac:	89 44 24 0c          	mov    %eax,0xc(%esp)
    f4b0:	0f b6 d8             	movzbl %al,%ebx
    f4b3:	31 c0                	xor    %eax,%eax
    f4b5:	8d 76 00             	lea    0x0(%esi),%esi
    f4b8:	bd 80 00 00 00       	mov    $0x80,%ebp
    f4bd:	31 d2                	xor    %edx,%edx
    f4bf:	d3 fd                	sar    %cl,%ebp
    f4c1:	85 dd                	test   %ebx,%ebp
    f4c3:	0f 95 c2             	setne  %dl
    f4c6:	83 c1 01             	add    $0x1,%ecx
    f4c9:	89 d5                	mov    %edx,%ebp
    f4cb:	01 e8                	add    %ebp,%eax
    f4cd:	83 f9 08             	cmp    $0x8,%ecx
    f4d0:	75 e6                	jne    f4b8 <alu_adc+0x38>
    f4d2:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    f4d6:	f7 d0                	not    %eax
    f4d8:	b9 20 00 00 00       	mov    $0x20,%ecx
    f4dd:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    f4e2:	83 e0 01             	and    $0x1,%eax
    f4e5:	29 f1                	sub    %esi,%ecx
    f4e7:	c1 e0 02             	shl    $0x2,%eax
    f4ea:	83 e2 fb             	and    $0xfffffffb,%edx
    f4ed:	d3 eb                	shr    %cl,%ebx
    f4ef:	09 c2                	or     %eax,%edx
    f4f1:	23 5c 24 0c          	and    0xc(%esp),%ebx
    f4f5:	8d 46 f8             	lea    -0x8(%esi),%eax
    f4f8:	0f 94 c1             	sete   %cl
    f4fb:	83 e2 bf             	and    $0xffffffbf,%edx
    f4fe:	c1 e1 06             	shl    $0x6,%ecx
    f501:	09 ca                	or     %ecx,%edx
    f503:	83 e0 f7             	and    $0xfffffff7,%eax
    f506:	88 57 24             	mov    %dl,0x24(%edi)
    f509:	74 05                	je     f510 <alu_adc+0x90>
    f50b:	83 fe 20             	cmp    $0x20,%esi
    f50e:	75 4e                	jne    f55e <alu_adc+0xde>
    f510:	0f be d3             	movsbl %bl,%edx
    f513:	83 fe 08             	cmp    $0x8,%esi
    f516:	74 09                	je     f521 <alu_adc+0xa1>
    f518:	0f bf d3             	movswl %bx,%edx
    f51b:	83 fe 10             	cmp    $0x10,%esi
    f51e:	0f 45 d3             	cmovne %ebx,%edx
    f521:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    f525:	c1 ea 1f             	shr    $0x1f,%edx
    f528:	83 ec 04             	sub    $0x4,%esp
    f52b:	c1 e2 07             	shl    $0x7,%edx
    f52e:	83 e0 7f             	and    $0x7f,%eax
    f531:	09 c2                	or     %eax,%edx
    f533:	88 57 24             	mov    %dl,0x24(%edi)
    f536:	56                   	push   %esi
    f537:	ff 74 24 38          	pushl  0x38(%esp)
    f53b:	8b 7c 24 18          	mov    0x18(%esp),%edi
    f53f:	57                   	push   %edi
    f540:	e8 0b fc ff ff       	call   f150 <set_CF_adc>
    f545:	56                   	push   %esi
    f546:	ff 74 24 48          	pushl  0x48(%esp)
    f54a:	ff 74 24 48          	pushl  0x48(%esp)
    f54e:	57                   	push   %edi
    f54f:	e8 dc fc ff ff       	call   f230 <set_OF_add>
    f554:	83 c4 3c             	add    $0x3c,%esp
    f557:	89 d8                	mov    %ebx,%eax
    f559:	5b                   	pop    %ebx
    f55a:	5e                   	pop    %esi
    f55b:	5f                   	pop    %edi
    f55c:	5d                   	pop    %ebp
    f55d:	c3                   	ret    
    f55e:	e8 2d fa ff ff       	call   ef90 <sign_ext.part.0>
    f563:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f56a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f570 <alu_sub>:
    f570:	e8 62 6d ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    f575:	05 8b fa 03 00       	add    $0x3fa8b,%eax
    f57a:	55                   	push   %ebp
    f57b:	31 c9                	xor    %ecx,%ecx
    f57d:	57                   	push   %edi
    f57e:	56                   	push   %esi
    f57f:	53                   	push   %ebx
    f580:	83 ec 1c             	sub    $0x1c,%esp
    f583:	8b 7c 24 34          	mov    0x34(%esp),%edi
    f587:	2b 7c 24 30          	sub    0x30(%esp),%edi
    f58b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    f58f:	8b 74 24 38          	mov    0x38(%esp),%esi
    f593:	89 f8                	mov    %edi,%eax
    f595:	0f b6 d8             	movzbl %al,%ebx
    f598:	31 c0                	xor    %eax,%eax
    f59a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f5a0:	bd 80 00 00 00       	mov    $0x80,%ebp
    f5a5:	31 d2                	xor    %edx,%edx
    f5a7:	d3 fd                	sar    %cl,%ebp
    f5a9:	85 dd                	test   %ebx,%ebp
    f5ab:	0f 95 c2             	setne  %dl
    f5ae:	83 c1 01             	add    $0x1,%ecx
    f5b1:	89 d5                	mov    %edx,%ebp
    f5b3:	01 e8                	add    %ebp,%eax
    f5b5:	83 f9 08             	cmp    $0x8,%ecx
    f5b8:	75 e6                	jne    f5a0 <alu_sub+0x30>
    f5ba:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    f5be:	f7 d0                	not    %eax
    f5c0:	b9 20 00 00 00       	mov    $0x20,%ecx
    f5c5:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    f5ca:	29 f1                	sub    %esi,%ecx
    f5cc:	83 e0 01             	and    $0x1,%eax
    f5cf:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
    f5d5:	c1 e0 02             	shl    $0x2,%eax
    f5d8:	d3 ed                	shr    %cl,%ebp
    f5da:	0f b6 53 24          	movzbl 0x24(%ebx),%edx
    f5de:	83 e2 fb             	and    $0xfffffffb,%edx
    f5e1:	09 c2                	or     %eax,%edx
    f5e3:	21 fd                	and    %edi,%ebp
    f5e5:	8d 46 f8             	lea    -0x8(%esi),%eax
    f5e8:	0f 94 c1             	sete   %cl
    f5eb:	83 e2 bf             	and    $0xffffffbf,%edx
    f5ee:	c1 e1 06             	shl    $0x6,%ecx
    f5f1:	09 ca                	or     %ecx,%edx
    f5f3:	83 e0 f7             	and    $0xfffffff7,%eax
    f5f6:	88 53 24             	mov    %dl,0x24(%ebx)
    f5f9:	74 05                	je     f600 <alu_sub+0x90>
    f5fb:	83 fe 20             	cmp    $0x20,%esi
    f5fe:	75 4f                	jne    f64f <alu_sub+0xdf>
    f600:	89 e8                	mov    %ebp,%eax
    f602:	0f be d0             	movsbl %al,%edx
    f605:	83 fe 08             	cmp    $0x8,%esi
    f608:	74 09                	je     f613 <alu_sub+0xa3>
    f60a:	0f bf d5             	movswl %bp,%edx
    f60d:	83 fe 10             	cmp    $0x10,%esi
    f610:	0f 45 d5             	cmovne %ebp,%edx
    f613:	0f b6 43 24          	movzbl 0x24(%ebx),%eax
    f617:	c1 ea 1f             	shr    $0x1f,%edx
    f61a:	83 ec 04             	sub    $0x4,%esp
    f61d:	c1 e2 07             	shl    $0x7,%edx
    f620:	83 e0 7f             	and    $0x7f,%eax
    f623:	09 c2                	or     %eax,%edx
    f625:	88 53 24             	mov    %dl,0x24(%ebx)
    f628:	56                   	push   %esi
    f629:	ff 74 24 38          	pushl  0x38(%esp)
    f62d:	ff 74 24 40          	pushl  0x40(%esp)
    f631:	e8 9a fa ff ff       	call   f0d0 <set_CF_add>
    f636:	56                   	push   %esi
    f637:	ff 74 24 48          	pushl  0x48(%esp)
    f63b:	ff 74 24 48          	pushl  0x48(%esp)
    f63f:	57                   	push   %edi
    f640:	e8 9b fc ff ff       	call   f2e0 <set_OF_sub>
    f645:	83 c4 3c             	add    $0x3c,%esp
    f648:	89 e8                	mov    %ebp,%eax
    f64a:	5b                   	pop    %ebx
    f64b:	5e                   	pop    %esi
    f64c:	5f                   	pop    %edi
    f64d:	5d                   	pop    %ebp
    f64e:	c3                   	ret    
    f64f:	e8 3c f9 ff ff       	call   ef90 <sign_ext.part.0>
    f654:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f65b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f65f:	90                   	nop

0000f660 <alu_sbb>:
    f660:	e8 72 6c ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    f665:	05 9b f9 03 00       	add    $0x3f99b,%eax
    f66a:	55                   	push   %ebp
    f66b:	31 c9                	xor    %ecx,%ecx
    f66d:	57                   	push   %edi
    f66e:	56                   	push   %esi
    f66f:	53                   	push   %ebx
    f670:	83 ec 1c             	sub    $0x1c,%esp
    f673:	8d b8 60 32 05 00    	lea    0x53260(%eax),%edi
    f679:	8b 54 24 34          	mov    0x34(%esp),%edx
    f67d:	2b 54 24 30          	sub    0x30(%esp),%edx
    f681:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    f685:	8b 74 24 38          	mov    0x38(%esp),%esi
    f689:	83 e0 01             	and    $0x1,%eax
    f68c:	29 c2                	sub    %eax,%edx
    f68e:	31 c0                	xor    %eax,%eax
    f690:	89 54 24 0c          	mov    %edx,0xc(%esp)
    f694:	0f b6 da             	movzbl %dl,%ebx
    f697:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f69e:	66 90                	xchg   %ax,%ax
    f6a0:	bd 80 00 00 00       	mov    $0x80,%ebp
    f6a5:	31 d2                	xor    %edx,%edx
    f6a7:	d3 fd                	sar    %cl,%ebp
    f6a9:	85 dd                	test   %ebx,%ebp
    f6ab:	0f 95 c2             	setne  %dl
    f6ae:	83 c1 01             	add    $0x1,%ecx
    f6b1:	89 d5                	mov    %edx,%ebp
    f6b3:	01 e8                	add    %ebp,%eax
    f6b5:	83 f9 08             	cmp    $0x8,%ecx
    f6b8:	75 e6                	jne    f6a0 <alu_sbb+0x40>
    f6ba:	0f b6 57 24          	movzbl 0x24(%edi),%edx
    f6be:	f7 d0                	not    %eax
    f6c0:	b9 20 00 00 00       	mov    $0x20,%ecx
    f6c5:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    f6ca:	83 e0 01             	and    $0x1,%eax
    f6cd:	29 f1                	sub    %esi,%ecx
    f6cf:	c1 e0 02             	shl    $0x2,%eax
    f6d2:	83 e2 fb             	and    $0xfffffffb,%edx
    f6d5:	d3 eb                	shr    %cl,%ebx
    f6d7:	09 c2                	or     %eax,%edx
    f6d9:	23 5c 24 0c          	and    0xc(%esp),%ebx
    f6dd:	8d 46 f8             	lea    -0x8(%esi),%eax
    f6e0:	0f 94 c1             	sete   %cl
    f6e3:	83 e2 bf             	and    $0xffffffbf,%edx
    f6e6:	c1 e1 06             	shl    $0x6,%ecx
    f6e9:	09 ca                	or     %ecx,%edx
    f6eb:	83 e0 f7             	and    $0xfffffff7,%eax
    f6ee:	88 57 24             	mov    %dl,0x24(%edi)
    f6f1:	74 05                	je     f6f8 <alu_sbb+0x98>
    f6f3:	83 fe 20             	cmp    $0x20,%esi
    f6f6:	75 50                	jne    f748 <alu_sbb+0xe8>
    f6f8:	0f be d3             	movsbl %bl,%edx
    f6fb:	83 fe 08             	cmp    $0x8,%esi
    f6fe:	74 09                	je     f709 <alu_sbb+0xa9>
    f700:	0f bf d3             	movswl %bx,%edx
    f703:	83 fe 10             	cmp    $0x10,%esi
    f706:	0f 45 d3             	cmovne %ebx,%edx
    f709:	83 ec 04             	sub    $0x4,%esp
    f70c:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    f710:	c1 ea 1f             	shr    $0x1f,%edx
    f713:	56                   	push   %esi
    f714:	c1 e2 07             	shl    $0x7,%edx
    f717:	ff 74 24 38          	pushl  0x38(%esp)
    f71b:	83 e0 7f             	and    $0x7f,%eax
    f71e:	ff 74 24 40          	pushl  0x40(%esp)
    f722:	09 c2                	or     %eax,%edx
    f724:	88 57 24             	mov    %dl,0x24(%edi)
    f727:	e8 24 fa ff ff       	call   f150 <set_CF_adc>
    f72c:	56                   	push   %esi
    f72d:	ff 74 24 48          	pushl  0x48(%esp)
    f731:	ff 74 24 48          	pushl  0x48(%esp)
    f735:	ff 74 24 28          	pushl  0x28(%esp)
    f739:	e8 a2 fb ff ff       	call   f2e0 <set_OF_sub>
    f73e:	83 c4 3c             	add    $0x3c,%esp
    f741:	89 d8                	mov    %ebx,%eax
    f743:	5b                   	pop    %ebx
    f744:	5e                   	pop    %esi
    f745:	5f                   	pop    %edi
    f746:	5d                   	pop    %ebp
    f747:	c3                   	ret    
    f748:	e8 43 f8 ff ff       	call   ef90 <sign_ext.part.0>
    f74d:	8d 76 00             	lea    0x0(%esi),%esi

0000f750 <alu_mul>:
    f750:	55                   	push   %ebp
    f751:	b9 20 00 00 00       	mov    $0x20,%ecx
    f756:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    f75b:	57                   	push   %edi
    f75c:	56                   	push   %esi
    f75d:	53                   	push   %ebx
    f75e:	8b 44 24 18          	mov    0x18(%esp),%eax
    f762:	e8 19 4d ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f767:	81 c3 99 f8 03 00    	add    $0x3f899,%ebx
    f76d:	f7 64 24 14          	mull   0x14(%esp)
    f771:	2b 4c 24 1c          	sub    0x1c(%esp),%ecx
    f775:	d3 ed                	shr    %cl,%ebp
    f777:	0f b6 4c 24 1c       	movzbl 0x1c(%esp),%ecx
    f77c:	89 d7                	mov    %edx,%edi
    f77e:	89 c6                	mov    %eax,%esi
    f780:	0f ad fe             	shrd   %cl,%edi,%esi
    f783:	d3 ef                	shr    %cl,%edi
    f785:	f6 c1 20             	test   $0x20,%cl
    f788:	74 02                	je     f78c <alu_mul+0x3c>
    f78a:	89 fe                	mov    %edi,%esi
    f78c:	85 f5                	test   %esi,%ebp
    f78e:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
    f794:	0f 95 c1             	setne  %cl
    f797:	0f b6 5e 24          	movzbl 0x24(%esi),%ebx
    f79b:	83 e3 fe             	and    $0xfffffffe,%ebx
    f79e:	09 cb                	or     %ecx,%ebx
    f7a0:	88 5e 24             	mov    %bl,0x24(%esi)
    f7a3:	8d 1c cd 00 00 00 00 	lea    0x0(,%ecx,8),%ebx
    f7aa:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
    f7ae:	83 e1 f7             	and    $0xfffffff7,%ecx
    f7b1:	09 d9                	or     %ebx,%ecx
    f7b3:	88 4e 25             	mov    %cl,0x25(%esi)
    f7b6:	5b                   	pop    %ebx
    f7b7:	5e                   	pop    %esi
    f7b8:	5f                   	pop    %edi
    f7b9:	5d                   	pop    %ebp
    f7ba:	c3                   	ret    
    f7bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f7bf:	90                   	nop

0000f7c0 <alu_imul>:
    f7c0:	8b 44 24 08          	mov    0x8(%esp),%eax
    f7c4:	f7 6c 24 04          	imull  0x4(%esp)
    f7c8:	c3                   	ret    
    f7c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f7d0 <alu_div>:
    f7d0:	55                   	push   %ebp
    f7d1:	57                   	push   %edi
    f7d2:	56                   	push   %esi
    f7d3:	53                   	push   %ebx
    f7d4:	e8 a7 4c ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f7d9:	81 c3 27 f8 03 00    	add    $0x3f827,%ebx
    f7df:	83 ec 1c             	sub    $0x1c,%esp
    f7e2:	8b 7c 24 34          	mov    0x34(%esp),%edi
    f7e6:	8b 74 24 30          	mov    0x30(%esp),%esi
    f7ea:	8b 44 24 38          	mov    0x38(%esp),%eax
    f7ee:	8b 54 24 3c          	mov    0x3c(%esp),%edx
    f7f2:	89 f9                	mov    %edi,%ecx
    f7f4:	09 f1                	or     %esi,%ecx
    f7f6:	89 44 24 08          	mov    %eax,0x8(%esp)
    f7fa:	89 54 24 0c          	mov    %edx,0xc(%esp)
    f7fe:	74 30                	je     f830 <alu_div+0x60>
    f800:	b9 20 00 00 00       	mov    $0x20,%ecx
    f805:	2b 4c 24 40          	sub    0x40(%esp),%ecx
    f809:	57                   	push   %edi
    f80a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f80f:	56                   	push   %esi
    f810:	89 c5                	mov    %eax,%ebp
    f812:	ff 74 24 14          	pushl  0x14(%esp)
    f816:	d3 ed                	shr    %cl,%ebp
    f818:	ff 74 24 14          	pushl  0x14(%esp)
    f81c:	e8 0f 3c 02 00       	call   33430 <__udivdi3>
    f821:	83 c4 10             	add    $0x10,%esp
    f824:	83 c4 1c             	add    $0x1c,%esp
    f827:	21 e8                	and    %ebp,%eax
    f829:	5b                   	pop    %ebx
    f82a:	5e                   	pop    %esi
    f82b:	5f                   	pop    %edi
    f82c:	5d                   	pop    %ebp
    f82d:	c3                   	ret    
    f82e:	66 90                	xchg   %ax,%ax
    f830:	83 c4 1c             	add    $0x1c,%esp
    f833:	31 c0                	xor    %eax,%eax
    f835:	5b                   	pop    %ebx
    f836:	5e                   	pop    %esi
    f837:	5f                   	pop    %edi
    f838:	5d                   	pop    %ebp
    f839:	c3                   	ret    
    f83a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f840 <alu_idiv>:
    f840:	55                   	push   %ebp
    f841:	57                   	push   %edi
    f842:	56                   	push   %esi
    f843:	53                   	push   %ebx
    f844:	e8 37 4c ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f849:	81 c3 b7 f7 03 00    	add    $0x3f7b7,%ebx
    f84f:	83 ec 1c             	sub    $0x1c,%esp
    f852:	8b 7c 24 34          	mov    0x34(%esp),%edi
    f856:	8b 74 24 30          	mov    0x30(%esp),%esi
    f85a:	8b 44 24 38          	mov    0x38(%esp),%eax
    f85e:	8b 54 24 3c          	mov    0x3c(%esp),%edx
    f862:	89 f9                	mov    %edi,%ecx
    f864:	09 f1                	or     %esi,%ecx
    f866:	89 44 24 08          	mov    %eax,0x8(%esp)
    f86a:	89 54 24 0c          	mov    %edx,0xc(%esp)
    f86e:	74 30                	je     f8a0 <alu_idiv+0x60>
    f870:	b9 20 00 00 00       	mov    $0x20,%ecx
    f875:	2b 4c 24 40          	sub    0x40(%esp),%ecx
    f879:	57                   	push   %edi
    f87a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f87f:	56                   	push   %esi
    f880:	89 c5                	mov    %eax,%ebp
    f882:	ff 74 24 14          	pushl  0x14(%esp)
    f886:	d3 ed                	shr    %cl,%ebp
    f888:	ff 74 24 14          	pushl  0x14(%esp)
    f88c:	e8 af 38 02 00       	call   33140 <__divdi3>
    f891:	83 c4 10             	add    $0x10,%esp
    f894:	83 c4 1c             	add    $0x1c,%esp
    f897:	21 e8                	and    %ebp,%eax
    f899:	5b                   	pop    %ebx
    f89a:	5e                   	pop    %esi
    f89b:	5f                   	pop    %edi
    f89c:	5d                   	pop    %ebp
    f89d:	c3                   	ret    
    f89e:	66 90                	xchg   %ax,%ax
    f8a0:	83 c4 1c             	add    $0x1c,%esp
    f8a3:	31 c0                	xor    %eax,%eax
    f8a5:	5b                   	pop    %ebx
    f8a6:	5e                   	pop    %esi
    f8a7:	5f                   	pop    %edi
    f8a8:	5d                   	pop    %ebp
    f8a9:	c3                   	ret    
    f8aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000f8b0 <alu_mod>:
    f8b0:	55                   	push   %ebp
    f8b1:	57                   	push   %edi
    f8b2:	56                   	push   %esi
    f8b3:	53                   	push   %ebx
    f8b4:	e8 c7 4b ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f8b9:	81 c3 47 f7 03 00    	add    $0x3f747,%ebx
    f8bf:	83 ec 1c             	sub    $0x1c,%esp
    f8c2:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
    f8c6:	8b 44 24 30          	mov    0x30(%esp),%eax
    f8ca:	8b 54 24 34          	mov    0x34(%esp),%edx
    f8ce:	8b 74 24 38          	mov    0x38(%esp),%esi
    f8d2:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    f8d6:	89 c7                	mov    %eax,%edi
    f8d8:	09 d7                	or     %edx,%edi
    f8da:	89 74 24 08          	mov    %esi,0x8(%esp)
    f8de:	74 20                	je     f900 <alu_mod+0x50>
    f8e0:	52                   	push   %edx
    f8e1:	50                   	push   %eax
    f8e2:	ff 74 24 14          	pushl  0x14(%esp)
    f8e6:	ff 74 24 14          	pushl  0x14(%esp)
    f8ea:	e8 51 3c 02 00       	call   33540 <__umoddi3>
    f8ef:	83 c4 10             	add    $0x10,%esp
    f8f2:	83 c4 1c             	add    $0x1c,%esp
    f8f5:	89 c1                	mov    %eax,%ecx
    f8f7:	5b                   	pop    %ebx
    f8f8:	89 c8                	mov    %ecx,%eax
    f8fa:	5e                   	pop    %esi
    f8fb:	5f                   	pop    %edi
    f8fc:	5d                   	pop    %ebp
    f8fd:	c3                   	ret    
    f8fe:	66 90                	xchg   %ax,%ax
    f900:	83 c4 1c             	add    $0x1c,%esp
    f903:	31 c9                	xor    %ecx,%ecx
    f905:	5b                   	pop    %ebx
    f906:	89 c8                	mov    %ecx,%eax
    f908:	5e                   	pop    %esi
    f909:	5f                   	pop    %edi
    f90a:	5d                   	pop    %ebp
    f90b:	c3                   	ret    
    f90c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000f910 <alu_imod>:
    f910:	55                   	push   %ebp
    f911:	57                   	push   %edi
    f912:	56                   	push   %esi
    f913:	53                   	push   %ebx
    f914:	e8 67 4b ff ff       	call   4480 <__x86.get_pc_thunk.bx>
    f919:	81 c3 e7 f6 03 00    	add    $0x3f6e7,%ebx
    f91f:	83 ec 1c             	sub    $0x1c,%esp
    f922:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
    f926:	8b 44 24 30          	mov    0x30(%esp),%eax
    f92a:	8b 54 24 34          	mov    0x34(%esp),%edx
    f92e:	8b 74 24 38          	mov    0x38(%esp),%esi
    f932:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    f936:	89 c7                	mov    %eax,%edi
    f938:	09 d7                	or     %edx,%edi
    f93a:	89 74 24 08          	mov    %esi,0x8(%esp)
    f93e:	74 20                	je     f960 <alu_imod+0x50>
    f940:	52                   	push   %edx
    f941:	50                   	push   %eax
    f942:	ff 74 24 14          	pushl  0x14(%esp)
    f946:	ff 74 24 14          	pushl  0x14(%esp)
    f94a:	e8 41 39 02 00       	call   33290 <__moddi3>
    f94f:	83 c4 10             	add    $0x10,%esp
    f952:	83 c4 1c             	add    $0x1c,%esp
    f955:	89 c1                	mov    %eax,%ecx
    f957:	5b                   	pop    %ebx
    f958:	89 c8                	mov    %ecx,%eax
    f95a:	5e                   	pop    %esi
    f95b:	5f                   	pop    %edi
    f95c:	5d                   	pop    %ebp
    f95d:	c3                   	ret    
    f95e:	66 90                	xchg   %ax,%ax
    f960:	83 c4 1c             	add    $0x1c,%esp
    f963:	31 c9                	xor    %ecx,%ecx
    f965:	5b                   	pop    %ebx
    f966:	89 c8                	mov    %ecx,%eax
    f968:	5e                   	pop    %esi
    f969:	5f                   	pop    %edi
    f96a:	5d                   	pop    %ebp
    f96b:	c3                   	ret    
    f96c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000f970 <alu_and>:
    f970:	e8 62 69 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    f975:	05 8b f6 03 00       	add    $0x3f68b,%eax
    f97a:	55                   	push   %ebp
    f97b:	31 d2                	xor    %edx,%edx
    f97d:	31 c9                	xor    %ecx,%ecx
    f97f:	57                   	push   %edi
    f980:	56                   	push   %esi
    f981:	53                   	push   %ebx
    f982:	bb 80 00 00 00       	mov    $0x80,%ebx
    f987:	83 ec 1c             	sub    $0x1c,%esp
    f98a:	89 44 24 08          	mov    %eax,0x8(%esp)
    f98e:	8b 44 24 34          	mov    0x34(%esp),%eax
    f992:	23 44 24 30          	and    0x30(%esp),%eax
    f996:	8b 7c 24 38          	mov    0x38(%esp),%edi
    f99a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    f99e:	0f b6 f0             	movzbl %al,%esi
    f9a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f9a8:	89 dd                	mov    %ebx,%ebp
    f9aa:	31 c0                	xor    %eax,%eax
    f9ac:	d3 fd                	sar    %cl,%ebp
    f9ae:	85 f5                	test   %esi,%ebp
    f9b0:	0f 95 c0             	setne  %al
    f9b3:	83 c1 01             	add    $0x1,%ecx
    f9b6:	89 c5                	mov    %eax,%ebp
    f9b8:	01 ea                	add    %ebp,%edx
    f9ba:	83 f9 08             	cmp    $0x8,%ecx
    f9bd:	75 e9                	jne    f9a8 <alu_and+0x38>
    f9bf:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    f9c3:	f7 d2                	not    %edx
    f9c5:	8b 44 24 0c          	mov    0xc(%esp),%eax
    f9c9:	be ff ff ff ff       	mov    $0xffffffff,%esi
    f9ce:	83 e2 01             	and    $0x1,%edx
    f9d1:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
    f9d7:	c1 e2 02             	shl    $0x2,%edx
    f9da:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    f9de:	83 e1 fb             	and    $0xfffffffb,%ecx
    f9e1:	09 ca                	or     %ecx,%edx
    f9e3:	b9 20 00 00 00       	mov    $0x20,%ecx
    f9e8:	29 f9                	sub    %edi,%ecx
    f9ea:	d3 ee                	shr    %cl,%esi
    f9ec:	21 f0                	and    %esi,%eax
    f9ee:	0f 94 c1             	sete   %cl
    f9f1:	83 e2 bf             	and    $0xffffffbf,%edx
    f9f4:	c1 e1 06             	shl    $0x6,%ecx
    f9f7:	09 ca                	or     %ecx,%edx
    f9f9:	88 53 24             	mov    %dl,0x24(%ebx)
    f9fc:	8d 57 f8             	lea    -0x8(%edi),%edx
    f9ff:	83 e2 f7             	and    $0xfffffff7,%edx
    fa02:	74 05                	je     fa09 <alu_and+0x99>
    fa04:	83 ff 20             	cmp    $0x20,%edi
    fa07:	75 31                	jne    fa3a <alu_and+0xca>
    fa09:	0f be d0             	movsbl %al,%edx
    fa0c:	83 ff 08             	cmp    $0x8,%edi
    fa0f:	74 09                	je     fa1a <alu_and+0xaa>
    fa11:	0f bf d0             	movswl %ax,%edx
    fa14:	83 ff 10             	cmp    $0x10,%edi
    fa17:	0f 45 d0             	cmovne %eax,%edx
    fa1a:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    fa1e:	c1 ea 1f             	shr    $0x1f,%edx
    fa21:	c1 e2 07             	shl    $0x7,%edx
    fa24:	83 e1 7f             	and    $0x7f,%ecx
    fa27:	09 ca                	or     %ecx,%edx
    fa29:	88 53 24             	mov    %dl,0x24(%ebx)
    fa2c:	66 81 63 24 fe f7    	andw   $0xf7fe,0x24(%ebx)
    fa32:	83 c4 1c             	add    $0x1c,%esp
    fa35:	5b                   	pop    %ebx
    fa36:	5e                   	pop    %esi
    fa37:	5f                   	pop    %edi
    fa38:	5d                   	pop    %ebp
    fa39:	c3                   	ret    
    fa3a:	e8 51 f5 ff ff       	call   ef90 <sign_ext.part.0>
    fa3f:	90                   	nop

0000fa40 <alu_xor>:
    fa40:	e8 92 68 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    fa45:	05 bb f5 03 00       	add    $0x3f5bb,%eax
    fa4a:	55                   	push   %ebp
    fa4b:	31 d2                	xor    %edx,%edx
    fa4d:	31 c9                	xor    %ecx,%ecx
    fa4f:	57                   	push   %edi
    fa50:	56                   	push   %esi
    fa51:	53                   	push   %ebx
    fa52:	bb 80 00 00 00       	mov    $0x80,%ebx
    fa57:	83 ec 1c             	sub    $0x1c,%esp
    fa5a:	89 44 24 08          	mov    %eax,0x8(%esp)
    fa5e:	8b 44 24 34          	mov    0x34(%esp),%eax
    fa62:	33 44 24 30          	xor    0x30(%esp),%eax
    fa66:	8b 7c 24 38          	mov    0x38(%esp),%edi
    fa6a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    fa6e:	0f b6 f0             	movzbl %al,%esi
    fa71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    fa78:	89 dd                	mov    %ebx,%ebp
    fa7a:	31 c0                	xor    %eax,%eax
    fa7c:	d3 fd                	sar    %cl,%ebp
    fa7e:	85 f5                	test   %esi,%ebp
    fa80:	0f 95 c0             	setne  %al
    fa83:	83 c1 01             	add    $0x1,%ecx
    fa86:	89 c5                	mov    %eax,%ebp
    fa88:	01 ea                	add    %ebp,%edx
    fa8a:	83 f9 08             	cmp    $0x8,%ecx
    fa8d:	75 e9                	jne    fa78 <alu_xor+0x38>
    fa8f:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    fa93:	f7 d2                	not    %edx
    fa95:	8b 44 24 0c          	mov    0xc(%esp),%eax
    fa99:	be ff ff ff ff       	mov    $0xffffffff,%esi
    fa9e:	83 e2 01             	and    $0x1,%edx
    faa1:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
    faa7:	c1 e2 02             	shl    $0x2,%edx
    faaa:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    faae:	83 e1 fb             	and    $0xfffffffb,%ecx
    fab1:	09 ca                	or     %ecx,%edx
    fab3:	b9 20 00 00 00       	mov    $0x20,%ecx
    fab8:	29 f9                	sub    %edi,%ecx
    faba:	d3 ee                	shr    %cl,%esi
    fabc:	21 f0                	and    %esi,%eax
    fabe:	0f 94 c1             	sete   %cl
    fac1:	83 e2 bf             	and    $0xffffffbf,%edx
    fac4:	c1 e1 06             	shl    $0x6,%ecx
    fac7:	09 ca                	or     %ecx,%edx
    fac9:	88 53 24             	mov    %dl,0x24(%ebx)
    facc:	8d 57 f8             	lea    -0x8(%edi),%edx
    facf:	83 e2 f7             	and    $0xfffffff7,%edx
    fad2:	74 05                	je     fad9 <alu_xor+0x99>
    fad4:	83 ff 20             	cmp    $0x20,%edi
    fad7:	75 31                	jne    fb0a <alu_xor+0xca>
    fad9:	0f be d0             	movsbl %al,%edx
    fadc:	83 ff 08             	cmp    $0x8,%edi
    fadf:	74 09                	je     faea <alu_xor+0xaa>
    fae1:	0f bf d0             	movswl %ax,%edx
    fae4:	83 ff 10             	cmp    $0x10,%edi
    fae7:	0f 45 d0             	cmovne %eax,%edx
    faea:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    faee:	c1 ea 1f             	shr    $0x1f,%edx
    faf1:	c1 e2 07             	shl    $0x7,%edx
    faf4:	83 e1 7f             	and    $0x7f,%ecx
    faf7:	09 ca                	or     %ecx,%edx
    faf9:	88 53 24             	mov    %dl,0x24(%ebx)
    fafc:	66 81 63 24 fe f7    	andw   $0xf7fe,0x24(%ebx)
    fb02:	83 c4 1c             	add    $0x1c,%esp
    fb05:	5b                   	pop    %ebx
    fb06:	5e                   	pop    %esi
    fb07:	5f                   	pop    %edi
    fb08:	5d                   	pop    %ebp
    fb09:	c3                   	ret    
    fb0a:	e8 81 f4 ff ff       	call   ef90 <sign_ext.part.0>
    fb0f:	90                   	nop

0000fb10 <alu_or>:
    fb10:	e8 c2 67 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    fb15:	05 eb f4 03 00       	add    $0x3f4eb,%eax
    fb1a:	55                   	push   %ebp
    fb1b:	31 d2                	xor    %edx,%edx
    fb1d:	31 c9                	xor    %ecx,%ecx
    fb1f:	57                   	push   %edi
    fb20:	56                   	push   %esi
    fb21:	53                   	push   %ebx
    fb22:	bb 80 00 00 00       	mov    $0x80,%ebx
    fb27:	83 ec 1c             	sub    $0x1c,%esp
    fb2a:	89 44 24 08          	mov    %eax,0x8(%esp)
    fb2e:	8b 44 24 34          	mov    0x34(%esp),%eax
    fb32:	0b 44 24 30          	or     0x30(%esp),%eax
    fb36:	8b 7c 24 38          	mov    0x38(%esp),%edi
    fb3a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    fb3e:	0f b6 f0             	movzbl %al,%esi
    fb41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    fb48:	89 dd                	mov    %ebx,%ebp
    fb4a:	31 c0                	xor    %eax,%eax
    fb4c:	d3 fd                	sar    %cl,%ebp
    fb4e:	85 f5                	test   %esi,%ebp
    fb50:	0f 95 c0             	setne  %al
    fb53:	83 c1 01             	add    $0x1,%ecx
    fb56:	89 c5                	mov    %eax,%ebp
    fb58:	01 ea                	add    %ebp,%edx
    fb5a:	83 f9 08             	cmp    $0x8,%ecx
    fb5d:	75 e9                	jne    fb48 <alu_or+0x38>
    fb5f:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    fb63:	f7 d2                	not    %edx
    fb65:	8b 44 24 0c          	mov    0xc(%esp),%eax
    fb69:	be ff ff ff ff       	mov    $0xffffffff,%esi
    fb6e:	83 e2 01             	and    $0x1,%edx
    fb71:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
    fb77:	c1 e2 02             	shl    $0x2,%edx
    fb7a:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    fb7e:	83 e1 fb             	and    $0xfffffffb,%ecx
    fb81:	09 ca                	or     %ecx,%edx
    fb83:	b9 20 00 00 00       	mov    $0x20,%ecx
    fb88:	29 f9                	sub    %edi,%ecx
    fb8a:	d3 ee                	shr    %cl,%esi
    fb8c:	21 f0                	and    %esi,%eax
    fb8e:	0f 94 c1             	sete   %cl
    fb91:	83 e2 bf             	and    $0xffffffbf,%edx
    fb94:	c1 e1 06             	shl    $0x6,%ecx
    fb97:	09 ca                	or     %ecx,%edx
    fb99:	88 53 24             	mov    %dl,0x24(%ebx)
    fb9c:	8d 57 f8             	lea    -0x8(%edi),%edx
    fb9f:	83 e2 f7             	and    $0xfffffff7,%edx
    fba2:	74 05                	je     fba9 <alu_or+0x99>
    fba4:	83 ff 20             	cmp    $0x20,%edi
    fba7:	75 31                	jne    fbda <alu_or+0xca>
    fba9:	0f be d0             	movsbl %al,%edx
    fbac:	83 ff 08             	cmp    $0x8,%edi
    fbaf:	74 09                	je     fbba <alu_or+0xaa>
    fbb1:	0f bf d0             	movswl %ax,%edx
    fbb4:	83 ff 10             	cmp    $0x10,%edi
    fbb7:	0f 45 d0             	cmovne %eax,%edx
    fbba:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
    fbbe:	c1 ea 1f             	shr    $0x1f,%edx
    fbc1:	c1 e2 07             	shl    $0x7,%edx
    fbc4:	83 e1 7f             	and    $0x7f,%ecx
    fbc7:	09 ca                	or     %ecx,%edx
    fbc9:	88 53 24             	mov    %dl,0x24(%ebx)
    fbcc:	66 81 63 24 fe f7    	andw   $0xf7fe,0x24(%ebx)
    fbd2:	83 c4 1c             	add    $0x1c,%esp
    fbd5:	5b                   	pop    %ebx
    fbd6:	5e                   	pop    %esi
    fbd7:	5f                   	pop    %edi
    fbd8:	5d                   	pop    %ebp
    fbd9:	c3                   	ret    
    fbda:	e8 b1 f3 ff ff       	call   ef90 <sign_ext.part.0>
    fbdf:	90                   	nop

0000fbe0 <alu_shl>:
    fbe0:	e8 f2 66 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    fbe5:	05 1b f4 03 00       	add    $0x3f41b,%eax
    fbea:	55                   	push   %ebp
    fbeb:	b9 20 00 00 00       	mov    $0x20,%ecx
    fbf0:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    fbf5:	57                   	push   %edi
    fbf6:	56                   	push   %esi
    fbf7:	53                   	push   %ebx
    fbf8:	83 ec 1c             	sub    $0x1c,%esp
    fbfb:	8d b0 60 32 05 00    	lea    0x53260(%eax),%esi
    fc01:	8b 5c 24 38          	mov    0x38(%esp),%ebx
    fc05:	8b 44 24 34          	mov    0x34(%esp),%eax
    fc09:	8b 7c 24 30          	mov    0x30(%esp),%edi
    fc0d:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    fc11:	29 d9                	sub    %ebx,%ecx
    fc13:	d3 ed                	shr    %cl,%ebp
    fc15:	21 e8                	and    %ebp,%eax
    fc17:	85 ff                	test   %edi,%edi
    fc19:	0f 84 d9 00 00 00    	je     fcf8 <alu_shl+0x118>
    fc1f:	90                   	nop
    fc20:	89 c2                	mov    %eax,%edx
    fc22:	c0 ea 07             	shr    $0x7,%dl
    fc25:	83 fb 08             	cmp    $0x8,%ebx
    fc28:	74 13                	je     fc3d <alu_shl+0x5d>
    fc2a:	89 c2                	mov    %eax,%edx
    fc2c:	89 c1                	mov    %eax,%ecx
    fc2e:	c1 ea 0f             	shr    $0xf,%edx
    fc31:	c1 e9 1f             	shr    $0x1f,%ecx
    fc34:	83 e2 01             	and    $0x1,%edx
    fc37:	83 fb 10             	cmp    $0x10,%ebx
    fc3a:	0f 45 d1             	cmovne %ecx,%edx
    fc3d:	01 c0                	add    %eax,%eax
    fc3f:	83 ef 01             	sub    $0x1,%edi
    fc42:	75 dc                	jne    fc20 <alu_shl+0x40>
    fc44:	0f b6 4e 24          	movzbl 0x24(%esi),%ecx
    fc48:	21 c5                	and    %eax,%ebp
    fc4a:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    fc4e:	83 e1 fe             	and    $0xfffffffe,%ecx
    fc51:	09 ca                	or     %ecx,%edx
    fc53:	88 56 24             	mov    %dl,0x24(%esi)
    fc56:	89 5c 24 38          	mov    %ebx,0x38(%esp)
    fc5a:	0f b6 c0             	movzbl %al,%eax
    fc5d:	31 d2                	xor    %edx,%edx
    fc5f:	31 c9                	xor    %ecx,%ecx
    fc61:	bf 80 00 00 00       	mov    $0x80,%edi
    fc66:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    fc6d:	8d 76 00             	lea    0x0(%esi),%esi
    fc70:	89 fd                	mov    %edi,%ebp
    fc72:	31 db                	xor    %ebx,%ebx
    fc74:	d3 fd                	sar    %cl,%ebp
    fc76:	85 c5                	test   %eax,%ebp
    fc78:	0f 95 c3             	setne  %bl
    fc7b:	83 c1 01             	add    $0x1,%ecx
    fc7e:	89 dd                	mov    %ebx,%ebp
    fc80:	01 ea                	add    %ebp,%edx
    fc82:	83 f9 08             	cmp    $0x8,%ecx
    fc85:	75 e9                	jne    fc70 <alu_shl+0x90>
    fc87:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    fc8b:	f7 d2                	not    %edx
    fc8d:	8b 5c 24 38          	mov    0x38(%esp),%ebx
    fc91:	83 e2 01             	and    $0x1,%edx
    fc94:	83 e0 fb             	and    $0xfffffffb,%eax
    fc97:	c1 e2 02             	shl    $0x2,%edx
    fc9a:	09 c2                	or     %eax,%edx
    fc9c:	8b 44 24 0c          	mov    0xc(%esp),%eax
    fca0:	85 c0                	test   %eax,%eax
    fca2:	0f 94 c0             	sete   %al
    fca5:	83 e2 bf             	and    $0xffffffbf,%edx
    fca8:	c1 e0 06             	shl    $0x6,%eax
    fcab:	09 c2                	or     %eax,%edx
    fcad:	8d 43 f8             	lea    -0x8(%ebx),%eax
    fcb0:	83 e0 f7             	and    $0xfffffff7,%eax
    fcb3:	88 56 24             	mov    %dl,0x24(%esi)
    fcb6:	74 05                	je     fcbd <alu_shl+0xdd>
    fcb8:	83 fb 20             	cmp    $0x20,%ebx
    fcbb:	75 44                	jne    fd01 <alu_shl+0x121>
    fcbd:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    fcc1:	89 f8                	mov    %edi,%eax
    fcc3:	0f be c0             	movsbl %al,%eax
    fcc6:	83 fb 08             	cmp    $0x8,%ebx
    fcc9:	74 09                	je     fcd4 <alu_shl+0xf4>
    fccb:	0f bf c7             	movswl %di,%eax
    fcce:	83 fb 10             	cmp    $0x10,%ebx
    fcd1:	0f 45 c7             	cmovne %edi,%eax
    fcd4:	0f b6 56 24          	movzbl 0x24(%esi),%edx
    fcd8:	c1 e8 1f             	shr    $0x1f,%eax
    fcdb:	c1 e0 07             	shl    $0x7,%eax
    fcde:	83 e2 7f             	and    $0x7f,%edx
    fce1:	09 d0                	or     %edx,%eax
    fce3:	88 46 24             	mov    %al,0x24(%esi)
    fce6:	8b 44 24 0c          	mov    0xc(%esp),%eax
    fcea:	83 c4 1c             	add    $0x1c,%esp
    fced:	5b                   	pop    %ebx
    fcee:	5e                   	pop    %esi
    fcef:	5f                   	pop    %edi
    fcf0:	5d                   	pop    %ebp
    fcf1:	c3                   	ret    
    fcf2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    fcf8:	89 44 24 0c          	mov    %eax,0xc(%esp)
    fcfc:	e9 55 ff ff ff       	jmp    fc56 <alu_shl+0x76>
    fd01:	e8 8a f2 ff ff       	call   ef90 <sign_ext.part.0>
    fd06:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    fd0d:	8d 76 00             	lea    0x0(%esi),%esi

0000fd10 <alu_shr>:
    fd10:	e8 c2 65 ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
    fd15:	05 eb f2 03 00       	add    $0x3f2eb,%eax
    fd1a:	55                   	push   %ebp
    fd1b:	b9 20 00 00 00       	mov    $0x20,%ecx
    fd20:	57                   	push   %edi
    fd21:	56                   	push   %esi
    fd22:	53                   	push   %ebx
    fd23:	83 ec 1c             	sub    $0x1c,%esp
    fd26:	8d b0 60 32 05 00    	lea    0x53260(%eax),%esi
    fd2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fd31:	2b 4c 24 38          	sub    0x38(%esp),%ecx
    fd35:	8b 5c 24 30          	mov    0x30(%esp),%ebx
    fd39:	d3 e8                	shr    %cl,%eax
    fd3b:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
    fd3f:	89 c1                	mov    %eax,%ecx
    fd41:	23 44 24 34          	and    0x34(%esp),%eax
    fd45:	85 db                	test   %ebx,%ebx
    fd47:	75 09                	jne    fd52 <alu_shr+0x42>
    fd49:	e9 b2 00 00 00       	jmp    fe00 <alu_shr+0xf0>
    fd4e:	66 90                	xchg   %ax,%ax
    fd50:	89 d0                	mov    %edx,%eax
    fd52:	89 c2                	mov    %eax,%edx
    fd54:	d1 ea                	shr    %edx
    fd56:	83 eb 01             	sub    $0x1,%ebx
    fd59:	75 f5                	jne    fd50 <alu_shr+0x40>
    fd5b:	89 c3                	mov    %eax,%ebx
    fd5d:	0f b6 46 24          	movzbl 0x24(%esi),%eax
    fd61:	83 e3 01             	and    $0x1,%ebx
    fd64:	83 e0 fe             	and    $0xfffffffe,%eax
    fd67:	09 d8                	or     %ebx,%eax
    fd69:	88 46 24             	mov    %al,0x24(%esi)
    fd6c:	89 c8                	mov    %ecx,%eax
    fd6e:	21 d0                	and    %edx,%eax
    fd70:	89 44 24 0c          	mov    %eax,0xc(%esp)
    fd74:	0f b6 d2             	movzbl %dl,%edx
    fd77:	31 db                	xor    %ebx,%ebx
    fd79:	31 c9                	xor    %ecx,%ecx
    fd7b:	bf 80 00 00 00       	mov    $0x80,%edi
    fd80:	89 fd                	mov    %edi,%ebp
    fd82:	31 c0                	xor    %eax,%eax
    fd84:	d3 fd                	sar    %cl,%ebp
    fd86:	85 d5                	test   %edx,%ebp
    fd88:	0f 95 c0             	setne  %al
    fd8b:	83 c1 01             	add    $0x1,%ecx
    fd8e:	89 c5                	mov    %eax,%ebp
    fd90:	01 eb                	add    %ebp,%ebx
    fd92:	83 f9 08             	cmp    $0x8,%ecx
    fd95:	75 e9                	jne    fd80 <alu_shr+0x70>
    fd97:	0f b6 56 24          	movzbl 0x24(%esi),%edx
    fd9b:	f7 d3                	not    %ebx
    fd9d:	8b 44 24 0c          	mov    0xc(%esp),%eax
    fda1:	83 e3 01             	and    $0x1,%ebx
    fda4:	8b 7c 24 38          	mov    0x38(%esp),%edi
    fda8:	83 e2 fb             	and    $0xfffffffb,%edx
    fdab:	c1 e3 02             	shl    $0x2,%ebx
    fdae:	09 d3                	or     %edx,%ebx
    fdb0:	85 c0                	test   %eax,%eax
    fdb2:	0f 94 c2             	sete   %dl
    fdb5:	83 e3 bf             	and    $0xffffffbf,%ebx
    fdb8:	c1 e2 06             	shl    $0x6,%edx
    fdbb:	09 d3                	or     %edx,%ebx
    fdbd:	8d 57 f8             	lea    -0x8(%edi),%edx
    fdc0:	83 e2 f7             	and    $0xfffffff7,%edx
    fdc3:	88 5e 24             	mov    %bl,0x24(%esi)
    fdc6:	74 05                	je     fdcd <alu_shr+0xbd>
    fdc8:	83 ff 20             	cmp    $0x20,%edi
    fdcb:	75 3a                	jne    fe07 <alu_shr+0xf7>
    fdcd:	83 7c 24 38 08       	cmpl   $0x8,0x38(%esp)
    fdd2:	0f be d0             	movsbl %al,%edx
    fdd5:	74 0b                	je     fde2 <alu_shr+0xd2>
    fdd7:	0f bf d0             	movswl %ax,%edx
    fdda:	83 7c 24 38 10       	cmpl   $0x10,0x38(%esp)
    fddf:	0f 45 d0             	cmovne %eax,%edx
    fde2:	0f b6 4e 24          	movzbl 0x24(%esi),%ecx
    fde6:	c1 ea 1f             	shr    $0x1f,%edx
    fde9:	c1 e2 07             	shl    $0x7,%edx
    fdec:	83 e1 7f             	and    $0x7f,%ecx
    fdef:	09 ca                	or     %ecx,%edx
    fdf1:	88 56 24             	mov    %dl,0x24(%esi)
    fdf4:	83 c4 1c             	add    $0x1c,%esp
    fdf7:	5b                   	pop    %ebx
    fdf8:	5e                   	pop    %esi
    fdf9:	5f                   	pop    %edi
    fdfa:	5d                   	pop    %ebp
    fdfb:	c3                   	ret    
    fdfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    fe00:	89 c2                	mov    %eax,%edx
    fe02:	e9 69 ff ff ff       	jmp    fd70 <alu_shr+0x60>
    fe07:	e8 84 f1 ff ff       	call   ef90 <sign_ext.part.0>
    fe0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000fe10 <alu_sar>:
    fe10:	55                   	push   %ebp
    fe11:	b9 20 00 00 00       	mov    $0x20,%ecx
    fe16:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fe1b:	57                   	push   %edi
    fe1c:	56                   	push   %esi
    fe1d:	e8 d3 01 00 00       	call   fff5 <__x86.get_pc_thunk.si>
    fe22:	81 c6 de f1 03 00    	add    $0x3f1de,%esi
    fe28:	53                   	push   %ebx
    fe29:	83 ec 1c             	sub    $0x1c,%esp
    fe2c:	8b 7c 24 38          	mov    0x38(%esp),%edi
    fe30:	8b 6c 24 30          	mov    0x30(%esp),%ebp
    fe34:	29 f9                	sub    %edi,%ecx
    fe36:	89 7c 24 04          	mov    %edi,0x4(%esp)
    fe3a:	d3 e8                	shr    %cl,%eax
    fe3c:	89 c1                	mov    %eax,%ecx
    fe3e:	23 44 24 34          	and    0x34(%esp),%eax
    fe42:	83 ff 08             	cmp    $0x8,%edi
    fe45:	0f 84 3d 01 00 00    	je     ff88 <alu_sar+0x178>
    fe4b:	83 7c 24 04 10       	cmpl   $0x10,0x4(%esp)
    fe50:	0f 84 ea 00 00 00    	je     ff40 <alu_sar+0x130>
    fe56:	83 7c 24 04 20       	cmpl   $0x20,0x4(%esp)
    fe5b:	89 c2                	mov    %eax,%edx
    fe5d:	0f 94 c3             	sete   %bl
    fe60:	c1 ea 1f             	shr    $0x1f,%edx
    fe63:	20 d3                	and    %dl,%bl
    fe65:	88 5c 24 0f          	mov    %bl,0xf(%esp)
    fe69:	0f 84 41 01 00 00    	je     ffb0 <alu_sar+0x1a0>
    fe6f:	89 eb                	mov    %ebp,%ebx
    fe71:	85 ed                	test   %ebp,%ebp
    fe73:	75 0d                	jne    fe82 <alu_sar+0x72>
    fe75:	89 c2                	mov    %eax,%edx
    fe77:	8d be 60 32 05 00    	lea    0x53260(%esi),%edi
    fe7d:	eb 2d                	jmp    feac <alu_sar+0x9c>
    fe7f:	90                   	nop
    fe80:	89 d0                	mov    %edx,%eax
    fe82:	89 c2                	mov    %eax,%edx
    fe84:	d1 ea                	shr    %edx
    fe86:	81 c2 00 00 00 80    	add    $0x80000000,%edx
    fe8c:	83 eb 01             	sub    $0x1,%ebx
    fe8f:	75 ef                	jne    fe80 <alu_sar+0x70>
    fe91:	8d be 60 32 05 00    	lea    0x53260(%esi),%edi
    fe97:	89 c3                	mov    %eax,%ebx
    fe99:	83 e3 01             	and    $0x1,%ebx
    fe9c:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    fea0:	83 e0 fe             	and    $0xfffffffe,%eax
    fea3:	09 d8                	or     %ebx,%eax
    fea5:	88 47 24             	mov    %al,0x24(%edi)
    fea8:	89 c8                	mov    %ecx,%eax
    feaa:	21 d0                	and    %edx,%eax
    feac:	89 44 24 08          	mov    %eax,0x8(%esp)
    feb0:	0f b6 d2             	movzbl %dl,%edx
    feb3:	31 db                	xor    %ebx,%ebx
    feb5:	31 c9                	xor    %ecx,%ecx
    feb7:	be 80 00 00 00       	mov    $0x80,%esi
    febc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    fec0:	89 f5                	mov    %esi,%ebp
    fec2:	31 c0                	xor    %eax,%eax
    fec4:	d3 fd                	sar    %cl,%ebp
    fec6:	85 d5                	test   %edx,%ebp
    fec8:	0f 95 c0             	setne  %al
    fecb:	83 c1 01             	add    $0x1,%ecx
    fece:	89 c5                	mov    %eax,%ebp
    fed0:	01 eb                	add    %ebp,%ebx
    fed2:	83 f9 08             	cmp    $0x8,%ecx
    fed5:	75 e9                	jne    fec0 <alu_sar+0xb0>
    fed7:	0f b6 4f 24          	movzbl 0x24(%edi),%ecx
    fedb:	8b 44 24 08          	mov    0x8(%esp),%eax
    fedf:	f7 d3                	not    %ebx
    fee1:	83 e3 01             	and    $0x1,%ebx
    fee4:	8b 74 24 04          	mov    0x4(%esp),%esi
    fee8:	c1 e3 02             	shl    $0x2,%ebx
    feeb:	83 e1 bb             	and    $0xffffffbb,%ecx
    feee:	85 c0                	test   %eax,%eax
    fef0:	0f 94 c2             	sete   %dl
    fef3:	09 cb                	or     %ecx,%ebx
    fef5:	c1 e2 06             	shl    $0x6,%edx
    fef8:	09 d3                	or     %edx,%ebx
    fefa:	8d 56 f8             	lea    -0x8(%esi),%edx
    fefd:	83 e2 f7             	and    $0xfffffff7,%edx
    ff00:	88 5f 24             	mov    %bl,0x24(%edi)
    ff03:	74 0b                	je     ff10 <alu_sar+0x100>
    ff05:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    ff0a:	0f 84 ce 00 00 00    	je     ffde <alu_sar+0x1ce>
    ff10:	8b 74 24 04          	mov    0x4(%esp),%esi
    ff14:	0f be d0             	movsbl %al,%edx
    ff17:	83 fe 08             	cmp    $0x8,%esi
    ff1a:	74 09                	je     ff25 <alu_sar+0x115>
    ff1c:	0f bf d0             	movswl %ax,%edx
    ff1f:	83 fe 10             	cmp    $0x10,%esi
    ff22:	0f 45 d0             	cmovne %eax,%edx
    ff25:	0f b6 4f 24          	movzbl 0x24(%edi),%ecx
    ff29:	c1 ea 1f             	shr    $0x1f,%edx
    ff2c:	c1 e2 07             	shl    $0x7,%edx
    ff2f:	83 e1 7f             	and    $0x7f,%ecx
    ff32:	09 ca                	or     %ecx,%edx
    ff34:	88 57 24             	mov    %dl,0x24(%edi)
    ff37:	83 c4 1c             	add    $0x1c,%esp
    ff3a:	5b                   	pop    %ebx
    ff3b:	5e                   	pop    %esi
    ff3c:	5f                   	pop    %edi
    ff3d:	5d                   	pop    %ebp
    ff3e:	c3                   	ret    
    ff3f:	90                   	nop
    ff40:	f6 c4 80             	test   $0x80,%ah
    ff43:	74 6b                	je     ffb0 <alu_sar+0x1a0>
    ff45:	89 eb                	mov    %ebp,%ebx
    ff47:	85 ed                	test   %ebp,%ebp
    ff49:	75 07                	jne    ff52 <alu_sar+0x142>
    ff4b:	eb 7f                	jmp    ffcc <alu_sar+0x1bc>
    ff4d:	8d 76 00             	lea    0x0(%esi),%esi
    ff50:	89 d0                	mov    %edx,%eax
    ff52:	89 c2                	mov    %eax,%edx
    ff54:	d1 ea                	shr    %edx
    ff56:	80 f6 80             	xor    $0x80,%dh
    ff59:	83 eb 01             	sub    $0x1,%ebx
    ff5c:	75 f2                	jne    ff50 <alu_sar+0x140>
    ff5e:	8d be 60 32 05 00    	lea    0x53260(%esi),%edi
    ff64:	89 c3                	mov    %eax,%ebx
    ff66:	c6 44 24 0f 00       	movb   $0x0,0xf(%esp)
    ff6b:	83 e3 01             	and    $0x1,%ebx
    ff6e:	0f b6 47 24          	movzbl 0x24(%edi),%eax
    ff72:	83 e0 fe             	and    $0xfffffffe,%eax
    ff75:	09 d8                	or     %ebx,%eax
    ff77:	88 47 24             	mov    %al,0x24(%edi)
    ff7a:	89 c8                	mov    %ecx,%eax
    ff7c:	21 d0                	and    %edx,%eax
    ff7e:	e9 29 ff ff ff       	jmp    feac <alu_sar+0x9c>
    ff83:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ff87:	90                   	nop
    ff88:	a8 80                	test   $0x80,%al
    ff8a:	74 24                	je     ffb0 <alu_sar+0x1a0>
    ff8c:	89 eb                	mov    %ebp,%ebx
    ff8e:	85 ed                	test   %ebp,%ebp
    ff90:	75 08                	jne    ff9a <alu_sar+0x18a>
    ff92:	eb 38                	jmp    ffcc <alu_sar+0x1bc>
    ff94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ff98:	89 d0                	mov    %edx,%eax
    ff9a:	89 c2                	mov    %eax,%edx
    ff9c:	d1 ea                	shr    %edx
    ff9e:	80 f2 80             	xor    $0x80,%dl
    ffa1:	83 eb 01             	sub    $0x1,%ebx
    ffa4:	75 f2                	jne    ff98 <alu_sar+0x188>
    ffa6:	eb b6                	jmp    ff5e <alu_sar+0x14e>
    ffa8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ffaf:	90                   	nop
    ffb0:	8b 74 24 04          	mov    0x4(%esp),%esi
    ffb4:	89 6c 24 30          	mov    %ebp,0x30(%esp)
    ffb8:	89 44 24 34          	mov    %eax,0x34(%esp)
    ffbc:	89 74 24 38          	mov    %esi,0x38(%esp)
    ffc0:	83 c4 1c             	add    $0x1c,%esp
    ffc3:	5b                   	pop    %ebx
    ffc4:	5e                   	pop    %esi
    ffc5:	5f                   	pop    %edi
    ffc6:	5d                   	pop    %ebp
    ffc7:	e9 44 fd ff ff       	jmp    fd10 <alu_shr>
    ffcc:	89 c2                	mov    %eax,%edx
    ffce:	c6 44 24 0f 00       	movb   $0x0,0xf(%esp)
    ffd3:	8d be 60 32 05 00    	lea    0x53260(%esi),%edi
    ffd9:	e9 ce fe ff ff       	jmp    feac <alu_sar+0x9c>
    ffde:	e8 ad ef ff ff       	call   ef90 <sign_ext.part.0>
    ffe3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ffea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000fff0 <alu_sal>:
    fff0:	e9 eb fb ff ff       	jmp    fbe0 <alu_shl>

0000fff5 <__x86.get_pc_thunk.si>:
    fff5:	8b 34 24             	mov    (%esp),%esi
    fff8:	c3                   	ret    
    fff9:	66 90                	xchg   %ax,%ax
    fffb:	66 90                	xchg   %ax,%ax
    fffd:	66 90                	xchg   %ax,%ax
    ffff:	90                   	nop

00010000 <print_reg>:
   10000:	56                   	push   %esi
   10001:	53                   	push   %ebx
   10002:	e8 79 44 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   10007:	81 c3 f9 ef 03 00    	add    $0x3eff9,%ebx
   1000d:	83 ec 0c             	sub    $0xc,%esp
   10010:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   10016:	8d 83 b1 60 fe ff    	lea    -0x19f4f(%ebx),%eax
   1001c:	ff 36                	pushl  (%esi)
   1001e:	50                   	push   %eax
   1001f:	e8 3c 42 ff ff       	call   4260 <printf@plt>
   10024:	58                   	pop    %eax
   10025:	8d 83 bd 60 fe ff    	lea    -0x19f43(%ebx),%eax
   1002b:	5a                   	pop    %edx
   1002c:	ff 76 04             	pushl  0x4(%esi)
   1002f:	50                   	push   %eax
   10030:	e8 2b 42 ff ff       	call   4260 <printf@plt>
   10035:	59                   	pop    %ecx
   10036:	58                   	pop    %eax
   10037:	8d 83 c9 60 fe ff    	lea    -0x19f37(%ebx),%eax
   1003d:	ff 76 08             	pushl  0x8(%esi)
   10040:	50                   	push   %eax
   10041:	e8 1a 42 ff ff       	call   4260 <printf@plt>
   10046:	58                   	pop    %eax
   10047:	8d 83 d5 60 fe ff    	lea    -0x19f2b(%ebx),%eax
   1004d:	5a                   	pop    %edx
   1004e:	ff 76 0c             	pushl  0xc(%esi)
   10051:	50                   	push   %eax
   10052:	e8 09 42 ff ff       	call   4260 <printf@plt>
   10057:	59                   	pop    %ecx
   10058:	58                   	pop    %eax
   10059:	8d 83 e1 60 fe ff    	lea    -0x19f1f(%ebx),%eax
   1005f:	ff 76 10             	pushl  0x10(%esi)
   10062:	50                   	push   %eax
   10063:	e8 f8 41 ff ff       	call   4260 <printf@plt>
   10068:	58                   	pop    %eax
   10069:	8d 83 ed 60 fe ff    	lea    -0x19f13(%ebx),%eax
   1006f:	5a                   	pop    %edx
   10070:	ff 76 14             	pushl  0x14(%esi)
   10073:	50                   	push   %eax
   10074:	e8 e7 41 ff ff       	call   4260 <printf@plt>
   10079:	59                   	pop    %ecx
   1007a:	58                   	pop    %eax
   1007b:	8d 83 f9 60 fe ff    	lea    -0x19f07(%ebx),%eax
   10081:	ff 76 18             	pushl  0x18(%esi)
   10084:	50                   	push   %eax
   10085:	e8 d6 41 ff ff       	call   4260 <printf@plt>
   1008a:	58                   	pop    %eax
   1008b:	8d 83 05 61 fe ff    	lea    -0x19efb(%ebx),%eax
   10091:	5a                   	pop    %edx
   10092:	ff 76 1c             	pushl  0x1c(%esi)
   10095:	50                   	push   %eax
   10096:	e8 c5 41 ff ff       	call   4260 <printf@plt>
   1009b:	59                   	pop    %ecx
   1009c:	58                   	pop    %eax
   1009d:	8d 83 11 61 fe ff    	lea    -0x19eef(%ebx),%eax
   100a3:	ff 76 20             	pushl  0x20(%esi)
   100a6:	50                   	push   %eax
   100a7:	e8 b4 41 ff ff       	call   4260 <printf@plt>
   100ac:	83 c4 14             	add    $0x14,%esp
   100af:	5b                   	pop    %ebx
   100b0:	5e                   	pop    %esi
   100b1:	c3                   	ret    
   100b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   100b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000100c0 <get_reg_val>:
   100c0:	55                   	push   %ebp
   100c1:	57                   	push   %edi
   100c2:	56                   	push   %esi
   100c3:	31 f6                	xor    %esi,%esi
   100c5:	53                   	push   %ebx
   100c6:	e8 b5 43 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   100cb:	81 c3 35 ef 03 00    	add    $0x3ef35,%ebx
   100d1:	83 ec 0c             	sub    $0xc,%esp
   100d4:	8b 44 24 24          	mov    0x24(%esp),%eax
   100d8:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   100dc:	c6 00 01             	movb   $0x1,(%eax)
   100df:	90                   	nop
   100e0:	8b 84 b3 80 05 00 00 	mov    0x580(%ebx,%esi,4),%eax
   100e7:	83 ec 08             	sub    $0x8,%esp
   100ea:	55                   	push   %ebp
   100eb:	83 c0 01             	add    $0x1,%eax
   100ee:	50                   	push   %eax
   100ef:	e8 1c 40 ff ff       	call   4110 <strcmp@plt>
   100f4:	83 c4 10             	add    $0x10,%esp
   100f7:	85 c0                	test   %eax,%eax
   100f9:	0f 84 b1 00 00 00    	je     101b0 <get_reg_val+0xf0>
   100ff:	83 c6 01             	add    $0x1,%esi
   10102:	83 fe 08             	cmp    $0x8,%esi
   10105:	75 d9                	jne    100e0 <get_reg_val+0x20>
   10107:	31 f6                	xor    %esi,%esi
   10109:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10110:	8b 84 b3 60 05 00 00 	mov    0x560(%ebx,%esi,4),%eax
   10117:	83 ec 08             	sub    $0x8,%esp
   1011a:	55                   	push   %ebp
   1011b:	83 c0 01             	add    $0x1,%eax
   1011e:	50                   	push   %eax
   1011f:	e8 ec 3f ff ff       	call   4110 <strcmp@plt>
   10124:	83 c4 10             	add    $0x10,%esp
   10127:	85 c0                	test   %eax,%eax
   10129:	0f 84 99 00 00 00    	je     101c8 <get_reg_val+0x108>
   1012f:	83 c6 01             	add    $0x1,%esi
   10132:	83 fe 08             	cmp    $0x8,%esi
   10135:	75 d9                	jne    10110 <get_reg_val+0x50>
   10137:	31 f6                	xor    %esi,%esi
   10139:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10140:	8b 84 b3 40 05 00 00 	mov    0x540(%ebx,%esi,4),%eax
   10147:	83 ec 08             	sub    $0x8,%esp
   1014a:	55                   	push   %ebp
   1014b:	83 c0 01             	add    $0x1,%eax
   1014e:	50                   	push   %eax
   1014f:	e8 bc 3f ff ff       	call   4110 <strcmp@plt>
   10154:	83 c4 10             	add    $0x10,%esp
   10157:	85 c0                	test   %eax,%eax
   10159:	0f 84 91 00 00 00    	je     101f0 <get_reg_val+0x130>
   1015f:	83 c6 01             	add    $0x1,%esi
   10162:	83 fe 08             	cmp    $0x8,%esi
   10165:	75 d9                	jne    10140 <get_reg_val+0x80>
   10167:	b9 04 00 00 00       	mov    $0x4,%ecx
   1016c:	8d bb 3a 62 fe ff    	lea    -0x19dc6(%ebx),%edi
   10172:	89 ee                	mov    %ebp,%esi
   10174:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   10176:	0f 97 c0             	seta   %al
   10179:	1c 00                	sbb    $0x0,%al
   1017b:	84 c0                	test   %al,%al
   1017d:	0f 84 8d 00 00 00    	je     10210 <get_reg_val+0x150>
   10183:	b9 07 00 00 00       	mov    $0x7,%ecx
   10188:	8d bb 1d 61 fe ff    	lea    -0x19ee3(%ebx),%edi
   1018e:	89 ee                	mov    %ebp,%esi
   10190:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)
   10192:	0f 97 c0             	seta   %al
   10195:	1c 00                	sbb    $0x0,%al
   10197:	84 c0                	test   %al,%al
   10199:	74 45                	je     101e0 <get_reg_val+0x120>
   1019b:	8b 44 24 24          	mov    0x24(%esp),%eax
   1019f:	c6 00 00             	movb   $0x0,(%eax)
   101a2:	83 c4 0c             	add    $0xc,%esp
   101a5:	31 c0                	xor    %eax,%eax
   101a7:	5b                   	pop    %ebx
   101a8:	5e                   	pop    %esi
   101a9:	5f                   	pop    %edi
   101aa:	5d                   	pop    %ebp
   101ab:	c3                   	ret    
   101ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   101b0:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   101b6:	8b 04 b0             	mov    (%eax,%esi,4),%eax
   101b9:	83 c4 0c             	add    $0xc,%esp
   101bc:	5b                   	pop    %ebx
   101bd:	5e                   	pop    %esi
   101be:	5f                   	pop    %edi
   101bf:	5d                   	pop    %ebp
   101c0:	c3                   	ret    
   101c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   101c8:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   101ce:	0f b7 04 b0          	movzwl (%eax,%esi,4),%eax
   101d2:	83 c4 0c             	add    $0xc,%esp
   101d5:	5b                   	pop    %ebx
   101d6:	5e                   	pop    %esi
   101d7:	5f                   	pop    %edi
   101d8:	5d                   	pop    %ebp
   101d9:	c3                   	ret    
   101da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   101e0:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   101e6:	8b 40 24             	mov    0x24(%eax),%eax
   101e9:	eb ce                	jmp    101b9 <get_reg_val+0xf9>
   101eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   101ef:	90                   	nop
   101f0:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   101f6:	89 f0                	mov    %esi,%eax
   101f8:	c1 fe 02             	sar    $0x2,%esi
   101fb:	83 e0 03             	and    $0x3,%eax
   101fe:	8d 04 82             	lea    (%edx,%eax,4),%eax
   10201:	0f b6 04 30          	movzbl (%eax,%esi,1),%eax
   10205:	83 c4 0c             	add    $0xc,%esp
   10208:	5b                   	pop    %ebx
   10209:	5e                   	pop    %esi
   1020a:	5f                   	pop    %edi
   1020b:	5d                   	pop    %ebp
   1020c:	c3                   	ret    
   1020d:	8d 76 00             	lea    0x0(%esi),%esi
   10210:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   10216:	8b 40 20             	mov    0x20(%eax),%eax
   10219:	83 c4 0c             	add    $0xc,%esp
   1021c:	5b                   	pop    %ebx
   1021d:	5e                   	pop    %esi
   1021e:	5f                   	pop    %edi
   1021f:	5d                   	pop    %ebp
   10220:	c3                   	ret    
   10221:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10228:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1022f:	90                   	nop

00010230 <reg_test>:
   10230:	55                   	push   %ebp
   10231:	31 ed                	xor    %ebp,%ebp
   10233:	57                   	push   %edi
   10234:	56                   	push   %esi
   10235:	53                   	push   %ebx
   10236:	e8 45 42 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   1023b:	81 c3 c5 ed 03 00    	add    $0x3edc5,%ebx
   10241:	83 ec 78             	sub    $0x78,%esp
   10244:	6a 00                	push   $0x0
   10246:	e8 e5 3e ff ff       	call   4130 <time@plt>
   1024b:	89 04 24             	mov    %eax,(%esp)
   1024e:	e8 3d 3f ff ff       	call   4190 <srand@plt>
   10253:	e8 98 3f ff ff       	call   41f0 <rand@plt>
   10258:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   1025e:	c7 44 24 4c 01 00 00 	movl   $0x1,0x4c(%esp)
   10265:	00 
   10266:	89 44 24 18          	mov    %eax,0x18(%esp)
   1026a:	89 4c 24 10          	mov    %ecx,0x10(%esp)
   1026e:	83 c4 10             	add    $0x10,%esp
   10271:	89 41 20             	mov    %eax,0x20(%ecx)
   10274:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   10278:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   1027c:	89 44 24 04          	mov    %eax,0x4(%esp)
   10280:	e8 6b 3f ff ff       	call   41f0 <rand@plt>
   10285:	c7 44 24 4c 20 00 00 	movl   $0x20,0x4c(%esp)
   1028c:	00 
   1028d:	83 ec 0c             	sub    $0xc,%esp
   10290:	89 c7                	mov    %eax,%edi
   10292:	8b 44 24 10          	mov    0x10(%esp),%eax
   10296:	89 6c 24 4c          	mov    %ebp,0x4c(%esp)
   1029a:	89 7c 24 54          	mov    %edi,0x54(%esp)
   1029e:	89 3c a8             	mov    %edi,(%eax,%ebp,4)
   102a1:	0f b7 ff             	movzwl %di,%edi
   102a4:	56                   	push   %esi
   102a5:	e8 e6 22 00 00       	call   12590 <operand_write>
   102aa:	c7 44 24 5c 10 00 00 	movl   $0x10,0x5c(%esp)
   102b1:	00 
   102b2:	89 34 24             	mov    %esi,(%esp)
   102b5:	e8 26 21 00 00       	call   123e0 <operand_read>
   102ba:	83 c4 10             	add    $0x10,%esp
   102bd:	39 7c 24 48          	cmp    %edi,0x48(%esp)
   102c1:	0f 85 d2 01 00 00    	jne    10499 <reg_test+0x269>
   102c7:	83 c5 01             	add    $0x1,%ebp
   102ca:	83 fd 08             	cmp    $0x8,%ebp
   102cd:	75 b1                	jne    10280 <reg_test+0x50>
   102cf:	c7 44 24 4c 08 00 00 	movl   $0x8,0x4c(%esp)
   102d6:	00 
   102d7:	83 ec 0c             	sub    $0xc,%esp
   102da:	c7 44 24 4c 00 00 00 	movl   $0x0,0x4c(%esp)
   102e1:	00 
   102e2:	56                   	push   %esi
   102e3:	e8 f8 20 00 00       	call   123e0 <operand_read>
   102e8:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
   102ec:	83 c4 10             	add    $0x10,%esp
   102ef:	89 e8                	mov    %ebp,%eax
   102f1:	0f b6 c0             	movzbl %al,%eax
   102f4:	39 44 24 48          	cmp    %eax,0x48(%esp)
   102f8:	0f 85 77 03 00 00    	jne    10675 <reg_test+0x445>
   102fe:	c7 44 24 40 04 00 00 	movl   $0x4,0x40(%esp)
   10305:	00 
   10306:	83 ec 0c             	sub    $0xc,%esp
   10309:	56                   	push   %esi
   1030a:	e8 d1 20 00 00       	call   123e0 <operand_read>
   1030f:	89 e8                	mov    %ebp,%eax
   10311:	83 c4 10             	add    $0x10,%esp
   10314:	0f b6 c4             	movzbl %ah,%eax
   10317:	39 44 24 48          	cmp    %eax,0x48(%esp)
   1031b:	0f 85 38 03 00 00    	jne    10659 <reg_test+0x429>
   10321:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%esp)
   10328:	00 
   10329:	83 ec 0c             	sub    $0xc,%esp
   1032c:	56                   	push   %esi
   1032d:	e8 ae 20 00 00       	call   123e0 <operand_read>
   10332:	8b 44 24 38          	mov    0x38(%esp),%eax
   10336:	83 c4 10             	add    $0x10,%esp
   10339:	89 c7                	mov    %eax,%edi
   1033b:	0f b6 c0             	movzbl %al,%eax
   1033e:	39 44 24 48          	cmp    %eax,0x48(%esp)
   10342:	0f 85 f5 02 00 00    	jne    1063d <reg_test+0x40d>
   10348:	c7 44 24 40 07 00 00 	movl   $0x7,0x40(%esp)
   1034f:	00 
   10350:	83 ec 0c             	sub    $0xc,%esp
   10353:	56                   	push   %esi
   10354:	e8 87 20 00 00       	call   123e0 <operand_read>
   10359:	89 f8                	mov    %edi,%eax
   1035b:	83 c4 10             	add    $0x10,%esp
   1035e:	0f b6 c4             	movzbl %ah,%eax
   10361:	39 44 24 48          	cmp    %eax,0x48(%esp)
   10365:	0f 85 b6 02 00 00    	jne    10621 <reg_test+0x3f1>
   1036b:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
   10372:	00 
   10373:	83 ec 0c             	sub    $0xc,%esp
   10376:	56                   	push   %esi
   10377:	e8 64 20 00 00       	call   123e0 <operand_read>
   1037c:	8b 44 24 30          	mov    0x30(%esp),%eax
   10380:	89 44 24 14          	mov    %eax,0x14(%esp)
   10384:	83 c4 10             	add    $0x10,%esp
   10387:	0f b6 c0             	movzbl %al,%eax
   1038a:	39 44 24 48          	cmp    %eax,0x48(%esp)
   1038e:	0f 85 71 02 00 00    	jne    10605 <reg_test+0x3d5>
   10394:	c7 44 24 40 05 00 00 	movl   $0x5,0x40(%esp)
   1039b:	00 
   1039c:	83 ec 0c             	sub    $0xc,%esp
   1039f:	56                   	push   %esi
   103a0:	e8 3b 20 00 00       	call   123e0 <operand_read>
   103a5:	8b 44 24 14          	mov    0x14(%esp),%eax
   103a9:	83 c4 10             	add    $0x10,%esp
   103ac:	0f b6 c4             	movzbl %ah,%eax
   103af:	39 44 24 48          	cmp    %eax,0x48(%esp)
   103b3:	0f 85 30 02 00 00    	jne    105e9 <reg_test+0x3b9>
   103b9:	c7 44 24 40 02 00 00 	movl   $0x2,0x40(%esp)
   103c0:	00 
   103c1:	83 ec 0c             	sub    $0xc,%esp
   103c4:	56                   	push   %esi
   103c5:	e8 16 20 00 00       	call   123e0 <operand_read>
   103ca:	8b 44 24 34          	mov    0x34(%esp),%eax
   103ce:	83 c4 10             	add    $0x10,%esp
   103d1:	0f b6 d0             	movzbl %al,%edx
   103d4:	39 54 24 48          	cmp    %edx,0x48(%esp)
   103d8:	0f 85 ef 01 00 00    	jne    105cd <reg_test+0x39d>
   103de:	89 44 24 0c          	mov    %eax,0xc(%esp)
   103e2:	83 ec 0c             	sub    $0xc,%esp
   103e5:	c7 44 24 4c 06 00 00 	movl   $0x6,0x4c(%esp)
   103ec:	00 
   103ed:	56                   	push   %esi
   103ee:	e8 ed 1f 00 00       	call   123e0 <operand_read>
   103f3:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   103f7:	83 c4 10             	add    $0x10,%esp
   103fa:	0f b6 d4             	movzbl %ah,%edx
   103fd:	39 54 24 48          	cmp    %edx,0x48(%esp)
   10401:	0f 85 aa 01 00 00    	jne    105b1 <reg_test+0x381>
   10407:	8b 14 24             	mov    (%esp),%edx
   1040a:	3b 2a                	cmp    (%edx),%ebp
   1040c:	0f 85 83 01 00 00    	jne    10595 <reg_test+0x365>
   10412:	8b 0c 24             	mov    (%esp),%ecx
   10415:	8b 54 24 04          	mov    0x4(%esp),%edx
   10419:	3b 51 04             	cmp    0x4(%ecx),%edx
   1041c:	0f 85 57 01 00 00    	jne    10579 <reg_test+0x349>
   10422:	8b 0c 24             	mov    (%esp),%ecx
   10425:	3b 41 08             	cmp    0x8(%ecx),%eax
   10428:	0f 85 2f 01 00 00    	jne    1055d <reg_test+0x32d>
   1042e:	8b 04 24             	mov    (%esp),%eax
   10431:	3b 78 0c             	cmp    0xc(%eax),%edi
   10434:	0f 85 07 01 00 00    	jne    10541 <reg_test+0x311>
   1043a:	8b 04 24             	mov    (%esp),%eax
   1043d:	8b 40 10             	mov    0x10(%eax),%eax
   10440:	39 44 24 2c          	cmp    %eax,0x2c(%esp)
   10444:	0f 85 db 00 00 00    	jne    10525 <reg_test+0x2f5>
   1044a:	8b 04 24             	mov    (%esp),%eax
   1044d:	8b 40 14             	mov    0x14(%eax),%eax
   10450:	39 44 24 30          	cmp    %eax,0x30(%esp)
   10454:	0f 85 af 00 00 00    	jne    10509 <reg_test+0x2d9>
   1045a:	8b 04 24             	mov    (%esp),%eax
   1045d:	8b 40 18             	mov    0x18(%eax),%eax
   10460:	39 44 24 34          	cmp    %eax,0x34(%esp)
   10464:	0f 85 83 00 00 00    	jne    104ed <reg_test+0x2bd>
   1046a:	8b 04 24             	mov    (%esp),%eax
   1046d:	8b 40 1c             	mov    0x1c(%eax),%eax
   10470:	39 44 24 38          	cmp    %eax,0x38(%esp)
   10474:	75 5b                	jne    104d1 <reg_test+0x2a1>
   10476:	8b 04 24             	mov    (%esp),%eax
   10479:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   1047d:	39 48 20             	cmp    %ecx,0x20(%eax)
   10480:	75 33                	jne    104b5 <reg_test+0x285>
   10482:	83 ec 0c             	sub    $0xc,%esp
   10485:	8d 83 50 6f fe ff    	lea    -0x190b0(%ebx),%eax
   1048b:	50                   	push   %eax
   1048c:	e8 1f 3e ff ff       	call   42b0 <puts@plt>
   10491:	83 c4 7c             	add    $0x7c,%esp
   10494:	5b                   	pop    %ebx
   10495:	5e                   	pop    %esi
   10496:	5f                   	pop    %edi
   10497:	5d                   	pop    %ebp
   10498:	c3                   	ret    
   10499:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1049f:	50                   	push   %eax
   104a0:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   104a6:	6a 56                	push   $0x56
   104a8:	50                   	push   %eax
   104a9:	8d 83 32 61 fe ff    	lea    -0x19ece(%ebx),%eax
   104af:	50                   	push   %eax
   104b0:	e8 5b 3e ff ff       	call   4310 <__assert_fail@plt>
   104b5:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   104bb:	50                   	push   %eax
   104bc:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   104c2:	6a 7b                	push   $0x7b
   104c4:	50                   	push   %eax
   104c5:	8d 83 28 62 fe ff    	lea    -0x19dd8(%ebx),%eax
   104cb:	50                   	push   %eax
   104cc:	e8 3f 3e ff ff       	call   4310 <__assert_fail@plt>
   104d1:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   104d7:	50                   	push   %eax
   104d8:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   104de:	6a 79                	push   $0x79
   104e0:	50                   	push   %eax
   104e1:	8d 83 0d 62 fe ff    	lea    -0x19df3(%ebx),%eax
   104e7:	50                   	push   %eax
   104e8:	e8 23 3e ff ff       	call   4310 <__assert_fail@plt>
   104ed:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   104f3:	50                   	push   %eax
   104f4:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   104fa:	6a 78                	push   $0x78
   104fc:	50                   	push   %eax
   104fd:	8d 83 f2 61 fe ff    	lea    -0x19e0e(%ebx),%eax
   10503:	50                   	push   %eax
   10504:	e8 07 3e ff ff       	call   4310 <__assert_fail@plt>
   10509:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1050f:	50                   	push   %eax
   10510:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   10516:	6a 77                	push   $0x77
   10518:	50                   	push   %eax
   10519:	8d 83 d7 61 fe ff    	lea    -0x19e29(%ebx),%eax
   1051f:	50                   	push   %eax
   10520:	e8 eb 3d ff ff       	call   4310 <__assert_fail@plt>
   10525:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1052b:	50                   	push   %eax
   1052c:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   10532:	6a 76                	push   $0x76
   10534:	50                   	push   %eax
   10535:	8d 83 bc 61 fe ff    	lea    -0x19e44(%ebx),%eax
   1053b:	50                   	push   %eax
   1053c:	e8 cf 3d ff ff       	call   4310 <__assert_fail@plt>
   10541:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   10547:	50                   	push   %eax
   10548:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   1054e:	6a 75                	push   $0x75
   10550:	50                   	push   %eax
   10551:	8d 83 a1 61 fe ff    	lea    -0x19e5f(%ebx),%eax
   10557:	50                   	push   %eax
   10558:	e8 b3 3d ff ff       	call   4310 <__assert_fail@plt>
   1055d:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   10563:	50                   	push   %eax
   10564:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   1056a:	6a 74                	push   $0x74
   1056c:	50                   	push   %eax
   1056d:	8d 83 86 61 fe ff    	lea    -0x19e7a(%ebx),%eax
   10573:	50                   	push   %eax
   10574:	e8 97 3d ff ff       	call   4310 <__assert_fail@plt>
   10579:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1057f:	50                   	push   %eax
   10580:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   10586:	6a 73                	push   $0x73
   10588:	50                   	push   %eax
   10589:	8d 83 6b 61 fe ff    	lea    -0x19e95(%ebx),%eax
   1058f:	50                   	push   %eax
   10590:	e8 7b 3d ff ff       	call   4310 <__assert_fail@plt>
   10595:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1059b:	50                   	push   %eax
   1059c:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   105a2:	6a 72                	push   $0x72
   105a4:	50                   	push   %eax
   105a5:	8d 83 50 61 fe ff    	lea    -0x19eb0(%ebx),%eax
   105ab:	50                   	push   %eax
   105ac:	e8 5f 3d ff ff       	call   4310 <__assert_fail@plt>
   105b1:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   105b7:	50                   	push   %eax
   105b8:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   105be:	6a 70                	push   $0x70
   105c0:	50                   	push   %eax
   105c1:	8d 83 d4 63 fe ff    	lea    -0x19c2c(%ebx),%eax
   105c7:	50                   	push   %eax
   105c8:	e8 43 3d ff ff       	call   4310 <__assert_fail@plt>
   105cd:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   105d3:	50                   	push   %eax
   105d4:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   105da:	6a 6d                	push   $0x6d
   105dc:	50                   	push   %eax
   105dd:	8d 83 b0 63 fe ff    	lea    -0x19c50(%ebx),%eax
   105e3:	50                   	push   %eax
   105e4:	e8 27 3d ff ff       	call   4310 <__assert_fail@plt>
   105e9:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   105ef:	50                   	push   %eax
   105f0:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   105f6:	6a 6a                	push   $0x6a
   105f8:	50                   	push   %eax
   105f9:	8d 83 84 63 fe ff    	lea    -0x19c7c(%ebx),%eax
   105ff:	50                   	push   %eax
   10600:	e8 0b 3d ff ff       	call   4310 <__assert_fail@plt>
   10605:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1060b:	50                   	push   %eax
   1060c:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   10612:	6a 67                	push   $0x67
   10614:	50                   	push   %eax
   10615:	8d 83 60 63 fe ff    	lea    -0x19ca0(%ebx),%eax
   1061b:	50                   	push   %eax
   1061c:	e8 ef 3c ff ff       	call   4310 <__assert_fail@plt>
   10621:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   10627:	50                   	push   %eax
   10628:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   1062e:	6a 64                	push   $0x64
   10630:	50                   	push   %eax
   10631:	8d 83 34 63 fe ff    	lea    -0x19ccc(%ebx),%eax
   10637:	50                   	push   %eax
   10638:	e8 d3 3c ff ff       	call   4310 <__assert_fail@plt>
   1063d:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   10643:	50                   	push   %eax
   10644:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   1064a:	6a 61                	push   $0x61
   1064c:	50                   	push   %eax
   1064d:	8d 83 10 63 fe ff    	lea    -0x19cf0(%ebx),%eax
   10653:	50                   	push   %eax
   10654:	e8 b7 3c ff ff       	call   4310 <__assert_fail@plt>
   10659:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1065f:	50                   	push   %eax
   10660:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   10666:	6a 5e                	push   $0x5e
   10668:	50                   	push   %eax
   10669:	8d 83 e4 62 fe ff    	lea    -0x19d1c(%ebx),%eax
   1066f:	50                   	push   %eax
   10670:	e8 9b 3c ff ff       	call   4310 <__assert_fail@plt>
   10675:	8d 83 00 64 fe ff    	lea    -0x19c00(%ebx),%eax
   1067b:	50                   	push   %eax
   1067c:	8d 83 24 61 fe ff    	lea    -0x19edc(%ebx),%eax
   10682:	6a 5b                	push   $0x5b
   10684:	50                   	push   %eax
   10685:	8d 83 c0 62 fe ff    	lea    -0x19d40(%ebx),%eax
   1068b:	50                   	push   %eax
   1068c:	e8 7f 3c ff ff       	call   4310 <__assert_fail@plt>
   10691:	66 90                	xchg   %ax,%ax
   10693:	66 90                	xchg   %ax,%ax
   10695:	66 90                	xchg   %ax,%ax
   10697:	66 90                	xchg   %ax,%ax
   10699:	66 90                	xchg   %ax,%ax
   1069b:	66 90                	xchg   %ax,%ax
   1069d:	66 90                	xchg   %ax,%ax
   1069f:	90                   	nop

000106a0 <internal_normalize>:
   106a0:	55                   	push   %ebp
   106a1:	57                   	push   %edi
   106a2:	56                   	push   %esi
   106a3:	53                   	push   %ebx
   106a4:	83 ec 0c             	sub    $0xc,%esp
   106a7:	8b 54 24 2c          	mov    0x2c(%esp),%edx
   106ab:	8b 44 24 28          	mov    0x28(%esp),%eax
   106af:	8b 4c 24 24          	mov    0x24(%esp),%ecx
   106b3:	89 c6                	mov    %eax,%esi
   106b5:	89 d7                	mov    %edx,%edi
   106b7:	0f ac d6 1a          	shrd   $0x1a,%edx,%esi
   106bb:	c1 ef 1a             	shr    $0x1a,%edi
   106be:	85 c9                	test   %ecx,%ecx
   106c0:	78 14                	js     106d6 <internal_normalize+0x36>
   106c2:	bb 01 00 00 00       	mov    $0x1,%ebx
   106c7:	39 f3                	cmp    %esi,%ebx
   106c9:	bb 00 00 00 00       	mov    $0x0,%ebx
   106ce:	19 fb                	sbb    %edi,%ebx
   106d0:	0f 83 ea 00 00 00    	jae    107c0 <internal_normalize+0x120>
   106d6:	31 db                	xor    %ebx,%ebx
   106d8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   106df:	90                   	nop
   106e0:	89 c6                	mov    %eax,%esi
   106e2:	bd 01 00 00 00       	mov    $0x1,%ebp
   106e7:	89 d7                	mov    %edx,%edi
   106e9:	0f ac d6 1a          	shrd   $0x1a,%edx,%esi
   106ed:	c1 ef 1a             	shr    $0x1a,%edi
   106f0:	39 f5                	cmp    %esi,%ebp
   106f2:	89 dd                	mov    %ebx,%ebp
   106f4:	19 fd                	sbb    %edi,%ebp
   106f6:	73 58                	jae    10750 <internal_normalize+0xb0>
   106f8:	81 f9 fe 00 00 00    	cmp    $0xfe,%ecx
   106fe:	7e 2c                	jle    1072c <internal_normalize+0x8c>
   10700:	31 c0                	xor    %eax,%eax
   10702:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   10707:	8b 54 24 20          	mov    0x20(%esp),%edx
   1070b:	0f b6 c9             	movzbl %cl,%ecx
   1070e:	83 c4 0c             	add    $0xc,%esp
   10711:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   10716:	c1 e1 17             	shl    $0x17,%ecx
   10719:	5b                   	pop    %ebx
   1071a:	5e                   	pop    %esi
   1071b:	c1 e2 1f             	shl    $0x1f,%edx
   1071e:	5f                   	pop    %edi
   1071f:	5d                   	pop    %ebp
   10720:	09 d1                	or     %edx,%ecx
   10722:	09 c8                	or     %ecx,%eax
   10724:	c3                   	ret    
   10725:	8d 76 00             	lea    0x0(%esi),%esi
   10728:	85 c9                	test   %ecx,%ecx
   1072a:	79 31                	jns    1075d <internal_normalize+0xbd>
   1072c:	89 c6                	mov    %eax,%esi
   1072e:	89 c5                	mov    %eax,%ebp
   10730:	89 d7                	mov    %edx,%edi
   10732:	83 c1 01             	add    $0x1,%ecx
   10735:	0f ac d6 01          	shrd   $0x1,%edx,%esi
   10739:	83 e5 01             	and    $0x1,%ebp
   1073c:	d1 ef                	shr    %edi
   1073e:	09 f5                	or     %esi,%ebp
   10740:	89 fa                	mov    %edi,%edx
   10742:	89 e8                	mov    %ebp,%eax
   10744:	eb 9a                	jmp    106e0 <internal_normalize+0x40>
   10746:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1074d:	8d 76 00             	lea    0x0(%esi),%esi
   10750:	be 04 00 00 00       	mov    $0x4,%esi
   10755:	89 df                	mov    %ebx,%edi
   10757:	39 c6                	cmp    %eax,%esi
   10759:	19 d7                	sbb    %edx,%edi
   1075b:	72 cb                	jb     10728 <internal_normalize+0x88>
   1075d:	81 f9 fe 00 00 00    	cmp    $0xfe,%ecx
   10763:	7f 9b                	jg     10700 <internal_normalize+0x60>
   10765:	85 c9                	test   %ecx,%ecx
   10767:	0f 85 c5 00 00 00    	jne    10832 <internal_normalize+0x192>
   1076d:	89 c6                	mov    %eax,%esi
   1076f:	89 c3                	mov    %eax,%ebx
   10771:	89 d7                	mov    %edx,%edi
   10773:	0f ac d6 01          	shrd   $0x1,%edx,%esi
   10777:	83 e3 01             	and    $0x1,%ebx
   1077a:	d1 ef                	shr    %edi
   1077c:	09 f3                	or     %esi,%ebx
   1077e:	89 fa                	mov    %edi,%edx
   10780:	89 d8                	mov    %ebx,%eax
   10782:	89 c3                	mov    %eax,%ebx
   10784:	a8 04                	test   $0x4,%al
   10786:	74 53                	je     107db <internal_normalize+0x13b>
   10788:	83 e3 07             	and    $0x7,%ebx
   1078b:	83 fb 04             	cmp    $0x4,%ebx
   1078e:	0f 84 ad 00 00 00    	je     10841 <internal_normalize+0x1a1>
   10794:	0f ac d0 03          	shrd   $0x3,%edx,%eax
   10798:	c1 ea 03             	shr    $0x3,%edx
   1079b:	83 c0 01             	add    $0x1,%eax
   1079e:	83 d2 00             	adc    $0x0,%edx
   107a1:	89 c3                	mov    %eax,%ebx
   107a3:	81 f3 00 00 00 01    	xor    $0x1000000,%ebx
   107a9:	89 d6                	mov    %edx,%esi
   107ab:	09 de                	or     %ebx,%esi
   107ad:	0f 84 9b 00 00 00    	je     1084e <internal_normalize+0x1ae>
   107b3:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   107b8:	e9 4a ff ff ff       	jmp    10707 <internal_normalize+0x67>
   107bd:	8d 76 00             	lea    0x0(%esi),%esi
   107c0:	85 c9                	test   %ecx,%ecx
   107c2:	74 0c                	je     107d0 <internal_normalize+0x130>
   107c4:	89 f3                	mov    %esi,%ebx
   107c6:	89 cd                	mov    %ecx,%ebp
   107c8:	83 f3 01             	xor    $0x1,%ebx
   107cb:	83 e3 01             	and    $0x1,%ebx
   107ce:	75 28                	jne    107f8 <internal_normalize+0x158>
   107d0:	85 c9                	test   %ecx,%ecx
   107d2:	89 c3                	mov    %eax,%ebx
   107d4:	0f 44 ce             	cmove  %esi,%ecx
   107d7:	a8 04                	test   $0x4,%al
   107d9:	75 ad                	jne    10788 <internal_normalize+0xe8>
   107db:	0f ac d0 03          	shrd   $0x3,%edx,%eax
   107df:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   107e4:	e9 1e ff ff ff       	jmp    10707 <internal_normalize+0x67>
   107e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   107f0:	85 ed                	test   %ebp,%ebp
   107f2:	74 70                	je     10864 <internal_normalize+0x1c4>
   107f4:	89 f0                	mov    %esi,%eax
   107f6:	89 fa                	mov    %edi,%edx
   107f8:	89 c6                	mov    %eax,%esi
   107fa:	89 d7                	mov    %edx,%edi
   107fc:	83 ed 01             	sub    $0x1,%ebp
   107ff:	0f a4 c7 01          	shld   $0x1,%eax,%edi
   10803:	01 c6                	add    %eax,%esi
   10805:	89 fb                	mov    %edi,%ebx
   10807:	89 f1                	mov    %esi,%ecx
   10809:	0f ac d9 1a          	shrd   $0x1a,%ebx,%ecx
   1080d:	c1 eb 1a             	shr    $0x1a,%ebx
   10810:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   10814:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   10818:	89 0c 24             	mov    %ecx,(%esp)
   1081b:	09 cb                	or     %ecx,%ebx
   1081d:	74 d1                	je     107f0 <internal_normalize+0x150>
   1081f:	89 e9                	mov    %ebp,%ecx
   10821:	85 ed                	test   %ebp,%ebp
   10823:	0f 84 59 ff ff ff    	je     10782 <internal_normalize+0xe2>
   10829:	89 f0                	mov    %esi,%eax
   1082b:	89 fa                	mov    %edi,%edx
   1082d:	e9 50 ff ff ff       	jmp    10782 <internal_normalize+0xe2>
   10832:	0f 89 4a ff ff ff    	jns    10782 <internal_normalize+0xe2>
   10838:	31 c0                	xor    %eax,%eax
   1083a:	31 c9                	xor    %ecx,%ecx
   1083c:	e9 c6 fe ff ff       	jmp    10707 <internal_normalize+0x67>
   10841:	89 c3                	mov    %eax,%ebx
   10843:	83 e3 08             	and    $0x8,%ebx
   10846:	0f 85 48 ff ff ff    	jne    10794 <internal_normalize+0xf4>
   1084c:	eb 8d                	jmp    107db <internal_normalize+0x13b>
   1084e:	81 f9 fe 00 00 00    	cmp    $0xfe,%ecx
   10854:	0f 8f a6 fe ff ff    	jg     10700 <internal_normalize+0x60>
   1085a:	83 c1 01             	add    $0x1,%ecx
   1085d:	31 c0                	xor    %eax,%eax
   1085f:	e9 a3 fe ff ff       	jmp    10707 <internal_normalize+0x67>
   10864:	89 e9                	mov    %ebp,%ecx
   10866:	e9 17 ff ff ff       	jmp    10782 <internal_normalize+0xe2>
   1086b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1086f:	90                   	nop

00010870 <internal_float_add>:
   10870:	e8 dd 44 ff ff       	call   4d52 <__x86.get_pc_thunk.cx>
   10875:	81 c1 8b e7 03 00    	add    $0x3e78b,%ecx
   1087b:	55                   	push   %ebp
   1087c:	31 d2                	xor    %edx,%edx
   1087e:	57                   	push   %edi
   1087f:	56                   	push   %esi
   10880:	53                   	push   %ebx
   10881:	83 ec 14             	sub    $0x14,%esp
   10884:	8d 81 00 07 00 00    	lea    0x700(%ecx),%eax
   1088a:	8b 7c 24 28          	mov    0x28(%esp),%edi
   1088e:	8b 74 24 2c          	mov    0x2c(%esp),%esi
   10892:	eb 0f                	jmp    108a3 <internal_float_add+0x33>
   10894:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10898:	83 c2 01             	add    $0x1,%edx
   1089b:	83 c0 0c             	add    $0xc,%eax
   1089e:	83 fa 0b             	cmp    $0xb,%edx
   108a1:	74 1d                	je     108c0 <internal_float_add+0x50>
   108a3:	39 30                	cmp    %esi,(%eax)
   108a5:	75 f1                	jne    10898 <internal_float_add+0x28>
   108a7:	39 78 04             	cmp    %edi,0x4(%eax)
   108aa:	75 ec                	jne    10898 <internal_float_add+0x28>
   108ac:	8d 04 52             	lea    (%edx,%edx,2),%eax
   108af:	8b 84 81 08 07 00 00 	mov    0x708(%ecx,%eax,4),%eax
   108b6:	83 c4 14             	add    $0x14,%esp
   108b9:	5b                   	pop    %ebx
   108ba:	5e                   	pop    %esi
   108bb:	5f                   	pop    %edi
   108bc:	5d                   	pop    %ebp
   108bd:	c3                   	ret    
   108be:	66 90                	xchg   %ax,%ax
   108c0:	89 f8                	mov    %edi,%eax
   108c2:	f7 c6 ff ff ff 7f    	test   $0x7fffffff,%esi
   108c8:	74 ec                	je     108b6 <internal_float_add+0x46>
   108ca:	89 f0                	mov    %esi,%eax
   108cc:	f7 c7 ff ff ff 7f    	test   $0x7fffffff,%edi
   108d2:	74 e2                	je     108b6 <internal_float_add+0x46>
   108d4:	89 f3                	mov    %esi,%ebx
   108d6:	89 f5                	mov    %esi,%ebp
   108d8:	89 f9                	mov    %edi,%ecx
   108da:	c1 eb 10             	shr    $0x10,%ebx
   108dd:	89 d8                	mov    %ebx,%eax
   108df:	66 25 80 7f          	and    $0x7f80,%ax
   108e3:	66 89 04 24          	mov    %ax,(%esp)
   108e7:	66 81 3c 24 80 7f    	cmpw   $0x7f80,(%esp)
   108ed:	89 f0                	mov    %esi,%eax
   108ef:	74 c5                	je     108b6 <internal_float_add+0x46>
   108f1:	c1 e9 10             	shr    $0x10,%ecx
   108f4:	89 7c 24 08          	mov    %edi,0x8(%esp)
   108f8:	89 f8                	mov    %edi,%eax
   108fa:	66 81 e1 80 7f       	and    $0x7f80,%cx
   108ff:	66 81 f9 80 7f       	cmp    $0x7f80,%cx
   10904:	74 b0                	je     108b6 <internal_float_add+0x46>
   10906:	89 f2                	mov    %esi,%edx
   10908:	c1 e8 17             	shr    $0x17,%eax
   1090b:	c1 ea 17             	shr    $0x17,%edx
   1090e:	88 44 24 0e          	mov    %al,0xe(%esp)
   10912:	88 54 24 0f          	mov    %dl,0xf(%esp)
   10916:	38 c2                	cmp    %al,%dl
   10918:	0f 87 e2 00 00 00    	ja     10a00 <internal_float_add+0x190>
   1091e:	89 e8                	mov    %ebp,%eax
   10920:	8b 7c 24 08          	mov    0x8(%esp),%edi
   10924:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   10929:	89 c2                	mov    %eax,%edx
   1092b:	81 ca 00 00 80 00    	or     $0x800000,%edx
   10931:	66 83 3c 24 00       	cmpw   $0x0,(%esp)
   10936:	0f 45 c2             	cmovne %edx,%eax
   10939:	81 e7 ff ff 7f 00    	and    $0x7fffff,%edi
   1093f:	89 fa                	mov    %edi,%edx
   10941:	81 ca 00 00 80 00    	or     $0x800000,%edx
   10947:	66 85 c9             	test   %cx,%cx
   1094a:	0f 45 fa             	cmovne %edx,%edi
   1094d:	0f 94 c1             	sete   %cl
   10950:	0f b6 54 24 0e       	movzbl 0xe(%esp),%edx
   10955:	0f b6 c9             	movzbl %cl,%ecx
   10958:	8d 1c 11             	lea    (%ecx,%edx,1),%ebx
   1095b:	0f b6 4c 24 0f       	movzbl 0xf(%esp),%ecx
   10960:	89 d6                	mov    %edx,%esi
   10962:	29 cb                	sub    %ecx,%ebx
   10964:	89 d9                	mov    %ebx,%ecx
   10966:	31 db                	xor    %ebx,%ebx
   10968:	66 83 3c 24 00       	cmpw   $0x0,(%esp)
   1096d:	0f 94 c3             	sete   %bl
   10970:	c1 e7 03             	shl    $0x3,%edi
   10973:	c1 e0 03             	shl    $0x3,%eax
   10976:	89 3c 24             	mov    %edi,(%esp)
   10979:	29 d9                	sub    %ebx,%ecx
   1097b:	74 13                	je     10990 <internal_float_add+0x120>
   1097d:	31 db                	xor    %ebx,%ebx
   1097f:	90                   	nop
   10980:	89 c7                	mov    %eax,%edi
   10982:	d1 e8                	shr    %eax
   10984:	83 e7 01             	and    $0x1,%edi
   10987:	09 fb                	or     %edi,%ebx
   10989:	09 d8                	or     %ebx,%eax
   1098b:	83 e9 01             	sub    $0x1,%ecx
   1098e:	75 f0                	jne    10980 <internal_float_add+0x110>
   10990:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   10994:	89 eb                	mov    %ebp,%ebx
   10996:	c1 eb 18             	shr    $0x18,%ebx
   10999:	c1 e9 18             	shr    $0x18,%ecx
   1099c:	84 db                	test   %bl,%bl
   1099e:	78 7d                	js     10a1d <internal_float_add+0x1ad>
   109a0:	84 c9                	test   %cl,%cl
   109a2:	0f 88 08 01 00 00    	js     10ab0 <internal_float_add+0x240>
   109a8:	c6 44 24 08 00       	movb   $0x0,0x8(%esp)
   109ad:	03 04 24             	add    (%esp),%eax
   109b0:	31 db                	xor    %ebx,%ebx
   109b2:	89 c1                	mov    %eax,%ecx
   109b4:	bf 01 00 00 00       	mov    $0x1,%edi
   109b9:	89 04 24             	mov    %eax,(%esp)
   109bc:	0f ac d9 1a          	shrd   $0x1a,%ebx,%ecx
   109c0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   109c4:	c1 eb 1a             	shr    $0x1a,%ebx
   109c7:	39 cf                	cmp    %ecx,%edi
   109c9:	bf 00 00 00 00       	mov    $0x0,%edi
   109ce:	19 df                	sbb    %ebx,%edi
   109d0:	0f 83 07 01 00 00    	jae    10add <internal_float_add+0x26d>
   109d6:	31 ed                	xor    %ebp,%ebp
   109d8:	80 7c 24 0e ff       	cmpb   $0xff,0xe(%esp)
   109dd:	75 69                	jne    10a48 <internal_float_add+0x1d8>
   109df:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
   109e4:	c1 e2 17             	shl    $0x17,%edx
   109e7:	83 c4 14             	add    $0x14,%esp
   109ea:	81 e5 ff ff 7f 00    	and    $0x7fffff,%ebp
   109f0:	5b                   	pop    %ebx
   109f1:	5e                   	pop    %esi
   109f2:	c1 e0 1f             	shl    $0x1f,%eax
   109f5:	5f                   	pop    %edi
   109f6:	09 d0                	or     %edx,%eax
   109f8:	09 e8                	or     %ebp,%eax
   109fa:	5d                   	pop    %ebp
   109fb:	c3                   	ret    
   109fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10a00:	88 44 24 0f          	mov    %al,0xf(%esp)
   10a04:	0f b7 04 24          	movzwl (%esp),%eax
   10a08:	89 fd                	mov    %edi,%ebp
   10a0a:	66 89 0c 24          	mov    %cx,(%esp)
   10a0e:	89 74 24 08          	mov    %esi,0x8(%esp)
   10a12:	89 c1                	mov    %eax,%ecx
   10a14:	88 54 24 0e          	mov    %dl,0xe(%esp)
   10a18:	e9 01 ff ff ff       	jmp    1091e <internal_float_add+0xae>
   10a1d:	f7 d8                	neg    %eax
   10a1f:	84 c9                	test   %cl,%cl
   10a21:	0f 88 89 00 00 00    	js     10ab0 <internal_float_add+0x240>
   10a27:	c6 44 24 08 00       	movb   $0x0,0x8(%esp)
   10a2c:	03 04 24             	add    (%esp),%eax
   10a2f:	0f 89 7b ff ff ff    	jns    109b0 <internal_float_add+0x140>
   10a35:	f7 d8                	neg    %eax
   10a37:	c6 44 24 08 01       	movb   $0x1,0x8(%esp)
   10a3c:	e9 6f ff ff ff       	jmp    109b0 <internal_float_add+0x140>
   10a41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10a48:	89 c6                	mov    %eax,%esi
   10a4a:	31 ff                	xor    %edi,%edi
   10a4c:	83 e0 01             	and    $0x1,%eax
   10a4f:	0f ac fe 01          	shrd   $0x1,%edi,%esi
   10a53:	d1 ef                	shr    %edi
   10a55:	09 f0                	or     %esi,%eax
   10a57:	8d 72 01             	lea    0x1(%edx),%esi
   10a5a:	89 7c 24 04          	mov    %edi,0x4(%esp)
   10a5e:	89 04 24             	mov    %eax,(%esp)
   10a61:	81 fe ff 00 00 00    	cmp    $0xff,%esi
   10a67:	0f 84 fc 00 00 00    	je     10b69 <internal_float_add+0x2f9>
   10a6d:	a8 04                	test   $0x4,%al
   10a6f:	74 4f                	je     10ac0 <internal_float_add+0x250>
   10a71:	83 e0 07             	and    $0x7,%eax
   10a74:	83 f8 04             	cmp    $0x4,%eax
   10a77:	74 3f                	je     10ab8 <internal_float_add+0x248>
   10a79:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   10a7d:	8b 0c 24             	mov    (%esp),%ecx
   10a80:	0f ac d9 03          	shrd   $0x3,%ebx,%ecx
   10a84:	c1 eb 03             	shr    $0x3,%ebx
   10a87:	83 c1 01             	add    $0x1,%ecx
   10a8a:	83 d3 00             	adc    $0x0,%ebx
   10a8d:	89 c8                	mov    %ecx,%eax
   10a8f:	35 00 00 00 01       	xor    $0x1000000,%eax
   10a94:	89 da                	mov    %ebx,%edx
   10a96:	09 c2                	or     %eax,%edx
   10a98:	0f 84 b4 00 00 00    	je     10b52 <internal_float_add+0x2e2>
   10a9e:	89 cd                	mov    %ecx,%ebp
   10aa0:	89 f0                	mov    %esi,%eax
   10aa2:	81 e5 ff ff 7f 00    	and    $0x7fffff,%ebp
   10aa8:	0f b6 d0             	movzbl %al,%edx
   10aab:	e9 2f ff ff ff       	jmp    109df <internal_float_add+0x16f>
   10ab0:	f7 1c 24             	negl   (%esp)
   10ab3:	e9 6f ff ff ff       	jmp    10a27 <internal_float_add+0x1b7>
   10ab8:	8b 04 24             	mov    (%esp),%eax
   10abb:	83 e0 08             	and    $0x8,%eax
   10abe:	75 b9                	jne    10a79 <internal_float_add+0x209>
   10ac0:	8b 0c 24             	mov    (%esp),%ecx
   10ac3:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   10ac7:	89 f0                	mov    %esi,%eax
   10ac9:	0f b6 d0             	movzbl %al,%edx
   10acc:	0f ac d9 03          	shrd   $0x3,%ebx,%ecx
   10ad0:	89 cd                	mov    %ecx,%ebp
   10ad2:	81 e5 ff ff 7f 00    	and    $0x7fffff,%ebp
   10ad8:	e9 02 ff ff ff       	jmp    109df <internal_float_add+0x16f>
   10add:	89 df                	mov    %ebx,%edi
   10adf:	09 cf                	or     %ecx,%edi
   10ae1:	75 5d                	jne    10b40 <internal_float_add+0x2d0>
   10ae3:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
   10ae8:	74 61                	je     10b4b <internal_float_add+0x2db>
   10aea:	8b 0c 24             	mov    (%esp),%ecx
   10aed:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   10af1:	eb 0d                	jmp    10b00 <internal_float_add+0x290>
   10af3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10af7:	90                   	nop
   10af8:	85 f6                	test   %esi,%esi
   10afa:	74 77                	je     10b73 <internal_float_add+0x303>
   10afc:	89 f9                	mov    %edi,%ecx
   10afe:	89 eb                	mov    %ebp,%ebx
   10b00:	89 cf                	mov    %ecx,%edi
   10b02:	89 dd                	mov    %ebx,%ebp
   10b04:	83 ee 01             	sub    $0x1,%esi
   10b07:	0f a4 cd 01          	shld   $0x1,%ecx,%ebp
   10b0b:	01 cf                	add    %ecx,%edi
   10b0d:	89 ea                	mov    %ebp,%edx
   10b0f:	89 f8                	mov    %edi,%eax
   10b11:	0f ac d0 1a          	shrd   $0x1a,%edx,%eax
   10b15:	c1 ea 1a             	shr    $0x1a,%edx
   10b18:	89 54 24 04          	mov    %edx,0x4(%esp)
   10b1c:	8b 54 24 04          	mov    0x4(%esp),%edx
   10b20:	89 04 24             	mov    %eax,(%esp)
   10b23:	09 c2                	or     %eax,%edx
   10b25:	74 d1                	je     10af8 <internal_float_add+0x288>
   10b27:	89 0c 24             	mov    %ecx,(%esp)
   10b2a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   10b2e:	85 f6                	test   %esi,%esi
   10b30:	74 48                	je     10b7a <internal_float_add+0x30a>
   10b32:	89 f8                	mov    %edi,%eax
   10b34:	89 3c 24             	mov    %edi,(%esp)
   10b37:	89 6c 24 04          	mov    %ebp,0x4(%esp)
   10b3b:	e9 2d ff ff ff       	jmp    10a6d <internal_float_add+0x1fd>
   10b40:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
   10b45:	0f 85 22 ff ff ff    	jne    10a6d <internal_float_add+0x1fd>
   10b4b:	89 ce                	mov    %ecx,%esi
   10b4d:	e9 1b ff ff ff       	jmp    10a6d <internal_float_add+0x1fd>
   10b52:	81 fe ff 00 00 00    	cmp    $0xff,%esi
   10b58:	74 0d                	je     10b67 <internal_float_add+0x2f7>
   10b5a:	8d 46 01             	lea    0x1(%esi),%eax
   10b5d:	31 ed                	xor    %ebp,%ebp
   10b5f:	0f b6 d0             	movzbl %al,%edx
   10b62:	e9 78 fe ff ff       	jmp    109df <internal_float_add+0x16f>
   10b67:	31 ed                	xor    %ebp,%ebp
   10b69:	ba ff 00 00 00       	mov    $0xff,%edx
   10b6e:	e9 6c fe ff ff       	jmp    109df <internal_float_add+0x16f>
   10b73:	89 0c 24             	mov    %ecx,(%esp)
   10b76:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   10b7a:	8b 04 24             	mov    (%esp),%eax
   10b7d:	31 f6                	xor    %esi,%esi
   10b7f:	e9 e9 fe ff ff       	jmp    10a6d <internal_float_add+0x1fd>
   10b84:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10b8b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10b8f:	90                   	nop

00010b90 <internal_float_sub>:
   10b90:	56                   	push   %esi
   10b91:	31 c9                	xor    %ecx,%ecx
   10b93:	e8 5d f4 ff ff       	call   fff5 <__x86.get_pc_thunk.si>
   10b98:	81 c6 68 e4 03 00    	add    $0x3e468,%esi
   10b9e:	53                   	push   %ebx
   10b9f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   10ba3:	8b 44 24 10          	mov    0x10(%esp),%eax
   10ba7:	8d 96 a0 06 00 00    	lea    0x6a0(%esi),%edx
   10bad:	eb 0c                	jmp    10bbb <internal_float_sub+0x2b>
   10baf:	90                   	nop
   10bb0:	83 c1 01             	add    $0x1,%ecx
   10bb3:	83 c2 0c             	add    $0xc,%edx
   10bb6:	83 f9 08             	cmp    $0x8,%ecx
   10bb9:	74 1d                	je     10bd8 <internal_float_sub+0x48>
   10bbb:	39 02                	cmp    %eax,(%edx)
   10bbd:	75 f1                	jne    10bb0 <internal_float_sub+0x20>
   10bbf:	39 5a 04             	cmp    %ebx,0x4(%edx)
   10bc2:	75 ec                	jne    10bb0 <internal_float_sub+0x20>
   10bc4:	8d 04 49             	lea    (%ecx,%ecx,2),%eax
   10bc7:	8b 84 86 a8 06 00 00 	mov    0x6a8(%esi,%eax,4),%eax
   10bce:	5b                   	pop    %ebx
   10bcf:	5e                   	pop    %esi
   10bd0:	c3                   	ret    
   10bd1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10bd8:	89 c2                	mov    %eax,%edx
   10bda:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
   10be0:	81 fa 00 00 c0 7f    	cmp    $0x7fc00000,%edx
   10be6:	74 e6                	je     10bce <internal_float_sub+0x3e>
   10be8:	89 da                	mov    %ebx,%edx
   10bea:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
   10bf0:	81 fa 00 00 c0 7f    	cmp    $0x7fc00000,%edx
   10bf6:	74 20                	je     10c18 <internal_float_sub+0x88>
   10bf8:	c1 eb 1f             	shr    $0x1f,%ebx
   10bfb:	89 44 24 10          	mov    %eax,0x10(%esp)
   10bff:	f7 d3                	not    %ebx
   10c01:	c1 e3 1f             	shl    $0x1f,%ebx
   10c04:	09 d3                	or     %edx,%ebx
   10c06:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   10c0a:	5b                   	pop    %ebx
   10c0b:	5e                   	pop    %esi
   10c0c:	e9 5f fc ff ff       	jmp    10870 <internal_float_add>
   10c11:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10c18:	89 d8                	mov    %ebx,%eax
   10c1a:	5b                   	pop    %ebx
   10c1b:	5e                   	pop    %esi
   10c1c:	c3                   	ret    
   10c1d:	8d 76 00             	lea    0x0(%esi),%esi

00010c20 <internal_float_mul>:
   10c20:	55                   	push   %ebp
   10c21:	57                   	push   %edi
   10c22:	56                   	push   %esi
   10c23:	e8 cd f3 ff ff       	call   fff5 <__x86.get_pc_thunk.si>
   10c28:	81 c6 d8 e3 03 00    	add    $0x3e3d8,%esi
   10c2e:	53                   	push   %ebx
   10c2f:	31 db                	xor    %ebx,%ebx
   10c31:	83 ec 1c             	sub    $0x1c,%esp
   10c34:	8b 4c 24 30          	mov    0x30(%esp),%ecx
   10c38:	8b 44 24 34          	mov    0x34(%esp),%eax
   10c3c:	8d 96 40 06 00 00    	lea    0x640(%esi),%edx
   10c42:	eb 0f                	jmp    10c53 <internal_float_mul+0x33>
   10c44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10c48:	83 c3 01             	add    $0x1,%ebx
   10c4b:	83 c2 0c             	add    $0xc,%edx
   10c4e:	83 fb 08             	cmp    $0x8,%ebx
   10c51:	74 1d                	je     10c70 <internal_float_mul+0x50>
   10c53:	39 02                	cmp    %eax,(%edx)
   10c55:	75 f1                	jne    10c48 <internal_float_mul+0x28>
   10c57:	39 4a 04             	cmp    %ecx,0x4(%edx)
   10c5a:	75 ec                	jne    10c48 <internal_float_mul+0x28>
   10c5c:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax
   10c5f:	8b 84 86 48 06 00 00 	mov    0x648(%esi,%eax,4),%eax
   10c66:	83 c4 1c             	add    $0x1c,%esp
   10c69:	5b                   	pop    %ebx
   10c6a:	5e                   	pop    %esi
   10c6b:	5f                   	pop    %edi
   10c6c:	5d                   	pop    %ebp
   10c6d:	c3                   	ret    
   10c6e:	66 90                	xchg   %ax,%ax
   10c70:	89 c2                	mov    %eax,%edx
   10c72:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
   10c78:	3d 00 00 c0 7f       	cmp    $0x7fc00000,%eax
   10c7d:	0f 94 c3             	sete   %bl
   10c80:	89 de                	mov    %ebx,%esi
   10c82:	81 fa 00 00 c0 7f    	cmp    $0x7fc00000,%edx
   10c88:	0f 84 b2 01 00 00    	je     10e40 <internal_float_mul+0x220>
   10c8e:	89 cb                	mov    %ecx,%ebx
   10c90:	81 e3 ff ff ff 7f    	and    $0x7fffffff,%ebx
   10c96:	81 fb 00 00 c0 7f    	cmp    $0x7fc00000,%ebx
   10c9c:	0f 84 9e 01 00 00    	je     10e40 <internal_float_mul+0x220>
   10ca2:	85 d2                	test   %edx,%edx
   10ca4:	0f 84 b6 01 00 00    	je     10e60 <internal_float_mul+0x240>
   10caa:	85 db                	test   %ebx,%ebx
   10cac:	0f 84 ae 01 00 00    	je     10e60 <internal_float_mul+0x240>
   10cb2:	81 fa 00 00 80 7f    	cmp    $0x7f800000,%edx
   10cb8:	0f 84 d2 01 00 00    	je     10e90 <internal_float_mul+0x270>
   10cbe:	81 fb 00 00 80 7f    	cmp    $0x7f800000,%ebx
   10cc4:	0f 84 c6 01 00 00    	je     10e90 <internal_float_mul+0x270>
   10cca:	89 c7                	mov    %eax,%edi
   10ccc:	89 ca                	mov    %ecx,%edx
   10cce:	89 c5                	mov    %eax,%ebp
   10cd0:	89 cb                	mov    %ecx,%ebx
   10cd2:	c1 ef 1f             	shr    $0x1f,%edi
   10cd5:	c1 ea 10             	shr    $0x10,%edx
   10cd8:	81 e3 ff ff 7f 00    	and    $0x7fffff,%ebx
   10cde:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   10ce5:	00 
   10ce6:	89 7c 24 08          	mov    %edi,0x8(%esp)
   10cea:	89 cf                	mov    %ecx,%edi
   10cec:	66 81 e2 80 7f       	and    $0x7f80,%dx
   10cf1:	c1 ed 17             	shr    $0x17,%ebp
   10cf4:	c1 ef 1f             	shr    $0x1f,%edi
   10cf7:	66 89 54 24 12       	mov    %dx,0x12(%esp)
   10cfc:	c1 e9 17             	shr    $0x17,%ecx
   10cff:	89 ea                	mov    %ebp,%edx
   10d01:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   10d05:	89 c7                	mov    %eax,%edi
   10d07:	c1 e8 10             	shr    $0x10,%eax
   10d0a:	81 e7 ff ff 7f 00    	and    $0x7fffff,%edi
   10d10:	89 1c 24             	mov    %ebx,(%esp)
   10d13:	89 7c 24 14          	mov    %edi,0x14(%esp)
   10d17:	89 fe                	mov    %edi,%esi
   10d19:	31 ff                	xor    %edi,%edi
   10d1b:	88 4c 24 10          	mov    %cl,0x10(%esp)
   10d1f:	88 54 24 11          	mov    %dl,0x11(%esp)
   10d23:	a9 80 7f 00 00       	test   $0x7f80,%eax
   10d28:	0f 85 7b 01 00 00    	jne    10ea9 <internal_float_mul+0x289>
   10d2e:	8d 45 01             	lea    0x1(%ebp),%eax
   10d31:	66 83 7c 24 12 00    	cmpw   $0x0,0x12(%esp)
   10d37:	88 44 24 11          	mov    %al,0x11(%esp)
   10d3b:	0f 84 3e 02 00 00    	je     10f7f <internal_float_mul+0x35f>
   10d41:	81 cb 00 00 80 00    	or     $0x800000,%ebx
   10d47:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   10d4e:	00 
   10d4f:	89 1c 24             	mov    %ebx,(%esp)
   10d52:	8b 54 24 04          	mov    0x4(%esp),%edx
   10d56:	8b 04 24             	mov    (%esp),%eax
   10d59:	0f b6 5c 24 10       	movzbl 0x10(%esp),%ebx
   10d5e:	89 c1                	mov    %eax,%ecx
   10d60:	89 d0                	mov    %edx,%eax
   10d62:	0f af c6             	imul   %esi,%eax
   10d65:	0f af cf             	imul   %edi,%ecx
   10d68:	01 c1                	add    %eax,%ecx
   10d6a:	8b 04 24             	mov    (%esp),%eax
   10d6d:	f7 e6                	mul    %esi
   10d6f:	89 04 24             	mov    %eax,(%esp)
   10d72:	0f b6 44 24 11       	movzbl 0x11(%esp),%eax
   10d77:	89 54 24 04          	mov    %edx,0x4(%esp)
   10d7b:	8d 94 18 6d ff ff ff 	lea    -0x93(%eax,%ebx,1),%edx
   10d82:	01 4c 24 04          	add    %ecx,0x4(%esp)
   10d86:	8b 0c 24             	mov    (%esp),%ecx
   10d89:	b8 01 00 00 00       	mov    $0x1,%eax
   10d8e:	8b 5c 24 04          	mov    0x4(%esp),%ebx
   10d92:	0f ac d9 1a          	shrd   $0x1a,%ebx,%ecx
   10d96:	c1 eb 1a             	shr    $0x1a,%ebx
   10d99:	39 c8                	cmp    %ecx,%eax
   10d9b:	b8 00 00 00 00       	mov    $0x0,%eax
   10da0:	19 d8                	sbb    %ebx,%eax
   10da2:	0f 82 39 01 00 00    	jb     10ee1 <internal_float_mul+0x2c1>
   10da8:	85 d2                	test   %edx,%edx
   10daa:	0f 88 31 01 00 00    	js     10ee1 <internal_float_mul+0x2c1>
   10db0:	74 0d                	je     10dbf <internal_float_mul+0x19f>
   10db2:	89 c8                	mov    %ecx,%eax
   10db4:	83 f0 01             	xor    $0x1,%eax
   10db7:	a8 01                	test   $0x1,%al
   10db9:	0f 85 fd 01 00 00    	jne    10fbc <internal_float_mul+0x39c>
   10dbf:	85 d2                	test   %edx,%edx
   10dc1:	0f 44 d1             	cmove  %ecx,%edx
   10dc4:	8b 04 24             	mov    (%esp),%eax
   10dc7:	a8 04                	test   $0x4,%al
   10dc9:	0f 84 d7 01 00 00    	je     10fa6 <internal_float_mul+0x386>
   10dcf:	83 e0 07             	and    $0x7,%eax
   10dd2:	83 f8 04             	cmp    $0x4,%eax
   10dd5:	0f 84 bf 01 00 00    	je     10f9a <internal_float_mul+0x37a>
   10ddb:	8b 7c 24 04          	mov    0x4(%esp),%edi
   10ddf:	8b 34 24             	mov    (%esp),%esi
   10de2:	0f ac fe 03          	shrd   $0x3,%edi,%esi
   10de6:	c1 ef 03             	shr    $0x3,%edi
   10de9:	83 c6 01             	add    $0x1,%esi
   10dec:	83 d7 00             	adc    $0x0,%edi
   10def:	89 f0                	mov    %esi,%eax
   10df1:	35 00 00 00 01       	xor    $0x1000000,%eax
   10df6:	89 f9                	mov    %edi,%ecx
   10df8:	09 c1                	or     %eax,%ecx
   10dfa:	0f 84 13 02 00 00    	je     11013 <internal_float_mul+0x3f3>
   10e00:	81 e6 ff ff 7f 00    	and    $0x7fffff,%esi
   10e06:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10e0d:	8d 76 00             	lea    0x0(%esi),%esi
   10e10:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecx
   10e15:	32 4c 24 08          	xor    0x8(%esp),%cl
   10e19:	0f b6 d2             	movzbl %dl,%edx
   10e1c:	81 e6 ff ff 7f 00    	and    $0x7fffff,%esi
   10e22:	0f b6 c9             	movzbl %cl,%ecx
   10e25:	89 d0                	mov    %edx,%eax
   10e27:	c1 e1 1f             	shl    $0x1f,%ecx
   10e2a:	c1 e0 17             	shl    $0x17,%eax
   10e2d:	89 ca                	mov    %ecx,%edx
   10e2f:	09 c2                	or     %eax,%edx
   10e31:	89 d0                	mov    %edx,%eax
   10e33:	09 f0                	or     %esi,%eax
   10e35:	eb 1c                	jmp    10e53 <internal_float_mul+0x233>
   10e37:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10e3e:	66 90                	xchg   %ax,%ax
   10e40:	81 f9 00 00 c0 7f    	cmp    $0x7fc00000,%ecx
   10e46:	74 38                	je     10e80 <internal_float_mul+0x260>
   10e48:	89 f0                	mov    %esi,%eax
   10e4a:	84 c0                	test   %al,%al
   10e4c:	75 32                	jne    10e80 <internal_float_mul+0x260>
   10e4e:	b8 00 00 c0 ff       	mov    $0xffc00000,%eax
   10e53:	83 c4 1c             	add    $0x1c,%esp
   10e56:	5b                   	pop    %ebx
   10e57:	5e                   	pop    %esi
   10e58:	5f                   	pop    %edi
   10e59:	5d                   	pop    %ebp
   10e5a:	c3                   	ret    
   10e5b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10e5f:	90                   	nop
   10e60:	c1 e8 18             	shr    $0x18,%eax
   10e63:	c1 e9 18             	shr    $0x18,%ecx
   10e66:	83 c4 1c             	add    $0x1c,%esp
   10e69:	31 c1                	xor    %eax,%ecx
   10e6b:	5b                   	pop    %ebx
   10e6c:	0f be f1             	movsbl %cl,%esi
   10e6f:	89 f0                	mov    %esi,%eax
   10e71:	5e                   	pop    %esi
   10e72:	5f                   	pop    %edi
   10e73:	25 00 00 00 80       	and    $0x80000000,%eax
   10e78:	5d                   	pop    %ebp
   10e79:	c3                   	ret    
   10e7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   10e80:	83 c4 1c             	add    $0x1c,%esp
   10e83:	b8 00 00 c0 7f       	mov    $0x7fc00000,%eax
   10e88:	5b                   	pop    %ebx
   10e89:	5e                   	pop    %esi
   10e8a:	5f                   	pop    %edi
   10e8b:	5d                   	pop    %ebp
   10e8c:	c3                   	ret    
   10e8d:	8d 76 00             	lea    0x0(%esi),%esi
   10e90:	c1 e8 18             	shr    $0x18,%eax
   10e93:	c1 e9 18             	shr    $0x18,%ecx
   10e96:	31 c1                	xor    %eax,%ecx
   10e98:	0f be f1             	movsbl %cl,%esi
   10e9b:	89 f0                	mov    %esi,%eax
   10e9d:	25 00 00 00 80       	and    $0x80000000,%eax
   10ea2:	05 00 00 80 7f       	add    $0x7f800000,%eax
   10ea7:	eb aa                	jmp    10e53 <internal_float_mul+0x233>
   10ea9:	8b 44 24 14          	mov    0x14(%esp),%eax
   10ead:	31 ff                	xor    %edi,%edi
   10eaf:	0d 00 00 80 00       	or     $0x800000,%eax
   10eb4:	66 83 7c 24 12 00    	cmpw   $0x0,0x12(%esp)
   10eba:	89 c6                	mov    %eax,%esi
   10ebc:	0f 84 bd 00 00 00    	je     10f7f <internal_float_mul+0x35f>
   10ec2:	89 d8                	mov    %ebx,%eax
   10ec4:	0f b6 c9             	movzbl %cl,%ecx
   10ec7:	0d 00 00 80 00       	or     $0x800000,%eax
   10ecc:	f7 e6                	mul    %esi
   10ece:	89 04 24             	mov    %eax,(%esp)
   10ed1:	89 e8                	mov    %ebp,%eax
   10ed3:	0f b6 e8             	movzbl %al,%ebp
   10ed6:	89 54 24 04          	mov    %edx,0x4(%esp)
   10eda:	8d 94 29 6d ff ff ff 	lea    -0x93(%ecx,%ebp,1),%edx
   10ee1:	8b 34 24             	mov    (%esp),%esi
   10ee4:	8b 7c 24 04          	mov    0x4(%esp),%edi
   10ee8:	31 c0                	xor    %eax,%eax
   10eea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   10ef0:	89 f1                	mov    %esi,%ecx
   10ef2:	bd 01 00 00 00       	mov    $0x1,%ebp
   10ef7:	89 fb                	mov    %edi,%ebx
   10ef9:	0f ac f9 1a          	shrd   $0x1a,%edi,%ecx
   10efd:	c1 eb 1a             	shr    $0x1a,%ebx
   10f00:	39 cd                	cmp    %ecx,%ebp
   10f02:	89 c5                	mov    %eax,%ebp
   10f04:	19 dd                	sbb    %ebx,%ebp
   10f06:	73 38                	jae    10f40 <internal_float_mul+0x320>
   10f08:	81 fa fe 00 00 00    	cmp    $0xfe,%edx
   10f0e:	7e 14                	jle    10f24 <internal_float_mul+0x304>
   10f10:	31 f6                	xor    %esi,%esi
   10f12:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   10f17:	e9 f4 fe ff ff       	jmp    10e10 <internal_float_mul+0x1f0>
   10f1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10f20:	85 d2                	test   %edx,%edx
   10f22:	79 29                	jns    10f4d <internal_float_mul+0x32d>
   10f24:	89 f1                	mov    %esi,%ecx
   10f26:	89 f5                	mov    %esi,%ebp
   10f28:	89 fb                	mov    %edi,%ebx
   10f2a:	83 c2 01             	add    $0x1,%edx
   10f2d:	0f ac f9 01          	shrd   $0x1,%edi,%ecx
   10f31:	83 e5 01             	and    $0x1,%ebp
   10f34:	d1 eb                	shr    %ebx
   10f36:	09 cd                	or     %ecx,%ebp
   10f38:	89 df                	mov    %ebx,%edi
   10f3a:	89 ee                	mov    %ebp,%esi
   10f3c:	eb b2                	jmp    10ef0 <internal_float_mul+0x2d0>
   10f3e:	66 90                	xchg   %ax,%ax
   10f40:	b9 04 00 00 00       	mov    $0x4,%ecx
   10f45:	39 f1                	cmp    %esi,%ecx
   10f47:	89 c1                	mov    %eax,%ecx
   10f49:	19 f9                	sbb    %edi,%ecx
   10f4b:	72 d3                	jb     10f20 <internal_float_mul+0x300>
   10f4d:	89 fd                	mov    %edi,%ebp
   10f4f:	89 34 24             	mov    %esi,(%esp)
   10f52:	89 6c 24 04          	mov    %ebp,0x4(%esp)
   10f56:	81 fa fe 00 00 00    	cmp    $0xfe,%edx
   10f5c:	7f b2                	jg     10f10 <internal_float_mul+0x2f0>
   10f5e:	85 d2                	test   %edx,%edx
   10f60:	75 29                	jne    10f8b <internal_float_mul+0x36b>
   10f62:	89 f1                	mov    %esi,%ecx
   10f64:	89 f0                	mov    %esi,%eax
   10f66:	89 eb                	mov    %ebp,%ebx
   10f68:	0f ac e9 01          	shrd   $0x1,%ebp,%ecx
   10f6c:	83 e0 01             	and    $0x1,%eax
   10f6f:	d1 eb                	shr    %ebx
   10f71:	09 c8                	or     %ecx,%eax
   10f73:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   10f77:	89 04 24             	mov    %eax,(%esp)
   10f7a:	e9 45 fe ff ff       	jmp    10dc4 <internal_float_mul+0x1a4>
   10f7f:	8d 41 01             	lea    0x1(%ecx),%eax
   10f82:	88 44 24 10          	mov    %al,0x10(%esp)
   10f86:	e9 c7 fd ff ff       	jmp    10d52 <internal_float_mul+0x132>
   10f8b:	0f 89 33 fe ff ff    	jns    10dc4 <internal_float_mul+0x1a4>
   10f91:	31 f6                	xor    %esi,%esi
   10f93:	31 d2                	xor    %edx,%edx
   10f95:	e9 76 fe ff ff       	jmp    10e10 <internal_float_mul+0x1f0>
   10f9a:	8b 04 24             	mov    (%esp),%eax
   10f9d:	83 e0 08             	and    $0x8,%eax
   10fa0:	0f 85 35 fe ff ff    	jne    10ddb <internal_float_mul+0x1bb>
   10fa6:	8b 34 24             	mov    (%esp),%esi
   10fa9:	8b 7c 24 04          	mov    0x4(%esp),%edi
   10fad:	0f ac fe 03          	shrd   $0x3,%edi,%esi
   10fb1:	81 e6 ff ff 7f 00    	and    $0x7fffff,%esi
   10fb7:	e9 54 fe ff ff       	jmp    10e10 <internal_float_mul+0x1f0>
   10fbc:	8b 34 24             	mov    (%esp),%esi
   10fbf:	8b 7c 24 04          	mov    0x4(%esp),%edi
   10fc3:	89 d5                	mov    %edx,%ebp
   10fc5:	eb 08                	jmp    10fcf <internal_float_mul+0x3af>
   10fc7:	85 ed                	test   %ebp,%ebp
   10fc9:	74 5e                	je     11029 <internal_float_mul+0x409>
   10fcb:	89 ce                	mov    %ecx,%esi
   10fcd:	89 df                	mov    %ebx,%edi
   10fcf:	89 f1                	mov    %esi,%ecx
   10fd1:	89 fb                	mov    %edi,%ebx
   10fd3:	83 ed 01             	sub    $0x1,%ebp
   10fd6:	0f a4 f3 01          	shld   $0x1,%esi,%ebx
   10fda:	01 f1                	add    %esi,%ecx
   10fdc:	89 da                	mov    %ebx,%edx
   10fde:	89 c8                	mov    %ecx,%eax
   10fe0:	0f ac d0 1a          	shrd   $0x1a,%edx,%eax
   10fe4:	c1 ea 1a             	shr    $0x1a,%edx
   10fe7:	89 54 24 04          	mov    %edx,0x4(%esp)
   10feb:	8b 54 24 04          	mov    0x4(%esp),%edx
   10fef:	89 04 24             	mov    %eax,(%esp)
   10ff2:	09 c2                	or     %eax,%edx
   10ff4:	74 d1                	je     10fc7 <internal_float_mul+0x3a7>
   10ff6:	89 34 24             	mov    %esi,(%esp)
   10ff9:	89 ea                	mov    %ebp,%edx
   10ffb:	89 7c 24 04          	mov    %edi,0x4(%esp)
   10fff:	85 ed                	test   %ebp,%ebp
   11001:	0f 84 bd fd ff ff    	je     10dc4 <internal_float_mul+0x1a4>
   11007:	89 0c 24             	mov    %ecx,(%esp)
   1100a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1100e:	e9 b1 fd ff ff       	jmp    10dc4 <internal_float_mul+0x1a4>
   11013:	81 fa fe 00 00 00    	cmp    $0xfe,%edx
   11019:	0f 8f f1 fe ff ff    	jg     10f10 <internal_float_mul+0x2f0>
   1101f:	83 c2 01             	add    $0x1,%edx
   11022:	31 f6                	xor    %esi,%esi
   11024:	e9 e7 fd ff ff       	jmp    10e10 <internal_float_mul+0x1f0>
   11029:	89 34 24             	mov    %esi,(%esp)
   1102c:	89 ea                	mov    %ebp,%edx
   1102e:	89 7c 24 04          	mov    %edi,0x4(%esp)
   11032:	e9 8d fd ff ff       	jmp    10dc4 <internal_float_mul+0x1a4>
   11037:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1103e:	66 90                	xchg   %ax,%ax

00011040 <internal_float_div>:
   11040:	55                   	push   %ebp
   11041:	31 d2                	xor    %edx,%edx
   11043:	57                   	push   %edi
   11044:	56                   	push   %esi
   11045:	53                   	push   %ebx
   11046:	e8 35 34 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   1104b:	81 c3 b5 df 03 00    	add    $0x3dfb5,%ebx
   11051:	83 ec 2c             	sub    $0x2c,%esp
   11054:	8b 7c 24 40          	mov    0x40(%esp),%edi
   11058:	8b 74 24 44          	mov    0x44(%esp),%esi
   1105c:	8d 83 a0 05 00 00    	lea    0x5a0(%ebx),%eax
   11062:	eb 0f                	jmp    11073 <internal_float_div+0x33>
   11064:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11068:	83 c2 01             	add    $0x1,%edx
   1106b:	83 c0 0c             	add    $0xc,%eax
   1106e:	83 fa 0c             	cmp    $0xc,%edx
   11071:	74 1d                	je     11090 <internal_float_div+0x50>
   11073:	39 30                	cmp    %esi,(%eax)
   11075:	75 f1                	jne    11068 <internal_float_div+0x28>
   11077:	39 78 04             	cmp    %edi,0x4(%eax)
   1107a:	75 ec                	jne    11068 <internal_float_div+0x28>
   1107c:	8d 04 52             	lea    (%edx,%edx,2),%eax
   1107f:	8b 84 83 a8 05 00 00 	mov    0x5a8(%ebx,%eax,4),%eax
   11086:	83 c4 2c             	add    $0x2c,%esp
   11089:	5b                   	pop    %ebx
   1108a:	5e                   	pop    %esi
   1108b:	5f                   	pop    %edi
   1108c:	5d                   	pop    %ebp
   1108d:	c3                   	ret    
   1108e:	66 90                	xchg   %ax,%ax
   11090:	89 f0                	mov    %esi,%eax
   11092:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
   11097:	81 fe 00 00 c0 7f    	cmp    $0x7fc00000,%esi
   1109d:	0f 94 c1             	sete   %cl
   110a0:	3d 00 00 c0 7f       	cmp    $0x7fc00000,%eax
   110a5:	0f 84 95 01 00 00    	je     11240 <internal_float_div+0x200>
   110ab:	89 fa                	mov    %edi,%edx
   110ad:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
   110b3:	81 fa 00 00 c0 7f    	cmp    $0x7fc00000,%edx
   110b9:	0f 84 81 01 00 00    	je     11240 <internal_float_div+0x200>
   110bf:	3d 00 00 80 7f       	cmp    $0x7f800000,%eax
   110c4:	0f 84 96 01 00 00    	je     11260 <internal_float_div+0x220>
   110ca:	85 d2                	test   %edx,%edx
   110cc:	0f 84 8e 01 00 00    	je     11260 <internal_float_div+0x220>
   110d2:	85 c0                	test   %eax,%eax
   110d4:	0f 84 47 02 00 00    	je     11321 <internal_float_div+0x2e1>
   110da:	81 fa 00 00 80 7f    	cmp    $0x7f800000,%edx
   110e0:	0f 84 5f 02 00 00    	je     11345 <internal_float_div+0x305>
   110e6:	89 f2                	mov    %esi,%edx
   110e8:	89 f8                	mov    %edi,%eax
   110ea:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   110f1:	00 
   110f2:	c1 ea 1f             	shr    $0x1f,%edx
   110f5:	c1 e8 1f             	shr    $0x1f,%eax
   110f8:	89 d1                	mov    %edx,%ecx
   110fa:	89 f2                	mov    %esi,%edx
   110fc:	31 c1                	xor    %eax,%ecx
   110fe:	c1 ea 10             	shr    $0x10,%edx
   11101:	89 f0                	mov    %esi,%eax
   11103:	88 4c 24 13          	mov    %cl,0x13(%esp)
   11107:	89 d1                	mov    %edx,%ecx
   11109:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   1110e:	66 81 e1 80 7f       	and    $0x7f80,%cx
   11113:	89 44 24 08          	mov    %eax,0x8(%esp)
   11117:	66 89 4c 24 14       	mov    %cx,0x14(%esp)
   1111c:	74 11                	je     1112f <internal_float_div+0xef>
   1111e:	0d 00 00 80 00       	or     $0x800000,%eax
   11123:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1112a:	00 
   1112b:	89 44 24 08          	mov    %eax,0x8(%esp)
   1112f:	89 f9                	mov    %edi,%ecx
   11131:	89 fd                	mov    %edi,%ebp
   11133:	31 d2                	xor    %edx,%edx
   11135:	c1 e9 10             	shr    $0x10,%ecx
   11138:	81 e5 ff ff 7f 00    	and    $0x7fffff,%ebp
   1113e:	66 81 e1 80 7f       	and    $0x7f80,%cx
   11143:	89 e8                	mov    %ebp,%eax
   11145:	66 89 4c 24 16       	mov    %cx,0x16(%esp)
   1114a:	0f 85 e6 01 00 00    	jne    11336 <internal_float_div+0x2f6>
   11150:	89 44 24 18          	mov    %eax,0x18(%esp)
   11154:	89 f9                	mov    %edi,%ecx
   11156:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   1115a:	31 ed                	xor    %ebp,%ebp
   1115c:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   11160:	89 f2                	mov    %esi,%edx
   11162:	8b 74 24 08          	mov    0x8(%esp),%esi
   11166:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1116d:	8d 76 00             	lea    0x0(%esi),%esi
   11170:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   11174:	83 c5 01             	add    $0x1,%ebp
   11177:	01 f6                	add    %esi,%esi
   11179:	85 ff                	test   %edi,%edi
   1117b:	79 f3                	jns    11170 <internal_float_div+0x130>
   1117d:	8b 44 24 18          	mov    0x18(%esp),%eax
   11181:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   11185:	89 cf                	mov    %ecx,%edi
   11187:	89 74 24 08          	mov    %esi,0x8(%esp)
   1118b:	89 d6                	mov    %edx,%esi
   1118d:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   11191:	89 c1                	mov    %eax,%ecx
   11193:	83 e1 01             	and    $0x1,%ecx
   11196:	75 18                	jne    111b0 <internal_float_div+0x170>
   11198:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1119f:	90                   	nop
   111a0:	0f ac d0 01          	shrd   $0x1,%edx,%eax
   111a4:	83 c5 01             	add    $0x1,%ebp
   111a7:	d1 ea                	shr    %edx
   111a9:	89 c1                	mov    %eax,%ecx
   111ab:	83 e1 01             	and    $0x1,%ecx
   111ae:	74 f0                	je     111a0 <internal_float_div+0x160>
   111b0:	52                   	push   %edx
   111b1:	50                   	push   %eax
   111b2:	ff 74 24 14          	pushl  0x14(%esp)
   111b6:	ff 74 24 14          	pushl  0x14(%esp)
   111ba:	e8 71 22 02 00       	call   33430 <__udivdi3>
   111bf:	83 c4 10             	add    $0x10,%esp
   111c2:	89 f1                	mov    %esi,%ecx
   111c4:	89 fb                	mov    %edi,%ebx
   111c6:	c1 e9 17             	shr    $0x17,%ecx
   111c9:	66 83 7c 24 14 01    	cmpw   $0x1,0x14(%esp)
   111cf:	80 d1 00             	adc    $0x0,%cl
   111d2:	c1 eb 17             	shr    $0x17,%ebx
   111d5:	66 83 7c 24 16 01    	cmpw   $0x1,0x16(%esp)
   111db:	80 d3 00             	adc    $0x0,%bl
   111de:	0f b6 c9             	movzbl %cl,%ecx
   111e1:	0f b6 db             	movzbl %bl,%ebx
   111e4:	29 d9                	sub    %ebx,%ecx
   111e6:	31 db                	xor    %ebx,%ebx
   111e8:	29 e9                	sub    %ebp,%ecx
   111ea:	81 c1 99 00 00 00    	add    $0x99,%ecx
   111f0:	89 c6                	mov    %eax,%esi
   111f2:	bd 01 00 00 00       	mov    $0x1,%ebp
   111f7:	89 d7                	mov    %edx,%edi
   111f9:	0f ac d6 1a          	shrd   $0x1a,%edx,%esi
   111fd:	c1 ef 1a             	shr    $0x1a,%edi
   11200:	39 f5                	cmp    %esi,%ebp
   11202:	89 dd                	mov    %ebx,%ebp
   11204:	19 fd                	sbb    %edi,%ebp
   11206:	0f 83 ac 00 00 00    	jae    112b8 <internal_float_div+0x278>
   1120c:	81 f9 fe 00 00 00    	cmp    $0xfe,%ecx
   11212:	0f 8e 7c 00 00 00    	jle    11294 <internal_float_div+0x254>
   11218:	31 c0                	xor    %eax,%eax
   1121a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1121f:	0f b6 54 24 13       	movzbl 0x13(%esp),%edx
   11224:	0f b6 c9             	movzbl %cl,%ecx
   11227:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   1122c:	c1 e1 17             	shl    $0x17,%ecx
   1122f:	c1 e2 1f             	shl    $0x1f,%edx
   11232:	09 ca                	or     %ecx,%edx
   11234:	09 d0                	or     %edx,%eax
   11236:	eb 19                	jmp    11251 <internal_float_div+0x211>
   11238:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1123f:	90                   	nop
   11240:	81 ff 00 00 c0 7f    	cmp    $0x7fc00000,%edi
   11246:	74 38                	je     11280 <internal_float_div+0x240>
   11248:	b8 00 00 c0 ff       	mov    $0xffc00000,%eax
   1124d:	84 c9                	test   %cl,%cl
   1124f:	75 2f                	jne    11280 <internal_float_div+0x240>
   11251:	83 c4 2c             	add    $0x2c,%esp
   11254:	5b                   	pop    %ebx
   11255:	5e                   	pop    %esi
   11256:	5f                   	pop    %edi
   11257:	5d                   	pop    %ebp
   11258:	c3                   	ret    
   11259:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11260:	89 f0                	mov    %esi,%eax
   11262:	c1 ef 18             	shr    $0x18,%edi
   11265:	83 c4 2c             	add    $0x2c,%esp
   11268:	c1 e8 18             	shr    $0x18,%eax
   1126b:	5b                   	pop    %ebx
   1126c:	5e                   	pop    %esi
   1126d:	31 f8                	xor    %edi,%eax
   1126f:	5f                   	pop    %edi
   11270:	5d                   	pop    %ebp
   11271:	0f be c0             	movsbl %al,%eax
   11274:	25 00 00 00 80       	and    $0x80000000,%eax
   11279:	05 00 00 80 7f       	add    $0x7f800000,%eax
   1127e:	c3                   	ret    
   1127f:	90                   	nop
   11280:	83 c4 2c             	add    $0x2c,%esp
   11283:	b8 00 00 c0 7f       	mov    $0x7fc00000,%eax
   11288:	5b                   	pop    %ebx
   11289:	5e                   	pop    %esi
   1128a:	5f                   	pop    %edi
   1128b:	5d                   	pop    %ebp
   1128c:	c3                   	ret    
   1128d:	8d 76 00             	lea    0x0(%esi),%esi
   11290:	85 c9                	test   %ecx,%ecx
   11292:	79 31                	jns    112c5 <internal_float_div+0x285>
   11294:	89 c6                	mov    %eax,%esi
   11296:	89 c5                	mov    %eax,%ebp
   11298:	89 d7                	mov    %edx,%edi
   1129a:	83 c1 01             	add    $0x1,%ecx
   1129d:	0f ac d6 01          	shrd   $0x1,%edx,%esi
   112a1:	83 e5 01             	and    $0x1,%ebp
   112a4:	d1 ef                	shr    %edi
   112a6:	09 f5                	or     %esi,%ebp
   112a8:	89 fa                	mov    %edi,%edx
   112aa:	89 e8                	mov    %ebp,%eax
   112ac:	e9 3f ff ff ff       	jmp    111f0 <internal_float_div+0x1b0>
   112b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   112b8:	be 04 00 00 00       	mov    $0x4,%esi
   112bd:	89 df                	mov    %ebx,%edi
   112bf:	39 c6                	cmp    %eax,%esi
   112c1:	19 d7                	sbb    %edx,%edi
   112c3:	72 cb                	jb     11290 <internal_float_div+0x250>
   112c5:	81 f9 fe 00 00 00    	cmp    $0xfe,%ecx
   112cb:	0f 8f 47 ff ff ff    	jg     11218 <internal_float_div+0x1d8>
   112d1:	85 c9                	test   %ecx,%ecx
   112d3:	0f 85 83 00 00 00    	jne    1135c <internal_float_div+0x31c>
   112d9:	89 c6                	mov    %eax,%esi
   112db:	89 c3                	mov    %eax,%ebx
   112dd:	89 d7                	mov    %edx,%edi
   112df:	0f ac d6 01          	shrd   $0x1,%edx,%esi
   112e3:	83 e3 01             	and    $0x1,%ebx
   112e6:	d1 ef                	shr    %edi
   112e8:	09 f3                	or     %esi,%ebx
   112ea:	89 fa                	mov    %edi,%edx
   112ec:	89 d8                	mov    %ebx,%eax
   112ee:	89 c3                	mov    %eax,%ebx
   112f0:	a8 04                	test   $0x4,%al
   112f2:	74 7a                	je     1136e <internal_float_div+0x32e>
   112f4:	83 e3 07             	and    $0x7,%ebx
   112f7:	83 fb 04             	cmp    $0x4,%ebx
   112fa:	74 6b                	je     11367 <internal_float_div+0x327>
   112fc:	0f ac d0 03          	shrd   $0x3,%edx,%eax
   11300:	c1 ea 03             	shr    $0x3,%edx
   11303:	83 c0 01             	add    $0x1,%eax
   11306:	83 d2 00             	adc    $0x0,%edx
   11309:	89 c3                	mov    %eax,%ebx
   1130b:	81 f3 00 00 00 01    	xor    $0x1000000,%ebx
   11311:	89 d6                	mov    %edx,%esi
   11313:	09 de                	or     %ebx,%esi
   11315:	74 65                	je     1137c <internal_float_div+0x33c>
   11317:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   1131c:	e9 fe fe ff ff       	jmp    1121f <internal_float_div+0x1df>
   11321:	89 f0                	mov    %esi,%eax
   11323:	c1 ef 1f             	shr    $0x1f,%edi
   11326:	c1 e8 1f             	shr    $0x1f,%eax
   11329:	31 f8                	xor    %edi,%eax
   1132b:	0f b6 c0             	movzbl %al,%eax
   1132e:	c1 e0 1f             	shl    $0x1f,%eax
   11331:	e9 1b ff ff ff       	jmp    11251 <internal_float_div+0x211>
   11336:	81 cd 00 00 80 00    	or     $0x800000,%ebp
   1133c:	31 d2                	xor    %edx,%edx
   1133e:	89 e8                	mov    %ebp,%eax
   11340:	e9 0b fe ff ff       	jmp    11150 <internal_float_div+0x110>
   11345:	89 f8                	mov    %edi,%eax
   11347:	c1 ee 18             	shr    $0x18,%esi
   1134a:	c1 e8 18             	shr    $0x18,%eax
   1134d:	31 f0                	xor    %esi,%eax
   1134f:	0f be c0             	movsbl %al,%eax
   11352:	25 00 00 00 80       	and    $0x80000000,%eax
   11357:	e9 f5 fe ff ff       	jmp    11251 <internal_float_div+0x211>
   1135c:	79 90                	jns    112ee <internal_float_div+0x2ae>
   1135e:	31 c0                	xor    %eax,%eax
   11360:	31 c9                	xor    %ecx,%ecx
   11362:	e9 b8 fe ff ff       	jmp    1121f <internal_float_div+0x1df>
   11367:	89 c3                	mov    %eax,%ebx
   11369:	83 e3 08             	and    $0x8,%ebx
   1136c:	75 8e                	jne    112fc <internal_float_div+0x2bc>
   1136e:	0f ac d0 03          	shrd   $0x3,%edx,%eax
   11372:	25 ff ff 7f 00       	and    $0x7fffff,%eax
   11377:	e9 a3 fe ff ff       	jmp    1121f <internal_float_div+0x1df>
   1137c:	83 c1 01             	add    $0x1,%ecx
   1137f:	31 c0                	xor    %eax,%eax
   11381:	e9 99 fe ff ff       	jmp    1121f <internal_float_div+0x1df>
   11386:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1138d:	8d 76 00             	lea    0x0(%esi),%esi

00011390 <fpu_load>:
   11390:	e8 42 4f ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11395:	05 6b dc 03 00       	add    $0x3dc6b,%eax
   1139a:	53                   	push   %ebx
   1139b:	8d 90 20 32 05 00    	lea    0x53220(%eax),%edx
   113a1:	0f b6 42 21          	movzbl 0x21(%edx),%eax
   113a5:	a8 38                	test   $0x38,%al
   113a7:	74 27                	je     113d0 <fpu_load+0x40>
   113a9:	c0 e8 03             	shr    $0x3,%al
   113ac:	83 c0 07             	add    $0x7,%eax
   113af:	83 e0 07             	and    $0x7,%eax
   113b2:	0f b6 d8             	movzbl %al,%ebx
   113b5:	0f b6 4a 21          	movzbl 0x21(%edx),%ecx
   113b9:	83 e0 07             	and    $0x7,%eax
   113bc:	c1 e0 03             	shl    $0x3,%eax
   113bf:	83 e1 c7             	and    $0xffffffc7,%ecx
   113c2:	09 c8                	or     %ecx,%eax
   113c4:	88 42 21             	mov    %al,0x21(%edx)
   113c7:	8b 44 24 08          	mov    0x8(%esp),%eax
   113cb:	89 04 9a             	mov    %eax,(%edx,%ebx,4)
   113ce:	5b                   	pop    %ebx
   113cf:	c3                   	ret    
   113d0:	bb 07 00 00 00       	mov    $0x7,%ebx
   113d5:	b8 07 00 00 00       	mov    $0x7,%eax
   113da:	eb d9                	jmp    113b5 <fpu_load+0x25>
   113dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000113e0 <fpu_store>:
   113e0:	e8 f2 4e ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   113e5:	05 1b dc 03 00       	add    $0x3dc1b,%eax
   113ea:	53                   	push   %ebx
   113eb:	8d 98 20 32 05 00    	lea    0x53220(%eax),%ebx
   113f1:	0f b6 4b 21          	movzbl 0x21(%ebx),%ecx
   113f5:	89 ca                	mov    %ecx,%edx
   113f7:	83 e1 c7             	and    $0xffffffc7,%ecx
   113fa:	c0 ea 03             	shr    $0x3,%dl
   113fd:	83 e2 07             	and    $0x7,%edx
   11400:	8b 04 93             	mov    (%ebx,%edx,4),%eax
   11403:	8d 14 d5 08 00 00 00 	lea    0x8(,%edx,8),%edx
   1140a:	83 e2 38             	and    $0x38,%edx
   1140d:	09 ca                	or     %ecx,%edx
   1140f:	88 53 21             	mov    %dl,0x21(%ebx)
   11412:	5b                   	pop    %ebx
   11413:	c3                   	ret    
   11414:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1141b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1141f:	90                   	nop

00011420 <fpu_peek>:
   11420:	e8 b2 4e ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11425:	05 db db 03 00       	add    $0x3dbdb,%eax
   1142a:	8d 90 20 32 05 00    	lea    0x53220(%eax),%edx
   11430:	0f b6 42 21          	movzbl 0x21(%edx),%eax
   11434:	c0 e8 03             	shr    $0x3,%al
   11437:	83 e0 07             	and    $0x7,%eax
   1143a:	8b 04 82             	mov    (%edx,%eax,4),%eax
   1143d:	c3                   	ret    
   1143e:	66 90                	xchg   %ax,%ax

00011440 <fpu_add>:
   11440:	e8 92 4e ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11445:	05 bb db 03 00       	add    $0x3dbbb,%eax
   1144a:	56                   	push   %esi
   1144b:	53                   	push   %ebx
   1144c:	83 ec 04             	sub    $0x4,%esp
   1144f:	8d b0 20 32 05 00    	lea    0x53220(%eax),%esi
   11455:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
   11459:	c0 eb 03             	shr    $0x3,%bl
   1145c:	83 e3 07             	and    $0x7,%ebx
   1145f:	ff 34 9e             	pushl  (%esi,%ebx,4)
   11462:	ff 74 24 14          	pushl  0x14(%esp)
   11466:	e8 05 f4 ff ff       	call   10870 <internal_float_add>
   1146b:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
   1146e:	83 c4 0c             	add    $0xc,%esp
   11471:	5b                   	pop    %ebx
   11472:	5e                   	pop    %esi
   11473:	c3                   	ret    
   11474:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1147b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1147f:	90                   	nop

00011480 <fpu_add_idx>:
   11480:	e8 52 4e ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11485:	05 7b db 03 00       	add    $0x3db7b,%eax
   1148a:	56                   	push   %esi
   1148b:	53                   	push   %ebx
   1148c:	83 ec 04             	sub    $0x4,%esp
   1148f:	8d b0 20 32 05 00    	lea    0x53220(%eax),%esi
   11495:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
   11499:	c0 eb 03             	shr    $0x3,%bl
   1149c:	83 e3 07             	and    $0x7,%ebx
   1149f:	ff 34 9e             	pushl  (%esi,%ebx,4)
   114a2:	8b 44 24 14          	mov    0x14(%esp),%eax
   114a6:	01 d8                	add    %ebx,%eax
   114a8:	83 e0 07             	and    $0x7,%eax
   114ab:	ff 34 86             	pushl  (%esi,%eax,4)
   114ae:	e8 bd f3 ff ff       	call   10870 <internal_float_add>
   114b3:	03 5c 24 1c          	add    0x1c(%esp),%ebx
   114b7:	83 e3 07             	and    $0x7,%ebx
   114ba:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
   114bd:	83 c4 0c             	add    $0xc,%esp
   114c0:	5b                   	pop    %ebx
   114c1:	5e                   	pop    %esi
   114c2:	c3                   	ret    
   114c3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   114ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000114d0 <fpu_sub>:
   114d0:	e8 02 4e ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   114d5:	05 2b db 03 00       	add    $0x3db2b,%eax
   114da:	56                   	push   %esi
   114db:	53                   	push   %ebx
   114dc:	83 ec 04             	sub    $0x4,%esp
   114df:	8d b0 20 32 05 00    	lea    0x53220(%eax),%esi
   114e5:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
   114e9:	c0 eb 03             	shr    $0x3,%bl
   114ec:	83 e3 07             	and    $0x7,%ebx
   114ef:	ff 34 9e             	pushl  (%esi,%ebx,4)
   114f2:	ff 74 24 14          	pushl  0x14(%esp)
   114f6:	e8 95 f6 ff ff       	call   10b90 <internal_float_sub>
   114fb:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
   114fe:	83 c4 0c             	add    $0xc,%esp
   11501:	5b                   	pop    %ebx
   11502:	5e                   	pop    %esi
   11503:	c3                   	ret    
   11504:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1150b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1150f:	90                   	nop

00011510 <fpu_mul>:
   11510:	e8 c2 4d ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11515:	05 eb da 03 00       	add    $0x3daeb,%eax
   1151a:	56                   	push   %esi
   1151b:	53                   	push   %ebx
   1151c:	83 ec 04             	sub    $0x4,%esp
   1151f:	8d b0 20 32 05 00    	lea    0x53220(%eax),%esi
   11525:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
   11529:	c0 eb 03             	shr    $0x3,%bl
   1152c:	83 e3 07             	and    $0x7,%ebx
   1152f:	ff 34 9e             	pushl  (%esi,%ebx,4)
   11532:	ff 74 24 14          	pushl  0x14(%esp)
   11536:	e8 e5 f6 ff ff       	call   10c20 <internal_float_mul>
   1153b:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
   1153e:	83 c4 0c             	add    $0xc,%esp
   11541:	5b                   	pop    %ebx
   11542:	5e                   	pop    %esi
   11543:	c3                   	ret    
   11544:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1154b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1154f:	90                   	nop

00011550 <fpu_mul_idx>:
   11550:	e8 82 4d ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11555:	05 ab da 03 00       	add    $0x3daab,%eax
   1155a:	56                   	push   %esi
   1155b:	53                   	push   %ebx
   1155c:	83 ec 04             	sub    $0x4,%esp
   1155f:	8d b0 20 32 05 00    	lea    0x53220(%eax),%esi
   11565:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
   11569:	c0 eb 03             	shr    $0x3,%bl
   1156c:	83 e3 07             	and    $0x7,%ebx
   1156f:	ff 34 9e             	pushl  (%esi,%ebx,4)
   11572:	8b 44 24 14          	mov    0x14(%esp),%eax
   11576:	01 d8                	add    %ebx,%eax
   11578:	83 e0 07             	and    $0x7,%eax
   1157b:	ff 34 86             	pushl  (%esi,%eax,4)
   1157e:	e8 9d f6 ff ff       	call   10c20 <internal_float_mul>
   11583:	03 5c 24 1c          	add    0x1c(%esp),%ebx
   11587:	83 e3 07             	and    $0x7,%ebx
   1158a:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
   1158d:	83 c4 0c             	add    $0xc,%esp
   11590:	5b                   	pop    %ebx
   11591:	5e                   	pop    %esi
   11592:	c3                   	ret    
   11593:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1159a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000115a0 <fpu_div>:
   115a0:	e8 32 4d ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   115a5:	05 5b da 03 00       	add    $0x3da5b,%eax
   115aa:	56                   	push   %esi
   115ab:	53                   	push   %ebx
   115ac:	83 ec 0c             	sub    $0xc,%esp
   115af:	8d b0 20 32 05 00    	lea    0x53220(%eax),%esi
   115b5:	0f b6 5e 21          	movzbl 0x21(%esi),%ebx
   115b9:	c0 eb 03             	shr    $0x3,%bl
   115bc:	83 e3 07             	and    $0x7,%ebx
   115bf:	ff 34 9e             	pushl  (%esi,%ebx,4)
   115c2:	ff 74 24 1c          	pushl  0x1c(%esp)
   115c6:	e8 75 fa ff ff       	call   11040 <internal_float_div>
   115cb:	89 04 9e             	mov    %eax,(%esi,%ebx,4)
   115ce:	83 c4 14             	add    $0x14,%esp
   115d1:	5b                   	pop    %ebx
   115d2:	5e                   	pop    %esi
   115d3:	c3                   	ret    
   115d4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   115db:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   115df:	90                   	nop

000115e0 <fpu_xch>:
   115e0:	e8 f2 4c ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   115e5:	05 1b da 03 00       	add    $0x3da1b,%eax
   115ea:	56                   	push   %esi
   115eb:	53                   	push   %ebx
   115ec:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
   115f0:	8d 90 20 32 05 00    	lea    0x53220(%eax),%edx
   115f6:	0f b6 42 21          	movzbl 0x21(%edx),%eax
   115fa:	c0 e8 03             	shr    $0x3,%al
   115fd:	83 e0 07             	and    $0x7,%eax
   11600:	01 c1                	add    %eax,%ecx
   11602:	8b 1c 82             	mov    (%edx,%eax,4),%ebx
   11605:	83 e1 07             	and    $0x7,%ecx
   11608:	8b 34 8a             	mov    (%edx,%ecx,4),%esi
   1160b:	89 34 82             	mov    %esi,(%edx,%eax,4)
   1160e:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
   11611:	5b                   	pop    %ebx
   11612:	5e                   	pop    %esi
   11613:	c3                   	ret    
   11614:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1161b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1161f:	90                   	nop

00011620 <fpu_copy>:
   11620:	e8 b2 4c ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11625:	05 db d9 03 00       	add    $0x3d9db,%eax
   1162a:	53                   	push   %ebx
   1162b:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   1162f:	8d 90 20 32 05 00    	lea    0x53220(%eax),%edx
   11635:	0f b6 42 21          	movzbl 0x21(%edx),%eax
   11639:	c0 e8 03             	shr    $0x3,%al
   1163c:	83 e0 07             	and    $0x7,%eax
   1163f:	01 c1                	add    %eax,%ecx
   11641:	8b 1c 82             	mov    (%edx,%eax,4),%ebx
   11644:	89 c8                	mov    %ecx,%eax
   11646:	83 e0 07             	and    $0x7,%eax
   11649:	89 1c 82             	mov    %ebx,(%edx,%eax,4)
   1164c:	5b                   	pop    %ebx
   1164d:	c3                   	ret    
   1164e:	66 90                	xchg   %ax,%ax

00011650 <fpu_cmp>:
   11650:	e8 82 4c ff ff       	call   62d7 <__x86.get_pc_thunk.ax>
   11655:	05 ab d9 03 00       	add    $0x3d9ab,%eax
   1165a:	53                   	push   %ebx
   1165b:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   1165f:	8d 90 20 32 05 00    	lea    0x53220(%eax),%edx
   11665:	0f b6 42 21          	movzbl 0x21(%edx),%eax
   11669:	89 c1                	mov    %eax,%ecx
   1166b:	83 e0 ba             	and    $0xffffffba,%eax
   1166e:	c0 e9 03             	shr    $0x3,%cl
   11671:	83 e1 07             	and    $0x7,%ecx
   11674:	01 cb                	add    %ecx,%ebx
   11676:	d9 04 8a             	flds   (%edx,%ecx,4)
   11679:	83 e3 07             	and    $0x7,%ebx
   1167c:	d9 04 9a             	flds   (%edx,%ebx,4)
   1167f:	d9 c9                	fxch   %st(1)
   11681:	db f1                	fcomi  %st(1),%st
   11683:	77 1b                	ja     116a0 <fpu_cmp+0x50>
   11685:	d9 c9                	fxch   %st(1)
   11687:	df f1                	fcomip %st(1),%st
   11689:	dd d8                	fstp   %st(0)
   1168b:	76 0b                	jbe    11698 <fpu_cmp+0x48>
   1168d:	83 c8 01             	or     $0x1,%eax
   11690:	88 42 21             	mov    %al,0x21(%edx)
   11693:	5b                   	pop    %ebx
   11694:	c3                   	ret    
   11695:	8d 76 00             	lea    0x0(%esi),%esi
   11698:	83 c8 40             	or     $0x40,%eax
   1169b:	eb 07                	jmp    116a4 <fpu_cmp+0x54>
   1169d:	8d 76 00             	lea    0x0(%esi),%esi
   116a0:	dd d8                	fstp   %st(0)
   116a2:	dd d8                	fstp   %st(0)
   116a4:	88 42 21             	mov    %al,0x21(%edx)
   116a7:	5b                   	pop    %ebx
   116a8:	c3                   	ret    
   116a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000116b0 <fpu_cmpi>:
   116b0:	53                   	push   %ebx
   116b1:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   116b5:	e8 c6 2d ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   116ba:	81 c3 46 d9 03 00    	add    $0x3d946,%ebx
   116c0:	8d 93 20 32 05 00    	lea    0x53220(%ebx),%edx
   116c6:	0f b6 42 21          	movzbl 0x21(%edx),%eax
   116ca:	c0 e8 03             	shr    $0x3,%al
   116cd:	83 e0 07             	and    $0x7,%eax
   116d0:	01 c1                	add    %eax,%ecx
   116d2:	d9 04 82             	flds   (%edx,%eax,4)
   116d5:	89 c8                	mov    %ecx,%eax
   116d7:	83 e0 07             	and    $0x7,%eax
   116da:	d9 04 82             	flds   (%edx,%eax,4)
   116dd:	d9 c9                	fxch   %st(1)
   116df:	db f1                	fcomi  %st(1),%st
   116e1:	76 15                	jbe    116f8 <fpu_cmpi+0x48>
   116e3:	dd d8                	fstp   %st(0)
   116e5:	dd d8                	fstp   %st(0)
   116e7:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   116ed:	80 60 24 ba          	andb   $0xba,0x24(%eax)
   116f1:	5b                   	pop    %ebx
   116f2:	c3                   	ret    
   116f3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   116f7:	90                   	nop
   116f8:	d9 c9                	fxch   %st(1)
   116fa:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   11700:	df f1                	fcomip %st(1),%st
   11702:	dd d8                	fstp   %st(0)
   11704:	0f b6 42 24          	movzbl 0x24(%edx),%eax
   11708:	76 0e                	jbe    11718 <fpu_cmpi+0x68>
   1170a:	83 e0 ba             	and    $0xffffffba,%eax
   1170d:	83 c8 01             	or     $0x1,%eax
   11710:	88 42 24             	mov    %al,0x24(%edx)
   11713:	5b                   	pop    %ebx
   11714:	c3                   	ret    
   11715:	8d 76 00             	lea    0x0(%esi),%esi
   11718:	83 e0 ba             	and    $0xffffffba,%eax
   1171b:	83 c8 40             	or     $0x40,%eax
   1171e:	88 42 24             	mov    %al,0x24(%edx)
   11721:	5b                   	pop    %ebx
   11722:	c3                   	ret    
   11723:	66 90                	xchg   %ax,%ax
   11725:	66 90                	xchg   %ax,%ax
   11727:	66 90                	xchg   %ax,%ax
   11729:	66 90                	xchg   %ax,%ax
   1172b:	66 90                	xchg   %ax,%ax
   1172d:	66 90                	xchg   %ax,%ax
   1172f:	90                   	nop

00011730 <init_cpu>:
   11730:	53                   	push   %ebx
   11731:	31 c0                	xor    %eax,%eax
   11733:	e8 48 2d ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11738:	81 c3 c8 d8 03 00    	add    $0x3d8c8,%ebx
   1173e:	83 ec 08             	sub    $0x8,%esp
   11741:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   11747:	8d 8b 20 32 05 00    	lea    0x53220(%ebx),%ecx
   1174d:	c7 42 24 00 00 00 00 	movl   $0x0,0x24(%edx)
   11754:	66 89 41 20          	mov    %ax,0x20(%ecx)
   11758:	31 c0                	xor    %eax,%eax
   1175a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11760:	c7 04 82 00 00 00 00 	movl   $0x0,(%edx,%eax,4)
   11767:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
   1176e:	83 c0 01             	add    $0x1,%eax
   11771:	83 f8 08             	cmp    $0x8,%eax
   11774:	75 ea                	jne    11760 <init_cpu+0x30>
   11776:	8b 44 24 10          	mov    0x10(%esp),%eax
   1177a:	31 c9                	xor    %ecx,%ecx
   1177c:	c7 42 10 f0 ff ff 07 	movl   $0x7fffff0,0x10(%edx)
   11783:	66 89 4a 30          	mov    %cx,0x30(%edx)
   11787:	89 42 20             	mov    %eax,0x20(%edx)
   1178a:	31 c0                	xor    %eax,%eax
   1178c:	66 89 42 28          	mov    %ax,0x28(%edx)
   11790:	31 c0                	xor    %eax,%eax
   11792:	66 89 42 40          	mov    %ax,0x40(%edx)
   11796:	31 c0                	xor    %eax,%eax
   11798:	66 89 42 50          	mov    %ax,0x50(%edx)
   1179c:	31 c0                	xor    %eax,%eax
   1179e:	66 89 42 60          	mov    %ax,0x60(%edx)
   117a2:	31 c0                	xor    %eax,%eax
   117a4:	66 89 42 70          	mov    %ax,0x70(%edx)
   117a8:	31 c0                	xor    %eax,%eax
   117aa:	66 89 82 80 00 00 00 	mov    %ax,0x80(%edx)
   117b1:	31 c0                	xor    %eax,%eax
   117b3:	c7 82 90 00 00 00 00 	movl   $0x0,0x90(%edx)
   117ba:	00 00 00 
   117bd:	c7 42 2c 00 00 00 00 	movl   $0x0,0x2c(%edx)
   117c4:	66 89 82 98 00 00 00 	mov    %ax,0x98(%edx)
   117cb:	c7 82 9c 00 00 00 00 	movl   $0x0,0x9c(%edx)
   117d2:	00 00 00 
   117d5:	c6 82 a0 00 00 00 00 	movb   $0x0,0xa0(%edx)
   117dc:	e8 bf 53 ff ff       	call   6ba0 <i8259_init>
   117e1:	83 c4 08             	add    $0x8,%esp
   117e4:	5b                   	pop    %ebx
   117e5:	c3                   	ret    
   117e6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   117ed:	8d 76 00             	lea    0x0(%esi),%esi

000117f0 <exec_inst>:
   117f0:	56                   	push   %esi
   117f1:	53                   	push   %ebx
   117f2:	e8 89 2c ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   117f7:	81 c3 09 d8 03 00    	add    $0x3d809,%ebx
   117fd:	83 ec 0c             	sub    $0xc,%esp
   11800:	6a 01                	push   $0x1
   11802:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   11808:	ff 76 20             	pushl  0x20(%esi)
   1180b:	e8 90 d4 00 00       	call   1eca0 <instr_fetch>
   11810:	5a                   	pop    %edx
   11811:	59                   	pop    %ecx
   11812:	0f b6 c0             	movzbl %al,%eax
   11815:	8d 93 e0 18 00 00    	lea    0x18e0(%ebx),%edx
   1181b:	50                   	push   %eax
   1181c:	ff 76 20             	pushl  0x20(%esi)
   1181f:	ff 14 82             	call   *(%edx,%eax,4)
   11822:	83 c4 14             	add    $0x14,%esp
   11825:	5b                   	pop    %ebx
   11826:	5e                   	pop    %esi
   11827:	c3                   	ret    
   11828:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1182f:	90                   	nop

00011830 <do_intr>:
   11830:	56                   	push   %esi
   11831:	53                   	push   %ebx
   11832:	e8 49 2c ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11837:	81 c3 c9 d7 03 00    	add    $0x3d7c9,%ebx
   1183d:	83 ec 04             	sub    $0x4,%esp
   11840:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   11846:	80 b8 a0 00 00 00 00 	cmpb   $0x0,0xa0(%eax)
   1184d:	74 06                	je     11855 <do_intr+0x25>
   1184f:	f6 40 25 02          	testb  $0x2,0x25(%eax)
   11853:	75 0b                	jne    11860 <do_intr+0x30>
   11855:	83 c4 04             	add    $0x4,%esp
   11858:	5b                   	pop    %ebx
   11859:	5e                   	pop    %esi
   1185a:	c3                   	ret    
   1185b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1185f:	90                   	nop
   11860:	e8 0b 52 ff ff       	call   6a70 <i8259_query_intr_no>
   11865:	89 c6                	mov    %eax,%esi
   11867:	3c ff                	cmp    $0xff,%al
   11869:	74 1c                	je     11887 <do_intr+0x57>
   1186b:	e8 b0 52 ff ff       	call   6b20 <i8259_ack_intr>
   11870:	89 f0                	mov    %esi,%eax
   11872:	83 ec 0c             	sub    $0xc,%esp
   11875:	0f b6 f0             	movzbl %al,%esi
   11878:	56                   	push   %esi
   11879:	e8 92 58 ff ff       	call   7110 <raise_intr>
   1187e:	83 c4 10             	add    $0x10,%esp
   11881:	83 c4 04             	add    $0x4,%esp
   11884:	5b                   	pop    %ebx
   11885:	5e                   	pop    %esi
   11886:	c3                   	ret    
   11887:	8d 83 a0 64 fe ff    	lea    -0x19b60(%ebx),%eax
   1188d:	50                   	push   %eax
   1188e:	8d 83 09 64 fe ff    	lea    -0x19bf7(%ebx),%eax
   11894:	68 8c 00 00 00       	push   $0x8c
   11899:	50                   	push   %eax
   1189a:	8d 83 17 64 fe ff    	lea    -0x19be9(%ebx),%eax
   118a0:	50                   	push   %eax
   118a1:	e8 6a 2a ff ff       	call   4310 <__assert_fail@plt>
   118a6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   118ad:	8d 76 00             	lea    0x0(%esi),%esi

000118b0 <exec>:
   118b0:	55                   	push   %ebp
   118b1:	57                   	push   %edi
   118b2:	56                   	push   %esi
   118b3:	53                   	push   %ebx
   118b4:	e8 c7 2b ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   118b9:	81 c3 47 d7 03 00    	add    $0x3d747,%ebx
   118bf:	83 ec 1c             	sub    $0x1c,%esp
   118c2:	8b 74 24 30          	mov    0x30(%esp),%esi
   118c6:	81 fe a0 86 01 00    	cmp    $0x186a0,%esi
   118cc:	8d ab 04 33 05 00    	lea    0x53304(%ebx),%ebp
   118d2:	0f 96 83 f4 24 05 00 	setbe  0x524f4(%ebx)
   118d9:	8b 45 00             	mov    0x0(%ebp),%eax
   118dc:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   118e3:	89 44 24 0c          	mov    %eax,0xc(%esp)
   118e7:	85 f6                	test   %esi,%esi
   118e9:	0f 84 f7 00 00 00    	je     119e6 <exec+0x136>
   118ef:	e8 fc fe ff ff       	call   117f0 <exec_inst>
   118f4:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   118fa:	83 ee 01             	sub    $0x1,%esi
   118fd:	89 44 24 08          	mov    %eax,0x8(%esp)
   11901:	01 47 20             	add    %eax,0x20(%edi)
   11904:	83 7c 24 0c 03       	cmpl   $0x3,0xc(%esp)
   11909:	75 40                	jne    1194b <exec+0x9b>
   1190b:	e8 a0 32 ff ff       	call   4bb0 <resume_breakpoints>
   11910:	eb 39                	jmp    1194b <exec+0x9b>
   11912:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11918:	e8 a3 33 ff ff       	call   4cc0 <scan_watchpoint>
   1191d:	89 c2                	mov    %eax,%edx
   1191f:	85 c0                	test   %eax,%eax
   11921:	75 6d                	jne    11990 <exec+0xe0>
   11923:	e8 08 ff ff ff       	call   11830 <do_intr>
   11928:	85 f6                	test   %esi,%esi
   1192a:	0f 84 f0 00 00 00    	je     11a20 <exec+0x170>
   11930:	8b 45 00             	mov    0x0(%ebp),%eax
   11933:	83 f8 01             	cmp    $0x1,%eax
   11936:	0f 85 bc 00 00 00    	jne    119f8 <exec+0x148>
   1193c:	e8 af fe ff ff       	call   117f0 <exec_inst>
   11941:	01 47 20             	add    %eax,0x20(%edi)
   11944:	83 ee 01             	sub    $0x1,%esi
   11947:	89 44 24 08          	mov    %eax,0x8(%esp)
   1194b:	83 7d 00 03          	cmpl   $0x3,0x0(%ebp)
   1194f:	75 c7                	jne    11918 <exec+0x68>
   11951:	8b 47 20             	mov    0x20(%edi),%eax
   11954:	83 ec 0c             	sub    $0xc,%esp
   11957:	83 e8 01             	sub    $0x1,%eax
   1195a:	50                   	push   %eax
   1195b:	e8 f0 31 ff ff       	call   4b50 <find_breakpoint>
   11960:	83 c4 10             	add    $0x10,%esp
   11963:	85 c0                	test   %eax,%eax
   11965:	74 b1                	je     11918 <exec+0x68>
   11967:	0f b6 10             	movzbl (%eax),%edx
   1196a:	52                   	push   %edx
   1196b:	6a 01                	push   $0x1
   1196d:	6a 01                	push   $0x1
   1196f:	ff 70 04             	pushl  0x4(%eax)
   11972:	e8 79 d2 00 00       	call   1ebf0 <vaddr_write>
   11977:	83 c4 10             	add    $0x10,%esp
   1197a:	83 6f 20 01          	subl   $0x1,0x20(%edi)
   1197e:	e8 3d 33 ff ff       	call   4cc0 <scan_watchpoint>
   11983:	89 c2                	mov    %eax,%edx
   11985:	85 c0                	test   %eax,%eax
   11987:	74 9a                	je     11923 <exec+0x73>
   11989:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11990:	ff 70 04             	pushl  0x4(%eax)
   11993:	8b 47 20             	mov    0x20(%edi),%eax
   11996:	2b 44 24 0c          	sub    0xc(%esp),%eax
   1199a:	50                   	push   %eax
   1199b:	8b 02                	mov    (%edx),%eax
   1199d:	c1 f8 0a             	sar    $0xa,%eax
   119a0:	89 54 24 10          	mov    %edx,0x10(%esp)
   119a4:	50                   	push   %eax
   119a5:	8d 83 44 64 fe ff    	lea    -0x19bbc(%ebx),%eax
   119ab:	50                   	push   %eax
   119ac:	e8 af 28 ff ff       	call   4260 <printf@plt>
   119b1:	83 c4 0c             	add    $0xc,%esp
   119b4:	8b 54 24 0c          	mov    0xc(%esp),%edx
   119b8:	8d 83 78 64 fe ff    	lea    -0x19b88(%ebx),%eax
   119be:	ff 72 0c             	pushl  0xc(%edx)
   119c1:	ff 72 08             	pushl  0x8(%edx)
   119c4:	89 54 24 14          	mov    %edx,0x14(%esp)
   119c8:	50                   	push   %eax
   119c9:	e8 92 28 ff ff       	call   4260 <printf@plt>
   119ce:	8b 54 24 18          	mov    0x18(%esp),%edx
   119d2:	c7 45 00 02 00 00 00 	movl   $0x2,0x0(%ebp)
   119d9:	83 c4 10             	add    $0x10,%esp
   119dc:	8b 42 0c             	mov    0xc(%edx),%eax
   119df:	89 42 08             	mov    %eax,0x8(%edx)
   119e2:	85 f6                	test   %esi,%esi
   119e4:	75 07                	jne    119ed <exec+0x13d>
   119e6:	c7 45 00 02 00 00 00 	movl   $0x2,0x0(%ebp)
   119ed:	83 c4 1c             	add    $0x1c,%esp
   119f0:	5b                   	pop    %ebx
   119f1:	5e                   	pop    %esi
   119f2:	5f                   	pop    %edi
   119f3:	5d                   	pop    %ebp
   119f4:	c3                   	ret    
   119f5:	8d 76 00             	lea    0x0(%esi),%esi
   119f8:	85 c0                	test   %eax,%eax
   119fa:	75 f1                	jne    119ed <exec+0x13d>
   119fc:	83 ec 0c             	sub    $0xc,%esp
   119ff:	8d 83 30 64 fe ff    	lea    -0x19bd0(%ebx),%eax
   11a05:	50                   	push   %eax
   11a06:	e8 a5 28 ff ff       	call   42b0 <puts@plt>
   11a0b:	e8 e0 51 ff ff       	call   6bf0 <i8259_destroy>
   11a10:	83 c4 10             	add    $0x10,%esp
   11a13:	83 c4 1c             	add    $0x1c,%esp
   11a16:	5b                   	pop    %ebx
   11a17:	5e                   	pop    %esi
   11a18:	5f                   	pop    %edi
   11a19:	5d                   	pop    %ebp
   11a1a:	c3                   	ret    
   11a1b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11a1f:	90                   	nop
   11a20:	8b 45 00             	mov    0x0(%ebp),%eax
   11a23:	85 c0                	test   %eax,%eax
   11a25:	75 bf                	jne    119e6 <exec+0x136>
   11a27:	eb d3                	jmp    119fc <exec+0x14c>
   11a29:	66 90                	xchg   %ax,%ax
   11a2b:	66 90                	xchg   %ax,%ax
   11a2d:	66 90                	xchg   %ax,%ax
   11a2f:	90                   	nop

00011a30 <parse_sib>:
   11a30:	55                   	push   %ebp
   11a31:	57                   	push   %edi
   11a32:	56                   	push   %esi
   11a33:	53                   	push   %ebx
   11a34:	e8 47 2a ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11a39:	81 c3 c7 d5 03 00    	add    $0x3d5c7,%ebx
   11a3f:	83 ec 14             	sub    $0x14,%esp
   11a42:	8b 6c 24 30          	mov    0x30(%esp),%ebp
   11a46:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
   11a4a:	6a 01                	push   $0x1
   11a4c:	ff 74 24 2c          	pushl  0x2c(%esp)
   11a50:	e8 4b d2 00 00       	call   1eca0 <instr_fetch>
   11a55:	31 d2                	xor    %edx,%edx
   11a57:	83 c4 10             	add    $0x10,%esp
   11a5a:	89 c1                	mov    %eax,%ecx
   11a5c:	88 c2                	mov    %al,%dl
   11a5e:	83 e1 06             	and    $0x6,%ecx
   11a61:	80 f9 04             	cmp    $0x4,%cl
   11a64:	0f 95 c1             	setne  %cl
   11a67:	31 f6                	xor    %esi,%esi
   11a69:	83 c1 02             	add    $0x2,%ecx
   11a6c:	88 4d 08             	mov    %cl,0x8(%ebp)
   11a6f:	89 c1                	mov    %eax,%ecx
   11a71:	83 e1 38             	and    $0x38,%ecx
   11a74:	80 f9 20             	cmp    $0x20,%cl
   11a77:	74 37                	je     11ab0 <parse_sib+0x80>
   11a79:	89 d1                	mov    %edx,%ecx
   11a7b:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   11a81:	c1 e9 03             	shr    $0x3,%ecx
   11a84:	83 e1 07             	and    $0x7,%ecx
   11a87:	8b 34 8e             	mov    (%esi,%ecx,4),%esi
   11a8a:	89 4d 1c             	mov    %ecx,0x1c(%ebp)
   11a8d:	89 d1                	mov    %edx,%ecx
   11a8f:	c0 e9 06             	shr    $0x6,%cl
   11a92:	80 f9 02             	cmp    $0x2,%cl
   11a95:	0f 84 95 00 00 00    	je     11b30 <parse_sib+0x100>
   11a9b:	0f 87 7f 00 00 00    	ja     11b20 <parse_sib+0xf0>
   11aa1:	80 f9 01             	cmp    $0x1,%cl
   11aa4:	74 6a                	je     11b10 <parse_sib+0xe0>
   11aa6:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%ebp)
   11aad:	8d 76 00             	lea    0x0(%esi),%esi
   11ab0:	85 ff                	test   %edi,%edi
   11ab2:	74 2c                	je     11ae0 <parse_sib+0xb0>
   11ab4:	83 ff 02             	cmp    $0x2,%edi
   11ab7:	0f 87 82 00 00 00    	ja     11b3f <parse_sib+0x10f>
   11abd:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   11ac3:	83 e2 07             	and    $0x7,%edx
   11ac6:	03 34 90             	add    (%eax,%edx,4),%esi
   11ac9:	89 55 18             	mov    %edx,0x18(%ebp)
   11acc:	b8 01 00 00 00       	mov    $0x1,%eax
   11ad1:	89 75 04             	mov    %esi,0x4(%ebp)
   11ad4:	83 c4 0c             	add    $0xc,%esp
   11ad7:	5b                   	pop    %ebx
   11ad8:	5e                   	pop    %esi
   11ad9:	5f                   	pop    %edi
   11ada:	5d                   	pop    %ebp
   11adb:	c3                   	ret    
   11adc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11ae0:	83 e0 07             	and    $0x7,%eax
   11ae3:	3c 05                	cmp    $0x5,%al
   11ae5:	75 d6                	jne    11abd <parse_sib+0x8d>
   11ae7:	83 ec 08             	sub    $0x8,%esp
   11aea:	6a 04                	push   $0x4
   11aec:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   11af0:	83 c0 01             	add    $0x1,%eax
   11af3:	50                   	push   %eax
   11af4:	e8 a7 d1 00 00       	call   1eca0 <instr_fetch>
   11af9:	83 c4 10             	add    $0x10,%esp
   11afc:	01 c6                	add    %eax,%esi
   11afe:	89 45 14             	mov    %eax,0x14(%ebp)
   11b01:	b8 05 00 00 00       	mov    $0x5,%eax
   11b06:	89 75 04             	mov    %esi,0x4(%ebp)
   11b09:	eb c9                	jmp    11ad4 <parse_sib+0xa4>
   11b0b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11b0f:	90                   	nop
   11b10:	01 f6                	add    %esi,%esi
   11b12:	c7 45 20 02 00 00 00 	movl   $0x2,0x20(%ebp)
   11b19:	eb 95                	jmp    11ab0 <parse_sib+0x80>
   11b1b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11b1f:	90                   	nop
   11b20:	c1 e6 03             	shl    $0x3,%esi
   11b23:	c7 45 20 08 00 00 00 	movl   $0x8,0x20(%ebp)
   11b2a:	eb 84                	jmp    11ab0 <parse_sib+0x80>
   11b2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11b30:	c1 e6 02             	shl    $0x2,%esi
   11b33:	c7 45 20 04 00 00 00 	movl   $0x4,0x20(%ebp)
   11b3a:	e9 71 ff ff ff       	jmp    11ab0 <parse_sib+0x80>
   11b3f:	83 ec 0c             	sub    $0xc,%esp
   11b42:	8d 83 a8 64 fe ff    	lea    -0x19b58(%ebx),%eax
   11b48:	50                   	push   %eax
   11b49:	e8 62 27 ff ff       	call   42b0 <puts@plt>
   11b4e:	8d 83 d4 64 fe ff    	lea    -0x19b2c(%ebx),%eax
   11b54:	50                   	push   %eax
   11b55:	8d 83 be 64 fe ff    	lea    -0x19b42(%ebx),%eax
   11b5b:	6a 3b                	push   $0x3b
   11b5d:	50                   	push   %eax
   11b5e:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   11b64:	50                   	push   %eax
   11b65:	e8 a6 27 ff ff       	call   4310 <__assert_fail@plt>
   11b6a:	66 90                	xchg   %ax,%ax
   11b6c:	66 90                	xchg   %ax,%ax
   11b6e:	66 90                	xchg   %ax,%ax

00011b70 <case_mod_00>:
   11b70:	56                   	push   %esi
   11b71:	53                   	push   %ebx
   11b72:	e8 09 29 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11b77:	81 c3 89 d4 03 00    	add    $0x3d489,%ebx
   11b7d:	83 ec 04             	sub    $0x4,%esp
   11b80:	8b 54 24 14          	mov    0x14(%esp),%edx
   11b84:	8b 74 24 18          	mov    0x18(%esp),%esi
   11b88:	89 d0                	mov    %edx,%eax
   11b8a:	83 e0 07             	and    $0x7,%eax
   11b8d:	3c 04                	cmp    $0x4,%al
   11b8f:	74 2f                	je     11bc0 <case_mod_00+0x50>
   11b91:	3c 05                	cmp    $0x5,%al
   11b93:	74 5b                	je     11bf0 <case_mod_00+0x80>
   11b95:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   11b9b:	0f b6 c0             	movzbl %al,%eax
   11b9e:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   11ba2:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   11ba8:	8b 14 82             	mov    (%edx,%eax,4),%edx
   11bab:	89 46 18             	mov    %eax,0x18(%esi)
   11bae:	31 c0                	xor    %eax,%eax
   11bb0:	89 56 04             	mov    %edx,0x4(%esi)
   11bb3:	83 c4 04             	add    $0x4,%esp
   11bb6:	5b                   	pop    %ebx
   11bb7:	5e                   	pop    %esi
   11bb8:	c3                   	ret    
   11bb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11bc0:	c0 ea 06             	shr    $0x6,%dl
   11bc3:	83 ec 04             	sub    $0x4,%esp
   11bc6:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   11bcc:	0f b6 d2             	movzbl %dl,%edx
   11bcf:	56                   	push   %esi
   11bd0:	52                   	push   %edx
   11bd1:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11bd5:	83 c0 01             	add    $0x1,%eax
   11bd8:	50                   	push   %eax
   11bd9:	e8 52 fe ff ff       	call   11a30 <parse_sib>
   11bde:	83 c4 10             	add    $0x10,%esp
   11be1:	83 c4 04             	add    $0x4,%esp
   11be4:	5b                   	pop    %ebx
   11be5:	5e                   	pop    %esi
   11be6:	c3                   	ret    
   11be7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11bee:	66 90                	xchg   %ax,%ax
   11bf0:	83 ec 08             	sub    $0x8,%esp
   11bf3:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   11bf9:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   11bfd:	6a 04                	push   $0x4
   11bff:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   11c03:	83 c0 01             	add    $0x1,%eax
   11c06:	50                   	push   %eax
   11c07:	e8 94 d0 00 00       	call   1eca0 <instr_fetch>
   11c0c:	83 c4 10             	add    $0x10,%esp
   11c0f:	89 46 04             	mov    %eax,0x4(%esi)
   11c12:	89 46 14             	mov    %eax,0x14(%esi)
   11c15:	83 c4 04             	add    $0x4,%esp
   11c18:	b8 04 00 00 00       	mov    $0x4,%eax
   11c1d:	5b                   	pop    %ebx
   11c1e:	5e                   	pop    %esi
   11c1f:	c3                   	ret    

00011c20 <case_mod_01>:
   11c20:	55                   	push   %ebp
   11c21:	57                   	push   %edi
   11c22:	56                   	push   %esi
   11c23:	53                   	push   %ebx
   11c24:	e8 57 28 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11c29:	81 c3 d7 d3 03 00    	add    $0x3d3d7,%ebx
   11c2f:	83 ec 0c             	sub    $0xc,%esp
   11c32:	8b 44 24 24          	mov    0x24(%esp),%eax
   11c36:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   11c3a:	8b 74 24 28          	mov    0x28(%esp),%esi
   11c3e:	89 c7                	mov    %eax,%edi
   11c40:	8d 55 01             	lea    0x1(%ebp),%edx
   11c43:	83 e7 07             	and    $0x7,%edi
   11c46:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   11c4c:	89 f9                	mov    %edi,%ecx
   11c4e:	80 f9 04             	cmp    $0x4,%cl
   11c51:	74 5d                	je     11cb0 <case_mod_01+0x90>
   11c53:	0f b6 c1             	movzbl %cl,%eax
   11c56:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   11c5c:	83 ec 08             	sub    $0x8,%esp
   11c5f:	8b 0c 81             	mov    (%ecx,%eax,4),%ecx
   11c62:	89 46 18             	mov    %eax,0x18(%esi)
   11c65:	89 4e 04             	mov    %ecx,0x4(%esi)
   11c68:	6a 01                	push   $0x1
   11c6a:	52                   	push   %edx
   11c6b:	e8 30 d0 00 00       	call   1eca0 <instr_fetch>
   11c70:	83 c4 10             	add    $0x10,%esp
   11c73:	0f be d0             	movsbl %al,%edx
   11c76:	89 f8                	mov    %edi,%eax
   11c78:	3c 05                	cmp    $0x5,%al
   11c7a:	74 1c                	je     11c98 <case_mod_01+0x78>
   11c7c:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   11c80:	b8 01 00 00 00       	mov    $0x1,%eax
   11c85:	01 56 04             	add    %edx,0x4(%esi)
   11c88:	89 56 14             	mov    %edx,0x14(%esi)
   11c8b:	83 c4 0c             	add    $0xc,%esp
   11c8e:	5b                   	pop    %ebx
   11c8f:	5e                   	pop    %esi
   11c90:	5f                   	pop    %edi
   11c91:	5d                   	pop    %ebp
   11c92:	c3                   	ret    
   11c93:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11c97:	90                   	nop
   11c98:	c6 46 08 02          	movb   $0x2,0x8(%esi)
   11c9c:	b8 01 00 00 00       	mov    $0x1,%eax
   11ca1:	01 56 04             	add    %edx,0x4(%esi)
   11ca4:	89 56 14             	mov    %edx,0x14(%esi)
   11ca7:	83 c4 0c             	add    $0xc,%esp
   11caa:	5b                   	pop    %ebx
   11cab:	5e                   	pop    %esi
   11cac:	5f                   	pop    %edi
   11cad:	5d                   	pop    %ebp
   11cae:	c3                   	ret    
   11caf:	90                   	nop
   11cb0:	c0 e8 06             	shr    $0x6,%al
   11cb3:	83 ec 04             	sub    $0x4,%esp
   11cb6:	83 c5 02             	add    $0x2,%ebp
   11cb9:	0f b6 c0             	movzbl %al,%eax
   11cbc:	56                   	push   %esi
   11cbd:	50                   	push   %eax
   11cbe:	52                   	push   %edx
   11cbf:	e8 6c fd ff ff       	call   11a30 <parse_sib>
   11cc4:	89 c7                	mov    %eax,%edi
   11cc6:	58                   	pop    %eax
   11cc7:	5a                   	pop    %edx
   11cc8:	6a 01                	push   $0x1
   11cca:	55                   	push   %ebp
   11ccb:	e8 d0 cf 00 00       	call   1eca0 <instr_fetch>
   11cd0:	83 c4 10             	add    $0x10,%esp
   11cd3:	0f be d0             	movsbl %al,%edx
   11cd6:	01 56 04             	add    %edx,0x4(%esi)
   11cd9:	8d 47 01             	lea    0x1(%edi),%eax
   11cdc:	89 56 14             	mov    %edx,0x14(%esi)
   11cdf:	83 c4 0c             	add    $0xc,%esp
   11ce2:	5b                   	pop    %ebx
   11ce3:	5e                   	pop    %esi
   11ce4:	5f                   	pop    %edi
   11ce5:	5d                   	pop    %ebp
   11ce6:	c3                   	ret    
   11ce7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11cee:	66 90                	xchg   %ax,%ax

00011cf0 <case_mod_10>:
   11cf0:	55                   	push   %ebp
   11cf1:	57                   	push   %edi
   11cf2:	56                   	push   %esi
   11cf3:	53                   	push   %ebx
   11cf4:	e8 87 27 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11cf9:	81 c3 07 d3 03 00    	add    $0x3d307,%ebx
   11cff:	83 ec 0c             	sub    $0xc,%esp
   11d02:	8b 44 24 24          	mov    0x24(%esp),%eax
   11d06:	8b 7c 24 20          	mov    0x20(%esp),%edi
   11d0a:	8b 74 24 28          	mov    0x28(%esp),%esi
   11d0e:	89 c5                	mov    %eax,%ebp
   11d10:	8d 57 01             	lea    0x1(%edi),%edx
   11d13:	83 e5 07             	and    $0x7,%ebp
   11d16:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   11d1c:	89 e9                	mov    %ebp,%ecx
   11d1e:	80 f9 04             	cmp    $0x4,%cl
   11d21:	74 5d                	je     11d80 <case_mod_10+0x90>
   11d23:	0f b6 c1             	movzbl %cl,%eax
   11d26:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   11d2c:	83 ec 08             	sub    $0x8,%esp
   11d2f:	8b 0c 81             	mov    (%ecx,%eax,4),%ecx
   11d32:	89 46 18             	mov    %eax,0x18(%esi)
   11d35:	89 4e 04             	mov    %ecx,0x4(%esi)
   11d38:	6a 04                	push   $0x4
   11d3a:	52                   	push   %edx
   11d3b:	e8 60 cf 00 00       	call   1eca0 <instr_fetch>
   11d40:	83 c4 10             	add    $0x10,%esp
   11d43:	89 c2                	mov    %eax,%edx
   11d45:	89 e8                	mov    %ebp,%eax
   11d47:	3c 05                	cmp    $0x5,%al
   11d49:	74 1d                	je     11d68 <case_mod_10+0x78>
   11d4b:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   11d4f:	b8 04 00 00 00       	mov    $0x4,%eax
   11d54:	01 56 04             	add    %edx,0x4(%esi)
   11d57:	89 56 14             	mov    %edx,0x14(%esi)
   11d5a:	83 c4 0c             	add    $0xc,%esp
   11d5d:	5b                   	pop    %ebx
   11d5e:	5e                   	pop    %esi
   11d5f:	5f                   	pop    %edi
   11d60:	5d                   	pop    %ebp
   11d61:	c3                   	ret    
   11d62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11d68:	c6 46 08 02          	movb   $0x2,0x8(%esi)
   11d6c:	b8 04 00 00 00       	mov    $0x4,%eax
   11d71:	01 56 04             	add    %edx,0x4(%esi)
   11d74:	89 56 14             	mov    %edx,0x14(%esi)
   11d77:	83 c4 0c             	add    $0xc,%esp
   11d7a:	5b                   	pop    %ebx
   11d7b:	5e                   	pop    %esi
   11d7c:	5f                   	pop    %edi
   11d7d:	5d                   	pop    %ebp
   11d7e:	c3                   	ret    
   11d7f:	90                   	nop
   11d80:	c0 e8 06             	shr    $0x6,%al
   11d83:	83 ec 04             	sub    $0x4,%esp
   11d86:	83 c7 02             	add    $0x2,%edi
   11d89:	0f b6 c0             	movzbl %al,%eax
   11d8c:	56                   	push   %esi
   11d8d:	50                   	push   %eax
   11d8e:	52                   	push   %edx
   11d8f:	e8 9c fc ff ff       	call   11a30 <parse_sib>
   11d94:	89 c5                	mov    %eax,%ebp
   11d96:	58                   	pop    %eax
   11d97:	5a                   	pop    %edx
   11d98:	6a 04                	push   $0x4
   11d9a:	57                   	push   %edi
   11d9b:	e8 00 cf 00 00       	call   1eca0 <instr_fetch>
   11da0:	83 c4 10             	add    $0x10,%esp
   11da3:	89 c2                	mov    %eax,%edx
   11da5:	01 56 04             	add    %edx,0x4(%esi)
   11da8:	8d 45 04             	lea    0x4(%ebp),%eax
   11dab:	89 56 14             	mov    %edx,0x14(%esi)
   11dae:	83 c4 0c             	add    $0xc,%esp
   11db1:	5b                   	pop    %ebx
   11db2:	5e                   	pop    %esi
   11db3:	5f                   	pop    %edi
   11db4:	5d                   	pop    %ebp
   11db5:	c3                   	ret    
   11db6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11dbd:	8d 76 00             	lea    0x0(%esi),%esi

00011dc0 <case_mod_11>:
   11dc0:	8b 44 24 08          	mov    0x8(%esp),%eax
   11dc4:	8b 54 24 0c          	mov    0xc(%esp),%edx
   11dc8:	83 e0 07             	and    $0x7,%eax
   11dcb:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   11dd1:	89 42 04             	mov    %eax,0x4(%edx)
   11dd4:	31 c0                	xor    %eax,%eax
   11dd6:	c3                   	ret    
   11dd7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11dde:	66 90                	xchg   %ax,%ax

00011de0 <parse_rm_32>:
   11de0:	57                   	push   %edi
   11de1:	56                   	push   %esi
   11de2:	53                   	push   %ebx
   11de3:	e8 98 26 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11de8:	81 c3 18 d2 03 00    	add    $0x3d218,%ebx
   11dee:	83 ec 10             	sub    $0x10,%esp
   11df1:	8b 74 24 24          	mov    0x24(%esp),%esi
   11df5:	8b 7c 24 28          	mov    0x28(%esp),%edi
   11df9:	89 f0                	mov    %esi,%eax
   11dfb:	8d 93 f4 24 05 00    	lea    0x524f4(%ebx),%edx
   11e01:	c0 e8 06             	shr    $0x6,%al
   11e04:	80 3a 00             	cmpb   $0x0,(%edx)
   11e07:	75 27                	jne    11e30 <parse_rm_32+0x50>
   11e09:	3c 02                	cmp    $0x2,%al
   11e0b:	74 3c                	je     11e49 <parse_rm_32+0x69>
   11e0d:	77 79                	ja     11e88 <parse_rm_32+0xa8>
   11e0f:	3c 01                	cmp    $0x1,%al
   11e11:	74 55                	je     11e68 <parse_rm_32+0x88>
   11e13:	83 ec 04             	sub    $0x4,%esp
   11e16:	57                   	push   %edi
   11e17:	56                   	push   %esi
   11e18:	ff 74 24 2c          	pushl  0x2c(%esp)
   11e1c:	e8 4f fd ff ff       	call   11b70 <case_mod_00>
   11e21:	83 c4 10             	add    $0x10,%esp
   11e24:	83 c4 10             	add    $0x10,%esp
   11e27:	83 c0 01             	add    $0x1,%eax
   11e2a:	5b                   	pop    %ebx
   11e2b:	5e                   	pop    %esi
   11e2c:	5f                   	pop    %edi
   11e2d:	c3                   	ret    
   11e2e:	66 90                	xchg   %ax,%ax
   11e30:	88 44 24 0f          	mov    %al,0xf(%esp)
   11e34:	83 ec 0c             	sub    $0xc,%esp
   11e37:	57                   	push   %edi
   11e38:	e8 c3 0b 00 00       	call   12a00 <clear_operand_mem_addr>
   11e3d:	83 c4 10             	add    $0x10,%esp
   11e40:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
   11e45:	3c 02                	cmp    $0x2,%al
   11e47:	75 c4                	jne    11e0d <parse_rm_32+0x2d>
   11e49:	83 ec 04             	sub    $0x4,%esp
   11e4c:	57                   	push   %edi
   11e4d:	56                   	push   %esi
   11e4e:	ff 74 24 2c          	pushl  0x2c(%esp)
   11e52:	e8 99 fe ff ff       	call   11cf0 <case_mod_10>
   11e57:	83 c4 10             	add    $0x10,%esp
   11e5a:	83 c4 10             	add    $0x10,%esp
   11e5d:	83 c0 01             	add    $0x1,%eax
   11e60:	5b                   	pop    %ebx
   11e61:	5e                   	pop    %esi
   11e62:	5f                   	pop    %edi
   11e63:	c3                   	ret    
   11e64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11e68:	83 ec 04             	sub    $0x4,%esp
   11e6b:	57                   	push   %edi
   11e6c:	56                   	push   %esi
   11e6d:	ff 74 24 2c          	pushl  0x2c(%esp)
   11e71:	e8 aa fd ff ff       	call   11c20 <case_mod_01>
   11e76:	83 c4 10             	add    $0x10,%esp
   11e79:	83 c4 10             	add    $0x10,%esp
   11e7c:	83 c0 01             	add    $0x1,%eax
   11e7f:	5b                   	pop    %ebx
   11e80:	5e                   	pop    %esi
   11e81:	5f                   	pop    %edi
   11e82:	c3                   	ret    
   11e83:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11e87:	90                   	nop
   11e88:	83 e6 07             	and    $0x7,%esi
   11e8b:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   11e91:	b8 01 00 00 00       	mov    $0x1,%eax
   11e96:	89 77 04             	mov    %esi,0x4(%edi)
   11e99:	83 c4 10             	add    $0x10,%esp
   11e9c:	5b                   	pop    %ebx
   11e9d:	5e                   	pop    %esi
   11e9e:	5f                   	pop    %edi
   11e9f:	c3                   	ret    

00011ea0 <modrm_r_rm>:
   11ea0:	55                   	push   %ebp
   11ea1:	57                   	push   %edi
   11ea2:	56                   	push   %esi
   11ea3:	53                   	push   %ebx
   11ea4:	e8 d7 25 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11ea9:	81 c3 57 d1 03 00    	add    $0x3d157,%ebx
   11eaf:	83 ec 14             	sub    $0x14,%esp
   11eb2:	8b 74 24 28          	mov    0x28(%esp),%esi
   11eb6:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
   11eba:	8b 6c 24 30          	mov    0x30(%esp),%ebp
   11ebe:	6a 01                	push   $0x1
   11ec0:	56                   	push   %esi
   11ec1:	e8 da cd 00 00       	call   1eca0 <instr_fetch>
   11ec6:	31 d2                	xor    %edx,%edx
   11ec8:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   11ece:	88 c2                	mov    %al,%dl
   11ed0:	89 d0                	mov    %edx,%eax
   11ed2:	c1 e8 03             	shr    $0x3,%eax
   11ed5:	83 e0 07             	and    $0x7,%eax
   11ed8:	89 47 04             	mov    %eax,0x4(%edi)
   11edb:	89 6c 24 38          	mov    %ebp,0x38(%esp)
   11edf:	89 74 24 30          	mov    %esi,0x30(%esp)
   11ee3:	89 54 24 34          	mov    %edx,0x34(%esp)
   11ee7:	83 c4 1c             	add    $0x1c,%esp
   11eea:	5b                   	pop    %ebx
   11eeb:	5e                   	pop    %esi
   11eec:	5f                   	pop    %edi
   11eed:	5d                   	pop    %ebp
   11eee:	e9 ed fe ff ff       	jmp    11de0 <parse_rm_32>
   11ef3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11efa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00011f00 <modrm_opcode_rm>:
   11f00:	55                   	push   %ebp
   11f01:	57                   	push   %edi
   11f02:	56                   	push   %esi
   11f03:	53                   	push   %ebx
   11f04:	e8 77 25 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11f09:	81 c3 f7 d0 03 00    	add    $0x3d0f7,%ebx
   11f0f:	83 ec 14             	sub    $0x14,%esp
   11f12:	8b 74 24 28          	mov    0x28(%esp),%esi
   11f16:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
   11f1a:	8b 7c 24 30          	mov    0x30(%esp),%edi
   11f1e:	6a 01                	push   $0x1
   11f20:	56                   	push   %esi
   11f21:	e8 7a cd 00 00       	call   1eca0 <instr_fetch>
   11f26:	31 d2                	xor    %edx,%edx
   11f28:	88 c2                	mov    %al,%dl
   11f2a:	89 d0                	mov    %edx,%eax
   11f2c:	c1 e8 03             	shr    $0x3,%eax
   11f2f:	83 e0 07             	and    $0x7,%eax
   11f32:	88 45 00             	mov    %al,0x0(%ebp)
   11f35:	89 7c 24 38          	mov    %edi,0x38(%esp)
   11f39:	89 74 24 30          	mov    %esi,0x30(%esp)
   11f3d:	89 54 24 34          	mov    %edx,0x34(%esp)
   11f41:	83 c4 1c             	add    $0x1c,%esp
   11f44:	5b                   	pop    %ebx
   11f45:	5e                   	pop    %esi
   11f46:	5f                   	pop    %edi
   11f47:	5d                   	pop    %ebp
   11f48:	e9 93 fe ff ff       	jmp    11de0 <parse_rm_32>
   11f4d:	8d 76 00             	lea    0x0(%esi),%esi

00011f50 <modrm_opcode>:
   11f50:	53                   	push   %ebx
   11f51:	e8 2a 25 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11f56:	81 c3 aa d0 03 00    	add    $0x3d0aa,%ebx
   11f5c:	83 ec 10             	sub    $0x10,%esp
   11f5f:	6a 01                	push   $0x1
   11f61:	ff 74 24 1c          	pushl  0x1c(%esp)
   11f65:	e8 36 cd 00 00       	call   1eca0 <instr_fetch>
   11f6a:	8b 54 24 24          	mov    0x24(%esp),%edx
   11f6e:	c1 e8 03             	shr    $0x3,%eax
   11f71:	83 e0 07             	and    $0x7,%eax
   11f74:	88 02                	mov    %al,(%edx)
   11f76:	83 c4 18             	add    $0x18,%esp
   11f79:	b8 01 00 00 00       	mov    $0x1,%eax
   11f7e:	5b                   	pop    %ebx
   11f7f:	c3                   	ret    

00011f80 <modrm_rm>:
   11f80:	56                   	push   %esi
   11f81:	53                   	push   %ebx
   11f82:	e8 f9 24 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11f87:	81 c3 79 d0 03 00    	add    $0x3d079,%ebx
   11f8d:	83 ec 0c             	sub    $0xc,%esp
   11f90:	8b 74 24 18          	mov    0x18(%esp),%esi
   11f94:	6a 01                	push   $0x1
   11f96:	56                   	push   %esi
   11f97:	e8 04 cd 00 00       	call   1eca0 <instr_fetch>
   11f9c:	31 d2                	xor    %edx,%edx
   11f9e:	83 c4 0c             	add    $0xc,%esp
   11fa1:	88 c2                	mov    %al,%dl
   11fa3:	ff 74 24 18          	pushl  0x18(%esp)
   11fa7:	52                   	push   %edx
   11fa8:	56                   	push   %esi
   11fa9:	e8 32 fe ff ff       	call   11de0 <parse_rm_32>
   11fae:	83 c4 14             	add    $0x14,%esp
   11fb1:	5b                   	pop    %ebx
   11fb2:	5e                   	pop    %esi
   11fb3:	c3                   	ret    
   11fb4:	66 90                	xchg   %ax,%ax
   11fb6:	66 90                	xchg   %ax,%ax
   11fb8:	66 90                	xchg   %ax,%ax
   11fba:	66 90                	xchg   %ax,%ax
   11fbc:	66 90                	xchg   %ax,%ax
   11fbe:	66 90                	xchg   %ax,%ax

00011fc0 <print_asm_0>:
   11fc0:	55                   	push   %ebp
   11fc1:	57                   	push   %edi
   11fc2:	56                   	push   %esi
   11fc3:	53                   	push   %ebx
   11fc4:	e8 b7 24 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   11fc9:	81 c3 37 d0 03 00    	add    $0x3d037,%ebx
   11fcf:	83 ec 1c             	sub    $0x1c,%esp
   11fd2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   11fd6:	8d 83 f4 24 05 00    	lea    0x524f4(%ebx),%eax
   11fdc:	80 38 00             	cmpb   $0x0,(%eax)
   11fdf:	0f 84 a8 00 00 00    	je     1208d <print_asm_0+0xcd>
   11fe5:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   11feb:	83 ec 08             	sub    $0x8,%esp
   11fee:	8d 83 de 64 fe ff    	lea    -0x19b22(%ebx),%eax
   11ff4:	be 0d 00 00 00       	mov    $0xd,%esi
   11ff9:	ff 77 20             	pushl  0x20(%edi)
   11ffc:	50                   	push   %eax
   11ffd:	e8 5e 22 ff ff       	call   4260 <printf@plt>
   12002:	89 e8                	mov    %ebp,%eax
   12004:	83 c4 10             	add    $0x10,%esp
   12007:	3c 0d                	cmp    $0xd,%al
   12009:	89 f0                	mov    %esi,%eax
   1200b:	0f 46 c5             	cmovbe %ebp,%eax
   1200e:	0f b6 c0             	movzbl %al,%eax
   12011:	89 44 24 0c          	mov    %eax,0xc(%esp)
   12015:	89 e8                	mov    %ebp,%eax
   12017:	84 c0                	test   %al,%al
   12019:	74 32                	je     1204d <print_asm_0+0x8d>
   1201b:	31 f6                	xor    %esi,%esi
   1201d:	8d ab e7 64 fe ff    	lea    -0x19b19(%ebx),%ebp
   12023:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12027:	90                   	nop
   12028:	83 ec 08             	sub    $0x8,%esp
   1202b:	6a 01                	push   $0x1
   1202d:	8b 47 20             	mov    0x20(%edi),%eax
   12030:	01 f0                	add    %esi,%eax
   12032:	83 c6 01             	add    $0x1,%esi
   12035:	50                   	push   %eax
   12036:	e8 65 cc 00 00       	call   1eca0 <instr_fetch>
   1203b:	5a                   	pop    %edx
   1203c:	59                   	pop    %ecx
   1203d:	50                   	push   %eax
   1203e:	55                   	push   %ebp
   1203f:	e8 1c 22 ff ff       	call   4260 <printf@plt>
   12044:	83 c4 10             	add    $0x10,%esp
   12047:	3b 74 24 0c          	cmp    0xc(%esp),%esi
   1204b:	75 db                	jne    12028 <print_asm_0+0x68>
   1204d:	b8 0e 00 00 00       	mov    $0xe,%eax
   12052:	2b 44 24 0c          	sub    0xc(%esp),%eax
   12056:	31 ed                	xor    %ebp,%ebp
   12058:	89 c6                	mov    %eax,%esi
   1205a:	8d bb e3 64 fe ff    	lea    -0x19b1d(%ebx),%edi
   12060:	83 ec 0c             	sub    $0xc,%esp
   12063:	83 c5 01             	add    $0x1,%ebp
   12066:	57                   	push   %edi
   12067:	e8 f4 21 ff ff       	call   4260 <printf@plt>
   1206c:	83 c4 10             	add    $0x10,%esp
   1206f:	39 ee                	cmp    %ebp,%esi
   12071:	75 ed                	jne    12060 <print_asm_0+0xa0>
   12073:	83 ec 04             	sub    $0x4,%esp
   12076:	8d 83 ed 64 fe ff    	lea    -0x19b13(%ebx),%eax
   1207c:	ff 74 24 38          	pushl  0x38(%esp)
   12080:	ff 74 24 38          	pushl  0x38(%esp)
   12084:	50                   	push   %eax
   12085:	e8 d6 21 ff ff       	call   4260 <printf@plt>
   1208a:	83 c4 10             	add    $0x10,%esp
   1208d:	83 c4 1c             	add    $0x1c,%esp
   12090:	5b                   	pop    %ebx
   12091:	5e                   	pop    %esi
   12092:	5f                   	pop    %edi
   12093:	5d                   	pop    %ebp
   12094:	c3                   	ret    
   12095:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1209c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000120a0 <print_asm_1>:
   120a0:	55                   	push   %ebp
   120a1:	57                   	push   %edi
   120a2:	56                   	push   %esi
   120a3:	53                   	push   %ebx
   120a4:	e8 d7 23 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   120a9:	81 c3 57 cf 03 00    	add    $0x3cf57,%ebx
   120af:	83 ec 1c             	sub    $0x1c,%esp
   120b2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   120b6:	8d 83 f4 24 05 00    	lea    0x524f4(%ebx),%eax
   120bc:	80 38 00             	cmpb   $0x0,(%eax)
   120bf:	0f 84 c9 00 00 00    	je     1218e <print_asm_1+0xee>
   120c5:	8d 83 a0 33 05 00    	lea    0x533a0(%ebx),%eax
   120cb:	83 ec 08             	sub    $0x8,%esp
   120ce:	89 44 24 14          	mov    %eax,0x14(%esp)
   120d2:	50                   	push   %eax
   120d3:	ff 74 24 48          	pushl  0x48(%esp)
   120d7:	e8 64 06 00 00       	call   12740 <parse_operand_address>
   120dc:	5e                   	pop    %esi
   120dd:	5f                   	pop    %edi
   120de:	8d 83 de 64 fe ff    	lea    -0x19b22(%ebx),%eax
   120e4:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   120ea:	be 0d 00 00 00       	mov    $0xd,%esi
   120ef:	ff 77 20             	pushl  0x20(%edi)
   120f2:	50                   	push   %eax
   120f3:	e8 68 21 ff ff       	call   4260 <printf@plt>
   120f8:	89 e8                	mov    %ebp,%eax
   120fa:	83 c4 10             	add    $0x10,%esp
   120fd:	3c 0d                	cmp    $0xd,%al
   120ff:	89 f0                	mov    %esi,%eax
   12101:	0f 46 c5             	cmovbe %ebp,%eax
   12104:	0f b6 c0             	movzbl %al,%eax
   12107:	89 44 24 08          	mov    %eax,0x8(%esp)
   1210b:	89 e8                	mov    %ebp,%eax
   1210d:	84 c0                	test   %al,%al
   1210f:	74 34                	je     12145 <print_asm_1+0xa5>
   12111:	31 f6                	xor    %esi,%esi
   12113:	8d ab e7 64 fe ff    	lea    -0x19b19(%ebx),%ebp
   12119:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   12120:	83 ec 08             	sub    $0x8,%esp
   12123:	6a 01                	push   $0x1
   12125:	8b 47 20             	mov    0x20(%edi),%eax
   12128:	01 f0                	add    %esi,%eax
   1212a:	83 c6 01             	add    $0x1,%esi
   1212d:	50                   	push   %eax
   1212e:	e8 6d cb 00 00       	call   1eca0 <instr_fetch>
   12133:	5a                   	pop    %edx
   12134:	59                   	pop    %ecx
   12135:	50                   	push   %eax
   12136:	55                   	push   %ebp
   12137:	e8 24 21 ff ff       	call   4260 <printf@plt>
   1213c:	83 c4 10             	add    $0x10,%esp
   1213f:	3b 74 24 08          	cmp    0x8(%esp),%esi
   12143:	75 db                	jne    12120 <print_asm_1+0x80>
   12145:	b8 0e 00 00 00       	mov    $0xe,%eax
   1214a:	2b 44 24 08          	sub    0x8(%esp),%eax
   1214e:	31 ed                	xor    %ebp,%ebp
   12150:	89 c6                	mov    %eax,%esi
   12152:	8d bb e3 64 fe ff    	lea    -0x19b1d(%ebx),%edi
   12158:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1215f:	90                   	nop
   12160:	83 ec 0c             	sub    $0xc,%esp
   12163:	83 c5 01             	add    $0x1,%ebp
   12166:	57                   	push   %edi
   12167:	e8 f4 20 ff ff       	call   4260 <printf@plt>
   1216c:	83 c4 10             	add    $0x10,%esp
   1216f:	39 ee                	cmp    %ebp,%esi
   12171:	75 ed                	jne    12160 <print_asm_1+0xc0>
   12173:	8d 83 f3 64 fe ff    	lea    -0x19b0d(%ebx),%eax
   12179:	ff 74 24 0c          	pushl  0xc(%esp)
   1217d:	ff 74 24 38          	pushl  0x38(%esp)
   12181:	ff 74 24 38          	pushl  0x38(%esp)
   12185:	50                   	push   %eax
   12186:	e8 d5 20 ff ff       	call   4260 <printf@plt>
   1218b:	83 c4 10             	add    $0x10,%esp
   1218e:	83 c4 1c             	add    $0x1c,%esp
   12191:	5b                   	pop    %ebx
   12192:	5e                   	pop    %esi
   12193:	5f                   	pop    %edi
   12194:	5d                   	pop    %ebp
   12195:	c3                   	ret    
   12196:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1219d:	8d 76 00             	lea    0x0(%esi),%esi

000121a0 <print_asm_2>:
   121a0:	55                   	push   %ebp
   121a1:	57                   	push   %edi
   121a2:	56                   	push   %esi
   121a3:	53                   	push   %ebx
   121a4:	e8 d7 22 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   121a9:	81 c3 57 ce 03 00    	add    $0x3ce57,%ebx
   121af:	83 ec 1c             	sub    $0x1c,%esp
   121b2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   121b6:	8d 83 f4 24 05 00    	lea    0x524f4(%ebx),%eax
   121bc:	80 38 00             	cmpb   $0x0,(%eax)
   121bf:	0f 84 e0 00 00 00    	je     122a5 <print_asm_2+0x105>
   121c5:	8d 83 a0 33 05 00    	lea    0x533a0(%ebx),%eax
   121cb:	83 ec 08             	sub    $0x8,%esp
   121ce:	89 44 24 10          	mov    %eax,0x10(%esp)
   121d2:	50                   	push   %eax
   121d3:	ff 74 24 48          	pushl  0x48(%esp)
   121d7:	e8 64 05 00 00       	call   12740 <parse_operand_address>
   121dc:	8d 83 60 33 05 00    	lea    0x53360(%ebx),%eax
   121e2:	5e                   	pop    %esi
   121e3:	be 0d 00 00 00       	mov    $0xd,%esi
   121e8:	5f                   	pop    %edi
   121e9:	89 44 24 14          	mov    %eax,0x14(%esp)
   121ed:	50                   	push   %eax
   121ee:	ff 74 24 4c          	pushl  0x4c(%esp)
   121f2:	e8 49 05 00 00       	call   12740 <parse_operand_address>
   121f7:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   121fd:	58                   	pop    %eax
   121fe:	8d 83 de 64 fe ff    	lea    -0x19b22(%ebx),%eax
   12204:	5a                   	pop    %edx
   12205:	ff 77 20             	pushl  0x20(%edi)
   12208:	50                   	push   %eax
   12209:	e8 52 20 ff ff       	call   4260 <printf@plt>
   1220e:	89 e8                	mov    %ebp,%eax
   12210:	83 c4 10             	add    $0x10,%esp
   12213:	3c 0d                	cmp    $0xd,%al
   12215:	89 f0                	mov    %esi,%eax
   12217:	0f 46 c5             	cmovbe %ebp,%eax
   1221a:	0f b6 c0             	movzbl %al,%eax
   1221d:	89 44 24 04          	mov    %eax,0x4(%esp)
   12221:	89 e8                	mov    %ebp,%eax
   12223:	84 c0                	test   %al,%al
   12225:	74 2e                	je     12255 <print_asm_2+0xb5>
   12227:	31 f6                	xor    %esi,%esi
   12229:	8d ab e7 64 fe ff    	lea    -0x19b19(%ebx),%ebp
   1222f:	90                   	nop
   12230:	83 ec 08             	sub    $0x8,%esp
   12233:	6a 01                	push   $0x1
   12235:	8b 47 20             	mov    0x20(%edi),%eax
   12238:	01 f0                	add    %esi,%eax
   1223a:	83 c6 01             	add    $0x1,%esi
   1223d:	50                   	push   %eax
   1223e:	e8 5d ca 00 00       	call   1eca0 <instr_fetch>
   12243:	5a                   	pop    %edx
   12244:	59                   	pop    %ecx
   12245:	50                   	push   %eax
   12246:	55                   	push   %ebp
   12247:	e8 14 20 ff ff       	call   4260 <printf@plt>
   1224c:	83 c4 10             	add    $0x10,%esp
   1224f:	3b 74 24 04          	cmp    0x4(%esp),%esi
   12253:	75 db                	jne    12230 <print_asm_2+0x90>
   12255:	b8 0e 00 00 00       	mov    $0xe,%eax
   1225a:	2b 44 24 04          	sub    0x4(%esp),%eax
   1225e:	31 ed                	xor    %ebp,%ebp
   12260:	89 c6                	mov    %eax,%esi
   12262:	8d bb e3 64 fe ff    	lea    -0x19b1d(%ebx),%edi
   12268:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1226f:	90                   	nop
   12270:	83 ec 0c             	sub    $0xc,%esp
   12273:	83 c5 01             	add    $0x1,%ebp
   12276:	57                   	push   %edi
   12277:	e8 e4 1f ff ff       	call   4260 <printf@plt>
   1227c:	83 c4 10             	add    $0x10,%esp
   1227f:	39 ee                	cmp    %ebp,%esi
   12281:	75 ed                	jne    12270 <print_asm_2+0xd0>
   12283:	83 ec 0c             	sub    $0xc,%esp
   12286:	8d 83 fc 64 fe ff    	lea    -0x19b04(%ebx),%eax
   1228c:	ff 74 24 18          	pushl  0x18(%esp)
   12290:	ff 74 24 18          	pushl  0x18(%esp)
   12294:	ff 74 24 48          	pushl  0x48(%esp)
   12298:	ff 74 24 48          	pushl  0x48(%esp)
   1229c:	50                   	push   %eax
   1229d:	e8 be 1f ff ff       	call   4260 <printf@plt>
   122a2:	83 c4 20             	add    $0x20,%esp
   122a5:	83 c4 1c             	add    $0x1c,%esp
   122a8:	5b                   	pop    %ebx
   122a9:	5e                   	pop    %esi
   122aa:	5f                   	pop    %edi
   122ab:	5d                   	pop    %ebp
   122ac:	c3                   	ret    
   122ad:	8d 76 00             	lea    0x0(%esi),%esi

000122b0 <print_asm_3>:
   122b0:	55                   	push   %ebp
   122b1:	57                   	push   %edi
   122b2:	56                   	push   %esi
   122b3:	53                   	push   %ebx
   122b4:	e8 c7 21 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   122b9:	81 c3 47 cd 03 00    	add    $0x3cd47,%ebx
   122bf:	83 ec 1c             	sub    $0x1c,%esp
   122c2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   122c6:	8d 83 f4 24 05 00    	lea    0x524f4(%ebx),%eax
   122cc:	80 38 00             	cmpb   $0x0,(%eax)
   122cf:	0f 84 f4 00 00 00    	je     123c9 <print_asm_3+0x119>
   122d5:	8d 83 a0 33 05 00    	lea    0x533a0(%ebx),%eax
   122db:	83 ec 08             	sub    $0x8,%esp
   122de:	89 44 24 0c          	mov    %eax,0xc(%esp)
   122e2:	50                   	push   %eax
   122e3:	ff 74 24 48          	pushl  0x48(%esp)
   122e7:	e8 54 04 00 00       	call   12740 <parse_operand_address>
   122ec:	8d 83 60 33 05 00    	lea    0x53360(%ebx),%eax
   122f2:	5e                   	pop    %esi
   122f3:	5f                   	pop    %edi
   122f4:	89 44 24 10          	mov    %eax,0x10(%esp)
   122f8:	50                   	push   %eax
   122f9:	ff 74 24 4c          	pushl  0x4c(%esp)
   122fd:	e8 3e 04 00 00       	call   12740 <parse_operand_address>
   12302:	58                   	pop    %eax
   12303:	8d 83 20 33 05 00    	lea    0x53320(%ebx),%eax
   12309:	5a                   	pop    %edx
   1230a:	89 44 24 14          	mov    %eax,0x14(%esp)
   1230e:	50                   	push   %eax
   1230f:	ff 74 24 50          	pushl  0x50(%esp)
   12313:	e8 28 04 00 00       	call   12740 <parse_operand_address>
   12318:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   1231e:	8d 83 de 64 fe ff    	lea    -0x19b22(%ebx),%eax
   12324:	59                   	pop    %ecx
   12325:	5e                   	pop    %esi
   12326:	be 0d 00 00 00       	mov    $0xd,%esi
   1232b:	ff 77 20             	pushl  0x20(%edi)
   1232e:	50                   	push   %eax
   1232f:	e8 2c 1f ff ff       	call   4260 <printf@plt>
   12334:	89 e8                	mov    %ebp,%eax
   12336:	83 c4 10             	add    $0x10,%esp
   12339:	3c 0d                	cmp    $0xd,%al
   1233b:	89 f0                	mov    %esi,%eax
   1233d:	0f 46 c5             	cmovbe %ebp,%eax
   12340:	0f b6 c0             	movzbl %al,%eax
   12343:	89 04 24             	mov    %eax,(%esp)
   12346:	89 e8                	mov    %ebp,%eax
   12348:	84 c0                	test   %al,%al
   1234a:	74 30                	je     1237c <print_asm_3+0xcc>
   1234c:	31 f6                	xor    %esi,%esi
   1234e:	8d ab e7 64 fe ff    	lea    -0x19b19(%ebx),%ebp
   12354:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12358:	83 ec 08             	sub    $0x8,%esp
   1235b:	6a 01                	push   $0x1
   1235d:	8b 47 20             	mov    0x20(%edi),%eax
   12360:	01 f0                	add    %esi,%eax
   12362:	83 c6 01             	add    $0x1,%esi
   12365:	50                   	push   %eax
   12366:	e8 35 c9 00 00       	call   1eca0 <instr_fetch>
   1236b:	5a                   	pop    %edx
   1236c:	59                   	pop    %ecx
   1236d:	50                   	push   %eax
   1236e:	55                   	push   %ebp
   1236f:	e8 ec 1e ff ff       	call   4260 <printf@plt>
   12374:	83 c4 10             	add    $0x10,%esp
   12377:	3b 34 24             	cmp    (%esp),%esi
   1237a:	75 dc                	jne    12358 <print_asm_3+0xa8>
   1237c:	b8 0e 00 00 00       	mov    $0xe,%eax
   12381:	2b 04 24             	sub    (%esp),%eax
   12384:	8d bb e3 64 fe ff    	lea    -0x19b1d(%ebx),%edi
   1238a:	31 ed                	xor    %ebp,%ebp
   1238c:	89 c6                	mov    %eax,%esi
   1238e:	66 90                	xchg   %ax,%ax
   12390:	83 ec 0c             	sub    $0xc,%esp
   12393:	83 c5 01             	add    $0x1,%ebp
   12396:	57                   	push   %edi
   12397:	e8 c4 1e ff ff       	call   4260 <printf@plt>
   1239c:	83 c4 10             	add    $0x10,%esp
   1239f:	39 ee                	cmp    %ebp,%esi
   123a1:	75 ed                	jne    12390 <print_asm_3+0xe0>
   123a3:	83 ec 08             	sub    $0x8,%esp
   123a6:	8d 83 09 65 fe ff    	lea    -0x19af7(%ebx),%eax
   123ac:	ff 74 24 14          	pushl  0x14(%esp)
   123b0:	ff 74 24 14          	pushl  0x14(%esp)
   123b4:	ff 74 24 14          	pushl  0x14(%esp)
   123b8:	ff 74 24 48          	pushl  0x48(%esp)
   123bc:	ff 74 24 48          	pushl  0x48(%esp)
   123c0:	50                   	push   %eax
   123c1:	e8 9a 1e ff ff       	call   4260 <printf@plt>
   123c6:	83 c4 20             	add    $0x20,%esp
   123c9:	83 c4 1c             	add    $0x1c,%esp
   123cc:	5b                   	pop    %ebx
   123cd:	5e                   	pop    %esi
   123ce:	5f                   	pop    %edi
   123cf:	5d                   	pop    %ebp
   123d0:	c3                   	ret    
   123d1:	66 90                	xchg   %ax,%ax
   123d3:	66 90                	xchg   %ax,%ax
   123d5:	66 90                	xchg   %ax,%ax
   123d7:	66 90                	xchg   %ax,%ax
   123d9:	66 90                	xchg   %ax,%ax
   123db:	66 90                	xchg   %ax,%ax
   123dd:	66 90                	xchg   %ax,%ax
   123df:	90                   	nop

000123e0 <operand_read>:
   123e0:	56                   	push   %esi
   123e1:	53                   	push   %ebx
   123e2:	e8 99 20 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   123e7:	81 c3 19 cc 03 00    	add    $0x3cc19,%ebx
   123ed:	83 ec 04             	sub    $0x4,%esp
   123f0:	8b 74 24 10          	mov    0x10(%esp),%esi
   123f4:	8b 06                	mov    (%esi),%eax
   123f6:	83 f8 04             	cmp    $0x4,%eax
   123f9:	0f 87 39 01 00 00    	ja     12538 <.L8+0x78>
   123ff:	8b 8c 83 54 66 fe ff 	mov    -0x199ac(%ebx,%eax,4),%ecx
   12406:	01 d9                	add    %ebx,%ecx
   12408:	ff e1                	jmp    *%ecx
   1240a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012410 <.L5>:
   12410:	8b 46 04             	mov    0x4(%esi),%eax
   12413:	85 c0                	test   %eax,%eax
   12415:	0f 85 fd 00 00 00    	jne    12518 <.L8+0x58>
   1241b:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   12421:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax
   12427:	89 46 0c             	mov    %eax,0xc(%esi)
   1242a:	8b 46 10             	mov    0x10(%esi),%eax
   1242d:	8d 76 00             	lea    0x0(%esi),%esi
   12430:	83 f8 10             	cmp    $0x10,%eax
   12433:	74 30                	je     12465 <.L3+0x1d>
   12435:	83 f8 20             	cmp    $0x20,%eax
   12438:	0f 85 92 00 00 00    	jne    124d0 <.L8+0x10>
   1243e:	83 c4 04             	add    $0x4,%esp
   12441:	5b                   	pop    %ebx
   12442:	5e                   	pop    %esi
   12443:	c3                   	ret    
   12444:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012448 <.L3>:
   12448:	8b 46 04             	mov    0x4(%esi),%eax
   1244b:	83 c0 03             	add    $0x3,%eax
   1244e:	c1 e0 04             	shl    $0x4,%eax
   12451:	03 83 d4 ff ff ff    	add    -0x2c(%ebx),%eax
   12457:	0f b7 00             	movzwl (%eax),%eax
   1245a:	89 46 0c             	mov    %eax,0xc(%esi)
   1245d:	8b 46 10             	mov    0x10(%esi),%eax
   12460:	83 f8 10             	cmp    $0x10,%eax
   12463:	75 d0                	jne    12435 <.L5+0x25>
   12465:	81 66 0c ff ff 00 00 	andl   $0xffff,0xc(%esi)
   1246c:	83 c4 04             	add    $0x4,%esp
   1246f:	5b                   	pop    %ebx
   12470:	5e                   	pop    %esi
   12471:	c3                   	ret    
   12472:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012478 <.L7>:
   12478:	8b 46 10             	mov    0x10(%esi),%eax
   1247b:	8b 56 04             	mov    0x4(%esi),%edx
   1247e:	83 f8 08             	cmp    $0x8,%eax
   12481:	0f 84 d1 00 00 00    	je     12558 <.L8+0x98>
   12487:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   1248d:	8b 14 91             	mov    (%ecx,%edx,4),%edx
   12490:	89 56 0c             	mov    %edx,0xc(%esi)
   12493:	eb 9b                	jmp    12430 <.L5+0x20>
   12495:	8d 76 00             	lea    0x0(%esi),%esi

00012498 <.L6>:
   12498:	8b 46 10             	mov    0x10(%esi),%eax
   1249b:	83 ec 04             	sub    $0x4,%esp
   1249e:	c1 e8 03             	shr    $0x3,%eax
   124a1:	50                   	push   %eax
   124a2:	0f b6 46 08          	movzbl 0x8(%esi),%eax
   124a6:	50                   	push   %eax
   124a7:	ff 76 04             	pushl  0x4(%esi)
   124aa:	e8 c1 c6 00 00       	call   1eb70 <vaddr_read>
   124af:	83 c4 10             	add    $0x10,%esp
   124b2:	89 46 0c             	mov    %eax,0xc(%esi)
   124b5:	8b 46 10             	mov    0x10(%esi),%eax
   124b8:	e9 73 ff ff ff       	jmp    12430 <.L5+0x20>
   124bd:	8d 76 00             	lea    0x0(%esi),%esi

000124c0 <.L8>:
   124c0:	8b 46 10             	mov    0x10(%esi),%eax
   124c3:	83 ec 04             	sub    $0x4,%esp
   124c6:	c1 e8 03             	shr    $0x3,%eax
   124c9:	50                   	push   %eax
   124ca:	6a 01                	push   $0x1
   124cc:	eb d9                	jmp    124a7 <.L6+0xf>
   124ce:	66 90                	xchg   %ax,%ax
   124d0:	83 f8 08             	cmp    $0x8,%eax
   124d3:	74 33                	je     12508 <.L8+0x48>
   124d5:	0f b6 c0             	movzbl %al,%eax
   124d8:	52                   	push   %edx
   124d9:	52                   	push   %edx
   124da:	50                   	push   %eax
   124db:	8d 83 4c 65 fe ff    	lea    -0x19ab4(%ebx),%eax
   124e1:	50                   	push   %eax
   124e2:	e8 79 1d ff ff       	call   4260 <printf@plt>
   124e7:	8d 83 b8 66 fe ff    	lea    -0x19948(%ebx),%eax
   124ed:	50                   	push   %eax
   124ee:	6a 47                	push   $0x47
   124f0:	8d 83 bd 65 fe ff    	lea    -0x19a43(%ebx),%eax
   124f6:	50                   	push   %eax
   124f7:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   124fd:	50                   	push   %eax
   124fe:	e8 0d 1e ff ff       	call   4310 <__assert_fail@plt>
   12503:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12507:	90                   	nop
   12508:	0f b6 46 0c          	movzbl 0xc(%esi),%eax
   1250c:	89 46 0c             	mov    %eax,0xc(%esi)
   1250f:	83 c4 04             	add    $0x4,%esp
   12512:	5b                   	pop    %ebx
   12513:	5e                   	pop    %esi
   12514:	c3                   	ret    
   12515:	8d 76 00             	lea    0x0(%esi),%esi
   12518:	83 f8 03             	cmp    $0x3,%eax
   1251b:	75 52                	jne    1256f <.L8+0xaf>
   1251d:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   12523:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax
   12529:	89 46 0c             	mov    %eax,0xc(%esi)
   1252c:	8b 46 10             	mov    0x10(%esi),%eax
   1252f:	e9 fc fe ff ff       	jmp    12430 <.L5+0x20>
   12534:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12538:	83 ec 08             	sub    $0x8,%esp
   1253b:	50                   	push   %eax
   1253c:	8d 83 d6 65 fe ff    	lea    -0x19a2a(%ebx),%eax
   12542:	50                   	push   %eax
   12543:	e8 18 1d ff ff       	call   4260 <printf@plt>
   12548:	8b 46 10             	mov    0x10(%esi),%eax
   1254b:	83 c4 10             	add    $0x10,%esp
   1254e:	e9 dd fe ff ff       	jmp    12430 <.L5+0x20>
   12553:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12557:	90                   	nop
   12558:	89 d0                	mov    %edx,%eax
   1255a:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   12560:	c1 ea 02             	shr    $0x2,%edx
   12563:	83 e0 03             	and    $0x3,%eax
   12566:	8d 04 81             	lea    (%ecx,%eax,4),%eax
   12569:	0f b6 04 10          	movzbl (%eax,%edx,1),%eax
   1256d:	eb 9d                	jmp    1250c <.L8+0x4c>
   1256f:	51                   	push   %ecx
   12570:	51                   	push   %ecx
   12571:	50                   	push   %eax
   12572:	8d 83 1c 65 fe ff    	lea    -0x19ae4(%ebx),%eax
   12578:	50                   	push   %eax
   12579:	e8 e2 1c ff ff       	call   4260 <printf@plt>
   1257e:	8d 83 b8 66 fe ff    	lea    -0x19948(%ebx),%eax
   12584:	50                   	push   %eax
   12585:	6a 2c                	push   $0x2c
   12587:	e9 64 ff ff ff       	jmp    124f0 <.L8+0x30>
   1258c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012590 <operand_write>:
   12590:	53                   	push   %ebx
   12591:	e8 ea 1e ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12596:	81 c3 6a ca 03 00    	add    $0x3ca6a,%ebx
   1259c:	83 ec 08             	sub    $0x8,%esp
   1259f:	8b 44 24 10          	mov    0x10(%esp),%eax
   125a3:	8b 10                	mov    (%eax),%edx
   125a5:	83 fa 04             	cmp    $0x4,%edx
   125a8:	0f 87 a2 00 00 00    	ja     12650 <.L37+0x28>
   125ae:	8b 8c 93 68 66 fe ff 	mov    -0x19998(%ebx,%edx,4),%ecx
   125b5:	01 d9                	add    %ebx,%ecx
   125b7:	ff e1                	jmp    *%ecx
   125b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000125c0 <.L36>:
   125c0:	8b 50 04             	mov    0x4(%eax),%edx
   125c3:	85 d2                	test   %edx,%edx
   125c5:	0f 85 a5 00 00 00    	jne    12670 <.L37+0x48>
   125cb:	8b 50 0c             	mov    0xc(%eax),%edx
   125ce:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   125d4:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)
   125da:	83 c4 08             	add    $0x8,%esp
   125dd:	5b                   	pop    %ebx
   125de:	c3                   	ret    
   125df:	90                   	nop

000125e0 <.L34>:
   125e0:	8b 48 04             	mov    0x4(%eax),%ecx
   125e3:	8b 40 0c             	mov    0xc(%eax),%eax
   125e6:	8d 51 03             	lea    0x3(%ecx),%edx
   125e9:	c1 e2 04             	shl    $0x4,%edx
   125ec:	03 93 d4 ff ff ff    	add    -0x2c(%ebx),%edx
   125f2:	66 89 02             	mov    %ax,(%edx)
   125f5:	83 c4 08             	add    $0x8,%esp
   125f8:	5b                   	pop    %ebx
   125f9:	c3                   	ret    
   125fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012600 <.L38>:
   12600:	8b 50 10             	mov    0x10(%eax),%edx
   12603:	83 fa 10             	cmp    $0x10,%edx
   12606:	0f 84 ac 00 00 00    	je     126b8 <.L37+0x90>
   1260c:	83 fa 20             	cmp    $0x20,%edx
   1260f:	75 7f                	jne    12690 <.L37+0x68>
   12611:	8b 50 04             	mov    0x4(%eax),%edx
   12614:	8b 48 0c             	mov    0xc(%eax),%ecx
   12617:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1261d:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
   12620:	eb b8                	jmp    125da <.L36+0x1a>
   12622:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012628 <.L37>:
   12628:	ff 70 0c             	pushl  0xc(%eax)
   1262b:	8b 50 10             	mov    0x10(%eax),%edx
   1262e:	c1 ea 03             	shr    $0x3,%edx
   12631:	52                   	push   %edx
   12632:	0f b6 50 08          	movzbl 0x8(%eax),%edx
   12636:	52                   	push   %edx
   12637:	ff 70 04             	pushl  0x4(%eax)
   1263a:	e8 b1 c5 00 00       	call   1ebf0 <vaddr_write>
   1263f:	83 c4 10             	add    $0x10,%esp
   12642:	83 c4 08             	add    $0x8,%esp
   12645:	5b                   	pop    %ebx
   12646:	c3                   	ret    
   12647:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1264e:	66 90                	xchg   %ax,%ax
   12650:	83 ec 08             	sub    $0x8,%esp
   12653:	8d 83 d6 65 fe ff    	lea    -0x19a2a(%ebx),%eax
   12659:	52                   	push   %edx
   1265a:	50                   	push   %eax
   1265b:	e8 00 1c ff ff       	call   4260 <printf@plt>
   12660:	83 c4 10             	add    $0x10,%esp
   12663:	83 c4 08             	add    $0x8,%esp
   12666:	5b                   	pop    %ebx
   12667:	c3                   	ret    
   12668:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1266f:	90                   	nop
   12670:	83 fa 03             	cmp    $0x3,%edx
   12673:	0f 85 a1 00 00 00    	jne    1271a <.L39+0x2b>
   12679:	8b 50 0c             	mov    0xc(%eax),%edx
   1267c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   12682:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)
   12688:	e9 4d ff ff ff       	jmp    125da <.L36+0x1a>
   1268d:	8d 76 00             	lea    0x0(%esi),%esi
   12690:	83 fa 08             	cmp    $0x8,%edx
   12693:	74 3b                	je     126d0 <.L37+0xa8>
   12695:	0f b6 d2             	movzbl %dl,%edx
   12698:	8d 83 ef 65 fe ff    	lea    -0x19a11(%ebx),%eax
   1269e:	51                   	push   %ecx
   1269f:	51                   	push   %ecx
   126a0:	52                   	push   %edx
   126a1:	50                   	push   %eax
   126a2:	e8 b9 1b ff ff       	call   4260 <printf@plt>
   126a7:	8d 83 a8 66 fe ff    	lea    -0x19958(%ebx),%eax
   126ad:	50                   	push   %eax
   126ae:	6a 65                	push   $0x65
   126b0:	eb 55                	jmp    12707 <.L39+0x18>
   126b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   126b8:	8b 50 04             	mov    0x4(%eax),%edx
   126bb:	8b 48 0c             	mov    0xc(%eax),%ecx
   126be:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   126c4:	66 89 0c 90          	mov    %cx,(%eax,%edx,4)
   126c8:	e9 0d ff ff ff       	jmp    125da <.L36+0x1a>
   126cd:	8d 76 00             	lea    0x0(%esi),%esi
   126d0:	8b 48 04             	mov    0x4(%eax),%ecx
   126d3:	8b 40 0c             	mov    0xc(%eax),%eax
   126d6:	89 ca                	mov    %ecx,%edx
   126d8:	c1 e9 02             	shr    $0x2,%ecx
   126db:	83 e2 03             	and    $0x3,%edx
   126de:	c1 e2 02             	shl    $0x2,%edx
   126e1:	03 93 d4 ff ff ff    	add    -0x2c(%ebx),%edx
   126e7:	88 04 0a             	mov    %al,(%edx,%ecx,1)
   126ea:	e9 eb fe ff ff       	jmp    125da <.L36+0x1a>

000126ef <.L39>:
   126ef:	83 ec 0c             	sub    $0xc,%esp
   126f2:	8d 83 6c 65 fe ff    	lea    -0x19a94(%ebx),%eax
   126f8:	50                   	push   %eax
   126f9:	e8 b2 1b ff ff       	call   42b0 <puts@plt>
   126fe:	8d 83 a8 66 fe ff    	lea    -0x19958(%ebx),%eax
   12704:	50                   	push   %eax
   12705:	6a 6b                	push   $0x6b
   12707:	8d 83 bd 65 fe ff    	lea    -0x19a43(%ebx),%eax
   1270d:	50                   	push   %eax
   1270e:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   12714:	50                   	push   %eax
   12715:	e8 f6 1b ff ff       	call   4310 <__assert_fail@plt>
   1271a:	50                   	push   %eax
   1271b:	50                   	push   %eax
   1271c:	8d 83 90 65 fe ff    	lea    -0x19a70(%ebx),%eax
   12722:	52                   	push   %edx
   12723:	50                   	push   %eax
   12724:	e8 37 1b ff ff       	call   4260 <printf@plt>
   12729:	8d 83 a8 66 fe ff    	lea    -0x19958(%ebx),%eax
   1272f:	50                   	push   %eax
   12730:	6a 7c                	push   $0x7c
   12732:	eb d3                	jmp    12707 <.L39+0x18>
   12734:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1273b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1273f:	90                   	nop

00012740 <parse_operand_address>:
   12740:	55                   	push   %ebp
   12741:	31 c0                	xor    %eax,%eax
   12743:	b9 09 00 00 00       	mov    $0x9,%ecx
   12748:	57                   	push   %edi
   12749:	56                   	push   %esi
   1274a:	53                   	push   %ebx
   1274b:	e8 30 1d ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12750:	81 c3 b0 c8 03 00    	add    $0x3c8b0,%ebx
   12756:	83 ec 4c             	sub    $0x4c,%esp
   12759:	8b 74 24 60          	mov    0x60(%esp),%esi
   1275d:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   12761:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   12768:	00 
   12769:	f3 ab                	rep stos %eax,%es:(%edi)
   1276b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   12772:	00 
   12773:	8b 06                	mov    (%esi),%eax
   12775:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1277c:	00 
   1277d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12784:	00 
   12785:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1278c:	00 
   1278d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   12794:	00 
   12795:	83 f8 04             	cmp    $0x4,%eax
   12798:	0f 87 62 01 00 00    	ja     12900 <.L59+0x98>
   1279e:	8b 94 83 7c 66 fe ff 	mov    -0x19984(%ebx,%eax,4),%edx
   127a5:	01 da                	add    %ebx,%edx
   127a7:	ff e2                	jmp    *%edx
   127a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000127b0 <.L58>:
   127b0:	83 ec 04             	sub    $0x4,%esp
   127b3:	8d 83 27 66 fe ff    	lea    -0x199d9(%ebx),%eax
   127b9:	ff 76 04             	pushl  0x4(%esi)
   127bc:	50                   	push   %eax
   127bd:	ff 74 24 70          	pushl  0x70(%esp)
   127c1:	e8 2a 19 ff ff       	call   40f0 <sprintf@plt>
   127c6:	83 c4 10             	add    $0x10,%esp
   127c9:	83 c4 4c             	add    $0x4c,%esp
   127cc:	5b                   	pop    %ebx
   127cd:	5e                   	pop    %esi
   127ce:	5f                   	pop    %edi
   127cf:	5d                   	pop    %ebp
   127d0:	c3                   	ret    
   127d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000127d8 <.L56>:
   127d8:	8b 56 04             	mov    0x4(%esi),%edx
   127db:	8d 83 20 05 00 00    	lea    0x520(%ebx),%eax
   127e1:	83 ec 08             	sub    $0x8,%esp
   127e4:	ff 34 90             	pushl  (%eax,%edx,4)
   127e7:	ff 74 24 70          	pushl  0x70(%esp)
   127eb:	e8 10 1b ff ff       	call   4300 <strcpy@plt>
   127f0:	83 c4 10             	add    $0x10,%esp
   127f3:	83 c4 4c             	add    $0x4c,%esp
   127f6:	5b                   	pop    %ebx
   127f7:	5e                   	pop    %esi
   127f8:	5f                   	pop    %edi
   127f9:	5d                   	pop    %ebp
   127fa:	c3                   	ret    
   127fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   127ff:	90                   	nop

00012800 <.L61>:
   12800:	83 ec 0c             	sub    $0xc,%esp
   12803:	56                   	push   %esi
   12804:	e8 d7 fb ff ff       	call   123e0 <operand_read>
   12809:	83 c4 0c             	add    $0xc,%esp
   1280c:	8d 83 21 66 fe ff    	lea    -0x199df(%ebx),%eax
   12812:	ff 76 0c             	pushl  0xc(%esi)
   12815:	50                   	push   %eax
   12816:	ff 74 24 70          	pushl  0x70(%esp)
   1281a:	e8 d1 18 ff ff       	call   40f0 <sprintf@plt>
   1281f:	83 c4 10             	add    $0x10,%esp
   12822:	83 c4 4c             	add    $0x4c,%esp
   12825:	5b                   	pop    %ebx
   12826:	5e                   	pop    %esi
   12827:	5f                   	pop    %edi
   12828:	5d                   	pop    %ebp
   12829:	c3                   	ret    
   1282a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012830 <.L60>:
   12830:	8b 46 10             	mov    0x10(%esi),%eax
   12833:	83 f8 10             	cmp    $0x10,%eax
   12836:	0f 84 1c 01 00 00    	je     12958 <.L59+0xf0>
   1283c:	83 f8 20             	cmp    $0x20,%eax
   1283f:	0f 85 db 00 00 00    	jne    12920 <.L59+0xb8>
   12845:	8b 56 04             	mov    0x4(%esi),%edx
   12848:	8d 83 80 05 00 00    	lea    0x580(%ebx),%eax
   1284e:	83 ec 08             	sub    $0x8,%esp
   12851:	ff 34 90             	pushl  (%eax,%edx,4)
   12854:	ff 74 24 70          	pushl  0x70(%esp)
   12858:	e8 a3 1a ff ff       	call   4300 <strcpy@plt>
   1285d:	83 c4 10             	add    $0x10,%esp
   12860:	e9 64 ff ff ff       	jmp    127c9 <.L58+0x19>
   12865:	8d 76 00             	lea    0x0(%esi),%esi

00012868 <.L59>:
   12868:	8b 46 14             	mov    0x14(%esi),%eax
   1286b:	8d 7c 24 04          	lea    0x4(%esp),%edi
   1286f:	83 f8 ff             	cmp    $0xffffffff,%eax
   12872:	74 2e                	je     128a2 <.L59+0x3a>
   12874:	89 c1                	mov    %eax,%ecx
   12876:	c1 f9 1f             	sar    $0x1f,%ecx
   12879:	89 ca                	mov    %ecx,%edx
   1287b:	31 c2                	xor    %eax,%edx
   1287d:	29 ca                	sub    %ecx,%edx
   1287f:	85 c0                	test   %eax,%eax
   12881:	8d 8b 9a 54 fe ff    	lea    -0x1ab66(%ebx),%ecx
   12887:	8d 83 06 66 fe ff    	lea    -0x199fa(%ebx),%eax
   1288d:	52                   	push   %edx
   1288e:	0f 49 c1             	cmovns %ecx,%eax
   12891:	50                   	push   %eax
   12892:	8d 83 2e 66 fe ff    	lea    -0x199d2(%ebx),%eax
   12898:	50                   	push   %eax
   12899:	57                   	push   %edi
   1289a:	e8 51 18 ff ff       	call   40f0 <sprintf@plt>
   1289f:	83 c4 10             	add    $0x10,%esp
   128a2:	8b 46 18             	mov    0x18(%esi),%eax
   128a5:	8b 56 1c             	mov    0x1c(%esi),%edx
   128a8:	83 f8 ff             	cmp    $0xffffffff,%eax
   128ab:	0f 84 17 01 00 00    	je     129c8 <.L59+0x160>
   128b1:	8d 8b 80 05 00 00    	lea    0x580(%ebx),%ecx
   128b7:	8b 04 81             	mov    (%ecx,%eax,4),%eax
   128ba:	83 fa ff             	cmp    $0xffffffff,%edx
   128bd:	74 0b                	je     128ca <.L59+0x62>
   128bf:	8b 76 20             	mov    0x20(%esi),%esi
   128c2:	85 f6                	test   %esi,%esi
   128c4:	0f 85 d6 00 00 00    	jne    129a0 <.L59+0x138>
   128ca:	83 ec 04             	sub    $0x4,%esp
   128cd:	50                   	push   %eax
   128ce:	8d 83 35 66 fe ff    	lea    -0x199cb(%ebx),%eax
   128d4:	50                   	push   %eax
   128d5:	8d 6c 24 24          	lea    0x24(%esp),%ebp
   128d9:	55                   	push   %ebp
   128da:	e8 11 18 ff ff       	call   40f0 <sprintf@plt>
   128df:	83 c4 10             	add    $0x10,%esp
   128e2:	8d 83 4e 66 fe ff    	lea    -0x199b2(%ebx),%eax
   128e8:	55                   	push   %ebp
   128e9:	57                   	push   %edi
   128ea:	50                   	push   %eax
   128eb:	ff 74 24 70          	pushl  0x70(%esp)
   128ef:	e8 fc 17 ff ff       	call   40f0 <sprintf@plt>
   128f4:	83 c4 10             	add    $0x10,%esp
   128f7:	83 c4 4c             	add    $0x4c,%esp
   128fa:	5b                   	pop    %ebx
   128fb:	5e                   	pop    %esi
   128fc:	5f                   	pop    %edi
   128fd:	5d                   	pop    %ebp
   128fe:	c3                   	ret    
   128ff:	90                   	nop
   12900:	83 ec 08             	sub    $0x8,%esp
   12903:	50                   	push   %eax
   12904:	8d 83 d6 65 fe ff    	lea    -0x19a2a(%ebx),%eax
   1290a:	50                   	push   %eax
   1290b:	e8 50 19 ff ff       	call   4260 <printf@plt>
   12910:	83 c4 10             	add    $0x10,%esp
   12913:	83 c4 4c             	add    $0x4c,%esp
   12916:	5b                   	pop    %ebx
   12917:	5e                   	pop    %esi
   12918:	5f                   	pop    %edi
   12919:	5d                   	pop    %ebp
   1291a:	c3                   	ret    
   1291b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1291f:	90                   	nop
   12920:	83 f8 08             	cmp    $0x8,%eax
   12923:	74 5b                	je     12980 <.L59+0x118>
   12925:	52                   	push   %edx
   12926:	52                   	push   %edx
   12927:	50                   	push   %eax
   12928:	8d 83 08 66 fe ff    	lea    -0x199f8(%ebx),%eax
   1292e:	50                   	push   %eax
   1292f:	e8 2c 19 ff ff       	call   4260 <printf@plt>
   12934:	8d 83 90 66 fe ff    	lea    -0x19970(%ebx),%eax
   1293a:	50                   	push   %eax
   1293b:	8d 83 bd 65 fe ff    	lea    -0x19a43(%ebx),%eax
   12941:	68 9f 00 00 00       	push   $0x9f
   12946:	50                   	push   %eax
   12947:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   1294d:	50                   	push   %eax
   1294e:	e8 bd 19 ff ff       	call   4310 <__assert_fail@plt>
   12953:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12957:	90                   	nop
   12958:	8b 56 04             	mov    0x4(%esi),%edx
   1295b:	8d 83 60 05 00 00    	lea    0x560(%ebx),%eax
   12961:	83 ec 08             	sub    $0x8,%esp
   12964:	ff 34 90             	pushl  (%eax,%edx,4)
   12967:	ff 74 24 70          	pushl  0x70(%esp)
   1296b:	e8 90 19 ff ff       	call   4300 <strcpy@plt>
   12970:	83 c4 10             	add    $0x10,%esp
   12973:	e9 51 fe ff ff       	jmp    127c9 <.L58+0x19>
   12978:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1297f:	90                   	nop
   12980:	8b 56 04             	mov    0x4(%esi),%edx
   12983:	8d 83 40 05 00 00    	lea    0x540(%ebx),%eax
   12989:	83 ec 08             	sub    $0x8,%esp
   1298c:	ff 34 90             	pushl  (%eax,%edx,4)
   1298f:	ff 74 24 70          	pushl  0x70(%esp)
   12993:	e8 68 19 ff ff       	call   4300 <strcpy@plt>
   12998:	83 c4 10             	add    $0x10,%esp
   1299b:	e9 29 fe ff ff       	jmp    127c9 <.L58+0x19>
   129a0:	83 ec 0c             	sub    $0xc,%esp
   129a3:	56                   	push   %esi
   129a4:	ff 34 91             	pushl  (%ecx,%edx,4)
   129a7:	50                   	push   %eax
   129a8:	8d 83 43 66 fe ff    	lea    -0x199bd(%ebx),%eax
   129ae:	50                   	push   %eax
   129af:	8d 6c 24 34          	lea    0x34(%esp),%ebp
   129b3:	55                   	push   %ebp
   129b4:	e8 37 17 ff ff       	call   40f0 <sprintf@plt>
   129b9:	83 c4 20             	add    $0x20,%esp
   129bc:	e9 21 ff ff ff       	jmp    128e2 <.L59+0x7a>
   129c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   129c8:	8d 6c 24 18          	lea    0x18(%esp),%ebp
   129cc:	83 fa ff             	cmp    $0xffffffff,%edx
   129cf:	0f 84 0d ff ff ff    	je     128e2 <.L59+0x7a>
   129d5:	8d 83 80 05 00 00    	lea    0x580(%ebx),%eax
   129db:	ff 76 20             	pushl  0x20(%esi)
   129de:	ff 34 90             	pushl  (%eax,%edx,4)
   129e1:	8d 83 3a 66 fe ff    	lea    -0x199c6(%ebx),%eax
   129e7:	50                   	push   %eax
   129e8:	55                   	push   %ebp
   129e9:	e8 02 17 ff ff       	call   40f0 <sprintf@plt>
   129ee:	83 c4 10             	add    $0x10,%esp
   129f1:	e9 ec fe ff ff       	jmp    128e2 <.L59+0x7a>
   129f6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   129fd:	8d 76 00             	lea    0x0(%esi),%esi

00012a00 <clear_operand_mem_addr>:
   12a00:	8b 44 24 04          	mov    0x4(%esp),%eax
   12a04:	c7 40 14 ff ff ff ff 	movl   $0xffffffff,0x14(%eax)
   12a0b:	c7 40 18 ff ff ff ff 	movl   $0xffffffff,0x18(%eax)
   12a12:	c7 40 1c ff ff ff ff 	movl   $0xffffffff,0x1c(%eax)
   12a19:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%eax)
   12a20:	c3                   	ret    
   12a21:	66 90                	xchg   %ax,%ax
   12a23:	66 90                	xchg   %ax,%ax
   12a25:	66 90                	xchg   %ax,%ax
   12a27:	66 90                	xchg   %ax,%ax
   12a29:	66 90                	xchg   %ax,%ax
   12a2b:	66 90                	xchg   %ax,%ax
   12a2d:	66 90                	xchg   %ax,%ax
   12a2f:	90                   	nop

00012a30 <cli>:
   12a30:	53                   	push   %ebx
   12a31:	e8 4a 1a ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12a36:	81 c3 ca c5 03 00    	add    $0x3c5ca,%ebx
   12a3c:	83 ec 0c             	sub    $0xc,%esp
   12a3f:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   12a45:	80 60 25 fd          	andb   $0xfd,0x25(%eax)
   12a49:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   12a4f:	6a 01                	push   $0x1
   12a51:	50                   	push   %eax
   12a52:	8d 83 c5 66 fe ff    	lea    -0x1993b(%ebx),%eax
   12a58:	50                   	push   %eax
   12a59:	e8 62 f5 ff ff       	call   11fc0 <print_asm_0>
   12a5e:	83 c4 18             	add    $0x18,%esp
   12a61:	b8 01 00 00 00       	mov    $0x1,%eax
   12a66:	5b                   	pop    %ebx
   12a67:	c3                   	ret    
   12a68:	66 90                	xchg   %ax,%ax
   12a6a:	66 90                	xchg   %ax,%ax
   12a6c:	66 90                	xchg   %ax,%ax
   12a6e:	66 90                	xchg   %ax,%ax

00012a70 <stos_b>:
   12a70:	56                   	push   %esi
   12a71:	53                   	push   %ebx
   12a72:	e8 09 1a ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12a77:	81 c3 89 c5 03 00    	add    $0x3c589,%ebx
   12a7d:	83 ec 60             	sub    $0x60,%esp
   12a80:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   12a87:	00 
   12a88:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   12a8f:	00 
   12a90:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   12a97:	00 
   12a98:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   12a9e:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   12aa5:	00 
   12aa6:	c6 44 24 40 00       	movb   $0x0,0x40(%esp)
   12aab:	8b 46 1c             	mov    0x1c(%esi),%eax
   12aae:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   12ab5:	00 
   12ab6:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   12aba:	8d 44 24 14          	lea    0x14(%esp),%eax
   12abe:	50                   	push   %eax
   12abf:	e8 1c f9 ff ff       	call   123e0 <operand_read>
   12ac4:	8b 44 24 24          	mov    0x24(%esp),%eax
   12ac8:	89 44 24 48          	mov    %eax,0x48(%esp)
   12acc:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   12ad0:	5a                   	pop    %edx
   12ad1:	8b 56 1c             	mov    0x1c(%esi),%edx
   12ad4:	83 e0 04             	and    $0x4,%eax
   12ad7:	3c 01                	cmp    $0x1,%al
   12ad9:	19 c0                	sbb    %eax,%eax
   12adb:	83 e0 02             	and    $0x2,%eax
   12ade:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax
   12ae2:	89 46 1c             	mov    %eax,0x1c(%esi)
   12ae5:	8d 44 24 38          	lea    0x38(%esp),%eax
   12ae9:	50                   	push   %eax
   12aea:	e8 a1 fa ff ff       	call   12590 <operand_write>
   12aef:	83 c4 0c             	add    $0xc,%esp
   12af2:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   12af8:	6a 01                	push   $0x1
   12afa:	50                   	push   %eax
   12afb:	8d 83 c9 66 fe ff    	lea    -0x19937(%ebx),%eax
   12b01:	50                   	push   %eax
   12b02:	e8 b9 f4 ff ff       	call   11fc0 <print_asm_0>
   12b07:	83 c4 64             	add    $0x64,%esp
   12b0a:	b8 01 00 00 00       	mov    $0x1,%eax
   12b0f:	5b                   	pop    %ebx
   12b10:	5e                   	pop    %esi
   12b11:	c3                   	ret    
   12b12:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   12b19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00012b20 <stos_v>:
   12b20:	57                   	push   %edi
   12b21:	56                   	push   %esi
   12b22:	53                   	push   %ebx
   12b23:	e8 58 19 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12b28:	81 c3 d8 c4 03 00    	add    $0x3c4d8,%ebx
   12b2e:	83 ec 5c             	sub    $0x5c,%esp
   12b31:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   12b38:	00 
   12b39:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   12b40:	00 
   12b41:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   12b48:	00 
   12b49:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   12b4f:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   12b55:	c6 44 24 40 00       	movb   $0x0,0x40(%esp)
   12b5a:	0f b6 07             	movzbl (%edi),%eax
   12b5d:	89 44 24 24          	mov    %eax,0x24(%esp)
   12b61:	89 44 24 48          	mov    %eax,0x48(%esp)
   12b65:	8b 46 1c             	mov    0x1c(%esi),%eax
   12b68:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   12b6c:	8d 44 24 14          	lea    0x14(%esp),%eax
   12b70:	50                   	push   %eax
   12b71:	e8 6a f8 ff ff       	call   123e0 <operand_read>
   12b76:	8b 44 24 24          	mov    0x24(%esp),%eax
   12b7a:	89 44 24 48          	mov    %eax,0x48(%esp)
   12b7e:	83 c4 10             	add    $0x10,%esp
   12b81:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   12b85:	75 41                	jne    12bc8 <stos_v+0xa8>
   12b87:	0f b6 07             	movzbl (%edi),%eax
   12b8a:	c0 e8 03             	shr    $0x3,%al
   12b8d:	0f b6 c0             	movzbl %al,%eax
   12b90:	83 ec 0c             	sub    $0xc,%esp
   12b93:	01 46 1c             	add    %eax,0x1c(%esi)
   12b96:	8d 44 24 38          	lea    0x38(%esp),%eax
   12b9a:	50                   	push   %eax
   12b9b:	e8 f0 f9 ff ff       	call   12590 <operand_write>
   12ba0:	83 c4 0c             	add    $0xc,%esp
   12ba3:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   12ba9:	6a 01                	push   $0x1
   12bab:	50                   	push   %eax
   12bac:	8d 83 c9 66 fe ff    	lea    -0x19937(%ebx),%eax
   12bb2:	50                   	push   %eax
   12bb3:	e8 08 f4 ff ff       	call   11fc0 <print_asm_0>
   12bb8:	83 c4 60             	add    $0x60,%esp
   12bbb:	b8 01 00 00 00       	mov    $0x1,%eax
   12bc0:	5b                   	pop    %ebx
   12bc1:	5e                   	pop    %esi
   12bc2:	5f                   	pop    %edi
   12bc3:	c3                   	ret    
   12bc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12bc8:	0f b6 07             	movzbl (%edi),%eax
   12bcb:	c1 f8 03             	sar    $0x3,%eax
   12bce:	f7 d8                	neg    %eax
   12bd0:	eb be                	jmp    12b90 <stos_v+0x70>
   12bd2:	66 90                	xchg   %ax,%ax
   12bd4:	66 90                	xchg   %ax,%ax
   12bd6:	66 90                	xchg   %ax,%ax
   12bd8:	66 90                	xchg   %ax,%ax
   12bda:	66 90                	xchg   %ax,%ax
   12bdc:	66 90                	xchg   %ax,%ax
   12bde:	66 90                	xchg   %ax,%ax

00012be0 <instr_execute_2op>:
   12be0:	57                   	push   %edi
   12be1:	56                   	push   %esi
   12be2:	53                   	push   %ebx
   12be3:	e8 98 18 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12be8:	81 c3 18 c4 03 00    	add    $0x3c418,%ebx
   12bee:	83 ec 0c             	sub    $0xc,%esp
   12bf1:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   12bf7:	57                   	push   %edi
   12bf8:	e8 e3 f7 ff ff       	call   123e0 <operand_read>
   12bfd:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   12c03:	89 34 24             	mov    %esi,(%esp)
   12c06:	e8 d5 f7 ff ff       	call   123e0 <operand_read>
   12c0b:	8b 46 0c             	mov    0xc(%esi),%eax
   12c0e:	8b 57 0c             	mov    0xc(%edi),%edx
   12c11:	89 3c 24             	mov    %edi,(%esp)
   12c14:	89 56 0c             	mov    %edx,0xc(%esi)
   12c17:	89 47 0c             	mov    %eax,0xc(%edi)
   12c1a:	e8 71 f9 ff ff       	call   12590 <operand_write>
   12c1f:	89 34 24             	mov    %esi,(%esp)
   12c22:	e8 69 f9 ff ff       	call   12590 <operand_write>
   12c27:	83 c4 10             	add    $0x10,%esp
   12c2a:	5b                   	pop    %ebx
   12c2b:	5e                   	pop    %esi
   12c2c:	5f                   	pop    %edi
   12c2d:	c3                   	ret    
   12c2e:	66 90                	xchg   %ax,%ax

00012c30 <xcng_r2rm_b>:
   12c30:	55                   	push   %ebp
   12c31:	57                   	push   %edi
   12c32:	56                   	push   %esi
   12c33:	53                   	push   %ebx
   12c34:	e8 47 18 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12c39:	81 c3 c7 c3 03 00    	add    $0x3c3c7,%ebx
   12c3f:	83 ec 10             	sub    $0x10,%esp
   12c42:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   12c48:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   12c4e:	56                   	push   %esi
   12c4f:	57                   	push   %edi
   12c50:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   12c54:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   12c5b:	83 c0 01             	add    $0x1,%eax
   12c5e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   12c65:	50                   	push   %eax
   12c66:	e8 35 f2 ff ff       	call   11ea0 <modrm_r_rm>
   12c6b:	8b 4e 10             	mov    0x10(%esi),%ecx
   12c6e:	83 c4 10             	add    $0x10,%esp
   12c71:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   12c77:	8d 68 01             	lea    0x1(%eax),%ebp
   12c7a:	89 e8                	mov    %ebp,%eax
   12c7c:	0f b6 c0             	movzbl %al,%eax
   12c7f:	83 f9 08             	cmp    $0x8,%ecx
   12c82:	74 12                	je     12c96 <xcng_r2rm_b+0x66>
   12c84:	83 f9 10             	cmp    $0x10,%ecx
   12c87:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   12c8d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   12c93:	0f 45 d1             	cmovne %ecx,%edx
   12c96:	83 ec 0c             	sub    $0xc,%esp
   12c99:	56                   	push   %esi
   12c9a:	57                   	push   %edi
   12c9b:	50                   	push   %eax
   12c9c:	8d 83 ce 66 fe ff    	lea    -0x19932(%ebx),%eax
   12ca2:	52                   	push   %edx
   12ca3:	50                   	push   %eax
   12ca4:	e8 f7 f4 ff ff       	call   121a0 <print_asm_2>
   12ca9:	83 c4 20             	add    $0x20,%esp
   12cac:	e8 2f ff ff ff       	call   12be0 <instr_execute_2op>
   12cb1:	83 c4 0c             	add    $0xc,%esp
   12cb4:	89 e8                	mov    %ebp,%eax
   12cb6:	5b                   	pop    %ebx
   12cb7:	5e                   	pop    %esi
   12cb8:	5f                   	pop    %edi
   12cb9:	5d                   	pop    %ebp
   12cba:	c3                   	ret    
   12cbb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12cbf:	90                   	nop

00012cc0 <xcng_r2rm_v>:
   12cc0:	55                   	push   %ebp
   12cc1:	57                   	push   %edi
   12cc2:	56                   	push   %esi
   12cc3:	53                   	push   %ebx
   12cc4:	e8 b7 17 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12cc9:	81 c3 37 c3 03 00    	add    $0x3c337,%ebx
   12ccf:	83 ec 10             	sub    $0x10,%esp
   12cd2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   12cd8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   12cde:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   12ce4:	0f b6 00             	movzbl (%eax),%eax
   12ce7:	56                   	push   %esi
   12ce8:	57                   	push   %edi
   12ce9:	89 46 10             	mov    %eax,0x10(%esi)
   12cec:	89 47 10             	mov    %eax,0x10(%edi)
   12cef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   12cf3:	83 c0 01             	add    $0x1,%eax
   12cf6:	50                   	push   %eax
   12cf7:	e8 a4 f1 ff ff       	call   11ea0 <modrm_r_rm>
   12cfc:	8b 4e 10             	mov    0x10(%esi),%ecx
   12cff:	83 c4 10             	add    $0x10,%esp
   12d02:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   12d08:	8d 68 01             	lea    0x1(%eax),%ebp
   12d0b:	89 e8                	mov    %ebp,%eax
   12d0d:	0f b6 c0             	movzbl %al,%eax
   12d10:	83 f9 08             	cmp    $0x8,%ecx
   12d13:	74 12                	je     12d27 <xcng_r2rm_v+0x67>
   12d15:	83 f9 10             	cmp    $0x10,%ecx
   12d18:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   12d1e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   12d24:	0f 45 d1             	cmovne %ecx,%edx
   12d27:	83 ec 0c             	sub    $0xc,%esp
   12d2a:	56                   	push   %esi
   12d2b:	57                   	push   %edi
   12d2c:	50                   	push   %eax
   12d2d:	8d 83 ce 66 fe ff    	lea    -0x19932(%ebx),%eax
   12d33:	52                   	push   %edx
   12d34:	50                   	push   %eax
   12d35:	e8 66 f4 ff ff       	call   121a0 <print_asm_2>
   12d3a:	83 c4 20             	add    $0x20,%esp
   12d3d:	e8 9e fe ff ff       	call   12be0 <instr_execute_2op>
   12d42:	83 c4 0c             	add    $0xc,%esp
   12d45:	89 e8                	mov    %ebp,%eax
   12d47:	5b                   	pop    %ebx
   12d48:	5e                   	pop    %esi
   12d49:	5f                   	pop    %edi
   12d4a:	5d                   	pop    %ebp
   12d4b:	c3                   	ret    
   12d4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012d50 <xcng_v>:
   12d50:	56                   	push   %esi
   12d51:	53                   	push   %ebx
   12d52:	e8 29 17 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12d57:	81 c3 a9 c2 03 00    	add    $0x3c2a9,%ebx
   12d5d:	83 ec 54             	sub    $0x54,%esp
   12d60:	8d 74 24 08          	lea    0x8(%esp),%esi
   12d64:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%esp)
   12d6b:	00 
   12d6c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   12d73:	00 
   12d74:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
   12d7b:	00 
   12d7c:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   12d82:	0f b6 00             	movzbl (%eax),%eax
   12d85:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   12d89:	89 44 24 18          	mov    %eax,0x18(%esp)
   12d8d:	8b 44 24 64          	mov    0x64(%esp),%eax
   12d91:	83 e0 07             	and    $0x7,%eax
   12d94:	89 44 24 0c          	mov    %eax,0xc(%esp)
   12d98:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   12d9e:	56                   	push   %esi
   12d9f:	6a 01                	push   $0x1
   12da1:	50                   	push   %eax
   12da2:	8d 83 ce 66 fe ff    	lea    -0x19932(%ebx),%eax
   12da8:	50                   	push   %eax
   12da9:	e8 f2 f2 ff ff       	call   120a0 <print_asm_1>
   12dae:	8b 54 24 48          	mov    0x48(%esp),%edx
   12db2:	8b 44 24 24          	mov    0x24(%esp),%eax
   12db6:	89 34 24             	mov    %esi,(%esp)
   12db9:	89 54 24 24          	mov    %edx,0x24(%esp)
   12dbd:	89 44 24 48          	mov    %eax,0x48(%esp)
   12dc1:	e8 ca f7 ff ff       	call   12590 <operand_write>
   12dc6:	58                   	pop    %eax
   12dc7:	8d 44 24 38          	lea    0x38(%esp),%eax
   12dcb:	50                   	push   %eax
   12dcc:	e8 bf f7 ff ff       	call   12590 <operand_write>
   12dd1:	83 c4 64             	add    $0x64,%esp
   12dd4:	b8 01 00 00 00       	mov    $0x1,%eax
   12dd9:	5b                   	pop    %ebx
   12dda:	5e                   	pop    %esi
   12ddb:	c3                   	ret    
   12ddc:	66 90                	xchg   %ax,%ax
   12dde:	66 90                	xchg   %ax,%ax

00012de0 <instr_execute_2op>:
   12de0:	57                   	push   %edi
   12de1:	56                   	push   %esi
   12de2:	53                   	push   %ebx
   12de3:	e8 98 16 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12de8:	81 c3 18 c2 03 00    	add    $0x3c218,%ebx
   12dee:	83 ec 0c             	sub    $0xc,%esp
   12df1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   12df7:	56                   	push   %esi
   12df8:	e8 e3 f5 ff ff       	call   123e0 <operand_read>
   12dfd:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   12e03:	89 3c 24             	mov    %edi,(%esp)
   12e06:	e8 d5 f5 ff ff       	call   123e0 <operand_read>
   12e0b:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   12e11:	83 c4 0c             	add    $0xc,%esp
   12e14:	0f b6 00             	movzbl (%eax),%eax
   12e17:	50                   	push   %eax
   12e18:	ff 77 0c             	pushl  0xc(%edi)
   12e1b:	ff 76 0c             	pushl  0xc(%esi)
   12e1e:	e8 4d cb ff ff       	call   f970 <alu_and>
   12e23:	83 c4 10             	add    $0x10,%esp
   12e26:	5b                   	pop    %ebx
   12e27:	5e                   	pop    %esi
   12e28:	5f                   	pop    %edi
   12e29:	c3                   	ret    
   12e2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012e30 <test_r2rm_b>:
   12e30:	55                   	push   %ebp
   12e31:	57                   	push   %edi
   12e32:	56                   	push   %esi
   12e33:	53                   	push   %ebx
   12e34:	e8 47 16 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12e39:	81 c3 c7 c1 03 00    	add    $0x3c1c7,%ebx
   12e3f:	83 ec 10             	sub    $0x10,%esp
   12e42:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   12e48:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   12e4e:	56                   	push   %esi
   12e4f:	57                   	push   %edi
   12e50:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   12e54:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   12e5b:	83 c0 01             	add    $0x1,%eax
   12e5e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   12e65:	50                   	push   %eax
   12e66:	e8 35 f0 ff ff       	call   11ea0 <modrm_r_rm>
   12e6b:	8b 4e 10             	mov    0x10(%esi),%ecx
   12e6e:	83 c4 10             	add    $0x10,%esp
   12e71:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   12e77:	8d 68 01             	lea    0x1(%eax),%ebp
   12e7a:	89 e8                	mov    %ebp,%eax
   12e7c:	0f b6 c0             	movzbl %al,%eax
   12e7f:	83 f9 08             	cmp    $0x8,%ecx
   12e82:	74 12                	je     12e96 <test_r2rm_b+0x66>
   12e84:	83 f9 10             	cmp    $0x10,%ecx
   12e87:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   12e8d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   12e93:	0f 45 d1             	cmovne %ecx,%edx
   12e96:	83 ec 0c             	sub    $0xc,%esp
   12e99:	56                   	push   %esi
   12e9a:	57                   	push   %edi
   12e9b:	50                   	push   %eax
   12e9c:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   12ea2:	52                   	push   %edx
   12ea3:	50                   	push   %eax
   12ea4:	e8 f7 f2 ff ff       	call   121a0 <print_asm_2>
   12ea9:	83 c4 20             	add    $0x20,%esp
   12eac:	e8 2f ff ff ff       	call   12de0 <instr_execute_2op>
   12eb1:	83 c4 0c             	add    $0xc,%esp
   12eb4:	89 e8                	mov    %ebp,%eax
   12eb6:	5b                   	pop    %ebx
   12eb7:	5e                   	pop    %esi
   12eb8:	5f                   	pop    %edi
   12eb9:	5d                   	pop    %ebp
   12eba:	c3                   	ret    
   12ebb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12ebf:	90                   	nop

00012ec0 <test_r2rm_v>:
   12ec0:	55                   	push   %ebp
   12ec1:	57                   	push   %edi
   12ec2:	56                   	push   %esi
   12ec3:	53                   	push   %ebx
   12ec4:	e8 b7 15 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12ec9:	81 c3 37 c1 03 00    	add    $0x3c137,%ebx
   12ecf:	83 ec 10             	sub    $0x10,%esp
   12ed2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   12ed8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   12ede:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   12ee4:	0f b6 00             	movzbl (%eax),%eax
   12ee7:	56                   	push   %esi
   12ee8:	57                   	push   %edi
   12ee9:	89 46 10             	mov    %eax,0x10(%esi)
   12eec:	89 47 10             	mov    %eax,0x10(%edi)
   12eef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   12ef3:	83 c0 01             	add    $0x1,%eax
   12ef6:	50                   	push   %eax
   12ef7:	e8 a4 ef ff ff       	call   11ea0 <modrm_r_rm>
   12efc:	8b 4e 10             	mov    0x10(%esi),%ecx
   12eff:	83 c4 10             	add    $0x10,%esp
   12f02:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   12f08:	8d 68 01             	lea    0x1(%eax),%ebp
   12f0b:	89 e8                	mov    %ebp,%eax
   12f0d:	0f b6 c0             	movzbl %al,%eax
   12f10:	83 f9 08             	cmp    $0x8,%ecx
   12f13:	74 12                	je     12f27 <test_r2rm_v+0x67>
   12f15:	83 f9 10             	cmp    $0x10,%ecx
   12f18:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   12f1e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   12f24:	0f 45 d1             	cmovne %ecx,%edx
   12f27:	83 ec 0c             	sub    $0xc,%esp
   12f2a:	56                   	push   %esi
   12f2b:	57                   	push   %edi
   12f2c:	50                   	push   %eax
   12f2d:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   12f33:	52                   	push   %edx
   12f34:	50                   	push   %eax
   12f35:	e8 66 f2 ff ff       	call   121a0 <print_asm_2>
   12f3a:	83 c4 20             	add    $0x20,%esp
   12f3d:	e8 9e fe ff ff       	call   12de0 <instr_execute_2op>
   12f42:	83 c4 0c             	add    $0xc,%esp
   12f45:	89 e8                	mov    %ebp,%eax
   12f47:	5b                   	pop    %ebx
   12f48:	5e                   	pop    %esi
   12f49:	5f                   	pop    %edi
   12f4a:	5d                   	pop    %ebp
   12f4b:	c3                   	ret    
   12f4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012f50 <test_i2rm_b>:
   12f50:	55                   	push   %ebp
   12f51:	57                   	push   %edi
   12f52:	56                   	push   %esi
   12f53:	53                   	push   %ebx
   12f54:	e8 27 15 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   12f59:	81 c3 a7 c0 03 00    	add    $0x3c0a7,%ebx
   12f5f:	83 ec 24             	sub    $0x24,%esp
   12f62:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   12f66:	8d 45 01             	lea    0x1(%ebp),%eax
   12f69:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   12f6f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   12f75:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   12f7c:	52                   	push   %edx
   12f7d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   12f84:	89 54 24 18          	mov    %edx,0x18(%esp)
   12f88:	50                   	push   %eax
   12f89:	e8 f2 ef ff ff       	call   11f80 <modrm_rm>
   12f8e:	8b 77 10             	mov    0x10(%edi),%esi
   12f91:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   12f95:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   12f99:	83 c0 01             	add    $0x1,%eax
   12f9c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   12fa2:	83 c4 10             	add    $0x10,%esp
   12fa5:	01 c5                	add    %eax,%ebp
   12fa7:	c1 ee 03             	shr    $0x3,%esi
   12faa:	89 6f 04             	mov    %ebp,0x4(%edi)
   12fad:	01 c6                	add    %eax,%esi
   12faf:	8b 6a 10             	mov    0x10(%edx),%ebp
   12fb2:	89 f0                	mov    %esi,%eax
   12fb4:	0f b6 c8             	movzbl %al,%ecx
   12fb7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   12fbd:	83 fd 08             	cmp    $0x8,%ebp
   12fc0:	74 12                	je     12fd4 <test_i2rm_b+0x84>
   12fc2:	83 fd 10             	cmp    $0x10,%ebp
   12fc5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   12fcb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   12fd1:	0f 45 c5             	cmovne %ebp,%eax
   12fd4:	83 ec 0c             	sub    $0xc,%esp
   12fd7:	52                   	push   %edx
   12fd8:	57                   	push   %edi
   12fd9:	51                   	push   %ecx
   12fda:	50                   	push   %eax
   12fdb:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   12fe1:	50                   	push   %eax
   12fe2:	e8 b9 f1 ff ff       	call   121a0 <print_asm_2>
   12fe7:	83 c4 20             	add    $0x20,%esp
   12fea:	e8 f1 fd ff ff       	call   12de0 <instr_execute_2op>
   12fef:	83 c4 1c             	add    $0x1c,%esp
   12ff2:	89 f0                	mov    %esi,%eax
   12ff4:	5b                   	pop    %ebx
   12ff5:	5e                   	pop    %esi
   12ff6:	5f                   	pop    %edi
   12ff7:	5d                   	pop    %ebp
   12ff8:	c3                   	ret    
   12ff9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013000 <test_i2rm_v>:
   13000:	55                   	push   %ebp
   13001:	57                   	push   %edi
   13002:	56                   	push   %esi
   13003:	53                   	push   %ebx
   13004:	e8 77 14 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13009:	81 c3 f7 bf 03 00    	add    $0x3bff7,%ebx
   1300f:	83 ec 24             	sub    $0x24,%esp
   13012:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   13016:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1301c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   13022:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   13028:	0f b6 00             	movzbl (%eax),%eax
   1302b:	89 42 10             	mov    %eax,0x10(%edx)
   1302e:	52                   	push   %edx
   1302f:	89 47 10             	mov    %eax,0x10(%edi)
   13032:	8d 45 01             	lea    0x1(%ebp),%eax
   13035:	89 54 24 18          	mov    %edx,0x18(%esp)
   13039:	50                   	push   %eax
   1303a:	e8 41 ef ff ff       	call   11f80 <modrm_rm>
   1303f:	8b 77 10             	mov    0x10(%edi),%esi
   13042:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   13046:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1304a:	83 c0 01             	add    $0x1,%eax
   1304d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   13053:	83 c4 10             	add    $0x10,%esp
   13056:	01 c5                	add    %eax,%ebp
   13058:	c1 ee 03             	shr    $0x3,%esi
   1305b:	89 6f 04             	mov    %ebp,0x4(%edi)
   1305e:	01 c6                	add    %eax,%esi
   13060:	8b 6a 10             	mov    0x10(%edx),%ebp
   13063:	89 f0                	mov    %esi,%eax
   13065:	0f b6 c8             	movzbl %al,%ecx
   13068:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1306e:	83 fd 08             	cmp    $0x8,%ebp
   13071:	74 12                	je     13085 <test_i2rm_v+0x85>
   13073:	83 fd 10             	cmp    $0x10,%ebp
   13076:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1307c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   13082:	0f 45 c5             	cmovne %ebp,%eax
   13085:	83 ec 0c             	sub    $0xc,%esp
   13088:	52                   	push   %edx
   13089:	57                   	push   %edi
   1308a:	51                   	push   %ecx
   1308b:	50                   	push   %eax
   1308c:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   13092:	50                   	push   %eax
   13093:	e8 08 f1 ff ff       	call   121a0 <print_asm_2>
   13098:	83 c4 20             	add    $0x20,%esp
   1309b:	e8 40 fd ff ff       	call   12de0 <instr_execute_2op>
   130a0:	83 c4 1c             	add    $0x1c,%esp
   130a3:	89 f0                	mov    %esi,%eax
   130a5:	5b                   	pop    %ebx
   130a6:	5e                   	pop    %esi
   130a7:	5f                   	pop    %edi
   130a8:	5d                   	pop    %ebp
   130a9:	c3                   	ret    
   130aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000130b0 <test_i2a_b>:
   130b0:	53                   	push   %ebx
   130b1:	e8 ca 13 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   130b6:	81 c3 4a bf 03 00    	add    $0x3bf4a,%ebx
   130bc:	83 ec 14             	sub    $0x14,%esp
   130bf:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   130c3:	83 c1 01             	add    $0x1,%ecx
   130c6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   130cc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   130d2:	89 48 04             	mov    %ecx,0x4(%eax)
   130d5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   130dc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   130e3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   130e9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   130ed:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   130f3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   130fa:	52                   	push   %edx
   130fb:	50                   	push   %eax
   130fc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   13102:	6a 02                	push   $0x2
   13104:	50                   	push   %eax
   13105:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   1310b:	50                   	push   %eax
   1310c:	e8 8f f0 ff ff       	call   121a0 <print_asm_2>
   13111:	83 c4 20             	add    $0x20,%esp
   13114:	e8 c7 fc ff ff       	call   12de0 <instr_execute_2op>
   13119:	83 c4 08             	add    $0x8,%esp
   1311c:	b8 02 00 00 00       	mov    $0x2,%eax
   13121:	5b                   	pop    %ebx
   13122:	c3                   	ret    
   13123:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1312a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013130 <test_i2a_v>:
   13130:	55                   	push   %ebp
   13131:	57                   	push   %edi
   13132:	56                   	push   %esi
   13133:	53                   	push   %ebx
   13134:	e8 47 13 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13139:	81 c3 c7 be 03 00    	add    $0x3bec7,%ebx
   1313f:	83 ec 0c             	sub    $0xc,%esp
   13142:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   13148:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1314e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   13154:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1315a:	0f b6 08             	movzbl (%eax),%ecx
   1315d:	8b 44 24 20          	mov    0x20(%esp),%eax
   13161:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   13167:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1316b:	89 cf                	mov    %ecx,%edi
   1316d:	83 c0 01             	add    $0x1,%eax
   13170:	89 4d 10             	mov    %ecx,0x10(%ebp)
   13173:	c1 ef 03             	shr    $0x3,%edi
   13176:	89 4a 10             	mov    %ecx,0x10(%edx)
   13179:	89 42 04             	mov    %eax,0x4(%edx)
   1317c:	83 c7 01             	add    $0x1,%edi
   1317f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   13186:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1318d:	83 f9 08             	cmp    $0x8,%ecx
   13190:	74 12                	je     131a4 <test_i2a_v+0x74>
   13192:	83 f9 10             	cmp    $0x10,%ecx
   13195:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1319b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   131a1:	0f 45 f0             	cmovne %eax,%esi
   131a4:	83 ec 0c             	sub    $0xc,%esp
   131a7:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   131ad:	55                   	push   %ebp
   131ae:	52                   	push   %edx
   131af:	57                   	push   %edi
   131b0:	56                   	push   %esi
   131b1:	50                   	push   %eax
   131b2:	e8 e9 ef ff ff       	call   121a0 <print_asm_2>
   131b7:	83 c4 20             	add    $0x20,%esp
   131ba:	e8 21 fc ff ff       	call   12de0 <instr_execute_2op>
   131bf:	83 c4 0c             	add    $0xc,%esp
   131c2:	89 f8                	mov    %edi,%eax
   131c4:	5b                   	pop    %ebx
   131c5:	5e                   	pop    %esi
   131c6:	5f                   	pop    %edi
   131c7:	5d                   	pop    %ebp
   131c8:	c3                   	ret    
   131c9:	66 90                	xchg   %ax,%ax
   131cb:	66 90                	xchg   %ax,%ax
   131cd:	66 90                	xchg   %ax,%ax
   131cf:	90                   	nop

000131d0 <nop>:
   131d0:	53                   	push   %ebx
   131d1:	e8 aa 12 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   131d6:	81 c3 2a be 03 00    	add    $0x3be2a,%ebx
   131dc:	83 ec 0c             	sub    $0xc,%esp
   131df:	6a 01                	push   $0x1
   131e1:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   131e7:	50                   	push   %eax
   131e8:	8d 83 d8 66 fe ff    	lea    -0x19928(%ebx),%eax
   131ee:	50                   	push   %eax
   131ef:	e8 cc ed ff ff       	call   11fc0 <print_asm_0>
   131f4:	83 c4 18             	add    $0x18,%esp
   131f7:	b8 01 00 00 00       	mov    $0x1,%eax
   131fc:	5b                   	pop    %ebx
   131fd:	c3                   	ret    
   131fe:	66 90                	xchg   %ax,%ax

00013200 <instr_execute_2op>:
   13200:	57                   	push   %edi
   13201:	56                   	push   %esi
   13202:	53                   	push   %ebx
   13203:	e8 78 12 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13208:	81 c3 f8 bd 03 00    	add    $0x3bdf8,%ebx
   1320e:	83 ec 0c             	sub    $0xc,%esp
   13211:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   13217:	57                   	push   %edi
   13218:	e8 c3 f1 ff ff       	call   123e0 <operand_read>
   1321d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   13223:	89 34 24             	mov    %esi,(%esp)
   13226:	e8 b5 f1 ff ff       	call   123e0 <operand_read>
   1322b:	83 c4 0c             	add    $0xc,%esp
   1322e:	ff 76 10             	pushl  0x10(%esi)
   13231:	ff 76 0c             	pushl  0xc(%esi)
   13234:	ff 77 0c             	pushl  0xc(%edi)
   13237:	e8 a4 c9 ff ff       	call   fbe0 <alu_shl>
   1323c:	89 34 24             	mov    %esi,(%esp)
   1323f:	89 46 0c             	mov    %eax,0xc(%esi)
   13242:	e8 49 f3 ff ff       	call   12590 <operand_write>
   13247:	83 c4 10             	add    $0x10,%esp
   1324a:	5b                   	pop    %ebx
   1324b:	5e                   	pop    %esi
   1324c:	5f                   	pop    %edi
   1324d:	c3                   	ret    
   1324e:	66 90                	xchg   %ax,%ax

00013250 <instr_execute_1op>:
   13250:	56                   	push   %esi
   13251:	53                   	push   %ebx
   13252:	e8 29 12 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13257:	81 c3 a9 bd 03 00    	add    $0x3bda9,%ebx
   1325d:	83 ec 10             	sub    $0x10,%esp
   13260:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   13266:	56                   	push   %esi
   13267:	e8 74 f1 ff ff       	call   123e0 <operand_read>
   1326c:	83 c4 0c             	add    $0xc,%esp
   1326f:	ff 76 10             	pushl  0x10(%esi)
   13272:	ff 76 0c             	pushl  0xc(%esi)
   13275:	6a 01                	push   $0x1
   13277:	e8 64 c9 ff ff       	call   fbe0 <alu_shl>
   1327c:	89 34 24             	mov    %esi,(%esp)
   1327f:	89 46 0c             	mov    %eax,0xc(%esi)
   13282:	e8 09 f3 ff ff       	call   12590 <operand_write>
   13287:	83 c4 14             	add    $0x14,%esp
   1328a:	5b                   	pop    %ebx
   1328b:	5e                   	pop    %esi
   1328c:	c3                   	ret    
   1328d:	8d 76 00             	lea    0x0(%esi),%esi

00013290 <shl_i2rm_b>:
   13290:	55                   	push   %ebp
   13291:	57                   	push   %edi
   13292:	56                   	push   %esi
   13293:	53                   	push   %ebx
   13294:	e8 e7 11 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13299:	81 c3 67 bd 03 00    	add    $0x3bd67,%ebx
   1329f:	83 ec 24             	sub    $0x24,%esp
   132a2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   132a6:	8d 45 01             	lea    0x1(%ebp),%eax
   132a9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   132af:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   132b5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   132bc:	52                   	push   %edx
   132bd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   132c4:	89 54 24 18          	mov    %edx,0x18(%esp)
   132c8:	50                   	push   %eax
   132c9:	e8 b2 ec ff ff       	call   11f80 <modrm_rm>
   132ce:	8b 77 10             	mov    0x10(%edi),%esi
   132d1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   132d5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   132d9:	83 c0 01             	add    $0x1,%eax
   132dc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   132e2:	83 c4 10             	add    $0x10,%esp
   132e5:	01 c5                	add    %eax,%ebp
   132e7:	c1 ee 03             	shr    $0x3,%esi
   132ea:	89 6f 04             	mov    %ebp,0x4(%edi)
   132ed:	01 c6                	add    %eax,%esi
   132ef:	8b 6a 10             	mov    0x10(%edx),%ebp
   132f2:	89 f0                	mov    %esi,%eax
   132f4:	0f b6 c8             	movzbl %al,%ecx
   132f7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   132fd:	83 fd 08             	cmp    $0x8,%ebp
   13300:	74 12                	je     13314 <shl_i2rm_b+0x84>
   13302:	83 fd 10             	cmp    $0x10,%ebp
   13305:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1330b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   13311:	0f 45 c5             	cmovne %ebp,%eax
   13314:	83 ec 0c             	sub    $0xc,%esp
   13317:	52                   	push   %edx
   13318:	57                   	push   %edi
   13319:	51                   	push   %ecx
   1331a:	50                   	push   %eax
   1331b:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   13321:	50                   	push   %eax
   13322:	e8 79 ee ff ff       	call   121a0 <print_asm_2>
   13327:	83 c4 20             	add    $0x20,%esp
   1332a:	e8 d1 fe ff ff       	call   13200 <instr_execute_2op>
   1332f:	83 c4 1c             	add    $0x1c,%esp
   13332:	89 f0                	mov    %esi,%eax
   13334:	5b                   	pop    %ebx
   13335:	5e                   	pop    %esi
   13336:	5f                   	pop    %edi
   13337:	5d                   	pop    %ebp
   13338:	c3                   	ret    
   13339:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00013340 <shl_i2rm_bv>:
   13340:	55                   	push   %ebp
   13341:	57                   	push   %edi
   13342:	56                   	push   %esi
   13343:	53                   	push   %ebx
   13344:	e8 37 11 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13349:	81 c3 b7 bc 03 00    	add    $0x3bcb7,%ebx
   1334f:	83 ec 24             	sub    $0x24,%esp
   13352:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   13356:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1335c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   13362:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   13368:	0f b6 00             	movzbl (%eax),%eax
   1336b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   13372:	89 42 10             	mov    %eax,0x10(%edx)
   13375:	8d 45 01             	lea    0x1(%ebp),%eax
   13378:	52                   	push   %edx
   13379:	89 54 24 18          	mov    %edx,0x18(%esp)
   1337d:	50                   	push   %eax
   1337e:	e8 fd eb ff ff       	call   11f80 <modrm_rm>
   13383:	8b 77 10             	mov    0x10(%edi),%esi
   13386:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1338a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1338e:	83 c0 01             	add    $0x1,%eax
   13391:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   13397:	83 c4 10             	add    $0x10,%esp
   1339a:	01 c5                	add    %eax,%ebp
   1339c:	c1 ee 03             	shr    $0x3,%esi
   1339f:	89 6f 04             	mov    %ebp,0x4(%edi)
   133a2:	01 c6                	add    %eax,%esi
   133a4:	8b 6a 10             	mov    0x10(%edx),%ebp
   133a7:	89 f0                	mov    %esi,%eax
   133a9:	0f b6 c8             	movzbl %al,%ecx
   133ac:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   133b2:	83 fd 08             	cmp    $0x8,%ebp
   133b5:	74 12                	je     133c9 <shl_i2rm_bv+0x89>
   133b7:	83 fd 10             	cmp    $0x10,%ebp
   133ba:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   133c0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   133c6:	0f 45 c5             	cmovne %ebp,%eax
   133c9:	83 ec 0c             	sub    $0xc,%esp
   133cc:	52                   	push   %edx
   133cd:	57                   	push   %edi
   133ce:	51                   	push   %ecx
   133cf:	50                   	push   %eax
   133d0:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   133d6:	50                   	push   %eax
   133d7:	e8 c4 ed ff ff       	call   121a0 <print_asm_2>
   133dc:	83 c4 20             	add    $0x20,%esp
   133df:	e8 1c fe ff ff       	call   13200 <instr_execute_2op>
   133e4:	83 c4 1c             	add    $0x1c,%esp
   133e7:	89 f0                	mov    %esi,%eax
   133e9:	5b                   	pop    %ebx
   133ea:	5e                   	pop    %esi
   133eb:	5f                   	pop    %edi
   133ec:	5d                   	pop    %ebp
   133ed:	c3                   	ret    
   133ee:	66 90                	xchg   %ax,%ax

000133f0 <shl_c2rm_b>:
   133f0:	55                   	push   %ebp
   133f1:	57                   	push   %edi
   133f2:	56                   	push   %esi
   133f3:	53                   	push   %ebx
   133f4:	e8 87 10 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   133f9:	81 c3 07 bc 03 00    	add    $0x3bc07,%ebx
   133ff:	83 ec 14             	sub    $0x14,%esp
   13402:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   13408:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1340e:	57                   	push   %edi
   1340f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   13413:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1341a:	83 c0 01             	add    $0x1,%eax
   1341d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13424:	50                   	push   %eax
   13425:	e8 56 eb ff ff       	call   11f80 <modrm_rm>
   1342a:	8b 4f 10             	mov    0x10(%edi),%ecx
   1342d:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   13433:	83 c4 10             	add    $0x10,%esp
   13436:	8d 68 01             	lea    0x1(%eax),%ebp
   13439:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   13440:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   13446:	89 e8                	mov    %ebp,%eax
   13448:	0f b6 c0             	movzbl %al,%eax
   1344b:	83 f9 08             	cmp    $0x8,%ecx
   1344e:	74 12                	je     13462 <shl_c2rm_b+0x72>
   13450:	83 f9 10             	cmp    $0x10,%ecx
   13453:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   13459:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1345f:	0f 45 d1             	cmovne %ecx,%edx
   13462:	83 ec 0c             	sub    $0xc,%esp
   13465:	57                   	push   %edi
   13466:	56                   	push   %esi
   13467:	50                   	push   %eax
   13468:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   1346e:	52                   	push   %edx
   1346f:	50                   	push   %eax
   13470:	e8 2b ed ff ff       	call   121a0 <print_asm_2>
   13475:	83 c4 20             	add    $0x20,%esp
   13478:	e8 83 fd ff ff       	call   13200 <instr_execute_2op>
   1347d:	83 c4 0c             	add    $0xc,%esp
   13480:	89 e8                	mov    %ebp,%eax
   13482:	5b                   	pop    %ebx
   13483:	5e                   	pop    %esi
   13484:	5f                   	pop    %edi
   13485:	5d                   	pop    %ebp
   13486:	c3                   	ret    
   13487:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1348e:	66 90                	xchg   %ax,%ax

00013490 <shl_c2rm_bv>:
   13490:	55                   	push   %ebp
   13491:	57                   	push   %edi
   13492:	56                   	push   %esi
   13493:	53                   	push   %ebx
   13494:	e8 e7 0f ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13499:	81 c3 67 bb 03 00    	add    $0x3bb67,%ebx
   1349f:	83 ec 14             	sub    $0x14,%esp
   134a2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   134a8:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   134ae:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   134b4:	0f b6 00             	movzbl (%eax),%eax
   134b7:	57                   	push   %edi
   134b8:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   134bf:	89 47 10             	mov    %eax,0x10(%edi)
   134c2:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   134c6:	83 c0 01             	add    $0x1,%eax
   134c9:	50                   	push   %eax
   134ca:	e8 b1 ea ff ff       	call   11f80 <modrm_rm>
   134cf:	8b 4f 10             	mov    0x10(%edi),%ecx
   134d2:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   134d8:	83 c4 10             	add    $0x10,%esp
   134db:	8d 68 01             	lea    0x1(%eax),%ebp
   134de:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   134e5:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   134eb:	89 e8                	mov    %ebp,%eax
   134ed:	0f b6 c0             	movzbl %al,%eax
   134f0:	83 f9 08             	cmp    $0x8,%ecx
   134f3:	74 12                	je     13507 <shl_c2rm_bv+0x77>
   134f5:	83 f9 10             	cmp    $0x10,%ecx
   134f8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   134fe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   13504:	0f 45 d1             	cmovne %ecx,%edx
   13507:	83 ec 0c             	sub    $0xc,%esp
   1350a:	57                   	push   %edi
   1350b:	56                   	push   %esi
   1350c:	50                   	push   %eax
   1350d:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   13513:	52                   	push   %edx
   13514:	50                   	push   %eax
   13515:	e8 86 ec ff ff       	call   121a0 <print_asm_2>
   1351a:	83 c4 20             	add    $0x20,%esp
   1351d:	e8 de fc ff ff       	call   13200 <instr_execute_2op>
   13522:	83 c4 0c             	add    $0xc,%esp
   13525:	89 e8                	mov    %ebp,%eax
   13527:	5b                   	pop    %ebx
   13528:	5e                   	pop    %esi
   13529:	5f                   	pop    %edi
   1352a:	5d                   	pop    %ebp
   1352b:	c3                   	ret    
   1352c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00013530 <shl_rm_b>:
   13530:	55                   	push   %ebp
   13531:	57                   	push   %edi
   13532:	56                   	push   %esi
   13533:	53                   	push   %ebx
   13534:	e8 47 0f ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13539:	81 c3 c7 ba 03 00    	add    $0x3bac7,%ebx
   1353f:	83 ec 14             	sub    $0x14,%esp
   13542:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   13548:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1354e:	56                   	push   %esi
   1354f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   13553:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   1355a:	83 c0 01             	add    $0x1,%eax
   1355d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13564:	50                   	push   %eax
   13565:	e8 16 ea ff ff       	call   11f80 <modrm_rm>
   1356a:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1356d:	83 c4 10             	add    $0x10,%esp
   13570:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   13576:	8d 78 01             	lea    0x1(%eax),%edi
   13579:	89 f8                	mov    %edi,%eax
   1357b:	0f b6 c0             	movzbl %al,%eax
   1357e:	83 f9 08             	cmp    $0x8,%ecx
   13581:	74 12                	je     13595 <shl_rm_b+0x65>
   13583:	83 f9 10             	cmp    $0x10,%ecx
   13586:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1358c:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   13592:	0f 45 d1             	cmovne %ecx,%edx
   13595:	56                   	push   %esi
   13596:	50                   	push   %eax
   13597:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   1359d:	52                   	push   %edx
   1359e:	50                   	push   %eax
   1359f:	e8 fc ea ff ff       	call   120a0 <print_asm_1>
   135a4:	e8 a7 fc ff ff       	call   13250 <instr_execute_1op>
   135a9:	83 c4 1c             	add    $0x1c,%esp
   135ac:	89 f8                	mov    %edi,%eax
   135ae:	5b                   	pop    %ebx
   135af:	5e                   	pop    %esi
   135b0:	5f                   	pop    %edi
   135b1:	5d                   	pop    %ebp
   135b2:	c3                   	ret    
   135b3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   135ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000135c0 <shl_rm_v>:
   135c0:	55                   	push   %ebp
   135c1:	57                   	push   %edi
   135c2:	56                   	push   %esi
   135c3:	53                   	push   %ebx
   135c4:	e8 b7 0e ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   135c9:	81 c3 37 ba 03 00    	add    $0x3ba37,%ebx
   135cf:	83 ec 14             	sub    $0x14,%esp
   135d2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   135d8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   135de:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   135e4:	0f b6 00             	movzbl (%eax),%eax
   135e7:	56                   	push   %esi
   135e8:	89 45 10             	mov    %eax,0x10(%ebp)
   135eb:	89 46 10             	mov    %eax,0x10(%esi)
   135ee:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   135f2:	83 c0 01             	add    $0x1,%eax
   135f5:	50                   	push   %eax
   135f6:	e8 85 e9 ff ff       	call   11f80 <modrm_rm>
   135fb:	8b 4d 10             	mov    0x10(%ebp),%ecx
   135fe:	83 c4 10             	add    $0x10,%esp
   13601:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   13607:	8d 78 01             	lea    0x1(%eax),%edi
   1360a:	89 f8                	mov    %edi,%eax
   1360c:	0f b6 c0             	movzbl %al,%eax
   1360f:	83 f9 08             	cmp    $0x8,%ecx
   13612:	74 12                	je     13626 <shl_rm_v+0x66>
   13614:	83 f9 10             	cmp    $0x10,%ecx
   13617:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1361d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   13623:	0f 45 d1             	cmovne %ecx,%edx
   13626:	56                   	push   %esi
   13627:	50                   	push   %eax
   13628:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   1362e:	52                   	push   %edx
   1362f:	50                   	push   %eax
   13630:	e8 6b ea ff ff       	call   120a0 <print_asm_1>
   13635:	e8 16 fc ff ff       	call   13250 <instr_execute_1op>
   1363a:	83 c4 1c             	add    $0x1c,%esp
   1363d:	89 f8                	mov    %edi,%eax
   1363f:	5b                   	pop    %ebx
   13640:	5e                   	pop    %esi
   13641:	5f                   	pop    %edi
   13642:	5d                   	pop    %ebp
   13643:	c3                   	ret    
   13644:	66 90                	xchg   %ax,%ax
   13646:	66 90                	xchg   %ax,%ax
   13648:	66 90                	xchg   %ax,%ax
   1364a:	66 90                	xchg   %ax,%ax
   1364c:	66 90                	xchg   %ax,%ax
   1364e:	66 90                	xchg   %ax,%ax

00013650 <sign_ext.part.0>:
   13650:	53                   	push   %ebx
   13651:	e8 2a 0e ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13656:	81 c3 aa b9 03 00    	add    $0x3b9aa,%ebx
   1365c:	83 ec 08             	sub    $0x8,%esp
   1365f:	8d 83 dc 66 fe ff    	lea    -0x19924(%ebx),%eax
   13665:	50                   	push   %eax
   13666:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1366c:	6a 2e                	push   $0x2e
   1366e:	50                   	push   %eax
   1366f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   13675:	50                   	push   %eax
   13676:	e8 95 0c ff ff       	call   4310 <__assert_fail@plt>
   1367b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1367f:	90                   	nop

00013680 <imul_rm2r_v>:
   13680:	55                   	push   %ebp
   13681:	57                   	push   %edi
   13682:	56                   	push   %esi
   13683:	53                   	push   %ebx
   13684:	e8 f7 0d ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13689:	81 c3 77 b9 03 00    	add    $0x3b977,%ebx
   1368f:	83 ec 70             	sub    $0x70,%esp
   13692:	8d 7c 24 40          	lea    0x40(%esp),%edi
   13696:	8d ab 84 07 00 00    	lea    0x784(%ebx),%ebp
   1369c:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   136a0:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   136a4:	89 44 24 50          	mov    %eax,0x50(%esp)
   136a8:	57                   	push   %edi
   136a9:	8d 74 24 20          	lea    0x20(%esp),%esi
   136ad:	56                   	push   %esi
   136ae:	8b 84 24 8c 00 00 00 	mov    0x8c(%esp),%eax
   136b5:	83 c0 01             	add    $0x1,%eax
   136b8:	50                   	push   %eax
   136b9:	e8 e2 e7 ff ff       	call   11ea0 <modrm_r_rm>
   136be:	89 34 24             	mov    %esi,(%esp)
   136c1:	83 c0 01             	add    $0x1,%eax
   136c4:	89 44 24 18          	mov    %eax,0x18(%esp)
   136c8:	e8 13 ed ff ff       	call   123e0 <operand_read>
   136cd:	89 3c 24             	mov    %edi,(%esp)
   136d0:	e8 0b ed ff ff       	call   123e0 <operand_read>
   136d5:	0f b6 6d 00          	movzbl 0x0(%ebp),%ebp
   136d9:	8b 4c 24 34          	mov    0x34(%esp),%ecx
   136dd:	83 c4 10             	add    $0x10,%esp
   136e0:	8d 55 f8             	lea    -0x8(%ebp),%edx
   136e3:	89 e8                	mov    %ebp,%eax
   136e5:	81 e2 f7 00 00 00    	and    $0xf7,%edx
   136eb:	74 09                	je     136f6 <imul_rm2r_v+0x76>
   136ed:	83 fd 20             	cmp    $0x20,%ebp
   136f0:	0f 85 7f 00 00 00    	jne    13775 <imul_rm2r_v+0xf5>
   136f6:	8b 54 24 48          	mov    0x48(%esp),%edx
   136fa:	3c 08                	cmp    $0x8,%al
   136fc:	74 72                	je     13770 <imul_rm2r_v+0xf0>
   136fe:	3c 10                	cmp    $0x10,%al
   13700:	74 5e                	je     13760 <imul_rm2r_v+0xe0>
   13702:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   13706:	3c 08                	cmp    $0x8,%al
   13708:	74 61                	je     1376b <imul_rm2r_v+0xeb>
   1370a:	0f bf ca             	movswl %dx,%ecx
   1370d:	3c 10                	cmp    $0x10,%al
   1370f:	0f 44 d1             	cmove  %ecx,%edx
   13712:	83 ec 04             	sub    $0x4,%esp
   13715:	55                   	push   %ebp
   13716:	ff 74 24 14          	pushl  0x14(%esp)
   1371a:	52                   	push   %edx
   1371b:	e8 a0 c0 ff ff       	call   f7c0 <alu_imul>
   13720:	89 34 24             	mov    %esi,(%esp)
   13723:	89 44 24 34          	mov    %eax,0x34(%esp)
   13727:	e8 64 ee ff ff       	call   12590 <operand_write>
   1372c:	89 34 24             	mov    %esi,(%esp)
   1372f:	57                   	push   %edi
   13730:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
   13735:	50                   	push   %eax
   13736:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1373c:	50                   	push   %eax
   1373d:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   13743:	50                   	push   %eax
   13744:	e8 57 ea ff ff       	call   121a0 <print_asm_2>
   13749:	8b 44 24 28          	mov    0x28(%esp),%eax
   1374d:	81 c4 8c 00 00 00    	add    $0x8c,%esp
   13753:	5b                   	pop    %ebx
   13754:	5e                   	pop    %esi
   13755:	5f                   	pop    %edi
   13756:	5d                   	pop    %ebp
   13757:	c3                   	ret    
   13758:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1375f:	90                   	nop
   13760:	0f bf c9             	movswl %cx,%ecx
   13763:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   13767:	3c 08                	cmp    $0x8,%al
   13769:	75 9f                	jne    1370a <imul_rm2r_v+0x8a>
   1376b:	0f be d2             	movsbl %dl,%edx
   1376e:	eb a2                	jmp    13712 <imul_rm2r_v+0x92>
   13770:	0f be c9             	movsbl %cl,%ecx
   13773:	eb 8d                	jmp    13702 <imul_rm2r_v+0x82>
   13775:	e8 d6 fe ff ff       	call   13650 <sign_ext.part.0>
   1377a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013780 <imul_rm2a_b>:
   13780:	55                   	push   %ebp
   13781:	57                   	push   %edi
   13782:	56                   	push   %esi
   13783:	53                   	push   %ebx
   13784:	e8 f7 0c ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13789:	81 c3 77 b8 03 00    	add    $0x3b877,%ebx
   1378f:	81 ec 94 00 00 00    	sub    $0x94,%esp
   13795:	8d 7c 24 40          	lea    0x40(%esp),%edi
   13799:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
   137a0:	00 
   137a1:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   137a8:	00 
   137a9:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   137b0:	00 
   137b1:	c7 44 24 50 08 00 00 	movl   $0x8,0x50(%esp)
   137b8:	00 
   137b9:	57                   	push   %edi
   137ba:	8b 84 24 ac 00 00 00 	mov    0xac(%esp),%eax
   137c1:	83 c0 01             	add    $0x1,%eax
   137c4:	50                   	push   %eax
   137c5:	e8 b6 e7 ff ff       	call   11f80 <modrm_rm>
   137ca:	8d 70 01             	lea    0x1(%eax),%esi
   137cd:	58                   	pop    %eax
   137ce:	8d 6c 24 20          	lea    0x20(%esp),%ebp
   137d2:	55                   	push   %ebp
   137d3:	e8 08 ec ff ff       	call   123e0 <operand_read>
   137d8:	89 3c 24             	mov    %edi,(%esp)
   137db:	e8 00 ec ff ff       	call   123e0 <operand_read>
   137e0:	83 c4 0c             	add    $0xc,%esp
   137e3:	6a 08                	push   $0x8
   137e5:	0f be 44 24 28       	movsbl 0x28(%esp),%eax
   137ea:	50                   	push   %eax
   137eb:	0f be 44 24 50       	movsbl 0x50(%esp),%eax
   137f0:	50                   	push   %eax
   137f1:	e8 ca bf ff ff       	call   f7c0 <alu_imul>
   137f6:	c7 44 24 7c 10 00 00 	movl   $0x10,0x7c(%esp)
   137fd:	00 
   137fe:	89 44 24 78          	mov    %eax,0x78(%esp)
   13802:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%esp)
   13809:	00 
   1380a:	c7 44 24 70 00 00 00 	movl   $0x0,0x70(%esp)
   13811:	00 
   13812:	5a                   	pop    %edx
   13813:	8d 44 24 68          	lea    0x68(%esp),%eax
   13817:	50                   	push   %eax
   13818:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1381c:	e8 6f ed ff ff       	call   12590 <operand_write>
   13821:	59                   	pop    %ecx
   13822:	58                   	pop    %eax
   13823:	8b 44 24 14          	mov    0x14(%esp),%eax
   13827:	50                   	push   %eax
   13828:	89 f0                	mov    %esi,%eax
   1382a:	0f b6 c0             	movzbl %al,%eax
   1382d:	55                   	push   %ebp
   1382e:	57                   	push   %edi
   1382f:	50                   	push   %eax
   13830:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   13836:	50                   	push   %eax
   13837:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   1383d:	50                   	push   %eax
   1383e:	e8 6d ea ff ff       	call   122b0 <print_asm_3>
   13843:	81 c4 ac 00 00 00    	add    $0xac,%esp
   13849:	89 f0                	mov    %esi,%eax
   1384b:	5b                   	pop    %ebx
   1384c:	5e                   	pop    %esi
   1384d:	5f                   	pop    %edi
   1384e:	5d                   	pop    %ebp
   1384f:	c3                   	ret    

00013850 <imul_rm2a_v>:
   13850:	55                   	push   %ebp
   13851:	57                   	push   %edi
   13852:	56                   	push   %esi
   13853:	53                   	push   %ebx
   13854:	e8 27 0c ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13859:	81 c3 a7 b7 03 00    	add    $0x3b7a7,%ebx
   1385f:	81 ec b4 00 00 00    	sub    $0xb4,%esp
   13865:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   13869:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
   13870:	00 
   13871:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   13878:	00 
   13879:	8d ab 84 07 00 00    	lea    0x784(%ebx),%ebp
   1387f:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   13883:	89 44 24 28          	mov    %eax,0x28(%esp)
   13887:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   1388b:	57                   	push   %edi
   1388c:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   13893:	83 c0 01             	add    $0x1,%eax
   13896:	50                   	push   %eax
   13897:	e8 e4 e6 ff ff       	call   11f80 <modrm_rm>
   1389c:	8d 70 01             	lea    0x1(%eax),%esi
   1389f:	58                   	pop    %eax
   138a0:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   138a4:	50                   	push   %eax
   138a5:	e8 36 eb ff ff       	call   123e0 <operand_read>
   138aa:	89 3c 24             	mov    %edi,(%esp)
   138ad:	e8 2e eb ff ff       	call   123e0 <operand_read>
   138b2:	89 f0                	mov    %esi,%eax
   138b4:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   138bb:	00 
   138bc:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   138c3:	01 00 00 00 
   138c7:	0f b6 c8             	movzbl %al,%ecx
   138ca:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   138d1:	00 
   138d2:	c7 84 24 90 00 00 00 	movl   $0x2,0x90(%esp)
   138d9:	02 00 00 00 
   138dd:	83 c4 10             	add    $0x10,%esp
   138e0:	80 7d 00 10          	cmpb   $0x10,0x0(%ebp)
   138e4:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   138e8:	0f 84 82 00 00 00    	je     13970 <imul_rm2a_v+0x120>
   138ee:	83 ec 04             	sub    $0x4,%esp
   138f1:	6a 20                	push   $0x20
   138f3:	ff 74 24 24          	pushl  0x24(%esp)
   138f7:	ff 74 24 4c          	pushl  0x4c(%esp)
   138fb:	e8 c0 be ff ff       	call   f7c0 <alu_imul>
   13900:	c7 44 24 78 20 00 00 	movl   $0x20,0x78(%esp)
   13907:	00 
   13908:	c7 84 24 9c 00 00 00 	movl   $0x20,0x9c(%esp)
   1390f:	20 00 00 00 
   13913:	89 44 24 74          	mov    %eax,0x74(%esp)
   13917:	89 94 24 98 00 00 00 	mov    %edx,0x98(%esp)
   1391e:	58                   	pop    %eax
   1391f:	5a                   	pop    %edx
   13920:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   13926:	8d 44 24 60          	lea    0x60(%esp),%eax
   1392a:	50                   	push   %eax
   1392b:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   13932:	89 44 24 14          	mov    %eax,0x14(%esp)
   13936:	55                   	push   %ebp
   13937:	57                   	push   %edi
   13938:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   1393c:	51                   	push   %ecx
   1393d:	52                   	push   %edx
   1393e:	8d 93 8c 70 fe ff    	lea    -0x18f74(%ebx),%edx
   13944:	52                   	push   %edx
   13945:	e8 66 e9 ff ff       	call   122b0 <print_asm_3>
   1394a:	83 c4 20             	add    $0x20,%esp
   1394d:	8b 44 24 08          	mov    0x8(%esp),%eax
   13951:	83 ec 0c             	sub    $0xc,%esp
   13954:	50                   	push   %eax
   13955:	e8 36 ec ff ff       	call   12590 <operand_write>
   1395a:	89 2c 24             	mov    %ebp,(%esp)
   1395d:	e8 2e ec ff ff       	call   12590 <operand_write>
   13962:	81 c4 bc 00 00 00    	add    $0xbc,%esp
   13968:	89 f0                	mov    %esi,%eax
   1396a:	5b                   	pop    %ebx
   1396b:	5e                   	pop    %esi
   1396c:	5f                   	pop    %edi
   1396d:	5d                   	pop    %ebp
   1396e:	c3                   	ret    
   1396f:	90                   	nop
   13970:	83 ec 04             	sub    $0x4,%esp
   13973:	6a 10                	push   $0x10
   13975:	0f bf 44 24 24       	movswl 0x24(%esp),%eax
   1397a:	50                   	push   %eax
   1397b:	0f bf 44 24 4c       	movswl 0x4c(%esp),%eax
   13980:	50                   	push   %eax
   13981:	e8 3a be ff ff       	call   f7c0 <alu_imul>
   13986:	c7 44 24 78 10 00 00 	movl   $0x10,0x78(%esp)
   1398d:	00 
   1398e:	c7 84 24 9c 00 00 00 	movl   $0x10,0x9c(%esp)
   13995:	10 00 00 00 
   13999:	0f b7 d0             	movzwl %ax,%edx
   1399c:	c1 e8 10             	shr    $0x10,%eax
   1399f:	89 54 24 74          	mov    %edx,0x74(%esp)
   139a3:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   139a9:	89 84 24 98 00 00 00 	mov    %eax,0x98(%esp)
   139b0:	59                   	pop    %ecx
   139b1:	5d                   	pop    %ebp
   139b2:	8d 44 24 60          	lea    0x60(%esp),%eax
   139b6:	50                   	push   %eax
   139b7:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   139be:	89 44 24 14          	mov    %eax,0x14(%esp)
   139c2:	55                   	push   %ebp
   139c3:	57                   	push   %edi
   139c4:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   139c8:	51                   	push   %ecx
   139c9:	e9 6f ff ff ff       	jmp    1393d <imul_rm2a_v+0xed>
   139ce:	66 90                	xchg   %ax,%ax

000139d0 <imul_irm2r_v>:
   139d0:	55                   	push   %ebp
   139d1:	57                   	push   %edi
   139d2:	56                   	push   %esi
   139d3:	53                   	push   %ebx
   139d4:	e8 a7 0a ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   139d9:	81 c3 27 b6 03 00    	add    $0x3b627,%ebx
   139df:	81 ec 90 00 00 00    	sub    $0x90,%esp
   139e5:	8d 6c 24 3c          	lea    0x3c(%esp),%ebp
   139e9:	8b bc 24 a4 00 00 00 	mov    0xa4(%esp),%edi
   139f0:	8d b3 84 07 00 00    	lea    0x784(%ebx),%esi
   139f6:	0f b6 06             	movzbl (%esi),%eax
   139f9:	89 44 24 28          	mov    %eax,0x28(%esp)
   139fd:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   13a01:	55                   	push   %ebp
   13a02:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   13a06:	89 44 24 14          	mov    %eax,0x14(%esp)
   13a0a:	50                   	push   %eax
   13a0b:	8d 47 01             	lea    0x1(%edi),%eax
   13a0e:	50                   	push   %eax
   13a0f:	e8 8c e4 ff ff       	call   11ea0 <modrm_r_rm>
   13a14:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   13a1b:	00 
   13a1c:	83 c0 01             	add    $0x1,%eax
   13a1f:	89 2c 24             	mov    %ebp,(%esp)
   13a22:	89 44 24 14          	mov    %eax,0x14(%esp)
   13a26:	89 c1                	mov    %eax,%ecx
   13a28:	0f b6 06             	movzbl (%esi),%eax
   13a2b:	01 cf                	add    %ecx,%edi
   13a2d:	89 44 24 7c          	mov    %eax,0x7c(%esp)
   13a31:	89 7c 24 70          	mov    %edi,0x70(%esp)
   13a35:	e8 a6 e9 ff ff       	call   123e0 <operand_read>
   13a3a:	59                   	pop    %ecx
   13a3b:	8d 44 24 68          	lea    0x68(%esp),%eax
   13a3f:	89 44 24 14          	mov    %eax,0x14(%esp)
   13a43:	50                   	push   %eax
   13a44:	e8 97 e9 ff ff       	call   123e0 <operand_read>
   13a49:	0f b6 16             	movzbl (%esi),%edx
   13a4c:	8b 4c 24 54          	mov    0x54(%esp),%ecx
   13a50:	89 54 24 10          	mov    %edx,0x10(%esp)
   13a54:	89 d0                	mov    %edx,%eax
   13a56:	83 ea 08             	sub    $0x8,%edx
   13a59:	83 c4 10             	add    $0x10,%esp
   13a5c:	81 e2 f7 00 00 00    	and    $0xf7,%edx
   13a62:	74 09                	je     13a6d <imul_irm2r_v+0x9d>
   13a64:	83 f8 20             	cmp    $0x20,%eax
   13a67:	0f 85 9b 00 00 00    	jne    13b08 <imul_irm2r_v+0x138>
   13a6d:	8b 54 24 68          	mov    0x68(%esp),%edx
   13a71:	3c 08                	cmp    $0x8,%al
   13a73:	0f 84 87 00 00 00    	je     13b00 <imul_irm2r_v+0x130>
   13a79:	3c 10                	cmp    $0x10,%al
   13a7b:	74 73                	je     13af0 <imul_irm2r_v+0x120>
   13a7d:	3c 08                	cmp    $0x8,%al
   13a7f:	74 76                	je     13af7 <imul_irm2r_v+0x127>
   13a81:	0f bf fa             	movswl %dx,%edi
   13a84:	3c 10                	cmp    $0x10,%al
   13a86:	0f 44 d7             	cmove  %edi,%edx
   13a89:	83 ec 04             	sub    $0x4,%esp
   13a8c:	ff 74 24 04          	pushl  0x4(%esp)
   13a90:	51                   	push   %ecx
   13a91:	52                   	push   %edx
   13a92:	e8 29 bd ff ff       	call   f7c0 <alu_imul>
   13a97:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   13a9b:	89 44 24 30          	mov    %eax,0x30(%esp)
   13a9f:	89 3c 24             	mov    %edi,(%esp)
   13aa2:	e8 e9 ea ff ff       	call   12590 <operand_write>
   13aa7:	58                   	pop    %eax
   13aa8:	0f b6 06             	movzbl (%esi),%eax
   13aab:	5a                   	pop    %edx
   13aac:	57                   	push   %edi
   13aad:	55                   	push   %ebp
   13aae:	c0 e8 03             	shr    $0x3,%al
   13ab1:	ff 74 24 18          	pushl  0x18(%esp)
   13ab5:	8b 7c 24 18          	mov    0x18(%esp),%edi
   13ab9:	01 f8                	add    %edi,%eax
   13abb:	0f b6 c0             	movzbl %al,%eax
   13abe:	50                   	push   %eax
   13abf:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   13ac5:	50                   	push   %eax
   13ac6:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   13acc:	50                   	push   %eax
   13acd:	e8 de e7 ff ff       	call   122b0 <print_asm_3>
   13ad2:	0f b6 06             	movzbl (%esi),%eax
   13ad5:	81 c4 ac 00 00 00    	add    $0xac,%esp
   13adb:	5b                   	pop    %ebx
   13adc:	5e                   	pop    %esi
   13add:	c0 e8 03             	shr    $0x3,%al
   13ae0:	0f b6 c0             	movzbl %al,%eax
   13ae3:	01 f8                	add    %edi,%eax
   13ae5:	5f                   	pop    %edi
   13ae6:	5d                   	pop    %ebp
   13ae7:	c3                   	ret    
   13ae8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13aef:	90                   	nop
   13af0:	0f bf c9             	movswl %cx,%ecx
   13af3:	3c 08                	cmp    $0x8,%al
   13af5:	75 8a                	jne    13a81 <imul_irm2r_v+0xb1>
   13af7:	0f be d2             	movsbl %dl,%edx
   13afa:	eb 8d                	jmp    13a89 <imul_irm2r_v+0xb9>
   13afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13b00:	0f be c9             	movsbl %cl,%ecx
   13b03:	e9 75 ff ff ff       	jmp    13a7d <imul_irm2r_v+0xad>
   13b08:	e8 43 fb ff ff       	call   13650 <sign_ext.part.0>
   13b0d:	8d 76 00             	lea    0x0(%esi),%esi

00013b10 <imul_i8rm2r_v>:
   13b10:	55                   	push   %ebp
   13b11:	57                   	push   %edi
   13b12:	56                   	push   %esi
   13b13:	53                   	push   %ebx
   13b14:	e8 67 09 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13b19:	81 c3 e7 b4 03 00    	add    $0x3b4e7,%ebx
   13b1f:	81 ec 90 00 00 00    	sub    $0x90,%esp
   13b25:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   13b29:	8b b4 24 a4 00 00 00 	mov    0xa4(%esp),%esi
   13b30:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   13b36:	89 44 24 04          	mov    %eax,0x4(%esp)
   13b3a:	0f b6 00             	movzbl (%eax),%eax
   13b3d:	89 44 24 28          	mov    %eax,0x28(%esp)
   13b41:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   13b45:	8d 46 01             	lea    0x1(%esi),%eax
   13b48:	57                   	push   %edi
   13b49:	8d 6c 24 1c          	lea    0x1c(%esp),%ebp
   13b4d:	55                   	push   %ebp
   13b4e:	50                   	push   %eax
   13b4f:	e8 4c e3 ff ff       	call   11ea0 <modrm_r_rm>
   13b54:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   13b5b:	00 
   13b5c:	8d 48 01             	lea    0x1(%eax),%ecx
   13b5f:	89 44 24 14          	mov    %eax,0x14(%esp)
   13b63:	01 ce                	add    %ecx,%esi
   13b65:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   13b69:	c7 44 24 7c 08 00 00 	movl   $0x8,0x7c(%esp)
   13b70:	00 
   13b71:	89 74 24 70          	mov    %esi,0x70(%esp)
   13b75:	89 3c 24             	mov    %edi,(%esp)
   13b78:	e8 63 e8 ff ff       	call   123e0 <operand_read>
   13b7d:	5e                   	pop    %esi
   13b7e:	8d 74 24 68          	lea    0x68(%esp),%esi
   13b82:	89 74 24 18          	mov    %esi,0x18(%esp)
   13b86:	56                   	push   %esi
   13b87:	e8 54 e8 ff ff       	call   123e0 <operand_read>
   13b8c:	8b 44 24 10          	mov    0x10(%esp),%eax
   13b90:	0f b6 08             	movzbl (%eax),%ecx
   13b93:	8b 44 24 54          	mov    0x54(%esp),%eax
   13b97:	83 c4 10             	add    $0x10,%esp
   13b9a:	8d 71 f8             	lea    -0x8(%ecx),%esi
   13b9d:	89 ca                	mov    %ecx,%edx
   13b9f:	81 e6 f7 00 00 00    	and    $0xf7,%esi
   13ba5:	74 05                	je     13bac <imul_i8rm2r_v+0x9c>
   13ba7:	83 f9 20             	cmp    $0x20,%ecx
   13baa:	75 79                	jne    13c25 <imul_i8rm2r_v+0x115>
   13bac:	80 fa 08             	cmp    $0x8,%dl
   13baf:	74 6f                	je     13c20 <imul_i8rm2r_v+0x110>
   13bb1:	0f bf f0             	movswl %ax,%esi
   13bb4:	80 fa 10             	cmp    $0x10,%dl
   13bb7:	0f 44 c6             	cmove  %esi,%eax
   13bba:	83 ec 04             	sub    $0x4,%esp
   13bbd:	51                   	push   %ecx
   13bbe:	50                   	push   %eax
   13bbf:	0f be 44 24 74       	movsbl 0x74(%esp),%eax
   13bc4:	50                   	push   %eax
   13bc5:	e8 f6 bb ff ff       	call   f7c0 <alu_imul>
   13bca:	89 2c 24             	mov    %ebp,(%esp)
   13bcd:	89 44 24 30          	mov    %eax,0x30(%esp)
   13bd1:	e8 ba e9 ff ff       	call   12590 <operand_write>
   13bd6:	0f b6 44 24 18       	movzbl 0x18(%esp),%eax
   13bdb:	5a                   	pop    %edx
   13bdc:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   13be2:	59                   	pop    %ecx
   13be3:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   13be7:	83 c0 01             	add    $0x1,%eax
   13bea:	80 39 10             	cmpb   $0x10,(%ecx)
   13bed:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   13bf3:	0f b6 c0             	movzbl %al,%eax
   13bf6:	55                   	push   %ebp
   13bf7:	0f 45 d1             	cmovne %ecx,%edx
   13bfa:	57                   	push   %edi
   13bfb:	ff 74 24 1c          	pushl  0x1c(%esp)
   13bff:	50                   	push   %eax
   13c00:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   13c06:	52                   	push   %edx
   13c07:	50                   	push   %eax
   13c08:	e8 a3 e6 ff ff       	call   122b0 <print_asm_3>
   13c0d:	8b 44 24 24          	mov    0x24(%esp),%eax
   13c11:	81 c4 ac 00 00 00    	add    $0xac,%esp
   13c17:	5b                   	pop    %ebx
   13c18:	5e                   	pop    %esi
   13c19:	83 c0 02             	add    $0x2,%eax
   13c1c:	5f                   	pop    %edi
   13c1d:	5d                   	pop    %ebp
   13c1e:	c3                   	ret    
   13c1f:	90                   	nop
   13c20:	0f be c0             	movsbl %al,%eax
   13c23:	eb 95                	jmp    13bba <imul_i8rm2r_v+0xaa>
   13c25:	e8 26 fa ff ff       	call   13650 <sign_ext.part.0>
   13c2a:	66 90                	xchg   %ax,%ax
   13c2c:	66 90                	xchg   %ax,%ax
   13c2e:	66 90                	xchg   %ax,%ax

00013c30 <instr_execute_1op>:
   13c30:	57                   	push   %edi
   13c31:	56                   	push   %esi
   13c32:	53                   	push   %ebx
   13c33:	e8 48 08 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13c38:	81 c3 c8 b3 03 00    	add    $0x3b3c8,%ebx
   13c3e:	83 ec 0c             	sub    $0xc,%esp
   13c41:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   13c47:	56                   	push   %esi
   13c48:	e8 93 e7 ff ff       	call   123e0 <operand_read>
   13c4d:	8b 56 0c             	mov    0xc(%esi),%edx
   13c50:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   13c56:	85 d2                	test   %edx,%edx
   13c58:	0f 95 c0             	setne  %al
   13c5b:	f7 da                	neg    %edx
   13c5d:	89 c7                	mov    %eax,%edi
   13c5f:	0f b6 41 24          	movzbl 0x24(%ecx),%eax
   13c63:	89 56 0c             	mov    %edx,0xc(%esi)
   13c66:	83 e0 fe             	and    $0xfffffffe,%eax
   13c69:	09 f8                	or     %edi,%eax
   13c6b:	88 41 24             	mov    %al,0x24(%ecx)
   13c6e:	89 34 24             	mov    %esi,(%esp)
   13c71:	e8 1a e9 ff ff       	call   12590 <operand_write>
   13c76:	83 c4 10             	add    $0x10,%esp
   13c79:	5b                   	pop    %ebx
   13c7a:	5e                   	pop    %esi
   13c7b:	5f                   	pop    %edi
   13c7c:	c3                   	ret    
   13c7d:	8d 76 00             	lea    0x0(%esi),%esi

00013c80 <neg_rm_b>:
   13c80:	55                   	push   %ebp
   13c81:	57                   	push   %edi
   13c82:	56                   	push   %esi
   13c83:	53                   	push   %ebx
   13c84:	e8 f7 07 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13c89:	81 c3 77 b3 03 00    	add    $0x3b377,%ebx
   13c8f:	83 ec 14             	sub    $0x14,%esp
   13c92:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   13c98:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   13c9e:	56                   	push   %esi
   13c9f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   13ca3:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   13caa:	83 c0 01             	add    $0x1,%eax
   13cad:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   13cb4:	50                   	push   %eax
   13cb5:	e8 c6 e2 ff ff       	call   11f80 <modrm_rm>
   13cba:	8b 4d 10             	mov    0x10(%ebp),%ecx
   13cbd:	83 c4 10             	add    $0x10,%esp
   13cc0:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   13cc6:	8d 78 01             	lea    0x1(%eax),%edi
   13cc9:	89 f8                	mov    %edi,%eax
   13ccb:	0f b6 c0             	movzbl %al,%eax
   13cce:	83 f9 08             	cmp    $0x8,%ecx
   13cd1:	74 12                	je     13ce5 <neg_rm_b+0x65>
   13cd3:	83 f9 10             	cmp    $0x10,%ecx
   13cd6:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   13cdc:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   13ce2:	0f 45 d1             	cmovne %ecx,%edx
   13ce5:	56                   	push   %esi
   13ce6:	50                   	push   %eax
   13ce7:	8d 83 e5 66 fe ff    	lea    -0x1991b(%ebx),%eax
   13ced:	52                   	push   %edx
   13cee:	50                   	push   %eax
   13cef:	e8 ac e3 ff ff       	call   120a0 <print_asm_1>
   13cf4:	e8 37 ff ff ff       	call   13c30 <instr_execute_1op>
   13cf9:	83 c4 1c             	add    $0x1c,%esp
   13cfc:	89 f8                	mov    %edi,%eax
   13cfe:	5b                   	pop    %ebx
   13cff:	5e                   	pop    %esi
   13d00:	5f                   	pop    %edi
   13d01:	5d                   	pop    %ebp
   13d02:	c3                   	ret    
   13d03:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13d0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013d10 <neg_rm_v>:
   13d10:	55                   	push   %ebp
   13d11:	57                   	push   %edi
   13d12:	56                   	push   %esi
   13d13:	53                   	push   %ebx
   13d14:	e8 67 07 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13d19:	81 c3 e7 b2 03 00    	add    $0x3b2e7,%ebx
   13d1f:	83 ec 14             	sub    $0x14,%esp
   13d22:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   13d28:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   13d2e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   13d34:	0f b6 00             	movzbl (%eax),%eax
   13d37:	56                   	push   %esi
   13d38:	89 45 10             	mov    %eax,0x10(%ebp)
   13d3b:	89 46 10             	mov    %eax,0x10(%esi)
   13d3e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   13d42:	83 c0 01             	add    $0x1,%eax
   13d45:	50                   	push   %eax
   13d46:	e8 35 e2 ff ff       	call   11f80 <modrm_rm>
   13d4b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   13d4e:	83 c4 10             	add    $0x10,%esp
   13d51:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   13d57:	8d 78 01             	lea    0x1(%eax),%edi
   13d5a:	89 f8                	mov    %edi,%eax
   13d5c:	0f b6 c0             	movzbl %al,%eax
   13d5f:	83 f9 08             	cmp    $0x8,%ecx
   13d62:	74 12                	je     13d76 <neg_rm_v+0x66>
   13d64:	83 f9 10             	cmp    $0x10,%ecx
   13d67:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   13d6d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   13d73:	0f 45 d1             	cmovne %ecx,%edx
   13d76:	56                   	push   %esi
   13d77:	50                   	push   %eax
   13d78:	8d 83 e5 66 fe ff    	lea    -0x1991b(%ebx),%eax
   13d7e:	52                   	push   %edx
   13d7f:	50                   	push   %eax
   13d80:	e8 1b e3 ff ff       	call   120a0 <print_asm_1>
   13d85:	e8 a6 fe ff ff       	call   13c30 <instr_execute_1op>
   13d8a:	83 c4 1c             	add    $0x1c,%esp
   13d8d:	89 f8                	mov    %edi,%eax
   13d8f:	5b                   	pop    %ebx
   13d90:	5e                   	pop    %esi
   13d91:	5f                   	pop    %edi
   13d92:	5d                   	pop    %ebp
   13d93:	c3                   	ret    
   13d94:	66 90                	xchg   %ax,%ax
   13d96:	66 90                	xchg   %ax,%ax
   13d98:	66 90                	xchg   %ax,%ax
   13d9a:	66 90                	xchg   %ax,%ax
   13d9c:	66 90                	xchg   %ax,%ax
   13d9e:	66 90                	xchg   %ax,%ax

00013da0 <cltd>:
   13da0:	53                   	push   %ebx
   13da1:	e8 da 06 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13da6:	81 c3 5a b2 03 00    	add    $0x3b25a,%ebx
   13dac:	83 ec 64             	sub    $0x64,%esp
   13daf:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   13db6:	00 
   13db7:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   13dbe:	00 
   13dbf:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   13dc6:	00 
   13dc7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   13dcd:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   13dd4:	00 
   13dd5:	0f b6 00             	movzbl (%eax),%eax
   13dd8:	89 44 24 24          	mov    %eax,0x24(%esp)
   13ddc:	89 44 24 48          	mov    %eax,0x48(%esp)
   13de0:	8d 44 24 14          	lea    0x14(%esp),%eax
   13de4:	50                   	push   %eax
   13de5:	e8 f6 e5 ff ff       	call   123e0 <operand_read>
   13dea:	8b 44 24 24          	mov    0x24(%esp),%eax
   13dee:	c1 f8 1f             	sar    $0x1f,%eax
   13df1:	89 44 24 48          	mov    %eax,0x48(%esp)
   13df5:	58                   	pop    %eax
   13df6:	8d 44 24 38          	lea    0x38(%esp),%eax
   13dfa:	50                   	push   %eax
   13dfb:	e8 90 e7 ff ff       	call   12590 <operand_write>
   13e00:	83 c4 0c             	add    $0xc,%esp
   13e03:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   13e09:	6a 01                	push   $0x1
   13e0b:	50                   	push   %eax
   13e0c:	8d 83 e9 66 fe ff    	lea    -0x19917(%ebx),%eax
   13e12:	50                   	push   %eax
   13e13:	e8 a8 e1 ff ff       	call   11fc0 <print_asm_0>
   13e18:	83 c4 68             	add    $0x68,%esp
   13e1b:	b8 01 00 00 00       	mov    $0x1,%eax
   13e20:	5b                   	pop    %ebx
   13e21:	c3                   	ret    
   13e22:	66 90                	xchg   %ax,%ax
   13e24:	66 90                	xchg   %ax,%ax
   13e26:	66 90                	xchg   %ax,%ax
   13e28:	66 90                	xchg   %ax,%ax
   13e2a:	66 90                	xchg   %ax,%ax
   13e2c:	66 90                	xchg   %ax,%ax
   13e2e:	66 90                	xchg   %ax,%ax

00013e30 <group_1_b>:
   13e30:	56                   	push   %esi
   13e31:	53                   	push   %ebx
   13e32:	e8 49 06 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13e37:	81 c3 c9 b1 03 00    	add    $0x3b1c9,%ebx
   13e3d:	83 ec 1c             	sub    $0x1c,%esp
   13e40:	8b 74 24 28          	mov    0x28(%esp),%esi
   13e44:	8d 44 24 17          	lea    0x17(%esp),%eax
   13e48:	50                   	push   %eax
   13e49:	8d 46 01             	lea    0x1(%esi),%eax
   13e4c:	50                   	push   %eax
   13e4d:	e8 fe e0 ff ff       	call   11f50 <modrm_opcode>
   13e52:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   13e57:	5a                   	pop    %edx
   13e58:	59                   	pop    %ecx
   13e59:	8d 93 c0 18 00 00    	lea    0x18c0(%ebx),%edx
   13e5f:	50                   	push   %eax
   13e60:	56                   	push   %esi
   13e61:	ff 14 82             	call   *(%edx,%eax,4)
   13e64:	83 c4 24             	add    $0x24,%esp
   13e67:	5b                   	pop    %ebx
   13e68:	5e                   	pop    %esi
   13e69:	c3                   	ret    
   13e6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013e70 <group_1_v>:
   13e70:	56                   	push   %esi
   13e71:	53                   	push   %ebx
   13e72:	e8 09 06 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13e77:	81 c3 89 b1 03 00    	add    $0x3b189,%ebx
   13e7d:	83 ec 1c             	sub    $0x1c,%esp
   13e80:	8b 74 24 28          	mov    0x28(%esp),%esi
   13e84:	8d 44 24 17          	lea    0x17(%esp),%eax
   13e88:	50                   	push   %eax
   13e89:	8d 46 01             	lea    0x1(%esi),%eax
   13e8c:	50                   	push   %eax
   13e8d:	e8 be e0 ff ff       	call   11f50 <modrm_opcode>
   13e92:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   13e97:	5a                   	pop    %edx
   13e98:	59                   	pop    %ecx
   13e99:	8d 93 a0 18 00 00    	lea    0x18a0(%ebx),%edx
   13e9f:	50                   	push   %eax
   13ea0:	56                   	push   %esi
   13ea1:	ff 14 82             	call   *(%edx,%eax,4)
   13ea4:	83 c4 24             	add    $0x24,%esp
   13ea7:	5b                   	pop    %ebx
   13ea8:	5e                   	pop    %esi
   13ea9:	c3                   	ret    
   13eaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013eb0 <group_1_bv>:
   13eb0:	56                   	push   %esi
   13eb1:	53                   	push   %ebx
   13eb2:	e8 c9 05 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13eb7:	81 c3 49 b1 03 00    	add    $0x3b149,%ebx
   13ebd:	83 ec 1c             	sub    $0x1c,%esp
   13ec0:	8b 74 24 28          	mov    0x28(%esp),%esi
   13ec4:	8d 44 24 17          	lea    0x17(%esp),%eax
   13ec8:	50                   	push   %eax
   13ec9:	8d 46 01             	lea    0x1(%esi),%eax
   13ecc:	50                   	push   %eax
   13ecd:	e8 7e e0 ff ff       	call   11f50 <modrm_opcode>
   13ed2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   13ed7:	5a                   	pop    %edx
   13ed8:	59                   	pop    %ecx
   13ed9:	8d 93 80 18 00 00    	lea    0x1880(%ebx),%edx
   13edf:	50                   	push   %eax
   13ee0:	56                   	push   %esi
   13ee1:	ff 14 82             	call   *(%edx,%eax,4)
   13ee4:	83 c4 24             	add    $0x24,%esp
   13ee7:	5b                   	pop    %ebx
   13ee8:	5e                   	pop    %esi
   13ee9:	c3                   	ret    
   13eea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013ef0 <group_2_b>:
   13ef0:	56                   	push   %esi
   13ef1:	53                   	push   %ebx
   13ef2:	e8 89 05 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13ef7:	81 c3 09 b1 03 00    	add    $0x3b109,%ebx
   13efd:	83 ec 1c             	sub    $0x1c,%esp
   13f00:	8b 74 24 28          	mov    0x28(%esp),%esi
   13f04:	8d 44 24 17          	lea    0x17(%esp),%eax
   13f08:	50                   	push   %eax
   13f09:	8d 46 01             	lea    0x1(%esi),%eax
   13f0c:	50                   	push   %eax
   13f0d:	e8 3e e0 ff ff       	call   11f50 <modrm_opcode>
   13f12:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   13f17:	5a                   	pop    %edx
   13f18:	59                   	pop    %ecx
   13f19:	8d 93 60 18 00 00    	lea    0x1860(%ebx),%edx
   13f1f:	50                   	push   %eax
   13f20:	56                   	push   %esi
   13f21:	ff 14 82             	call   *(%edx,%eax,4)
   13f24:	83 c4 24             	add    $0x24,%esp
   13f27:	5b                   	pop    %ebx
   13f28:	5e                   	pop    %esi
   13f29:	c3                   	ret    
   13f2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013f30 <group_2_v>:
   13f30:	56                   	push   %esi
   13f31:	53                   	push   %ebx
   13f32:	e8 49 05 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13f37:	81 c3 c9 b0 03 00    	add    $0x3b0c9,%ebx
   13f3d:	83 ec 1c             	sub    $0x1c,%esp
   13f40:	8b 74 24 28          	mov    0x28(%esp),%esi
   13f44:	8d 44 24 17          	lea    0x17(%esp),%eax
   13f48:	50                   	push   %eax
   13f49:	8d 46 01             	lea    0x1(%esi),%eax
   13f4c:	50                   	push   %eax
   13f4d:	e8 fe df ff ff       	call   11f50 <modrm_opcode>
   13f52:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   13f57:	5a                   	pop    %edx
   13f58:	59                   	pop    %ecx
   13f59:	8d 93 40 18 00 00    	lea    0x1840(%ebx),%edx
   13f5f:	50                   	push   %eax
   13f60:	56                   	push   %esi
   13f61:	ff 14 82             	call   *(%edx,%eax,4)
   13f64:	83 c4 24             	add    $0x24,%esp
   13f67:	5b                   	pop    %ebx
   13f68:	5e                   	pop    %esi
   13f69:	c3                   	ret    
   13f6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013f70 <group_2_1b>:
   13f70:	56                   	push   %esi
   13f71:	53                   	push   %ebx
   13f72:	e8 09 05 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13f77:	81 c3 89 b0 03 00    	add    $0x3b089,%ebx
   13f7d:	83 ec 1c             	sub    $0x1c,%esp
   13f80:	8b 74 24 28          	mov    0x28(%esp),%esi
   13f84:	8d 44 24 17          	lea    0x17(%esp),%eax
   13f88:	50                   	push   %eax
   13f89:	8d 46 01             	lea    0x1(%esi),%eax
   13f8c:	50                   	push   %eax
   13f8d:	e8 be df ff ff       	call   11f50 <modrm_opcode>
   13f92:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   13f97:	5a                   	pop    %edx
   13f98:	59                   	pop    %ecx
   13f99:	8d 93 20 18 00 00    	lea    0x1820(%ebx),%edx
   13f9f:	50                   	push   %eax
   13fa0:	56                   	push   %esi
   13fa1:	ff 14 82             	call   *(%edx,%eax,4)
   13fa4:	83 c4 24             	add    $0x24,%esp
   13fa7:	5b                   	pop    %ebx
   13fa8:	5e                   	pop    %esi
   13fa9:	c3                   	ret    
   13faa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013fb0 <group_2_1v>:
   13fb0:	56                   	push   %esi
   13fb1:	53                   	push   %ebx
   13fb2:	e8 c9 04 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13fb7:	81 c3 49 b0 03 00    	add    $0x3b049,%ebx
   13fbd:	83 ec 1c             	sub    $0x1c,%esp
   13fc0:	8b 74 24 28          	mov    0x28(%esp),%esi
   13fc4:	8d 44 24 17          	lea    0x17(%esp),%eax
   13fc8:	50                   	push   %eax
   13fc9:	8d 46 01             	lea    0x1(%esi),%eax
   13fcc:	50                   	push   %eax
   13fcd:	e8 7e df ff ff       	call   11f50 <modrm_opcode>
   13fd2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   13fd7:	5a                   	pop    %edx
   13fd8:	59                   	pop    %ecx
   13fd9:	8d 93 00 18 00 00    	lea    0x1800(%ebx),%edx
   13fdf:	50                   	push   %eax
   13fe0:	56                   	push   %esi
   13fe1:	ff 14 82             	call   *(%edx,%eax,4)
   13fe4:	83 c4 24             	add    $0x24,%esp
   13fe7:	5b                   	pop    %ebx
   13fe8:	5e                   	pop    %esi
   13fe9:	c3                   	ret    
   13fea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013ff0 <group_2_cb>:
   13ff0:	56                   	push   %esi
   13ff1:	53                   	push   %ebx
   13ff2:	e8 89 04 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   13ff7:	81 c3 09 b0 03 00    	add    $0x3b009,%ebx
   13ffd:	83 ec 1c             	sub    $0x1c,%esp
   14000:	8b 74 24 28          	mov    0x28(%esp),%esi
   14004:	8d 44 24 17          	lea    0x17(%esp),%eax
   14008:	50                   	push   %eax
   14009:	8d 46 01             	lea    0x1(%esi),%eax
   1400c:	50                   	push   %eax
   1400d:	e8 3e df ff ff       	call   11f50 <modrm_opcode>
   14012:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14017:	5a                   	pop    %edx
   14018:	59                   	pop    %ecx
   14019:	8d 93 e0 17 00 00    	lea    0x17e0(%ebx),%edx
   1401f:	50                   	push   %eax
   14020:	56                   	push   %esi
   14021:	ff 14 82             	call   *(%edx,%eax,4)
   14024:	83 c4 24             	add    $0x24,%esp
   14027:	5b                   	pop    %ebx
   14028:	5e                   	pop    %esi
   14029:	c3                   	ret    
   1402a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014030 <group_2_cv>:
   14030:	56                   	push   %esi
   14031:	53                   	push   %ebx
   14032:	e8 49 04 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14037:	81 c3 c9 af 03 00    	add    $0x3afc9,%ebx
   1403d:	83 ec 1c             	sub    $0x1c,%esp
   14040:	8b 74 24 28          	mov    0x28(%esp),%esi
   14044:	8d 44 24 17          	lea    0x17(%esp),%eax
   14048:	50                   	push   %eax
   14049:	8d 46 01             	lea    0x1(%esi),%eax
   1404c:	50                   	push   %eax
   1404d:	e8 fe de ff ff       	call   11f50 <modrm_opcode>
   14052:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14057:	5a                   	pop    %edx
   14058:	59                   	pop    %ecx
   14059:	8d 93 c0 17 00 00    	lea    0x17c0(%ebx),%edx
   1405f:	50                   	push   %eax
   14060:	56                   	push   %esi
   14061:	ff 14 82             	call   *(%edx,%eax,4)
   14064:	83 c4 24             	add    $0x24,%esp
   14067:	5b                   	pop    %ebx
   14068:	5e                   	pop    %esi
   14069:	c3                   	ret    
   1406a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014070 <group_3_b>:
   14070:	56                   	push   %esi
   14071:	53                   	push   %ebx
   14072:	e8 09 04 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14077:	81 c3 89 af 03 00    	add    $0x3af89,%ebx
   1407d:	83 ec 1c             	sub    $0x1c,%esp
   14080:	8b 74 24 28          	mov    0x28(%esp),%esi
   14084:	8d 44 24 17          	lea    0x17(%esp),%eax
   14088:	50                   	push   %eax
   14089:	8d 46 01             	lea    0x1(%esi),%eax
   1408c:	50                   	push   %eax
   1408d:	e8 be de ff ff       	call   11f50 <modrm_opcode>
   14092:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14097:	5a                   	pop    %edx
   14098:	59                   	pop    %ecx
   14099:	8d 93 a0 17 00 00    	lea    0x17a0(%ebx),%edx
   1409f:	50                   	push   %eax
   140a0:	56                   	push   %esi
   140a1:	ff 14 82             	call   *(%edx,%eax,4)
   140a4:	83 c4 24             	add    $0x24,%esp
   140a7:	5b                   	pop    %ebx
   140a8:	5e                   	pop    %esi
   140a9:	c3                   	ret    
   140aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000140b0 <group_3_v>:
   140b0:	56                   	push   %esi
   140b1:	53                   	push   %ebx
   140b2:	e8 c9 03 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   140b7:	81 c3 49 af 03 00    	add    $0x3af49,%ebx
   140bd:	83 ec 1c             	sub    $0x1c,%esp
   140c0:	8b 74 24 28          	mov    0x28(%esp),%esi
   140c4:	8d 44 24 17          	lea    0x17(%esp),%eax
   140c8:	50                   	push   %eax
   140c9:	8d 46 01             	lea    0x1(%esi),%eax
   140cc:	50                   	push   %eax
   140cd:	e8 7e de ff ff       	call   11f50 <modrm_opcode>
   140d2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   140d7:	5a                   	pop    %edx
   140d8:	59                   	pop    %ecx
   140d9:	8d 93 80 17 00 00    	lea    0x1780(%ebx),%edx
   140df:	50                   	push   %eax
   140e0:	56                   	push   %esi
   140e1:	ff 14 82             	call   *(%edx,%eax,4)
   140e4:	83 c4 24             	add    $0x24,%esp
   140e7:	5b                   	pop    %ebx
   140e8:	5e                   	pop    %esi
   140e9:	c3                   	ret    
   140ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000140f0 <group_5_indirect>:
   140f0:	56                   	push   %esi
   140f1:	53                   	push   %ebx
   140f2:	e8 89 03 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   140f7:	81 c3 09 af 03 00    	add    $0x3af09,%ebx
   140fd:	83 ec 1c             	sub    $0x1c,%esp
   14100:	8b 74 24 28          	mov    0x28(%esp),%esi
   14104:	8d 44 24 17          	lea    0x17(%esp),%eax
   14108:	50                   	push   %eax
   14109:	8d 46 01             	lea    0x1(%esi),%eax
   1410c:	50                   	push   %eax
   1410d:	e8 3e de ff ff       	call   11f50 <modrm_opcode>
   14112:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14117:	5a                   	pop    %edx
   14118:	59                   	pop    %ecx
   14119:	8d 93 60 17 00 00    	lea    0x1760(%ebx),%edx
   1411f:	50                   	push   %eax
   14120:	56                   	push   %esi
   14121:	ff 14 82             	call   *(%edx,%eax,4)
   14124:	83 c4 24             	add    $0x24,%esp
   14127:	5b                   	pop    %ebx
   14128:	5e                   	pop    %esi
   14129:	c3                   	ret    
   1412a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014130 <group_7>:
   14130:	56                   	push   %esi
   14131:	53                   	push   %ebx
   14132:	e8 49 03 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14137:	81 c3 c9 ae 03 00    	add    $0x3aec9,%ebx
   1413d:	83 ec 1c             	sub    $0x1c,%esp
   14140:	8b 74 24 28          	mov    0x28(%esp),%esi
   14144:	8d 44 24 17          	lea    0x17(%esp),%eax
   14148:	50                   	push   %eax
   14149:	8d 46 01             	lea    0x1(%esi),%eax
   1414c:	50                   	push   %eax
   1414d:	e8 fe dd ff ff       	call   11f50 <modrm_opcode>
   14152:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14157:	5a                   	pop    %edx
   14158:	59                   	pop    %ecx
   14159:	8d 93 40 17 00 00    	lea    0x1740(%ebx),%edx
   1415f:	50                   	push   %eax
   14160:	56                   	push   %esi
   14161:	ff 14 82             	call   *(%edx,%eax,4)
   14164:	83 c4 24             	add    $0x24,%esp
   14167:	5b                   	pop    %ebx
   14168:	5e                   	pop    %esi
   14169:	c3                   	ret    
   1416a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014170 <group_x87_d8>:
   14170:	56                   	push   %esi
   14171:	53                   	push   %ebx
   14172:	e8 09 03 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14177:	81 c3 89 ae 03 00    	add    $0x3ae89,%ebx
   1417d:	83 ec 1c             	sub    $0x1c,%esp
   14180:	8b 74 24 28          	mov    0x28(%esp),%esi
   14184:	8d 44 24 17          	lea    0x17(%esp),%eax
   14188:	50                   	push   %eax
   14189:	8d 46 01             	lea    0x1(%esi),%eax
   1418c:	50                   	push   %eax
   1418d:	e8 be dd ff ff       	call   11f50 <modrm_opcode>
   14192:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14197:	5a                   	pop    %edx
   14198:	59                   	pop    %ecx
   14199:	8d 93 20 17 00 00    	lea    0x1720(%ebx),%edx
   1419f:	50                   	push   %eax
   141a0:	56                   	push   %esi
   141a1:	ff 14 82             	call   *(%edx,%eax,4)
   141a4:	83 c4 24             	add    $0x24,%esp
   141a7:	5b                   	pop    %ebx
   141a8:	5e                   	pop    %esi
   141a9:	c3                   	ret    
   141aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000141b0 <group_x87_d9>:
   141b0:	56                   	push   %esi
   141b1:	53                   	push   %ebx
   141b2:	e8 c9 02 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   141b7:	81 c3 49 ae 03 00    	add    $0x3ae49,%ebx
   141bd:	83 ec 1c             	sub    $0x1c,%esp
   141c0:	8b 74 24 28          	mov    0x28(%esp),%esi
   141c4:	8d 44 24 17          	lea    0x17(%esp),%eax
   141c8:	50                   	push   %eax
   141c9:	8d 46 01             	lea    0x1(%esi),%eax
   141cc:	50                   	push   %eax
   141cd:	e8 7e dd ff ff       	call   11f50 <modrm_opcode>
   141d2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   141d7:	5a                   	pop    %edx
   141d8:	59                   	pop    %ecx
   141d9:	8d 93 00 17 00 00    	lea    0x1700(%ebx),%edx
   141df:	50                   	push   %eax
   141e0:	56                   	push   %esi
   141e1:	ff 14 82             	call   *(%edx,%eax,4)
   141e4:	83 c4 24             	add    $0x24,%esp
   141e7:	5b                   	pop    %ebx
   141e8:	5e                   	pop    %esi
   141e9:	c3                   	ret    
   141ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000141f0 <group_x87_da>:
   141f0:	56                   	push   %esi
   141f1:	53                   	push   %ebx
   141f2:	e8 89 02 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   141f7:	81 c3 09 ae 03 00    	add    $0x3ae09,%ebx
   141fd:	83 ec 1c             	sub    $0x1c,%esp
   14200:	8b 74 24 28          	mov    0x28(%esp),%esi
   14204:	8d 44 24 17          	lea    0x17(%esp),%eax
   14208:	50                   	push   %eax
   14209:	8d 46 01             	lea    0x1(%esi),%eax
   1420c:	50                   	push   %eax
   1420d:	e8 3e dd ff ff       	call   11f50 <modrm_opcode>
   14212:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14217:	5a                   	pop    %edx
   14218:	59                   	pop    %ecx
   14219:	8d 93 e0 16 00 00    	lea    0x16e0(%ebx),%edx
   1421f:	50                   	push   %eax
   14220:	56                   	push   %esi
   14221:	ff 14 82             	call   *(%edx,%eax,4)
   14224:	83 c4 24             	add    $0x24,%esp
   14227:	5b                   	pop    %ebx
   14228:	5e                   	pop    %esi
   14229:	c3                   	ret    
   1422a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014230 <group_x87_db>:
   14230:	56                   	push   %esi
   14231:	53                   	push   %ebx
   14232:	e8 49 02 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14237:	81 c3 c9 ad 03 00    	add    $0x3adc9,%ebx
   1423d:	83 ec 1c             	sub    $0x1c,%esp
   14240:	8b 74 24 28          	mov    0x28(%esp),%esi
   14244:	8d 44 24 17          	lea    0x17(%esp),%eax
   14248:	50                   	push   %eax
   14249:	8d 46 01             	lea    0x1(%esi),%eax
   1424c:	50                   	push   %eax
   1424d:	e8 fe dc ff ff       	call   11f50 <modrm_opcode>
   14252:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14257:	5a                   	pop    %edx
   14258:	59                   	pop    %ecx
   14259:	8d 93 c0 16 00 00    	lea    0x16c0(%ebx),%edx
   1425f:	50                   	push   %eax
   14260:	56                   	push   %esi
   14261:	ff 14 82             	call   *(%edx,%eax,4)
   14264:	83 c4 24             	add    $0x24,%esp
   14267:	5b                   	pop    %ebx
   14268:	5e                   	pop    %esi
   14269:	c3                   	ret    
   1426a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014270 <group_x87_dc>:
   14270:	56                   	push   %esi
   14271:	53                   	push   %ebx
   14272:	e8 09 02 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14277:	81 c3 89 ad 03 00    	add    $0x3ad89,%ebx
   1427d:	83 ec 1c             	sub    $0x1c,%esp
   14280:	8b 74 24 28          	mov    0x28(%esp),%esi
   14284:	8d 44 24 17          	lea    0x17(%esp),%eax
   14288:	50                   	push   %eax
   14289:	8d 46 01             	lea    0x1(%esi),%eax
   1428c:	50                   	push   %eax
   1428d:	e8 be dc ff ff       	call   11f50 <modrm_opcode>
   14292:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14297:	5a                   	pop    %edx
   14298:	59                   	pop    %ecx
   14299:	8d 93 a0 16 00 00    	lea    0x16a0(%ebx),%edx
   1429f:	50                   	push   %eax
   142a0:	56                   	push   %esi
   142a1:	ff 14 82             	call   *(%edx,%eax,4)
   142a4:	83 c4 24             	add    $0x24,%esp
   142a7:	5b                   	pop    %ebx
   142a8:	5e                   	pop    %esi
   142a9:	c3                   	ret    
   142aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000142b0 <group_x87_dd>:
   142b0:	56                   	push   %esi
   142b1:	53                   	push   %ebx
   142b2:	e8 c9 01 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   142b7:	81 c3 49 ad 03 00    	add    $0x3ad49,%ebx
   142bd:	83 ec 1c             	sub    $0x1c,%esp
   142c0:	8b 74 24 28          	mov    0x28(%esp),%esi
   142c4:	8d 44 24 17          	lea    0x17(%esp),%eax
   142c8:	50                   	push   %eax
   142c9:	8d 46 01             	lea    0x1(%esi),%eax
   142cc:	50                   	push   %eax
   142cd:	e8 7e dc ff ff       	call   11f50 <modrm_opcode>
   142d2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   142d7:	5a                   	pop    %edx
   142d8:	59                   	pop    %ecx
   142d9:	8d 93 80 16 00 00    	lea    0x1680(%ebx),%edx
   142df:	50                   	push   %eax
   142e0:	56                   	push   %esi
   142e1:	ff 14 82             	call   *(%edx,%eax,4)
   142e4:	83 c4 24             	add    $0x24,%esp
   142e7:	5b                   	pop    %ebx
   142e8:	5e                   	pop    %esi
   142e9:	c3                   	ret    
   142ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000142f0 <group_x87_de>:
   142f0:	56                   	push   %esi
   142f1:	53                   	push   %ebx
   142f2:	e8 89 01 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   142f7:	81 c3 09 ad 03 00    	add    $0x3ad09,%ebx
   142fd:	83 ec 1c             	sub    $0x1c,%esp
   14300:	8b 74 24 28          	mov    0x28(%esp),%esi
   14304:	8d 44 24 17          	lea    0x17(%esp),%eax
   14308:	50                   	push   %eax
   14309:	8d 46 01             	lea    0x1(%esi),%eax
   1430c:	50                   	push   %eax
   1430d:	e8 3e dc ff ff       	call   11f50 <modrm_opcode>
   14312:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14317:	5a                   	pop    %edx
   14318:	59                   	pop    %ecx
   14319:	8d 93 60 16 00 00    	lea    0x1660(%ebx),%edx
   1431f:	50                   	push   %eax
   14320:	56                   	push   %esi
   14321:	ff 14 82             	call   *(%edx,%eax,4)
   14324:	83 c4 24             	add    $0x24,%esp
   14327:	5b                   	pop    %ebx
   14328:	5e                   	pop    %esi
   14329:	c3                   	ret    
   1432a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014330 <group_x87_df>:
   14330:	56                   	push   %esi
   14331:	53                   	push   %ebx
   14332:	e8 49 01 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14337:	81 c3 c9 ac 03 00    	add    $0x3acc9,%ebx
   1433d:	83 ec 1c             	sub    $0x1c,%esp
   14340:	8b 74 24 28          	mov    0x28(%esp),%esi
   14344:	8d 44 24 17          	lea    0x17(%esp),%eax
   14348:	50                   	push   %eax
   14349:	8d 46 01             	lea    0x1(%esi),%eax
   1434c:	50                   	push   %eax
   1434d:	e8 fe db ff ff       	call   11f50 <modrm_opcode>
   14352:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   14357:	5a                   	pop    %edx
   14358:	59                   	pop    %ecx
   14359:	8d 93 40 16 00 00    	lea    0x1640(%ebx),%edx
   1435f:	50                   	push   %eax
   14360:	56                   	push   %esi
   14361:	ff 14 82             	call   *(%edx,%eax,4)
   14364:	83 c4 24             	add    $0x24,%esp
   14367:	5b                   	pop    %ebx
   14368:	5e                   	pop    %esi
   14369:	c3                   	ret    
   1436a:	66 90                	xchg   %ax,%ax
   1436c:	66 90                	xchg   %ax,%ax
   1436e:	66 90                	xchg   %ax,%ax

00014370 <lea>:
   14370:	55                   	push   %ebp
   14371:	57                   	push   %edi
   14372:	56                   	push   %esi
   14373:	53                   	push   %ebx
   14374:	e8 07 01 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   14379:	81 c3 87 ac 03 00    	add    $0x3ac87,%ebx
   1437f:	83 ec 10             	sub    $0x10,%esp
   14382:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   14388:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1438e:	8d ab e0 33 05 00    	lea    0x533e0(%ebx),%ebp
   14394:	0f b6 00             	movzbl (%eax),%eax
   14397:	55                   	push   %ebp
   14398:	89 46 10             	mov    %eax,0x10(%esi)
   1439b:	56                   	push   %esi
   1439c:	89 45 10             	mov    %eax,0x10(%ebp)
   1439f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   143a3:	83 c0 01             	add    $0x1,%eax
   143a6:	50                   	push   %eax
   143a7:	e8 f4 da ff ff       	call   11ea0 <modrm_r_rm>
   143ac:	89 34 24             	mov    %esi,(%esp)
   143af:	89 c7                	mov    %eax,%edi
   143b1:	8b 45 04             	mov    0x4(%ebp),%eax
   143b4:	89 46 0c             	mov    %eax,0xc(%esi)
   143b7:	e8 d4 e1 ff ff       	call   12590 <operand_write>
   143bc:	83 c4 1c             	add    $0x1c,%esp
   143bf:	8d 47 01             	lea    0x1(%edi),%eax
   143c2:	5b                   	pop    %ebx
   143c3:	5e                   	pop    %esi
   143c4:	5f                   	pop    %edi
   143c5:	5d                   	pop    %ebp
   143c6:	c3                   	ret    
   143c7:	66 90                	xchg   %ax,%ax
   143c9:	66 90                	xchg   %ax,%ax
   143cb:	66 90                	xchg   %ax,%ax
   143cd:	66 90                	xchg   %ax,%ax
   143cf:	90                   	nop

000143d0 <idiv_rm2a_b>:
   143d0:	55                   	push   %ebp
   143d1:	57                   	push   %edi
   143d2:	56                   	push   %esi
   143d3:	53                   	push   %ebx
   143d4:	e8 a7 00 ff ff       	call   4480 <__x86.get_pc_thunk.bx>
   143d9:	81 c3 27 ac 03 00    	add    $0x3ac27,%ebx
   143df:	81 ec b8 00 00 00    	sub    $0xb8,%esp
   143e5:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   143e9:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   143f0:	00 
   143f1:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   143f8:	00 
   143f9:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   14400:	00 
   14401:	57                   	push   %edi
   14402:	e8 d9 df ff ff       	call   123e0 <operand_read>
   14407:	c7 44 24 54 08 00 00 	movl   $0x8,0x54(%esp)
   1440e:	00 
   1440f:	58                   	pop    %eax
   14410:	5a                   	pop    %edx
   14411:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   14415:	56                   	push   %esi
   14416:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   1441d:	83 c0 01             	add    $0x1,%eax
   14420:	50                   	push   %eax
   14421:	e8 5a db ff ff       	call   11f80 <modrm_rm>
   14426:	89 34 24             	mov    %esi,(%esp)
   14429:	8d 68 01             	lea    0x1(%eax),%ebp
   1442c:	e8 af df ff ff       	call   123e0 <operand_read>
   14431:	0f bf 44 24 2c       	movswl 0x2c(%esp),%eax
   14436:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
   1443d:	99                   	cltd   
   1443e:	52                   	push   %edx
   1443f:	50                   	push   %eax
   14440:	0f be 44 24 58       	movsbl 0x58(%esp),%eax
   14445:	99                   	cltd   
   14446:	52                   	push   %edx
   14447:	50                   	push   %eax
   14448:	e8 f3 b3 ff ff       	call   f840 <alu_idiv>
   1444d:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   14451:	83 c4 20             	add    $0x20,%esp
   14454:	0f bf 44 24 1c       	movswl 0x1c(%esp),%eax
   14459:	99                   	cltd   
   1445a:	52                   	push   %edx
   1445b:	50                   	push   %eax
   1445c:	0f be 44 24 48       	movsbl 0x48(%esp),%eax
   14461:	99                   	cltd   
   14462:	52                   	push   %edx
   14463:	50                   	push   %eax
   14464:	e8 a7 b4 ff ff       	call   f910 <alu_imod>
   14469:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1446d:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   14474:	01 00 00 00 
   14478:	89 44 24 74          	mov    %eax,0x74(%esp)
   1447c:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   14483:	00 
   14484:	c7 84 24 9c 00 00 00 	movl   $0x8,0x9c(%esp)
   1448b:	08 00 00 00 
   1448f:	c7 44 24 78 08 00 00 	movl   $0x8,0x78(%esp)
   14496:	00 
   14497:	c7 44 24 6c 04 00 00 	movl   $0x4,0x6c(%esp)
   1449e:	00 
   1449f:	c7 84 24 90 00 00 00 	movl   $0x0,0x90(%esp)
   144a6:	00 00 00 00 
   144aa:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%esp)
   144b1:	59                   	pop    %ecx
   144b2:	8d 44 24 64          	lea    0x64(%esp),%eax
   144b6:	50                   	push   %eax
   144b7:	e8 d4 e0 ff ff       	call   12590 <operand_write>
   144bc:	58                   	pop    %eax
   144bd:	8d 84 24 88 00 00 00 	lea    0x88(%esp),%eax
   144c4:	50                   	push   %eax
   144c5:	e8 c6 e0 ff ff       	call   12590 <operand_write>
   144ca:	89 e8                	mov    %ebp,%eax
   144cc:	89 3c 24             	mov    %edi,(%esp)
   144cf:	0f b6 c0             	movzbl %al,%eax
   144d2:	56                   	push   %esi
   144d3:	50                   	push   %eax
   144d4:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   144da:	50                   	push   %eax
   144db:	8d 83 b7 70 fe ff    	lea    -0x18f49(%ebx),%eax
   144e1:	50                   	push   %eax
   144e2:	e8 b9 dc ff ff       	call   121a0 <print_asm_2>
   144e7:	81 c4 cc 00 00 00    	add    $0xcc,%esp
   144ed:	89 e8                	mov    %ebp,%eax
   144ef:	5b                   	pop    %ebx
   144f0:	5e                   	pop    %esi
   144f1:	5f                   	pop    %edi
   144f2:	5d                   	pop    %ebp
   144f3:	c3                   	ret    
   144f4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   144fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   144ff:	90                   	nop

00014500 <idiv_rm2a_v>:
   14500:	55                   	push   %ebp
   14501:	57                   	push   %edi
   14502:	56                   	push   %esi
   14503:	53                   	push   %ebx
   14504:	e8 77 ff fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14509:	81 c3 f7 aa 03 00    	add    $0x3aaf7,%ebx
   1450f:	81 ec a8 00 00 00    	sub    $0xa8,%esp
   14515:	8d 7c 24 30          	lea    0x30(%esp),%edi
   14519:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   14520:	00 
   14521:	c7 44 24 54 01 00 00 	movl   $0x1,0x54(%esp)
   14528:	00 
   14529:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   14530:	00 
   14531:	8d 93 84 07 00 00    	lea    0x784(%ebx),%edx
   14537:	c7 44 24 58 02 00 00 	movl   $0x2,0x58(%esp)
   1453e:	00 
   1453f:	0f b6 02             	movzbl (%edx),%eax
   14542:	89 54 24 14          	mov    %edx,0x14(%esp)
   14546:	89 44 24 40          	mov    %eax,0x40(%esp)
   1454a:	89 44 24 64          	mov    %eax,0x64(%esp)
   1454e:	57                   	push   %edi
   1454f:	e8 8c de ff ff       	call   123e0 <operand_read>
   14554:	58                   	pop    %eax
   14555:	8d 74 24 54          	lea    0x54(%esp),%esi
   14559:	56                   	push   %esi
   1455a:	e8 81 de ff ff       	call   123e0 <operand_read>
   1455f:	8b 54 24 18          	mov    0x18(%esp),%edx
   14563:	0f b6 02             	movzbl (%edx),%eax
   14566:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%esp)
   1456d:	58                   	pop    %eax
   1456e:	5a                   	pop    %edx
   1456f:	8d 6c 24 74          	lea    0x74(%esp),%ebp
   14573:	55                   	push   %ebp
   14574:	8b 84 24 bc 00 00 00 	mov    0xbc(%esp),%eax
   1457b:	83 c0 01             	add    $0x1,%eax
   1457e:	50                   	push   %eax
   1457f:	e8 fc d9 ff ff       	call   11f80 <modrm_rm>
   14584:	89 2c 24             	mov    %ebp,(%esp)
   14587:	83 c0 01             	add    $0x1,%eax
   1458a:	89 44 24 24          	mov    %eax,0x24(%esp)
   1458e:	e8 4d de ff ff       	call   123e0 <operand_read>
   14593:	8b 54 24 18          	mov    0x18(%esp),%edx
   14597:	0f b6 4c 24 24       	movzbl 0x24(%esp),%ecx
   1459c:	0f b6 02             	movzbl (%edx),%eax
   1459f:	89 4c 24 28          	mov    %ecx,0x28(%esp)
   145a3:	83 c4 10             	add    $0x10,%esp
   145a6:	3c 10                	cmp    $0x10,%al
   145a8:	0f 84 a2 00 00 00    	je     14650 <idiv_rm2a_v+0x150>
   145ae:	8b 4c 24 30          	mov    0x30(%esp),%ecx
   145b2:	83 ec 0c             	sub    $0xc,%esp
   145b5:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   145b9:	8b 4c 24 60          	mov    0x60(%esp),%ecx
   145bd:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   145c1:	50                   	push   %eax
   145c2:	ff 74 24 1c          	pushl  0x1c(%esp)
   145c6:	ff 74 24 1c          	pushl  0x1c(%esp)
   145ca:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   145d1:	99                   	cltd   
   145d2:	52                   	push   %edx
   145d3:	50                   	push   %eax
   145d4:	e8 67 b2 ff ff       	call   f840 <alu_idiv>
   145d9:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   145dd:	83 c4 20             	add    $0x20,%esp
   145e0:	ff 74 24 0c          	pushl  0xc(%esp)
   145e4:	ff 74 24 0c          	pushl  0xc(%esp)
   145e8:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   145ef:	99                   	cltd   
   145f0:	52                   	push   %edx
   145f1:	50                   	push   %eax
   145f2:	e8 19 b3 ff ff       	call   f910 <alu_imod>
   145f7:	89 44 24 18          	mov    %eax,0x18(%esp)
   145fb:	58                   	pop    %eax
   145fc:	5a                   	pop    %edx
   145fd:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   14603:	57                   	push   %edi
   14604:	56                   	push   %esi
   14605:	55                   	push   %ebp
   14606:	ff 74 24 2c          	pushl  0x2c(%esp)
   1460a:	52                   	push   %edx
   1460b:	8d 93 b7 70 fe ff    	lea    -0x18f49(%ebx),%edx
   14611:	52                   	push   %edx
   14612:	e8 99 dc ff ff       	call   122b0 <print_asm_3>
   14617:	83 c4 20             	add    $0x20,%esp
   1461a:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1461e:	8b 44 24 08          	mov    0x8(%esp),%eax
   14622:	89 4c 24 30          	mov    %ecx,0x30(%esp)
   14626:	83 ec 0c             	sub    $0xc,%esp
   14629:	89 44 24 60          	mov    %eax,0x60(%esp)
   1462d:	57                   	push   %edi
   1462e:	e8 5d df ff ff       	call   12590 <operand_write>
   14633:	89 34 24             	mov    %esi,(%esp)
   14636:	e8 55 df ff ff       	call   12590 <operand_write>
   1463b:	8b 44 24 24          	mov    0x24(%esp),%eax
   1463f:	81 c4 ac 00 00 00    	add    $0xac,%esp
   14645:	5b                   	pop    %ebx
   14646:	5e                   	pop    %esi
   14647:	5f                   	pop    %edi
   14648:	5d                   	pop    %ebp
   14649:	c3                   	ret    
   1464a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14650:	83 ec 0c             	sub    $0xc,%esp
   14653:	6a 10                	push   $0x10
   14655:	8b 44 24 64          	mov    0x64(%esp),%eax
   14659:	c1 e0 10             	shl    $0x10,%eax
   1465c:	0b 44 24 40          	or     0x40(%esp),%eax
   14660:	99                   	cltd   
   14661:	52                   	push   %edx
   14662:	50                   	push   %eax
   14663:	0f bf 84 24 90 00 00 	movswl 0x90(%esp),%eax
   1466a:	00 
   1466b:	99                   	cltd   
   1466c:	52                   	push   %edx
   1466d:	50                   	push   %eax
   1466e:	e8 cd b1 ff ff       	call   f840 <alu_idiv>
   14673:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   14677:	83 c4 20             	add    $0x20,%esp
   1467a:	8b 44 24 54          	mov    0x54(%esp),%eax
   1467e:	c1 e0 10             	shl    $0x10,%eax
   14681:	0b 44 24 30          	or     0x30(%esp),%eax
   14685:	99                   	cltd   
   14686:	52                   	push   %edx
   14687:	50                   	push   %eax
   14688:	0f bf 84 24 80 00 00 	movswl 0x80(%esp),%eax
   1468f:	00 
   14690:	99                   	cltd   
   14691:	52                   	push   %edx
   14692:	50                   	push   %eax
   14693:	e8 78 b2 ff ff       	call   f910 <alu_imod>
   14698:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1469e:	89 44 24 18          	mov    %eax,0x18(%esp)
   146a2:	59                   	pop    %ecx
   146a3:	58                   	pop    %eax
   146a4:	57                   	push   %edi
   146a5:	56                   	push   %esi
   146a6:	55                   	push   %ebp
   146a7:	ff 74 24 2c          	pushl  0x2c(%esp)
   146ab:	52                   	push   %edx
   146ac:	8d 93 b7 70 fe ff    	lea    -0x18f49(%ebx),%edx
   146b2:	52                   	push   %edx
   146b3:	e8 f8 db ff ff       	call   122b0 <print_asm_3>
   146b8:	83 c4 20             	add    $0x20,%esp
   146bb:	8b 44 24 08          	mov    0x8(%esp),%eax
   146bf:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   146c3:	e9 5a ff ff ff       	jmp    14622 <idiv_rm2a_v+0x122>
   146c8:	66 90                	xchg   %ax,%ax
   146ca:	66 90                	xchg   %ax,%ax
   146cc:	66 90                	xchg   %ax,%ax
   146ce:	66 90                	xchg   %ax,%ax

000146d0 <instr_execute_1op_cc_pass>:
   146d0:	56                   	push   %esi
   146d1:	53                   	push   %ebx
   146d2:	e8 a9 fd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   146d7:	81 c3 29 a9 03 00    	add    $0x3a929,%ebx
   146dd:	83 ec 10             	sub    $0x10,%esp
   146e0:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   146e6:	56                   	push   %esi
   146e7:	e8 f4 dc ff ff       	call   123e0 <operand_read>
   146ec:	8b 56 10             	mov    0x10(%esi),%edx
   146ef:	83 c4 10             	add    $0x10,%esp
   146f2:	8b 46 0c             	mov    0xc(%esi),%eax
   146f5:	8d 4a f8             	lea    -0x8(%edx),%ecx
   146f8:	83 e1 f7             	and    $0xfffffff7,%ecx
   146fb:	74 05                	je     14702 <instr_execute_1op_cc_pass+0x32>
   146fd:	83 fa 20             	cmp    $0x20,%edx
   14700:	75 30                	jne    14732 <instr_execute_1op_cc_pass+0x62>
   14702:	83 fa 08             	cmp    $0x8,%edx
   14705:	74 19                	je     14720 <instr_execute_1op_cc_pass+0x50>
   14707:	83 fa 10             	cmp    $0x10,%edx
   1470a:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   14710:	0f bf c8             	movswl %ax,%ecx
   14713:	0f 44 c1             	cmove  %ecx,%eax
   14716:	01 42 20             	add    %eax,0x20(%edx)
   14719:	83 c4 04             	add    $0x4,%esp
   1471c:	5b                   	pop    %ebx
   1471d:	5e                   	pop    %esi
   1471e:	c3                   	ret    
   1471f:	90                   	nop
   14720:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   14726:	0f be c0             	movsbl %al,%eax
   14729:	01 42 20             	add    %eax,0x20(%edx)
   1472c:	83 c4 04             	add    $0x4,%esp
   1472f:	5b                   	pop    %ebx
   14730:	5e                   	pop    %esi
   14731:	c3                   	ret    
   14732:	8d 83 0c 67 fe ff    	lea    -0x198f4(%ebx),%eax
   14738:	50                   	push   %eax
   14739:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1473f:	6a 2e                	push   $0x2e
   14741:	50                   	push   %eax
   14742:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   14748:	50                   	push   %eax
   14749:	e8 c2 fb fe ff       	call   4310 <__assert_fail@plt>
   1474e:	66 90                	xchg   %ax,%ax

00014750 <je_near>:
   14750:	53                   	push   %ebx
   14751:	e8 2a fd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14756:	81 c3 aa a8 03 00    	add    $0x3a8aa,%ebx
   1475c:	83 ec 08             	sub    $0x8,%esp
   1475f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14763:	8d 51 01             	lea    0x1(%ecx),%edx
   14766:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1476c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14773:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14779:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14780:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14786:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1478a:	89 50 04             	mov    %edx,0x4(%eax)
   1478d:	50                   	push   %eax
   1478e:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   14794:	6a 05                	push   $0x5
   14796:	50                   	push   %eax
   14797:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1479d:	50                   	push   %eax
   1479e:	e8 fd d8 ff ff       	call   120a0 <print_asm_1>
   147a3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   147a9:	83 c4 10             	add    $0x10,%esp
   147ac:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   147b0:	75 0e                	jne    147c0 <je_near+0x70>
   147b2:	83 c4 08             	add    $0x8,%esp
   147b5:	b8 05 00 00 00       	mov    $0x5,%eax
   147ba:	5b                   	pop    %ebx
   147bb:	c3                   	ret    
   147bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   147c0:	e8 0b ff ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   147c5:	83 c4 08             	add    $0x8,%esp
   147c8:	b8 05 00 00 00       	mov    $0x5,%eax
   147cd:	5b                   	pop    %ebx
   147ce:	c3                   	ret    
   147cf:	90                   	nop

000147d0 <ja_near>:
   147d0:	53                   	push   %ebx
   147d1:	e8 aa fc fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   147d6:	81 c3 2a a8 03 00    	add    $0x3a82a,%ebx
   147dc:	83 ec 08             	sub    $0x8,%esp
   147df:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   147e3:	8d 51 01             	lea    0x1(%ecx),%edx
   147e6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   147ec:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   147f3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   147f9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14800:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14806:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1480a:	89 50 04             	mov    %edx,0x4(%eax)
   1480d:	50                   	push   %eax
   1480e:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   14814:	6a 05                	push   $0x5
   14816:	50                   	push   %eax
   14817:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1481d:	50                   	push   %eax
   1481e:	e8 7d d8 ff ff       	call   120a0 <print_asm_1>
   14823:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14829:	83 c4 10             	add    $0x10,%esp
   1482c:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   14830:	74 0e                	je     14840 <ja_near+0x70>
   14832:	83 c4 08             	add    $0x8,%esp
   14835:	b8 05 00 00 00       	mov    $0x5,%eax
   1483a:	5b                   	pop    %ebx
   1483b:	c3                   	ret    
   1483c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14840:	e8 8b fe ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14845:	83 c4 08             	add    $0x8,%esp
   14848:	b8 05 00 00 00       	mov    $0x5,%eax
   1484d:	5b                   	pop    %ebx
   1484e:	c3                   	ret    
   1484f:	90                   	nop

00014850 <jb_near>:
   14850:	53                   	push   %ebx
   14851:	e8 2a fc fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14856:	81 c3 aa a7 03 00    	add    $0x3a7aa,%ebx
   1485c:	83 ec 08             	sub    $0x8,%esp
   1485f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14863:	8d 51 01             	lea    0x1(%ecx),%edx
   14866:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1486c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14873:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14879:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14880:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14886:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1488a:	89 50 04             	mov    %edx,0x4(%eax)
   1488d:	50                   	push   %eax
   1488e:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   14894:	6a 05                	push   $0x5
   14896:	50                   	push   %eax
   14897:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1489d:	50                   	push   %eax
   1489e:	e8 fd d7 ff ff       	call   120a0 <print_asm_1>
   148a3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   148a9:	83 c4 10             	add    $0x10,%esp
   148ac:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   148b0:	83 e0 41             	and    $0x41,%eax
   148b3:	3c 01                	cmp    $0x1,%al
   148b5:	74 11                	je     148c8 <jb_near+0x78>
   148b7:	83 c4 08             	add    $0x8,%esp
   148ba:	b8 05 00 00 00       	mov    $0x5,%eax
   148bf:	5b                   	pop    %ebx
   148c0:	c3                   	ret    
   148c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   148c8:	e8 03 fe ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   148cd:	83 c4 08             	add    $0x8,%esp
   148d0:	b8 05 00 00 00       	mov    $0x5,%eax
   148d5:	5b                   	pop    %ebx
   148d6:	c3                   	ret    
   148d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   148de:	66 90                	xchg   %ax,%ax

000148e0 <jg_near>:
   148e0:	53                   	push   %ebx
   148e1:	e8 9a fb fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   148e6:	81 c3 1a a7 03 00    	add    $0x3a71a,%ebx
   148ec:	83 ec 08             	sub    $0x8,%esp
   148ef:	8b 54 24 10          	mov    0x10(%esp),%edx
   148f3:	83 c2 01             	add    $0x1,%edx
   148f6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   148fc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14903:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14909:	89 50 04             	mov    %edx,0x4(%eax)
   1490c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14913:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14919:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1491d:	50                   	push   %eax
   1491e:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   14924:	6a 05                	push   $0x5
   14926:	50                   	push   %eax
   14927:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1492d:	50                   	push   %eax
   1492e:	e8 6d d7 ff ff       	call   120a0 <print_asm_1>
   14933:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14939:	83 c4 10             	add    $0x10,%esp
   1493c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   14940:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   14944:	89 d1                	mov    %edx,%ecx
   14946:	c0 e8 03             	shr    $0x3,%al
   14949:	c0 e9 07             	shr    $0x7,%cl
   1494c:	83 e0 01             	and    $0x1,%eax
   1494f:	38 c1                	cmp    %al,%cl
   14951:	74 0d                	je     14960 <jg_near+0x80>
   14953:	83 c4 08             	add    $0x8,%esp
   14956:	b8 05 00 00 00       	mov    $0x5,%eax
   1495b:	5b                   	pop    %ebx
   1495c:	c3                   	ret    
   1495d:	8d 76 00             	lea    0x0(%esi),%esi
   14960:	83 e2 40             	and    $0x40,%edx
   14963:	75 ee                	jne    14953 <jg_near+0x73>
   14965:	e8 66 fd ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   1496a:	83 c4 08             	add    $0x8,%esp
   1496d:	b8 05 00 00 00       	mov    $0x5,%eax
   14972:	5b                   	pop    %ebx
   14973:	c3                   	ret    
   14974:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1497b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1497f:	90                   	nop

00014980 <jl_near>:
   14980:	53                   	push   %ebx
   14981:	e8 fa fa fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14986:	81 c3 7a a6 03 00    	add    $0x3a67a,%ebx
   1498c:	83 ec 08             	sub    $0x8,%esp
   1498f:	8b 54 24 10          	mov    0x10(%esp),%edx
   14993:	83 c2 01             	add    $0x1,%edx
   14996:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1499c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   149a3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   149a9:	89 50 04             	mov    %edx,0x4(%eax)
   149ac:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   149b3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   149b9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   149bd:	50                   	push   %eax
   149be:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   149c4:	6a 05                	push   $0x5
   149c6:	50                   	push   %eax
   149c7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   149cd:	50                   	push   %eax
   149ce:	e8 cd d6 ff ff       	call   120a0 <print_asm_1>
   149d3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   149d9:	83 c4 10             	add    $0x10,%esp
   149dc:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   149e0:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   149e4:	89 d1                	mov    %edx,%ecx
   149e6:	c0 e8 03             	shr    $0x3,%al
   149e9:	c0 e9 07             	shr    $0x7,%cl
   149ec:	83 e0 01             	and    $0x1,%eax
   149ef:	38 c1                	cmp    %al,%cl
   149f1:	74 05                	je     149f8 <jl_near+0x78>
   149f3:	83 e2 40             	and    $0x40,%edx
   149f6:	74 10                	je     14a08 <jl_near+0x88>
   149f8:	83 c4 08             	add    $0x8,%esp
   149fb:	b8 05 00 00 00       	mov    $0x5,%eax
   14a00:	5b                   	pop    %ebx
   14a01:	c3                   	ret    
   14a02:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14a08:	e8 c3 fc ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14a0d:	83 c4 08             	add    $0x8,%esp
   14a10:	b8 05 00 00 00       	mov    $0x5,%eax
   14a15:	5b                   	pop    %ebx
   14a16:	c3                   	ret    
   14a17:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14a1e:	66 90                	xchg   %ax,%ax

00014a20 <jo_near>:
   14a20:	53                   	push   %ebx
   14a21:	e8 5a fa fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14a26:	81 c3 da a5 03 00    	add    $0x3a5da,%ebx
   14a2c:	83 ec 08             	sub    $0x8,%esp
   14a2f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14a33:	8d 51 01             	lea    0x1(%ecx),%edx
   14a36:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14a3c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14a43:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14a49:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14a50:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14a56:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14a5a:	89 50 04             	mov    %edx,0x4(%eax)
   14a5d:	50                   	push   %eax
   14a5e:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   14a64:	6a 05                	push   $0x5
   14a66:	50                   	push   %eax
   14a67:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14a6d:	50                   	push   %eax
   14a6e:	e8 2d d6 ff ff       	call   120a0 <print_asm_1>
   14a73:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14a79:	83 c4 10             	add    $0x10,%esp
   14a7c:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   14a80:	75 0e                	jne    14a90 <jo_near+0x70>
   14a82:	83 c4 08             	add    $0x8,%esp
   14a85:	b8 05 00 00 00       	mov    $0x5,%eax
   14a8a:	5b                   	pop    %ebx
   14a8b:	c3                   	ret    
   14a8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14a90:	e8 3b fc ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14a95:	83 c4 08             	add    $0x8,%esp
   14a98:	b8 05 00 00 00       	mov    $0x5,%eax
   14a9d:	5b                   	pop    %ebx
   14a9e:	c3                   	ret    
   14a9f:	90                   	nop

00014aa0 <jp_near>:
   14aa0:	53                   	push   %ebx
   14aa1:	e8 da f9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14aa6:	81 c3 5a a5 03 00    	add    $0x3a55a,%ebx
   14aac:	83 ec 08             	sub    $0x8,%esp
   14aaf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14ab3:	8d 51 01             	lea    0x1(%ecx),%edx
   14ab6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14abc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14ac3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14ac9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14ad0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14ad6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14ada:	89 50 04             	mov    %edx,0x4(%eax)
   14add:	50                   	push   %eax
   14ade:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   14ae4:	6a 05                	push   $0x5
   14ae6:	50                   	push   %eax
   14ae7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14aed:	50                   	push   %eax
   14aee:	e8 ad d5 ff ff       	call   120a0 <print_asm_1>
   14af3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14af9:	83 c4 10             	add    $0x10,%esp
   14afc:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   14b00:	75 0e                	jne    14b10 <jp_near+0x70>
   14b02:	83 c4 08             	add    $0x8,%esp
   14b05:	b8 05 00 00 00       	mov    $0x5,%eax
   14b0a:	5b                   	pop    %ebx
   14b0b:	c3                   	ret    
   14b0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14b10:	e8 bb fb ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14b15:	83 c4 08             	add    $0x8,%esp
   14b18:	b8 05 00 00 00       	mov    $0x5,%eax
   14b1d:	5b                   	pop    %ebx
   14b1e:	c3                   	ret    
   14b1f:	90                   	nop

00014b20 <js_near>:
   14b20:	53                   	push   %ebx
   14b21:	e8 5a f9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14b26:	81 c3 da a4 03 00    	add    $0x3a4da,%ebx
   14b2c:	83 ec 08             	sub    $0x8,%esp
   14b2f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14b33:	8d 51 01             	lea    0x1(%ecx),%edx
   14b36:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14b3c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14b43:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14b49:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14b50:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14b56:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14b5a:	89 50 04             	mov    %edx,0x4(%eax)
   14b5d:	50                   	push   %eax
   14b5e:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   14b64:	6a 05                	push   $0x5
   14b66:	50                   	push   %eax
   14b67:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14b6d:	50                   	push   %eax
   14b6e:	e8 2d d5 ff ff       	call   120a0 <print_asm_1>
   14b73:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14b79:	83 c4 10             	add    $0x10,%esp
   14b7c:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   14b80:	78 0e                	js     14b90 <js_near+0x70>
   14b82:	83 c4 08             	add    $0x8,%esp
   14b85:	b8 05 00 00 00       	mov    $0x5,%eax
   14b8a:	5b                   	pop    %ebx
   14b8b:	c3                   	ret    
   14b8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14b90:	e8 3b fb ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14b95:	83 c4 08             	add    $0x8,%esp
   14b98:	b8 05 00 00 00       	mov    $0x5,%eax
   14b9d:	5b                   	pop    %ebx
   14b9e:	c3                   	ret    
   14b9f:	90                   	nop

00014ba0 <jae_near>:
   14ba0:	53                   	push   %ebx
   14ba1:	e8 da f8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14ba6:	81 c3 5a a4 03 00    	add    $0x3a45a,%ebx
   14bac:	83 ec 08             	sub    $0x8,%esp
   14baf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14bb3:	8d 51 01             	lea    0x1(%ecx),%edx
   14bb6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14bbc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14bc3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14bc9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14bd0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14bd6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14bda:	89 50 04             	mov    %edx,0x4(%eax)
   14bdd:	50                   	push   %eax
   14bde:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   14be4:	6a 05                	push   $0x5
   14be6:	50                   	push   %eax
   14be7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14bed:	50                   	push   %eax
   14bee:	e8 ad d4 ff ff       	call   120a0 <print_asm_1>
   14bf3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14bf9:	83 c4 10             	add    $0x10,%esp
   14bfc:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   14c00:	83 e0 41             	and    $0x41,%eax
   14c03:	3c 01                	cmp    $0x1,%al
   14c05:	74 05                	je     14c0c <jae_near+0x6c>
   14c07:	e8 c4 fa ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14c0c:	83 c4 08             	add    $0x8,%esp
   14c0f:	b8 05 00 00 00       	mov    $0x5,%eax
   14c14:	5b                   	pop    %ebx
   14c15:	c3                   	ret    
   14c16:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14c1d:	8d 76 00             	lea    0x0(%esi),%esi

00014c20 <jge_near>:
   14c20:	53                   	push   %ebx
   14c21:	e8 5a f8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14c26:	81 c3 da a3 03 00    	add    $0x3a3da,%ebx
   14c2c:	83 ec 08             	sub    $0x8,%esp
   14c2f:	8b 54 24 10          	mov    0x10(%esp),%edx
   14c33:	83 c2 01             	add    $0x1,%edx
   14c36:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14c3c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14c43:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14c49:	89 50 04             	mov    %edx,0x4(%eax)
   14c4c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14c53:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14c59:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14c5d:	50                   	push   %eax
   14c5e:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   14c64:	6a 05                	push   $0x5
   14c66:	50                   	push   %eax
   14c67:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14c6d:	50                   	push   %eax
   14c6e:	e8 2d d4 ff ff       	call   120a0 <print_asm_1>
   14c73:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14c79:	83 c4 10             	add    $0x10,%esp
   14c7c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   14c80:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   14c84:	89 d1                	mov    %edx,%ecx
   14c86:	c0 e8 03             	shr    $0x3,%al
   14c89:	c0 e9 07             	shr    $0x7,%cl
   14c8c:	83 e0 01             	and    $0x1,%eax
   14c8f:	38 c1                	cmp    %al,%cl
   14c91:	74 05                	je     14c98 <jge_near+0x78>
   14c93:	83 e2 40             	and    $0x40,%edx
   14c96:	74 05                	je     14c9d <jge_near+0x7d>
   14c98:	e8 33 fa ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14c9d:	83 c4 08             	add    $0x8,%esp
   14ca0:	b8 05 00 00 00       	mov    $0x5,%eax
   14ca5:	5b                   	pop    %ebx
   14ca6:	c3                   	ret    
   14ca7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14cae:	66 90                	xchg   %ax,%ax

00014cb0 <jle_near>:
   14cb0:	53                   	push   %ebx
   14cb1:	e8 ca f7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14cb6:	81 c3 4a a3 03 00    	add    $0x3a34a,%ebx
   14cbc:	83 ec 08             	sub    $0x8,%esp
   14cbf:	8b 54 24 10          	mov    0x10(%esp),%edx
   14cc3:	83 c2 01             	add    $0x1,%edx
   14cc6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14ccc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14cd3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14cd9:	89 50 04             	mov    %edx,0x4(%eax)
   14cdc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14ce3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14ce9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14ced:	50                   	push   %eax
   14cee:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   14cf4:	6a 05                	push   $0x5
   14cf6:	50                   	push   %eax
   14cf7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14cfd:	50                   	push   %eax
   14cfe:	e8 9d d3 ff ff       	call   120a0 <print_asm_1>
   14d03:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14d09:	83 c4 10             	add    $0x10,%esp
   14d0c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   14d10:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   14d14:	89 d1                	mov    %edx,%ecx
   14d16:	c0 e8 03             	shr    $0x3,%al
   14d19:	c0 e9 07             	shr    $0x7,%cl
   14d1c:	83 e0 01             	and    $0x1,%eax
   14d1f:	38 c1                	cmp    %al,%cl
   14d21:	75 05                	jne    14d28 <jle_near+0x78>
   14d23:	83 e2 40             	and    $0x40,%edx
   14d26:	74 05                	je     14d2d <jle_near+0x7d>
   14d28:	e8 a3 f9 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14d2d:	83 c4 08             	add    $0x8,%esp
   14d30:	b8 05 00 00 00       	mov    $0x5,%eax
   14d35:	5b                   	pop    %ebx
   14d36:	c3                   	ret    
   14d37:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14d3e:	66 90                	xchg   %ax,%ax

00014d40 <jna_near>:
   14d40:	53                   	push   %ebx
   14d41:	e8 3a f7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14d46:	81 c3 ba a2 03 00    	add    $0x3a2ba,%ebx
   14d4c:	83 ec 08             	sub    $0x8,%esp
   14d4f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14d53:	8d 51 01             	lea    0x1(%ecx),%edx
   14d56:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14d5c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14d63:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14d69:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14d70:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14d76:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14d7a:	89 50 04             	mov    %edx,0x4(%eax)
   14d7d:	50                   	push   %eax
   14d7e:	8d 83 f6 66 fe ff    	lea    -0x1990a(%ebx),%eax
   14d84:	6a 05                	push   $0x5
   14d86:	50                   	push   %eax
   14d87:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14d8d:	50                   	push   %eax
   14d8e:	e8 0d d3 ff ff       	call   120a0 <print_asm_1>
   14d93:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14d99:	83 c4 10             	add    $0x10,%esp
   14d9c:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   14da0:	75 0e                	jne    14db0 <jna_near+0x70>
   14da2:	83 c4 08             	add    $0x8,%esp
   14da5:	b8 05 00 00 00       	mov    $0x5,%eax
   14daa:	5b                   	pop    %ebx
   14dab:	c3                   	ret    
   14dac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14db0:	e8 1b f9 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14db5:	83 c4 08             	add    $0x8,%esp
   14db8:	b8 05 00 00 00       	mov    $0x5,%eax
   14dbd:	5b                   	pop    %ebx
   14dbe:	c3                   	ret    
   14dbf:	90                   	nop

00014dc0 <jne_near>:
   14dc0:	53                   	push   %ebx
   14dc1:	e8 ba f6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14dc6:	81 c3 3a a2 03 00    	add    $0x3a23a,%ebx
   14dcc:	83 ec 08             	sub    $0x8,%esp
   14dcf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14dd3:	8d 51 01             	lea    0x1(%ecx),%edx
   14dd6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14ddc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14de3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14de9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14df0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14df6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14dfa:	89 50 04             	mov    %edx,0x4(%eax)
   14dfd:	50                   	push   %eax
   14dfe:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   14e04:	6a 05                	push   $0x5
   14e06:	50                   	push   %eax
   14e07:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14e0d:	50                   	push   %eax
   14e0e:	e8 8d d2 ff ff       	call   120a0 <print_asm_1>
   14e13:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14e19:	83 c4 10             	add    $0x10,%esp
   14e1c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   14e20:	74 0e                	je     14e30 <jne_near+0x70>
   14e22:	83 c4 08             	add    $0x8,%esp
   14e25:	b8 05 00 00 00       	mov    $0x5,%eax
   14e2a:	5b                   	pop    %ebx
   14e2b:	c3                   	ret    
   14e2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14e30:	e8 9b f8 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14e35:	83 c4 08             	add    $0x8,%esp
   14e38:	b8 05 00 00 00       	mov    $0x5,%eax
   14e3d:	5b                   	pop    %ebx
   14e3e:	c3                   	ret    
   14e3f:	90                   	nop

00014e40 <jno_near>:
   14e40:	53                   	push   %ebx
   14e41:	e8 3a f6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14e46:	81 c3 ba a1 03 00    	add    $0x3a1ba,%ebx
   14e4c:	83 ec 08             	sub    $0x8,%esp
   14e4f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14e53:	8d 51 01             	lea    0x1(%ecx),%edx
   14e56:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14e5c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14e63:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14e69:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14e70:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14e76:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14e7a:	89 50 04             	mov    %edx,0x4(%eax)
   14e7d:	50                   	push   %eax
   14e7e:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   14e84:	6a 05                	push   $0x5
   14e86:	50                   	push   %eax
   14e87:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14e8d:	50                   	push   %eax
   14e8e:	e8 0d d2 ff ff       	call   120a0 <print_asm_1>
   14e93:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14e99:	83 c4 10             	add    $0x10,%esp
   14e9c:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   14ea0:	74 0e                	je     14eb0 <jno_near+0x70>
   14ea2:	83 c4 08             	add    $0x8,%esp
   14ea5:	b8 05 00 00 00       	mov    $0x5,%eax
   14eaa:	5b                   	pop    %ebx
   14eab:	c3                   	ret    
   14eac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14eb0:	e8 1b f8 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14eb5:	83 c4 08             	add    $0x8,%esp
   14eb8:	b8 05 00 00 00       	mov    $0x5,%eax
   14ebd:	5b                   	pop    %ebx
   14ebe:	c3                   	ret    
   14ebf:	90                   	nop

00014ec0 <jnp_near>:
   14ec0:	53                   	push   %ebx
   14ec1:	e8 ba f5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14ec6:	81 c3 3a a1 03 00    	add    $0x3a13a,%ebx
   14ecc:	83 ec 08             	sub    $0x8,%esp
   14ecf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14ed3:	8d 51 01             	lea    0x1(%ecx),%edx
   14ed6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14edc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14ee3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14ee9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14ef0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14ef6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14efa:	89 50 04             	mov    %edx,0x4(%eax)
   14efd:	50                   	push   %eax
   14efe:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   14f04:	6a 05                	push   $0x5
   14f06:	50                   	push   %eax
   14f07:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14f0d:	50                   	push   %eax
   14f0e:	e8 8d d1 ff ff       	call   120a0 <print_asm_1>
   14f13:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14f19:	83 c4 10             	add    $0x10,%esp
   14f1c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   14f20:	74 0e                	je     14f30 <jnp_near+0x70>
   14f22:	83 c4 08             	add    $0x8,%esp
   14f25:	b8 05 00 00 00       	mov    $0x5,%eax
   14f2a:	5b                   	pop    %ebx
   14f2b:	c3                   	ret    
   14f2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14f30:	e8 9b f7 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14f35:	83 c4 08             	add    $0x8,%esp
   14f38:	b8 05 00 00 00       	mov    $0x5,%eax
   14f3d:	5b                   	pop    %ebx
   14f3e:	c3                   	ret    
   14f3f:	90                   	nop

00014f40 <jns_near>:
   14f40:	53                   	push   %ebx
   14f41:	e8 3a f5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14f46:	81 c3 ba a0 03 00    	add    $0x3a0ba,%ebx
   14f4c:	83 ec 08             	sub    $0x8,%esp
   14f4f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14f53:	8d 51 01             	lea    0x1(%ecx),%edx
   14f56:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14f5c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14f63:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14f69:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   14f70:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14f76:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14f7a:	89 50 04             	mov    %edx,0x4(%eax)
   14f7d:	50                   	push   %eax
   14f7e:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   14f84:	6a 05                	push   $0x5
   14f86:	50                   	push   %eax
   14f87:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   14f8d:	50                   	push   %eax
   14f8e:	e8 0d d1 ff ff       	call   120a0 <print_asm_1>
   14f93:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   14f99:	83 c4 10             	add    $0x10,%esp
   14f9c:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   14fa0:	78 05                	js     14fa7 <jns_near+0x67>
   14fa2:	e8 29 f7 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   14fa7:	83 c4 08             	add    $0x8,%esp
   14faa:	b8 05 00 00 00       	mov    $0x5,%eax
   14faf:	5b                   	pop    %ebx
   14fb0:	c3                   	ret    
   14fb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14fb8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14fbf:	90                   	nop

00014fc0 <je_short_>:
   14fc0:	53                   	push   %ebx
   14fc1:	e8 ba f4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   14fc6:	81 c3 3a a0 03 00    	add    $0x3a03a,%ebx
   14fcc:	83 ec 08             	sub    $0x8,%esp
   14fcf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   14fd3:	8d 51 01             	lea    0x1(%ecx),%edx
   14fd6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   14fdc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   14fe3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   14fe9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   14ff0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   14ff6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   14ffa:	89 50 04             	mov    %edx,0x4(%eax)
   14ffd:	50                   	push   %eax
   14ffe:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   15004:	6a 02                	push   $0x2
   15006:	50                   	push   %eax
   15007:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1500d:	50                   	push   %eax
   1500e:	e8 8d d0 ff ff       	call   120a0 <print_asm_1>
   15013:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15019:	83 c4 10             	add    $0x10,%esp
   1501c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   15020:	75 0e                	jne    15030 <je_short_+0x70>
   15022:	83 c4 08             	add    $0x8,%esp
   15025:	b8 02 00 00 00       	mov    $0x2,%eax
   1502a:	5b                   	pop    %ebx
   1502b:	c3                   	ret    
   1502c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15030:	e8 9b f6 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   15035:	83 c4 08             	add    $0x8,%esp
   15038:	b8 02 00 00 00       	mov    $0x2,%eax
   1503d:	5b                   	pop    %ebx
   1503e:	c3                   	ret    
   1503f:	90                   	nop

00015040 <ja_short_>:
   15040:	53                   	push   %ebx
   15041:	e8 3a f4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15046:	81 c3 ba 9f 03 00    	add    $0x39fba,%ebx
   1504c:	83 ec 08             	sub    $0x8,%esp
   1504f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   15053:	8d 51 01             	lea    0x1(%ecx),%edx
   15056:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1505c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15063:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15069:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15070:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15076:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1507a:	89 50 04             	mov    %edx,0x4(%eax)
   1507d:	50                   	push   %eax
   1507e:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   15084:	6a 02                	push   $0x2
   15086:	50                   	push   %eax
   15087:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1508d:	50                   	push   %eax
   1508e:	e8 0d d0 ff ff       	call   120a0 <print_asm_1>
   15093:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15099:	83 c4 10             	add    $0x10,%esp
   1509c:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   150a0:	74 0e                	je     150b0 <ja_short_+0x70>
   150a2:	83 c4 08             	add    $0x8,%esp
   150a5:	b8 02 00 00 00       	mov    $0x2,%eax
   150aa:	5b                   	pop    %ebx
   150ab:	c3                   	ret    
   150ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   150b0:	e8 1b f6 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   150b5:	83 c4 08             	add    $0x8,%esp
   150b8:	b8 02 00 00 00       	mov    $0x2,%eax
   150bd:	5b                   	pop    %ebx
   150be:	c3                   	ret    
   150bf:	90                   	nop

000150c0 <jb_short_>:
   150c0:	53                   	push   %ebx
   150c1:	e8 ba f3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   150c6:	81 c3 3a 9f 03 00    	add    $0x39f3a,%ebx
   150cc:	83 ec 08             	sub    $0x8,%esp
   150cf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   150d3:	8d 51 01             	lea    0x1(%ecx),%edx
   150d6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   150dc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   150e3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   150e9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   150f0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   150f6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   150fa:	89 50 04             	mov    %edx,0x4(%eax)
   150fd:	50                   	push   %eax
   150fe:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   15104:	6a 02                	push   $0x2
   15106:	50                   	push   %eax
   15107:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1510d:	50                   	push   %eax
   1510e:	e8 8d cf ff ff       	call   120a0 <print_asm_1>
   15113:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15119:	83 c4 10             	add    $0x10,%esp
   1511c:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   15120:	83 e0 41             	and    $0x41,%eax
   15123:	3c 01                	cmp    $0x1,%al
   15125:	74 11                	je     15138 <jb_short_+0x78>
   15127:	83 c4 08             	add    $0x8,%esp
   1512a:	b8 02 00 00 00       	mov    $0x2,%eax
   1512f:	5b                   	pop    %ebx
   15130:	c3                   	ret    
   15131:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15138:	e8 93 f5 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   1513d:	83 c4 08             	add    $0x8,%esp
   15140:	b8 02 00 00 00       	mov    $0x2,%eax
   15145:	5b                   	pop    %ebx
   15146:	c3                   	ret    
   15147:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1514e:	66 90                	xchg   %ax,%ax

00015150 <jg_short_>:
   15150:	53                   	push   %ebx
   15151:	e8 2a f3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15156:	81 c3 aa 9e 03 00    	add    $0x39eaa,%ebx
   1515c:	83 ec 08             	sub    $0x8,%esp
   1515f:	8b 54 24 10          	mov    0x10(%esp),%edx
   15163:	83 c2 01             	add    $0x1,%edx
   15166:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1516c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15173:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15179:	89 50 04             	mov    %edx,0x4(%eax)
   1517c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15183:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15189:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1518d:	50                   	push   %eax
   1518e:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   15194:	6a 02                	push   $0x2
   15196:	50                   	push   %eax
   15197:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1519d:	50                   	push   %eax
   1519e:	e8 fd ce ff ff       	call   120a0 <print_asm_1>
   151a3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   151a9:	83 c4 10             	add    $0x10,%esp
   151ac:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   151b0:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   151b4:	89 d1                	mov    %edx,%ecx
   151b6:	c0 e8 03             	shr    $0x3,%al
   151b9:	c0 e9 07             	shr    $0x7,%cl
   151bc:	83 e0 01             	and    $0x1,%eax
   151bf:	38 c1                	cmp    %al,%cl
   151c1:	74 0d                	je     151d0 <jg_short_+0x80>
   151c3:	83 c4 08             	add    $0x8,%esp
   151c6:	b8 02 00 00 00       	mov    $0x2,%eax
   151cb:	5b                   	pop    %ebx
   151cc:	c3                   	ret    
   151cd:	8d 76 00             	lea    0x0(%esi),%esi
   151d0:	83 e2 40             	and    $0x40,%edx
   151d3:	75 ee                	jne    151c3 <jg_short_+0x73>
   151d5:	e8 f6 f4 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   151da:	83 c4 08             	add    $0x8,%esp
   151dd:	b8 02 00 00 00       	mov    $0x2,%eax
   151e2:	5b                   	pop    %ebx
   151e3:	c3                   	ret    
   151e4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   151eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   151ef:	90                   	nop

000151f0 <jl_short_>:
   151f0:	53                   	push   %ebx
   151f1:	e8 8a f2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   151f6:	81 c3 0a 9e 03 00    	add    $0x39e0a,%ebx
   151fc:	83 ec 08             	sub    $0x8,%esp
   151ff:	8b 54 24 10          	mov    0x10(%esp),%edx
   15203:	83 c2 01             	add    $0x1,%edx
   15206:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1520c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15213:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15219:	89 50 04             	mov    %edx,0x4(%eax)
   1521c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15223:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15229:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1522d:	50                   	push   %eax
   1522e:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   15234:	6a 02                	push   $0x2
   15236:	50                   	push   %eax
   15237:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1523d:	50                   	push   %eax
   1523e:	e8 5d ce ff ff       	call   120a0 <print_asm_1>
   15243:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15249:	83 c4 10             	add    $0x10,%esp
   1524c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   15250:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   15254:	89 d1                	mov    %edx,%ecx
   15256:	c0 e8 03             	shr    $0x3,%al
   15259:	c0 e9 07             	shr    $0x7,%cl
   1525c:	83 e0 01             	and    $0x1,%eax
   1525f:	38 c1                	cmp    %al,%cl
   15261:	74 05                	je     15268 <jl_short_+0x78>
   15263:	83 e2 40             	and    $0x40,%edx
   15266:	74 10                	je     15278 <jl_short_+0x88>
   15268:	83 c4 08             	add    $0x8,%esp
   1526b:	b8 02 00 00 00       	mov    $0x2,%eax
   15270:	5b                   	pop    %ebx
   15271:	c3                   	ret    
   15272:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15278:	e8 53 f4 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   1527d:	83 c4 08             	add    $0x8,%esp
   15280:	b8 02 00 00 00       	mov    $0x2,%eax
   15285:	5b                   	pop    %ebx
   15286:	c3                   	ret    
   15287:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1528e:	66 90                	xchg   %ax,%ax

00015290 <jo_short_>:
   15290:	53                   	push   %ebx
   15291:	e8 ea f1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15296:	81 c3 6a 9d 03 00    	add    $0x39d6a,%ebx
   1529c:	83 ec 08             	sub    $0x8,%esp
   1529f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   152a3:	8d 51 01             	lea    0x1(%ecx),%edx
   152a6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   152ac:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   152b3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   152b9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   152c0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   152c6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   152ca:	89 50 04             	mov    %edx,0x4(%eax)
   152cd:	50                   	push   %eax
   152ce:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   152d4:	6a 02                	push   $0x2
   152d6:	50                   	push   %eax
   152d7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   152dd:	50                   	push   %eax
   152de:	e8 bd cd ff ff       	call   120a0 <print_asm_1>
   152e3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   152e9:	83 c4 10             	add    $0x10,%esp
   152ec:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   152f0:	75 0e                	jne    15300 <jo_short_+0x70>
   152f2:	83 c4 08             	add    $0x8,%esp
   152f5:	b8 02 00 00 00       	mov    $0x2,%eax
   152fa:	5b                   	pop    %ebx
   152fb:	c3                   	ret    
   152fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15300:	e8 cb f3 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   15305:	83 c4 08             	add    $0x8,%esp
   15308:	b8 02 00 00 00       	mov    $0x2,%eax
   1530d:	5b                   	pop    %ebx
   1530e:	c3                   	ret    
   1530f:	90                   	nop

00015310 <jp_short_>:
   15310:	53                   	push   %ebx
   15311:	e8 6a f1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15316:	81 c3 ea 9c 03 00    	add    $0x39cea,%ebx
   1531c:	83 ec 08             	sub    $0x8,%esp
   1531f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   15323:	8d 51 01             	lea    0x1(%ecx),%edx
   15326:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1532c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15333:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15339:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15340:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15346:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1534a:	89 50 04             	mov    %edx,0x4(%eax)
   1534d:	50                   	push   %eax
   1534e:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   15354:	6a 02                	push   $0x2
   15356:	50                   	push   %eax
   15357:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1535d:	50                   	push   %eax
   1535e:	e8 3d cd ff ff       	call   120a0 <print_asm_1>
   15363:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15369:	83 c4 10             	add    $0x10,%esp
   1536c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   15370:	75 0e                	jne    15380 <jp_short_+0x70>
   15372:	83 c4 08             	add    $0x8,%esp
   15375:	b8 02 00 00 00       	mov    $0x2,%eax
   1537a:	5b                   	pop    %ebx
   1537b:	c3                   	ret    
   1537c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15380:	e8 4b f3 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   15385:	83 c4 08             	add    $0x8,%esp
   15388:	b8 02 00 00 00       	mov    $0x2,%eax
   1538d:	5b                   	pop    %ebx
   1538e:	c3                   	ret    
   1538f:	90                   	nop

00015390 <js_short_>:
   15390:	53                   	push   %ebx
   15391:	e8 ea f0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15396:	81 c3 6a 9c 03 00    	add    $0x39c6a,%ebx
   1539c:	83 ec 08             	sub    $0x8,%esp
   1539f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   153a3:	8d 51 01             	lea    0x1(%ecx),%edx
   153a6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   153ac:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   153b3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   153b9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   153c0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   153c6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   153ca:	89 50 04             	mov    %edx,0x4(%eax)
   153cd:	50                   	push   %eax
   153ce:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   153d4:	6a 02                	push   $0x2
   153d6:	50                   	push   %eax
   153d7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   153dd:	50                   	push   %eax
   153de:	e8 bd cc ff ff       	call   120a0 <print_asm_1>
   153e3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   153e9:	83 c4 10             	add    $0x10,%esp
   153ec:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   153f0:	78 0e                	js     15400 <js_short_+0x70>
   153f2:	83 c4 08             	add    $0x8,%esp
   153f5:	b8 02 00 00 00       	mov    $0x2,%eax
   153fa:	5b                   	pop    %ebx
   153fb:	c3                   	ret    
   153fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15400:	e8 cb f2 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   15405:	83 c4 08             	add    $0x8,%esp
   15408:	b8 02 00 00 00       	mov    $0x2,%eax
   1540d:	5b                   	pop    %ebx
   1540e:	c3                   	ret    
   1540f:	90                   	nop

00015410 <jae_short_>:
   15410:	53                   	push   %ebx
   15411:	e8 6a f0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15416:	81 c3 ea 9b 03 00    	add    $0x39bea,%ebx
   1541c:	83 ec 08             	sub    $0x8,%esp
   1541f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   15423:	8d 51 01             	lea    0x1(%ecx),%edx
   15426:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1542c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15433:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15439:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15440:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15446:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1544a:	89 50 04             	mov    %edx,0x4(%eax)
   1544d:	50                   	push   %eax
   1544e:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   15454:	6a 02                	push   $0x2
   15456:	50                   	push   %eax
   15457:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1545d:	50                   	push   %eax
   1545e:	e8 3d cc ff ff       	call   120a0 <print_asm_1>
   15463:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15469:	83 c4 10             	add    $0x10,%esp
   1546c:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   15470:	83 e0 41             	and    $0x41,%eax
   15473:	3c 01                	cmp    $0x1,%al
   15475:	74 05                	je     1547c <jae_short_+0x6c>
   15477:	e8 54 f2 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   1547c:	83 c4 08             	add    $0x8,%esp
   1547f:	b8 02 00 00 00       	mov    $0x2,%eax
   15484:	5b                   	pop    %ebx
   15485:	c3                   	ret    
   15486:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1548d:	8d 76 00             	lea    0x0(%esi),%esi

00015490 <jge_short_>:
   15490:	53                   	push   %ebx
   15491:	e8 ea ef fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15496:	81 c3 6a 9b 03 00    	add    $0x39b6a,%ebx
   1549c:	83 ec 08             	sub    $0x8,%esp
   1549f:	8b 54 24 10          	mov    0x10(%esp),%edx
   154a3:	83 c2 01             	add    $0x1,%edx
   154a6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   154ac:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   154b3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   154b9:	89 50 04             	mov    %edx,0x4(%eax)
   154bc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   154c3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   154c9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   154cd:	50                   	push   %eax
   154ce:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   154d4:	6a 02                	push   $0x2
   154d6:	50                   	push   %eax
   154d7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   154dd:	50                   	push   %eax
   154de:	e8 bd cb ff ff       	call   120a0 <print_asm_1>
   154e3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   154e9:	83 c4 10             	add    $0x10,%esp
   154ec:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   154f0:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   154f4:	89 d1                	mov    %edx,%ecx
   154f6:	c0 e8 03             	shr    $0x3,%al
   154f9:	c0 e9 07             	shr    $0x7,%cl
   154fc:	83 e0 01             	and    $0x1,%eax
   154ff:	38 c1                	cmp    %al,%cl
   15501:	74 05                	je     15508 <jge_short_+0x78>
   15503:	83 e2 40             	and    $0x40,%edx
   15506:	74 05                	je     1550d <jge_short_+0x7d>
   15508:	e8 c3 f1 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   1550d:	83 c4 08             	add    $0x8,%esp
   15510:	b8 02 00 00 00       	mov    $0x2,%eax
   15515:	5b                   	pop    %ebx
   15516:	c3                   	ret    
   15517:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1551e:	66 90                	xchg   %ax,%ax

00015520 <jle_short_>:
   15520:	53                   	push   %ebx
   15521:	e8 5a ef fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15526:	81 c3 da 9a 03 00    	add    $0x39ada,%ebx
   1552c:	83 ec 08             	sub    $0x8,%esp
   1552f:	8b 54 24 10          	mov    0x10(%esp),%edx
   15533:	83 c2 01             	add    $0x1,%edx
   15536:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1553c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15543:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15549:	89 50 04             	mov    %edx,0x4(%eax)
   1554c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15553:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15559:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1555d:	50                   	push   %eax
   1555e:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   15564:	6a 02                	push   $0x2
   15566:	50                   	push   %eax
   15567:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1556d:	50                   	push   %eax
   1556e:	e8 2d cb ff ff       	call   120a0 <print_asm_1>
   15573:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15579:	83 c4 10             	add    $0x10,%esp
   1557c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   15580:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   15584:	89 d1                	mov    %edx,%ecx
   15586:	c0 e8 03             	shr    $0x3,%al
   15589:	c0 e9 07             	shr    $0x7,%cl
   1558c:	83 e0 01             	and    $0x1,%eax
   1558f:	38 c1                	cmp    %al,%cl
   15591:	75 05                	jne    15598 <jle_short_+0x78>
   15593:	83 e2 40             	and    $0x40,%edx
   15596:	74 05                	je     1559d <jle_short_+0x7d>
   15598:	e8 33 f1 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   1559d:	83 c4 08             	add    $0x8,%esp
   155a0:	b8 02 00 00 00       	mov    $0x2,%eax
   155a5:	5b                   	pop    %ebx
   155a6:	c3                   	ret    
   155a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   155ae:	66 90                	xchg   %ax,%ax

000155b0 <jna_short_>:
   155b0:	53                   	push   %ebx
   155b1:	e8 ca ee fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   155b6:	81 c3 4a 9a 03 00    	add    $0x39a4a,%ebx
   155bc:	83 ec 08             	sub    $0x8,%esp
   155bf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   155c3:	8d 51 01             	lea    0x1(%ecx),%edx
   155c6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   155cc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   155d3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   155d9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   155e0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   155e6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   155ea:	89 50 04             	mov    %edx,0x4(%eax)
   155ed:	50                   	push   %eax
   155ee:	8d 83 f6 66 fe ff    	lea    -0x1990a(%ebx),%eax
   155f4:	6a 02                	push   $0x2
   155f6:	50                   	push   %eax
   155f7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   155fd:	50                   	push   %eax
   155fe:	e8 9d ca ff ff       	call   120a0 <print_asm_1>
   15603:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15609:	83 c4 10             	add    $0x10,%esp
   1560c:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   15610:	75 0e                	jne    15620 <jna_short_+0x70>
   15612:	83 c4 08             	add    $0x8,%esp
   15615:	b8 02 00 00 00       	mov    $0x2,%eax
   1561a:	5b                   	pop    %ebx
   1561b:	c3                   	ret    
   1561c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15620:	e8 ab f0 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   15625:	83 c4 08             	add    $0x8,%esp
   15628:	b8 02 00 00 00       	mov    $0x2,%eax
   1562d:	5b                   	pop    %ebx
   1562e:	c3                   	ret    
   1562f:	90                   	nop

00015630 <jne_short_>:
   15630:	53                   	push   %ebx
   15631:	e8 4a ee fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15636:	81 c3 ca 99 03 00    	add    $0x399ca,%ebx
   1563c:	83 ec 08             	sub    $0x8,%esp
   1563f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   15643:	8d 51 01             	lea    0x1(%ecx),%edx
   15646:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1564c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15653:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15659:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15660:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15666:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1566a:	89 50 04             	mov    %edx,0x4(%eax)
   1566d:	50                   	push   %eax
   1566e:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   15674:	6a 02                	push   $0x2
   15676:	50                   	push   %eax
   15677:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1567d:	50                   	push   %eax
   1567e:	e8 1d ca ff ff       	call   120a0 <print_asm_1>
   15683:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15689:	83 c4 10             	add    $0x10,%esp
   1568c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   15690:	74 0e                	je     156a0 <jne_short_+0x70>
   15692:	83 c4 08             	add    $0x8,%esp
   15695:	b8 02 00 00 00       	mov    $0x2,%eax
   1569a:	5b                   	pop    %ebx
   1569b:	c3                   	ret    
   1569c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   156a0:	e8 2b f0 ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   156a5:	83 c4 08             	add    $0x8,%esp
   156a8:	b8 02 00 00 00       	mov    $0x2,%eax
   156ad:	5b                   	pop    %ebx
   156ae:	c3                   	ret    
   156af:	90                   	nop

000156b0 <jno_short_>:
   156b0:	53                   	push   %ebx
   156b1:	e8 ca ed fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   156b6:	81 c3 4a 99 03 00    	add    $0x3994a,%ebx
   156bc:	83 ec 08             	sub    $0x8,%esp
   156bf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   156c3:	8d 51 01             	lea    0x1(%ecx),%edx
   156c6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   156cc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   156d3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   156d9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   156e0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   156e6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   156ea:	89 50 04             	mov    %edx,0x4(%eax)
   156ed:	50                   	push   %eax
   156ee:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   156f4:	6a 02                	push   $0x2
   156f6:	50                   	push   %eax
   156f7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   156fd:	50                   	push   %eax
   156fe:	e8 9d c9 ff ff       	call   120a0 <print_asm_1>
   15703:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15709:	83 c4 10             	add    $0x10,%esp
   1570c:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   15710:	74 0e                	je     15720 <jno_short_+0x70>
   15712:	83 c4 08             	add    $0x8,%esp
   15715:	b8 02 00 00 00       	mov    $0x2,%eax
   1571a:	5b                   	pop    %ebx
   1571b:	c3                   	ret    
   1571c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15720:	e8 ab ef ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   15725:	83 c4 08             	add    $0x8,%esp
   15728:	b8 02 00 00 00       	mov    $0x2,%eax
   1572d:	5b                   	pop    %ebx
   1572e:	c3                   	ret    
   1572f:	90                   	nop

00015730 <jnp_short_>:
   15730:	53                   	push   %ebx
   15731:	e8 4a ed fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15736:	81 c3 ca 98 03 00    	add    $0x398ca,%ebx
   1573c:	83 ec 08             	sub    $0x8,%esp
   1573f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   15743:	8d 51 01             	lea    0x1(%ecx),%edx
   15746:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1574c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15753:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15759:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15760:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15766:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1576a:	89 50 04             	mov    %edx,0x4(%eax)
   1576d:	50                   	push   %eax
   1576e:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   15774:	6a 02                	push   $0x2
   15776:	50                   	push   %eax
   15777:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1577d:	50                   	push   %eax
   1577e:	e8 1d c9 ff ff       	call   120a0 <print_asm_1>
   15783:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15789:	83 c4 10             	add    $0x10,%esp
   1578c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   15790:	74 0e                	je     157a0 <jnp_short_+0x70>
   15792:	83 c4 08             	add    $0x8,%esp
   15795:	b8 02 00 00 00       	mov    $0x2,%eax
   1579a:	5b                   	pop    %ebx
   1579b:	c3                   	ret    
   1579c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   157a0:	e8 2b ef ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   157a5:	83 c4 08             	add    $0x8,%esp
   157a8:	b8 02 00 00 00       	mov    $0x2,%eax
   157ad:	5b                   	pop    %ebx
   157ae:	c3                   	ret    
   157af:	90                   	nop

000157b0 <jns_short_>:
   157b0:	53                   	push   %ebx
   157b1:	e8 ca ec fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   157b6:	81 c3 4a 98 03 00    	add    $0x3984a,%ebx
   157bc:	83 ec 08             	sub    $0x8,%esp
   157bf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   157c3:	8d 51 01             	lea    0x1(%ecx),%edx
   157c6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   157cc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   157d3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   157d9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   157e0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   157e6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   157ea:	89 50 04             	mov    %edx,0x4(%eax)
   157ed:	50                   	push   %eax
   157ee:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   157f4:	6a 02                	push   $0x2
   157f6:	50                   	push   %eax
   157f7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   157fd:	50                   	push   %eax
   157fe:	e8 9d c8 ff ff       	call   120a0 <print_asm_1>
   15803:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15809:	83 c4 10             	add    $0x10,%esp
   1580c:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   15810:	78 05                	js     15817 <jns_short_+0x67>
   15812:	e8 b9 ee ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   15817:	83 c4 08             	add    $0x8,%esp
   1581a:	b8 02 00 00 00       	mov    $0x2,%eax
   1581f:	5b                   	pop    %ebx
   15820:	c3                   	ret    
   15821:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15828:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1582f:	90                   	nop

00015830 <jecxz_short_>:
   15830:	53                   	push   %ebx
   15831:	e8 4a ec fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15836:	81 c3 ca 97 03 00    	add    $0x397ca,%ebx
   1583c:	83 ec 08             	sub    $0x8,%esp
   1583f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   15843:	8d 51 01             	lea    0x1(%ecx),%edx
   15846:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1584c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15853:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   15859:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   15860:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   15866:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1586a:	89 50 04             	mov    %edx,0x4(%eax)
   1586d:	50                   	push   %eax
   1586e:	8d 83 05 67 fe ff    	lea    -0x198fb(%ebx),%eax
   15874:	6a 02                	push   $0x2
   15876:	50                   	push   %eax
   15877:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   1587d:	50                   	push   %eax
   1587e:	e8 1d c8 ff ff       	call   120a0 <print_asm_1>
   15883:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15889:	83 c4 10             	add    $0x10,%esp
   1588c:	8b 40 04             	mov    0x4(%eax),%eax
   1588f:	85 c0                	test   %eax,%eax
   15891:	74 0d                	je     158a0 <jecxz_short_+0x70>
   15893:	83 c4 08             	add    $0x8,%esp
   15896:	b8 02 00 00 00       	mov    $0x2,%eax
   1589b:	5b                   	pop    %ebx
   1589c:	c3                   	ret    
   1589d:	8d 76 00             	lea    0x0(%esi),%esi
   158a0:	e8 2b ee ff ff       	call   146d0 <instr_execute_1op_cc_pass>
   158a5:	83 c4 08             	add    $0x8,%esp
   158a8:	b8 02 00 00 00       	mov    $0x2,%eax
   158ad:	5b                   	pop    %ebx
   158ae:	c3                   	ret    
   158af:	90                   	nop

000158b0 <instr_execute_2op>:
   158b0:	57                   	push   %edi
   158b1:	56                   	push   %esi
   158b2:	53                   	push   %ebx
   158b3:	e8 c8 eb fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   158b8:	81 c3 48 97 03 00    	add    $0x39748,%ebx
   158be:	83 ec 0c             	sub    $0xc,%esp
   158c1:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   158c7:	57                   	push   %edi
   158c8:	e8 13 cb ff ff       	call   123e0 <operand_read>
   158cd:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   158d3:	89 34 24             	mov    %esi,(%esp)
   158d6:	e8 05 cb ff ff       	call   123e0 <operand_read>
   158db:	83 c4 0c             	add    $0xc,%esp
   158de:	ff 76 10             	pushl  0x10(%esi)
   158e1:	ff 76 0c             	pushl  0xc(%esi)
   158e4:	ff 77 0c             	pushl  0xc(%edi)
   158e7:	e8 24 a5 ff ff       	call   fe10 <alu_sar>
   158ec:	89 34 24             	mov    %esi,(%esp)
   158ef:	89 46 0c             	mov    %eax,0xc(%esi)
   158f2:	e8 99 cc ff ff       	call   12590 <operand_write>
   158f7:	83 c4 10             	add    $0x10,%esp
   158fa:	5b                   	pop    %ebx
   158fb:	5e                   	pop    %esi
   158fc:	5f                   	pop    %edi
   158fd:	c3                   	ret    
   158fe:	66 90                	xchg   %ax,%ax

00015900 <instr_execute_1op>:
   15900:	56                   	push   %esi
   15901:	53                   	push   %ebx
   15902:	e8 79 eb fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15907:	81 c3 f9 96 03 00    	add    $0x396f9,%ebx
   1590d:	83 ec 10             	sub    $0x10,%esp
   15910:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   15916:	56                   	push   %esi
   15917:	e8 c4 ca ff ff       	call   123e0 <operand_read>
   1591c:	83 c4 0c             	add    $0xc,%esp
   1591f:	ff 76 10             	pushl  0x10(%esi)
   15922:	ff 76 0c             	pushl  0xc(%esi)
   15925:	6a 01                	push   $0x1
   15927:	e8 e4 a4 ff ff       	call   fe10 <alu_sar>
   1592c:	89 34 24             	mov    %esi,(%esp)
   1592f:	89 46 0c             	mov    %eax,0xc(%esi)
   15932:	e8 59 cc ff ff       	call   12590 <operand_write>
   15937:	83 c4 14             	add    $0x14,%esp
   1593a:	5b                   	pop    %ebx
   1593b:	5e                   	pop    %esi
   1593c:	c3                   	ret    
   1593d:	8d 76 00             	lea    0x0(%esi),%esi

00015940 <sar_i2rm_b>:
   15940:	55                   	push   %ebp
   15941:	57                   	push   %edi
   15942:	56                   	push   %esi
   15943:	53                   	push   %ebx
   15944:	e8 37 eb fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15949:	81 c3 b7 96 03 00    	add    $0x396b7,%ebx
   1594f:	83 ec 24             	sub    $0x24,%esp
   15952:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   15956:	8d 45 01             	lea    0x1(%ebp),%eax
   15959:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1595f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   15965:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1596c:	52                   	push   %edx
   1596d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15974:	89 54 24 18          	mov    %edx,0x18(%esp)
   15978:	50                   	push   %eax
   15979:	e8 02 c6 ff ff       	call   11f80 <modrm_rm>
   1597e:	8b 77 10             	mov    0x10(%edi),%esi
   15981:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   15985:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   15989:	83 c0 01             	add    $0x1,%eax
   1598c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   15992:	83 c4 10             	add    $0x10,%esp
   15995:	01 c5                	add    %eax,%ebp
   15997:	c1 ee 03             	shr    $0x3,%esi
   1599a:	89 6f 04             	mov    %ebp,0x4(%edi)
   1599d:	01 c6                	add    %eax,%esi
   1599f:	8b 6a 10             	mov    0x10(%edx),%ebp
   159a2:	89 f0                	mov    %esi,%eax
   159a4:	0f b6 c8             	movzbl %al,%ecx
   159a7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   159ad:	83 fd 08             	cmp    $0x8,%ebp
   159b0:	74 12                	je     159c4 <sar_i2rm_b+0x84>
   159b2:	83 fd 10             	cmp    $0x10,%ebp
   159b5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   159bb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   159c1:	0f 45 c5             	cmovne %ebp,%eax
   159c4:	83 ec 0c             	sub    $0xc,%esp
   159c7:	52                   	push   %edx
   159c8:	57                   	push   %edi
   159c9:	51                   	push   %ecx
   159ca:	50                   	push   %eax
   159cb:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   159d1:	50                   	push   %eax
   159d2:	e8 c9 c7 ff ff       	call   121a0 <print_asm_2>
   159d7:	83 c4 20             	add    $0x20,%esp
   159da:	e8 d1 fe ff ff       	call   158b0 <instr_execute_2op>
   159df:	83 c4 1c             	add    $0x1c,%esp
   159e2:	89 f0                	mov    %esi,%eax
   159e4:	5b                   	pop    %ebx
   159e5:	5e                   	pop    %esi
   159e6:	5f                   	pop    %edi
   159e7:	5d                   	pop    %ebp
   159e8:	c3                   	ret    
   159e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000159f0 <sar_i2rm_bv>:
   159f0:	55                   	push   %ebp
   159f1:	57                   	push   %edi
   159f2:	56                   	push   %esi
   159f3:	53                   	push   %ebx
   159f4:	e8 87 ea fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   159f9:	81 c3 07 96 03 00    	add    $0x39607,%ebx
   159ff:	83 ec 24             	sub    $0x24,%esp
   15a02:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   15a06:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   15a0c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   15a12:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   15a18:	0f b6 00             	movzbl (%eax),%eax
   15a1b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15a22:	89 42 10             	mov    %eax,0x10(%edx)
   15a25:	8d 45 01             	lea    0x1(%ebp),%eax
   15a28:	52                   	push   %edx
   15a29:	89 54 24 18          	mov    %edx,0x18(%esp)
   15a2d:	50                   	push   %eax
   15a2e:	e8 4d c5 ff ff       	call   11f80 <modrm_rm>
   15a33:	8b 77 10             	mov    0x10(%edi),%esi
   15a36:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   15a3a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   15a3e:	83 c0 01             	add    $0x1,%eax
   15a41:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   15a47:	83 c4 10             	add    $0x10,%esp
   15a4a:	01 c5                	add    %eax,%ebp
   15a4c:	c1 ee 03             	shr    $0x3,%esi
   15a4f:	89 6f 04             	mov    %ebp,0x4(%edi)
   15a52:	01 c6                	add    %eax,%esi
   15a54:	8b 6a 10             	mov    0x10(%edx),%ebp
   15a57:	89 f0                	mov    %esi,%eax
   15a59:	0f b6 c8             	movzbl %al,%ecx
   15a5c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   15a62:	83 fd 08             	cmp    $0x8,%ebp
   15a65:	74 12                	je     15a79 <sar_i2rm_bv+0x89>
   15a67:	83 fd 10             	cmp    $0x10,%ebp
   15a6a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   15a70:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   15a76:	0f 45 c5             	cmovne %ebp,%eax
   15a79:	83 ec 0c             	sub    $0xc,%esp
   15a7c:	52                   	push   %edx
   15a7d:	57                   	push   %edi
   15a7e:	51                   	push   %ecx
   15a7f:	50                   	push   %eax
   15a80:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   15a86:	50                   	push   %eax
   15a87:	e8 14 c7 ff ff       	call   121a0 <print_asm_2>
   15a8c:	83 c4 20             	add    $0x20,%esp
   15a8f:	e8 1c fe ff ff       	call   158b0 <instr_execute_2op>
   15a94:	83 c4 1c             	add    $0x1c,%esp
   15a97:	89 f0                	mov    %esi,%eax
   15a99:	5b                   	pop    %ebx
   15a9a:	5e                   	pop    %esi
   15a9b:	5f                   	pop    %edi
   15a9c:	5d                   	pop    %ebp
   15a9d:	c3                   	ret    
   15a9e:	66 90                	xchg   %ax,%ax

00015aa0 <sar_c2rm_b>:
   15aa0:	55                   	push   %ebp
   15aa1:	57                   	push   %edi
   15aa2:	56                   	push   %esi
   15aa3:	53                   	push   %ebx
   15aa4:	e8 d7 e9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15aa9:	81 c3 57 95 03 00    	add    $0x39557,%ebx
   15aaf:	83 ec 14             	sub    $0x14,%esp
   15ab2:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   15ab8:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   15abe:	57                   	push   %edi
   15abf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15ac3:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15aca:	83 c0 01             	add    $0x1,%eax
   15acd:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   15ad4:	50                   	push   %eax
   15ad5:	e8 a6 c4 ff ff       	call   11f80 <modrm_rm>
   15ada:	8b 4f 10             	mov    0x10(%edi),%ecx
   15add:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   15ae3:	83 c4 10             	add    $0x10,%esp
   15ae6:	8d 68 01             	lea    0x1(%eax),%ebp
   15ae9:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   15af0:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   15af6:	89 e8                	mov    %ebp,%eax
   15af8:	0f b6 c0             	movzbl %al,%eax
   15afb:	83 f9 08             	cmp    $0x8,%ecx
   15afe:	74 12                	je     15b12 <sar_c2rm_b+0x72>
   15b00:	83 f9 10             	cmp    $0x10,%ecx
   15b03:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   15b09:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   15b0f:	0f 45 d1             	cmovne %ecx,%edx
   15b12:	83 ec 0c             	sub    $0xc,%esp
   15b15:	57                   	push   %edi
   15b16:	56                   	push   %esi
   15b17:	50                   	push   %eax
   15b18:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   15b1e:	52                   	push   %edx
   15b1f:	50                   	push   %eax
   15b20:	e8 7b c6 ff ff       	call   121a0 <print_asm_2>
   15b25:	83 c4 20             	add    $0x20,%esp
   15b28:	e8 83 fd ff ff       	call   158b0 <instr_execute_2op>
   15b2d:	83 c4 0c             	add    $0xc,%esp
   15b30:	89 e8                	mov    %ebp,%eax
   15b32:	5b                   	pop    %ebx
   15b33:	5e                   	pop    %esi
   15b34:	5f                   	pop    %edi
   15b35:	5d                   	pop    %ebp
   15b36:	c3                   	ret    
   15b37:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15b3e:	66 90                	xchg   %ax,%ax

00015b40 <sar_c2rm_bv>:
   15b40:	55                   	push   %ebp
   15b41:	57                   	push   %edi
   15b42:	56                   	push   %esi
   15b43:	53                   	push   %ebx
   15b44:	e8 37 e9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15b49:	81 c3 b7 94 03 00    	add    $0x394b7,%ebx
   15b4f:	83 ec 14             	sub    $0x14,%esp
   15b52:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   15b58:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   15b5e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   15b64:	0f b6 00             	movzbl (%eax),%eax
   15b67:	57                   	push   %edi
   15b68:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   15b6f:	89 47 10             	mov    %eax,0x10(%edi)
   15b72:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15b76:	83 c0 01             	add    $0x1,%eax
   15b79:	50                   	push   %eax
   15b7a:	e8 01 c4 ff ff       	call   11f80 <modrm_rm>
   15b7f:	8b 4f 10             	mov    0x10(%edi),%ecx
   15b82:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   15b88:	83 c4 10             	add    $0x10,%esp
   15b8b:	8d 68 01             	lea    0x1(%eax),%ebp
   15b8e:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   15b95:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   15b9b:	89 e8                	mov    %ebp,%eax
   15b9d:	0f b6 c0             	movzbl %al,%eax
   15ba0:	83 f9 08             	cmp    $0x8,%ecx
   15ba3:	74 12                	je     15bb7 <sar_c2rm_bv+0x77>
   15ba5:	83 f9 10             	cmp    $0x10,%ecx
   15ba8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   15bae:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   15bb4:	0f 45 d1             	cmovne %ecx,%edx
   15bb7:	83 ec 0c             	sub    $0xc,%esp
   15bba:	57                   	push   %edi
   15bbb:	56                   	push   %esi
   15bbc:	50                   	push   %eax
   15bbd:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   15bc3:	52                   	push   %edx
   15bc4:	50                   	push   %eax
   15bc5:	e8 d6 c5 ff ff       	call   121a0 <print_asm_2>
   15bca:	83 c4 20             	add    $0x20,%esp
   15bcd:	e8 de fc ff ff       	call   158b0 <instr_execute_2op>
   15bd2:	83 c4 0c             	add    $0xc,%esp
   15bd5:	89 e8                	mov    %ebp,%eax
   15bd7:	5b                   	pop    %ebx
   15bd8:	5e                   	pop    %esi
   15bd9:	5f                   	pop    %edi
   15bda:	5d                   	pop    %ebp
   15bdb:	c3                   	ret    
   15bdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00015be0 <sar_rm_b>:
   15be0:	55                   	push   %ebp
   15be1:	57                   	push   %edi
   15be2:	56                   	push   %esi
   15be3:	53                   	push   %ebx
   15be4:	e8 97 e8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15be9:	81 c3 17 94 03 00    	add    $0x39417,%ebx
   15bef:	83 ec 14             	sub    $0x14,%esp
   15bf2:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   15bf8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   15bfe:	56                   	push   %esi
   15bff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15c03:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   15c0a:	83 c0 01             	add    $0x1,%eax
   15c0d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   15c14:	50                   	push   %eax
   15c15:	e8 66 c3 ff ff       	call   11f80 <modrm_rm>
   15c1a:	8b 4d 10             	mov    0x10(%ebp),%ecx
   15c1d:	83 c4 10             	add    $0x10,%esp
   15c20:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   15c26:	8d 78 01             	lea    0x1(%eax),%edi
   15c29:	89 f8                	mov    %edi,%eax
   15c2b:	0f b6 c0             	movzbl %al,%eax
   15c2e:	83 f9 08             	cmp    $0x8,%ecx
   15c31:	74 12                	je     15c45 <sar_rm_b+0x65>
   15c33:	83 f9 10             	cmp    $0x10,%ecx
   15c36:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   15c3c:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   15c42:	0f 45 d1             	cmovne %ecx,%edx
   15c45:	56                   	push   %esi
   15c46:	50                   	push   %eax
   15c47:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   15c4d:	52                   	push   %edx
   15c4e:	50                   	push   %eax
   15c4f:	e8 4c c4 ff ff       	call   120a0 <print_asm_1>
   15c54:	e8 a7 fc ff ff       	call   15900 <instr_execute_1op>
   15c59:	83 c4 1c             	add    $0x1c,%esp
   15c5c:	89 f8                	mov    %edi,%eax
   15c5e:	5b                   	pop    %ebx
   15c5f:	5e                   	pop    %esi
   15c60:	5f                   	pop    %edi
   15c61:	5d                   	pop    %ebp
   15c62:	c3                   	ret    
   15c63:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15c6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00015c70 <sar_rm_v>:
   15c70:	55                   	push   %ebp
   15c71:	57                   	push   %edi
   15c72:	56                   	push   %esi
   15c73:	53                   	push   %ebx
   15c74:	e8 07 e8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15c79:	81 c3 87 93 03 00    	add    $0x39387,%ebx
   15c7f:	83 ec 14             	sub    $0x14,%esp
   15c82:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   15c88:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   15c8e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   15c94:	0f b6 00             	movzbl (%eax),%eax
   15c97:	56                   	push   %esi
   15c98:	89 45 10             	mov    %eax,0x10(%ebp)
   15c9b:	89 46 10             	mov    %eax,0x10(%esi)
   15c9e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15ca2:	83 c0 01             	add    $0x1,%eax
   15ca5:	50                   	push   %eax
   15ca6:	e8 d5 c2 ff ff       	call   11f80 <modrm_rm>
   15cab:	8b 4d 10             	mov    0x10(%ebp),%ecx
   15cae:	83 c4 10             	add    $0x10,%esp
   15cb1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   15cb7:	8d 78 01             	lea    0x1(%eax),%edi
   15cba:	89 f8                	mov    %edi,%eax
   15cbc:	0f b6 c0             	movzbl %al,%eax
   15cbf:	83 f9 08             	cmp    $0x8,%ecx
   15cc2:	74 12                	je     15cd6 <sar_rm_v+0x66>
   15cc4:	83 f9 10             	cmp    $0x10,%ecx
   15cc7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   15ccd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   15cd3:	0f 45 d1             	cmovne %ecx,%edx
   15cd6:	56                   	push   %esi
   15cd7:	50                   	push   %eax
   15cd8:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   15cde:	52                   	push   %edx
   15cdf:	50                   	push   %eax
   15ce0:	e8 bb c3 ff ff       	call   120a0 <print_asm_1>
   15ce5:	e8 16 fc ff ff       	call   15900 <instr_execute_1op>
   15cea:	83 c4 1c             	add    $0x1c,%esp
   15ced:	89 f8                	mov    %edi,%eax
   15cef:	5b                   	pop    %ebx
   15cf0:	5e                   	pop    %esi
   15cf1:	5f                   	pop    %edi
   15cf2:	5d                   	pop    %ebp
   15cf3:	c3                   	ret    
   15cf4:	66 90                	xchg   %ax,%ax
   15cf6:	66 90                	xchg   %ax,%ax
   15cf8:	66 90                	xchg   %ax,%ax
   15cfa:	66 90                	xchg   %ax,%ax
   15cfc:	66 90                	xchg   %ax,%ax
   15cfe:	66 90                	xchg   %ax,%ax

00015d00 <HLT_Thread>:
   15d00:	57                   	push   %edi
   15d01:	56                   	push   %esi
   15d02:	53                   	push   %ebx
   15d03:	e8 78 e7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15d08:	81 c3 f8 92 03 00    	add    $0x392f8,%ebx
   15d0e:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   15d14:	80 be a0 00 00 00 00 	cmpb   $0x0,0xa0(%esi)
   15d1b:	75 27                	jne    15d44 <HLT_Thread+0x44>
   15d1d:	8d bb 04 33 05 00    	lea    0x53304(%ebx),%edi
   15d23:	eb 19                	jmp    15d3e <HLT_Thread+0x3e>
   15d25:	8d 76 00             	lea    0x0(%esi),%esi
   15d28:	83 ec 0c             	sub    $0xc,%esp
   15d2b:	6a 01                	push   $0x1
   15d2d:	e8 ce e3 fe ff       	call   4100 <SDL_Delay@plt>
   15d32:	83 c4 10             	add    $0x10,%esp
   15d35:	80 be a0 00 00 00 00 	cmpb   $0x0,0xa0(%esi)
   15d3c:	75 06                	jne    15d44 <HLT_Thread+0x44>
   15d3e:	8b 07                	mov    (%edi),%eax
   15d40:	85 c0                	test   %eax,%eax
   15d42:	75 e4                	jne    15d28 <HLT_Thread+0x28>
   15d44:	5b                   	pop    %ebx
   15d45:	31 c0                	xor    %eax,%eax
   15d47:	5e                   	pop    %esi
   15d48:	5f                   	pop    %edi
   15d49:	c3                   	ret    
   15d4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00015d50 <hlt>:
   15d50:	53                   	push   %ebx
   15d51:	e8 2a e7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15d56:	81 c3 aa 92 03 00    	add    $0x392aa,%ebx
   15d5c:	83 ec 0c             	sub    $0xc,%esp
   15d5f:	6a 01                	push   $0x1
   15d61:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   15d67:	50                   	push   %eax
   15d68:	8d 83 15 67 fe ff    	lea    -0x198eb(%ebx),%eax
   15d6e:	50                   	push   %eax
   15d6f:	e8 4c c2 ff ff       	call   11fc0 <print_asm_0>
   15d74:	58                   	pop    %eax
   15d75:	8d 83 00 6d fc ff    	lea    -0x39300(%ebx),%eax
   15d7b:	5a                   	pop    %edx
   15d7c:	6a 00                	push   $0x0
   15d7e:	50                   	push   %eax
   15d7f:	e8 bc e3 fe ff       	call   4140 <SDL_CreateThread@plt>
   15d84:	83 c4 10             	add    $0x10,%esp
   15d87:	85 c0                	test   %eax,%eax
   15d89:	74 1d                	je     15da8 <hlt+0x58>
   15d8b:	83 ec 08             	sub    $0x8,%esp
   15d8e:	6a 00                	push   $0x0
   15d90:	50                   	push   %eax
   15d91:	e8 5a e5 fe ff       	call   42f0 <SDL_WaitThread@plt>
   15d96:	83 c4 10             	add    $0x10,%esp
   15d99:	b8 01 00 00 00       	mov    $0x1,%eax
   15d9e:	83 c4 08             	add    $0x8,%esp
   15da1:	5b                   	pop    %ebx
   15da2:	c3                   	ret    
   15da3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15da7:	90                   	nop
   15da8:	e8 73 e3 fe ff       	call   4120 <SDL_GetError@plt>
   15dad:	83 ec 08             	sub    $0x8,%esp
   15db0:	50                   	push   %eax
   15db1:	8d 83 1c 67 fe ff    	lea    -0x198e4(%ebx),%eax
   15db7:	50                   	push   %eax
   15db8:	e8 a3 e4 fe ff       	call   4260 <printf@plt>
   15dbd:	83 c4 10             	add    $0x10,%esp
   15dc0:	b8 01 00 00 00       	mov    $0x1,%eax
   15dc5:	83 c4 08             	add    $0x8,%esp
   15dc8:	5b                   	pop    %ebx
   15dc9:	c3                   	ret    
   15dca:	66 90                	xchg   %ax,%ax
   15dcc:	66 90                	xchg   %ax,%ax
   15dce:	66 90                	xchg   %ax,%ax

00015dd0 <opcode_2_byte>:
   15dd0:	56                   	push   %esi
   15dd1:	53                   	push   %ebx
   15dd2:	e8 a9 e6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15dd7:	81 c3 29 92 03 00    	add    $0x39229,%ebx
   15ddd:	83 ec 0c             	sub    $0xc,%esp
   15de0:	8b 44 24 18          	mov    0x18(%esp),%eax
   15de4:	6a 01                	push   $0x1
   15de6:	8d 70 01             	lea    0x1(%eax),%esi
   15de9:	56                   	push   %esi
   15dea:	e8 b1 8e 00 00       	call   1eca0 <instr_fetch>
   15def:	5a                   	pop    %edx
   15df0:	59                   	pop    %ecx
   15df1:	0f b6 c0             	movzbl %al,%eax
   15df4:	8d 93 40 12 00 00    	lea    0x1240(%ebx),%edx
   15dfa:	50                   	push   %eax
   15dfb:	56                   	push   %esi
   15dfc:	ff 14 82             	call   *(%edx,%eax,4)
   15dff:	83 c0 01             	add    $0x1,%eax
   15e02:	83 c4 14             	add    $0x14,%esp
   15e05:	5b                   	pop    %ebx
   15e06:	5e                   	pop    %esi
   15e07:	c3                   	ret    
   15e08:	66 90                	xchg   %ax,%ax
   15e0a:	66 90                	xchg   %ax,%ax
   15e0c:	66 90                	xchg   %ax,%ax
   15e0e:	66 90                	xchg   %ax,%ax

00015e10 <bt_r2rm_v>:
   15e10:	55                   	push   %ebp
   15e11:	57                   	push   %edi
   15e12:	56                   	push   %esi
   15e13:	53                   	push   %ebx
   15e14:	e8 67 e6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15e19:	81 c3 e7 91 03 00    	add    $0x391e7,%ebx
   15e1f:	83 ec 10             	sub    $0x10,%esp
   15e22:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   15e28:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   15e2e:	8d ab e0 33 05 00    	lea    0x533e0(%ebx),%ebp
   15e34:	0f b6 00             	movzbl (%eax),%eax
   15e37:	56                   	push   %esi
   15e38:	55                   	push   %ebp
   15e39:	89 46 10             	mov    %eax,0x10(%esi)
   15e3c:	89 45 10             	mov    %eax,0x10(%ebp)
   15e3f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15e43:	83 c0 01             	add    $0x1,%eax
   15e46:	50                   	push   %eax
   15e47:	e8 54 c0 ff ff       	call   11ea0 <modrm_r_rm>
   15e4c:	8b 4e 10             	mov    0x10(%esi),%ecx
   15e4f:	83 c4 10             	add    $0x10,%esp
   15e52:	8d 78 01             	lea    0x1(%eax),%edi
   15e55:	89 f8                	mov    %edi,%eax
   15e57:	0f b6 d0             	movzbl %al,%edx
   15e5a:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   15e60:	83 f9 08             	cmp    $0x8,%ecx
   15e63:	74 12                	je     15e77 <bt_r2rm_v+0x67>
   15e65:	83 f9 10             	cmp    $0x10,%ecx
   15e68:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   15e6e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   15e74:	0f 45 c1             	cmovne %ecx,%eax
   15e77:	83 ec 0c             	sub    $0xc,%esp
   15e7a:	56                   	push   %esi
   15e7b:	55                   	push   %ebp
   15e7c:	52                   	push   %edx
   15e7d:	50                   	push   %eax
   15e7e:	8d 83 42 67 fe ff    	lea    -0x198be(%ebx),%eax
   15e84:	50                   	push   %eax
   15e85:	e8 16 c3 ff ff       	call   121a0 <print_asm_2>
   15e8a:	83 c4 14             	add    $0x14,%esp
   15e8d:	55                   	push   %ebp
   15e8e:	e8 4d c5 ff ff       	call   123e0 <operand_read>
   15e93:	89 34 24             	mov    %esi,(%esp)
   15e96:	e8 45 c5 ff ff       	call   123e0 <operand_read>
   15e9b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   15e9e:	8b 56 0c             	mov    0xc(%esi),%edx
   15ea1:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   15ea7:	d3 ea                	shr    %cl,%edx
   15ea9:	89 d1                	mov    %edx,%ecx
   15eab:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   15eaf:	83 e1 01             	and    $0x1,%ecx
   15eb2:	83 e2 fe             	and    $0xfffffffe,%edx
   15eb5:	09 ca                	or     %ecx,%edx
   15eb7:	88 50 24             	mov    %dl,0x24(%eax)
   15eba:	83 c4 1c             	add    $0x1c,%esp
   15ebd:	89 f8                	mov    %edi,%eax
   15ebf:	5b                   	pop    %ebx
   15ec0:	5e                   	pop    %esi
   15ec1:	5f                   	pop    %edi
   15ec2:	5d                   	pop    %ebp
   15ec3:	c3                   	ret    
   15ec4:	66 90                	xchg   %ax,%ax
   15ec6:	66 90                	xchg   %ax,%ax
   15ec8:	66 90                	xchg   %ax,%ax
   15eca:	66 90                	xchg   %ax,%ax
   15ecc:	66 90                	xchg   %ax,%ax
   15ece:	66 90                	xchg   %ax,%ax

00015ed0 <instr_execute_2op>:
   15ed0:	56                   	push   %esi
   15ed1:	53                   	push   %ebx
   15ed2:	e8 a9 e5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15ed7:	81 c3 29 91 03 00    	add    $0x39129,%ebx
   15edd:	83 ec 10             	sub    $0x10,%esp
   15ee0:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   15ee6:	56                   	push   %esi
   15ee7:	e8 f4 c4 ff ff       	call   123e0 <operand_read>
   15eec:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   15ef2:	8b 56 0c             	mov    0xc(%esi),%edx
   15ef5:	89 50 0c             	mov    %edx,0xc(%eax)
   15ef8:	89 04 24             	mov    %eax,(%esp)
   15efb:	e8 90 c6 ff ff       	call   12590 <operand_write>
   15f00:	83 c4 14             	add    $0x14,%esp
   15f03:	5b                   	pop    %ebx
   15f04:	5e                   	pop    %esi
   15f05:	c3                   	ret    
   15f06:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15f0d:	8d 76 00             	lea    0x0(%esi),%esi

00015f10 <mov_r2rm_b>:
   15f10:	55                   	push   %ebp
   15f11:	57                   	push   %edi
   15f12:	56                   	push   %esi
   15f13:	53                   	push   %ebx
   15f14:	e8 67 e5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15f19:	81 c3 e7 90 03 00    	add    $0x390e7,%ebx
   15f1f:	83 ec 10             	sub    $0x10,%esp
   15f22:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   15f28:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   15f2e:	56                   	push   %esi
   15f2f:	57                   	push   %edi
   15f30:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15f34:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   15f3b:	83 c0 01             	add    $0x1,%eax
   15f3e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   15f45:	50                   	push   %eax
   15f46:	e8 55 bf ff ff       	call   11ea0 <modrm_r_rm>
   15f4b:	8b 4e 10             	mov    0x10(%esi),%ecx
   15f4e:	83 c4 10             	add    $0x10,%esp
   15f51:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   15f57:	8d 68 01             	lea    0x1(%eax),%ebp
   15f5a:	89 e8                	mov    %ebp,%eax
   15f5c:	0f b6 c0             	movzbl %al,%eax
   15f5f:	83 f9 08             	cmp    $0x8,%ecx
   15f62:	74 12                	je     15f76 <mov_r2rm_b+0x66>
   15f64:	83 f9 10             	cmp    $0x10,%ecx
   15f67:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   15f6d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   15f73:	0f 45 d1             	cmovne %ecx,%edx
   15f76:	83 ec 0c             	sub    $0xc,%esp
   15f79:	56                   	push   %esi
   15f7a:	57                   	push   %edi
   15f7b:	50                   	push   %eax
   15f7c:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   15f82:	52                   	push   %edx
   15f83:	50                   	push   %eax
   15f84:	e8 17 c2 ff ff       	call   121a0 <print_asm_2>
   15f89:	83 c4 20             	add    $0x20,%esp
   15f8c:	e8 3f ff ff ff       	call   15ed0 <instr_execute_2op>
   15f91:	83 c4 0c             	add    $0xc,%esp
   15f94:	89 e8                	mov    %ebp,%eax
   15f96:	5b                   	pop    %ebx
   15f97:	5e                   	pop    %esi
   15f98:	5f                   	pop    %edi
   15f99:	5d                   	pop    %ebp
   15f9a:	c3                   	ret    
   15f9b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15f9f:	90                   	nop

00015fa0 <mov_r2rm_v>:
   15fa0:	55                   	push   %ebp
   15fa1:	57                   	push   %edi
   15fa2:	56                   	push   %esi
   15fa3:	53                   	push   %ebx
   15fa4:	e8 d7 e4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   15fa9:	81 c3 57 90 03 00    	add    $0x39057,%ebx
   15faf:	83 ec 10             	sub    $0x10,%esp
   15fb2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   15fb8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   15fbe:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   15fc4:	0f b6 00             	movzbl (%eax),%eax
   15fc7:	56                   	push   %esi
   15fc8:	57                   	push   %edi
   15fc9:	89 46 10             	mov    %eax,0x10(%esi)
   15fcc:	89 47 10             	mov    %eax,0x10(%edi)
   15fcf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   15fd3:	83 c0 01             	add    $0x1,%eax
   15fd6:	50                   	push   %eax
   15fd7:	e8 c4 be ff ff       	call   11ea0 <modrm_r_rm>
   15fdc:	8b 4e 10             	mov    0x10(%esi),%ecx
   15fdf:	83 c4 10             	add    $0x10,%esp
   15fe2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   15fe8:	8d 68 01             	lea    0x1(%eax),%ebp
   15feb:	89 e8                	mov    %ebp,%eax
   15fed:	0f b6 c0             	movzbl %al,%eax
   15ff0:	83 f9 08             	cmp    $0x8,%ecx
   15ff3:	74 12                	je     16007 <mov_r2rm_v+0x67>
   15ff5:	83 f9 10             	cmp    $0x10,%ecx
   15ff8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   15ffe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   16004:	0f 45 d1             	cmovne %ecx,%edx
   16007:	83 ec 0c             	sub    $0xc,%esp
   1600a:	56                   	push   %esi
   1600b:	57                   	push   %edi
   1600c:	50                   	push   %eax
   1600d:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   16013:	52                   	push   %edx
   16014:	50                   	push   %eax
   16015:	e8 86 c1 ff ff       	call   121a0 <print_asm_2>
   1601a:	83 c4 20             	add    $0x20,%esp
   1601d:	e8 ae fe ff ff       	call   15ed0 <instr_execute_2op>
   16022:	83 c4 0c             	add    $0xc,%esp
   16025:	89 e8                	mov    %ebp,%eax
   16027:	5b                   	pop    %ebx
   16028:	5e                   	pop    %esi
   16029:	5f                   	pop    %edi
   1602a:	5d                   	pop    %ebp
   1602b:	c3                   	ret    
   1602c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016030 <mov_rm2r_b>:
   16030:	55                   	push   %ebp
   16031:	57                   	push   %edi
   16032:	56                   	push   %esi
   16033:	53                   	push   %ebx
   16034:	e8 47 e4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16039:	81 c3 c7 8f 03 00    	add    $0x38fc7,%ebx
   1603f:	83 ec 10             	sub    $0x10,%esp
   16042:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16048:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1604e:	57                   	push   %edi
   1604f:	56                   	push   %esi
   16050:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16054:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1605b:	83 c0 01             	add    $0x1,%eax
   1605e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16065:	50                   	push   %eax
   16066:	e8 35 be ff ff       	call   11ea0 <modrm_r_rm>
   1606b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1606e:	83 c4 10             	add    $0x10,%esp
   16071:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   16077:	8d 68 01             	lea    0x1(%eax),%ebp
   1607a:	89 e8                	mov    %ebp,%eax
   1607c:	0f b6 c0             	movzbl %al,%eax
   1607f:	83 f9 08             	cmp    $0x8,%ecx
   16082:	74 12                	je     16096 <mov_rm2r_b+0x66>
   16084:	83 f9 10             	cmp    $0x10,%ecx
   16087:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1608d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   16093:	0f 45 d1             	cmovne %ecx,%edx
   16096:	83 ec 0c             	sub    $0xc,%esp
   16099:	56                   	push   %esi
   1609a:	57                   	push   %edi
   1609b:	50                   	push   %eax
   1609c:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   160a2:	52                   	push   %edx
   160a3:	50                   	push   %eax
   160a4:	e8 f7 c0 ff ff       	call   121a0 <print_asm_2>
   160a9:	83 c4 20             	add    $0x20,%esp
   160ac:	e8 1f fe ff ff       	call   15ed0 <instr_execute_2op>
   160b1:	83 c4 0c             	add    $0xc,%esp
   160b4:	89 e8                	mov    %ebp,%eax
   160b6:	5b                   	pop    %ebx
   160b7:	5e                   	pop    %esi
   160b8:	5f                   	pop    %edi
   160b9:	5d                   	pop    %ebp
   160ba:	c3                   	ret    
   160bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   160bf:	90                   	nop

000160c0 <mov_rm2r_v>:
   160c0:	55                   	push   %ebp
   160c1:	57                   	push   %edi
   160c2:	56                   	push   %esi
   160c3:	53                   	push   %ebx
   160c4:	e8 b7 e3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   160c9:	81 c3 37 8f 03 00    	add    $0x38f37,%ebx
   160cf:	83 ec 10             	sub    $0x10,%esp
   160d2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   160d8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   160de:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   160e4:	0f b6 00             	movzbl (%eax),%eax
   160e7:	57                   	push   %edi
   160e8:	89 46 10             	mov    %eax,0x10(%esi)
   160eb:	56                   	push   %esi
   160ec:	89 47 10             	mov    %eax,0x10(%edi)
   160ef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   160f3:	83 c0 01             	add    $0x1,%eax
   160f6:	50                   	push   %eax
   160f7:	e8 a4 bd ff ff       	call   11ea0 <modrm_r_rm>
   160fc:	8b 4e 10             	mov    0x10(%esi),%ecx
   160ff:	83 c4 10             	add    $0x10,%esp
   16102:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   16108:	8d 68 01             	lea    0x1(%eax),%ebp
   1610b:	89 e8                	mov    %ebp,%eax
   1610d:	0f b6 c0             	movzbl %al,%eax
   16110:	83 f9 08             	cmp    $0x8,%ecx
   16113:	74 12                	je     16127 <mov_rm2r_v+0x67>
   16115:	83 f9 10             	cmp    $0x10,%ecx
   16118:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1611e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   16124:	0f 45 d1             	cmovne %ecx,%edx
   16127:	83 ec 0c             	sub    $0xc,%esp
   1612a:	56                   	push   %esi
   1612b:	57                   	push   %edi
   1612c:	50                   	push   %eax
   1612d:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   16133:	52                   	push   %edx
   16134:	50                   	push   %eax
   16135:	e8 66 c0 ff ff       	call   121a0 <print_asm_2>
   1613a:	83 c4 20             	add    $0x20,%esp
   1613d:	e8 8e fd ff ff       	call   15ed0 <instr_execute_2op>
   16142:	83 c4 0c             	add    $0xc,%esp
   16145:	89 e8                	mov    %ebp,%eax
   16147:	5b                   	pop    %ebx
   16148:	5e                   	pop    %esi
   16149:	5f                   	pop    %edi
   1614a:	5d                   	pop    %ebp
   1614b:	c3                   	ret    
   1614c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016150 <mov_i2rm_b>:
   16150:	55                   	push   %ebp
   16151:	57                   	push   %edi
   16152:	56                   	push   %esi
   16153:	53                   	push   %ebx
   16154:	e8 27 e3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16159:	81 c3 a7 8e 03 00    	add    $0x38ea7,%ebx
   1615f:	83 ec 24             	sub    $0x24,%esp
   16162:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   16166:	8d 45 01             	lea    0x1(%ebp),%eax
   16169:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1616f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16175:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1617c:	52                   	push   %edx
   1617d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16184:	89 54 24 18          	mov    %edx,0x18(%esp)
   16188:	50                   	push   %eax
   16189:	e8 f2 bd ff ff       	call   11f80 <modrm_rm>
   1618e:	8b 77 10             	mov    0x10(%edi),%esi
   16191:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   16195:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   16199:	83 c0 01             	add    $0x1,%eax
   1619c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   161a2:	83 c4 10             	add    $0x10,%esp
   161a5:	01 c5                	add    %eax,%ebp
   161a7:	c1 ee 03             	shr    $0x3,%esi
   161aa:	89 6f 04             	mov    %ebp,0x4(%edi)
   161ad:	01 c6                	add    %eax,%esi
   161af:	8b 6a 10             	mov    0x10(%edx),%ebp
   161b2:	89 f0                	mov    %esi,%eax
   161b4:	0f b6 c8             	movzbl %al,%ecx
   161b7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   161bd:	83 fd 08             	cmp    $0x8,%ebp
   161c0:	74 12                	je     161d4 <mov_i2rm_b+0x84>
   161c2:	83 fd 10             	cmp    $0x10,%ebp
   161c5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   161cb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   161d1:	0f 45 c5             	cmovne %ebp,%eax
   161d4:	83 ec 0c             	sub    $0xc,%esp
   161d7:	52                   	push   %edx
   161d8:	57                   	push   %edi
   161d9:	51                   	push   %ecx
   161da:	50                   	push   %eax
   161db:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   161e1:	50                   	push   %eax
   161e2:	e8 b9 bf ff ff       	call   121a0 <print_asm_2>
   161e7:	83 c4 20             	add    $0x20,%esp
   161ea:	e8 e1 fc ff ff       	call   15ed0 <instr_execute_2op>
   161ef:	83 c4 1c             	add    $0x1c,%esp
   161f2:	89 f0                	mov    %esi,%eax
   161f4:	5b                   	pop    %ebx
   161f5:	5e                   	pop    %esi
   161f6:	5f                   	pop    %edi
   161f7:	5d                   	pop    %ebp
   161f8:	c3                   	ret    
   161f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016200 <mov_i2rm_v>:
   16200:	55                   	push   %ebp
   16201:	57                   	push   %edi
   16202:	56                   	push   %esi
   16203:	53                   	push   %ebx
   16204:	e8 77 e2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16209:	81 c3 f7 8d 03 00    	add    $0x38df7,%ebx
   1620f:	83 ec 24             	sub    $0x24,%esp
   16212:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   16216:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1621c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   16222:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16228:	0f b6 00             	movzbl (%eax),%eax
   1622b:	89 42 10             	mov    %eax,0x10(%edx)
   1622e:	52                   	push   %edx
   1622f:	89 47 10             	mov    %eax,0x10(%edi)
   16232:	8d 45 01             	lea    0x1(%ebp),%eax
   16235:	89 54 24 18          	mov    %edx,0x18(%esp)
   16239:	50                   	push   %eax
   1623a:	e8 41 bd ff ff       	call   11f80 <modrm_rm>
   1623f:	8b 77 10             	mov    0x10(%edi),%esi
   16242:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   16246:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1624a:	83 c0 01             	add    $0x1,%eax
   1624d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   16253:	83 c4 10             	add    $0x10,%esp
   16256:	01 c5                	add    %eax,%ebp
   16258:	c1 ee 03             	shr    $0x3,%esi
   1625b:	89 6f 04             	mov    %ebp,0x4(%edi)
   1625e:	01 c6                	add    %eax,%esi
   16260:	8b 6a 10             	mov    0x10(%edx),%ebp
   16263:	89 f0                	mov    %esi,%eax
   16265:	0f b6 c8             	movzbl %al,%ecx
   16268:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1626e:	83 fd 08             	cmp    $0x8,%ebp
   16271:	74 12                	je     16285 <mov_i2rm_v+0x85>
   16273:	83 fd 10             	cmp    $0x10,%ebp
   16276:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1627c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   16282:	0f 45 c5             	cmovne %ebp,%eax
   16285:	83 ec 0c             	sub    $0xc,%esp
   16288:	52                   	push   %edx
   16289:	57                   	push   %edi
   1628a:	51                   	push   %ecx
   1628b:	50                   	push   %eax
   1628c:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   16292:	50                   	push   %eax
   16293:	e8 08 bf ff ff       	call   121a0 <print_asm_2>
   16298:	83 c4 20             	add    $0x20,%esp
   1629b:	e8 30 fc ff ff       	call   15ed0 <instr_execute_2op>
   162a0:	83 c4 1c             	add    $0x1c,%esp
   162a3:	89 f0                	mov    %esi,%eax
   162a5:	5b                   	pop    %ebx
   162a6:	5e                   	pop    %esi
   162a7:	5f                   	pop    %edi
   162a8:	5d                   	pop    %ebp
   162a9:	c3                   	ret    
   162aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000162b0 <mov_i2r_b>:
   162b0:	53                   	push   %ebx
   162b1:	e8 ca e1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   162b6:	81 c3 4a 8d 03 00    	add    $0x38d4a,%ebx
   162bc:	83 ec 14             	sub    $0x14,%esp
   162bf:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   162c3:	83 c1 01             	add    $0x1,%ecx
   162c6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   162cc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   162d2:	89 48 04             	mov    %ecx,0x4(%eax)
   162d5:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   162d9:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   162e0:	83 e1 07             	and    $0x7,%ecx
   162e3:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   162ea:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   162f0:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   162f4:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   162fa:	89 4a 04             	mov    %ecx,0x4(%edx)
   162fd:	52                   	push   %edx
   162fe:	50                   	push   %eax
   162ff:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   16305:	6a 02                	push   $0x2
   16307:	50                   	push   %eax
   16308:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   1630e:	50                   	push   %eax
   1630f:	e8 8c be ff ff       	call   121a0 <print_asm_2>
   16314:	83 c4 20             	add    $0x20,%esp
   16317:	e8 b4 fb ff ff       	call   15ed0 <instr_execute_2op>
   1631c:	83 c4 08             	add    $0x8,%esp
   1631f:	b8 02 00 00 00       	mov    $0x2,%eax
   16324:	5b                   	pop    %ebx
   16325:	c3                   	ret    
   16326:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1632d:	8d 76 00             	lea    0x0(%esi),%esi

00016330 <mov_i2r_v>:
   16330:	55                   	push   %ebp
   16331:	57                   	push   %edi
   16332:	56                   	push   %esi
   16333:	53                   	push   %ebx
   16334:	e8 47 e1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16339:	81 c3 c7 8c 03 00    	add    $0x38cc7,%ebx
   1633f:	83 ec 0c             	sub    $0xc,%esp
   16342:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16348:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1634e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   16354:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1635a:	0f b6 08             	movzbl (%eax),%ecx
   1635d:	8b 44 24 20          	mov    0x20(%esp),%eax
   16361:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   16367:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1636b:	83 c0 01             	add    $0x1,%eax
   1636e:	89 cf                	mov    %ecx,%edi
   16370:	89 4d 10             	mov    %ecx,0x10(%ebp)
   16373:	89 42 04             	mov    %eax,0x4(%edx)
   16376:	8b 44 24 24          	mov    0x24(%esp),%eax
   1637a:	c1 ef 03             	shr    $0x3,%edi
   1637d:	89 4a 10             	mov    %ecx,0x10(%edx)
   16380:	83 c7 01             	add    $0x1,%edi
   16383:	83 e0 07             	and    $0x7,%eax
   16386:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1638d:	89 45 04             	mov    %eax,0x4(%ebp)
   16390:	83 f9 08             	cmp    $0x8,%ecx
   16393:	74 12                	je     163a7 <mov_i2r_v+0x77>
   16395:	83 f9 10             	cmp    $0x10,%ecx
   16398:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1639e:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   163a4:	0f 45 f0             	cmovne %eax,%esi
   163a7:	83 ec 0c             	sub    $0xc,%esp
   163aa:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   163b0:	55                   	push   %ebp
   163b1:	52                   	push   %edx
   163b2:	57                   	push   %edi
   163b3:	56                   	push   %esi
   163b4:	50                   	push   %eax
   163b5:	e8 e6 bd ff ff       	call   121a0 <print_asm_2>
   163ba:	83 c4 20             	add    $0x20,%esp
   163bd:	e8 0e fb ff ff       	call   15ed0 <instr_execute_2op>
   163c2:	83 c4 0c             	add    $0xc,%esp
   163c5:	89 f8                	mov    %edi,%eax
   163c7:	5b                   	pop    %ebx
   163c8:	5e                   	pop    %esi
   163c9:	5f                   	pop    %edi
   163ca:	5d                   	pop    %ebp
   163cb:	c3                   	ret    
   163cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000163d0 <mov_a2o_b>:
   163d0:	55                   	push   %ebp
   163d1:	57                   	push   %edi
   163d2:	56                   	push   %esi
   163d3:	53                   	push   %ebx
   163d4:	e8 a7 e0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   163d9:	81 c3 27 8c 03 00    	add    $0x38c27,%ebx
   163df:	83 ec 0c             	sub    $0xc,%esp
   163e2:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   163e8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   163ee:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   163f4:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   163f8:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   163ff:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16406:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   1640c:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   16410:	75 7e                	jne    16490 <mov_a2o_b+0xc0>
   16412:	83 ec 08             	sub    $0x8,%esp
   16415:	6a 04                	push   $0x4
   16417:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1641b:	83 c0 01             	add    $0x1,%eax
   1641e:	50                   	push   %eax
   1641f:	e8 7c 88 00 00       	call   1eca0 <instr_fetch>
   16424:	83 c4 10             	add    $0x10,%esp
   16427:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   1642b:	89 46 04             	mov    %eax,0x4(%esi)
   1642e:	74 03                	je     16433 <mov_a2o_b+0x63>
   16430:	89 46 14             	mov    %eax,0x14(%esi)
   16433:	8b 56 10             	mov    0x10(%esi),%edx
   16436:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   1643c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   16442:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   16449:	83 fa 08             	cmp    $0x8,%edx
   1644c:	74 12                	je     16460 <mov_a2o_b+0x90>
   1644e:	83 fa 10             	cmp    $0x10,%edx
   16451:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   16457:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   1645d:	0f 45 c2             	cmovne %edx,%eax
   16460:	83 ec 0c             	sub    $0xc,%esp
   16463:	56                   	push   %esi
   16464:	57                   	push   %edi
   16465:	6a 05                	push   $0x5
   16467:	50                   	push   %eax
   16468:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   1646e:	50                   	push   %eax
   1646f:	e8 2c bd ff ff       	call   121a0 <print_asm_2>
   16474:	83 c4 20             	add    $0x20,%esp
   16477:	e8 54 fa ff ff       	call   15ed0 <instr_execute_2op>
   1647c:	83 c4 0c             	add    $0xc,%esp
   1647f:	b8 05 00 00 00       	mov    $0x5,%eax
   16484:	5b                   	pop    %ebx
   16485:	5e                   	pop    %esi
   16486:	5f                   	pop    %edi
   16487:	5d                   	pop    %ebp
   16488:	c3                   	ret    
   16489:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16490:	83 ec 0c             	sub    $0xc,%esp
   16493:	56                   	push   %esi
   16494:	e8 67 c5 ff ff       	call   12a00 <clear_operand_mem_addr>
   16499:	83 c4 10             	add    $0x10,%esp
   1649c:	e9 71 ff ff ff       	jmp    16412 <mov_a2o_b+0x42>
   164a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   164a8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   164af:	90                   	nop

000164b0 <mov_a2o_v>:
   164b0:	55                   	push   %ebp
   164b1:	57                   	push   %edi
   164b2:	56                   	push   %esi
   164b3:	53                   	push   %ebx
   164b4:	e8 c7 df fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   164b9:	81 c3 47 8b 03 00    	add    $0x38b47,%ebx
   164bf:	83 ec 0c             	sub    $0xc,%esp
   164c2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   164c8:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   164ce:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   164d4:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   164da:	0f b6 00             	movzbl (%eax),%eax
   164dd:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   164e1:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   164e7:	89 46 10             	mov    %eax,0x10(%esi)
   164ea:	89 47 10             	mov    %eax,0x10(%edi)
   164ed:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   164f1:	75 7d                	jne    16570 <mov_a2o_v+0xc0>
   164f3:	83 ec 08             	sub    $0x8,%esp
   164f6:	6a 04                	push   $0x4
   164f8:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   164fc:	83 c0 01             	add    $0x1,%eax
   164ff:	50                   	push   %eax
   16500:	e8 9b 87 00 00       	call   1eca0 <instr_fetch>
   16505:	83 c4 10             	add    $0x10,%esp
   16508:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   1650c:	89 46 04             	mov    %eax,0x4(%esi)
   1650f:	74 03                	je     16514 <mov_a2o_v+0x64>
   16511:	89 46 14             	mov    %eax,0x14(%esi)
   16514:	8b 56 10             	mov    0x10(%esi),%edx
   16517:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   1651d:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   16523:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   1652a:	83 fa 08             	cmp    $0x8,%edx
   1652d:	74 12                	je     16541 <mov_a2o_v+0x91>
   1652f:	83 fa 10             	cmp    $0x10,%edx
   16532:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   16538:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   1653e:	0f 45 c2             	cmovne %edx,%eax
   16541:	83 ec 0c             	sub    $0xc,%esp
   16544:	56                   	push   %esi
   16545:	57                   	push   %edi
   16546:	6a 05                	push   $0x5
   16548:	50                   	push   %eax
   16549:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   1654f:	50                   	push   %eax
   16550:	e8 4b bc ff ff       	call   121a0 <print_asm_2>
   16555:	83 c4 20             	add    $0x20,%esp
   16558:	e8 73 f9 ff ff       	call   15ed0 <instr_execute_2op>
   1655d:	83 c4 0c             	add    $0xc,%esp
   16560:	b8 05 00 00 00       	mov    $0x5,%eax
   16565:	5b                   	pop    %ebx
   16566:	5e                   	pop    %esi
   16567:	5f                   	pop    %edi
   16568:	5d                   	pop    %ebp
   16569:	c3                   	ret    
   1656a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16570:	83 ec 0c             	sub    $0xc,%esp
   16573:	56                   	push   %esi
   16574:	e8 87 c4 ff ff       	call   12a00 <clear_operand_mem_addr>
   16579:	83 c4 10             	add    $0x10,%esp
   1657c:	e9 72 ff ff ff       	jmp    164f3 <mov_a2o_v+0x43>
   16581:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16588:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1658f:	90                   	nop

00016590 <mov_o2a_b>:
   16590:	55                   	push   %ebp
   16591:	57                   	push   %edi
   16592:	56                   	push   %esi
   16593:	53                   	push   %ebx
   16594:	e8 e7 de fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16599:	81 c3 67 8a 03 00    	add    $0x38a67,%ebx
   1659f:	83 ec 0c             	sub    $0xc,%esp
   165a2:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   165a8:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   165ae:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   165b4:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   165b8:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   165bf:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   165c6:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   165cc:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   165d0:	75 7e                	jne    16650 <mov_o2a_b+0xc0>
   165d2:	83 ec 08             	sub    $0x8,%esp
   165d5:	6a 04                	push   $0x4
   165d7:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   165db:	83 c0 01             	add    $0x1,%eax
   165de:	50                   	push   %eax
   165df:	e8 bc 86 00 00       	call   1eca0 <instr_fetch>
   165e4:	83 c4 10             	add    $0x10,%esp
   165e7:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   165eb:	89 46 04             	mov    %eax,0x4(%esi)
   165ee:	74 03                	je     165f3 <mov_o2a_b+0x63>
   165f0:	89 46 14             	mov    %eax,0x14(%esi)
   165f3:	8b 57 10             	mov    0x10(%edi),%edx
   165f6:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   165fc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   16602:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   16609:	83 fa 08             	cmp    $0x8,%edx
   1660c:	74 12                	je     16620 <mov_o2a_b+0x90>
   1660e:	83 fa 10             	cmp    $0x10,%edx
   16611:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   16617:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   1661d:	0f 45 c2             	cmovne %edx,%eax
   16620:	83 ec 0c             	sub    $0xc,%esp
   16623:	57                   	push   %edi
   16624:	56                   	push   %esi
   16625:	6a 05                	push   $0x5
   16627:	50                   	push   %eax
   16628:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   1662e:	50                   	push   %eax
   1662f:	e8 6c bb ff ff       	call   121a0 <print_asm_2>
   16634:	83 c4 20             	add    $0x20,%esp
   16637:	e8 94 f8 ff ff       	call   15ed0 <instr_execute_2op>
   1663c:	83 c4 0c             	add    $0xc,%esp
   1663f:	b8 05 00 00 00       	mov    $0x5,%eax
   16644:	5b                   	pop    %ebx
   16645:	5e                   	pop    %esi
   16646:	5f                   	pop    %edi
   16647:	5d                   	pop    %ebp
   16648:	c3                   	ret    
   16649:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16650:	83 ec 0c             	sub    $0xc,%esp
   16653:	56                   	push   %esi
   16654:	e8 a7 c3 ff ff       	call   12a00 <clear_operand_mem_addr>
   16659:	83 c4 10             	add    $0x10,%esp
   1665c:	e9 71 ff ff ff       	jmp    165d2 <mov_o2a_b+0x42>
   16661:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16668:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1666f:	90                   	nop

00016670 <mov_o2a_v>:
   16670:	55                   	push   %ebp
   16671:	57                   	push   %edi
   16672:	56                   	push   %esi
   16673:	53                   	push   %ebx
   16674:	e8 07 de fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16679:	81 c3 87 89 03 00    	add    $0x38987,%ebx
   1667f:	83 ec 0c             	sub    $0xc,%esp
   16682:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16688:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   1668e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   16694:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1669a:	0f b6 00             	movzbl (%eax),%eax
   1669d:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   166a1:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   166a7:	89 47 10             	mov    %eax,0x10(%edi)
   166aa:	89 46 10             	mov    %eax,0x10(%esi)
   166ad:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   166b1:	75 7d                	jne    16730 <mov_o2a_v+0xc0>
   166b3:	83 ec 08             	sub    $0x8,%esp
   166b6:	6a 04                	push   $0x4
   166b8:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   166bc:	83 c0 01             	add    $0x1,%eax
   166bf:	50                   	push   %eax
   166c0:	e8 db 85 00 00       	call   1eca0 <instr_fetch>
   166c5:	83 c4 10             	add    $0x10,%esp
   166c8:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   166cc:	89 46 04             	mov    %eax,0x4(%esi)
   166cf:	74 03                	je     166d4 <mov_o2a_v+0x64>
   166d1:	89 46 14             	mov    %eax,0x14(%esi)
   166d4:	8b 57 10             	mov    0x10(%edi),%edx
   166d7:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   166dd:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   166e3:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   166ea:	83 fa 08             	cmp    $0x8,%edx
   166ed:	74 12                	je     16701 <mov_o2a_v+0x91>
   166ef:	83 fa 10             	cmp    $0x10,%edx
   166f2:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   166f8:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   166fe:	0f 45 c2             	cmovne %edx,%eax
   16701:	83 ec 0c             	sub    $0xc,%esp
   16704:	57                   	push   %edi
   16705:	56                   	push   %esi
   16706:	6a 05                	push   $0x5
   16708:	50                   	push   %eax
   16709:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   1670f:	50                   	push   %eax
   16710:	e8 8b ba ff ff       	call   121a0 <print_asm_2>
   16715:	83 c4 20             	add    $0x20,%esp
   16718:	e8 b3 f7 ff ff       	call   15ed0 <instr_execute_2op>
   1671d:	83 c4 0c             	add    $0xc,%esp
   16720:	b8 05 00 00 00       	mov    $0x5,%eax
   16725:	5b                   	pop    %ebx
   16726:	5e                   	pop    %esi
   16727:	5f                   	pop    %edi
   16728:	5d                   	pop    %ebp
   16729:	c3                   	ret    
   1672a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16730:	83 ec 0c             	sub    $0xc,%esp
   16733:	56                   	push   %esi
   16734:	e8 c7 c2 ff ff       	call   12a00 <clear_operand_mem_addr>
   16739:	83 c4 10             	add    $0x10,%esp
   1673c:	e9 72 ff ff ff       	jmp    166b3 <mov_o2a_v+0x43>
   16741:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16748:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1674f:	90                   	nop

00016750 <mov_zrm82r_v>:
   16750:	55                   	push   %ebp
   16751:	57                   	push   %edi
   16752:	56                   	push   %esi
   16753:	53                   	push   %ebx
   16754:	e8 27 dd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16759:	81 c3 a7 88 03 00    	add    $0x388a7,%ebx
   1675f:	83 ec 60             	sub    $0x60,%esp
   16762:	8d 7c 24 30          	lea    0x30(%esp),%edi
   16766:	c7 44 24 40 08 00 00 	movl   $0x8,0x40(%esp)
   1676d:	00 
   1676e:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16774:	0f b6 00             	movzbl (%eax),%eax
   16777:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1677b:	57                   	push   %edi
   1677c:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   16780:	55                   	push   %ebp
   16781:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   16785:	83 c0 01             	add    $0x1,%eax
   16788:	50                   	push   %eax
   16789:	e8 12 b7 ff ff       	call   11ea0 <modrm_r_rm>
   1678e:	89 3c 24             	mov    %edi,(%esp)
   16791:	8d 70 01             	lea    0x1(%eax),%esi
   16794:	e8 47 bc ff ff       	call   123e0 <operand_read>
   16799:	8b 44 24 48          	mov    0x48(%esp),%eax
   1679d:	89 2c 24             	mov    %ebp,(%esp)
   167a0:	89 44 24 24          	mov    %eax,0x24(%esp)
   167a4:	e8 e7 bd ff ff       	call   12590 <operand_write>
   167a9:	89 f0                	mov    %esi,%eax
   167ab:	89 2c 24             	mov    %ebp,(%esp)
   167ae:	0f b6 c0             	movzbl %al,%eax
   167b1:	57                   	push   %edi
   167b2:	50                   	push   %eax
   167b3:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   167b9:	50                   	push   %eax
   167ba:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   167c0:	50                   	push   %eax
   167c1:	e8 da b9 ff ff       	call   121a0 <print_asm_2>
   167c6:	83 c4 7c             	add    $0x7c,%esp
   167c9:	89 f0                	mov    %esi,%eax
   167cb:	5b                   	pop    %ebx
   167cc:	5e                   	pop    %esi
   167cd:	5f                   	pop    %edi
   167ce:	5d                   	pop    %ebp
   167cf:	c3                   	ret    

000167d0 <mov_zrm162r_l>:
   167d0:	55                   	push   %ebp
   167d1:	57                   	push   %edi
   167d2:	56                   	push   %esi
   167d3:	53                   	push   %ebx
   167d4:	e8 a7 dc fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   167d9:	81 c3 27 88 03 00    	add    $0x38827,%ebx
   167df:	83 ec 60             	sub    $0x60,%esp
   167e2:	8d 7c 24 30          	lea    0x30(%esp),%edi
   167e6:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   167ed:	00 
   167ee:	c7 44 24 40 10 00 00 	movl   $0x10,0x40(%esp)
   167f5:	00 
   167f6:	57                   	push   %edi
   167f7:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   167fb:	55                   	push   %ebp
   167fc:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   16800:	83 c0 01             	add    $0x1,%eax
   16803:	50                   	push   %eax
   16804:	e8 97 b6 ff ff       	call   11ea0 <modrm_r_rm>
   16809:	89 3c 24             	mov    %edi,(%esp)
   1680c:	8d 70 01             	lea    0x1(%eax),%esi
   1680f:	e8 cc bb ff ff       	call   123e0 <operand_read>
   16814:	8b 44 24 48          	mov    0x48(%esp),%eax
   16818:	89 2c 24             	mov    %ebp,(%esp)
   1681b:	89 44 24 24          	mov    %eax,0x24(%esp)
   1681f:	e8 6c bd ff ff       	call   12590 <operand_write>
   16824:	89 f0                	mov    %esi,%eax
   16826:	89 2c 24             	mov    %ebp,(%esp)
   16829:	0f b6 c0             	movzbl %al,%eax
   1682c:	57                   	push   %edi
   1682d:	50                   	push   %eax
   1682e:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   16834:	50                   	push   %eax
   16835:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   1683b:	50                   	push   %eax
   1683c:	e8 5f b9 ff ff       	call   121a0 <print_asm_2>
   16841:	83 c4 7c             	add    $0x7c,%esp
   16844:	89 f0                	mov    %esi,%eax
   16846:	5b                   	pop    %ebx
   16847:	5e                   	pop    %esi
   16848:	5f                   	pop    %edi
   16849:	5d                   	pop    %ebp
   1684a:	c3                   	ret    
   1684b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1684f:	90                   	nop

00016850 <mov_srm82r_v>:
   16850:	55                   	push   %ebp
   16851:	57                   	push   %edi
   16852:	56                   	push   %esi
   16853:	53                   	push   %ebx
   16854:	e8 27 dc fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16859:	81 c3 a7 87 03 00    	add    $0x387a7,%ebx
   1685f:	83 ec 60             	sub    $0x60,%esp
   16862:	8d 7c 24 30          	lea    0x30(%esp),%edi
   16866:	c7 44 24 40 08 00 00 	movl   $0x8,0x40(%esp)
   1686d:	00 
   1686e:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16874:	0f b6 00             	movzbl (%eax),%eax
   16877:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1687b:	57                   	push   %edi
   1687c:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   16880:	55                   	push   %ebp
   16881:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   16885:	83 c0 01             	add    $0x1,%eax
   16888:	50                   	push   %eax
   16889:	e8 12 b6 ff ff       	call   11ea0 <modrm_r_rm>
   1688e:	89 3c 24             	mov    %edi,(%esp)
   16891:	8d 70 01             	lea    0x1(%eax),%esi
   16894:	e8 47 bb ff ff       	call   123e0 <operand_read>
   16899:	0f be 44 24 48       	movsbl 0x48(%esp),%eax
   1689e:	89 2c 24             	mov    %ebp,(%esp)
   168a1:	89 44 24 24          	mov    %eax,0x24(%esp)
   168a5:	e8 e6 bc ff ff       	call   12590 <operand_write>
   168aa:	89 f0                	mov    %esi,%eax
   168ac:	89 2c 24             	mov    %ebp,(%esp)
   168af:	0f b6 c0             	movzbl %al,%eax
   168b2:	57                   	push   %edi
   168b3:	50                   	push   %eax
   168b4:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   168ba:	50                   	push   %eax
   168bb:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   168c1:	50                   	push   %eax
   168c2:	e8 d9 b8 ff ff       	call   121a0 <print_asm_2>
   168c7:	83 c4 7c             	add    $0x7c,%esp
   168ca:	89 f0                	mov    %esi,%eax
   168cc:	5b                   	pop    %ebx
   168cd:	5e                   	pop    %esi
   168ce:	5f                   	pop    %edi
   168cf:	5d                   	pop    %ebp
   168d0:	c3                   	ret    
   168d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   168d8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   168df:	90                   	nop

000168e0 <mov_srm162r_l>:
   168e0:	55                   	push   %ebp
   168e1:	57                   	push   %edi
   168e2:	56                   	push   %esi
   168e3:	53                   	push   %ebx
   168e4:	e8 97 db fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   168e9:	81 c3 17 87 03 00    	add    $0x38717,%ebx
   168ef:	83 ec 60             	sub    $0x60,%esp
   168f2:	8d 7c 24 30          	lea    0x30(%esp),%edi
   168f6:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   168fd:	00 
   168fe:	c7 44 24 40 10 00 00 	movl   $0x10,0x40(%esp)
   16905:	00 
   16906:	57                   	push   %edi
   16907:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   1690b:	55                   	push   %ebp
   1690c:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   16910:	83 c0 01             	add    $0x1,%eax
   16913:	50                   	push   %eax
   16914:	e8 87 b5 ff ff       	call   11ea0 <modrm_r_rm>
   16919:	89 3c 24             	mov    %edi,(%esp)
   1691c:	8d 70 01             	lea    0x1(%eax),%esi
   1691f:	e8 bc ba ff ff       	call   123e0 <operand_read>
   16924:	0f bf 44 24 48       	movswl 0x48(%esp),%eax
   16929:	89 2c 24             	mov    %ebp,(%esp)
   1692c:	89 44 24 24          	mov    %eax,0x24(%esp)
   16930:	e8 5b bc ff ff       	call   12590 <operand_write>
   16935:	89 f0                	mov    %esi,%eax
   16937:	89 2c 24             	mov    %ebp,(%esp)
   1693a:	0f b6 c0             	movzbl %al,%eax
   1693d:	57                   	push   %edi
   1693e:	50                   	push   %eax
   1693f:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   16945:	50                   	push   %eax
   16946:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   1694c:	50                   	push   %eax
   1694d:	e8 4e b8 ff ff       	call   121a0 <print_asm_2>
   16952:	83 c4 7c             	add    $0x7c,%esp
   16955:	89 f0                	mov    %esi,%eax
   16957:	5b                   	pop    %ebx
   16958:	5e                   	pop    %esi
   16959:	5f                   	pop    %edi
   1695a:	5d                   	pop    %ebp
   1695b:	c3                   	ret    
   1695c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016960 <mov_c2r_l>:
   16960:	55                   	push   %ebp
   16961:	57                   	push   %edi
   16962:	56                   	push   %esi
   16963:	53                   	push   %ebx
   16964:	e8 17 db fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16969:	81 c3 97 86 03 00    	add    $0x38697,%ebx
   1696f:	83 ec 10             	sub    $0x10,%esp
   16972:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16978:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1697e:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   16984:	0f b6 00             	movzbl (%eax),%eax
   16987:	55                   	push   %ebp
   16988:	89 45 10             	mov    %eax,0x10(%ebp)
   1698b:	56                   	push   %esi
   1698c:	89 46 10             	mov    %eax,0x10(%esi)
   1698f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16993:	83 c0 01             	add    $0x1,%eax
   16996:	50                   	push   %eax
   16997:	e8 04 b5 ff ff       	call   11ea0 <modrm_r_rm>
   1699c:	89 34 24             	mov    %esi,(%esp)
   1699f:	8d 78 01             	lea    0x1(%eax),%edi
   169a2:	c7 06 03 00 00 00    	movl   $0x3,(%esi)
   169a8:	e8 33 ba ff ff       	call   123e0 <operand_read>
   169ad:	8b 46 0c             	mov    0xc(%esi),%eax
   169b0:	89 2c 24             	mov    %ebp,(%esp)
   169b3:	89 45 0c             	mov    %eax,0xc(%ebp)
   169b6:	e8 d5 bb ff ff       	call   12590 <operand_write>
   169bb:	89 f8                	mov    %edi,%eax
   169bd:	89 2c 24             	mov    %ebp,(%esp)
   169c0:	0f b6 c0             	movzbl %al,%eax
   169c3:	56                   	push   %esi
   169c4:	50                   	push   %eax
   169c5:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   169cb:	50                   	push   %eax
   169cc:	8d 83 45 67 fe ff    	lea    -0x198bb(%ebx),%eax
   169d2:	50                   	push   %eax
   169d3:	e8 c8 b7 ff ff       	call   121a0 <print_asm_2>
   169d8:	83 c4 2c             	add    $0x2c,%esp
   169db:	89 f8                	mov    %edi,%eax
   169dd:	5b                   	pop    %ebx
   169de:	5e                   	pop    %esi
   169df:	5f                   	pop    %edi
   169e0:	5d                   	pop    %ebp
   169e1:	c3                   	ret    
   169e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   169e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000169f0 <mov_r2c_l>:
   169f0:	55                   	push   %ebp
   169f1:	57                   	push   %edi
   169f2:	56                   	push   %esi
   169f3:	53                   	push   %ebx
   169f4:	e8 87 da fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   169f9:	81 c3 07 86 03 00    	add    $0x38607,%ebx
   169ff:	83 ec 10             	sub    $0x10,%esp
   16a02:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16a08:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16a0e:	8d ab e0 33 05 00    	lea    0x533e0(%ebx),%ebp
   16a14:	0f b6 00             	movzbl (%eax),%eax
   16a17:	55                   	push   %ebp
   16a18:	89 46 10             	mov    %eax,0x10(%esi)
   16a1b:	56                   	push   %esi
   16a1c:	89 45 10             	mov    %eax,0x10(%ebp)
   16a1f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16a23:	83 c0 01             	add    $0x1,%eax
   16a26:	50                   	push   %eax
   16a27:	e8 74 b4 ff ff       	call   11ea0 <modrm_r_rm>
   16a2c:	89 2c 24             	mov    %ebp,(%esp)
   16a2f:	8d 78 01             	lea    0x1(%eax),%edi
   16a32:	e8 a9 b9 ff ff       	call   123e0 <operand_read>
   16a37:	8b 45 0c             	mov    0xc(%ebp),%eax
   16a3a:	89 34 24             	mov    %esi,(%esp)
   16a3d:	c7 06 03 00 00 00    	movl   $0x3,(%esi)
   16a43:	89 46 0c             	mov    %eax,0xc(%esi)
   16a46:	e8 45 bb ff ff       	call   12590 <operand_write>
   16a4b:	89 f8                	mov    %edi,%eax
   16a4d:	89 34 24             	mov    %esi,(%esp)
   16a50:	0f b6 c0             	movzbl %al,%eax
   16a53:	55                   	push   %ebp
   16a54:	50                   	push   %eax
   16a55:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   16a5b:	50                   	push   %eax
   16a5c:	8d 83 45 67 fe ff    	lea    -0x198bb(%ebx),%eax
   16a62:	50                   	push   %eax
   16a63:	e8 38 b7 ff ff       	call   121a0 <print_asm_2>
   16a68:	83 c4 2c             	add    $0x2c,%esp
   16a6b:	89 f8                	mov    %edi,%eax
   16a6d:	5b                   	pop    %ebx
   16a6e:	5e                   	pop    %esi
   16a6f:	5f                   	pop    %edi
   16a70:	5d                   	pop    %ebp
   16a71:	c3                   	ret    
   16a72:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16a79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016a80 <mov_rm2s_w>:
   16a80:	55                   	push   %ebp
   16a81:	57                   	push   %edi
   16a82:	56                   	push   %esi
   16a83:	53                   	push   %ebx
   16a84:	e8 f7 d9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16a89:	81 c3 77 85 03 00    	add    $0x38577,%ebx
   16a8f:	83 ec 10             	sub    $0x10,%esp
   16a92:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16a98:	8d ab e0 33 05 00    	lea    0x533e0(%ebx),%ebp
   16a9e:	55                   	push   %ebp
   16a9f:	56                   	push   %esi
   16aa0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16aa4:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)
   16aab:	83 c0 01             	add    $0x1,%eax
   16aae:	c7 46 10 10 00 00 00 	movl   $0x10,0x10(%esi)
   16ab5:	50                   	push   %eax
   16ab6:	e8 e5 b3 ff ff       	call   11ea0 <modrm_r_rm>
   16abb:	89 2c 24             	mov    %ebp,(%esp)
   16abe:	8d 78 01             	lea    0x1(%eax),%edi
   16ac1:	c7 06 04 00 00 00    	movl   $0x4,(%esi)
   16ac7:	e8 14 b9 ff ff       	call   123e0 <operand_read>
   16acc:	8b 45 0c             	mov    0xc(%ebp),%eax
   16acf:	89 34 24             	mov    %esi,(%esp)
   16ad2:	89 46 0c             	mov    %eax,0xc(%esi)
   16ad5:	e8 b6 ba ff ff       	call   12590 <operand_write>
   16ada:	89 f8                	mov    %edi,%eax
   16adc:	89 34 24             	mov    %esi,(%esp)
   16adf:	0f b6 c0             	movzbl %al,%eax
   16ae2:	55                   	push   %ebp
   16ae3:	50                   	push   %eax
   16ae4:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   16aea:	50                   	push   %eax
   16aeb:	8d 83 4a 67 fe ff    	lea    -0x198b6(%ebx),%eax
   16af1:	50                   	push   %eax
   16af2:	e8 a9 b6 ff ff       	call   121a0 <print_asm_2>
   16af7:	83 c4 2c             	add    $0x2c,%esp
   16afa:	89 f8                	mov    %edi,%eax
   16afc:	5b                   	pop    %ebx
   16afd:	5e                   	pop    %esi
   16afe:	5f                   	pop    %edi
   16aff:	5d                   	pop    %ebp
   16b00:	c3                   	ret    
   16b01:	66 90                	xchg   %ax,%ax
   16b03:	66 90                	xchg   %ax,%ax
   16b05:	66 90                	xchg   %ax,%ax
   16b07:	66 90                	xchg   %ax,%ax
   16b09:	66 90                	xchg   %ax,%ax
   16b0b:	66 90                	xchg   %ax,%ax
   16b0d:	66 90                	xchg   %ax,%ax
   16b0f:	90                   	nop

00016b10 <sign_ext.part.0>:
   16b10:	53                   	push   %ebx
   16b11:	e8 6a d9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16b16:	81 c3 ea 84 03 00    	add    $0x384ea,%ebx
   16b1c:	83 ec 08             	sub    $0x8,%esp
   16b1f:	8d 83 50 67 fe ff    	lea    -0x198b0(%ebx),%eax
   16b25:	50                   	push   %eax
   16b26:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   16b2c:	6a 2e                	push   $0x2e
   16b2e:	50                   	push   %eax
   16b2f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   16b35:	50                   	push   %eax
   16b36:	e8 d5 d7 fe ff       	call   4310 <__assert_fail@plt>
   16b3b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16b3f:	90                   	nop

00016b40 <instr_execute_2op>:
   16b40:	57                   	push   %edi
   16b41:	56                   	push   %esi
   16b42:	53                   	push   %ebx
   16b43:	e8 38 d9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16b48:	81 c3 b8 84 03 00    	add    $0x384b8,%ebx
   16b4e:	83 ec 0c             	sub    $0xc,%esp
   16b51:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16b57:	57                   	push   %edi
   16b58:	e8 83 b8 ff ff       	call   123e0 <operand_read>
   16b5d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16b63:	89 34 24             	mov    %esi,(%esp)
   16b66:	e8 75 b8 ff ff       	call   123e0 <operand_read>
   16b6b:	8b 57 10             	mov    0x10(%edi),%edx
   16b6e:	83 c4 10             	add    $0x10,%esp
   16b71:	8b 47 0c             	mov    0xc(%edi),%eax
   16b74:	8d 4a f8             	lea    -0x8(%edx),%ecx
   16b77:	83 e1 f7             	and    $0xfffffff7,%ecx
   16b7a:	74 05                	je     16b81 <instr_execute_2op+0x41>
   16b7c:	83 fa 20             	cmp    $0x20,%edx
   16b7f:	75 6c                	jne    16bed <instr_execute_2op+0xad>
   16b81:	83 fa 08             	cmp    $0x8,%edx
   16b84:	74 5a                	je     16be0 <instr_execute_2op+0xa0>
   16b86:	0f bf c8             	movswl %ax,%ecx
   16b89:	83 fa 10             	cmp    $0x10,%edx
   16b8c:	0f 44 c1             	cmove  %ecx,%eax
   16b8f:	8b 4e 10             	mov    0x10(%esi),%ecx
   16b92:	8b 56 0c             	mov    0xc(%esi),%edx
   16b95:	89 47 0c             	mov    %eax,0xc(%edi)
   16b98:	8d 79 f8             	lea    -0x8(%ecx),%edi
   16b9b:	83 e7 f7             	and    $0xfffffff7,%edi
   16b9e:	74 05                	je     16ba5 <instr_execute_2op+0x65>
   16ba0:	83 f9 20             	cmp    $0x20,%ecx
   16ba3:	75 48                	jne    16bed <instr_execute_2op+0xad>
   16ba5:	83 f9 08             	cmp    $0x8,%ecx
   16ba8:	74 3e                	je     16be8 <instr_execute_2op+0xa8>
   16baa:	0f bf fa             	movswl %dx,%edi
   16bad:	83 f9 10             	cmp    $0x10,%ecx
   16bb0:	0f 44 d7             	cmove  %edi,%edx
   16bb3:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   16bb9:	83 ec 04             	sub    $0x4,%esp
   16bbc:	89 56 0c             	mov    %edx,0xc(%esi)
   16bbf:	0f b6 09             	movzbl (%ecx),%ecx
   16bc2:	51                   	push   %ecx
   16bc3:	52                   	push   %edx
   16bc4:	50                   	push   %eax
   16bc5:	e8 46 8f ff ff       	call   fb10 <alu_or>
   16bca:	89 34 24             	mov    %esi,(%esp)
   16bcd:	89 46 0c             	mov    %eax,0xc(%esi)
   16bd0:	e8 bb b9 ff ff       	call   12590 <operand_write>
   16bd5:	83 c4 10             	add    $0x10,%esp
   16bd8:	5b                   	pop    %ebx
   16bd9:	5e                   	pop    %esi
   16bda:	5f                   	pop    %edi
   16bdb:	c3                   	ret    
   16bdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16be0:	0f be c0             	movsbl %al,%eax
   16be3:	eb aa                	jmp    16b8f <instr_execute_2op+0x4f>
   16be5:	8d 76 00             	lea    0x0(%esi),%esi
   16be8:	0f be d2             	movsbl %dl,%edx
   16beb:	eb c6                	jmp    16bb3 <instr_execute_2op+0x73>
   16bed:	e8 1e ff ff ff       	call   16b10 <sign_ext.part.0>
   16bf2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16bf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016c00 <or_r2rm_b>:
   16c00:	55                   	push   %ebp
   16c01:	57                   	push   %edi
   16c02:	56                   	push   %esi
   16c03:	53                   	push   %ebx
   16c04:	e8 77 d8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16c09:	81 c3 f7 83 03 00    	add    $0x383f7,%ebx
   16c0f:	83 ec 10             	sub    $0x10,%esp
   16c12:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16c18:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16c1e:	56                   	push   %esi
   16c1f:	57                   	push   %edi
   16c20:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16c24:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   16c2b:	83 c0 01             	add    $0x1,%eax
   16c2e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16c35:	50                   	push   %eax
   16c36:	e8 65 b2 ff ff       	call   11ea0 <modrm_r_rm>
   16c3b:	8b 4e 10             	mov    0x10(%esi),%ecx
   16c3e:	83 c4 10             	add    $0x10,%esp
   16c41:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   16c47:	8d 68 01             	lea    0x1(%eax),%ebp
   16c4a:	89 e8                	mov    %ebp,%eax
   16c4c:	0f b6 c0             	movzbl %al,%eax
   16c4f:	83 f9 08             	cmp    $0x8,%ecx
   16c52:	74 12                	je     16c66 <or_r2rm_b+0x66>
   16c54:	83 f9 10             	cmp    $0x10,%ecx
   16c57:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   16c5d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   16c63:	0f 45 d1             	cmovne %ecx,%edx
   16c66:	83 ec 0c             	sub    $0xc,%esp
   16c69:	56                   	push   %esi
   16c6a:	57                   	push   %edi
   16c6b:	50                   	push   %eax
   16c6c:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   16c72:	52                   	push   %edx
   16c73:	50                   	push   %eax
   16c74:	e8 27 b5 ff ff       	call   121a0 <print_asm_2>
   16c79:	83 c4 20             	add    $0x20,%esp
   16c7c:	e8 bf fe ff ff       	call   16b40 <instr_execute_2op>
   16c81:	83 c4 0c             	add    $0xc,%esp
   16c84:	89 e8                	mov    %ebp,%eax
   16c86:	5b                   	pop    %ebx
   16c87:	5e                   	pop    %esi
   16c88:	5f                   	pop    %edi
   16c89:	5d                   	pop    %ebp
   16c8a:	c3                   	ret    
   16c8b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16c8f:	90                   	nop

00016c90 <or_r2rm_v>:
   16c90:	55                   	push   %ebp
   16c91:	57                   	push   %edi
   16c92:	56                   	push   %esi
   16c93:	53                   	push   %ebx
   16c94:	e8 e7 d7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16c99:	81 c3 67 83 03 00    	add    $0x38367,%ebx
   16c9f:	83 ec 10             	sub    $0x10,%esp
   16ca2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16ca8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16cae:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16cb4:	0f b6 00             	movzbl (%eax),%eax
   16cb7:	56                   	push   %esi
   16cb8:	57                   	push   %edi
   16cb9:	89 46 10             	mov    %eax,0x10(%esi)
   16cbc:	89 47 10             	mov    %eax,0x10(%edi)
   16cbf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16cc3:	83 c0 01             	add    $0x1,%eax
   16cc6:	50                   	push   %eax
   16cc7:	e8 d4 b1 ff ff       	call   11ea0 <modrm_r_rm>
   16ccc:	8b 4e 10             	mov    0x10(%esi),%ecx
   16ccf:	83 c4 10             	add    $0x10,%esp
   16cd2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   16cd8:	8d 68 01             	lea    0x1(%eax),%ebp
   16cdb:	89 e8                	mov    %ebp,%eax
   16cdd:	0f b6 c0             	movzbl %al,%eax
   16ce0:	83 f9 08             	cmp    $0x8,%ecx
   16ce3:	74 12                	je     16cf7 <or_r2rm_v+0x67>
   16ce5:	83 f9 10             	cmp    $0x10,%ecx
   16ce8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   16cee:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   16cf4:	0f 45 d1             	cmovne %ecx,%edx
   16cf7:	83 ec 0c             	sub    $0xc,%esp
   16cfa:	56                   	push   %esi
   16cfb:	57                   	push   %edi
   16cfc:	50                   	push   %eax
   16cfd:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   16d03:	52                   	push   %edx
   16d04:	50                   	push   %eax
   16d05:	e8 96 b4 ff ff       	call   121a0 <print_asm_2>
   16d0a:	83 c4 20             	add    $0x20,%esp
   16d0d:	e8 2e fe ff ff       	call   16b40 <instr_execute_2op>
   16d12:	83 c4 0c             	add    $0xc,%esp
   16d15:	89 e8                	mov    %ebp,%eax
   16d17:	5b                   	pop    %ebx
   16d18:	5e                   	pop    %esi
   16d19:	5f                   	pop    %edi
   16d1a:	5d                   	pop    %ebp
   16d1b:	c3                   	ret    
   16d1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016d20 <or_rm2r_b>:
   16d20:	55                   	push   %ebp
   16d21:	57                   	push   %edi
   16d22:	56                   	push   %esi
   16d23:	53                   	push   %ebx
   16d24:	e8 57 d7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16d29:	81 c3 d7 82 03 00    	add    $0x382d7,%ebx
   16d2f:	83 ec 10             	sub    $0x10,%esp
   16d32:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16d38:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16d3e:	57                   	push   %edi
   16d3f:	56                   	push   %esi
   16d40:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16d44:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   16d4b:	83 c0 01             	add    $0x1,%eax
   16d4e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16d55:	50                   	push   %eax
   16d56:	e8 45 b1 ff ff       	call   11ea0 <modrm_r_rm>
   16d5b:	8b 4e 10             	mov    0x10(%esi),%ecx
   16d5e:	83 c4 10             	add    $0x10,%esp
   16d61:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   16d67:	8d 68 01             	lea    0x1(%eax),%ebp
   16d6a:	89 e8                	mov    %ebp,%eax
   16d6c:	0f b6 c0             	movzbl %al,%eax
   16d6f:	83 f9 08             	cmp    $0x8,%ecx
   16d72:	74 12                	je     16d86 <or_rm2r_b+0x66>
   16d74:	83 f9 10             	cmp    $0x10,%ecx
   16d77:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   16d7d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   16d83:	0f 45 d1             	cmovne %ecx,%edx
   16d86:	83 ec 0c             	sub    $0xc,%esp
   16d89:	56                   	push   %esi
   16d8a:	57                   	push   %edi
   16d8b:	50                   	push   %eax
   16d8c:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   16d92:	52                   	push   %edx
   16d93:	50                   	push   %eax
   16d94:	e8 07 b4 ff ff       	call   121a0 <print_asm_2>
   16d99:	83 c4 20             	add    $0x20,%esp
   16d9c:	e8 9f fd ff ff       	call   16b40 <instr_execute_2op>
   16da1:	83 c4 0c             	add    $0xc,%esp
   16da4:	89 e8                	mov    %ebp,%eax
   16da6:	5b                   	pop    %ebx
   16da7:	5e                   	pop    %esi
   16da8:	5f                   	pop    %edi
   16da9:	5d                   	pop    %ebp
   16daa:	c3                   	ret    
   16dab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16daf:	90                   	nop

00016db0 <or_rm2r_v>:
   16db0:	55                   	push   %ebp
   16db1:	57                   	push   %edi
   16db2:	56                   	push   %esi
   16db3:	53                   	push   %ebx
   16db4:	e8 c7 d6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16db9:	81 c3 47 82 03 00    	add    $0x38247,%ebx
   16dbf:	83 ec 10             	sub    $0x10,%esp
   16dc2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16dc8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   16dce:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16dd4:	0f b6 00             	movzbl (%eax),%eax
   16dd7:	57                   	push   %edi
   16dd8:	89 46 10             	mov    %eax,0x10(%esi)
   16ddb:	56                   	push   %esi
   16ddc:	89 47 10             	mov    %eax,0x10(%edi)
   16ddf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   16de3:	83 c0 01             	add    $0x1,%eax
   16de6:	50                   	push   %eax
   16de7:	e8 b4 b0 ff ff       	call   11ea0 <modrm_r_rm>
   16dec:	8b 4e 10             	mov    0x10(%esi),%ecx
   16def:	83 c4 10             	add    $0x10,%esp
   16df2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   16df8:	8d 68 01             	lea    0x1(%eax),%ebp
   16dfb:	89 e8                	mov    %ebp,%eax
   16dfd:	0f b6 c0             	movzbl %al,%eax
   16e00:	83 f9 08             	cmp    $0x8,%ecx
   16e03:	74 12                	je     16e17 <or_rm2r_v+0x67>
   16e05:	83 f9 10             	cmp    $0x10,%ecx
   16e08:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   16e0e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   16e14:	0f 45 d1             	cmovne %ecx,%edx
   16e17:	83 ec 0c             	sub    $0xc,%esp
   16e1a:	56                   	push   %esi
   16e1b:	57                   	push   %edi
   16e1c:	50                   	push   %eax
   16e1d:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   16e23:	52                   	push   %edx
   16e24:	50                   	push   %eax
   16e25:	e8 76 b3 ff ff       	call   121a0 <print_asm_2>
   16e2a:	83 c4 20             	add    $0x20,%esp
   16e2d:	e8 0e fd ff ff       	call   16b40 <instr_execute_2op>
   16e32:	83 c4 0c             	add    $0xc,%esp
   16e35:	89 e8                	mov    %ebp,%eax
   16e37:	5b                   	pop    %ebx
   16e38:	5e                   	pop    %esi
   16e39:	5f                   	pop    %edi
   16e3a:	5d                   	pop    %ebp
   16e3b:	c3                   	ret    
   16e3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016e40 <or_i2a_b>:
   16e40:	53                   	push   %ebx
   16e41:	e8 3a d6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16e46:	81 c3 ba 81 03 00    	add    $0x381ba,%ebx
   16e4c:	83 ec 14             	sub    $0x14,%esp
   16e4f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   16e53:	83 c1 01             	add    $0x1,%ecx
   16e56:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   16e5c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   16e62:	89 48 04             	mov    %ecx,0x4(%eax)
   16e65:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   16e6c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   16e73:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   16e79:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   16e7d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   16e83:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   16e8a:	52                   	push   %edx
   16e8b:	50                   	push   %eax
   16e8c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   16e92:	6a 02                	push   $0x2
   16e94:	50                   	push   %eax
   16e95:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   16e9b:	50                   	push   %eax
   16e9c:	e8 ff b2 ff ff       	call   121a0 <print_asm_2>
   16ea1:	83 c4 20             	add    $0x20,%esp
   16ea4:	e8 97 fc ff ff       	call   16b40 <instr_execute_2op>
   16ea9:	83 c4 08             	add    $0x8,%esp
   16eac:	b8 02 00 00 00       	mov    $0x2,%eax
   16eb1:	5b                   	pop    %ebx
   16eb2:	c3                   	ret    
   16eb3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16eba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00016ec0 <or_i2a_v>:
   16ec0:	55                   	push   %ebp
   16ec1:	57                   	push   %edi
   16ec2:	56                   	push   %esi
   16ec3:	53                   	push   %ebx
   16ec4:	e8 b7 d5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16ec9:	81 c3 37 81 03 00    	add    $0x38137,%ebx
   16ecf:	83 ec 0c             	sub    $0xc,%esp
   16ed2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   16ed8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   16ede:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   16ee4:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   16eea:	0f b6 08             	movzbl (%eax),%ecx
   16eed:	8b 44 24 20          	mov    0x20(%esp),%eax
   16ef1:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   16ef7:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   16efb:	89 cf                	mov    %ecx,%edi
   16efd:	83 c0 01             	add    $0x1,%eax
   16f00:	89 4d 10             	mov    %ecx,0x10(%ebp)
   16f03:	c1 ef 03             	shr    $0x3,%edi
   16f06:	89 4a 10             	mov    %ecx,0x10(%edx)
   16f09:	89 42 04             	mov    %eax,0x4(%edx)
   16f0c:	83 c7 01             	add    $0x1,%edi
   16f0f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   16f16:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   16f1d:	83 f9 08             	cmp    $0x8,%ecx
   16f20:	74 12                	je     16f34 <or_i2a_v+0x74>
   16f22:	83 f9 10             	cmp    $0x10,%ecx
   16f25:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   16f2b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   16f31:	0f 45 f0             	cmovne %eax,%esi
   16f34:	83 ec 0c             	sub    $0xc,%esp
   16f37:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   16f3d:	55                   	push   %ebp
   16f3e:	52                   	push   %edx
   16f3f:	57                   	push   %edi
   16f40:	56                   	push   %esi
   16f41:	50                   	push   %eax
   16f42:	e8 59 b2 ff ff       	call   121a0 <print_asm_2>
   16f47:	83 c4 20             	add    $0x20,%esp
   16f4a:	e8 f1 fb ff ff       	call   16b40 <instr_execute_2op>
   16f4f:	83 c4 0c             	add    $0xc,%esp
   16f52:	89 f8                	mov    %edi,%eax
   16f54:	5b                   	pop    %ebx
   16f55:	5e                   	pop    %esi
   16f56:	5f                   	pop    %edi
   16f57:	5d                   	pop    %ebp
   16f58:	c3                   	ret    
   16f59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016f60 <or_i2rm_b>:
   16f60:	55                   	push   %ebp
   16f61:	57                   	push   %edi
   16f62:	56                   	push   %esi
   16f63:	53                   	push   %ebx
   16f64:	e8 17 d5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   16f69:	81 c3 97 80 03 00    	add    $0x38097,%ebx
   16f6f:	83 ec 24             	sub    $0x24,%esp
   16f72:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   16f76:	8d 45 01             	lea    0x1(%ebp),%eax
   16f79:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   16f7f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   16f85:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   16f8c:	52                   	push   %edx
   16f8d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   16f94:	89 54 24 18          	mov    %edx,0x18(%esp)
   16f98:	50                   	push   %eax
   16f99:	e8 e2 af ff ff       	call   11f80 <modrm_rm>
   16f9e:	8b 77 10             	mov    0x10(%edi),%esi
   16fa1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   16fa5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   16fa9:	83 c0 01             	add    $0x1,%eax
   16fac:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   16fb2:	83 c4 10             	add    $0x10,%esp
   16fb5:	01 c5                	add    %eax,%ebp
   16fb7:	c1 ee 03             	shr    $0x3,%esi
   16fba:	89 6f 04             	mov    %ebp,0x4(%edi)
   16fbd:	01 c6                	add    %eax,%esi
   16fbf:	8b 6a 10             	mov    0x10(%edx),%ebp
   16fc2:	89 f0                	mov    %esi,%eax
   16fc4:	0f b6 c8             	movzbl %al,%ecx
   16fc7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   16fcd:	83 fd 08             	cmp    $0x8,%ebp
   16fd0:	74 12                	je     16fe4 <or_i2rm_b+0x84>
   16fd2:	83 fd 10             	cmp    $0x10,%ebp
   16fd5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   16fdb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   16fe1:	0f 45 c5             	cmovne %ebp,%eax
   16fe4:	83 ec 0c             	sub    $0xc,%esp
   16fe7:	52                   	push   %edx
   16fe8:	57                   	push   %edi
   16fe9:	51                   	push   %ecx
   16fea:	50                   	push   %eax
   16feb:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   16ff1:	50                   	push   %eax
   16ff2:	e8 a9 b1 ff ff       	call   121a0 <print_asm_2>
   16ff7:	83 c4 20             	add    $0x20,%esp
   16ffa:	e8 41 fb ff ff       	call   16b40 <instr_execute_2op>
   16fff:	83 c4 1c             	add    $0x1c,%esp
   17002:	89 f0                	mov    %esi,%eax
   17004:	5b                   	pop    %ebx
   17005:	5e                   	pop    %esi
   17006:	5f                   	pop    %edi
   17007:	5d                   	pop    %ebp
   17008:	c3                   	ret    
   17009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017010 <or_i2rm_v>:
   17010:	55                   	push   %ebp
   17011:	57                   	push   %edi
   17012:	56                   	push   %esi
   17013:	53                   	push   %ebx
   17014:	e8 67 d4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17019:	81 c3 e7 7f 03 00    	add    $0x37fe7,%ebx
   1701f:	83 ec 24             	sub    $0x24,%esp
   17022:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   17026:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1702c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   17032:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   17038:	0f b6 00             	movzbl (%eax),%eax
   1703b:	89 42 10             	mov    %eax,0x10(%edx)
   1703e:	52                   	push   %edx
   1703f:	89 47 10             	mov    %eax,0x10(%edi)
   17042:	8d 45 01             	lea    0x1(%ebp),%eax
   17045:	89 54 24 18          	mov    %edx,0x18(%esp)
   17049:	50                   	push   %eax
   1704a:	e8 31 af ff ff       	call   11f80 <modrm_rm>
   1704f:	8b 77 10             	mov    0x10(%edi),%esi
   17052:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   17056:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1705a:	83 c0 01             	add    $0x1,%eax
   1705d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   17063:	83 c4 10             	add    $0x10,%esp
   17066:	01 c5                	add    %eax,%ebp
   17068:	c1 ee 03             	shr    $0x3,%esi
   1706b:	89 6f 04             	mov    %ebp,0x4(%edi)
   1706e:	01 c6                	add    %eax,%esi
   17070:	8b 6a 10             	mov    0x10(%edx),%ebp
   17073:	89 f0                	mov    %esi,%eax
   17075:	0f b6 c8             	movzbl %al,%ecx
   17078:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1707e:	83 fd 08             	cmp    $0x8,%ebp
   17081:	74 12                	je     17095 <or_i2rm_v+0x85>
   17083:	83 fd 10             	cmp    $0x10,%ebp
   17086:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1708c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   17092:	0f 45 c5             	cmovne %ebp,%eax
   17095:	83 ec 0c             	sub    $0xc,%esp
   17098:	52                   	push   %edx
   17099:	57                   	push   %edi
   1709a:	51                   	push   %ecx
   1709b:	50                   	push   %eax
   1709c:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   170a2:	50                   	push   %eax
   170a3:	e8 f8 b0 ff ff       	call   121a0 <print_asm_2>
   170a8:	83 c4 20             	add    $0x20,%esp
   170ab:	e8 90 fa ff ff       	call   16b40 <instr_execute_2op>
   170b0:	83 c4 1c             	add    $0x1c,%esp
   170b3:	89 f0                	mov    %esi,%eax
   170b5:	5b                   	pop    %ebx
   170b6:	5e                   	pop    %esi
   170b7:	5f                   	pop    %edi
   170b8:	5d                   	pop    %ebp
   170b9:	c3                   	ret    
   170ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000170c0 <or_i2rm_bv>:
   170c0:	55                   	push   %ebp
   170c1:	57                   	push   %edi
   170c2:	56                   	push   %esi
   170c3:	53                   	push   %ebx
   170c4:	e8 b7 d3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   170c9:	81 c3 37 7f 03 00    	add    $0x37f37,%ebx
   170cf:	83 ec 24             	sub    $0x24,%esp
   170d2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   170d6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   170dc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   170e2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   170e8:	0f b6 00             	movzbl (%eax),%eax
   170eb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   170f2:	89 42 10             	mov    %eax,0x10(%edx)
   170f5:	8d 45 01             	lea    0x1(%ebp),%eax
   170f8:	52                   	push   %edx
   170f9:	89 54 24 18          	mov    %edx,0x18(%esp)
   170fd:	50                   	push   %eax
   170fe:	e8 7d ae ff ff       	call   11f80 <modrm_rm>
   17103:	8b 77 10             	mov    0x10(%edi),%esi
   17106:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1710a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1710e:	83 c0 01             	add    $0x1,%eax
   17111:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   17117:	83 c4 10             	add    $0x10,%esp
   1711a:	01 c5                	add    %eax,%ebp
   1711c:	c1 ee 03             	shr    $0x3,%esi
   1711f:	89 6f 04             	mov    %ebp,0x4(%edi)
   17122:	01 c6                	add    %eax,%esi
   17124:	8b 6a 10             	mov    0x10(%edx),%ebp
   17127:	89 f0                	mov    %esi,%eax
   17129:	0f b6 c8             	movzbl %al,%ecx
   1712c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   17132:	83 fd 08             	cmp    $0x8,%ebp
   17135:	74 12                	je     17149 <or_i2rm_bv+0x89>
   17137:	83 fd 10             	cmp    $0x10,%ebp
   1713a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   17140:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   17146:	0f 45 c5             	cmovne %ebp,%eax
   17149:	83 ec 0c             	sub    $0xc,%esp
   1714c:	52                   	push   %edx
   1714d:	57                   	push   %edi
   1714e:	51                   	push   %ecx
   1714f:	50                   	push   %eax
   17150:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   17156:	50                   	push   %eax
   17157:	e8 44 b0 ff ff       	call   121a0 <print_asm_2>
   1715c:	83 c4 20             	add    $0x20,%esp
   1715f:	e8 dc f9 ff ff       	call   16b40 <instr_execute_2op>
   17164:	83 c4 1c             	add    $0x1c,%esp
   17167:	89 f0                	mov    %esi,%eax
   17169:	5b                   	pop    %ebx
   1716a:	5e                   	pop    %esi
   1716b:	5f                   	pop    %edi
   1716c:	5d                   	pop    %ebp
   1716d:	c3                   	ret    
   1716e:	66 90                	xchg   %ax,%ax

00017170 <div_rm2a_b>:
   17170:	55                   	push   %ebp
   17171:	57                   	push   %edi
   17172:	56                   	push   %esi
   17173:	53                   	push   %ebx
   17174:	e8 07 d3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17179:	81 c3 87 7e 03 00    	add    $0x37e87,%ebx
   1717f:	81 ec b8 00 00 00    	sub    $0xb8,%esp
   17185:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   17189:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   17190:	00 
   17191:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   17198:	00 
   17199:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   171a0:	00 
   171a1:	57                   	push   %edi
   171a2:	e8 39 b2 ff ff       	call   123e0 <operand_read>
   171a7:	c7 44 24 54 08 00 00 	movl   $0x8,0x54(%esp)
   171ae:	00 
   171af:	58                   	pop    %eax
   171b0:	5a                   	pop    %edx
   171b1:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   171b5:	56                   	push   %esi
   171b6:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   171bd:	83 c0 01             	add    $0x1,%eax
   171c0:	50                   	push   %eax
   171c1:	e8 ba ad ff ff       	call   11f80 <modrm_rm>
   171c6:	89 34 24             	mov    %esi,(%esp)
   171c9:	8d 68 01             	lea    0x1(%eax),%ebp
   171cc:	e8 0f b2 ff ff       	call   123e0 <operand_read>
   171d1:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   171d5:	31 d2                	xor    %edx,%edx
   171d7:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
   171de:	52                   	push   %edx
   171df:	31 d2                	xor    %edx,%edx
   171e1:	50                   	push   %eax
   171e2:	8b 44 24 58          	mov    0x58(%esp),%eax
   171e6:	52                   	push   %edx
   171e7:	50                   	push   %eax
   171e8:	e8 e3 85 ff ff       	call   f7d0 <alu_div>
   171ed:	31 d2                	xor    %edx,%edx
   171ef:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   171f3:	83 c4 20             	add    $0x20,%esp
   171f6:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   171fa:	52                   	push   %edx
   171fb:	31 d2                	xor    %edx,%edx
   171fd:	50                   	push   %eax
   171fe:	8b 44 24 48          	mov    0x48(%esp),%eax
   17202:	52                   	push   %edx
   17203:	50                   	push   %eax
   17204:	e8 a7 86 ff ff       	call   f8b0 <alu_mod>
   17209:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1720d:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   17214:	01 00 00 00 
   17218:	89 44 24 74          	mov    %eax,0x74(%esp)
   1721c:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   17223:	00 
   17224:	c7 84 24 9c 00 00 00 	movl   $0x8,0x9c(%esp)
   1722b:	08 00 00 00 
   1722f:	c7 44 24 78 08 00 00 	movl   $0x8,0x78(%esp)
   17236:	00 
   17237:	c7 44 24 6c 04 00 00 	movl   $0x4,0x6c(%esp)
   1723e:	00 
   1723f:	c7 84 24 90 00 00 00 	movl   $0x0,0x90(%esp)
   17246:	00 00 00 00 
   1724a:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%esp)
   17251:	59                   	pop    %ecx
   17252:	8d 44 24 64          	lea    0x64(%esp),%eax
   17256:	50                   	push   %eax
   17257:	e8 34 b3 ff ff       	call   12590 <operand_write>
   1725c:	58                   	pop    %eax
   1725d:	8d 84 24 88 00 00 00 	lea    0x88(%esp),%eax
   17264:	50                   	push   %eax
   17265:	e8 26 b3 ff ff       	call   12590 <operand_write>
   1726a:	89 e8                	mov    %ebp,%eax
   1726c:	89 3c 24             	mov    %edi,(%esp)
   1726f:	0f b6 c0             	movzbl %al,%eax
   17272:	56                   	push   %esi
   17273:	50                   	push   %eax
   17274:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1727a:	50                   	push   %eax
   1727b:	8d 83 cd 70 fe ff    	lea    -0x18f33(%ebx),%eax
   17281:	50                   	push   %eax
   17282:	e8 19 af ff ff       	call   121a0 <print_asm_2>
   17287:	81 c4 cc 00 00 00    	add    $0xcc,%esp
   1728d:	89 e8                	mov    %ebp,%eax
   1728f:	5b                   	pop    %ebx
   17290:	5e                   	pop    %esi
   17291:	5f                   	pop    %edi
   17292:	5d                   	pop    %ebp
   17293:	c3                   	ret    
   17294:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1729b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1729f:	90                   	nop

000172a0 <div_rm2a_v>:
   172a0:	55                   	push   %ebp
   172a1:	57                   	push   %edi
   172a2:	56                   	push   %esi
   172a3:	53                   	push   %ebx
   172a4:	e8 d7 d1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   172a9:	81 c3 57 7d 03 00    	add    $0x37d57,%ebx
   172af:	81 ec a8 00 00 00    	sub    $0xa8,%esp
   172b5:	8d 7c 24 30          	lea    0x30(%esp),%edi
   172b9:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   172c0:	00 
   172c1:	c7 44 24 54 01 00 00 	movl   $0x1,0x54(%esp)
   172c8:	00 
   172c9:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   172d0:	00 
   172d1:	8d 93 84 07 00 00    	lea    0x784(%ebx),%edx
   172d7:	c7 44 24 58 02 00 00 	movl   $0x2,0x58(%esp)
   172de:	00 
   172df:	0f b6 02             	movzbl (%edx),%eax
   172e2:	89 54 24 14          	mov    %edx,0x14(%esp)
   172e6:	89 44 24 40          	mov    %eax,0x40(%esp)
   172ea:	89 44 24 64          	mov    %eax,0x64(%esp)
   172ee:	57                   	push   %edi
   172ef:	e8 ec b0 ff ff       	call   123e0 <operand_read>
   172f4:	58                   	pop    %eax
   172f5:	8d 74 24 54          	lea    0x54(%esp),%esi
   172f9:	56                   	push   %esi
   172fa:	e8 e1 b0 ff ff       	call   123e0 <operand_read>
   172ff:	8b 54 24 18          	mov    0x18(%esp),%edx
   17303:	0f b6 02             	movzbl (%edx),%eax
   17306:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%esp)
   1730d:	58                   	pop    %eax
   1730e:	5a                   	pop    %edx
   1730f:	8d 6c 24 74          	lea    0x74(%esp),%ebp
   17313:	55                   	push   %ebp
   17314:	8b 84 24 bc 00 00 00 	mov    0xbc(%esp),%eax
   1731b:	83 c0 01             	add    $0x1,%eax
   1731e:	50                   	push   %eax
   1731f:	e8 5c ac ff ff       	call   11f80 <modrm_rm>
   17324:	89 2c 24             	mov    %ebp,(%esp)
   17327:	83 c0 01             	add    $0x1,%eax
   1732a:	89 44 24 24          	mov    %eax,0x24(%esp)
   1732e:	e8 ad b0 ff ff       	call   123e0 <operand_read>
   17333:	8b 54 24 18          	mov    0x18(%esp),%edx
   17337:	0f b6 4c 24 24       	movzbl 0x24(%esp),%ecx
   1733c:	0f b6 02             	movzbl (%edx),%eax
   1733f:	89 4c 24 28          	mov    %ecx,0x28(%esp)
   17343:	83 c4 10             	add    $0x10,%esp
   17346:	3c 10                	cmp    $0x10,%al
   17348:	0f 84 a2 00 00 00    	je     173f0 <div_rm2a_v+0x150>
   1734e:	8b 4c 24 30          	mov    0x30(%esp),%ecx
   17352:	83 ec 0c             	sub    $0xc,%esp
   17355:	31 d2                	xor    %edx,%edx
   17357:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   1735b:	8b 4c 24 60          	mov    0x60(%esp),%ecx
   1735f:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   17363:	50                   	push   %eax
   17364:	ff 74 24 1c          	pushl  0x1c(%esp)
   17368:	ff 74 24 1c          	pushl  0x1c(%esp)
   1736c:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   17373:	52                   	push   %edx
   17374:	50                   	push   %eax
   17375:	e8 56 84 ff ff       	call   f7d0 <alu_div>
   1737a:	31 d2                	xor    %edx,%edx
   1737c:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   17380:	83 c4 20             	add    $0x20,%esp
   17383:	ff 74 24 0c          	pushl  0xc(%esp)
   17387:	ff 74 24 0c          	pushl  0xc(%esp)
   1738b:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   17392:	52                   	push   %edx
   17393:	50                   	push   %eax
   17394:	e8 17 85 ff ff       	call   f8b0 <alu_mod>
   17399:	89 44 24 18          	mov    %eax,0x18(%esp)
   1739d:	58                   	pop    %eax
   1739e:	5a                   	pop    %edx
   1739f:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   173a5:	57                   	push   %edi
   173a6:	56                   	push   %esi
   173a7:	55                   	push   %ebp
   173a8:	ff 74 24 2c          	pushl  0x2c(%esp)
   173ac:	52                   	push   %edx
   173ad:	8d 93 cd 70 fe ff    	lea    -0x18f33(%ebx),%edx
   173b3:	52                   	push   %edx
   173b4:	e8 f7 ae ff ff       	call   122b0 <print_asm_3>
   173b9:	83 c4 20             	add    $0x20,%esp
   173bc:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   173c0:	8b 44 24 08          	mov    0x8(%esp),%eax
   173c4:	89 4c 24 30          	mov    %ecx,0x30(%esp)
   173c8:	83 ec 0c             	sub    $0xc,%esp
   173cb:	89 44 24 60          	mov    %eax,0x60(%esp)
   173cf:	57                   	push   %edi
   173d0:	e8 bb b1 ff ff       	call   12590 <operand_write>
   173d5:	89 34 24             	mov    %esi,(%esp)
   173d8:	e8 b3 b1 ff ff       	call   12590 <operand_write>
   173dd:	8b 44 24 24          	mov    0x24(%esp),%eax
   173e1:	81 c4 ac 00 00 00    	add    $0xac,%esp
   173e7:	5b                   	pop    %ebx
   173e8:	5e                   	pop    %esi
   173e9:	5f                   	pop    %edi
   173ea:	5d                   	pop    %ebp
   173eb:	c3                   	ret    
   173ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   173f0:	83 ec 0c             	sub    $0xc,%esp
   173f3:	31 d2                	xor    %edx,%edx
   173f5:	6a 10                	push   $0x10
   173f7:	8b 44 24 64          	mov    0x64(%esp),%eax
   173fb:	c1 e0 10             	shl    $0x10,%eax
   173fe:	0b 44 24 40          	or     0x40(%esp),%eax
   17402:	52                   	push   %edx
   17403:	31 d2                	xor    %edx,%edx
   17405:	50                   	push   %eax
   17406:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   1740d:	52                   	push   %edx
   1740e:	50                   	push   %eax
   1740f:	e8 bc 83 ff ff       	call   f7d0 <alu_div>
   17414:	31 d2                	xor    %edx,%edx
   17416:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   1741a:	83 c4 20             	add    $0x20,%esp
   1741d:	8b 44 24 54          	mov    0x54(%esp),%eax
   17421:	c1 e0 10             	shl    $0x10,%eax
   17424:	0b 44 24 30          	or     0x30(%esp),%eax
   17428:	52                   	push   %edx
   17429:	31 d2                	xor    %edx,%edx
   1742b:	50                   	push   %eax
   1742c:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   17433:	52                   	push   %edx
   17434:	50                   	push   %eax
   17435:	e8 76 84 ff ff       	call   f8b0 <alu_mod>
   1743a:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   17440:	89 44 24 18          	mov    %eax,0x18(%esp)
   17444:	59                   	pop    %ecx
   17445:	58                   	pop    %eax
   17446:	57                   	push   %edi
   17447:	56                   	push   %esi
   17448:	55                   	push   %ebp
   17449:	ff 74 24 2c          	pushl  0x2c(%esp)
   1744d:	52                   	push   %edx
   1744e:	8d 93 cd 70 fe ff    	lea    -0x18f33(%ebx),%edx
   17454:	52                   	push   %edx
   17455:	e8 56 ae ff ff       	call   122b0 <print_asm_3>
   1745a:	83 c4 20             	add    $0x20,%esp
   1745d:	8b 44 24 08          	mov    0x8(%esp),%eax
   17461:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   17465:	e9 5a ff ff ff       	jmp    173c4 <div_rm2a_v+0x124>
   1746a:	66 90                	xchg   %ax,%ax
   1746c:	66 90                	xchg   %ax,%ax
   1746e:	66 90                	xchg   %ax,%ax

00017470 <out_b>:
   17470:	53                   	push   %ebx
   17471:	e8 0a d0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17476:	81 c3 8a 7b 03 00    	add    $0x37b8a,%ebx
   1747c:	83 ec 0c             	sub    $0xc,%esp
   1747f:	6a 01                	push   $0x1
   17481:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   17487:	50                   	push   %eax
   17488:	8d 83 59 67 fe ff    	lea    -0x198a7(%ebx),%eax
   1748e:	50                   	push   %eax
   1748f:	e8 2c ab ff ff       	call   11fc0 <print_asm_0>
   17494:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1749a:	83 c4 0c             	add    $0xc,%esp
   1749d:	ff 30                	pushl  (%eax)
   1749f:	6a 01                	push   $0x1
   174a1:	0f b7 40 08          	movzwl 0x8(%eax),%eax
   174a5:	50                   	push   %eax
   174a6:	e8 65 f7 fe ff       	call   6c10 <pio_write>
   174ab:	83 c4 18             	add    $0x18,%esp
   174ae:	b8 01 00 00 00       	mov    $0x1,%eax
   174b3:	5b                   	pop    %ebx
   174b4:	c3                   	ret    
   174b5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   174bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000174c0 <out_v>:
   174c0:	56                   	push   %esi
   174c1:	53                   	push   %ebx
   174c2:	e8 b9 cf fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   174c7:	81 c3 39 7b 03 00    	add    $0x37b39,%ebx
   174cd:	83 ec 08             	sub    $0x8,%esp
   174d0:	6a 01                	push   $0x1
   174d2:	8d b3 84 07 00 00    	lea    0x784(%ebx),%esi
   174d8:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   174de:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   174e4:	80 3e 10             	cmpb   $0x10,(%esi)
   174e7:	0f 45 c2             	cmovne %edx,%eax
   174ea:	50                   	push   %eax
   174eb:	8d 83 59 67 fe ff    	lea    -0x198a7(%ebx),%eax
   174f1:	50                   	push   %eax
   174f2:	e8 c9 aa ff ff       	call   11fc0 <print_asm_0>
   174f7:	0f b6 06             	movzbl (%esi),%eax
   174fa:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   17500:	83 c4 0c             	add    $0xc,%esp
   17503:	c0 e8 03             	shr    $0x3,%al
   17506:	ff 32                	pushl  (%edx)
   17508:	0f b6 c0             	movzbl %al,%eax
   1750b:	50                   	push   %eax
   1750c:	0f b7 42 08          	movzwl 0x8(%edx),%eax
   17510:	50                   	push   %eax
   17511:	e8 fa f6 fe ff       	call   6c10 <pio_write>
   17516:	83 c4 14             	add    $0x14,%esp
   17519:	b8 01 00 00 00       	mov    $0x1,%eax
   1751e:	5b                   	pop    %ebx
   1751f:	5e                   	pop    %esi
   17520:	c3                   	ret    
   17521:	66 90                	xchg   %ax,%ax
   17523:	66 90                	xchg   %ax,%ax
   17525:	66 90                	xchg   %ax,%ax
   17527:	66 90                	xchg   %ax,%ax
   17529:	66 90                	xchg   %ax,%ax
   1752b:	66 90                	xchg   %ax,%ax
   1752d:	66 90                	xchg   %ax,%ax
   1752f:	90                   	nop

00017530 <sign_ext.part.0>:
   17530:	53                   	push   %ebx
   17531:	e8 4a cf fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17536:	81 c3 ca 7a 03 00    	add    $0x37aca,%ebx
   1753c:	83 ec 08             	sub    $0x8,%esp
   1753f:	8d 83 60 67 fe ff    	lea    -0x198a0(%ebx),%eax
   17545:	50                   	push   %eax
   17546:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1754c:	6a 2e                	push   $0x2e
   1754e:	50                   	push   %eax
   1754f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   17555:	50                   	push   %eax
   17556:	e8 b5 cd fe ff       	call   4310 <__assert_fail@plt>
   1755b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1755f:	90                   	nop

00017560 <instr_execute_2op>:
   17560:	57                   	push   %edi
   17561:	56                   	push   %esi
   17562:	53                   	push   %ebx
   17563:	e8 18 cf fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17568:	81 c3 98 7a 03 00    	add    $0x37a98,%ebx
   1756e:	83 ec 0c             	sub    $0xc,%esp
   17571:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   17577:	57                   	push   %edi
   17578:	e8 63 ae ff ff       	call   123e0 <operand_read>
   1757d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   17583:	89 34 24             	mov    %esi,(%esp)
   17586:	e8 55 ae ff ff       	call   123e0 <operand_read>
   1758b:	8b 57 10             	mov    0x10(%edi),%edx
   1758e:	83 c4 10             	add    $0x10,%esp
   17591:	8b 47 0c             	mov    0xc(%edi),%eax
   17594:	8d 4a f8             	lea    -0x8(%edx),%ecx
   17597:	83 e1 f7             	and    $0xfffffff7,%ecx
   1759a:	74 05                	je     175a1 <instr_execute_2op+0x41>
   1759c:	83 fa 20             	cmp    $0x20,%edx
   1759f:	75 6c                	jne    1760d <instr_execute_2op+0xad>
   175a1:	83 fa 08             	cmp    $0x8,%edx
   175a4:	74 5a                	je     17600 <instr_execute_2op+0xa0>
   175a6:	0f bf c8             	movswl %ax,%ecx
   175a9:	83 fa 10             	cmp    $0x10,%edx
   175ac:	0f 44 c1             	cmove  %ecx,%eax
   175af:	8b 4e 10             	mov    0x10(%esi),%ecx
   175b2:	8b 56 0c             	mov    0xc(%esi),%edx
   175b5:	89 47 0c             	mov    %eax,0xc(%edi)
   175b8:	8d 79 f8             	lea    -0x8(%ecx),%edi
   175bb:	83 e7 f7             	and    $0xfffffff7,%edi
   175be:	74 05                	je     175c5 <instr_execute_2op+0x65>
   175c0:	83 f9 20             	cmp    $0x20,%ecx
   175c3:	75 48                	jne    1760d <instr_execute_2op+0xad>
   175c5:	83 f9 08             	cmp    $0x8,%ecx
   175c8:	74 3e                	je     17608 <instr_execute_2op+0xa8>
   175ca:	0f bf fa             	movswl %dx,%edi
   175cd:	83 f9 10             	cmp    $0x10,%ecx
   175d0:	0f 44 d7             	cmove  %edi,%edx
   175d3:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   175d9:	83 ec 04             	sub    $0x4,%esp
   175dc:	89 56 0c             	mov    %edx,0xc(%esi)
   175df:	0f b6 09             	movzbl (%ecx),%ecx
   175e2:	51                   	push   %ecx
   175e3:	52                   	push   %edx
   175e4:	50                   	push   %eax
   175e5:	e8 86 83 ff ff       	call   f970 <alu_and>
   175ea:	89 34 24             	mov    %esi,(%esp)
   175ed:	89 46 0c             	mov    %eax,0xc(%esi)
   175f0:	e8 9b af ff ff       	call   12590 <operand_write>
   175f5:	83 c4 10             	add    $0x10,%esp
   175f8:	5b                   	pop    %ebx
   175f9:	5e                   	pop    %esi
   175fa:	5f                   	pop    %edi
   175fb:	c3                   	ret    
   175fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17600:	0f be c0             	movsbl %al,%eax
   17603:	eb aa                	jmp    175af <instr_execute_2op+0x4f>
   17605:	8d 76 00             	lea    0x0(%esi),%esi
   17608:	0f be d2             	movsbl %dl,%edx
   1760b:	eb c6                	jmp    175d3 <instr_execute_2op+0x73>
   1760d:	e8 1e ff ff ff       	call   17530 <sign_ext.part.0>
   17612:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17619:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017620 <and_r2rm_b>:
   17620:	55                   	push   %ebp
   17621:	57                   	push   %edi
   17622:	56                   	push   %esi
   17623:	53                   	push   %ebx
   17624:	e8 57 ce fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17629:	81 c3 d7 79 03 00    	add    $0x379d7,%ebx
   1762f:	83 ec 10             	sub    $0x10,%esp
   17632:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   17638:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1763e:	56                   	push   %esi
   1763f:	57                   	push   %edi
   17640:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   17644:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1764b:	83 c0 01             	add    $0x1,%eax
   1764e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   17655:	50                   	push   %eax
   17656:	e8 45 a8 ff ff       	call   11ea0 <modrm_r_rm>
   1765b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1765e:	83 c4 10             	add    $0x10,%esp
   17661:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   17667:	8d 68 01             	lea    0x1(%eax),%ebp
   1766a:	89 e8                	mov    %ebp,%eax
   1766c:	0f b6 c0             	movzbl %al,%eax
   1766f:	83 f9 08             	cmp    $0x8,%ecx
   17672:	74 12                	je     17686 <and_r2rm_b+0x66>
   17674:	83 f9 10             	cmp    $0x10,%ecx
   17677:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1767d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   17683:	0f 45 d1             	cmovne %ecx,%edx
   17686:	83 ec 0c             	sub    $0xc,%esp
   17689:	56                   	push   %esi
   1768a:	57                   	push   %edi
   1768b:	50                   	push   %eax
   1768c:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   17692:	52                   	push   %edx
   17693:	50                   	push   %eax
   17694:	e8 07 ab ff ff       	call   121a0 <print_asm_2>
   17699:	83 c4 20             	add    $0x20,%esp
   1769c:	e8 bf fe ff ff       	call   17560 <instr_execute_2op>
   176a1:	83 c4 0c             	add    $0xc,%esp
   176a4:	89 e8                	mov    %ebp,%eax
   176a6:	5b                   	pop    %ebx
   176a7:	5e                   	pop    %esi
   176a8:	5f                   	pop    %edi
   176a9:	5d                   	pop    %ebp
   176aa:	c3                   	ret    
   176ab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   176af:	90                   	nop

000176b0 <and_r2rm_v>:
   176b0:	55                   	push   %ebp
   176b1:	57                   	push   %edi
   176b2:	56                   	push   %esi
   176b3:	53                   	push   %ebx
   176b4:	e8 c7 cd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   176b9:	81 c3 47 79 03 00    	add    $0x37947,%ebx
   176bf:	83 ec 10             	sub    $0x10,%esp
   176c2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   176c8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   176ce:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   176d4:	0f b6 00             	movzbl (%eax),%eax
   176d7:	56                   	push   %esi
   176d8:	57                   	push   %edi
   176d9:	89 46 10             	mov    %eax,0x10(%esi)
   176dc:	89 47 10             	mov    %eax,0x10(%edi)
   176df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   176e3:	83 c0 01             	add    $0x1,%eax
   176e6:	50                   	push   %eax
   176e7:	e8 b4 a7 ff ff       	call   11ea0 <modrm_r_rm>
   176ec:	8b 4e 10             	mov    0x10(%esi),%ecx
   176ef:	83 c4 10             	add    $0x10,%esp
   176f2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   176f8:	8d 68 01             	lea    0x1(%eax),%ebp
   176fb:	89 e8                	mov    %ebp,%eax
   176fd:	0f b6 c0             	movzbl %al,%eax
   17700:	83 f9 08             	cmp    $0x8,%ecx
   17703:	74 12                	je     17717 <and_r2rm_v+0x67>
   17705:	83 f9 10             	cmp    $0x10,%ecx
   17708:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1770e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   17714:	0f 45 d1             	cmovne %ecx,%edx
   17717:	83 ec 0c             	sub    $0xc,%esp
   1771a:	56                   	push   %esi
   1771b:	57                   	push   %edi
   1771c:	50                   	push   %eax
   1771d:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   17723:	52                   	push   %edx
   17724:	50                   	push   %eax
   17725:	e8 76 aa ff ff       	call   121a0 <print_asm_2>
   1772a:	83 c4 20             	add    $0x20,%esp
   1772d:	e8 2e fe ff ff       	call   17560 <instr_execute_2op>
   17732:	83 c4 0c             	add    $0xc,%esp
   17735:	89 e8                	mov    %ebp,%eax
   17737:	5b                   	pop    %ebx
   17738:	5e                   	pop    %esi
   17739:	5f                   	pop    %edi
   1773a:	5d                   	pop    %ebp
   1773b:	c3                   	ret    
   1773c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00017740 <and_rm2r_b>:
   17740:	55                   	push   %ebp
   17741:	57                   	push   %edi
   17742:	56                   	push   %esi
   17743:	53                   	push   %ebx
   17744:	e8 37 cd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17749:	81 c3 b7 78 03 00    	add    $0x378b7,%ebx
   1774f:	83 ec 10             	sub    $0x10,%esp
   17752:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   17758:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1775e:	57                   	push   %edi
   1775f:	56                   	push   %esi
   17760:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   17764:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1776b:	83 c0 01             	add    $0x1,%eax
   1776e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   17775:	50                   	push   %eax
   17776:	e8 25 a7 ff ff       	call   11ea0 <modrm_r_rm>
   1777b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1777e:	83 c4 10             	add    $0x10,%esp
   17781:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   17787:	8d 68 01             	lea    0x1(%eax),%ebp
   1778a:	89 e8                	mov    %ebp,%eax
   1778c:	0f b6 c0             	movzbl %al,%eax
   1778f:	83 f9 08             	cmp    $0x8,%ecx
   17792:	74 12                	je     177a6 <and_rm2r_b+0x66>
   17794:	83 f9 10             	cmp    $0x10,%ecx
   17797:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1779d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   177a3:	0f 45 d1             	cmovne %ecx,%edx
   177a6:	83 ec 0c             	sub    $0xc,%esp
   177a9:	56                   	push   %esi
   177aa:	57                   	push   %edi
   177ab:	50                   	push   %eax
   177ac:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   177b2:	52                   	push   %edx
   177b3:	50                   	push   %eax
   177b4:	e8 e7 a9 ff ff       	call   121a0 <print_asm_2>
   177b9:	83 c4 20             	add    $0x20,%esp
   177bc:	e8 9f fd ff ff       	call   17560 <instr_execute_2op>
   177c1:	83 c4 0c             	add    $0xc,%esp
   177c4:	89 e8                	mov    %ebp,%eax
   177c6:	5b                   	pop    %ebx
   177c7:	5e                   	pop    %esi
   177c8:	5f                   	pop    %edi
   177c9:	5d                   	pop    %ebp
   177ca:	c3                   	ret    
   177cb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   177cf:	90                   	nop

000177d0 <and_rm2r_v>:
   177d0:	55                   	push   %ebp
   177d1:	57                   	push   %edi
   177d2:	56                   	push   %esi
   177d3:	53                   	push   %ebx
   177d4:	e8 a7 cc fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   177d9:	81 c3 27 78 03 00    	add    $0x37827,%ebx
   177df:	83 ec 10             	sub    $0x10,%esp
   177e2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   177e8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   177ee:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   177f4:	0f b6 00             	movzbl (%eax),%eax
   177f7:	57                   	push   %edi
   177f8:	89 46 10             	mov    %eax,0x10(%esi)
   177fb:	56                   	push   %esi
   177fc:	89 47 10             	mov    %eax,0x10(%edi)
   177ff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   17803:	83 c0 01             	add    $0x1,%eax
   17806:	50                   	push   %eax
   17807:	e8 94 a6 ff ff       	call   11ea0 <modrm_r_rm>
   1780c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1780f:	83 c4 10             	add    $0x10,%esp
   17812:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   17818:	8d 68 01             	lea    0x1(%eax),%ebp
   1781b:	89 e8                	mov    %ebp,%eax
   1781d:	0f b6 c0             	movzbl %al,%eax
   17820:	83 f9 08             	cmp    $0x8,%ecx
   17823:	74 12                	je     17837 <and_rm2r_v+0x67>
   17825:	83 f9 10             	cmp    $0x10,%ecx
   17828:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1782e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   17834:	0f 45 d1             	cmovne %ecx,%edx
   17837:	83 ec 0c             	sub    $0xc,%esp
   1783a:	56                   	push   %esi
   1783b:	57                   	push   %edi
   1783c:	50                   	push   %eax
   1783d:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   17843:	52                   	push   %edx
   17844:	50                   	push   %eax
   17845:	e8 56 a9 ff ff       	call   121a0 <print_asm_2>
   1784a:	83 c4 20             	add    $0x20,%esp
   1784d:	e8 0e fd ff ff       	call   17560 <instr_execute_2op>
   17852:	83 c4 0c             	add    $0xc,%esp
   17855:	89 e8                	mov    %ebp,%eax
   17857:	5b                   	pop    %ebx
   17858:	5e                   	pop    %esi
   17859:	5f                   	pop    %edi
   1785a:	5d                   	pop    %ebp
   1785b:	c3                   	ret    
   1785c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00017860 <and_i2a_b>:
   17860:	53                   	push   %ebx
   17861:	e8 1a cc fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17866:	81 c3 9a 77 03 00    	add    $0x3779a,%ebx
   1786c:	83 ec 14             	sub    $0x14,%esp
   1786f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   17873:	83 c1 01             	add    $0x1,%ecx
   17876:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1787c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   17882:	89 48 04             	mov    %ecx,0x4(%eax)
   17885:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1788c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   17893:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   17899:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1789d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   178a3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   178aa:	52                   	push   %edx
   178ab:	50                   	push   %eax
   178ac:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   178b2:	6a 02                	push   $0x2
   178b4:	50                   	push   %eax
   178b5:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   178bb:	50                   	push   %eax
   178bc:	e8 df a8 ff ff       	call   121a0 <print_asm_2>
   178c1:	83 c4 20             	add    $0x20,%esp
   178c4:	e8 97 fc ff ff       	call   17560 <instr_execute_2op>
   178c9:	83 c4 08             	add    $0x8,%esp
   178cc:	b8 02 00 00 00       	mov    $0x2,%eax
   178d1:	5b                   	pop    %ebx
   178d2:	c3                   	ret    
   178d3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   178da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000178e0 <and_i2a_v>:
   178e0:	55                   	push   %ebp
   178e1:	57                   	push   %edi
   178e2:	56                   	push   %esi
   178e3:	53                   	push   %ebx
   178e4:	e8 97 cb fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   178e9:	81 c3 17 77 03 00    	add    $0x37717,%ebx
   178ef:	83 ec 0c             	sub    $0xc,%esp
   178f2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   178f8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   178fe:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   17904:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1790a:	0f b6 08             	movzbl (%eax),%ecx
   1790d:	8b 44 24 20          	mov    0x20(%esp),%eax
   17911:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   17917:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1791b:	89 cf                	mov    %ecx,%edi
   1791d:	83 c0 01             	add    $0x1,%eax
   17920:	89 4d 10             	mov    %ecx,0x10(%ebp)
   17923:	c1 ef 03             	shr    $0x3,%edi
   17926:	89 4a 10             	mov    %ecx,0x10(%edx)
   17929:	89 42 04             	mov    %eax,0x4(%edx)
   1792c:	83 c7 01             	add    $0x1,%edi
   1792f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   17936:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1793d:	83 f9 08             	cmp    $0x8,%ecx
   17940:	74 12                	je     17954 <and_i2a_v+0x74>
   17942:	83 f9 10             	cmp    $0x10,%ecx
   17945:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1794b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   17951:	0f 45 f0             	cmovne %eax,%esi
   17954:	83 ec 0c             	sub    $0xc,%esp
   17957:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1795d:	55                   	push   %ebp
   1795e:	52                   	push   %edx
   1795f:	57                   	push   %edi
   17960:	56                   	push   %esi
   17961:	50                   	push   %eax
   17962:	e8 39 a8 ff ff       	call   121a0 <print_asm_2>
   17967:	83 c4 20             	add    $0x20,%esp
   1796a:	e8 f1 fb ff ff       	call   17560 <instr_execute_2op>
   1796f:	83 c4 0c             	add    $0xc,%esp
   17972:	89 f8                	mov    %edi,%eax
   17974:	5b                   	pop    %ebx
   17975:	5e                   	pop    %esi
   17976:	5f                   	pop    %edi
   17977:	5d                   	pop    %ebp
   17978:	c3                   	ret    
   17979:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017980 <and_i2rm_b>:
   17980:	55                   	push   %ebp
   17981:	57                   	push   %edi
   17982:	56                   	push   %esi
   17983:	53                   	push   %ebx
   17984:	e8 f7 ca fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17989:	81 c3 77 76 03 00    	add    $0x37677,%ebx
   1798f:	83 ec 24             	sub    $0x24,%esp
   17992:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   17996:	8d 45 01             	lea    0x1(%ebp),%eax
   17999:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1799f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   179a5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   179ac:	52                   	push   %edx
   179ad:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   179b4:	89 54 24 18          	mov    %edx,0x18(%esp)
   179b8:	50                   	push   %eax
   179b9:	e8 c2 a5 ff ff       	call   11f80 <modrm_rm>
   179be:	8b 77 10             	mov    0x10(%edi),%esi
   179c1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   179c5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   179c9:	83 c0 01             	add    $0x1,%eax
   179cc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   179d2:	83 c4 10             	add    $0x10,%esp
   179d5:	01 c5                	add    %eax,%ebp
   179d7:	c1 ee 03             	shr    $0x3,%esi
   179da:	89 6f 04             	mov    %ebp,0x4(%edi)
   179dd:	01 c6                	add    %eax,%esi
   179df:	8b 6a 10             	mov    0x10(%edx),%ebp
   179e2:	89 f0                	mov    %esi,%eax
   179e4:	0f b6 c8             	movzbl %al,%ecx
   179e7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   179ed:	83 fd 08             	cmp    $0x8,%ebp
   179f0:	74 12                	je     17a04 <and_i2rm_b+0x84>
   179f2:	83 fd 10             	cmp    $0x10,%ebp
   179f5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   179fb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   17a01:	0f 45 c5             	cmovne %ebp,%eax
   17a04:	83 ec 0c             	sub    $0xc,%esp
   17a07:	52                   	push   %edx
   17a08:	57                   	push   %edi
   17a09:	51                   	push   %ecx
   17a0a:	50                   	push   %eax
   17a0b:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   17a11:	50                   	push   %eax
   17a12:	e8 89 a7 ff ff       	call   121a0 <print_asm_2>
   17a17:	83 c4 20             	add    $0x20,%esp
   17a1a:	e8 41 fb ff ff       	call   17560 <instr_execute_2op>
   17a1f:	83 c4 1c             	add    $0x1c,%esp
   17a22:	89 f0                	mov    %esi,%eax
   17a24:	5b                   	pop    %ebx
   17a25:	5e                   	pop    %esi
   17a26:	5f                   	pop    %edi
   17a27:	5d                   	pop    %ebp
   17a28:	c3                   	ret    
   17a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017a30 <and_i2rm_v>:
   17a30:	55                   	push   %ebp
   17a31:	57                   	push   %edi
   17a32:	56                   	push   %esi
   17a33:	53                   	push   %ebx
   17a34:	e8 47 ca fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17a39:	81 c3 c7 75 03 00    	add    $0x375c7,%ebx
   17a3f:	83 ec 24             	sub    $0x24,%esp
   17a42:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   17a46:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   17a4c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   17a52:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   17a58:	0f b6 00             	movzbl (%eax),%eax
   17a5b:	89 42 10             	mov    %eax,0x10(%edx)
   17a5e:	52                   	push   %edx
   17a5f:	89 47 10             	mov    %eax,0x10(%edi)
   17a62:	8d 45 01             	lea    0x1(%ebp),%eax
   17a65:	89 54 24 18          	mov    %edx,0x18(%esp)
   17a69:	50                   	push   %eax
   17a6a:	e8 11 a5 ff ff       	call   11f80 <modrm_rm>
   17a6f:	8b 77 10             	mov    0x10(%edi),%esi
   17a72:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   17a76:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   17a7a:	83 c0 01             	add    $0x1,%eax
   17a7d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   17a83:	83 c4 10             	add    $0x10,%esp
   17a86:	01 c5                	add    %eax,%ebp
   17a88:	c1 ee 03             	shr    $0x3,%esi
   17a8b:	89 6f 04             	mov    %ebp,0x4(%edi)
   17a8e:	01 c6                	add    %eax,%esi
   17a90:	8b 6a 10             	mov    0x10(%edx),%ebp
   17a93:	89 f0                	mov    %esi,%eax
   17a95:	0f b6 c8             	movzbl %al,%ecx
   17a98:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   17a9e:	83 fd 08             	cmp    $0x8,%ebp
   17aa1:	74 12                	je     17ab5 <and_i2rm_v+0x85>
   17aa3:	83 fd 10             	cmp    $0x10,%ebp
   17aa6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   17aac:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   17ab2:	0f 45 c5             	cmovne %ebp,%eax
   17ab5:	83 ec 0c             	sub    $0xc,%esp
   17ab8:	52                   	push   %edx
   17ab9:	57                   	push   %edi
   17aba:	51                   	push   %ecx
   17abb:	50                   	push   %eax
   17abc:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   17ac2:	50                   	push   %eax
   17ac3:	e8 d8 a6 ff ff       	call   121a0 <print_asm_2>
   17ac8:	83 c4 20             	add    $0x20,%esp
   17acb:	e8 90 fa ff ff       	call   17560 <instr_execute_2op>
   17ad0:	83 c4 1c             	add    $0x1c,%esp
   17ad3:	89 f0                	mov    %esi,%eax
   17ad5:	5b                   	pop    %ebx
   17ad6:	5e                   	pop    %esi
   17ad7:	5f                   	pop    %edi
   17ad8:	5d                   	pop    %ebp
   17ad9:	c3                   	ret    
   17ada:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00017ae0 <and_i2rm_bv>:
   17ae0:	55                   	push   %ebp
   17ae1:	57                   	push   %edi
   17ae2:	56                   	push   %esi
   17ae3:	53                   	push   %ebx
   17ae4:	e8 97 c9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17ae9:	81 c3 17 75 03 00    	add    $0x37517,%ebx
   17aef:	83 ec 24             	sub    $0x24,%esp
   17af2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   17af6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   17afc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   17b02:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   17b08:	0f b6 00             	movzbl (%eax),%eax
   17b0b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   17b12:	89 42 10             	mov    %eax,0x10(%edx)
   17b15:	8d 45 01             	lea    0x1(%ebp),%eax
   17b18:	52                   	push   %edx
   17b19:	89 54 24 18          	mov    %edx,0x18(%esp)
   17b1d:	50                   	push   %eax
   17b1e:	e8 5d a4 ff ff       	call   11f80 <modrm_rm>
   17b23:	8b 77 10             	mov    0x10(%edi),%esi
   17b26:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   17b2a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   17b2e:	83 c0 01             	add    $0x1,%eax
   17b31:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   17b37:	83 c4 10             	add    $0x10,%esp
   17b3a:	01 c5                	add    %eax,%ebp
   17b3c:	c1 ee 03             	shr    $0x3,%esi
   17b3f:	89 6f 04             	mov    %ebp,0x4(%edi)
   17b42:	01 c6                	add    %eax,%esi
   17b44:	8b 6a 10             	mov    0x10(%edx),%ebp
   17b47:	89 f0                	mov    %esi,%eax
   17b49:	0f b6 c8             	movzbl %al,%ecx
   17b4c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   17b52:	83 fd 08             	cmp    $0x8,%ebp
   17b55:	74 12                	je     17b69 <and_i2rm_bv+0x89>
   17b57:	83 fd 10             	cmp    $0x10,%ebp
   17b5a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   17b60:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   17b66:	0f 45 c5             	cmovne %ebp,%eax
   17b69:	83 ec 0c             	sub    $0xc,%esp
   17b6c:	52                   	push   %edx
   17b6d:	57                   	push   %edi
   17b6e:	51                   	push   %ecx
   17b6f:	50                   	push   %eax
   17b70:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   17b76:	50                   	push   %eax
   17b77:	e8 24 a6 ff ff       	call   121a0 <print_asm_2>
   17b7c:	83 c4 20             	add    $0x20,%esp
   17b7f:	e8 dc f9 ff ff       	call   17560 <instr_execute_2op>
   17b84:	83 c4 1c             	add    $0x1c,%esp
   17b87:	89 f0                	mov    %esi,%eax
   17b89:	5b                   	pop    %ebx
   17b8a:	5e                   	pop    %esi
   17b8b:	5f                   	pop    %edi
   17b8c:	5d                   	pop    %ebp
   17b8d:	c3                   	ret    
   17b8e:	66 90                	xchg   %ax,%ax

00017b90 <cld>:
   17b90:	53                   	push   %ebx
   17b91:	e8 ea c8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17b96:	81 c3 6a 74 03 00    	add    $0x3746a,%ebx
   17b9c:	83 ec 0c             	sub    $0xc,%esp
   17b9f:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   17ba5:	80 60 25 fb          	andb   $0xfb,0x25(%eax)
   17ba9:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   17baf:	6a 01                	push   $0x1
   17bb1:	50                   	push   %eax
   17bb2:	8d 83 69 67 fe ff    	lea    -0x19897(%ebx),%eax
   17bb8:	50                   	push   %eax
   17bb9:	e8 02 a4 ff ff       	call   11fc0 <print_asm_0>
   17bbe:	83 c4 18             	add    $0x18,%esp
   17bc1:	b8 01 00 00 00       	mov    $0x1,%eax
   17bc6:	5b                   	pop    %ebx
   17bc7:	c3                   	ret    
   17bc8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17bcf:	90                   	nop

00017bd0 <clc>:
   17bd0:	53                   	push   %ebx
   17bd1:	e8 aa c8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17bd6:	81 c3 2a 74 03 00    	add    $0x3742a,%ebx
   17bdc:	83 ec 0c             	sub    $0xc,%esp
   17bdf:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   17be5:	80 60 24 fe          	andb   $0xfe,0x24(%eax)
   17be9:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   17bef:	6a 01                	push   $0x1
   17bf1:	50                   	push   %eax
   17bf2:	8d 83 6d 67 fe ff    	lea    -0x19893(%ebx),%eax
   17bf8:	50                   	push   %eax
   17bf9:	e8 c2 a3 ff ff       	call   11fc0 <print_asm_0>
   17bfe:	83 c4 18             	add    $0x18,%esp
   17c01:	b8 01 00 00 00       	mov    $0x1,%eax
   17c06:	5b                   	pop    %ebx
   17c07:	c3                   	ret    
   17c08:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17c0f:	90                   	nop

00017c10 <sahf>:
   17c10:	53                   	push   %ebx
   17c11:	e8 6a c8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17c16:	81 c3 ea 73 03 00    	add    $0x373ea,%ebx
   17c1c:	83 ec 0c             	sub    $0xc,%esp
   17c1f:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   17c25:	0f b6 50 01          	movzbl 0x1(%eax),%edx
   17c29:	66 89 50 24          	mov    %dx,0x24(%eax)
   17c2d:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   17c33:	6a 01                	push   $0x1
   17c35:	50                   	push   %eax
   17c36:	8d 83 71 67 fe ff    	lea    -0x1988f(%ebx),%eax
   17c3c:	50                   	push   %eax
   17c3d:	e8 7e a3 ff ff       	call   11fc0 <print_asm_0>
   17c42:	83 c4 18             	add    $0x18,%esp
   17c45:	b8 01 00 00 00       	mov    $0x1,%eax
   17c4a:	5b                   	pop    %ebx
   17c4b:	c3                   	ret    
   17c4c:	66 90                	xchg   %ax,%ax
   17c4e:	66 90                	xchg   %ax,%ax

00017c50 <call_near>:
   17c50:	57                   	push   %edi
   17c51:	56                   	push   %esi
   17c52:	53                   	push   %ebx
   17c53:	e8 28 c8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17c58:	81 c3 a8 73 03 00    	add    $0x373a8,%ebx
   17c5e:	83 ec 5c             	sub    $0x5c,%esp
   17c61:	8d 74 24 14          	lea    0x14(%esp),%esi
   17c65:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   17c6c:	00 
   17c6d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   17c74:	00 
   17c75:	c6 44 24 1c 01       	movb   $0x1,0x1c(%esp)
   17c7a:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   17c80:	0f b6 07             	movzbl (%edi),%eax
   17c83:	89 44 24 48          	mov    %eax,0x48(%esp)
   17c87:	89 44 24 24          	mov    %eax,0x24(%esp)
   17c8b:	8b 44 24 6c          	mov    0x6c(%esp),%eax
   17c8f:	83 c0 01             	add    $0x1,%eax
   17c92:	89 44 24 18          	mov    %eax,0x18(%esp)
   17c96:	56                   	push   %esi
   17c97:	e8 44 a7 ff ff       	call   123e0 <operand_read>
   17c9c:	0f b6 07             	movzbl (%edi),%eax
   17c9f:	56                   	push   %esi
   17ca0:	c0 e8 03             	shr    $0x3,%al
   17ca3:	83 c0 01             	add    $0x1,%eax
   17ca6:	0f b6 c0             	movzbl %al,%eax
   17ca9:	50                   	push   %eax
   17caa:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   17cb0:	50                   	push   %eax
   17cb1:	8d 83 76 67 fe ff    	lea    -0x1988a(%ebx),%eax
   17cb7:	50                   	push   %eax
   17cb8:	e8 e3 a3 ff ff       	call   120a0 <print_asm_1>
   17cbd:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   17cc3:	0f b6 07             	movzbl (%edi),%eax
   17cc6:	c6 44 24 54 03       	movb   $0x3,0x54(%esp)
   17ccb:	8b 56 10             	mov    0x10(%esi),%edx
   17cce:	c0 e8 03             	shr    $0x3,%al
   17cd1:	0f b6 c0             	movzbl %al,%eax
   17cd4:	29 c2                	sub    %eax,%edx
   17cd6:	89 54 24 50          	mov    %edx,0x50(%esp)
   17cda:	89 56 10             	mov    %edx,0x10(%esi)
   17cdd:	8b 56 20             	mov    0x20(%esi),%edx
   17ce0:	8d 44 10 01          	lea    0x1(%eax,%edx,1),%eax
   17ce4:	89 44 24 58          	mov    %eax,0x58(%esp)
   17ce8:	83 c4 14             	add    $0x14,%esp
   17ceb:	8d 44 24 38          	lea    0x38(%esp),%eax
   17cef:	50                   	push   %eax
   17cf0:	e8 9b a8 ff ff       	call   12590 <operand_write>
   17cf5:	0f b6 07             	movzbl (%edi),%eax
   17cf8:	8b 54 24 24          	mov    0x24(%esp),%edx
   17cfc:	83 c4 10             	add    $0x10,%esp
   17cff:	8d 48 f8             	lea    -0x8(%eax),%ecx
   17d02:	81 e1 f7 00 00 00    	and    $0xf7,%ecx
   17d08:	74 04                	je     17d0e <call_near+0xbe>
   17d0a:	3c 20                	cmp    $0x20,%al
   17d0c:	75 27                	jne    17d35 <call_near+0xe5>
   17d0e:	3c 08                	cmp    $0x8,%al
   17d10:	74 1e                	je     17d30 <call_near+0xe0>
   17d12:	0f bf ca             	movswl %dx,%ecx
   17d15:	3c 10                	cmp    $0x10,%al
   17d17:	0f 44 d1             	cmove  %ecx,%edx
   17d1a:	c0 e8 03             	shr    $0x3,%al
   17d1d:	0f b6 c0             	movzbl %al,%eax
   17d20:	8d 44 02 01          	lea    0x1(%edx,%eax,1),%eax
   17d24:	01 46 20             	add    %eax,0x20(%esi)
   17d27:	83 c4 50             	add    $0x50,%esp
   17d2a:	31 c0                	xor    %eax,%eax
   17d2c:	5b                   	pop    %ebx
   17d2d:	5e                   	pop    %esi
   17d2e:	5f                   	pop    %edi
   17d2f:	c3                   	ret    
   17d30:	0f be d2             	movsbl %dl,%edx
   17d33:	eb e5                	jmp    17d1a <call_near+0xca>
   17d35:	8d 83 7c 67 fe ff    	lea    -0x19884(%ebx),%eax
   17d3b:	50                   	push   %eax
   17d3c:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   17d42:	6a 2e                	push   $0x2e
   17d44:	50                   	push   %eax
   17d45:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   17d4b:	50                   	push   %eax
   17d4c:	e8 bf c5 fe ff       	call   4310 <__assert_fail@plt>
   17d51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17d58:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17d5f:	90                   	nop

00017d60 <call_near_indirect>:
   17d60:	55                   	push   %ebp
   17d61:	57                   	push   %edi
   17d62:	56                   	push   %esi
   17d63:	53                   	push   %ebx
   17d64:	e8 17 c7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17d69:	81 c3 97 72 03 00    	add    $0x37297,%ebx
   17d6f:	83 ec 64             	sub    $0x64,%esp
   17d72:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   17d76:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   17d7c:	0f b6 07             	movzbl (%edi),%eax
   17d7f:	89 44 24 44          	mov    %eax,0x44(%esp)
   17d83:	89 44 24 20          	mov    %eax,0x20(%esp)
   17d87:	55                   	push   %ebp
   17d88:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   17d8c:	83 c0 01             	add    $0x1,%eax
   17d8f:	50                   	push   %eax
   17d90:	e8 eb a1 ff ff       	call   11f80 <modrm_rm>
   17d95:	89 2c 24             	mov    %ebp,(%esp)
   17d98:	8d 70 01             	lea    0x1(%eax),%esi
   17d9b:	e8 40 a6 ff ff       	call   123e0 <operand_read>
   17da0:	89 f0                	mov    %esi,%eax
   17da2:	55                   	push   %ebp
   17da3:	0f b6 c0             	movzbl %al,%eax
   17da6:	50                   	push   %eax
   17da7:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   17dad:	50                   	push   %eax
   17dae:	8d 83 76 67 fe ff    	lea    -0x1988a(%ebx),%eax
   17db4:	50                   	push   %eax
   17db5:	e8 e6 a2 ff ff       	call   120a0 <print_asm_1>
   17dba:	8d ab 60 32 05 00    	lea    0x53260(%ebx),%ebp
   17dc0:	0f b6 07             	movzbl (%edi),%eax
   17dc3:	c7 44 24 4c 02 00 00 	movl   $0x2,0x4c(%esp)
   17dca:	00 
   17dcb:	c6 44 24 54 03       	movb   $0x3,0x54(%esp)
   17dd0:	8b 4d 10             	mov    0x10(%ebp),%ecx
   17dd3:	c0 e8 03             	shr    $0x3,%al
   17dd6:	03 75 20             	add    0x20(%ebp),%esi
   17dd9:	0f b6 c0             	movzbl %al,%eax
   17ddc:	89 74 24 58          	mov    %esi,0x58(%esp)
   17de0:	29 c1                	sub    %eax,%ecx
   17de2:	89 4c 24 50          	mov    %ecx,0x50(%esp)
   17de6:	83 c4 14             	add    $0x14,%esp
   17de9:	8d 44 24 38          	lea    0x38(%esp),%eax
   17ded:	89 4d 10             	mov    %ecx,0x10(%ebp)
   17df0:	50                   	push   %eax
   17df1:	e8 9a a7 ff ff       	call   12590 <operand_write>
   17df6:	8b 44 24 24          	mov    0x24(%esp),%eax
   17dfa:	80 3f 10             	cmpb   $0x10,(%edi)
   17dfd:	89 c2                	mov    %eax,%edx
   17dff:	0f b7 c0             	movzwl %ax,%eax
   17e02:	0f 45 c2             	cmovne %edx,%eax
   17e05:	89 45 20             	mov    %eax,0x20(%ebp)
   17e08:	83 c4 6c             	add    $0x6c,%esp
   17e0b:	31 c0                	xor    %eax,%eax
   17e0d:	5b                   	pop    %ebx
   17e0e:	5e                   	pop    %esi
   17e0f:	5f                   	pop    %edi
   17e10:	5d                   	pop    %ebp
   17e11:	c3                   	ret    
   17e12:	66 90                	xchg   %ax,%ax
   17e14:	66 90                	xchg   %ax,%ax
   17e16:	66 90                	xchg   %ax,%ax
   17e18:	66 90                	xchg   %ax,%ax
   17e1a:	66 90                	xchg   %ax,%ax
   17e1c:	66 90                	xchg   %ax,%ax
   17e1e:	66 90                	xchg   %ax,%ax

00017e20 <mul_rm2a_b>:
   17e20:	55                   	push   %ebp
   17e21:	57                   	push   %edi
   17e22:	56                   	push   %esi
   17e23:	53                   	push   %ebx
   17e24:	e8 57 c6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17e29:	81 c3 d7 71 03 00    	add    $0x371d7,%ebx
   17e2f:	81 ec 94 00 00 00    	sub    $0x94,%esp
   17e35:	8d 7c 24 40          	lea    0x40(%esp),%edi
   17e39:	c7 44 24 2c 08 00 00 	movl   $0x8,0x2c(%esp)
   17e40:	00 
   17e41:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   17e48:	00 
   17e49:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   17e50:	00 
   17e51:	c7 44 24 50 08 00 00 	movl   $0x8,0x50(%esp)
   17e58:	00 
   17e59:	57                   	push   %edi
   17e5a:	8b 84 24 ac 00 00 00 	mov    0xac(%esp),%eax
   17e61:	83 c0 01             	add    $0x1,%eax
   17e64:	50                   	push   %eax
   17e65:	e8 16 a1 ff ff       	call   11f80 <modrm_rm>
   17e6a:	8d 70 01             	lea    0x1(%eax),%esi
   17e6d:	58                   	pop    %eax
   17e6e:	8d 6c 24 20          	lea    0x20(%esp),%ebp
   17e72:	55                   	push   %ebp
   17e73:	e8 68 a5 ff ff       	call   123e0 <operand_read>
   17e78:	89 3c 24             	mov    %edi,(%esp)
   17e7b:	e8 60 a5 ff ff       	call   123e0 <operand_read>
   17e80:	83 c4 0c             	add    $0xc,%esp
   17e83:	6a 08                	push   $0x8
   17e85:	ff 74 24 28          	pushl  0x28(%esp)
   17e89:	ff 74 24 50          	pushl  0x50(%esp)
   17e8d:	e8 be 78 ff ff       	call   f750 <alu_mul>
   17e92:	c7 44 24 7c 10 00 00 	movl   $0x10,0x7c(%esp)
   17e99:	00 
   17e9a:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%esp)
   17ea1:	00 
   17ea2:	c7 44 24 70 00 00 00 	movl   $0x0,0x70(%esp)
   17ea9:	00 
   17eaa:	89 44 24 78          	mov    %eax,0x78(%esp)
   17eae:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   17eb2:	5a                   	pop    %edx
   17eb3:	8d 54 24 68          	lea    0x68(%esp),%edx
   17eb7:	52                   	push   %edx
   17eb8:	e8 d3 a6 ff ff       	call   12590 <operand_write>
   17ebd:	83 c4 10             	add    $0x10,%esp
   17ec0:	8b 44 24 0c          	mov    0xc(%esp),%eax
   17ec4:	f6 c4 ff             	test   $0xff,%ah
   17ec7:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   17ecd:	75 31                	jne    17f00 <mul_rm2a_b+0xe0>
   17ecf:	66 81 60 24 fe f7    	andw   $0xf7fe,0x24(%eax)
   17ed5:	89 f0                	mov    %esi,%eax
   17ed7:	83 ec 0c             	sub    $0xc,%esp
   17eda:	0f b6 c0             	movzbl %al,%eax
   17edd:	55                   	push   %ebp
   17ede:	57                   	push   %edi
   17edf:	50                   	push   %eax
   17ee0:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   17ee6:	50                   	push   %eax
   17ee7:	8d 83 a2 70 fe ff    	lea    -0x18f5e(%ebx),%eax
   17eed:	50                   	push   %eax
   17eee:	e8 ad a2 ff ff       	call   121a0 <print_asm_2>
   17ef3:	81 c4 ac 00 00 00    	add    $0xac,%esp
   17ef9:	89 f0                	mov    %esi,%eax
   17efb:	5b                   	pop    %ebx
   17efc:	5e                   	pop    %esi
   17efd:	5f                   	pop    %edi
   17efe:	5d                   	pop    %ebp
   17eff:	c3                   	ret    
   17f00:	66 81 48 24 01 08    	orw    $0x801,0x24(%eax)
   17f06:	eb cd                	jmp    17ed5 <mul_rm2a_b+0xb5>
   17f08:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17f0f:	90                   	nop

00017f10 <mul_rm2a_v>:
   17f10:	55                   	push   %ebp
   17f11:	57                   	push   %edi
   17f12:	56                   	push   %esi
   17f13:	53                   	push   %ebx
   17f14:	e8 67 c5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   17f19:	81 c3 e7 70 03 00    	add    $0x370e7,%ebx
   17f1f:	81 ec b4 00 00 00    	sub    $0xb4,%esp
   17f25:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   17f29:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
   17f30:	00 
   17f31:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   17f38:	00 
   17f39:	8d ab 84 07 00 00    	lea    0x784(%ebx),%ebp
   17f3f:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   17f43:	89 44 24 28          	mov    %eax,0x28(%esp)
   17f47:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   17f4b:	57                   	push   %edi
   17f4c:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   17f53:	83 c0 01             	add    $0x1,%eax
   17f56:	50                   	push   %eax
   17f57:	e8 24 a0 ff ff       	call   11f80 <modrm_rm>
   17f5c:	59                   	pop    %ecx
   17f5d:	8d 70 01             	lea    0x1(%eax),%esi
   17f60:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   17f64:	50                   	push   %eax
   17f65:	e8 76 a4 ff ff       	call   123e0 <operand_read>
   17f6a:	89 3c 24             	mov    %edi,(%esp)
   17f6d:	e8 6e a4 ff ff       	call   123e0 <operand_read>
   17f72:	89 f0                	mov    %esi,%eax
   17f74:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   17f7b:	00 
   17f7c:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   17f83:	01 00 00 00 
   17f87:	0f b6 c8             	movzbl %al,%ecx
   17f8a:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   17f91:	00 
   17f92:	c7 84 24 90 00 00 00 	movl   $0x2,0x90(%esp)
   17f99:	02 00 00 00 
   17f9d:	83 c4 10             	add    $0x10,%esp
   17fa0:	80 7d 00 10          	cmpb   $0x10,0x0(%ebp)
   17fa4:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   17fa8:	0f 84 ba 00 00 00    	je     18068 <mul_rm2a_v+0x158>
   17fae:	83 ec 04             	sub    $0x4,%esp
   17fb1:	6a 20                	push   $0x20
   17fb3:	ff 74 24 24          	pushl  0x24(%esp)
   17fb7:	ff 74 24 4c          	pushl  0x4c(%esp)
   17fbb:	e8 90 77 ff ff       	call   f750 <alu_mul>
   17fc0:	c7 44 24 78 20 00 00 	movl   $0x20,0x78(%esp)
   17fc7:	00 
   17fc8:	89 44 24 74          	mov    %eax,0x74(%esp)
   17fcc:	89 94 24 98 00 00 00 	mov    %edx,0x98(%esp)
   17fd3:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   17fd9:	c7 84 24 9c 00 00 00 	movl   $0x20,0x9c(%esp)
   17fe0:	20 00 00 00 
   17fe4:	59                   	pop    %ecx
   17fe5:	5d                   	pop    %ebp
   17fe6:	8d 44 24 60          	lea    0x60(%esp),%eax
   17fea:	50                   	push   %eax
   17feb:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   17ff2:	89 44 24 14          	mov    %eax,0x14(%esp)
   17ff6:	55                   	push   %ebp
   17ff7:	57                   	push   %edi
   17ff8:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   17ffc:	51                   	push   %ecx
   17ffd:	52                   	push   %edx
   17ffe:	8d 93 a2 70 fe ff    	lea    -0x18f5e(%ebx),%edx
   18004:	52                   	push   %edx
   18005:	e8 a6 a2 ff ff       	call   122b0 <print_asm_3>
   1800a:	83 c4 20             	add    $0x20,%esp
   1800d:	8b 44 24 08          	mov    0x8(%esp),%eax
   18011:	83 ec 0c             	sub    $0xc,%esp
   18014:	50                   	push   %eax
   18015:	e8 76 a5 ff ff       	call   12590 <operand_write>
   1801a:	89 2c 24             	mov    %ebp,(%esp)
   1801d:	e8 6e a5 ff ff       	call   12590 <operand_write>
   18022:	83 c4 10             	add    $0x10,%esp
   18025:	8b 94 24 88 00 00 00 	mov    0x88(%esp),%edx
   1802c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   18032:	85 d2                	test   %edx,%edx
   18034:	74 1a                	je     18050 <mul_rm2a_v+0x140>
   18036:	66 81 48 24 01 08    	orw    $0x801,0x24(%eax)
   1803c:	81 c4 ac 00 00 00    	add    $0xac,%esp
   18042:	89 f0                	mov    %esi,%eax
   18044:	5b                   	pop    %ebx
   18045:	5e                   	pop    %esi
   18046:	5f                   	pop    %edi
   18047:	5d                   	pop    %ebp
   18048:	c3                   	ret    
   18049:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   18050:	66 81 60 24 fe f7    	andw   $0xf7fe,0x24(%eax)
   18056:	81 c4 ac 00 00 00    	add    $0xac,%esp
   1805c:	89 f0                	mov    %esi,%eax
   1805e:	5b                   	pop    %ebx
   1805f:	5e                   	pop    %esi
   18060:	5f                   	pop    %edi
   18061:	5d                   	pop    %ebp
   18062:	c3                   	ret    
   18063:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18067:	90                   	nop
   18068:	83 ec 04             	sub    $0x4,%esp
   1806b:	6a 10                	push   $0x10
   1806d:	ff 74 24 24          	pushl  0x24(%esp)
   18071:	ff 74 24 4c          	pushl  0x4c(%esp)
   18075:	e8 d6 76 ff ff       	call   f750 <alu_mul>
   1807a:	c7 44 24 78 10 00 00 	movl   $0x10,0x78(%esp)
   18081:	00 
   18082:	c7 84 24 9c 00 00 00 	movl   $0x10,0x9c(%esp)
   18089:	10 00 00 00 
   1808d:	0f b7 d0             	movzwl %ax,%edx
   18090:	c1 e8 10             	shr    $0x10,%eax
   18093:	89 54 24 74          	mov    %edx,0x74(%esp)
   18097:	89 84 24 98 00 00 00 	mov    %eax,0x98(%esp)
   1809e:	58                   	pop    %eax
   1809f:	5a                   	pop    %edx
   180a0:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   180a6:	8d 44 24 60          	lea    0x60(%esp),%eax
   180aa:	50                   	push   %eax
   180ab:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   180b2:	89 44 24 14          	mov    %eax,0x14(%esp)
   180b6:	55                   	push   %ebp
   180b7:	57                   	push   %edi
   180b8:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   180bc:	51                   	push   %ecx
   180bd:	e9 3b ff ff ff       	jmp    17ffd <mul_rm2a_v+0xed>
   180c2:	66 90                	xchg   %ax,%ax
   180c4:	66 90                	xchg   %ax,%ax
   180c6:	66 90                	xchg   %ax,%ax
   180c8:	66 90                	xchg   %ax,%ax
   180ca:	66 90                	xchg   %ax,%ax
   180cc:	66 90                	xchg   %ax,%ax
   180ce:	66 90                	xchg   %ax,%ax

000180d0 <sign_ext.part.0>:
   180d0:	53                   	push   %ebx
   180d1:	e8 aa c3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   180d6:	81 c3 2a 6f 03 00    	add    $0x36f2a,%ebx
   180dc:	83 ec 08             	sub    $0x8,%esp
   180df:	8d 83 88 67 fe ff    	lea    -0x19878(%ebx),%eax
   180e5:	50                   	push   %eax
   180e6:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   180ec:	6a 2e                	push   $0x2e
   180ee:	50                   	push   %eax
   180ef:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   180f5:	50                   	push   %eax
   180f6:	e8 15 c2 fe ff       	call   4310 <__assert_fail@plt>
   180fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   180ff:	90                   	nop

00018100 <instr_execute_2op>:
   18100:	57                   	push   %edi
   18101:	56                   	push   %esi
   18102:	53                   	push   %ebx
   18103:	e8 78 c3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18108:	81 c3 f8 6e 03 00    	add    $0x36ef8,%ebx
   1810e:	83 ec 0c             	sub    $0xc,%esp
   18111:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18117:	57                   	push   %edi
   18118:	e8 c3 a2 ff ff       	call   123e0 <operand_read>
   1811d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   18123:	89 34 24             	mov    %esi,(%esp)
   18126:	e8 b5 a2 ff ff       	call   123e0 <operand_read>
   1812b:	8b 57 10             	mov    0x10(%edi),%edx
   1812e:	83 c4 10             	add    $0x10,%esp
   18131:	8b 47 0c             	mov    0xc(%edi),%eax
   18134:	8d 4a f8             	lea    -0x8(%edx),%ecx
   18137:	83 e1 f7             	and    $0xfffffff7,%ecx
   1813a:	74 05                	je     18141 <instr_execute_2op+0x41>
   1813c:	83 fa 20             	cmp    $0x20,%edx
   1813f:	75 6c                	jne    181ad <instr_execute_2op+0xad>
   18141:	83 fa 08             	cmp    $0x8,%edx
   18144:	74 5a                	je     181a0 <instr_execute_2op+0xa0>
   18146:	0f bf c8             	movswl %ax,%ecx
   18149:	83 fa 10             	cmp    $0x10,%edx
   1814c:	0f 44 c1             	cmove  %ecx,%eax
   1814f:	8b 4e 10             	mov    0x10(%esi),%ecx
   18152:	8b 56 0c             	mov    0xc(%esi),%edx
   18155:	89 47 0c             	mov    %eax,0xc(%edi)
   18158:	8d 79 f8             	lea    -0x8(%ecx),%edi
   1815b:	83 e7 f7             	and    $0xfffffff7,%edi
   1815e:	74 05                	je     18165 <instr_execute_2op+0x65>
   18160:	83 f9 20             	cmp    $0x20,%ecx
   18163:	75 48                	jne    181ad <instr_execute_2op+0xad>
   18165:	83 f9 08             	cmp    $0x8,%ecx
   18168:	74 3e                	je     181a8 <instr_execute_2op+0xa8>
   1816a:	0f bf fa             	movswl %dx,%edi
   1816d:	83 f9 10             	cmp    $0x10,%ecx
   18170:	0f 44 d7             	cmove  %edi,%edx
   18173:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   18179:	83 ec 04             	sub    $0x4,%esp
   1817c:	89 56 0c             	mov    %edx,0xc(%esi)
   1817f:	0f b6 09             	movzbl (%ecx),%ecx
   18182:	51                   	push   %ecx
   18183:	52                   	push   %edx
   18184:	50                   	push   %eax
   18185:	e8 e6 73 ff ff       	call   f570 <alu_sub>
   1818a:	89 34 24             	mov    %esi,(%esp)
   1818d:	89 46 0c             	mov    %eax,0xc(%esi)
   18190:	e8 fb a3 ff ff       	call   12590 <operand_write>
   18195:	83 c4 10             	add    $0x10,%esp
   18198:	5b                   	pop    %ebx
   18199:	5e                   	pop    %esi
   1819a:	5f                   	pop    %edi
   1819b:	c3                   	ret    
   1819c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   181a0:	0f be c0             	movsbl %al,%eax
   181a3:	eb aa                	jmp    1814f <instr_execute_2op+0x4f>
   181a5:	8d 76 00             	lea    0x0(%esi),%esi
   181a8:	0f be d2             	movsbl %dl,%edx
   181ab:	eb c6                	jmp    18173 <instr_execute_2op+0x73>
   181ad:	e8 1e ff ff ff       	call   180d0 <sign_ext.part.0>
   181b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   181b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000181c0 <sub_r2rm_b>:
   181c0:	55                   	push   %ebp
   181c1:	57                   	push   %edi
   181c2:	56                   	push   %esi
   181c3:	53                   	push   %ebx
   181c4:	e8 b7 c2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   181c9:	81 c3 37 6e 03 00    	add    $0x36e37,%ebx
   181cf:	83 ec 10             	sub    $0x10,%esp
   181d2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   181d8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   181de:	56                   	push   %esi
   181df:	57                   	push   %edi
   181e0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   181e4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   181eb:	83 c0 01             	add    $0x1,%eax
   181ee:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   181f5:	50                   	push   %eax
   181f6:	e8 a5 9c ff ff       	call   11ea0 <modrm_r_rm>
   181fb:	8b 4e 10             	mov    0x10(%esi),%ecx
   181fe:	83 c4 10             	add    $0x10,%esp
   18201:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   18207:	8d 68 01             	lea    0x1(%eax),%ebp
   1820a:	89 e8                	mov    %ebp,%eax
   1820c:	0f b6 c0             	movzbl %al,%eax
   1820f:	83 f9 08             	cmp    $0x8,%ecx
   18212:	74 12                	je     18226 <sub_r2rm_b+0x66>
   18214:	83 f9 10             	cmp    $0x10,%ecx
   18217:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1821d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   18223:	0f 45 d1             	cmovne %ecx,%edx
   18226:	83 ec 0c             	sub    $0xc,%esp
   18229:	56                   	push   %esi
   1822a:	57                   	push   %edi
   1822b:	50                   	push   %eax
   1822c:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   18232:	52                   	push   %edx
   18233:	50                   	push   %eax
   18234:	e8 67 9f ff ff       	call   121a0 <print_asm_2>
   18239:	83 c4 20             	add    $0x20,%esp
   1823c:	e8 bf fe ff ff       	call   18100 <instr_execute_2op>
   18241:	83 c4 0c             	add    $0xc,%esp
   18244:	89 e8                	mov    %ebp,%eax
   18246:	5b                   	pop    %ebx
   18247:	5e                   	pop    %esi
   18248:	5f                   	pop    %edi
   18249:	5d                   	pop    %ebp
   1824a:	c3                   	ret    
   1824b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1824f:	90                   	nop

00018250 <sub_r2rm_v>:
   18250:	55                   	push   %ebp
   18251:	57                   	push   %edi
   18252:	56                   	push   %esi
   18253:	53                   	push   %ebx
   18254:	e8 27 c2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18259:	81 c3 a7 6d 03 00    	add    $0x36da7,%ebx
   1825f:	83 ec 10             	sub    $0x10,%esp
   18262:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   18268:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1826e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18274:	0f b6 00             	movzbl (%eax),%eax
   18277:	56                   	push   %esi
   18278:	57                   	push   %edi
   18279:	89 46 10             	mov    %eax,0x10(%esi)
   1827c:	89 47 10             	mov    %eax,0x10(%edi)
   1827f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   18283:	83 c0 01             	add    $0x1,%eax
   18286:	50                   	push   %eax
   18287:	e8 14 9c ff ff       	call   11ea0 <modrm_r_rm>
   1828c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1828f:	83 c4 10             	add    $0x10,%esp
   18292:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   18298:	8d 68 01             	lea    0x1(%eax),%ebp
   1829b:	89 e8                	mov    %ebp,%eax
   1829d:	0f b6 c0             	movzbl %al,%eax
   182a0:	83 f9 08             	cmp    $0x8,%ecx
   182a3:	74 12                	je     182b7 <sub_r2rm_v+0x67>
   182a5:	83 f9 10             	cmp    $0x10,%ecx
   182a8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   182ae:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   182b4:	0f 45 d1             	cmovne %ecx,%edx
   182b7:	83 ec 0c             	sub    $0xc,%esp
   182ba:	56                   	push   %esi
   182bb:	57                   	push   %edi
   182bc:	50                   	push   %eax
   182bd:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   182c3:	52                   	push   %edx
   182c4:	50                   	push   %eax
   182c5:	e8 d6 9e ff ff       	call   121a0 <print_asm_2>
   182ca:	83 c4 20             	add    $0x20,%esp
   182cd:	e8 2e fe ff ff       	call   18100 <instr_execute_2op>
   182d2:	83 c4 0c             	add    $0xc,%esp
   182d5:	89 e8                	mov    %ebp,%eax
   182d7:	5b                   	pop    %ebx
   182d8:	5e                   	pop    %esi
   182d9:	5f                   	pop    %edi
   182da:	5d                   	pop    %ebp
   182db:	c3                   	ret    
   182dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000182e0 <sub_rm2r_b>:
   182e0:	55                   	push   %ebp
   182e1:	57                   	push   %edi
   182e2:	56                   	push   %esi
   182e3:	53                   	push   %ebx
   182e4:	e8 97 c1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   182e9:	81 c3 17 6d 03 00    	add    $0x36d17,%ebx
   182ef:	83 ec 10             	sub    $0x10,%esp
   182f2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   182f8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   182fe:	57                   	push   %edi
   182ff:	56                   	push   %esi
   18300:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   18304:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1830b:	83 c0 01             	add    $0x1,%eax
   1830e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18315:	50                   	push   %eax
   18316:	e8 85 9b ff ff       	call   11ea0 <modrm_r_rm>
   1831b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1831e:	83 c4 10             	add    $0x10,%esp
   18321:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   18327:	8d 68 01             	lea    0x1(%eax),%ebp
   1832a:	89 e8                	mov    %ebp,%eax
   1832c:	0f b6 c0             	movzbl %al,%eax
   1832f:	83 f9 08             	cmp    $0x8,%ecx
   18332:	74 12                	je     18346 <sub_rm2r_b+0x66>
   18334:	83 f9 10             	cmp    $0x10,%ecx
   18337:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1833d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   18343:	0f 45 d1             	cmovne %ecx,%edx
   18346:	83 ec 0c             	sub    $0xc,%esp
   18349:	56                   	push   %esi
   1834a:	57                   	push   %edi
   1834b:	50                   	push   %eax
   1834c:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   18352:	52                   	push   %edx
   18353:	50                   	push   %eax
   18354:	e8 47 9e ff ff       	call   121a0 <print_asm_2>
   18359:	83 c4 20             	add    $0x20,%esp
   1835c:	e8 9f fd ff ff       	call   18100 <instr_execute_2op>
   18361:	83 c4 0c             	add    $0xc,%esp
   18364:	89 e8                	mov    %ebp,%eax
   18366:	5b                   	pop    %ebx
   18367:	5e                   	pop    %esi
   18368:	5f                   	pop    %edi
   18369:	5d                   	pop    %ebp
   1836a:	c3                   	ret    
   1836b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1836f:	90                   	nop

00018370 <sub_rm2r_v>:
   18370:	55                   	push   %ebp
   18371:	57                   	push   %edi
   18372:	56                   	push   %esi
   18373:	53                   	push   %ebx
   18374:	e8 07 c1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18379:	81 c3 87 6c 03 00    	add    $0x36c87,%ebx
   1837f:	83 ec 10             	sub    $0x10,%esp
   18382:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   18388:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1838e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18394:	0f b6 00             	movzbl (%eax),%eax
   18397:	57                   	push   %edi
   18398:	89 46 10             	mov    %eax,0x10(%esi)
   1839b:	56                   	push   %esi
   1839c:	89 47 10             	mov    %eax,0x10(%edi)
   1839f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   183a3:	83 c0 01             	add    $0x1,%eax
   183a6:	50                   	push   %eax
   183a7:	e8 f4 9a ff ff       	call   11ea0 <modrm_r_rm>
   183ac:	8b 4e 10             	mov    0x10(%esi),%ecx
   183af:	83 c4 10             	add    $0x10,%esp
   183b2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   183b8:	8d 68 01             	lea    0x1(%eax),%ebp
   183bb:	89 e8                	mov    %ebp,%eax
   183bd:	0f b6 c0             	movzbl %al,%eax
   183c0:	83 f9 08             	cmp    $0x8,%ecx
   183c3:	74 12                	je     183d7 <sub_rm2r_v+0x67>
   183c5:	83 f9 10             	cmp    $0x10,%ecx
   183c8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   183ce:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   183d4:	0f 45 d1             	cmovne %ecx,%edx
   183d7:	83 ec 0c             	sub    $0xc,%esp
   183da:	56                   	push   %esi
   183db:	57                   	push   %edi
   183dc:	50                   	push   %eax
   183dd:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   183e3:	52                   	push   %edx
   183e4:	50                   	push   %eax
   183e5:	e8 b6 9d ff ff       	call   121a0 <print_asm_2>
   183ea:	83 c4 20             	add    $0x20,%esp
   183ed:	e8 0e fd ff ff       	call   18100 <instr_execute_2op>
   183f2:	83 c4 0c             	add    $0xc,%esp
   183f5:	89 e8                	mov    %ebp,%eax
   183f7:	5b                   	pop    %ebx
   183f8:	5e                   	pop    %esi
   183f9:	5f                   	pop    %edi
   183fa:	5d                   	pop    %ebp
   183fb:	c3                   	ret    
   183fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018400 <sub_i2a_b>:
   18400:	53                   	push   %ebx
   18401:	e8 7a c0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18406:	81 c3 fa 6b 03 00    	add    $0x36bfa,%ebx
   1840c:	83 ec 14             	sub    $0x14,%esp
   1840f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   18413:	83 c1 01             	add    $0x1,%ecx
   18416:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1841c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   18422:	89 48 04             	mov    %ecx,0x4(%eax)
   18425:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1842c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   18433:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   18439:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1843d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   18443:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1844a:	52                   	push   %edx
   1844b:	50                   	push   %eax
   1844c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   18452:	6a 02                	push   $0x2
   18454:	50                   	push   %eax
   18455:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   1845b:	50                   	push   %eax
   1845c:	e8 3f 9d ff ff       	call   121a0 <print_asm_2>
   18461:	83 c4 20             	add    $0x20,%esp
   18464:	e8 97 fc ff ff       	call   18100 <instr_execute_2op>
   18469:	83 c4 08             	add    $0x8,%esp
   1846c:	b8 02 00 00 00       	mov    $0x2,%eax
   18471:	5b                   	pop    %ebx
   18472:	c3                   	ret    
   18473:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1847a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018480 <sub_i2a_v>:
   18480:	55                   	push   %ebp
   18481:	57                   	push   %edi
   18482:	56                   	push   %esi
   18483:	53                   	push   %ebx
   18484:	e8 f7 bf fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18489:	81 c3 77 6b 03 00    	add    $0x36b77,%ebx
   1848f:	83 ec 0c             	sub    $0xc,%esp
   18492:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   18498:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1849e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   184a4:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   184aa:	0f b6 08             	movzbl (%eax),%ecx
   184ad:	8b 44 24 20          	mov    0x20(%esp),%eax
   184b1:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   184b7:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   184bb:	89 cf                	mov    %ecx,%edi
   184bd:	83 c0 01             	add    $0x1,%eax
   184c0:	89 4d 10             	mov    %ecx,0x10(%ebp)
   184c3:	c1 ef 03             	shr    $0x3,%edi
   184c6:	89 4a 10             	mov    %ecx,0x10(%edx)
   184c9:	89 42 04             	mov    %eax,0x4(%edx)
   184cc:	83 c7 01             	add    $0x1,%edi
   184cf:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   184d6:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   184dd:	83 f9 08             	cmp    $0x8,%ecx
   184e0:	74 12                	je     184f4 <sub_i2a_v+0x74>
   184e2:	83 f9 10             	cmp    $0x10,%ecx
   184e5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   184eb:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   184f1:	0f 45 f0             	cmovne %eax,%esi
   184f4:	83 ec 0c             	sub    $0xc,%esp
   184f7:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   184fd:	55                   	push   %ebp
   184fe:	52                   	push   %edx
   184ff:	57                   	push   %edi
   18500:	56                   	push   %esi
   18501:	50                   	push   %eax
   18502:	e8 99 9c ff ff       	call   121a0 <print_asm_2>
   18507:	83 c4 20             	add    $0x20,%esp
   1850a:	e8 f1 fb ff ff       	call   18100 <instr_execute_2op>
   1850f:	83 c4 0c             	add    $0xc,%esp
   18512:	89 f8                	mov    %edi,%eax
   18514:	5b                   	pop    %ebx
   18515:	5e                   	pop    %esi
   18516:	5f                   	pop    %edi
   18517:	5d                   	pop    %ebp
   18518:	c3                   	ret    
   18519:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018520 <sub_i2rm_b>:
   18520:	55                   	push   %ebp
   18521:	57                   	push   %edi
   18522:	56                   	push   %esi
   18523:	53                   	push   %ebx
   18524:	e8 57 bf fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18529:	81 c3 d7 6a 03 00    	add    $0x36ad7,%ebx
   1852f:	83 ec 24             	sub    $0x24,%esp
   18532:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   18536:	8d 45 01             	lea    0x1(%ebp),%eax
   18539:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1853f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18545:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1854c:	52                   	push   %edx
   1854d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18554:	89 54 24 18          	mov    %edx,0x18(%esp)
   18558:	50                   	push   %eax
   18559:	e8 22 9a ff ff       	call   11f80 <modrm_rm>
   1855e:	8b 77 10             	mov    0x10(%edi),%esi
   18561:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   18565:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   18569:	83 c0 01             	add    $0x1,%eax
   1856c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   18572:	83 c4 10             	add    $0x10,%esp
   18575:	01 c5                	add    %eax,%ebp
   18577:	c1 ee 03             	shr    $0x3,%esi
   1857a:	89 6f 04             	mov    %ebp,0x4(%edi)
   1857d:	01 c6                	add    %eax,%esi
   1857f:	8b 6a 10             	mov    0x10(%edx),%ebp
   18582:	89 f0                	mov    %esi,%eax
   18584:	0f b6 c8             	movzbl %al,%ecx
   18587:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1858d:	83 fd 08             	cmp    $0x8,%ebp
   18590:	74 12                	je     185a4 <sub_i2rm_b+0x84>
   18592:	83 fd 10             	cmp    $0x10,%ebp
   18595:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1859b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   185a1:	0f 45 c5             	cmovne %ebp,%eax
   185a4:	83 ec 0c             	sub    $0xc,%esp
   185a7:	52                   	push   %edx
   185a8:	57                   	push   %edi
   185a9:	51                   	push   %ecx
   185aa:	50                   	push   %eax
   185ab:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   185b1:	50                   	push   %eax
   185b2:	e8 e9 9b ff ff       	call   121a0 <print_asm_2>
   185b7:	83 c4 20             	add    $0x20,%esp
   185ba:	e8 41 fb ff ff       	call   18100 <instr_execute_2op>
   185bf:	83 c4 1c             	add    $0x1c,%esp
   185c2:	89 f0                	mov    %esi,%eax
   185c4:	5b                   	pop    %ebx
   185c5:	5e                   	pop    %esi
   185c6:	5f                   	pop    %edi
   185c7:	5d                   	pop    %ebp
   185c8:	c3                   	ret    
   185c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000185d0 <sub_i2rm_v>:
   185d0:	55                   	push   %ebp
   185d1:	57                   	push   %edi
   185d2:	56                   	push   %esi
   185d3:	53                   	push   %ebx
   185d4:	e8 a7 be fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   185d9:	81 c3 27 6a 03 00    	add    $0x36a27,%ebx
   185df:	83 ec 24             	sub    $0x24,%esp
   185e2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   185e6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   185ec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   185f2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   185f8:	0f b6 00             	movzbl (%eax),%eax
   185fb:	89 42 10             	mov    %eax,0x10(%edx)
   185fe:	52                   	push   %edx
   185ff:	89 47 10             	mov    %eax,0x10(%edi)
   18602:	8d 45 01             	lea    0x1(%ebp),%eax
   18605:	89 54 24 18          	mov    %edx,0x18(%esp)
   18609:	50                   	push   %eax
   1860a:	e8 71 99 ff ff       	call   11f80 <modrm_rm>
   1860f:	8b 77 10             	mov    0x10(%edi),%esi
   18612:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   18616:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1861a:	83 c0 01             	add    $0x1,%eax
   1861d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   18623:	83 c4 10             	add    $0x10,%esp
   18626:	01 c5                	add    %eax,%ebp
   18628:	c1 ee 03             	shr    $0x3,%esi
   1862b:	89 6f 04             	mov    %ebp,0x4(%edi)
   1862e:	01 c6                	add    %eax,%esi
   18630:	8b 6a 10             	mov    0x10(%edx),%ebp
   18633:	89 f0                	mov    %esi,%eax
   18635:	0f b6 c8             	movzbl %al,%ecx
   18638:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1863e:	83 fd 08             	cmp    $0x8,%ebp
   18641:	74 12                	je     18655 <sub_i2rm_v+0x85>
   18643:	83 fd 10             	cmp    $0x10,%ebp
   18646:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1864c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   18652:	0f 45 c5             	cmovne %ebp,%eax
   18655:	83 ec 0c             	sub    $0xc,%esp
   18658:	52                   	push   %edx
   18659:	57                   	push   %edi
   1865a:	51                   	push   %ecx
   1865b:	50                   	push   %eax
   1865c:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   18662:	50                   	push   %eax
   18663:	e8 38 9b ff ff       	call   121a0 <print_asm_2>
   18668:	83 c4 20             	add    $0x20,%esp
   1866b:	e8 90 fa ff ff       	call   18100 <instr_execute_2op>
   18670:	83 c4 1c             	add    $0x1c,%esp
   18673:	89 f0                	mov    %esi,%eax
   18675:	5b                   	pop    %ebx
   18676:	5e                   	pop    %esi
   18677:	5f                   	pop    %edi
   18678:	5d                   	pop    %ebp
   18679:	c3                   	ret    
   1867a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018680 <sub_i2rm_bv>:
   18680:	55                   	push   %ebp
   18681:	57                   	push   %edi
   18682:	56                   	push   %esi
   18683:	53                   	push   %ebx
   18684:	e8 f7 bd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18689:	81 c3 77 69 03 00    	add    $0x36977,%ebx
   1868f:	83 ec 24             	sub    $0x24,%esp
   18692:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   18696:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1869c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   186a2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   186a8:	0f b6 00             	movzbl (%eax),%eax
   186ab:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   186b2:	89 42 10             	mov    %eax,0x10(%edx)
   186b5:	8d 45 01             	lea    0x1(%ebp),%eax
   186b8:	52                   	push   %edx
   186b9:	89 54 24 18          	mov    %edx,0x18(%esp)
   186bd:	50                   	push   %eax
   186be:	e8 bd 98 ff ff       	call   11f80 <modrm_rm>
   186c3:	8b 77 10             	mov    0x10(%edi),%esi
   186c6:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   186ca:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   186ce:	83 c0 01             	add    $0x1,%eax
   186d1:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   186d7:	83 c4 10             	add    $0x10,%esp
   186da:	01 c5                	add    %eax,%ebp
   186dc:	c1 ee 03             	shr    $0x3,%esi
   186df:	89 6f 04             	mov    %ebp,0x4(%edi)
   186e2:	01 c6                	add    %eax,%esi
   186e4:	8b 6a 10             	mov    0x10(%edx),%ebp
   186e7:	89 f0                	mov    %esi,%eax
   186e9:	0f b6 c8             	movzbl %al,%ecx
   186ec:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   186f2:	83 fd 08             	cmp    $0x8,%ebp
   186f5:	74 12                	je     18709 <sub_i2rm_bv+0x89>
   186f7:	83 fd 10             	cmp    $0x10,%ebp
   186fa:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   18700:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   18706:	0f 45 c5             	cmovne %ebp,%eax
   18709:	83 ec 0c             	sub    $0xc,%esp
   1870c:	52                   	push   %edx
   1870d:	57                   	push   %edi
   1870e:	51                   	push   %ecx
   1870f:	50                   	push   %eax
   18710:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   18716:	50                   	push   %eax
   18717:	e8 84 9a ff ff       	call   121a0 <print_asm_2>
   1871c:	83 c4 20             	add    $0x20,%esp
   1871f:	e8 dc f9 ff ff       	call   18100 <instr_execute_2op>
   18724:	83 c4 1c             	add    $0x1c,%esp
   18727:	89 f0                	mov    %esi,%eax
   18729:	5b                   	pop    %ebx
   1872a:	5e                   	pop    %esi
   1872b:	5f                   	pop    %edi
   1872c:	5d                   	pop    %ebp
   1872d:	c3                   	ret    
   1872e:	66 90                	xchg   %ax,%ax

00018730 <sign_ext.part.0>:
   18730:	53                   	push   %ebx
   18731:	e8 4a bd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18736:	81 c3 ca 68 03 00    	add    $0x368ca,%ebx
   1873c:	83 ec 08             	sub    $0x8,%esp
   1873f:	8d 83 94 67 fe ff    	lea    -0x1986c(%ebx),%eax
   18745:	50                   	push   %eax
   18746:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1874c:	6a 2e                	push   $0x2e
   1874e:	50                   	push   %eax
   1874f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   18755:	50                   	push   %eax
   18756:	e8 b5 bb fe ff       	call   4310 <__assert_fail@plt>
   1875b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1875f:	90                   	nop

00018760 <instr_execute_2op>:
   18760:	57                   	push   %edi
   18761:	56                   	push   %esi
   18762:	53                   	push   %ebx
   18763:	e8 18 bd fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18768:	81 c3 98 68 03 00    	add    $0x36898,%ebx
   1876e:	83 ec 0c             	sub    $0xc,%esp
   18771:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18777:	57                   	push   %edi
   18778:	e8 63 9c ff ff       	call   123e0 <operand_read>
   1877d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   18783:	89 34 24             	mov    %esi,(%esp)
   18786:	e8 55 9c ff ff       	call   123e0 <operand_read>
   1878b:	8b 57 10             	mov    0x10(%edi),%edx
   1878e:	83 c4 10             	add    $0x10,%esp
   18791:	8b 47 0c             	mov    0xc(%edi),%eax
   18794:	8d 4a f8             	lea    -0x8(%edx),%ecx
   18797:	83 e1 f7             	and    $0xfffffff7,%ecx
   1879a:	74 05                	je     187a1 <instr_execute_2op+0x41>
   1879c:	83 fa 20             	cmp    $0x20,%edx
   1879f:	75 6c                	jne    1880d <instr_execute_2op+0xad>
   187a1:	83 fa 08             	cmp    $0x8,%edx
   187a4:	74 5a                	je     18800 <instr_execute_2op+0xa0>
   187a6:	0f bf c8             	movswl %ax,%ecx
   187a9:	83 fa 10             	cmp    $0x10,%edx
   187ac:	0f 44 c1             	cmove  %ecx,%eax
   187af:	8b 4e 10             	mov    0x10(%esi),%ecx
   187b2:	8b 56 0c             	mov    0xc(%esi),%edx
   187b5:	89 47 0c             	mov    %eax,0xc(%edi)
   187b8:	8d 79 f8             	lea    -0x8(%ecx),%edi
   187bb:	83 e7 f7             	and    $0xfffffff7,%edi
   187be:	74 05                	je     187c5 <instr_execute_2op+0x65>
   187c0:	83 f9 20             	cmp    $0x20,%ecx
   187c3:	75 48                	jne    1880d <instr_execute_2op+0xad>
   187c5:	83 f9 08             	cmp    $0x8,%ecx
   187c8:	74 3e                	je     18808 <instr_execute_2op+0xa8>
   187ca:	0f bf fa             	movswl %dx,%edi
   187cd:	83 f9 10             	cmp    $0x10,%ecx
   187d0:	0f 44 d7             	cmove  %edi,%edx
   187d3:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   187d9:	83 ec 04             	sub    $0x4,%esp
   187dc:	89 56 0c             	mov    %edx,0xc(%esi)
   187df:	0f b6 09             	movzbl (%ecx),%ecx
   187e2:	51                   	push   %ecx
   187e3:	52                   	push   %edx
   187e4:	50                   	push   %eax
   187e5:	e8 a6 6b ff ff       	call   f390 <alu_add>
   187ea:	89 34 24             	mov    %esi,(%esp)
   187ed:	89 46 0c             	mov    %eax,0xc(%esi)
   187f0:	e8 9b 9d ff ff       	call   12590 <operand_write>
   187f5:	83 c4 10             	add    $0x10,%esp
   187f8:	5b                   	pop    %ebx
   187f9:	5e                   	pop    %esi
   187fa:	5f                   	pop    %edi
   187fb:	c3                   	ret    
   187fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18800:	0f be c0             	movsbl %al,%eax
   18803:	eb aa                	jmp    187af <instr_execute_2op+0x4f>
   18805:	8d 76 00             	lea    0x0(%esi),%esi
   18808:	0f be d2             	movsbl %dl,%edx
   1880b:	eb c6                	jmp    187d3 <instr_execute_2op+0x73>
   1880d:	e8 1e ff ff ff       	call   18730 <sign_ext.part.0>
   18812:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   18819:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018820 <add_r2rm_b>:
   18820:	55                   	push   %ebp
   18821:	57                   	push   %edi
   18822:	56                   	push   %esi
   18823:	53                   	push   %ebx
   18824:	e8 57 bc fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18829:	81 c3 d7 67 03 00    	add    $0x367d7,%ebx
   1882f:	83 ec 10             	sub    $0x10,%esp
   18832:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   18838:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1883e:	56                   	push   %esi
   1883f:	57                   	push   %edi
   18840:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   18844:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1884b:	83 c0 01             	add    $0x1,%eax
   1884e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18855:	50                   	push   %eax
   18856:	e8 45 96 ff ff       	call   11ea0 <modrm_r_rm>
   1885b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1885e:	83 c4 10             	add    $0x10,%esp
   18861:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   18867:	8d 68 01             	lea    0x1(%eax),%ebp
   1886a:	89 e8                	mov    %ebp,%eax
   1886c:	0f b6 c0             	movzbl %al,%eax
   1886f:	83 f9 08             	cmp    $0x8,%ecx
   18872:	74 12                	je     18886 <add_r2rm_b+0x66>
   18874:	83 f9 10             	cmp    $0x10,%ecx
   18877:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1887d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   18883:	0f 45 d1             	cmovne %ecx,%edx
   18886:	83 ec 0c             	sub    $0xc,%esp
   18889:	56                   	push   %esi
   1888a:	57                   	push   %edi
   1888b:	50                   	push   %eax
   1888c:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18892:	52                   	push   %edx
   18893:	50                   	push   %eax
   18894:	e8 07 99 ff ff       	call   121a0 <print_asm_2>
   18899:	83 c4 20             	add    $0x20,%esp
   1889c:	e8 bf fe ff ff       	call   18760 <instr_execute_2op>
   188a1:	83 c4 0c             	add    $0xc,%esp
   188a4:	89 e8                	mov    %ebp,%eax
   188a6:	5b                   	pop    %ebx
   188a7:	5e                   	pop    %esi
   188a8:	5f                   	pop    %edi
   188a9:	5d                   	pop    %ebp
   188aa:	c3                   	ret    
   188ab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   188af:	90                   	nop

000188b0 <add_r2rm_v>:
   188b0:	55                   	push   %ebp
   188b1:	57                   	push   %edi
   188b2:	56                   	push   %esi
   188b3:	53                   	push   %ebx
   188b4:	e8 c7 bb fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   188b9:	81 c3 47 67 03 00    	add    $0x36747,%ebx
   188bf:	83 ec 10             	sub    $0x10,%esp
   188c2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   188c8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   188ce:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   188d4:	0f b6 00             	movzbl (%eax),%eax
   188d7:	56                   	push   %esi
   188d8:	57                   	push   %edi
   188d9:	89 46 10             	mov    %eax,0x10(%esi)
   188dc:	89 47 10             	mov    %eax,0x10(%edi)
   188df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   188e3:	83 c0 01             	add    $0x1,%eax
   188e6:	50                   	push   %eax
   188e7:	e8 b4 95 ff ff       	call   11ea0 <modrm_r_rm>
   188ec:	8b 4e 10             	mov    0x10(%esi),%ecx
   188ef:	83 c4 10             	add    $0x10,%esp
   188f2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   188f8:	8d 68 01             	lea    0x1(%eax),%ebp
   188fb:	89 e8                	mov    %ebp,%eax
   188fd:	0f b6 c0             	movzbl %al,%eax
   18900:	83 f9 08             	cmp    $0x8,%ecx
   18903:	74 12                	je     18917 <add_r2rm_v+0x67>
   18905:	83 f9 10             	cmp    $0x10,%ecx
   18908:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1890e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   18914:	0f 45 d1             	cmovne %ecx,%edx
   18917:	83 ec 0c             	sub    $0xc,%esp
   1891a:	56                   	push   %esi
   1891b:	57                   	push   %edi
   1891c:	50                   	push   %eax
   1891d:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18923:	52                   	push   %edx
   18924:	50                   	push   %eax
   18925:	e8 76 98 ff ff       	call   121a0 <print_asm_2>
   1892a:	83 c4 20             	add    $0x20,%esp
   1892d:	e8 2e fe ff ff       	call   18760 <instr_execute_2op>
   18932:	83 c4 0c             	add    $0xc,%esp
   18935:	89 e8                	mov    %ebp,%eax
   18937:	5b                   	pop    %ebx
   18938:	5e                   	pop    %esi
   18939:	5f                   	pop    %edi
   1893a:	5d                   	pop    %ebp
   1893b:	c3                   	ret    
   1893c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018940 <add_rm2r_b>:
   18940:	55                   	push   %ebp
   18941:	57                   	push   %edi
   18942:	56                   	push   %esi
   18943:	53                   	push   %ebx
   18944:	e8 37 bb fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18949:	81 c3 b7 66 03 00    	add    $0x366b7,%ebx
   1894f:	83 ec 10             	sub    $0x10,%esp
   18952:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   18958:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1895e:	57                   	push   %edi
   1895f:	56                   	push   %esi
   18960:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   18964:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1896b:	83 c0 01             	add    $0x1,%eax
   1896e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18975:	50                   	push   %eax
   18976:	e8 25 95 ff ff       	call   11ea0 <modrm_r_rm>
   1897b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1897e:	83 c4 10             	add    $0x10,%esp
   18981:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   18987:	8d 68 01             	lea    0x1(%eax),%ebp
   1898a:	89 e8                	mov    %ebp,%eax
   1898c:	0f b6 c0             	movzbl %al,%eax
   1898f:	83 f9 08             	cmp    $0x8,%ecx
   18992:	74 12                	je     189a6 <add_rm2r_b+0x66>
   18994:	83 f9 10             	cmp    $0x10,%ecx
   18997:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1899d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   189a3:	0f 45 d1             	cmovne %ecx,%edx
   189a6:	83 ec 0c             	sub    $0xc,%esp
   189a9:	56                   	push   %esi
   189aa:	57                   	push   %edi
   189ab:	50                   	push   %eax
   189ac:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   189b2:	52                   	push   %edx
   189b3:	50                   	push   %eax
   189b4:	e8 e7 97 ff ff       	call   121a0 <print_asm_2>
   189b9:	83 c4 20             	add    $0x20,%esp
   189bc:	e8 9f fd ff ff       	call   18760 <instr_execute_2op>
   189c1:	83 c4 0c             	add    $0xc,%esp
   189c4:	89 e8                	mov    %ebp,%eax
   189c6:	5b                   	pop    %ebx
   189c7:	5e                   	pop    %esi
   189c8:	5f                   	pop    %edi
   189c9:	5d                   	pop    %ebp
   189ca:	c3                   	ret    
   189cb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   189cf:	90                   	nop

000189d0 <add_rm2r_v>:
   189d0:	55                   	push   %ebp
   189d1:	57                   	push   %edi
   189d2:	56                   	push   %esi
   189d3:	53                   	push   %ebx
   189d4:	e8 a7 ba fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   189d9:	81 c3 27 66 03 00    	add    $0x36627,%ebx
   189df:	83 ec 10             	sub    $0x10,%esp
   189e2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   189e8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   189ee:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   189f4:	0f b6 00             	movzbl (%eax),%eax
   189f7:	57                   	push   %edi
   189f8:	89 46 10             	mov    %eax,0x10(%esi)
   189fb:	56                   	push   %esi
   189fc:	89 47 10             	mov    %eax,0x10(%edi)
   189ff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   18a03:	83 c0 01             	add    $0x1,%eax
   18a06:	50                   	push   %eax
   18a07:	e8 94 94 ff ff       	call   11ea0 <modrm_r_rm>
   18a0c:	8b 4e 10             	mov    0x10(%esi),%ecx
   18a0f:	83 c4 10             	add    $0x10,%esp
   18a12:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   18a18:	8d 68 01             	lea    0x1(%eax),%ebp
   18a1b:	89 e8                	mov    %ebp,%eax
   18a1d:	0f b6 c0             	movzbl %al,%eax
   18a20:	83 f9 08             	cmp    $0x8,%ecx
   18a23:	74 12                	je     18a37 <add_rm2r_v+0x67>
   18a25:	83 f9 10             	cmp    $0x10,%ecx
   18a28:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   18a2e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   18a34:	0f 45 d1             	cmovne %ecx,%edx
   18a37:	83 ec 0c             	sub    $0xc,%esp
   18a3a:	56                   	push   %esi
   18a3b:	57                   	push   %edi
   18a3c:	50                   	push   %eax
   18a3d:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18a43:	52                   	push   %edx
   18a44:	50                   	push   %eax
   18a45:	e8 56 97 ff ff       	call   121a0 <print_asm_2>
   18a4a:	83 c4 20             	add    $0x20,%esp
   18a4d:	e8 0e fd ff ff       	call   18760 <instr_execute_2op>
   18a52:	83 c4 0c             	add    $0xc,%esp
   18a55:	89 e8                	mov    %ebp,%eax
   18a57:	5b                   	pop    %ebx
   18a58:	5e                   	pop    %esi
   18a59:	5f                   	pop    %edi
   18a5a:	5d                   	pop    %ebp
   18a5b:	c3                   	ret    
   18a5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018a60 <add_i2a_b>:
   18a60:	53                   	push   %ebx
   18a61:	e8 1a ba fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18a66:	81 c3 9a 65 03 00    	add    $0x3659a,%ebx
   18a6c:	83 ec 14             	sub    $0x14,%esp
   18a6f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   18a73:	83 c1 01             	add    $0x1,%ecx
   18a76:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   18a7c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   18a82:	89 48 04             	mov    %ecx,0x4(%eax)
   18a85:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   18a8c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   18a93:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   18a99:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   18a9d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   18aa3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   18aaa:	52                   	push   %edx
   18aab:	50                   	push   %eax
   18aac:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   18ab2:	6a 02                	push   $0x2
   18ab4:	50                   	push   %eax
   18ab5:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18abb:	50                   	push   %eax
   18abc:	e8 df 96 ff ff       	call   121a0 <print_asm_2>
   18ac1:	83 c4 20             	add    $0x20,%esp
   18ac4:	e8 97 fc ff ff       	call   18760 <instr_execute_2op>
   18ac9:	83 c4 08             	add    $0x8,%esp
   18acc:	b8 02 00 00 00       	mov    $0x2,%eax
   18ad1:	5b                   	pop    %ebx
   18ad2:	c3                   	ret    
   18ad3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   18ada:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018ae0 <add_i2a_v>:
   18ae0:	55                   	push   %ebp
   18ae1:	57                   	push   %edi
   18ae2:	56                   	push   %esi
   18ae3:	53                   	push   %ebx
   18ae4:	e8 97 b9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18ae9:	81 c3 17 65 03 00    	add    $0x36517,%ebx
   18aef:	83 ec 0c             	sub    $0xc,%esp
   18af2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   18af8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   18afe:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   18b04:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   18b0a:	0f b6 08             	movzbl (%eax),%ecx
   18b0d:	8b 44 24 20          	mov    0x20(%esp),%eax
   18b11:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   18b17:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   18b1b:	89 cf                	mov    %ecx,%edi
   18b1d:	83 c0 01             	add    $0x1,%eax
   18b20:	89 4d 10             	mov    %ecx,0x10(%ebp)
   18b23:	c1 ef 03             	shr    $0x3,%edi
   18b26:	89 4a 10             	mov    %ecx,0x10(%edx)
   18b29:	89 42 04             	mov    %eax,0x4(%edx)
   18b2c:	83 c7 01             	add    $0x1,%edi
   18b2f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   18b36:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   18b3d:	83 f9 08             	cmp    $0x8,%ecx
   18b40:	74 12                	je     18b54 <add_i2a_v+0x74>
   18b42:	83 f9 10             	cmp    $0x10,%ecx
   18b45:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   18b4b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   18b51:	0f 45 f0             	cmovne %eax,%esi
   18b54:	83 ec 0c             	sub    $0xc,%esp
   18b57:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18b5d:	55                   	push   %ebp
   18b5e:	52                   	push   %edx
   18b5f:	57                   	push   %edi
   18b60:	56                   	push   %esi
   18b61:	50                   	push   %eax
   18b62:	e8 39 96 ff ff       	call   121a0 <print_asm_2>
   18b67:	83 c4 20             	add    $0x20,%esp
   18b6a:	e8 f1 fb ff ff       	call   18760 <instr_execute_2op>
   18b6f:	83 c4 0c             	add    $0xc,%esp
   18b72:	89 f8                	mov    %edi,%eax
   18b74:	5b                   	pop    %ebx
   18b75:	5e                   	pop    %esi
   18b76:	5f                   	pop    %edi
   18b77:	5d                   	pop    %ebp
   18b78:	c3                   	ret    
   18b79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018b80 <add_i2rm_b>:
   18b80:	55                   	push   %ebp
   18b81:	57                   	push   %edi
   18b82:	56                   	push   %esi
   18b83:	53                   	push   %ebx
   18b84:	e8 f7 b8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18b89:	81 c3 77 64 03 00    	add    $0x36477,%ebx
   18b8f:	83 ec 24             	sub    $0x24,%esp
   18b92:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   18b96:	8d 45 01             	lea    0x1(%ebp),%eax
   18b99:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   18b9f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18ba5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   18bac:	52                   	push   %edx
   18bad:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18bb4:	89 54 24 18          	mov    %edx,0x18(%esp)
   18bb8:	50                   	push   %eax
   18bb9:	e8 c2 93 ff ff       	call   11f80 <modrm_rm>
   18bbe:	8b 77 10             	mov    0x10(%edi),%esi
   18bc1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   18bc5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   18bc9:	83 c0 01             	add    $0x1,%eax
   18bcc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   18bd2:	83 c4 10             	add    $0x10,%esp
   18bd5:	01 c5                	add    %eax,%ebp
   18bd7:	c1 ee 03             	shr    $0x3,%esi
   18bda:	89 6f 04             	mov    %ebp,0x4(%edi)
   18bdd:	01 c6                	add    %eax,%esi
   18bdf:	8b 6a 10             	mov    0x10(%edx),%ebp
   18be2:	89 f0                	mov    %esi,%eax
   18be4:	0f b6 c8             	movzbl %al,%ecx
   18be7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   18bed:	83 fd 08             	cmp    $0x8,%ebp
   18bf0:	74 12                	je     18c04 <add_i2rm_b+0x84>
   18bf2:	83 fd 10             	cmp    $0x10,%ebp
   18bf5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   18bfb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   18c01:	0f 45 c5             	cmovne %ebp,%eax
   18c04:	83 ec 0c             	sub    $0xc,%esp
   18c07:	52                   	push   %edx
   18c08:	57                   	push   %edi
   18c09:	51                   	push   %ecx
   18c0a:	50                   	push   %eax
   18c0b:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18c11:	50                   	push   %eax
   18c12:	e8 89 95 ff ff       	call   121a0 <print_asm_2>
   18c17:	83 c4 20             	add    $0x20,%esp
   18c1a:	e8 41 fb ff ff       	call   18760 <instr_execute_2op>
   18c1f:	83 c4 1c             	add    $0x1c,%esp
   18c22:	89 f0                	mov    %esi,%eax
   18c24:	5b                   	pop    %ebx
   18c25:	5e                   	pop    %esi
   18c26:	5f                   	pop    %edi
   18c27:	5d                   	pop    %ebp
   18c28:	c3                   	ret    
   18c29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018c30 <add_i2rm_v>:
   18c30:	55                   	push   %ebp
   18c31:	57                   	push   %edi
   18c32:	56                   	push   %esi
   18c33:	53                   	push   %ebx
   18c34:	e8 47 b8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18c39:	81 c3 c7 63 03 00    	add    $0x363c7,%ebx
   18c3f:	83 ec 24             	sub    $0x24,%esp
   18c42:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   18c46:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   18c4c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   18c52:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18c58:	0f b6 00             	movzbl (%eax),%eax
   18c5b:	89 42 10             	mov    %eax,0x10(%edx)
   18c5e:	52                   	push   %edx
   18c5f:	89 47 10             	mov    %eax,0x10(%edi)
   18c62:	8d 45 01             	lea    0x1(%ebp),%eax
   18c65:	89 54 24 18          	mov    %edx,0x18(%esp)
   18c69:	50                   	push   %eax
   18c6a:	e8 11 93 ff ff       	call   11f80 <modrm_rm>
   18c6f:	8b 77 10             	mov    0x10(%edi),%esi
   18c72:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   18c76:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   18c7a:	83 c0 01             	add    $0x1,%eax
   18c7d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   18c83:	83 c4 10             	add    $0x10,%esp
   18c86:	01 c5                	add    %eax,%ebp
   18c88:	c1 ee 03             	shr    $0x3,%esi
   18c8b:	89 6f 04             	mov    %ebp,0x4(%edi)
   18c8e:	01 c6                	add    %eax,%esi
   18c90:	8b 6a 10             	mov    0x10(%edx),%ebp
   18c93:	89 f0                	mov    %esi,%eax
   18c95:	0f b6 c8             	movzbl %al,%ecx
   18c98:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   18c9e:	83 fd 08             	cmp    $0x8,%ebp
   18ca1:	74 12                	je     18cb5 <add_i2rm_v+0x85>
   18ca3:	83 fd 10             	cmp    $0x10,%ebp
   18ca6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   18cac:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   18cb2:	0f 45 c5             	cmovne %ebp,%eax
   18cb5:	83 ec 0c             	sub    $0xc,%esp
   18cb8:	52                   	push   %edx
   18cb9:	57                   	push   %edi
   18cba:	51                   	push   %ecx
   18cbb:	50                   	push   %eax
   18cbc:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18cc2:	50                   	push   %eax
   18cc3:	e8 d8 94 ff ff       	call   121a0 <print_asm_2>
   18cc8:	83 c4 20             	add    $0x20,%esp
   18ccb:	e8 90 fa ff ff       	call   18760 <instr_execute_2op>
   18cd0:	83 c4 1c             	add    $0x1c,%esp
   18cd3:	89 f0                	mov    %esi,%eax
   18cd5:	5b                   	pop    %ebx
   18cd6:	5e                   	pop    %esi
   18cd7:	5f                   	pop    %edi
   18cd8:	5d                   	pop    %ebp
   18cd9:	c3                   	ret    
   18cda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018ce0 <add_i2rm_bv>:
   18ce0:	55                   	push   %ebp
   18ce1:	57                   	push   %edi
   18ce2:	56                   	push   %esi
   18ce3:	53                   	push   %ebx
   18ce4:	e8 97 b7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18ce9:	81 c3 17 63 03 00    	add    $0x36317,%ebx
   18cef:	83 ec 24             	sub    $0x24,%esp
   18cf2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   18cf6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   18cfc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   18d02:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18d08:	0f b6 00             	movzbl (%eax),%eax
   18d0b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18d12:	89 42 10             	mov    %eax,0x10(%edx)
   18d15:	8d 45 01             	lea    0x1(%ebp),%eax
   18d18:	52                   	push   %edx
   18d19:	89 54 24 18          	mov    %edx,0x18(%esp)
   18d1d:	50                   	push   %eax
   18d1e:	e8 5d 92 ff ff       	call   11f80 <modrm_rm>
   18d23:	8b 77 10             	mov    0x10(%edi),%esi
   18d26:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   18d2a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   18d2e:	83 c0 01             	add    $0x1,%eax
   18d31:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   18d37:	83 c4 10             	add    $0x10,%esp
   18d3a:	01 c5                	add    %eax,%ebp
   18d3c:	c1 ee 03             	shr    $0x3,%esi
   18d3f:	89 6f 04             	mov    %ebp,0x4(%edi)
   18d42:	01 c6                	add    %eax,%esi
   18d44:	8b 6a 10             	mov    0x10(%edx),%ebp
   18d47:	89 f0                	mov    %esi,%eax
   18d49:	0f b6 c8             	movzbl %al,%ecx
   18d4c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   18d52:	83 fd 08             	cmp    $0x8,%ebp
   18d55:	74 12                	je     18d69 <add_i2rm_bv+0x89>
   18d57:	83 fd 10             	cmp    $0x10,%ebp
   18d5a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   18d60:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   18d66:	0f 45 c5             	cmovne %ebp,%eax
   18d69:	83 ec 0c             	sub    $0xc,%esp
   18d6c:	52                   	push   %edx
   18d6d:	57                   	push   %edi
   18d6e:	51                   	push   %ecx
   18d6f:	50                   	push   %eax
   18d70:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   18d76:	50                   	push   %eax
   18d77:	e8 24 94 ff ff       	call   121a0 <print_asm_2>
   18d7c:	83 c4 20             	add    $0x20,%esp
   18d7f:	e8 dc f9 ff ff       	call   18760 <instr_execute_2op>
   18d84:	83 c4 1c             	add    $0x1c,%esp
   18d87:	89 f0                	mov    %esi,%eax
   18d89:	5b                   	pop    %ebx
   18d8a:	5e                   	pop    %esi
   18d8b:	5f                   	pop    %edi
   18d8c:	5d                   	pop    %ebp
   18d8d:	c3                   	ret    
   18d8e:	66 90                	xchg   %ax,%ax

00018d90 <instr_execute_2op>:
   18d90:	57                   	push   %edi
   18d91:	56                   	push   %esi
   18d92:	53                   	push   %ebx
   18d93:	e8 e8 b6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18d98:	81 c3 68 62 03 00    	add    $0x36268,%ebx
   18d9e:	83 ec 0c             	sub    $0xc,%esp
   18da1:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18da7:	57                   	push   %edi
   18da8:	e8 33 96 ff ff       	call   123e0 <operand_read>
   18dad:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   18db3:	89 34 24             	mov    %esi,(%esp)
   18db6:	e8 25 96 ff ff       	call   123e0 <operand_read>
   18dbb:	83 c4 0c             	add    $0xc,%esp
   18dbe:	ff 76 10             	pushl  0x10(%esi)
   18dc1:	ff 76 0c             	pushl  0xc(%esi)
   18dc4:	ff 77 0c             	pushl  0xc(%edi)
   18dc7:	e8 44 6f ff ff       	call   fd10 <alu_shr>
   18dcc:	89 34 24             	mov    %esi,(%esp)
   18dcf:	89 46 0c             	mov    %eax,0xc(%esi)
   18dd2:	e8 b9 97 ff ff       	call   12590 <operand_write>
   18dd7:	83 c4 10             	add    $0x10,%esp
   18dda:	5b                   	pop    %ebx
   18ddb:	5e                   	pop    %esi
   18ddc:	5f                   	pop    %edi
   18ddd:	c3                   	ret    
   18dde:	66 90                	xchg   %ax,%ax

00018de0 <instr_execute_1op>:
   18de0:	56                   	push   %esi
   18de1:	53                   	push   %ebx
   18de2:	e8 99 b6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18de7:	81 c3 19 62 03 00    	add    $0x36219,%ebx
   18ded:	83 ec 10             	sub    $0x10,%esp
   18df0:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   18df6:	56                   	push   %esi
   18df7:	e8 e4 95 ff ff       	call   123e0 <operand_read>
   18dfc:	83 c4 0c             	add    $0xc,%esp
   18dff:	ff 76 10             	pushl  0x10(%esi)
   18e02:	ff 76 0c             	pushl  0xc(%esi)
   18e05:	6a 01                	push   $0x1
   18e07:	e8 04 6f ff ff       	call   fd10 <alu_shr>
   18e0c:	89 34 24             	mov    %esi,(%esp)
   18e0f:	89 46 0c             	mov    %eax,0xc(%esi)
   18e12:	e8 79 97 ff ff       	call   12590 <operand_write>
   18e17:	83 c4 14             	add    $0x14,%esp
   18e1a:	5b                   	pop    %ebx
   18e1b:	5e                   	pop    %esi
   18e1c:	c3                   	ret    
   18e1d:	8d 76 00             	lea    0x0(%esi),%esi

00018e20 <shr_i2rm_b>:
   18e20:	55                   	push   %ebp
   18e21:	57                   	push   %edi
   18e22:	56                   	push   %esi
   18e23:	53                   	push   %ebx
   18e24:	e8 57 b6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18e29:	81 c3 d7 61 03 00    	add    $0x361d7,%ebx
   18e2f:	83 ec 24             	sub    $0x24,%esp
   18e32:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   18e36:	8d 45 01             	lea    0x1(%ebp),%eax
   18e39:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   18e3f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18e45:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   18e4c:	52                   	push   %edx
   18e4d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18e54:	89 54 24 18          	mov    %edx,0x18(%esp)
   18e58:	50                   	push   %eax
   18e59:	e8 22 91 ff ff       	call   11f80 <modrm_rm>
   18e5e:	8b 77 10             	mov    0x10(%edi),%esi
   18e61:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   18e65:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   18e69:	83 c0 01             	add    $0x1,%eax
   18e6c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   18e72:	83 c4 10             	add    $0x10,%esp
   18e75:	01 c5                	add    %eax,%ebp
   18e77:	c1 ee 03             	shr    $0x3,%esi
   18e7a:	89 6f 04             	mov    %ebp,0x4(%edi)
   18e7d:	01 c6                	add    %eax,%esi
   18e7f:	8b 6a 10             	mov    0x10(%edx),%ebp
   18e82:	89 f0                	mov    %esi,%eax
   18e84:	0f b6 c8             	movzbl %al,%ecx
   18e87:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   18e8d:	83 fd 08             	cmp    $0x8,%ebp
   18e90:	74 12                	je     18ea4 <shr_i2rm_b+0x84>
   18e92:	83 fd 10             	cmp    $0x10,%ebp
   18e95:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   18e9b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   18ea1:	0f 45 c5             	cmovne %ebp,%eax
   18ea4:	83 ec 0c             	sub    $0xc,%esp
   18ea7:	52                   	push   %edx
   18ea8:	57                   	push   %edi
   18ea9:	51                   	push   %ecx
   18eaa:	50                   	push   %eax
   18eab:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   18eb1:	50                   	push   %eax
   18eb2:	e8 e9 92 ff ff       	call   121a0 <print_asm_2>
   18eb7:	83 c4 20             	add    $0x20,%esp
   18eba:	e8 d1 fe ff ff       	call   18d90 <instr_execute_2op>
   18ebf:	83 c4 1c             	add    $0x1c,%esp
   18ec2:	89 f0                	mov    %esi,%eax
   18ec4:	5b                   	pop    %ebx
   18ec5:	5e                   	pop    %esi
   18ec6:	5f                   	pop    %edi
   18ec7:	5d                   	pop    %ebp
   18ec8:	c3                   	ret    
   18ec9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00018ed0 <shr_i2rm_bv>:
   18ed0:	55                   	push   %ebp
   18ed1:	57                   	push   %edi
   18ed2:	56                   	push   %esi
   18ed3:	53                   	push   %ebx
   18ed4:	e8 a7 b5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18ed9:	81 c3 27 61 03 00    	add    $0x36127,%ebx
   18edf:	83 ec 24             	sub    $0x24,%esp
   18ee2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   18ee6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   18eec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   18ef2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   18ef8:	0f b6 00             	movzbl (%eax),%eax
   18efb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18f02:	89 42 10             	mov    %eax,0x10(%edx)
   18f05:	8d 45 01             	lea    0x1(%ebp),%eax
   18f08:	52                   	push   %edx
   18f09:	89 54 24 18          	mov    %edx,0x18(%esp)
   18f0d:	50                   	push   %eax
   18f0e:	e8 6d 90 ff ff       	call   11f80 <modrm_rm>
   18f13:	8b 77 10             	mov    0x10(%edi),%esi
   18f16:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   18f1a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   18f1e:	83 c0 01             	add    $0x1,%eax
   18f21:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   18f27:	83 c4 10             	add    $0x10,%esp
   18f2a:	01 c5                	add    %eax,%ebp
   18f2c:	c1 ee 03             	shr    $0x3,%esi
   18f2f:	89 6f 04             	mov    %ebp,0x4(%edi)
   18f32:	01 c6                	add    %eax,%esi
   18f34:	8b 6a 10             	mov    0x10(%edx),%ebp
   18f37:	89 f0                	mov    %esi,%eax
   18f39:	0f b6 c8             	movzbl %al,%ecx
   18f3c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   18f42:	83 fd 08             	cmp    $0x8,%ebp
   18f45:	74 12                	je     18f59 <shr_i2rm_bv+0x89>
   18f47:	83 fd 10             	cmp    $0x10,%ebp
   18f4a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   18f50:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   18f56:	0f 45 c5             	cmovne %ebp,%eax
   18f59:	83 ec 0c             	sub    $0xc,%esp
   18f5c:	52                   	push   %edx
   18f5d:	57                   	push   %edi
   18f5e:	51                   	push   %ecx
   18f5f:	50                   	push   %eax
   18f60:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   18f66:	50                   	push   %eax
   18f67:	e8 34 92 ff ff       	call   121a0 <print_asm_2>
   18f6c:	83 c4 20             	add    $0x20,%esp
   18f6f:	e8 1c fe ff ff       	call   18d90 <instr_execute_2op>
   18f74:	83 c4 1c             	add    $0x1c,%esp
   18f77:	89 f0                	mov    %esi,%eax
   18f79:	5b                   	pop    %ebx
   18f7a:	5e                   	pop    %esi
   18f7b:	5f                   	pop    %edi
   18f7c:	5d                   	pop    %ebp
   18f7d:	c3                   	ret    
   18f7e:	66 90                	xchg   %ax,%ax

00018f80 <shr_c2rm_b>:
   18f80:	55                   	push   %ebp
   18f81:	57                   	push   %edi
   18f82:	56                   	push   %esi
   18f83:	53                   	push   %ebx
   18f84:	e8 f7 b4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   18f89:	81 c3 77 60 03 00    	add    $0x36077,%ebx
   18f8f:	83 ec 14             	sub    $0x14,%esp
   18f92:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   18f98:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   18f9e:	57                   	push   %edi
   18f9f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   18fa3:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   18faa:	83 c0 01             	add    $0x1,%eax
   18fad:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   18fb4:	50                   	push   %eax
   18fb5:	e8 c6 8f ff ff       	call   11f80 <modrm_rm>
   18fba:	8b 4f 10             	mov    0x10(%edi),%ecx
   18fbd:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   18fc3:	83 c4 10             	add    $0x10,%esp
   18fc6:	8d 68 01             	lea    0x1(%eax),%ebp
   18fc9:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   18fd0:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   18fd6:	89 e8                	mov    %ebp,%eax
   18fd8:	0f b6 c0             	movzbl %al,%eax
   18fdb:	83 f9 08             	cmp    $0x8,%ecx
   18fde:	74 12                	je     18ff2 <shr_c2rm_b+0x72>
   18fe0:	83 f9 10             	cmp    $0x10,%ecx
   18fe3:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   18fe9:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   18fef:	0f 45 d1             	cmovne %ecx,%edx
   18ff2:	83 ec 0c             	sub    $0xc,%esp
   18ff5:	57                   	push   %edi
   18ff6:	56                   	push   %esi
   18ff7:	50                   	push   %eax
   18ff8:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   18ffe:	52                   	push   %edx
   18fff:	50                   	push   %eax
   19000:	e8 9b 91 ff ff       	call   121a0 <print_asm_2>
   19005:	83 c4 20             	add    $0x20,%esp
   19008:	e8 83 fd ff ff       	call   18d90 <instr_execute_2op>
   1900d:	83 c4 0c             	add    $0xc,%esp
   19010:	89 e8                	mov    %ebp,%eax
   19012:	5b                   	pop    %ebx
   19013:	5e                   	pop    %esi
   19014:	5f                   	pop    %edi
   19015:	5d                   	pop    %ebp
   19016:	c3                   	ret    
   19017:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1901e:	66 90                	xchg   %ax,%ax

00019020 <shr_c2rm_bv>:
   19020:	55                   	push   %ebp
   19021:	57                   	push   %edi
   19022:	56                   	push   %esi
   19023:	53                   	push   %ebx
   19024:	e8 57 b4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19029:	81 c3 d7 5f 03 00    	add    $0x35fd7,%ebx
   1902f:	83 ec 14             	sub    $0x14,%esp
   19032:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19038:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1903e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   19044:	0f b6 00             	movzbl (%eax),%eax
   19047:	57                   	push   %edi
   19048:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1904f:	89 47 10             	mov    %eax,0x10(%edi)
   19052:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   19056:	83 c0 01             	add    $0x1,%eax
   19059:	50                   	push   %eax
   1905a:	e8 21 8f ff ff       	call   11f80 <modrm_rm>
   1905f:	8b 4f 10             	mov    0x10(%edi),%ecx
   19062:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   19068:	83 c4 10             	add    $0x10,%esp
   1906b:	8d 68 01             	lea    0x1(%eax),%ebp
   1906e:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   19075:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1907b:	89 e8                	mov    %ebp,%eax
   1907d:	0f b6 c0             	movzbl %al,%eax
   19080:	83 f9 08             	cmp    $0x8,%ecx
   19083:	74 12                	je     19097 <shr_c2rm_bv+0x77>
   19085:	83 f9 10             	cmp    $0x10,%ecx
   19088:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1908e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19094:	0f 45 d1             	cmovne %ecx,%edx
   19097:	83 ec 0c             	sub    $0xc,%esp
   1909a:	57                   	push   %edi
   1909b:	56                   	push   %esi
   1909c:	50                   	push   %eax
   1909d:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   190a3:	52                   	push   %edx
   190a4:	50                   	push   %eax
   190a5:	e8 f6 90 ff ff       	call   121a0 <print_asm_2>
   190aa:	83 c4 20             	add    $0x20,%esp
   190ad:	e8 de fc ff ff       	call   18d90 <instr_execute_2op>
   190b2:	83 c4 0c             	add    $0xc,%esp
   190b5:	89 e8                	mov    %ebp,%eax
   190b7:	5b                   	pop    %ebx
   190b8:	5e                   	pop    %esi
   190b9:	5f                   	pop    %edi
   190ba:	5d                   	pop    %ebp
   190bb:	c3                   	ret    
   190bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000190c0 <shr_rm_b>:
   190c0:	55                   	push   %ebp
   190c1:	57                   	push   %edi
   190c2:	56                   	push   %esi
   190c3:	53                   	push   %ebx
   190c4:	e8 b7 b3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   190c9:	81 c3 37 5f 03 00    	add    $0x35f37,%ebx
   190cf:	83 ec 14             	sub    $0x14,%esp
   190d2:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   190d8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   190de:	56                   	push   %esi
   190df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   190e3:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   190ea:	83 c0 01             	add    $0x1,%eax
   190ed:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   190f4:	50                   	push   %eax
   190f5:	e8 86 8e ff ff       	call   11f80 <modrm_rm>
   190fa:	8b 4d 10             	mov    0x10(%ebp),%ecx
   190fd:	83 c4 10             	add    $0x10,%esp
   19100:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   19106:	8d 78 01             	lea    0x1(%eax),%edi
   19109:	89 f8                	mov    %edi,%eax
   1910b:	0f b6 c0             	movzbl %al,%eax
   1910e:	83 f9 08             	cmp    $0x8,%ecx
   19111:	74 12                	je     19125 <shr_rm_b+0x65>
   19113:	83 f9 10             	cmp    $0x10,%ecx
   19116:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1911c:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19122:	0f 45 d1             	cmovne %ecx,%edx
   19125:	56                   	push   %esi
   19126:	50                   	push   %eax
   19127:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   1912d:	52                   	push   %edx
   1912e:	50                   	push   %eax
   1912f:	e8 6c 8f ff ff       	call   120a0 <print_asm_1>
   19134:	e8 a7 fc ff ff       	call   18de0 <instr_execute_1op>
   19139:	83 c4 1c             	add    $0x1c,%esp
   1913c:	89 f8                	mov    %edi,%eax
   1913e:	5b                   	pop    %ebx
   1913f:	5e                   	pop    %esi
   19140:	5f                   	pop    %edi
   19141:	5d                   	pop    %ebp
   19142:	c3                   	ret    
   19143:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1914a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00019150 <shr_rm_v>:
   19150:	55                   	push   %ebp
   19151:	57                   	push   %edi
   19152:	56                   	push   %esi
   19153:	53                   	push   %ebx
   19154:	e8 27 b3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19159:	81 c3 a7 5e 03 00    	add    $0x35ea7,%ebx
   1915f:	83 ec 14             	sub    $0x14,%esp
   19162:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19168:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1916e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   19174:	0f b6 00             	movzbl (%eax),%eax
   19177:	56                   	push   %esi
   19178:	89 45 10             	mov    %eax,0x10(%ebp)
   1917b:	89 46 10             	mov    %eax,0x10(%esi)
   1917e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   19182:	83 c0 01             	add    $0x1,%eax
   19185:	50                   	push   %eax
   19186:	e8 f5 8d ff ff       	call   11f80 <modrm_rm>
   1918b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1918e:	83 c4 10             	add    $0x10,%esp
   19191:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   19197:	8d 78 01             	lea    0x1(%eax),%edi
   1919a:	89 f8                	mov    %edi,%eax
   1919c:	0f b6 c0             	movzbl %al,%eax
   1919f:	83 f9 08             	cmp    $0x8,%ecx
   191a2:	74 12                	je     191b6 <shr_rm_v+0x66>
   191a4:	83 f9 10             	cmp    $0x10,%ecx
   191a7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   191ad:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   191b3:	0f 45 d1             	cmovne %ecx,%edx
   191b6:	56                   	push   %esi
   191b7:	50                   	push   %eax
   191b8:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   191be:	52                   	push   %edx
   191bf:	50                   	push   %eax
   191c0:	e8 db 8e ff ff       	call   120a0 <print_asm_1>
   191c5:	e8 16 fc ff ff       	call   18de0 <instr_execute_1op>
   191ca:	83 c4 1c             	add    $0x1c,%esp
   191cd:	89 f8                	mov    %edi,%eax
   191cf:	5b                   	pop    %ebx
   191d0:	5e                   	pop    %esi
   191d1:	5f                   	pop    %edi
   191d2:	5d                   	pop    %ebp
   191d3:	c3                   	ret    
   191d4:	66 90                	xchg   %ax,%ax
   191d6:	66 90                	xchg   %ax,%ax
   191d8:	66 90                	xchg   %ax,%ax
   191da:	66 90                	xchg   %ax,%ax
   191dc:	66 90                	xchg   %ax,%ax
   191de:	66 90                	xchg   %ax,%ax

000191e0 <sti>:
   191e0:	53                   	push   %ebx
   191e1:	e8 9a b2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   191e6:	81 c3 1a 5e 03 00    	add    $0x35e1a,%ebx
   191ec:	83 ec 0c             	sub    $0xc,%esp
   191ef:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   191f5:	80 48 25 02          	orb    $0x2,0x25(%eax)
   191f9:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   191ff:	6a 01                	push   $0x1
   19201:	50                   	push   %eax
   19202:	8d 83 9d 67 fe ff    	lea    -0x19863(%ebx),%eax
   19208:	50                   	push   %eax
   19209:	e8 b2 8d ff ff       	call   11fc0 <print_asm_0>
   1920e:	83 c4 18             	add    $0x18,%esp
   19211:	b8 01 00 00 00       	mov    $0x1,%eax
   19216:	5b                   	pop    %ebx
   19217:	c3                   	ret    
   19218:	66 90                	xchg   %ax,%ax
   1921a:	66 90                	xchg   %ax,%ax
   1921c:	66 90                	xchg   %ax,%ax
   1921e:	66 90                	xchg   %ax,%ax

00019220 <cmps_v>:
   19220:	57                   	push   %edi
   19221:	56                   	push   %esi
   19222:	53                   	push   %ebx
   19223:	e8 58 b2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19228:	81 c3 d8 5d 03 00    	add    $0x35dd8,%ebx
   1922e:	83 ec 5c             	sub    $0x5c,%esp
   19231:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   19238:	00 
   19239:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   19240:	00 
   19241:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   19246:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   1924c:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   19252:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   19257:	0f b6 07             	movzbl (%edi),%eax
   1925a:	89 44 24 48          	mov    %eax,0x48(%esp)
   1925e:	89 44 24 24          	mov    %eax,0x24(%esp)
   19262:	8b 46 18             	mov    0x18(%esi),%eax
   19265:	89 44 24 18          	mov    %eax,0x18(%esp)
   19269:	8b 46 1c             	mov    0x1c(%esi),%eax
   1926c:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   19270:	8d 44 24 14          	lea    0x14(%esp),%eax
   19274:	50                   	push   %eax
   19275:	e8 66 91 ff ff       	call   123e0 <operand_read>
   1927a:	58                   	pop    %eax
   1927b:	8d 44 24 38          	lea    0x38(%esp),%eax
   1927f:	50                   	push   %eax
   19280:	e8 5b 91 ff ff       	call   123e0 <operand_read>
   19285:	0f b6 07             	movzbl (%edi),%eax
   19288:	83 c4 0c             	add    $0xc,%esp
   1928b:	50                   	push   %eax
   1928c:	ff 74 24 1c          	pushl  0x1c(%esp)
   19290:	ff 74 24 44          	pushl  0x44(%esp)
   19294:	e8 d7 62 ff ff       	call   f570 <alu_sub>
   19299:	83 c4 10             	add    $0x10,%esp
   1929c:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   192a0:	75 36                	jne    192d8 <cmps_v+0xb8>
   192a2:	0f b6 07             	movzbl (%edi),%eax
   192a5:	c0 e8 03             	shr    $0x3,%al
   192a8:	0f b6 c0             	movzbl %al,%eax
   192ab:	83 ec 04             	sub    $0x4,%esp
   192ae:	01 46 18             	add    %eax,0x18(%esi)
   192b1:	01 46 1c             	add    %eax,0x1c(%esi)
   192b4:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   192ba:	6a 01                	push   $0x1
   192bc:	50                   	push   %eax
   192bd:	8d 83 a1 67 fe ff    	lea    -0x1985f(%ebx),%eax
   192c3:	50                   	push   %eax
   192c4:	e8 f7 8c ff ff       	call   11fc0 <print_asm_0>
   192c9:	83 c4 60             	add    $0x60,%esp
   192cc:	b8 01 00 00 00       	mov    $0x1,%eax
   192d1:	5b                   	pop    %ebx
   192d2:	5e                   	pop    %esi
   192d3:	5f                   	pop    %edi
   192d4:	c3                   	ret    
   192d5:	8d 76 00             	lea    0x0(%esi),%esi
   192d8:	0f b6 07             	movzbl (%edi),%eax
   192db:	c1 f8 03             	sar    $0x3,%eax
   192de:	f7 d8                	neg    %eax
   192e0:	eb c9                	jmp    192ab <cmps_v+0x8b>
   192e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   192e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000192f0 <cmps_b>:
   192f0:	56                   	push   %esi
   192f1:	53                   	push   %ebx
   192f2:	e8 89 b1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   192f7:	81 c3 09 5d 03 00    	add    $0x35d09,%ebx
   192fd:	83 ec 60             	sub    $0x60,%esp
   19300:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   19307:	00 
   19308:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   1930f:	00 
   19310:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   19317:	00 
   19318:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1931e:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   19325:	00 
   19326:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   1932b:	8b 46 18             	mov    0x18(%esi),%eax
   1932e:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   19333:	89 44 24 18          	mov    %eax,0x18(%esp)
   19337:	8b 46 1c             	mov    0x1c(%esi),%eax
   1933a:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   1933e:	8d 44 24 14          	lea    0x14(%esp),%eax
   19342:	50                   	push   %eax
   19343:	e8 98 90 ff ff       	call   123e0 <operand_read>
   19348:	58                   	pop    %eax
   19349:	8d 44 24 38          	lea    0x38(%esp),%eax
   1934d:	50                   	push   %eax
   1934e:	e8 8d 90 ff ff       	call   123e0 <operand_read>
   19353:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19359:	83 c4 0c             	add    $0xc,%esp
   1935c:	0f b6 00             	movzbl (%eax),%eax
   1935f:	50                   	push   %eax
   19360:	ff 74 24 1c          	pushl  0x1c(%esp)
   19364:	ff 74 24 44          	pushl  0x44(%esp)
   19368:	e8 03 62 ff ff       	call   f570 <alu_sub>
   1936d:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   19371:	83 c4 0c             	add    $0xc,%esp
   19374:	6a 01                	push   $0x1
   19376:	83 e0 04             	and    $0x4,%eax
   19379:	3c 01                	cmp    $0x1,%al
   1937b:	19 c0                	sbb    %eax,%eax
   1937d:	83 e0 02             	and    $0x2,%eax
   19380:	83 e8 01             	sub    $0x1,%eax
   19383:	01 46 18             	add    %eax,0x18(%esi)
   19386:	01 46 1c             	add    %eax,0x1c(%esi)
   19389:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1938f:	50                   	push   %eax
   19390:	8d 83 a1 67 fe ff    	lea    -0x1985f(%ebx),%eax
   19396:	50                   	push   %eax
   19397:	e8 24 8c ff ff       	call   11fc0 <print_asm_0>
   1939c:	83 c4 64             	add    $0x64,%esp
   1939f:	b8 01 00 00 00       	mov    $0x1,%eax
   193a4:	5b                   	pop    %ebx
   193a5:	5e                   	pop    %esi
   193a6:	c3                   	ret    
   193a7:	66 90                	xchg   %ax,%ax
   193a9:	66 90                	xchg   %ax,%ax
   193ab:	66 90                	xchg   %ax,%ax
   193ad:	66 90                	xchg   %ax,%ax
   193af:	90                   	nop

000193b0 <instr_execute_1op>:
   193b0:	56                   	push   %esi
   193b1:	53                   	push   %ebx
   193b2:	e8 c9 b0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   193b7:	81 c3 49 5c 03 00    	add    $0x35c49,%ebx
   193bd:	83 ec 10             	sub    $0x10,%esp
   193c0:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   193c6:	56                   	push   %esi
   193c7:	e8 14 90 ff ff       	call   123e0 <operand_read>
   193cc:	83 c4 0c             	add    $0xc,%esp
   193cf:	ff 76 10             	pushl  0x10(%esi)
   193d2:	ff 76 0c             	pushl  0xc(%esi)
   193d5:	6a 01                	push   $0x1
   193d7:	e8 94 61 ff ff       	call   f570 <alu_sub>
   193dc:	89 34 24             	mov    %esi,(%esp)
   193df:	89 46 0c             	mov    %eax,0xc(%esi)
   193e2:	e8 a9 91 ff ff       	call   12590 <operand_write>
   193e7:	83 c4 14             	add    $0x14,%esp
   193ea:	5b                   	pop    %ebx
   193eb:	5e                   	pop    %esi
   193ec:	c3                   	ret    
   193ed:	8d 76 00             	lea    0x0(%esi),%esi

000193f0 <dec_r_v>:
   193f0:	53                   	push   %ebx
   193f1:	e8 8a b0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   193f6:	81 c3 0a 5c 03 00    	add    $0x35c0a,%ebx
   193fc:	83 ec 08             	sub    $0x8,%esp
   193ff:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19405:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1940b:	0f b6 08             	movzbl (%eax),%ecx
   1940e:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   19414:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1941a:	89 48 10             	mov    %ecx,0x10(%eax)
   1941d:	8b 44 24 14          	mov    0x14(%esp),%eax
   19421:	89 4a 10             	mov    %ecx,0x10(%edx)
   19424:	83 e0 07             	and    $0x7,%eax
   19427:	89 42 04             	mov    %eax,0x4(%edx)
   1942a:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   19430:	83 f9 08             	cmp    $0x8,%ecx
   19433:	74 12                	je     19447 <dec_r_v+0x57>
   19435:	83 f9 10             	cmp    $0x10,%ecx
   19438:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1943e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19444:	0f 45 c1             	cmovne %ecx,%eax
   19447:	52                   	push   %edx
   19448:	6a 01                	push   $0x1
   1944a:	50                   	push   %eax
   1944b:	8d 83 b7 67 fe ff    	lea    -0x19849(%ebx),%eax
   19451:	50                   	push   %eax
   19452:	e8 49 8c ff ff       	call   120a0 <print_asm_1>
   19457:	e8 54 ff ff ff       	call   193b0 <instr_execute_1op>
   1945c:	83 c4 18             	add    $0x18,%esp
   1945f:	b8 01 00 00 00       	mov    $0x1,%eax
   19464:	5b                   	pop    %ebx
   19465:	c3                   	ret    
   19466:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1946d:	8d 76 00             	lea    0x0(%esi),%esi

00019470 <dec_rm_v>:
   19470:	55                   	push   %ebp
   19471:	57                   	push   %edi
   19472:	56                   	push   %esi
   19473:	53                   	push   %ebx
   19474:	e8 07 b0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19479:	81 c3 87 5b 03 00    	add    $0x35b87,%ebx
   1947f:	83 ec 14             	sub    $0x14,%esp
   19482:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19488:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1948e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   19494:	0f b6 00             	movzbl (%eax),%eax
   19497:	56                   	push   %esi
   19498:	89 45 10             	mov    %eax,0x10(%ebp)
   1949b:	89 46 10             	mov    %eax,0x10(%esi)
   1949e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   194a2:	83 c0 01             	add    $0x1,%eax
   194a5:	50                   	push   %eax
   194a6:	e8 d5 8a ff ff       	call   11f80 <modrm_rm>
   194ab:	8b 4d 10             	mov    0x10(%ebp),%ecx
   194ae:	83 c4 10             	add    $0x10,%esp
   194b1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   194b7:	8d 78 01             	lea    0x1(%eax),%edi
   194ba:	89 f8                	mov    %edi,%eax
   194bc:	0f b6 c0             	movzbl %al,%eax
   194bf:	83 f9 08             	cmp    $0x8,%ecx
   194c2:	74 12                	je     194d6 <dec_rm_v+0x66>
   194c4:	83 f9 10             	cmp    $0x10,%ecx
   194c7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   194cd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   194d3:	0f 45 d1             	cmovne %ecx,%edx
   194d6:	56                   	push   %esi
   194d7:	50                   	push   %eax
   194d8:	8d 83 b7 67 fe ff    	lea    -0x19849(%ebx),%eax
   194de:	52                   	push   %edx
   194df:	50                   	push   %eax
   194e0:	e8 bb 8b ff ff       	call   120a0 <print_asm_1>
   194e5:	e8 c6 fe ff ff       	call   193b0 <instr_execute_1op>
   194ea:	83 c4 1c             	add    $0x1c,%esp
   194ed:	89 f8                	mov    %edi,%eax
   194ef:	5b                   	pop    %ebx
   194f0:	5e                   	pop    %esi
   194f1:	5f                   	pop    %edi
   194f2:	5d                   	pop    %ebp
   194f3:	c3                   	ret    
   194f4:	66 90                	xchg   %ax,%ax
   194f6:	66 90                	xchg   %ax,%ax
   194f8:	66 90                	xchg   %ax,%ax
   194fa:	66 90                	xchg   %ax,%ax
   194fc:	66 90                	xchg   %ax,%ax
   194fe:	66 90                	xchg   %ax,%ax

00019500 <sign_ext.part.0>:
   19500:	53                   	push   %ebx
   19501:	e8 7a af fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19506:	81 c3 fa 5a 03 00    	add    $0x35afa,%ebx
   1950c:	83 ec 08             	sub    $0x8,%esp
   1950f:	8d 83 bc 67 fe ff    	lea    -0x19844(%ebx),%eax
   19515:	50                   	push   %eax
   19516:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1951c:	6a 2e                	push   $0x2e
   1951e:	50                   	push   %eax
   1951f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   19525:	50                   	push   %eax
   19526:	e8 e5 ad fe ff       	call   4310 <__assert_fail@plt>
   1952b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1952f:	90                   	nop

00019530 <instr_execute_2op>:
   19530:	57                   	push   %edi
   19531:	56                   	push   %esi
   19532:	53                   	push   %ebx
   19533:	e8 48 af fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19538:	81 c3 c8 5a 03 00    	add    $0x35ac8,%ebx
   1953e:	83 ec 0c             	sub    $0xc,%esp
   19541:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   19547:	57                   	push   %edi
   19548:	e8 93 8e ff ff       	call   123e0 <operand_read>
   1954d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   19553:	89 34 24             	mov    %esi,(%esp)
   19556:	e8 85 8e ff ff       	call   123e0 <operand_read>
   1955b:	8b 57 10             	mov    0x10(%edi),%edx
   1955e:	83 c4 10             	add    $0x10,%esp
   19561:	8b 47 0c             	mov    0xc(%edi),%eax
   19564:	8d 4a f8             	lea    -0x8(%edx),%ecx
   19567:	83 e1 f7             	and    $0xfffffff7,%ecx
   1956a:	74 05                	je     19571 <instr_execute_2op+0x41>
   1956c:	83 fa 20             	cmp    $0x20,%edx
   1956f:	75 6c                	jne    195dd <instr_execute_2op+0xad>
   19571:	83 fa 08             	cmp    $0x8,%edx
   19574:	74 5a                	je     195d0 <instr_execute_2op+0xa0>
   19576:	0f bf c8             	movswl %ax,%ecx
   19579:	83 fa 10             	cmp    $0x10,%edx
   1957c:	0f 44 c1             	cmove  %ecx,%eax
   1957f:	8b 4e 10             	mov    0x10(%esi),%ecx
   19582:	8b 56 0c             	mov    0xc(%esi),%edx
   19585:	89 47 0c             	mov    %eax,0xc(%edi)
   19588:	8d 79 f8             	lea    -0x8(%ecx),%edi
   1958b:	83 e7 f7             	and    $0xfffffff7,%edi
   1958e:	74 05                	je     19595 <instr_execute_2op+0x65>
   19590:	83 f9 20             	cmp    $0x20,%ecx
   19593:	75 48                	jne    195dd <instr_execute_2op+0xad>
   19595:	83 f9 08             	cmp    $0x8,%ecx
   19598:	74 3e                	je     195d8 <instr_execute_2op+0xa8>
   1959a:	0f bf fa             	movswl %dx,%edi
   1959d:	83 f9 10             	cmp    $0x10,%ecx
   195a0:	0f 44 d7             	cmove  %edi,%edx
   195a3:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   195a9:	83 ec 04             	sub    $0x4,%esp
   195ac:	89 56 0c             	mov    %edx,0xc(%esi)
   195af:	0f b6 09             	movzbl (%ecx),%ecx
   195b2:	51                   	push   %ecx
   195b3:	52                   	push   %edx
   195b4:	50                   	push   %eax
   195b5:	e8 86 64 ff ff       	call   fa40 <alu_xor>
   195ba:	89 34 24             	mov    %esi,(%esp)
   195bd:	89 46 0c             	mov    %eax,0xc(%esi)
   195c0:	e8 cb 8f ff ff       	call   12590 <operand_write>
   195c5:	83 c4 10             	add    $0x10,%esp
   195c8:	5b                   	pop    %ebx
   195c9:	5e                   	pop    %esi
   195ca:	5f                   	pop    %edi
   195cb:	c3                   	ret    
   195cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   195d0:	0f be c0             	movsbl %al,%eax
   195d3:	eb aa                	jmp    1957f <instr_execute_2op+0x4f>
   195d5:	8d 76 00             	lea    0x0(%esi),%esi
   195d8:	0f be d2             	movsbl %dl,%edx
   195db:	eb c6                	jmp    195a3 <instr_execute_2op+0x73>
   195dd:	e8 1e ff ff ff       	call   19500 <sign_ext.part.0>
   195e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   195e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000195f0 <xor_r2rm_b>:
   195f0:	55                   	push   %ebp
   195f1:	57                   	push   %edi
   195f2:	56                   	push   %esi
   195f3:	53                   	push   %ebx
   195f4:	e8 87 ae fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   195f9:	81 c3 07 5a 03 00    	add    $0x35a07,%ebx
   195ff:	83 ec 10             	sub    $0x10,%esp
   19602:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   19608:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1960e:	56                   	push   %esi
   1960f:	57                   	push   %edi
   19610:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   19614:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1961b:	83 c0 01             	add    $0x1,%eax
   1961e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   19625:	50                   	push   %eax
   19626:	e8 75 88 ff ff       	call   11ea0 <modrm_r_rm>
   1962b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1962e:	83 c4 10             	add    $0x10,%esp
   19631:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   19637:	8d 68 01             	lea    0x1(%eax),%ebp
   1963a:	89 e8                	mov    %ebp,%eax
   1963c:	0f b6 c0             	movzbl %al,%eax
   1963f:	83 f9 08             	cmp    $0x8,%ecx
   19642:	74 12                	je     19656 <xor_r2rm_b+0x66>
   19644:	83 f9 10             	cmp    $0x10,%ecx
   19647:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1964d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19653:	0f 45 d1             	cmovne %ecx,%edx
   19656:	83 ec 0c             	sub    $0xc,%esp
   19659:	56                   	push   %esi
   1965a:	57                   	push   %edi
   1965b:	50                   	push   %eax
   1965c:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   19662:	52                   	push   %edx
   19663:	50                   	push   %eax
   19664:	e8 37 8b ff ff       	call   121a0 <print_asm_2>
   19669:	83 c4 20             	add    $0x20,%esp
   1966c:	e8 bf fe ff ff       	call   19530 <instr_execute_2op>
   19671:	83 c4 0c             	add    $0xc,%esp
   19674:	89 e8                	mov    %ebp,%eax
   19676:	5b                   	pop    %ebx
   19677:	5e                   	pop    %esi
   19678:	5f                   	pop    %edi
   19679:	5d                   	pop    %ebp
   1967a:	c3                   	ret    
   1967b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1967f:	90                   	nop

00019680 <xor_r2rm_v>:
   19680:	55                   	push   %ebp
   19681:	57                   	push   %edi
   19682:	56                   	push   %esi
   19683:	53                   	push   %ebx
   19684:	e8 f7 ad fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19689:	81 c3 77 59 03 00    	add    $0x35977,%ebx
   1968f:	83 ec 10             	sub    $0x10,%esp
   19692:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19698:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1969e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   196a4:	0f b6 00             	movzbl (%eax),%eax
   196a7:	56                   	push   %esi
   196a8:	57                   	push   %edi
   196a9:	89 46 10             	mov    %eax,0x10(%esi)
   196ac:	89 47 10             	mov    %eax,0x10(%edi)
   196af:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   196b3:	83 c0 01             	add    $0x1,%eax
   196b6:	50                   	push   %eax
   196b7:	e8 e4 87 ff ff       	call   11ea0 <modrm_r_rm>
   196bc:	8b 4e 10             	mov    0x10(%esi),%ecx
   196bf:	83 c4 10             	add    $0x10,%esp
   196c2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   196c8:	8d 68 01             	lea    0x1(%eax),%ebp
   196cb:	89 e8                	mov    %ebp,%eax
   196cd:	0f b6 c0             	movzbl %al,%eax
   196d0:	83 f9 08             	cmp    $0x8,%ecx
   196d3:	74 12                	je     196e7 <xor_r2rm_v+0x67>
   196d5:	83 f9 10             	cmp    $0x10,%ecx
   196d8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   196de:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   196e4:	0f 45 d1             	cmovne %ecx,%edx
   196e7:	83 ec 0c             	sub    $0xc,%esp
   196ea:	56                   	push   %esi
   196eb:	57                   	push   %edi
   196ec:	50                   	push   %eax
   196ed:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   196f3:	52                   	push   %edx
   196f4:	50                   	push   %eax
   196f5:	e8 a6 8a ff ff       	call   121a0 <print_asm_2>
   196fa:	83 c4 20             	add    $0x20,%esp
   196fd:	e8 2e fe ff ff       	call   19530 <instr_execute_2op>
   19702:	83 c4 0c             	add    $0xc,%esp
   19705:	89 e8                	mov    %ebp,%eax
   19707:	5b                   	pop    %ebx
   19708:	5e                   	pop    %esi
   19709:	5f                   	pop    %edi
   1970a:	5d                   	pop    %ebp
   1970b:	c3                   	ret    
   1970c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00019710 <xor_rm2r_b>:
   19710:	55                   	push   %ebp
   19711:	57                   	push   %edi
   19712:	56                   	push   %esi
   19713:	53                   	push   %ebx
   19714:	e8 67 ad fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19719:	81 c3 e7 58 03 00    	add    $0x358e7,%ebx
   1971f:	83 ec 10             	sub    $0x10,%esp
   19722:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   19728:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1972e:	57                   	push   %edi
   1972f:	56                   	push   %esi
   19730:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   19734:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1973b:	83 c0 01             	add    $0x1,%eax
   1973e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   19745:	50                   	push   %eax
   19746:	e8 55 87 ff ff       	call   11ea0 <modrm_r_rm>
   1974b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1974e:	83 c4 10             	add    $0x10,%esp
   19751:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   19757:	8d 68 01             	lea    0x1(%eax),%ebp
   1975a:	89 e8                	mov    %ebp,%eax
   1975c:	0f b6 c0             	movzbl %al,%eax
   1975f:	83 f9 08             	cmp    $0x8,%ecx
   19762:	74 12                	je     19776 <xor_rm2r_b+0x66>
   19764:	83 f9 10             	cmp    $0x10,%ecx
   19767:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1976d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19773:	0f 45 d1             	cmovne %ecx,%edx
   19776:	83 ec 0c             	sub    $0xc,%esp
   19779:	56                   	push   %esi
   1977a:	57                   	push   %edi
   1977b:	50                   	push   %eax
   1977c:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   19782:	52                   	push   %edx
   19783:	50                   	push   %eax
   19784:	e8 17 8a ff ff       	call   121a0 <print_asm_2>
   19789:	83 c4 20             	add    $0x20,%esp
   1978c:	e8 9f fd ff ff       	call   19530 <instr_execute_2op>
   19791:	83 c4 0c             	add    $0xc,%esp
   19794:	89 e8                	mov    %ebp,%eax
   19796:	5b                   	pop    %ebx
   19797:	5e                   	pop    %esi
   19798:	5f                   	pop    %edi
   19799:	5d                   	pop    %ebp
   1979a:	c3                   	ret    
   1979b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1979f:	90                   	nop

000197a0 <xor_rm2r_v>:
   197a0:	55                   	push   %ebp
   197a1:	57                   	push   %edi
   197a2:	56                   	push   %esi
   197a3:	53                   	push   %ebx
   197a4:	e8 d7 ac fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   197a9:	81 c3 57 58 03 00    	add    $0x35857,%ebx
   197af:	83 ec 10             	sub    $0x10,%esp
   197b2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   197b8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   197be:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   197c4:	0f b6 00             	movzbl (%eax),%eax
   197c7:	57                   	push   %edi
   197c8:	89 46 10             	mov    %eax,0x10(%esi)
   197cb:	56                   	push   %esi
   197cc:	89 47 10             	mov    %eax,0x10(%edi)
   197cf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   197d3:	83 c0 01             	add    $0x1,%eax
   197d6:	50                   	push   %eax
   197d7:	e8 c4 86 ff ff       	call   11ea0 <modrm_r_rm>
   197dc:	8b 4e 10             	mov    0x10(%esi),%ecx
   197df:	83 c4 10             	add    $0x10,%esp
   197e2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   197e8:	8d 68 01             	lea    0x1(%eax),%ebp
   197eb:	89 e8                	mov    %ebp,%eax
   197ed:	0f b6 c0             	movzbl %al,%eax
   197f0:	83 f9 08             	cmp    $0x8,%ecx
   197f3:	74 12                	je     19807 <xor_rm2r_v+0x67>
   197f5:	83 f9 10             	cmp    $0x10,%ecx
   197f8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   197fe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19804:	0f 45 d1             	cmovne %ecx,%edx
   19807:	83 ec 0c             	sub    $0xc,%esp
   1980a:	56                   	push   %esi
   1980b:	57                   	push   %edi
   1980c:	50                   	push   %eax
   1980d:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   19813:	52                   	push   %edx
   19814:	50                   	push   %eax
   19815:	e8 86 89 ff ff       	call   121a0 <print_asm_2>
   1981a:	83 c4 20             	add    $0x20,%esp
   1981d:	e8 0e fd ff ff       	call   19530 <instr_execute_2op>
   19822:	83 c4 0c             	add    $0xc,%esp
   19825:	89 e8                	mov    %ebp,%eax
   19827:	5b                   	pop    %ebx
   19828:	5e                   	pop    %esi
   19829:	5f                   	pop    %edi
   1982a:	5d                   	pop    %ebp
   1982b:	c3                   	ret    
   1982c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00019830 <xor_i2a_b>:
   19830:	53                   	push   %ebx
   19831:	e8 4a ac fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19836:	81 c3 ca 57 03 00    	add    $0x357ca,%ebx
   1983c:	83 ec 14             	sub    $0x14,%esp
   1983f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   19843:	83 c1 01             	add    $0x1,%ecx
   19846:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1984c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   19852:	89 48 04             	mov    %ecx,0x4(%eax)
   19855:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1985c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   19863:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   19869:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1986d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   19873:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1987a:	52                   	push   %edx
   1987b:	50                   	push   %eax
   1987c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   19882:	6a 02                	push   $0x2
   19884:	50                   	push   %eax
   19885:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   1988b:	50                   	push   %eax
   1988c:	e8 0f 89 ff ff       	call   121a0 <print_asm_2>
   19891:	83 c4 20             	add    $0x20,%esp
   19894:	e8 97 fc ff ff       	call   19530 <instr_execute_2op>
   19899:	83 c4 08             	add    $0x8,%esp
   1989c:	b8 02 00 00 00       	mov    $0x2,%eax
   198a1:	5b                   	pop    %ebx
   198a2:	c3                   	ret    
   198a3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   198aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000198b0 <xor_i2a_v>:
   198b0:	55                   	push   %ebp
   198b1:	57                   	push   %edi
   198b2:	56                   	push   %esi
   198b3:	53                   	push   %ebx
   198b4:	e8 c7 ab fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   198b9:	81 c3 47 57 03 00    	add    $0x35747,%ebx
   198bf:	83 ec 0c             	sub    $0xc,%esp
   198c2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   198c8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   198ce:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   198d4:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   198da:	0f b6 08             	movzbl (%eax),%ecx
   198dd:	8b 44 24 20          	mov    0x20(%esp),%eax
   198e1:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   198e7:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   198eb:	89 cf                	mov    %ecx,%edi
   198ed:	83 c0 01             	add    $0x1,%eax
   198f0:	89 4d 10             	mov    %ecx,0x10(%ebp)
   198f3:	c1 ef 03             	shr    $0x3,%edi
   198f6:	89 4a 10             	mov    %ecx,0x10(%edx)
   198f9:	89 42 04             	mov    %eax,0x4(%edx)
   198fc:	83 c7 01             	add    $0x1,%edi
   198ff:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   19906:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1990d:	83 f9 08             	cmp    $0x8,%ecx
   19910:	74 12                	je     19924 <xor_i2a_v+0x74>
   19912:	83 f9 10             	cmp    $0x10,%ecx
   19915:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1991b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   19921:	0f 45 f0             	cmovne %eax,%esi
   19924:	83 ec 0c             	sub    $0xc,%esp
   19927:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   1992d:	55                   	push   %ebp
   1992e:	52                   	push   %edx
   1992f:	57                   	push   %edi
   19930:	56                   	push   %esi
   19931:	50                   	push   %eax
   19932:	e8 69 88 ff ff       	call   121a0 <print_asm_2>
   19937:	83 c4 20             	add    $0x20,%esp
   1993a:	e8 f1 fb ff ff       	call   19530 <instr_execute_2op>
   1993f:	83 c4 0c             	add    $0xc,%esp
   19942:	89 f8                	mov    %edi,%eax
   19944:	5b                   	pop    %ebx
   19945:	5e                   	pop    %esi
   19946:	5f                   	pop    %edi
   19947:	5d                   	pop    %ebp
   19948:	c3                   	ret    
   19949:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00019950 <xor_i2rm_b>:
   19950:	55                   	push   %ebp
   19951:	57                   	push   %edi
   19952:	56                   	push   %esi
   19953:	53                   	push   %ebx
   19954:	e8 27 ab fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19959:	81 c3 a7 56 03 00    	add    $0x356a7,%ebx
   1995f:	83 ec 24             	sub    $0x24,%esp
   19962:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   19966:	8d 45 01             	lea    0x1(%ebp),%eax
   19969:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1996f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   19975:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1997c:	52                   	push   %edx
   1997d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   19984:	89 54 24 18          	mov    %edx,0x18(%esp)
   19988:	50                   	push   %eax
   19989:	e8 f2 85 ff ff       	call   11f80 <modrm_rm>
   1998e:	8b 77 10             	mov    0x10(%edi),%esi
   19991:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   19995:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   19999:	83 c0 01             	add    $0x1,%eax
   1999c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   199a2:	83 c4 10             	add    $0x10,%esp
   199a5:	01 c5                	add    %eax,%ebp
   199a7:	c1 ee 03             	shr    $0x3,%esi
   199aa:	89 6f 04             	mov    %ebp,0x4(%edi)
   199ad:	01 c6                	add    %eax,%esi
   199af:	8b 6a 10             	mov    0x10(%edx),%ebp
   199b2:	89 f0                	mov    %esi,%eax
   199b4:	0f b6 c8             	movzbl %al,%ecx
   199b7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   199bd:	83 fd 08             	cmp    $0x8,%ebp
   199c0:	74 12                	je     199d4 <xor_i2rm_b+0x84>
   199c2:	83 fd 10             	cmp    $0x10,%ebp
   199c5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   199cb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   199d1:	0f 45 c5             	cmovne %ebp,%eax
   199d4:	83 ec 0c             	sub    $0xc,%esp
   199d7:	52                   	push   %edx
   199d8:	57                   	push   %edi
   199d9:	51                   	push   %ecx
   199da:	50                   	push   %eax
   199db:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   199e1:	50                   	push   %eax
   199e2:	e8 b9 87 ff ff       	call   121a0 <print_asm_2>
   199e7:	83 c4 20             	add    $0x20,%esp
   199ea:	e8 41 fb ff ff       	call   19530 <instr_execute_2op>
   199ef:	83 c4 1c             	add    $0x1c,%esp
   199f2:	89 f0                	mov    %esi,%eax
   199f4:	5b                   	pop    %ebx
   199f5:	5e                   	pop    %esi
   199f6:	5f                   	pop    %edi
   199f7:	5d                   	pop    %ebp
   199f8:	c3                   	ret    
   199f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00019a00 <xor_i2rm_v>:
   19a00:	55                   	push   %ebp
   19a01:	57                   	push   %edi
   19a02:	56                   	push   %esi
   19a03:	53                   	push   %ebx
   19a04:	e8 77 aa fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19a09:	81 c3 f7 55 03 00    	add    $0x355f7,%ebx
   19a0f:	83 ec 24             	sub    $0x24,%esp
   19a12:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   19a16:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19a1c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   19a22:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   19a28:	0f b6 00             	movzbl (%eax),%eax
   19a2b:	89 42 10             	mov    %eax,0x10(%edx)
   19a2e:	52                   	push   %edx
   19a2f:	89 47 10             	mov    %eax,0x10(%edi)
   19a32:	8d 45 01             	lea    0x1(%ebp),%eax
   19a35:	89 54 24 18          	mov    %edx,0x18(%esp)
   19a39:	50                   	push   %eax
   19a3a:	e8 41 85 ff ff       	call   11f80 <modrm_rm>
   19a3f:	8b 77 10             	mov    0x10(%edi),%esi
   19a42:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   19a46:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   19a4a:	83 c0 01             	add    $0x1,%eax
   19a4d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   19a53:	83 c4 10             	add    $0x10,%esp
   19a56:	01 c5                	add    %eax,%ebp
   19a58:	c1 ee 03             	shr    $0x3,%esi
   19a5b:	89 6f 04             	mov    %ebp,0x4(%edi)
   19a5e:	01 c6                	add    %eax,%esi
   19a60:	8b 6a 10             	mov    0x10(%edx),%ebp
   19a63:	89 f0                	mov    %esi,%eax
   19a65:	0f b6 c8             	movzbl %al,%ecx
   19a68:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   19a6e:	83 fd 08             	cmp    $0x8,%ebp
   19a71:	74 12                	je     19a85 <xor_i2rm_v+0x85>
   19a73:	83 fd 10             	cmp    $0x10,%ebp
   19a76:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   19a7c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   19a82:	0f 45 c5             	cmovne %ebp,%eax
   19a85:	83 ec 0c             	sub    $0xc,%esp
   19a88:	52                   	push   %edx
   19a89:	57                   	push   %edi
   19a8a:	51                   	push   %ecx
   19a8b:	50                   	push   %eax
   19a8c:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   19a92:	50                   	push   %eax
   19a93:	e8 08 87 ff ff       	call   121a0 <print_asm_2>
   19a98:	83 c4 20             	add    $0x20,%esp
   19a9b:	e8 90 fa ff ff       	call   19530 <instr_execute_2op>
   19aa0:	83 c4 1c             	add    $0x1c,%esp
   19aa3:	89 f0                	mov    %esi,%eax
   19aa5:	5b                   	pop    %ebx
   19aa6:	5e                   	pop    %esi
   19aa7:	5f                   	pop    %edi
   19aa8:	5d                   	pop    %ebp
   19aa9:	c3                   	ret    
   19aaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00019ab0 <xor_i2rm_bv>:
   19ab0:	55                   	push   %ebp
   19ab1:	57                   	push   %edi
   19ab2:	56                   	push   %esi
   19ab3:	53                   	push   %ebx
   19ab4:	e8 c7 a9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19ab9:	81 c3 47 55 03 00    	add    $0x35547,%ebx
   19abf:	83 ec 24             	sub    $0x24,%esp
   19ac2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   19ac6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19acc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   19ad2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   19ad8:	0f b6 00             	movzbl (%eax),%eax
   19adb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   19ae2:	89 42 10             	mov    %eax,0x10(%edx)
   19ae5:	8d 45 01             	lea    0x1(%ebp),%eax
   19ae8:	52                   	push   %edx
   19ae9:	89 54 24 18          	mov    %edx,0x18(%esp)
   19aed:	50                   	push   %eax
   19aee:	e8 8d 84 ff ff       	call   11f80 <modrm_rm>
   19af3:	8b 77 10             	mov    0x10(%edi),%esi
   19af6:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   19afa:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   19afe:	83 c0 01             	add    $0x1,%eax
   19b01:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   19b07:	83 c4 10             	add    $0x10,%esp
   19b0a:	01 c5                	add    %eax,%ebp
   19b0c:	c1 ee 03             	shr    $0x3,%esi
   19b0f:	89 6f 04             	mov    %ebp,0x4(%edi)
   19b12:	01 c6                	add    %eax,%esi
   19b14:	8b 6a 10             	mov    0x10(%edx),%ebp
   19b17:	89 f0                	mov    %esi,%eax
   19b19:	0f b6 c8             	movzbl %al,%ecx
   19b1c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   19b22:	83 fd 08             	cmp    $0x8,%ebp
   19b25:	74 12                	je     19b39 <xor_i2rm_bv+0x89>
   19b27:	83 fd 10             	cmp    $0x10,%ebp
   19b2a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   19b30:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   19b36:	0f 45 c5             	cmovne %ebp,%eax
   19b39:	83 ec 0c             	sub    $0xc,%esp
   19b3c:	52                   	push   %edx
   19b3d:	57                   	push   %edi
   19b3e:	51                   	push   %ecx
   19b3f:	50                   	push   %eax
   19b40:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   19b46:	50                   	push   %eax
   19b47:	e8 54 86 ff ff       	call   121a0 <print_asm_2>
   19b4c:	83 c4 20             	add    $0x20,%esp
   19b4f:	e8 dc f9 ff ff       	call   19530 <instr_execute_2op>
   19b54:	83 c4 1c             	add    $0x1c,%esp
   19b57:	89 f0                	mov    %esi,%eax
   19b59:	5b                   	pop    %ebx
   19b5a:	5e                   	pop    %esi
   19b5b:	5f                   	pop    %edi
   19b5c:	5d                   	pop    %ebp
   19b5d:	c3                   	ret    
   19b5e:	66 90                	xchg   %ax,%ax

00019b60 <nemu_trap>:
   19b60:	55                   	push   %ebp
   19b61:	57                   	push   %edi
   19b62:	56                   	push   %esi
   19b63:	53                   	push   %ebx
   19b64:	e8 17 a9 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19b69:	81 c3 97 54 03 00    	add    $0x35497,%ebx
   19b6f:	83 ec 0c             	sub    $0xc,%esp
   19b72:	8d ab 60 32 05 00    	lea    0x53260(%ebx),%ebp
   19b78:	8b 45 00             	mov    0x0(%ebp),%eax
   19b7b:	83 f8 04             	cmp    $0x4,%eax
   19b7e:	74 60                	je     19be0 <nemu_trap+0x80>
   19b80:	83 f8 6e             	cmp    $0x6e,%eax
   19b83:	74 41                	je     19bc6 <nemu_trap+0x66>
   19b85:	85 c0                	test   %eax,%eax
   19b87:	8d 93 d5 67 fe ff    	lea    -0x1982b(%ebx),%edx
   19b8d:	8d 83 c5 67 fe ff    	lea    -0x1983b(%ebx),%eax
   19b93:	0f 45 c2             	cmovne %edx,%eax
   19b96:	83 ec 04             	sub    $0x4,%esp
   19b99:	ff 74 24 24          	pushl  0x24(%esp)
   19b9d:	50                   	push   %eax
   19b9e:	8d 83 04 68 fe ff    	lea    -0x197fc(%ebx),%eax
   19ba4:	50                   	push   %eax
   19ba5:	e8 b6 a6 fe ff       	call   4260 <printf@plt>
   19baa:	e8 51 0c 01 00       	call   2a800 <get_ref>
   19baf:	83 c4 10             	add    $0x10,%esp
   19bb2:	85 c0                	test   %eax,%eax
   19bb4:	0f 85 86 00 00 00    	jne    19c40 <nemu_trap+0xe0>
   19bba:	8d 83 04 33 05 00    	lea    0x53304(%ebx),%eax
   19bc0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   19bc6:	e8 d5 0d 01 00       	call   2a9a0 <score_trap>
   19bcb:	83 c4 0c             	add    $0xc,%esp
   19bce:	b8 01 00 00 00       	mov    $0x1,%eax
   19bd3:	5b                   	pop    %ebx
   19bd4:	5e                   	pop    %esi
   19bd5:	5f                   	pop    %edi
   19bd6:	5d                   	pop    %ebp
   19bd7:	c3                   	ret    
   19bd8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19bdf:	90                   	nop
   19be0:	83 ec 0c             	sub    $0xc,%esp
   19be3:	8d 83 e4 67 fe ff    	lea    -0x1981c(%ebx),%eax
   19be9:	31 f6                	xor    %esi,%esi
   19beb:	50                   	push   %eax
   19bec:	e8 6f a6 fe ff       	call   4260 <printf@plt>
   19bf1:	8b 45 08             	mov    0x8(%ebp),%eax
   19bf4:	83 c4 10             	add    $0x10,%esp
   19bf7:	8b bb d0 ff ff ff    	mov    -0x30(%ebx),%edi
   19bfd:	85 c0                	test   %eax,%eax
   19bff:	74 ca                	je     19bcb <nemu_trap+0x6b>
   19c01:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19c08:	8b 45 04             	mov    0x4(%ebp),%eax
   19c0b:	83 ec 04             	sub    $0x4,%esp
   19c0e:	6a 01                	push   $0x1
   19c10:	01 f0                	add    %esi,%eax
   19c12:	6a 03                	push   $0x3
   19c14:	83 c6 01             	add    $0x1,%esi
   19c17:	50                   	push   %eax
   19c18:	e8 53 4f 00 00       	call   1eb70 <vaddr_read>
   19c1d:	5a                   	pop    %edx
   19c1e:	59                   	pop    %ecx
   19c1f:	ff 37                	pushl  (%edi)
   19c21:	0f be c0             	movsbl %al,%eax
   19c24:	50                   	push   %eax
   19c25:	e8 36 a4 fe ff       	call   4060 <putc@plt>
   19c2a:	83 c4 10             	add    $0x10,%esp
   19c2d:	39 75 08             	cmp    %esi,0x8(%ebp)
   19c30:	77 d6                	ja     19c08 <nemu_trap+0xa8>
   19c32:	83 c4 0c             	add    $0xc,%esp
   19c35:	b8 01 00 00 00       	mov    $0x1,%eax
   19c3a:	5b                   	pop    %ebx
   19c3b:	5e                   	pop    %esi
   19c3c:	5f                   	pop    %edi
   19c3d:	5d                   	pop    %ebp
   19c3e:	c3                   	ret    
   19c3f:	90                   	nop
   19c40:	83 ec 0c             	sub    $0xc,%esp
   19c43:	8d 83 28 68 fe ff    	lea    -0x197d8(%ebx),%eax
   19c49:	50                   	push   %eax
   19c4a:	e8 61 a6 fe ff       	call   42b0 <puts@plt>
   19c4f:	8d 83 04 33 05 00    	lea    0x53304(%ebx),%eax
   19c55:	83 c4 10             	add    $0x10,%esp
   19c58:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   19c5e:	e9 63 ff ff ff       	jmp    19bc6 <nemu_trap+0x66>
   19c63:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19c6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00019c70 <break_point>:
   19c70:	53                   	push   %ebx
   19c71:	e8 0a a8 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19c76:	81 c3 8a 53 03 00    	add    $0x3538a,%ebx
   19c7c:	83 ec 10             	sub    $0x10,%esp
   19c7f:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   19c85:	ff 70 20             	pushl  0x20(%eax)
   19c88:	8d 83 78 68 fe ff    	lea    -0x19788(%ebx),%eax
   19c8e:	50                   	push   %eax
   19c8f:	e8 cc a5 fe ff       	call   4260 <printf@plt>
   19c94:	8d 83 04 33 05 00    	lea    0x53304(%ebx),%eax
   19c9a:	c7 00 03 00 00 00    	movl   $0x3,(%eax)
   19ca0:	83 c4 18             	add    $0x18,%esp
   19ca3:	b8 01 00 00 00       	mov    $0x1,%eax
   19ca8:	5b                   	pop    %ebx
   19ca9:	c3                   	ret    
   19caa:	66 90                	xchg   %ax,%ax
   19cac:	66 90                	xchg   %ax,%ax
   19cae:	66 90                	xchg   %ax,%ax

00019cb0 <instr_execute_1op>:
   19cb0:	56                   	push   %esi
   19cb1:	53                   	push   %ebx
   19cb2:	e8 c9 a7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19cb7:	81 c3 49 53 03 00    	add    $0x35349,%ebx
   19cbd:	83 ec 10             	sub    $0x10,%esp
   19cc0:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   19cc6:	56                   	push   %esi
   19cc7:	e8 14 87 ff ff       	call   123e0 <operand_read>
   19ccc:	89 34 24             	mov    %esi,(%esp)
   19ccf:	f7 56 0c             	notl   0xc(%esi)
   19cd2:	e8 b9 88 ff ff       	call   12590 <operand_write>
   19cd7:	83 c4 14             	add    $0x14,%esp
   19cda:	5b                   	pop    %ebx
   19cdb:	5e                   	pop    %esi
   19cdc:	c3                   	ret    
   19cdd:	8d 76 00             	lea    0x0(%esi),%esi

00019ce0 <not_rm_b>:
   19ce0:	55                   	push   %ebp
   19ce1:	57                   	push   %edi
   19ce2:	56                   	push   %esi
   19ce3:	53                   	push   %ebx
   19ce4:	e8 97 a7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19ce9:	81 c3 17 53 03 00    	add    $0x35317,%ebx
   19cef:	83 ec 14             	sub    $0x14,%esp
   19cf2:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   19cf8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   19cfe:	56                   	push   %esi
   19cff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   19d03:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   19d0a:	83 c0 01             	add    $0x1,%eax
   19d0d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   19d14:	50                   	push   %eax
   19d15:	e8 66 82 ff ff       	call   11f80 <modrm_rm>
   19d1a:	8b 4d 10             	mov    0x10(%ebp),%ecx
   19d1d:	83 c4 10             	add    $0x10,%esp
   19d20:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   19d26:	8d 78 01             	lea    0x1(%eax),%edi
   19d29:	89 f8                	mov    %edi,%eax
   19d2b:	0f b6 c0             	movzbl %al,%eax
   19d2e:	83 f9 08             	cmp    $0x8,%ecx
   19d31:	74 12                	je     19d45 <not_rm_b+0x65>
   19d33:	83 f9 10             	cmp    $0x10,%ecx
   19d36:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   19d3c:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19d42:	0f 45 d1             	cmovne %ecx,%edx
   19d45:	56                   	push   %esi
   19d46:	50                   	push   %eax
   19d47:	8d 83 98 68 fe ff    	lea    -0x19768(%ebx),%eax
   19d4d:	52                   	push   %edx
   19d4e:	50                   	push   %eax
   19d4f:	e8 4c 83 ff ff       	call   120a0 <print_asm_1>
   19d54:	e8 57 ff ff ff       	call   19cb0 <instr_execute_1op>
   19d59:	83 c4 1c             	add    $0x1c,%esp
   19d5c:	89 f8                	mov    %edi,%eax
   19d5e:	5b                   	pop    %ebx
   19d5f:	5e                   	pop    %esi
   19d60:	5f                   	pop    %edi
   19d61:	5d                   	pop    %ebp
   19d62:	c3                   	ret    
   19d63:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19d6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00019d70 <not_rm_v>:
   19d70:	55                   	push   %ebp
   19d71:	57                   	push   %edi
   19d72:	56                   	push   %esi
   19d73:	53                   	push   %ebx
   19d74:	e8 07 a7 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19d79:	81 c3 87 52 03 00    	add    $0x35287,%ebx
   19d7f:	83 ec 14             	sub    $0x14,%esp
   19d82:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19d88:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   19d8e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   19d94:	0f b6 00             	movzbl (%eax),%eax
   19d97:	56                   	push   %esi
   19d98:	89 45 10             	mov    %eax,0x10(%ebp)
   19d9b:	89 46 10             	mov    %eax,0x10(%esi)
   19d9e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   19da2:	83 c0 01             	add    $0x1,%eax
   19da5:	50                   	push   %eax
   19da6:	e8 d5 81 ff ff       	call   11f80 <modrm_rm>
   19dab:	8b 4d 10             	mov    0x10(%ebp),%ecx
   19dae:	83 c4 10             	add    $0x10,%esp
   19db1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   19db7:	8d 78 01             	lea    0x1(%eax),%edi
   19dba:	89 f8                	mov    %edi,%eax
   19dbc:	0f b6 c0             	movzbl %al,%eax
   19dbf:	83 f9 08             	cmp    $0x8,%ecx
   19dc2:	74 12                	je     19dd6 <not_rm_v+0x66>
   19dc4:	83 f9 10             	cmp    $0x10,%ecx
   19dc7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   19dcd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   19dd3:	0f 45 d1             	cmovne %ecx,%edx
   19dd6:	56                   	push   %esi
   19dd7:	50                   	push   %eax
   19dd8:	8d 83 98 68 fe ff    	lea    -0x19768(%ebx),%eax
   19dde:	52                   	push   %edx
   19ddf:	50                   	push   %eax
   19de0:	e8 bb 82 ff ff       	call   120a0 <print_asm_1>
   19de5:	e8 c6 fe ff ff       	call   19cb0 <instr_execute_1op>
   19dea:	83 c4 1c             	add    $0x1c,%esp
   19ded:	89 f8                	mov    %edi,%eax
   19def:	5b                   	pop    %ebx
   19df0:	5e                   	pop    %esi
   19df1:	5f                   	pop    %edi
   19df2:	5d                   	pop    %ebp
   19df3:	c3                   	ret    
   19df4:	66 90                	xchg   %ax,%ax
   19df6:	66 90                	xchg   %ax,%ax
   19df8:	66 90                	xchg   %ax,%ax
   19dfa:	66 90                	xchg   %ax,%ax
   19dfc:	66 90                	xchg   %ax,%ax
   19dfe:	66 90                	xchg   %ax,%ax

00019e00 <inv>:
   19e00:	57                   	push   %edi
   19e01:	56                   	push   %esi
   19e02:	53                   	push   %ebx
   19e03:	8b 7c 24 10          	mov    0x10(%esp),%edi
   19e07:	e8 74 a6 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19e0c:	81 c3 f4 51 03 00    	add    $0x351f4,%ebx
   19e12:	83 ec 08             	sub    $0x8,%esp
   19e15:	6a 04                	push   $0x4
   19e17:	57                   	push   %edi
   19e18:	e8 83 4e 00 00       	call   1eca0 <instr_fetch>
   19e1d:	89 c6                	mov    %eax,%esi
   19e1f:	58                   	pop    %eax
   19e20:	8d 47 04             	lea    0x4(%edi),%eax
   19e23:	5a                   	pop    %edx
   19e24:	6a 04                	push   $0x4
   19e26:	50                   	push   %eax
   19e27:	e8 74 4e 00 00       	call   1eca0 <instr_fetch>
   19e2c:	59                   	pop    %ecx
   19e2d:	5a                   	pop    %edx
   19e2e:	89 c2                	mov    %eax,%edx
   19e30:	c1 ea 18             	shr    $0x18,%edx
   19e33:	52                   	push   %edx
   19e34:	89 c2                	mov    %eax,%edx
   19e36:	c1 ea 10             	shr    $0x10,%edx
   19e39:	0f b6 d2             	movzbl %dl,%edx
   19e3c:	52                   	push   %edx
   19e3d:	0f b6 d4             	movzbl %ah,%edx
   19e40:	0f b6 c0             	movzbl %al,%eax
   19e43:	52                   	push   %edx
   19e44:	50                   	push   %eax
   19e45:	89 f0                	mov    %esi,%eax
   19e47:	c1 e8 18             	shr    $0x18,%eax
   19e4a:	50                   	push   %eax
   19e4b:	89 f0                	mov    %esi,%eax
   19e4d:	c1 e8 10             	shr    $0x10,%eax
   19e50:	0f b6 c0             	movzbl %al,%eax
   19e53:	50                   	push   %eax
   19e54:	89 f0                	mov    %esi,%eax
   19e56:	0f b6 c4             	movzbl %ah,%eax
   19e59:	50                   	push   %eax
   19e5a:	89 f0                	mov    %esi,%eax
   19e5c:	0f b6 f0             	movzbl %al,%esi
   19e5f:	8d 83 9c 68 fe ff    	lea    -0x19764(%ebx),%eax
   19e65:	56                   	push   %esi
   19e66:	57                   	push   %edi
   19e67:	50                   	push   %eax
   19e68:	e8 f3 a3 fe ff       	call   4260 <printf@plt>
   19e6d:	83 c4 28             	add    $0x28,%esp
   19e70:	8d 83 e8 68 fe ff    	lea    -0x19718(%ebx),%eax
   19e76:	57                   	push   %edi
   19e77:	50                   	push   %eax
   19e78:	e8 e3 a3 fe ff       	call   4260 <printf@plt>
   19e7d:	8d 83 8c 69 fe ff    	lea    -0x19674(%ebx),%eax
   19e83:	59                   	pop    %ecx
   19e84:	5e                   	pop    %esi
   19e85:	57                   	push   %edi
   19e86:	50                   	push   %eax
   19e87:	e8 d4 a3 fe ff       	call   4260 <printf@plt>
   19e8c:	5f                   	pop    %edi
   19e8d:	58                   	pop    %eax
   19e8e:	8d 83 e0 1c 00 00    	lea    0x1ce0(%ebx),%eax
   19e94:	50                   	push   %eax
   19e95:	8d 83 e8 69 fe ff    	lea    -0x19618(%ebx),%eax
   19e9b:	50                   	push   %eax
   19e9c:	e8 bf a3 fe ff       	call   4260 <printf@plt>
   19ea1:	8d 83 b0 6a fe ff    	lea    -0x19550(%ebx),%eax
   19ea7:	50                   	push   %eax
   19ea8:	8d 83 9a 6a fe ff    	lea    -0x19566(%ebx),%eax
   19eae:	6a 3b                	push   $0x3b
   19eb0:	50                   	push   %eax
   19eb1:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   19eb7:	50                   	push   %eax
   19eb8:	e8 53 a4 fe ff       	call   4310 <__assert_fail@plt>
   19ebd:	66 90                	xchg   %ax,%ax
   19ebf:	90                   	nop

00019ec0 <data_size_16>:
   19ec0:	57                   	push   %edi
   19ec1:	56                   	push   %esi
   19ec2:	53                   	push   %ebx
   19ec3:	8b 44 24 10          	mov    0x10(%esp),%eax
   19ec7:	e8 b4 a5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19ecc:	81 c3 34 51 03 00    	add    $0x35134,%ebx
   19ed2:	8d 70 01             	lea    0x1(%eax),%esi
   19ed5:	83 ec 08             	sub    $0x8,%esp
   19ed8:	6a 01                	push   $0x1
   19eda:	56                   	push   %esi
   19edb:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   19ee1:	c6 07 10             	movb   $0x10,(%edi)
   19ee4:	e8 b7 4d 00 00       	call   1eca0 <instr_fetch>
   19ee9:	5a                   	pop    %edx
   19eea:	59                   	pop    %ecx
   19eeb:	0f b6 c0             	movzbl %al,%eax
   19eee:	8d 93 e0 18 00 00    	lea    0x18e0(%ebx),%edx
   19ef4:	50                   	push   %eax
   19ef5:	56                   	push   %esi
   19ef6:	ff 14 82             	call   *(%edx,%eax,4)
   19ef9:	c6 07 20             	movb   $0x20,(%edi)
   19efc:	83 c0 01             	add    $0x1,%eax
   19eff:	83 c4 10             	add    $0x10,%esp
   19f02:	5b                   	pop    %ebx
   19f03:	5e                   	pop    %esi
   19f04:	5f                   	pop    %edi
   19f05:	c3                   	ret    
   19f06:	66 90                	xchg   %ax,%ax
   19f08:	66 90                	xchg   %ax,%ax
   19f0a:	66 90                	xchg   %ax,%ax
   19f0c:	66 90                	xchg   %ax,%ax
   19f0e:	66 90                	xchg   %ax,%ax

00019f10 <lidt>:
   19f10:	55                   	push   %ebp
   19f11:	57                   	push   %edi
   19f12:	56                   	push   %esi
   19f13:	53                   	push   %ebx
   19f14:	e8 67 a5 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19f19:	81 c3 e7 50 03 00    	add    $0x350e7,%ebx
   19f1f:	83 ec 44             	sub    $0x44,%esp
   19f22:	8d 7c 24 14          	lea    0x14(%esp),%edi
   19f26:	57                   	push   %edi
   19f27:	8b 44 24 5c          	mov    0x5c(%esp),%eax
   19f2b:	83 c0 01             	add    $0x1,%eax
   19f2e:	50                   	push   %eax
   19f2f:	e8 4c 80 ff ff       	call   11f80 <modrm_rm>
   19f34:	89 3c 24             	mov    %edi,(%esp)
   19f37:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   19f3e:	00 
   19f3f:	8d 70 01             	lea    0x1(%eax),%esi
   19f42:	e8 99 84 ff ff       	call   123e0 <operand_read>
   19f47:	8b 44 24 28          	mov    0x28(%esp),%eax
   19f4b:	8d ab 60 32 05 00    	lea    0x53260(%ebx),%ebp
   19f51:	89 3c 24             	mov    %edi,(%esp)
   19f54:	83 44 24 20 02       	addl   $0x2,0x20(%esp)
   19f59:	c7 44 24 2c 20 00 00 	movl   $0x20,0x2c(%esp)
   19f60:	00 
   19f61:	66 89 85 98 00 00 00 	mov    %ax,0x98(%ebp)
   19f68:	e8 73 84 ff ff       	call   123e0 <operand_read>
   19f6d:	8b 44 24 28          	mov    0x28(%esp),%eax
   19f71:	57                   	push   %edi
   19f72:	89 85 9c 00 00 00    	mov    %eax,0x9c(%ebp)
   19f78:	89 f0                	mov    %esi,%eax
   19f7a:	0f b6 c0             	movzbl %al,%eax
   19f7d:	50                   	push   %eax
   19f7e:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   19f84:	50                   	push   %eax
   19f85:	8d 83 b4 6a fe ff    	lea    -0x1954c(%ebx),%eax
   19f8b:	50                   	push   %eax
   19f8c:	e8 0f 81 ff ff       	call   120a0 <print_asm_1>
   19f91:	83 c4 5c             	add    $0x5c,%esp
   19f94:	89 f0                	mov    %esi,%eax
   19f96:	5b                   	pop    %ebx
   19f97:	5e                   	pop    %esi
   19f98:	5f                   	pop    %edi
   19f99:	5d                   	pop    %ebp
   19f9a:	c3                   	ret    
   19f9b:	66 90                	xchg   %ax,%ax
   19f9d:	66 90                	xchg   %ax,%ax
   19f9f:	90                   	nop

00019fa0 <cbw_a_v>:
   19fa0:	56                   	push   %esi
   19fa1:	53                   	push   %ebx
   19fa2:	e8 d9 a4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   19fa7:	81 c3 59 50 03 00    	add    $0x35059,%ebx
   19fad:	83 ec 04             	sub    $0x4,%esp
   19fb0:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   19fb6:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   19fbc:	0f b6 10             	movzbl (%eax),%edx
   19fbf:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   19fc5:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   19fcb:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
   19fd2:	89 50 10             	mov    %edx,0x10(%eax)
   19fd5:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   19fdb:	89 56 10             	mov    %edx,0x10(%esi)
   19fde:	83 fa 08             	cmp    $0x8,%edx
   19fe1:	74 12                	je     19ff5 <cbw_a_v+0x55>
   19fe3:	83 fa 10             	cmp    $0x10,%edx
   19fe6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   19fec:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   19ff2:	0f 45 c2             	cmovne %edx,%eax
   19ff5:	56                   	push   %esi
   19ff6:	6a 01                	push   $0x1
   19ff8:	50                   	push   %eax
   19ff9:	8d 83 b9 6a fe ff    	lea    -0x19547(%ebx),%eax
   19fff:	50                   	push   %eax
   1a000:	e8 9b 80 ff ff       	call   120a0 <print_asm_1>
   1a005:	89 34 24             	mov    %esi,(%esp)
   1a008:	e8 d3 83 ff ff       	call   123e0 <operand_read>
   1a00d:	83 c4 10             	add    $0x10,%esp
   1a010:	83 7e 10 10          	cmpl   $0x10,0x10(%esi)
   1a014:	74 22                	je     1a038 <cbw_a_v+0x98>
   1a016:	0f bf 46 0c          	movswl 0xc(%esi),%eax
   1a01a:	83 ec 0c             	sub    $0xc,%esp
   1a01d:	89 46 0c             	mov    %eax,0xc(%esi)
   1a020:	56                   	push   %esi
   1a021:	e8 6a 85 ff ff       	call   12590 <operand_write>
   1a026:	83 c4 14             	add    $0x14,%esp
   1a029:	b8 01 00 00 00       	mov    $0x1,%eax
   1a02e:	5b                   	pop    %ebx
   1a02f:	5e                   	pop    %esi
   1a030:	c3                   	ret    
   1a031:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a038:	0f be 46 0c          	movsbl 0xc(%esi),%eax
   1a03c:	eb dc                	jmp    1a01a <cbw_a_v+0x7a>
   1a03e:	66 90                	xchg   %ax,%ax

0001a040 <instr_execute_1op>:
   1a040:	56                   	push   %esi
   1a041:	53                   	push   %ebx
   1a042:	e8 39 a4 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a047:	81 c3 b9 4f 03 00    	add    $0x34fb9,%ebx
   1a04d:	83 ec 10             	sub    $0x10,%esp
   1a050:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1a056:	56                   	push   %esi
   1a057:	e8 84 83 ff ff       	call   123e0 <operand_read>
   1a05c:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a062:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   1a068:	0f b6 00             	movzbl (%eax),%eax
   1a06b:	8b 51 10             	mov    0x10(%ecx),%edx
   1a06e:	c0 e8 03             	shr    $0x3,%al
   1a071:	0f b6 c0             	movzbl %al,%eax
   1a074:	29 c2                	sub    %eax,%edx
   1a076:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1a07c:	89 51 10             	mov    %edx,0x10(%ecx)
   1a07f:	89 50 04             	mov    %edx,0x4(%eax)
   1a082:	8b 56 0c             	mov    0xc(%esi),%edx
   1a085:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
   1a08b:	c6 40 08 03          	movb   $0x3,0x8(%eax)
   1a08f:	89 50 0c             	mov    %edx,0xc(%eax)
   1a092:	89 04 24             	mov    %eax,(%esp)
   1a095:	e8 f6 84 ff ff       	call   12590 <operand_write>
   1a09a:	83 c4 14             	add    $0x14,%esp
   1a09d:	5b                   	pop    %ebx
   1a09e:	5e                   	pop    %esi
   1a09f:	c3                   	ret    

0001a0a0 <push_r_v>:
   1a0a0:	53                   	push   %ebx
   1a0a1:	e8 da a3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a0a6:	81 c3 5a 4f 03 00    	add    $0x34f5a,%ebx
   1a0ac:	83 ec 08             	sub    $0x8,%esp
   1a0af:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a0b5:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1a0bb:	0f b6 08             	movzbl (%eax),%ecx
   1a0be:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1a0c4:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1a0ca:	89 48 10             	mov    %ecx,0x10(%eax)
   1a0cd:	8b 44 24 14          	mov    0x14(%esp),%eax
   1a0d1:	89 4a 10             	mov    %ecx,0x10(%edx)
   1a0d4:	83 e0 07             	and    $0x7,%eax
   1a0d7:	89 42 04             	mov    %eax,0x4(%edx)
   1a0da:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1a0e0:	83 f9 08             	cmp    $0x8,%ecx
   1a0e3:	74 12                	je     1a0f7 <push_r_v+0x57>
   1a0e5:	83 f9 10             	cmp    $0x10,%ecx
   1a0e8:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1a0ee:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1a0f4:	0f 45 c1             	cmovne %ecx,%eax
   1a0f7:	52                   	push   %edx
   1a0f8:	6a 01                	push   $0x1
   1a0fa:	50                   	push   %eax
   1a0fb:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   1a101:	50                   	push   %eax
   1a102:	e8 99 7f ff ff       	call   120a0 <print_asm_1>
   1a107:	e8 34 ff ff ff       	call   1a040 <instr_execute_1op>
   1a10c:	83 c4 18             	add    $0x18,%esp
   1a10f:	b8 01 00 00 00       	mov    $0x1,%eax
   1a114:	5b                   	pop    %ebx
   1a115:	c3                   	ret    
   1a116:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a11d:	8d 76 00             	lea    0x0(%esi),%esi

0001a120 <push_rm_v>:
   1a120:	55                   	push   %ebp
   1a121:	57                   	push   %edi
   1a122:	56                   	push   %esi
   1a123:	53                   	push   %ebx
   1a124:	e8 57 a3 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a129:	81 c3 d7 4e 03 00    	add    $0x34ed7,%ebx
   1a12f:	83 ec 14             	sub    $0x14,%esp
   1a132:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a138:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1a13e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1a144:	0f b6 00             	movzbl (%eax),%eax
   1a147:	56                   	push   %esi
   1a148:	89 45 10             	mov    %eax,0x10(%ebp)
   1a14b:	89 46 10             	mov    %eax,0x10(%esi)
   1a14e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1a152:	83 c0 01             	add    $0x1,%eax
   1a155:	50                   	push   %eax
   1a156:	e8 25 7e ff ff       	call   11f80 <modrm_rm>
   1a15b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1a15e:	83 c4 10             	add    $0x10,%esp
   1a161:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1a167:	8d 78 01             	lea    0x1(%eax),%edi
   1a16a:	89 f8                	mov    %edi,%eax
   1a16c:	0f b6 c0             	movzbl %al,%eax
   1a16f:	83 f9 08             	cmp    $0x8,%ecx
   1a172:	74 12                	je     1a186 <push_rm_v+0x66>
   1a174:	83 f9 10             	cmp    $0x10,%ecx
   1a177:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1a17d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1a183:	0f 45 d1             	cmovne %ecx,%edx
   1a186:	56                   	push   %esi
   1a187:	50                   	push   %eax
   1a188:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   1a18e:	52                   	push   %edx
   1a18f:	50                   	push   %eax
   1a190:	e8 0b 7f ff ff       	call   120a0 <print_asm_1>
   1a195:	e8 a6 fe ff ff       	call   1a040 <instr_execute_1op>
   1a19a:	83 c4 1c             	add    $0x1c,%esp
   1a19d:	89 f8                	mov    %edi,%eax
   1a19f:	5b                   	pop    %ebx
   1a1a0:	5e                   	pop    %esi
   1a1a1:	5f                   	pop    %edi
   1a1a2:	5d                   	pop    %ebp
   1a1a3:	c3                   	ret    
   1a1a4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a1ab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a1af:	90                   	nop

0001a1b0 <push_i_v>:
   1a1b0:	57                   	push   %edi
   1a1b1:	56                   	push   %esi
   1a1b2:	53                   	push   %ebx
   1a1b3:	e8 c8 a2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a1b8:	81 c3 48 4e 03 00    	add    $0x34e48,%ebx
   1a1be:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a1c4:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1a1ca:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   1a1d0:	0f b6 08             	movzbl (%eax),%ecx
   1a1d3:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1a1d9:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   1a1df:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1a1e3:	89 48 10             	mov    %ecx,0x10(%eax)
   1a1e6:	8b 44 24 10          	mov    0x10(%esp),%eax
   1a1ea:	89 cf                	mov    %ecx,%edi
   1a1ec:	c1 ef 03             	shr    $0x3,%edi
   1a1ef:	89 4a 10             	mov    %ecx,0x10(%edx)
   1a1f2:	83 c0 01             	add    $0x1,%eax
   1a1f5:	83 c7 01             	add    $0x1,%edi
   1a1f8:	89 42 04             	mov    %eax,0x4(%edx)
   1a1fb:	83 f9 08             	cmp    $0x8,%ecx
   1a1fe:	74 12                	je     1a212 <push_i_v+0x62>
   1a200:	83 f9 10             	cmp    $0x10,%ecx
   1a203:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1a209:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1a20f:	0f 45 f0             	cmovne %eax,%esi
   1a212:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   1a218:	52                   	push   %edx
   1a219:	57                   	push   %edi
   1a21a:	56                   	push   %esi
   1a21b:	50                   	push   %eax
   1a21c:	e8 7f 7e ff ff       	call   120a0 <print_asm_1>
   1a221:	e8 1a fe ff ff       	call   1a040 <instr_execute_1op>
   1a226:	83 c4 10             	add    $0x10,%esp
   1a229:	89 f8                	mov    %edi,%eax
   1a22b:	5b                   	pop    %ebx
   1a22c:	5e                   	pop    %esi
   1a22d:	5f                   	pop    %edi
   1a22e:	c3                   	ret    
   1a22f:	90                   	nop

0001a230 <push_es>:
   1a230:	53                   	push   %ebx
   1a231:	e8 4a a2 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a236:	81 c3 ca 4d 03 00    	add    $0x34dca,%ebx
   1a23c:	83 ec 44             	sub    $0x44,%esp
   1a23f:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1a246:	00 
   1a247:	c6 44 24 20 03       	movb   $0x3,0x20(%esp)
   1a24c:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a252:	0f b6 10             	movzbl (%eax),%edx
   1a255:	89 54 24 28          	mov    %edx,0x28(%esp)
   1a259:	89 d0                	mov    %edx,%eax
   1a25b:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1a261:	c0 e8 03             	shr    $0x3,%al
   1a264:	8b 4a 10             	mov    0x10(%edx),%ecx
   1a267:	0f b6 c0             	movzbl %al,%eax
   1a26a:	29 c1                	sub    %eax,%ecx
   1a26c:	8d 44 24 18          	lea    0x18(%esp),%eax
   1a270:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   1a274:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   1a278:	89 4a 10             	mov    %ecx,0x10(%edx)
   1a27b:	50                   	push   %eax
   1a27c:	e8 0f 83 ff ff       	call   12590 <operand_write>
   1a281:	83 c4 48             	add    $0x48,%esp
   1a284:	b8 01 00 00 00       	mov    $0x1,%eax
   1a289:	5b                   	pop    %ebx
   1a28a:	c3                   	ret    
   1a28b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a28f:	90                   	nop

0001a290 <push_i_b>:
   1a290:	55                   	push   %ebp
   1a291:	57                   	push   %edi
   1a292:	56                   	push   %esi
   1a293:	53                   	push   %ebx
   1a294:	e8 e7 a1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a299:	81 c3 67 4d 03 00    	add    $0x34d67,%ebx
   1a29f:	83 ec 18             	sub    $0x18,%esp
   1a2a2:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1a2a6:	83 c0 01             	add    $0x1,%eax
   1a2a9:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1a2af:	8d ab 84 07 00 00    	lea    0x784(%ebx),%ebp
   1a2b5:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   1a2bb:	56                   	push   %esi
   1a2bc:	89 46 04             	mov    %eax,0x4(%esi)
   1a2bf:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   1a2c3:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1a2ca:	c0 e8 03             	shr    $0x3,%al
   1a2cd:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
   1a2d3:	0f b6 c0             	movzbl %al,%eax
   1a2d6:	29 47 10             	sub    %eax,0x10(%edi)
   1a2d9:	e8 02 81 ff ff       	call   123e0 <operand_read>
   1a2de:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1a2e4:	56                   	push   %esi
   1a2e5:	6a 02                	push   $0x2
   1a2e7:	50                   	push   %eax
   1a2e8:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   1a2ee:	50                   	push   %eax
   1a2ef:	e8 ac 7d ff ff       	call   120a0 <print_asm_1>
   1a2f4:	0f b6 4d 00          	movzbl 0x0(%ebp),%ecx
   1a2f8:	0f be 56 0c          	movsbl 0xc(%esi),%edx
   1a2fc:	83 c4 14             	add    $0x14,%esp
   1a2ff:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1a305:	89 56 0c             	mov    %edx,0xc(%esi)
   1a308:	89 48 10             	mov    %ecx,0x10(%eax)
   1a30b:	8b 4f 10             	mov    0x10(%edi),%ecx
   1a30e:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
   1a314:	89 48 04             	mov    %ecx,0x4(%eax)
   1a317:	89 50 0c             	mov    %edx,0xc(%eax)
   1a31a:	50                   	push   %eax
   1a31b:	e8 70 82 ff ff       	call   12590 <operand_write>
   1a320:	83 c4 1c             	add    $0x1c,%esp
   1a323:	b8 02 00 00 00       	mov    $0x2,%eax
   1a328:	5b                   	pop    %ebx
   1a329:	5e                   	pop    %esi
   1a32a:	5f                   	pop    %edi
   1a32b:	5d                   	pop    %ebp
   1a32c:	c3                   	ret    
   1a32d:	8d 76 00             	lea    0x0(%esi),%esi

0001a330 <pusha>:
   1a330:	55                   	push   %ebp
   1a331:	57                   	push   %edi
   1a332:	56                   	push   %esi
   1a333:	53                   	push   %ebx
   1a334:	e8 47 a1 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a339:	81 c3 c7 4c 03 00    	add    $0x34cc7,%ebx
   1a33f:	83 ec 10             	sub    $0x10,%esp
   1a342:	6a 01                	push   $0x1
   1a344:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1a34a:	50                   	push   %eax
   1a34b:	8d 83 c2 6a fe ff    	lea    -0x1953e(%ebx),%eax
   1a351:	50                   	push   %eax
   1a352:	e8 69 7c ff ff       	call   11fc0 <print_asm_0>
   1a357:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   1a35d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1a363:	8b 6f 10             	mov    0x10(%edi),%ebp
   1a366:	89 34 24             	mov    %esi,(%esp)
   1a369:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   1a370:	8d 45 fc             	lea    -0x4(%ebp),%eax
   1a373:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   1a379:	89 47 10             	mov    %eax,0x10(%edi)
   1a37c:	89 46 04             	mov    %eax,0x4(%esi)
   1a37f:	8b 07                	mov    (%edi),%eax
   1a381:	c6 46 08 02          	movb   $0x2,0x8(%esi)
   1a385:	89 46 0c             	mov    %eax,0xc(%esi)
   1a388:	e8 03 82 ff ff       	call   12590 <operand_write>
   1a38d:	8b 47 10             	mov    0x10(%edi),%eax
   1a390:	89 34 24             	mov    %esi,(%esp)
   1a393:	83 e8 04             	sub    $0x4,%eax
   1a396:	89 47 10             	mov    %eax,0x10(%edi)
   1a399:	89 46 04             	mov    %eax,0x4(%esi)
   1a39c:	8b 47 04             	mov    0x4(%edi),%eax
   1a39f:	89 46 0c             	mov    %eax,0xc(%esi)
   1a3a2:	e8 e9 81 ff ff       	call   12590 <operand_write>
   1a3a7:	8b 47 10             	mov    0x10(%edi),%eax
   1a3aa:	89 34 24             	mov    %esi,(%esp)
   1a3ad:	83 e8 04             	sub    $0x4,%eax
   1a3b0:	89 47 10             	mov    %eax,0x10(%edi)
   1a3b3:	89 46 04             	mov    %eax,0x4(%esi)
   1a3b6:	8b 47 08             	mov    0x8(%edi),%eax
   1a3b9:	89 46 0c             	mov    %eax,0xc(%esi)
   1a3bc:	e8 cf 81 ff ff       	call   12590 <operand_write>
   1a3c1:	8b 47 10             	mov    0x10(%edi),%eax
   1a3c4:	89 34 24             	mov    %esi,(%esp)
   1a3c7:	83 e8 04             	sub    $0x4,%eax
   1a3ca:	89 47 10             	mov    %eax,0x10(%edi)
   1a3cd:	89 46 04             	mov    %eax,0x4(%esi)
   1a3d0:	8b 47 0c             	mov    0xc(%edi),%eax
   1a3d3:	89 46 0c             	mov    %eax,0xc(%esi)
   1a3d6:	e8 b5 81 ff ff       	call   12590 <operand_write>
   1a3db:	8b 47 10             	mov    0x10(%edi),%eax
   1a3de:	89 34 24             	mov    %esi,(%esp)
   1a3e1:	89 6e 0c             	mov    %ebp,0xc(%esi)
   1a3e4:	83 e8 04             	sub    $0x4,%eax
   1a3e7:	89 47 10             	mov    %eax,0x10(%edi)
   1a3ea:	89 46 04             	mov    %eax,0x4(%esi)
   1a3ed:	e8 9e 81 ff ff       	call   12590 <operand_write>
   1a3f2:	8b 47 10             	mov    0x10(%edi),%eax
   1a3f5:	89 34 24             	mov    %esi,(%esp)
   1a3f8:	83 e8 04             	sub    $0x4,%eax
   1a3fb:	89 47 10             	mov    %eax,0x10(%edi)
   1a3fe:	89 46 04             	mov    %eax,0x4(%esi)
   1a401:	8b 47 14             	mov    0x14(%edi),%eax
   1a404:	89 46 0c             	mov    %eax,0xc(%esi)
   1a407:	e8 84 81 ff ff       	call   12590 <operand_write>
   1a40c:	8b 47 10             	mov    0x10(%edi),%eax
   1a40f:	89 34 24             	mov    %esi,(%esp)
   1a412:	83 e8 04             	sub    $0x4,%eax
   1a415:	89 47 10             	mov    %eax,0x10(%edi)
   1a418:	89 46 04             	mov    %eax,0x4(%esi)
   1a41b:	8b 47 18             	mov    0x18(%edi),%eax
   1a41e:	89 46 0c             	mov    %eax,0xc(%esi)
   1a421:	e8 6a 81 ff ff       	call   12590 <operand_write>
   1a426:	8b 47 10             	mov    0x10(%edi),%eax
   1a429:	89 34 24             	mov    %esi,(%esp)
   1a42c:	83 e8 04             	sub    $0x4,%eax
   1a42f:	89 47 10             	mov    %eax,0x10(%edi)
   1a432:	89 46 04             	mov    %eax,0x4(%esi)
   1a435:	8b 47 1c             	mov    0x1c(%edi),%eax
   1a438:	89 46 0c             	mov    %eax,0xc(%esi)
   1a43b:	e8 50 81 ff ff       	call   12590 <operand_write>
   1a440:	83 c4 1c             	add    $0x1c,%esp
   1a443:	b8 01 00 00 00       	mov    $0x1,%eax
   1a448:	5b                   	pop    %ebx
   1a449:	5e                   	pop    %esi
   1a44a:	5f                   	pop    %edi
   1a44b:	5d                   	pop    %ebp
   1a44c:	c3                   	ret    
   1a44d:	66 90                	xchg   %ax,%ax
   1a44f:	90                   	nop

0001a450 <instr_execute_1op>:
   1a450:	57                   	push   %edi
   1a451:	56                   	push   %esi
   1a452:	53                   	push   %ebx
   1a453:	e8 28 a0 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a458:	81 c3 a8 4b 03 00    	add    $0x34ba8,%ebx
   1a45e:	83 ec 0c             	sub    $0xc,%esp
   1a461:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1a467:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   1a46d:	56                   	push   %esi
   1a46e:	8b 47 10             	mov    0x10(%edi),%eax
   1a471:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   1a477:	89 46 04             	mov    %eax,0x4(%esi)
   1a47a:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   1a47e:	e8 5d 7f ff ff       	call   123e0 <operand_read>
   1a483:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1a489:	8b 56 0c             	mov    0xc(%esi),%edx
   1a48c:	89 50 0c             	mov    %edx,0xc(%eax)
   1a48f:	89 04 24             	mov    %eax,(%esp)
   1a492:	e8 f9 80 ff ff       	call   12590 <operand_write>
   1a497:	83 c4 10             	add    $0x10,%esp
   1a49a:	83 47 10 04          	addl   $0x4,0x10(%edi)
   1a49e:	5b                   	pop    %ebx
   1a49f:	5e                   	pop    %esi
   1a4a0:	5f                   	pop    %edi
   1a4a1:	c3                   	ret    
   1a4a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a4a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001a4b0 <pop_r_v>:
   1a4b0:	53                   	push   %ebx
   1a4b1:	e8 ca 9f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a4b6:	81 c3 4a 4b 03 00    	add    $0x34b4a,%ebx
   1a4bc:	83 ec 08             	sub    $0x8,%esp
   1a4bf:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a4c5:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1a4cb:	0f b6 08             	movzbl (%eax),%ecx
   1a4ce:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1a4d4:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1a4da:	89 48 10             	mov    %ecx,0x10(%eax)
   1a4dd:	8b 44 24 14          	mov    0x14(%esp),%eax
   1a4e1:	89 4a 10             	mov    %ecx,0x10(%edx)
   1a4e4:	83 e0 07             	and    $0x7,%eax
   1a4e7:	89 42 04             	mov    %eax,0x4(%edx)
   1a4ea:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1a4f0:	83 f9 08             	cmp    $0x8,%ecx
   1a4f3:	74 12                	je     1a507 <pop_r_v+0x57>
   1a4f5:	83 f9 10             	cmp    $0x10,%ecx
   1a4f8:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1a4fe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1a504:	0f 45 c1             	cmovne %ecx,%eax
   1a507:	52                   	push   %edx
   1a508:	6a 01                	push   $0x1
   1a50a:	50                   	push   %eax
   1a50b:	8d 83 c8 6a fe ff    	lea    -0x19538(%ebx),%eax
   1a511:	50                   	push   %eax
   1a512:	e8 89 7b ff ff       	call   120a0 <print_asm_1>
   1a517:	e8 34 ff ff ff       	call   1a450 <instr_execute_1op>
   1a51c:	83 c4 18             	add    $0x18,%esp
   1a51f:	b8 01 00 00 00       	mov    $0x1,%eax
   1a524:	5b                   	pop    %ebx
   1a525:	c3                   	ret    
   1a526:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a52d:	8d 76 00             	lea    0x0(%esi),%esi

0001a530 <pop_rm_v>:
   1a530:	55                   	push   %ebp
   1a531:	57                   	push   %edi
   1a532:	56                   	push   %esi
   1a533:	53                   	push   %ebx
   1a534:	e8 47 9f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a539:	81 c3 c7 4a 03 00    	add    $0x34ac7,%ebx
   1a53f:	83 ec 14             	sub    $0x14,%esp
   1a542:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a548:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1a54e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1a554:	0f b6 00             	movzbl (%eax),%eax
   1a557:	56                   	push   %esi
   1a558:	89 45 10             	mov    %eax,0x10(%ebp)
   1a55b:	89 46 10             	mov    %eax,0x10(%esi)
   1a55e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1a562:	83 c0 01             	add    $0x1,%eax
   1a565:	50                   	push   %eax
   1a566:	e8 15 7a ff ff       	call   11f80 <modrm_rm>
   1a56b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1a56e:	83 c4 10             	add    $0x10,%esp
   1a571:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1a577:	8d 78 01             	lea    0x1(%eax),%edi
   1a57a:	89 f8                	mov    %edi,%eax
   1a57c:	0f b6 c0             	movzbl %al,%eax
   1a57f:	83 f9 08             	cmp    $0x8,%ecx
   1a582:	74 12                	je     1a596 <pop_rm_v+0x66>
   1a584:	83 f9 10             	cmp    $0x10,%ecx
   1a587:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1a58d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1a593:	0f 45 d1             	cmovne %ecx,%edx
   1a596:	56                   	push   %esi
   1a597:	50                   	push   %eax
   1a598:	8d 83 c8 6a fe ff    	lea    -0x19538(%ebx),%eax
   1a59e:	52                   	push   %edx
   1a59f:	50                   	push   %eax
   1a5a0:	e8 fb 7a ff ff       	call   120a0 <print_asm_1>
   1a5a5:	e8 a6 fe ff ff       	call   1a450 <instr_execute_1op>
   1a5aa:	83 c4 1c             	add    $0x1c,%esp
   1a5ad:	89 f8                	mov    %edi,%eax
   1a5af:	5b                   	pop    %ebx
   1a5b0:	5e                   	pop    %esi
   1a5b1:	5f                   	pop    %edi
   1a5b2:	5d                   	pop    %ebp
   1a5b3:	c3                   	ret    
   1a5b4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a5bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a5bf:	90                   	nop

0001a5c0 <pop_i_b>:
   1a5c0:	53                   	push   %ebx
   1a5c1:	e8 ba 9e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a5c6:	81 c3 3a 4a 03 00    	add    $0x34a3a,%ebx
   1a5cc:	83 ec 08             	sub    $0x8,%esp
   1a5cf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   1a5d3:	8d 51 01             	lea    0x1(%ecx),%edx
   1a5d6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1a5dc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1a5e3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1a5e9:	89 50 04             	mov    %edx,0x4(%eax)
   1a5ec:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1a5f3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1a5f9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1a5fd:	50                   	push   %eax
   1a5fe:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1a604:	6a 02                	push   $0x2
   1a606:	50                   	push   %eax
   1a607:	8d 83 c8 6a fe ff    	lea    -0x19538(%ebx),%eax
   1a60d:	50                   	push   %eax
   1a60e:	e8 8d 7a ff ff       	call   120a0 <print_asm_1>
   1a613:	e8 38 fe ff ff       	call   1a450 <instr_execute_1op>
   1a618:	83 c4 18             	add    $0x18,%esp
   1a61b:	b8 02 00 00 00       	mov    $0x2,%eax
   1a620:	5b                   	pop    %ebx
   1a621:	c3                   	ret    
   1a622:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001a630 <pop_i_v>:
   1a630:	57                   	push   %edi
   1a631:	56                   	push   %esi
   1a632:	53                   	push   %ebx
   1a633:	e8 48 9e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a638:	81 c3 c8 49 03 00    	add    $0x349c8,%ebx
   1a63e:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1a644:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1a64a:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   1a650:	0f b6 08             	movzbl (%eax),%ecx
   1a653:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1a659:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   1a65f:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1a663:	89 48 10             	mov    %ecx,0x10(%eax)
   1a666:	8b 44 24 10          	mov    0x10(%esp),%eax
   1a66a:	89 cf                	mov    %ecx,%edi
   1a66c:	c1 ef 03             	shr    $0x3,%edi
   1a66f:	89 4a 10             	mov    %ecx,0x10(%edx)
   1a672:	83 c0 01             	add    $0x1,%eax
   1a675:	83 c7 01             	add    $0x1,%edi
   1a678:	89 42 04             	mov    %eax,0x4(%edx)
   1a67b:	83 f9 08             	cmp    $0x8,%ecx
   1a67e:	74 12                	je     1a692 <pop_i_v+0x62>
   1a680:	83 f9 10             	cmp    $0x10,%ecx
   1a683:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1a689:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1a68f:	0f 45 f0             	cmovne %eax,%esi
   1a692:	8d 83 c8 6a fe ff    	lea    -0x19538(%ebx),%eax
   1a698:	52                   	push   %edx
   1a699:	57                   	push   %edi
   1a69a:	56                   	push   %esi
   1a69b:	50                   	push   %eax
   1a69c:	e8 ff 79 ff ff       	call   120a0 <print_asm_1>
   1a6a1:	e8 aa fd ff ff       	call   1a450 <instr_execute_1op>
   1a6a6:	83 c4 10             	add    $0x10,%esp
   1a6a9:	89 f8                	mov    %edi,%eax
   1a6ab:	5b                   	pop    %ebx
   1a6ac:	5e                   	pop    %esi
   1a6ad:	5f                   	pop    %edi
   1a6ae:	c3                   	ret    
   1a6af:	90                   	nop

0001a6b0 <popa>:
   1a6b0:	57                   	push   %edi
   1a6b1:	56                   	push   %esi
   1a6b2:	53                   	push   %ebx
   1a6b3:	e8 c8 9d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a6b8:	81 c3 48 49 03 00    	add    $0x34948,%ebx
   1a6be:	83 ec 04             	sub    $0x4,%esp
   1a6c1:	6a 01                	push   $0x1
   1a6c3:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1a6c9:	50                   	push   %eax
   1a6ca:	8d 83 cc 6a fe ff    	lea    -0x19534(%ebx),%eax
   1a6d0:	50                   	push   %eax
   1a6d1:	e8 ea 78 ff ff       	call   11fc0 <print_asm_0>
   1a6d6:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   1a6dc:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1a6e2:	8b 47 10             	mov    0x10(%edi),%eax
   1a6e5:	89 34 24             	mov    %esi,(%esp)
   1a6e8:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   1a6ef:	89 46 04             	mov    %eax,0x4(%esi)
   1a6f2:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   1a6f8:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   1a6fc:	e8 df 7c ff ff       	call   123e0 <operand_read>
   1a701:	8b 46 0c             	mov    0xc(%esi),%eax
   1a704:	89 34 24             	mov    %esi,(%esp)
   1a707:	89 47 1c             	mov    %eax,0x1c(%edi)
   1a70a:	8b 47 10             	mov    0x10(%edi),%eax
   1a70d:	83 c0 04             	add    $0x4,%eax
   1a710:	89 47 10             	mov    %eax,0x10(%edi)
   1a713:	89 46 04             	mov    %eax,0x4(%esi)
   1a716:	e8 c5 7c ff ff       	call   123e0 <operand_read>
   1a71b:	8b 46 0c             	mov    0xc(%esi),%eax
   1a71e:	89 34 24             	mov    %esi,(%esp)
   1a721:	89 47 18             	mov    %eax,0x18(%edi)
   1a724:	8b 47 10             	mov    0x10(%edi),%eax
   1a727:	83 c0 04             	add    $0x4,%eax
   1a72a:	89 47 10             	mov    %eax,0x10(%edi)
   1a72d:	89 46 04             	mov    %eax,0x4(%esi)
   1a730:	e8 ab 7c ff ff       	call   123e0 <operand_read>
   1a735:	8b 46 0c             	mov    0xc(%esi),%eax
   1a738:	89 34 24             	mov    %esi,(%esp)
   1a73b:	89 47 14             	mov    %eax,0x14(%edi)
   1a73e:	8b 47 10             	mov    0x10(%edi),%eax
   1a741:	83 c0 08             	add    $0x8,%eax
   1a744:	89 47 10             	mov    %eax,0x10(%edi)
   1a747:	89 46 04             	mov    %eax,0x4(%esi)
   1a74a:	e8 91 7c ff ff       	call   123e0 <operand_read>
   1a74f:	8b 46 0c             	mov    0xc(%esi),%eax
   1a752:	89 34 24             	mov    %esi,(%esp)
   1a755:	89 47 0c             	mov    %eax,0xc(%edi)
   1a758:	8b 47 10             	mov    0x10(%edi),%eax
   1a75b:	83 c0 04             	add    $0x4,%eax
   1a75e:	89 47 10             	mov    %eax,0x10(%edi)
   1a761:	89 46 04             	mov    %eax,0x4(%esi)
   1a764:	e8 77 7c ff ff       	call   123e0 <operand_read>
   1a769:	8b 46 0c             	mov    0xc(%esi),%eax
   1a76c:	89 34 24             	mov    %esi,(%esp)
   1a76f:	89 47 08             	mov    %eax,0x8(%edi)
   1a772:	8b 47 10             	mov    0x10(%edi),%eax
   1a775:	83 c0 04             	add    $0x4,%eax
   1a778:	89 47 10             	mov    %eax,0x10(%edi)
   1a77b:	89 46 04             	mov    %eax,0x4(%esi)
   1a77e:	e8 5d 7c ff ff       	call   123e0 <operand_read>
   1a783:	8b 46 0c             	mov    0xc(%esi),%eax
   1a786:	89 34 24             	mov    %esi,(%esp)
   1a789:	89 47 04             	mov    %eax,0x4(%edi)
   1a78c:	8b 47 10             	mov    0x10(%edi),%eax
   1a78f:	83 c0 04             	add    $0x4,%eax
   1a792:	89 47 10             	mov    %eax,0x10(%edi)
   1a795:	89 46 04             	mov    %eax,0x4(%esi)
   1a798:	e8 43 7c ff ff       	call   123e0 <operand_read>
   1a79d:	8b 46 0c             	mov    0xc(%esi),%eax
   1a7a0:	83 c4 10             	add    $0x10,%esp
   1a7a3:	83 47 10 04          	addl   $0x4,0x10(%edi)
   1a7a7:	5b                   	pop    %ebx
   1a7a8:	5e                   	pop    %esi
   1a7a9:	89 07                	mov    %eax,(%edi)
   1a7ab:	b8 01 00 00 00       	mov    $0x1,%eax
   1a7b0:	5f                   	pop    %edi
   1a7b1:	c3                   	ret    
   1a7b2:	66 90                	xchg   %ax,%ax
   1a7b4:	66 90                	xchg   %ax,%ax
   1a7b6:	66 90                	xchg   %ax,%ax
   1a7b8:	66 90                	xchg   %ax,%ax
   1a7ba:	66 90                	xchg   %ax,%ax
   1a7bc:	66 90                	xchg   %ax,%ax
   1a7be:	66 90                	xchg   %ax,%ax

0001a7c0 <movs_v>:
   1a7c0:	57                   	push   %edi
   1a7c1:	56                   	push   %esi
   1a7c2:	53                   	push   %ebx
   1a7c3:	e8 b8 9c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a7c8:	81 c3 38 48 03 00    	add    $0x34838,%ebx
   1a7ce:	83 ec 5c             	sub    $0x5c,%esp
   1a7d1:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   1a7d8:	00 
   1a7d9:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   1a7e0:	00 
   1a7e1:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   1a7e6:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   1a7ec:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1a7f2:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   1a7f7:	0f b6 07             	movzbl (%edi),%eax
   1a7fa:	89 44 24 48          	mov    %eax,0x48(%esp)
   1a7fe:	89 44 24 24          	mov    %eax,0x24(%esp)
   1a802:	8b 46 18             	mov    0x18(%esi),%eax
   1a805:	89 44 24 18          	mov    %eax,0x18(%esp)
   1a809:	8b 46 1c             	mov    0x1c(%esi),%eax
   1a80c:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   1a810:	8d 44 24 14          	lea    0x14(%esp),%eax
   1a814:	50                   	push   %eax
   1a815:	e8 c6 7b ff ff       	call   123e0 <operand_read>
   1a81a:	8b 44 24 24          	mov    0x24(%esp),%eax
   1a81e:	89 44 24 48          	mov    %eax,0x48(%esp)
   1a822:	58                   	pop    %eax
   1a823:	8d 44 24 38          	lea    0x38(%esp),%eax
   1a827:	50                   	push   %eax
   1a828:	e8 63 7d ff ff       	call   12590 <operand_write>
   1a82d:	83 c4 10             	add    $0x10,%esp
   1a830:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   1a834:	75 3a                	jne    1a870 <movs_v+0xb0>
   1a836:	0f b6 07             	movzbl (%edi),%eax
   1a839:	c0 e8 03             	shr    $0x3,%al
   1a83c:	0f b6 c0             	movzbl %al,%eax
   1a83f:	83 ec 04             	sub    $0x4,%esp
   1a842:	01 46 18             	add    %eax,0x18(%esi)
   1a845:	01 46 1c             	add    %eax,0x1c(%esi)
   1a848:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1a84e:	6a 01                	push   $0x1
   1a850:	50                   	push   %eax
   1a851:	8d 83 d1 6a fe ff    	lea    -0x1952f(%ebx),%eax
   1a857:	50                   	push   %eax
   1a858:	e8 63 77 ff ff       	call   11fc0 <print_asm_0>
   1a85d:	83 c4 60             	add    $0x60,%esp
   1a860:	b8 01 00 00 00       	mov    $0x1,%eax
   1a865:	5b                   	pop    %ebx
   1a866:	5e                   	pop    %esi
   1a867:	5f                   	pop    %edi
   1a868:	c3                   	ret    
   1a869:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a870:	0f b6 07             	movzbl (%edi),%eax
   1a873:	c1 f8 03             	sar    $0x3,%eax
   1a876:	f7 d8                	neg    %eax
   1a878:	eb c5                	jmp    1a83f <movs_v+0x7f>
   1a87a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001a880 <movs_b>:
   1a880:	56                   	push   %esi
   1a881:	53                   	push   %ebx
   1a882:	e8 f9 9b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a887:	81 c3 79 47 03 00    	add    $0x34779,%ebx
   1a88d:	83 ec 60             	sub    $0x60,%esp
   1a890:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   1a897:	00 
   1a898:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   1a89f:	00 
   1a8a0:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   1a8a5:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1a8ab:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   1a8b0:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   1a8b7:	00 
   1a8b8:	8b 46 18             	mov    0x18(%esi),%eax
   1a8bb:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   1a8c2:	00 
   1a8c3:	89 44 24 18          	mov    %eax,0x18(%esp)
   1a8c7:	8b 46 1c             	mov    0x1c(%esi),%eax
   1a8ca:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   1a8ce:	8d 44 24 14          	lea    0x14(%esp),%eax
   1a8d2:	50                   	push   %eax
   1a8d3:	e8 08 7b ff ff       	call   123e0 <operand_read>
   1a8d8:	8b 44 24 24          	mov    0x24(%esp),%eax
   1a8dc:	89 44 24 48          	mov    %eax,0x48(%esp)
   1a8e0:	58                   	pop    %eax
   1a8e1:	8d 44 24 38          	lea    0x38(%esp),%eax
   1a8e5:	50                   	push   %eax
   1a8e6:	e8 a5 7c ff ff       	call   12590 <operand_write>
   1a8eb:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   1a8ef:	83 c4 0c             	add    $0xc,%esp
   1a8f2:	6a 01                	push   $0x1
   1a8f4:	83 e0 04             	and    $0x4,%eax
   1a8f7:	3c 01                	cmp    $0x1,%al
   1a8f9:	19 c0                	sbb    %eax,%eax
   1a8fb:	83 e0 02             	and    $0x2,%eax
   1a8fe:	83 e8 01             	sub    $0x1,%eax
   1a901:	01 46 18             	add    %eax,0x18(%esi)
   1a904:	01 46 1c             	add    %eax,0x1c(%esi)
   1a907:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1a90d:	50                   	push   %eax
   1a90e:	8d 83 d1 6a fe ff    	lea    -0x1952f(%ebx),%eax
   1a914:	50                   	push   %eax
   1a915:	e8 a6 76 ff ff       	call   11fc0 <print_asm_0>
   1a91a:	83 c4 64             	add    $0x64,%esp
   1a91d:	b8 01 00 00 00       	mov    $0x1,%eax
   1a922:	5b                   	pop    %ebx
   1a923:	5e                   	pop    %esi
   1a924:	c3                   	ret    
   1a925:	66 90                	xchg   %ax,%ax
   1a927:	66 90                	xchg   %ax,%ax
   1a929:	66 90                	xchg   %ax,%ax
   1a92b:	66 90                	xchg   %ax,%ax
   1a92d:	66 90                	xchg   %ax,%ax
   1a92f:	90                   	nop

0001a930 <int_>:
   1a930:	56                   	push   %esi
   1a931:	53                   	push   %ebx
   1a932:	e8 49 9b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a937:	81 c3 c9 46 03 00    	add    $0x346c9,%ebx
   1a93d:	83 ec 40             	sub    $0x40,%esp
   1a940:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   1a944:	8d 74 24 18          	lea    0x18(%esp),%esi
   1a948:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
   1a94f:	00 
   1a950:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1a957:	00 
   1a958:	83 c0 01             	add    $0x1,%eax
   1a95b:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
   1a960:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1a964:	56                   	push   %esi
   1a965:	e8 76 7a ff ff       	call   123e0 <operand_read>
   1a96a:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1a970:	56                   	push   %esi
   1a971:	6a 02                	push   $0x2
   1a973:	50                   	push   %eax
   1a974:	8d 83 e7 6a fe ff    	lea    -0x19519(%ebx),%eax
   1a97a:	50                   	push   %eax
   1a97b:	e8 20 77 ff ff       	call   120a0 <print_asm_1>
   1a980:	83 c4 14             	add    $0x14,%esp
   1a983:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
   1a988:	50                   	push   %eax
   1a989:	e8 52 c8 fe ff       	call   71e0 <raise_sw_intr>
   1a98e:	83 c4 44             	add    $0x44,%esp
   1a991:	31 c0                	xor    %eax,%eax
   1a993:	5b                   	pop    %ebx
   1a994:	5e                   	pop    %esi
   1a995:	c3                   	ret    
   1a996:	66 90                	xchg   %ax,%ax
   1a998:	66 90                	xchg   %ax,%ax
   1a99a:	66 90                	xchg   %ax,%ax
   1a99c:	66 90                	xchg   %ax,%ax
   1a99e:	66 90                	xchg   %ax,%ax

0001a9a0 <in_b>:
   1a9a0:	56                   	push   %esi
   1a9a1:	53                   	push   %ebx
   1a9a2:	e8 d9 9a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a9a7:	81 c3 59 46 03 00    	add    $0x34659,%ebx
   1a9ad:	83 ec 08             	sub    $0x8,%esp
   1a9b0:	6a 01                	push   $0x1
   1a9b2:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1a9b8:	50                   	push   %eax
   1a9b9:	8d 83 ec 6a fe ff    	lea    -0x19514(%ebx),%eax
   1a9bf:	50                   	push   %eax
   1a9c0:	e8 fb 75 ff ff       	call   11fc0 <print_asm_0>
   1a9c5:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1a9cb:	58                   	pop    %eax
   1a9cc:	5a                   	pop    %edx
   1a9cd:	6a 01                	push   $0x1
   1a9cf:	0f b7 46 08          	movzwl 0x8(%esi),%eax
   1a9d3:	50                   	push   %eax
   1a9d4:	e8 37 c3 fe ff       	call   6d10 <pio_read>
   1a9d9:	89 06                	mov    %eax,(%esi)
   1a9db:	83 c4 14             	add    $0x14,%esp
   1a9de:	b8 01 00 00 00       	mov    $0x1,%eax
   1a9e3:	5b                   	pop    %ebx
   1a9e4:	5e                   	pop    %esi
   1a9e5:	c3                   	ret    
   1a9e6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a9ed:	8d 76 00             	lea    0x0(%esi),%esi

0001a9f0 <in_v>:
   1a9f0:	56                   	push   %esi
   1a9f1:	53                   	push   %ebx
   1a9f2:	e8 89 9a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1a9f7:	81 c3 09 46 03 00    	add    $0x34609,%ebx
   1a9fd:	83 ec 08             	sub    $0x8,%esp
   1aa00:	8d b3 84 07 00 00    	lea    0x784(%ebx),%esi
   1aa06:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   1aa0c:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1aa12:	80 3e 10             	cmpb   $0x10,(%esi)
   1aa15:	6a 01                	push   $0x1
   1aa17:	0f 45 c2             	cmovne %edx,%eax
   1aa1a:	50                   	push   %eax
   1aa1b:	8d 83 ec 6a fe ff    	lea    -0x19514(%ebx),%eax
   1aa21:	50                   	push   %eax
   1aa22:	e8 99 75 ff ff       	call   11fc0 <print_asm_0>
   1aa27:	58                   	pop    %eax
   1aa28:	0f b6 06             	movzbl (%esi),%eax
   1aa2b:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1aa31:	5a                   	pop    %edx
   1aa32:	c0 e8 03             	shr    $0x3,%al
   1aa35:	0f b6 c0             	movzbl %al,%eax
   1aa38:	50                   	push   %eax
   1aa39:	0f b7 46 08          	movzwl 0x8(%esi),%eax
   1aa3d:	50                   	push   %eax
   1aa3e:	e8 cd c2 fe ff       	call   6d10 <pio_read>
   1aa43:	89 06                	mov    %eax,(%esi)
   1aa45:	83 c4 14             	add    $0x14,%esp
   1aa48:	b8 01 00 00 00       	mov    $0x1,%eax
   1aa4d:	5b                   	pop    %ebx
   1aa4e:	5e                   	pop    %esi
   1aa4f:	c3                   	ret    

0001aa50 <instr_execute_2op_cc_pass>:
   1aa50:	56                   	push   %esi
   1aa51:	53                   	push   %ebx
   1aa52:	e8 29 9a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1aa57:	81 c3 a9 45 03 00    	add    $0x345a9,%ebx
   1aa5d:	83 ec 10             	sub    $0x10,%esp
   1aa60:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1aa66:	56                   	push   %esi
   1aa67:	e8 74 79 ff ff       	call   123e0 <operand_read>
   1aa6c:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1aa72:	8b 56 0c             	mov    0xc(%esi),%edx
   1aa75:	89 50 0c             	mov    %edx,0xc(%eax)
   1aa78:	89 04 24             	mov    %eax,(%esp)
   1aa7b:	e8 10 7b ff ff       	call   12590 <operand_write>
   1aa80:	83 c4 14             	add    $0x14,%esp
   1aa83:	5b                   	pop    %ebx
   1aa84:	5e                   	pop    %esi
   1aa85:	c3                   	ret    
   1aa86:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1aa8d:	8d 76 00             	lea    0x0(%esi),%esi

0001aa90 <cmova_rm2r_v>:
   1aa90:	55                   	push   %ebp
   1aa91:	57                   	push   %edi
   1aa92:	56                   	push   %esi
   1aa93:	53                   	push   %ebx
   1aa94:	e8 e7 99 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1aa99:	81 c3 67 45 03 00    	add    $0x34567,%ebx
   1aa9f:	83 ec 10             	sub    $0x10,%esp
   1aaa2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1aaa8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1aaae:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1aab4:	0f b6 00             	movzbl (%eax),%eax
   1aab7:	57                   	push   %edi
   1aab8:	89 45 10             	mov    %eax,0x10(%ebp)
   1aabb:	55                   	push   %ebp
   1aabc:	89 47 10             	mov    %eax,0x10(%edi)
   1aabf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1aac3:	83 c0 01             	add    $0x1,%eax
   1aac6:	50                   	push   %eax
   1aac7:	e8 d4 73 ff ff       	call   11ea0 <modrm_r_rm>
   1aacc:	89 2c 24             	mov    %ebp,(%esp)
   1aacf:	8d 70 01             	lea    0x1(%eax),%esi
   1aad2:	57                   	push   %edi
   1aad3:	89 f0                	mov    %esi,%eax
   1aad5:	0f b6 c0             	movzbl %al,%eax
   1aad8:	50                   	push   %eax
   1aad9:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   1aadf:	50                   	push   %eax
   1aae0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1aae6:	50                   	push   %eax
   1aae7:	e8 b4 76 ff ff       	call   121a0 <print_asm_2>
   1aaec:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1aaf2:	83 c4 20             	add    $0x20,%esp
   1aaf5:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   1aaf9:	74 0d                	je     1ab08 <cmova_rm2r_v+0x78>
   1aafb:	83 c4 0c             	add    $0xc,%esp
   1aafe:	89 f0                	mov    %esi,%eax
   1ab00:	5b                   	pop    %ebx
   1ab01:	5e                   	pop    %esi
   1ab02:	5f                   	pop    %edi
   1ab03:	5d                   	pop    %ebp
   1ab04:	c3                   	ret    
   1ab05:	8d 76 00             	lea    0x0(%esi),%esi
   1ab08:	e8 43 ff ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1ab0d:	83 c4 0c             	add    $0xc,%esp
   1ab10:	89 f0                	mov    %esi,%eax
   1ab12:	5b                   	pop    %ebx
   1ab13:	5e                   	pop    %esi
   1ab14:	5f                   	pop    %edi
   1ab15:	5d                   	pop    %ebp
   1ab16:	c3                   	ret    
   1ab17:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ab1e:	66 90                	xchg   %ax,%ax

0001ab20 <cmovae_rm2r_v>:
   1ab20:	55                   	push   %ebp
   1ab21:	57                   	push   %edi
   1ab22:	56                   	push   %esi
   1ab23:	53                   	push   %ebx
   1ab24:	e8 57 99 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ab29:	81 c3 d7 44 03 00    	add    $0x344d7,%ebx
   1ab2f:	83 ec 10             	sub    $0x10,%esp
   1ab32:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1ab38:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1ab3e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1ab44:	0f b6 00             	movzbl (%eax),%eax
   1ab47:	57                   	push   %edi
   1ab48:	89 45 10             	mov    %eax,0x10(%ebp)
   1ab4b:	55                   	push   %ebp
   1ab4c:	89 47 10             	mov    %eax,0x10(%edi)
   1ab4f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1ab53:	83 c0 01             	add    $0x1,%eax
   1ab56:	50                   	push   %eax
   1ab57:	e8 44 73 ff ff       	call   11ea0 <modrm_r_rm>
   1ab5c:	89 2c 24             	mov    %ebp,(%esp)
   1ab5f:	8d 70 01             	lea    0x1(%eax),%esi
   1ab62:	57                   	push   %edi
   1ab63:	89 f0                	mov    %esi,%eax
   1ab65:	0f b6 c0             	movzbl %al,%eax
   1ab68:	50                   	push   %eax
   1ab69:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   1ab6f:	50                   	push   %eax
   1ab70:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1ab76:	50                   	push   %eax
   1ab77:	e8 24 76 ff ff       	call   121a0 <print_asm_2>
   1ab7c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1ab82:	83 c4 20             	add    $0x20,%esp
   1ab85:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   1ab89:	83 e0 41             	and    $0x41,%eax
   1ab8c:	3c 01                	cmp    $0x1,%al
   1ab8e:	74 05                	je     1ab95 <cmovae_rm2r_v+0x75>
   1ab90:	e8 bb fe ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1ab95:	83 c4 0c             	add    $0xc,%esp
   1ab98:	89 f0                	mov    %esi,%eax
   1ab9a:	5b                   	pop    %ebx
   1ab9b:	5e                   	pop    %esi
   1ab9c:	5f                   	pop    %edi
   1ab9d:	5d                   	pop    %ebp
   1ab9e:	c3                   	ret    
   1ab9f:	90                   	nop

0001aba0 <cmovb_rm2r_v>:
   1aba0:	55                   	push   %ebp
   1aba1:	57                   	push   %edi
   1aba2:	56                   	push   %esi
   1aba3:	53                   	push   %ebx
   1aba4:	e8 d7 98 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1aba9:	81 c3 57 44 03 00    	add    $0x34457,%ebx
   1abaf:	83 ec 10             	sub    $0x10,%esp
   1abb2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1abb8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1abbe:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1abc4:	0f b6 00             	movzbl (%eax),%eax
   1abc7:	57                   	push   %edi
   1abc8:	89 45 10             	mov    %eax,0x10(%ebp)
   1abcb:	55                   	push   %ebp
   1abcc:	89 47 10             	mov    %eax,0x10(%edi)
   1abcf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1abd3:	83 c0 01             	add    $0x1,%eax
   1abd6:	50                   	push   %eax
   1abd7:	e8 c4 72 ff ff       	call   11ea0 <modrm_r_rm>
   1abdc:	89 2c 24             	mov    %ebp,(%esp)
   1abdf:	8d 70 01             	lea    0x1(%eax),%esi
   1abe2:	57                   	push   %edi
   1abe3:	89 f0                	mov    %esi,%eax
   1abe5:	0f b6 c0             	movzbl %al,%eax
   1abe8:	50                   	push   %eax
   1abe9:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1abef:	50                   	push   %eax
   1abf0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1abf6:	50                   	push   %eax
   1abf7:	e8 a4 75 ff ff       	call   121a0 <print_asm_2>
   1abfc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1ac02:	83 c4 20             	add    $0x20,%esp
   1ac05:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   1ac09:	83 e0 41             	and    $0x41,%eax
   1ac0c:	3c 01                	cmp    $0x1,%al
   1ac0e:	74 10                	je     1ac20 <cmovb_rm2r_v+0x80>
   1ac10:	83 c4 0c             	add    $0xc,%esp
   1ac13:	89 f0                	mov    %esi,%eax
   1ac15:	5b                   	pop    %ebx
   1ac16:	5e                   	pop    %esi
   1ac17:	5f                   	pop    %edi
   1ac18:	5d                   	pop    %ebp
   1ac19:	c3                   	ret    
   1ac1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ac20:	e8 2b fe ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1ac25:	83 c4 0c             	add    $0xc,%esp
   1ac28:	89 f0                	mov    %esi,%eax
   1ac2a:	5b                   	pop    %ebx
   1ac2b:	5e                   	pop    %esi
   1ac2c:	5f                   	pop    %edi
   1ac2d:	5d                   	pop    %ebp
   1ac2e:	c3                   	ret    
   1ac2f:	90                   	nop

0001ac30 <cmovbe_rm2r_v>:
   1ac30:	55                   	push   %ebp
   1ac31:	57                   	push   %edi
   1ac32:	56                   	push   %esi
   1ac33:	53                   	push   %ebx
   1ac34:	e8 47 98 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ac39:	81 c3 c7 43 03 00    	add    $0x343c7,%ebx
   1ac3f:	83 ec 10             	sub    $0x10,%esp
   1ac42:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1ac48:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1ac4e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1ac54:	0f b6 00             	movzbl (%eax),%eax
   1ac57:	57                   	push   %edi
   1ac58:	89 45 10             	mov    %eax,0x10(%ebp)
   1ac5b:	55                   	push   %ebp
   1ac5c:	89 47 10             	mov    %eax,0x10(%edi)
   1ac5f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1ac63:	83 c0 01             	add    $0x1,%eax
   1ac66:	50                   	push   %eax
   1ac67:	e8 34 72 ff ff       	call   11ea0 <modrm_r_rm>
   1ac6c:	89 2c 24             	mov    %ebp,(%esp)
   1ac6f:	8d 70 01             	lea    0x1(%eax),%esi
   1ac72:	57                   	push   %edi
   1ac73:	89 f0                	mov    %esi,%eax
   1ac75:	0f b6 c0             	movzbl %al,%eax
   1ac78:	50                   	push   %eax
   1ac79:	8d 83 f4 6a fe ff    	lea    -0x1950c(%ebx),%eax
   1ac7f:	50                   	push   %eax
   1ac80:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1ac86:	50                   	push   %eax
   1ac87:	e8 14 75 ff ff       	call   121a0 <print_asm_2>
   1ac8c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1ac92:	83 c4 20             	add    $0x20,%esp
   1ac95:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   1ac99:	75 0d                	jne    1aca8 <cmovbe_rm2r_v+0x78>
   1ac9b:	83 c4 0c             	add    $0xc,%esp
   1ac9e:	89 f0                	mov    %esi,%eax
   1aca0:	5b                   	pop    %ebx
   1aca1:	5e                   	pop    %esi
   1aca2:	5f                   	pop    %edi
   1aca3:	5d                   	pop    %ebp
   1aca4:	c3                   	ret    
   1aca5:	8d 76 00             	lea    0x0(%esi),%esi
   1aca8:	e8 a3 fd ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1acad:	83 c4 0c             	add    $0xc,%esp
   1acb0:	89 f0                	mov    %esi,%eax
   1acb2:	5b                   	pop    %ebx
   1acb3:	5e                   	pop    %esi
   1acb4:	5f                   	pop    %edi
   1acb5:	5d                   	pop    %ebp
   1acb6:	c3                   	ret    
   1acb7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1acbe:	66 90                	xchg   %ax,%ax

0001acc0 <cmovg_rm2r_v>:
   1acc0:	55                   	push   %ebp
   1acc1:	57                   	push   %edi
   1acc2:	56                   	push   %esi
   1acc3:	53                   	push   %ebx
   1acc4:	e8 b7 97 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1acc9:	81 c3 37 43 03 00    	add    $0x34337,%ebx
   1accf:	83 ec 10             	sub    $0x10,%esp
   1acd2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1acd8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1acde:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1ace4:	0f b6 00             	movzbl (%eax),%eax
   1ace7:	57                   	push   %edi
   1ace8:	89 45 10             	mov    %eax,0x10(%ebp)
   1aceb:	55                   	push   %ebp
   1acec:	89 47 10             	mov    %eax,0x10(%edi)
   1acef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1acf3:	83 c0 01             	add    $0x1,%eax
   1acf6:	50                   	push   %eax
   1acf7:	e8 a4 71 ff ff       	call   11ea0 <modrm_r_rm>
   1acfc:	89 2c 24             	mov    %ebp,(%esp)
   1acff:	8d 70 01             	lea    0x1(%eax),%esi
   1ad02:	57                   	push   %edi
   1ad03:	89 f0                	mov    %esi,%eax
   1ad05:	0f b6 c0             	movzbl %al,%eax
   1ad08:	50                   	push   %eax
   1ad09:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   1ad0f:	50                   	push   %eax
   1ad10:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1ad16:	50                   	push   %eax
   1ad17:	e8 84 74 ff ff       	call   121a0 <print_asm_2>
   1ad1c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1ad22:	83 c4 20             	add    $0x20,%esp
   1ad25:	0f b6 48 24          	movzbl 0x24(%eax),%ecx
   1ad29:	0f b6 50 25          	movzbl 0x25(%eax),%edx
   1ad2d:	89 cb                	mov    %ecx,%ebx
   1ad2f:	c0 ea 03             	shr    $0x3,%dl
   1ad32:	c0 eb 07             	shr    $0x7,%bl
   1ad35:	83 e2 01             	and    $0x1,%edx
   1ad38:	38 d3                	cmp    %dl,%bl
   1ad3a:	74 14                	je     1ad50 <cmovg_rm2r_v+0x90>
   1ad3c:	83 c4 0c             	add    $0xc,%esp
   1ad3f:	89 f0                	mov    %esi,%eax
   1ad41:	5b                   	pop    %ebx
   1ad42:	5e                   	pop    %esi
   1ad43:	5f                   	pop    %edi
   1ad44:	5d                   	pop    %ebp
   1ad45:	c3                   	ret    
   1ad46:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ad4d:	8d 76 00             	lea    0x0(%esi),%esi
   1ad50:	83 e1 40             	and    $0x40,%ecx
   1ad53:	75 e7                	jne    1ad3c <cmovg_rm2r_v+0x7c>
   1ad55:	e8 f6 fc ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1ad5a:	83 c4 0c             	add    $0xc,%esp
   1ad5d:	89 f0                	mov    %esi,%eax
   1ad5f:	5b                   	pop    %ebx
   1ad60:	5e                   	pop    %esi
   1ad61:	5f                   	pop    %edi
   1ad62:	5d                   	pop    %ebp
   1ad63:	c3                   	ret    
   1ad64:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ad6b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ad6f:	90                   	nop

0001ad70 <cmovge_rm2r_v>:
   1ad70:	55                   	push   %ebp
   1ad71:	57                   	push   %edi
   1ad72:	56                   	push   %esi
   1ad73:	53                   	push   %ebx
   1ad74:	e8 07 97 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ad79:	81 c3 87 42 03 00    	add    $0x34287,%ebx
   1ad7f:	83 ec 10             	sub    $0x10,%esp
   1ad82:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1ad88:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1ad8e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1ad94:	0f b6 00             	movzbl (%eax),%eax
   1ad97:	57                   	push   %edi
   1ad98:	89 45 10             	mov    %eax,0x10(%ebp)
   1ad9b:	55                   	push   %ebp
   1ad9c:	89 47 10             	mov    %eax,0x10(%edi)
   1ad9f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1ada3:	83 c0 01             	add    $0x1,%eax
   1ada6:	50                   	push   %eax
   1ada7:	e8 f4 70 ff ff       	call   11ea0 <modrm_r_rm>
   1adac:	89 2c 24             	mov    %ebp,(%esp)
   1adaf:	8d 70 01             	lea    0x1(%eax),%esi
   1adb2:	57                   	push   %edi
   1adb3:	89 f0                	mov    %esi,%eax
   1adb5:	0f b6 c0             	movzbl %al,%eax
   1adb8:	50                   	push   %eax
   1adb9:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   1adbf:	50                   	push   %eax
   1adc0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1adc6:	50                   	push   %eax
   1adc7:	e8 d4 73 ff ff       	call   121a0 <print_asm_2>
   1adcc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1add2:	83 c4 20             	add    $0x20,%esp
   1add5:	0f b6 48 24          	movzbl 0x24(%eax),%ecx
   1add9:	0f b6 50 25          	movzbl 0x25(%eax),%edx
   1addd:	89 cb                	mov    %ecx,%ebx
   1addf:	c0 ea 03             	shr    $0x3,%dl
   1ade2:	c0 eb 07             	shr    $0x7,%bl
   1ade5:	83 e2 01             	and    $0x1,%edx
   1ade8:	38 d3                	cmp    %dl,%bl
   1adea:	74 05                	je     1adf1 <cmovge_rm2r_v+0x81>
   1adec:	83 e1 40             	and    $0x40,%ecx
   1adef:	74 05                	je     1adf6 <cmovge_rm2r_v+0x86>
   1adf1:	e8 5a fc ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1adf6:	83 c4 0c             	add    $0xc,%esp
   1adf9:	89 f0                	mov    %esi,%eax
   1adfb:	5b                   	pop    %ebx
   1adfc:	5e                   	pop    %esi
   1adfd:	5f                   	pop    %edi
   1adfe:	5d                   	pop    %ebp
   1adff:	c3                   	ret    

0001ae00 <cmovl_rm2r_v>:
   1ae00:	55                   	push   %ebp
   1ae01:	57                   	push   %edi
   1ae02:	56                   	push   %esi
   1ae03:	53                   	push   %ebx
   1ae04:	e8 77 96 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ae09:	81 c3 f7 41 03 00    	add    $0x341f7,%ebx
   1ae0f:	83 ec 10             	sub    $0x10,%esp
   1ae12:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1ae18:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1ae1e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1ae24:	0f b6 00             	movzbl (%eax),%eax
   1ae27:	57                   	push   %edi
   1ae28:	89 45 10             	mov    %eax,0x10(%ebp)
   1ae2b:	55                   	push   %ebp
   1ae2c:	89 47 10             	mov    %eax,0x10(%edi)
   1ae2f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1ae33:	83 c0 01             	add    $0x1,%eax
   1ae36:	50                   	push   %eax
   1ae37:	e8 64 70 ff ff       	call   11ea0 <modrm_r_rm>
   1ae3c:	89 2c 24             	mov    %ebp,(%esp)
   1ae3f:	8d 70 01             	lea    0x1(%eax),%esi
   1ae42:	57                   	push   %edi
   1ae43:	89 f0                	mov    %esi,%eax
   1ae45:	0f b6 c0             	movzbl %al,%eax
   1ae48:	50                   	push   %eax
   1ae49:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1ae4f:	50                   	push   %eax
   1ae50:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1ae56:	50                   	push   %eax
   1ae57:	e8 44 73 ff ff       	call   121a0 <print_asm_2>
   1ae5c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1ae62:	83 c4 20             	add    $0x20,%esp
   1ae65:	0f b6 48 24          	movzbl 0x24(%eax),%ecx
   1ae69:	0f b6 50 25          	movzbl 0x25(%eax),%edx
   1ae6d:	89 cb                	mov    %ecx,%ebx
   1ae6f:	c0 ea 03             	shr    $0x3,%dl
   1ae72:	c0 eb 07             	shr    $0x7,%bl
   1ae75:	83 e2 01             	and    $0x1,%edx
   1ae78:	38 d3                	cmp    %dl,%bl
   1ae7a:	74 05                	je     1ae81 <cmovl_rm2r_v+0x81>
   1ae7c:	83 e1 40             	and    $0x40,%ecx
   1ae7f:	74 0f                	je     1ae90 <cmovl_rm2r_v+0x90>
   1ae81:	83 c4 0c             	add    $0xc,%esp
   1ae84:	89 f0                	mov    %esi,%eax
   1ae86:	5b                   	pop    %ebx
   1ae87:	5e                   	pop    %esi
   1ae88:	5f                   	pop    %edi
   1ae89:	5d                   	pop    %ebp
   1ae8a:	c3                   	ret    
   1ae8b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ae8f:	90                   	nop
   1ae90:	e8 bb fb ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1ae95:	83 c4 0c             	add    $0xc,%esp
   1ae98:	89 f0                	mov    %esi,%eax
   1ae9a:	5b                   	pop    %ebx
   1ae9b:	5e                   	pop    %esi
   1ae9c:	5f                   	pop    %edi
   1ae9d:	5d                   	pop    %ebp
   1ae9e:	c3                   	ret    
   1ae9f:	90                   	nop

0001aea0 <cmovle_rm2r_v>:
   1aea0:	55                   	push   %ebp
   1aea1:	57                   	push   %edi
   1aea2:	56                   	push   %esi
   1aea3:	53                   	push   %ebx
   1aea4:	e8 d7 95 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1aea9:	81 c3 57 41 03 00    	add    $0x34157,%ebx
   1aeaf:	83 ec 10             	sub    $0x10,%esp
   1aeb2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1aeb8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1aebe:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1aec4:	0f b6 00             	movzbl (%eax),%eax
   1aec7:	57                   	push   %edi
   1aec8:	89 45 10             	mov    %eax,0x10(%ebp)
   1aecb:	55                   	push   %ebp
   1aecc:	89 47 10             	mov    %eax,0x10(%edi)
   1aecf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1aed3:	83 c0 01             	add    $0x1,%eax
   1aed6:	50                   	push   %eax
   1aed7:	e8 c4 6f ff ff       	call   11ea0 <modrm_r_rm>
   1aedc:	89 2c 24             	mov    %ebp,(%esp)
   1aedf:	8d 70 01             	lea    0x1(%eax),%esi
   1aee2:	57                   	push   %edi
   1aee3:	89 f0                	mov    %esi,%eax
   1aee5:	0f b6 c0             	movzbl %al,%eax
   1aee8:	50                   	push   %eax
   1aee9:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   1aeef:	50                   	push   %eax
   1aef0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1aef6:	50                   	push   %eax
   1aef7:	e8 a4 72 ff ff       	call   121a0 <print_asm_2>
   1aefc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1af02:	83 c4 20             	add    $0x20,%esp
   1af05:	0f b6 48 24          	movzbl 0x24(%eax),%ecx
   1af09:	0f b6 50 25          	movzbl 0x25(%eax),%edx
   1af0d:	89 cb                	mov    %ecx,%ebx
   1af0f:	c0 ea 03             	shr    $0x3,%dl
   1af12:	c0 eb 07             	shr    $0x7,%bl
   1af15:	83 e2 01             	and    $0x1,%edx
   1af18:	38 d3                	cmp    %dl,%bl
   1af1a:	75 05                	jne    1af21 <cmovle_rm2r_v+0x81>
   1af1c:	83 e1 40             	and    $0x40,%ecx
   1af1f:	74 05                	je     1af26 <cmovle_rm2r_v+0x86>
   1af21:	e8 2a fb ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1af26:	83 c4 0c             	add    $0xc,%esp
   1af29:	89 f0                	mov    %esi,%eax
   1af2b:	5b                   	pop    %ebx
   1af2c:	5e                   	pop    %esi
   1af2d:	5f                   	pop    %edi
   1af2e:	5d                   	pop    %ebp
   1af2f:	c3                   	ret    

0001af30 <cmovne_rm2r_v>:
   1af30:	55                   	push   %ebp
   1af31:	57                   	push   %edi
   1af32:	56                   	push   %esi
   1af33:	53                   	push   %ebx
   1af34:	e8 47 95 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1af39:	81 c3 c7 40 03 00    	add    $0x340c7,%ebx
   1af3f:	83 ec 10             	sub    $0x10,%esp
   1af42:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1af48:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1af4e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1af54:	0f b6 00             	movzbl (%eax),%eax
   1af57:	57                   	push   %edi
   1af58:	89 45 10             	mov    %eax,0x10(%ebp)
   1af5b:	55                   	push   %ebp
   1af5c:	89 47 10             	mov    %eax,0x10(%edi)
   1af5f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1af63:	83 c0 01             	add    $0x1,%eax
   1af66:	50                   	push   %eax
   1af67:	e8 34 6f ff ff       	call   11ea0 <modrm_r_rm>
   1af6c:	89 2c 24             	mov    %ebp,(%esp)
   1af6f:	8d 70 01             	lea    0x1(%eax),%esi
   1af72:	57                   	push   %edi
   1af73:	89 f0                	mov    %esi,%eax
   1af75:	0f b6 c0             	movzbl %al,%eax
   1af78:	50                   	push   %eax
   1af79:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   1af7f:	50                   	push   %eax
   1af80:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1af86:	50                   	push   %eax
   1af87:	e8 14 72 ff ff       	call   121a0 <print_asm_2>
   1af8c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1af92:	83 c4 20             	add    $0x20,%esp
   1af95:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   1af99:	74 0d                	je     1afa8 <cmovne_rm2r_v+0x78>
   1af9b:	83 c4 0c             	add    $0xc,%esp
   1af9e:	89 f0                	mov    %esi,%eax
   1afa0:	5b                   	pop    %ebx
   1afa1:	5e                   	pop    %esi
   1afa2:	5f                   	pop    %edi
   1afa3:	5d                   	pop    %ebp
   1afa4:	c3                   	ret    
   1afa5:	8d 76 00             	lea    0x0(%esi),%esi
   1afa8:	e8 a3 fa ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1afad:	83 c4 0c             	add    $0xc,%esp
   1afb0:	89 f0                	mov    %esi,%eax
   1afb2:	5b                   	pop    %ebx
   1afb3:	5e                   	pop    %esi
   1afb4:	5f                   	pop    %edi
   1afb5:	5d                   	pop    %ebp
   1afb6:	c3                   	ret    
   1afb7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1afbe:	66 90                	xchg   %ax,%ax

0001afc0 <cmovno_rm2r_v>:
   1afc0:	55                   	push   %ebp
   1afc1:	57                   	push   %edi
   1afc2:	56                   	push   %esi
   1afc3:	53                   	push   %ebx
   1afc4:	e8 b7 94 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1afc9:	81 c3 37 40 03 00    	add    $0x34037,%ebx
   1afcf:	83 ec 10             	sub    $0x10,%esp
   1afd2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1afd8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1afde:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1afe4:	0f b6 00             	movzbl (%eax),%eax
   1afe7:	57                   	push   %edi
   1afe8:	89 45 10             	mov    %eax,0x10(%ebp)
   1afeb:	55                   	push   %ebp
   1afec:	89 47 10             	mov    %eax,0x10(%edi)
   1afef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1aff3:	83 c0 01             	add    $0x1,%eax
   1aff6:	50                   	push   %eax
   1aff7:	e8 a4 6e ff ff       	call   11ea0 <modrm_r_rm>
   1affc:	89 2c 24             	mov    %ebp,(%esp)
   1afff:	8d 70 01             	lea    0x1(%eax),%esi
   1b002:	57                   	push   %edi
   1b003:	89 f0                	mov    %esi,%eax
   1b005:	0f b6 c0             	movzbl %al,%eax
   1b008:	50                   	push   %eax
   1b009:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   1b00f:	50                   	push   %eax
   1b010:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1b016:	50                   	push   %eax
   1b017:	e8 84 71 ff ff       	call   121a0 <print_asm_2>
   1b01c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1b022:	83 c4 20             	add    $0x20,%esp
   1b025:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   1b029:	74 0d                	je     1b038 <cmovno_rm2r_v+0x78>
   1b02b:	83 c4 0c             	add    $0xc,%esp
   1b02e:	89 f0                	mov    %esi,%eax
   1b030:	5b                   	pop    %ebx
   1b031:	5e                   	pop    %esi
   1b032:	5f                   	pop    %edi
   1b033:	5d                   	pop    %ebp
   1b034:	c3                   	ret    
   1b035:	8d 76 00             	lea    0x0(%esi),%esi
   1b038:	e8 13 fa ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1b03d:	83 c4 0c             	add    $0xc,%esp
   1b040:	89 f0                	mov    %esi,%eax
   1b042:	5b                   	pop    %ebx
   1b043:	5e                   	pop    %esi
   1b044:	5f                   	pop    %edi
   1b045:	5d                   	pop    %ebp
   1b046:	c3                   	ret    
   1b047:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b04e:	66 90                	xchg   %ax,%ax

0001b050 <cmovnp_rm2r_v>:
   1b050:	55                   	push   %ebp
   1b051:	57                   	push   %edi
   1b052:	56                   	push   %esi
   1b053:	53                   	push   %ebx
   1b054:	e8 27 94 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b059:	81 c3 a7 3f 03 00    	add    $0x33fa7,%ebx
   1b05f:	83 ec 10             	sub    $0x10,%esp
   1b062:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b068:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1b06e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b074:	0f b6 00             	movzbl (%eax),%eax
   1b077:	57                   	push   %edi
   1b078:	89 45 10             	mov    %eax,0x10(%ebp)
   1b07b:	55                   	push   %ebp
   1b07c:	89 47 10             	mov    %eax,0x10(%edi)
   1b07f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b083:	83 c0 01             	add    $0x1,%eax
   1b086:	50                   	push   %eax
   1b087:	e8 14 6e ff ff       	call   11ea0 <modrm_r_rm>
   1b08c:	89 2c 24             	mov    %ebp,(%esp)
   1b08f:	8d 70 01             	lea    0x1(%eax),%esi
   1b092:	57                   	push   %edi
   1b093:	89 f0                	mov    %esi,%eax
   1b095:	0f b6 c0             	movzbl %al,%eax
   1b098:	50                   	push   %eax
   1b099:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   1b09f:	50                   	push   %eax
   1b0a0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1b0a6:	50                   	push   %eax
   1b0a7:	e8 f4 70 ff ff       	call   121a0 <print_asm_2>
   1b0ac:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1b0b2:	83 c4 20             	add    $0x20,%esp
   1b0b5:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   1b0b9:	74 0d                	je     1b0c8 <cmovnp_rm2r_v+0x78>
   1b0bb:	83 c4 0c             	add    $0xc,%esp
   1b0be:	89 f0                	mov    %esi,%eax
   1b0c0:	5b                   	pop    %ebx
   1b0c1:	5e                   	pop    %esi
   1b0c2:	5f                   	pop    %edi
   1b0c3:	5d                   	pop    %ebp
   1b0c4:	c3                   	ret    
   1b0c5:	8d 76 00             	lea    0x0(%esi),%esi
   1b0c8:	e8 83 f9 ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1b0cd:	83 c4 0c             	add    $0xc,%esp
   1b0d0:	89 f0                	mov    %esi,%eax
   1b0d2:	5b                   	pop    %ebx
   1b0d3:	5e                   	pop    %esi
   1b0d4:	5f                   	pop    %edi
   1b0d5:	5d                   	pop    %ebp
   1b0d6:	c3                   	ret    
   1b0d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b0de:	66 90                	xchg   %ax,%ax

0001b0e0 <cmovns_rm2r_v>:
   1b0e0:	55                   	push   %ebp
   1b0e1:	57                   	push   %edi
   1b0e2:	56                   	push   %esi
   1b0e3:	53                   	push   %ebx
   1b0e4:	e8 97 93 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b0e9:	81 c3 17 3f 03 00    	add    $0x33f17,%ebx
   1b0ef:	83 ec 10             	sub    $0x10,%esp
   1b0f2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b0f8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1b0fe:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b104:	0f b6 00             	movzbl (%eax),%eax
   1b107:	57                   	push   %edi
   1b108:	89 45 10             	mov    %eax,0x10(%ebp)
   1b10b:	55                   	push   %ebp
   1b10c:	89 47 10             	mov    %eax,0x10(%edi)
   1b10f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b113:	83 c0 01             	add    $0x1,%eax
   1b116:	50                   	push   %eax
   1b117:	e8 84 6d ff ff       	call   11ea0 <modrm_r_rm>
   1b11c:	89 2c 24             	mov    %ebp,(%esp)
   1b11f:	8d 70 01             	lea    0x1(%eax),%esi
   1b122:	57                   	push   %edi
   1b123:	89 f0                	mov    %esi,%eax
   1b125:	0f b6 c0             	movzbl %al,%eax
   1b128:	50                   	push   %eax
   1b129:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   1b12f:	50                   	push   %eax
   1b130:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1b136:	50                   	push   %eax
   1b137:	e8 64 70 ff ff       	call   121a0 <print_asm_2>
   1b13c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1b142:	83 c4 20             	add    $0x20,%esp
   1b145:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   1b149:	78 05                	js     1b150 <cmovns_rm2r_v+0x70>
   1b14b:	e8 00 f9 ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1b150:	83 c4 0c             	add    $0xc,%esp
   1b153:	89 f0                	mov    %esi,%eax
   1b155:	5b                   	pop    %ebx
   1b156:	5e                   	pop    %esi
   1b157:	5f                   	pop    %edi
   1b158:	5d                   	pop    %ebp
   1b159:	c3                   	ret    
   1b15a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001b160 <cmovo_rm2r_v>:
   1b160:	55                   	push   %ebp
   1b161:	57                   	push   %edi
   1b162:	56                   	push   %esi
   1b163:	53                   	push   %ebx
   1b164:	e8 17 93 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b169:	81 c3 97 3e 03 00    	add    $0x33e97,%ebx
   1b16f:	83 ec 10             	sub    $0x10,%esp
   1b172:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b178:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1b17e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b184:	0f b6 00             	movzbl (%eax),%eax
   1b187:	57                   	push   %edi
   1b188:	89 45 10             	mov    %eax,0x10(%ebp)
   1b18b:	55                   	push   %ebp
   1b18c:	89 47 10             	mov    %eax,0x10(%edi)
   1b18f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b193:	83 c0 01             	add    $0x1,%eax
   1b196:	50                   	push   %eax
   1b197:	e8 04 6d ff ff       	call   11ea0 <modrm_r_rm>
   1b19c:	89 2c 24             	mov    %ebp,(%esp)
   1b19f:	8d 70 01             	lea    0x1(%eax),%esi
   1b1a2:	57                   	push   %edi
   1b1a3:	89 f0                	mov    %esi,%eax
   1b1a5:	0f b6 c0             	movzbl %al,%eax
   1b1a8:	50                   	push   %eax
   1b1a9:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   1b1af:	50                   	push   %eax
   1b1b0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1b1b6:	50                   	push   %eax
   1b1b7:	e8 e4 6f ff ff       	call   121a0 <print_asm_2>
   1b1bc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1b1c2:	83 c4 20             	add    $0x20,%esp
   1b1c5:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   1b1c9:	75 0d                	jne    1b1d8 <cmovo_rm2r_v+0x78>
   1b1cb:	83 c4 0c             	add    $0xc,%esp
   1b1ce:	89 f0                	mov    %esi,%eax
   1b1d0:	5b                   	pop    %ebx
   1b1d1:	5e                   	pop    %esi
   1b1d2:	5f                   	pop    %edi
   1b1d3:	5d                   	pop    %ebp
   1b1d4:	c3                   	ret    
   1b1d5:	8d 76 00             	lea    0x0(%esi),%esi
   1b1d8:	e8 73 f8 ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1b1dd:	83 c4 0c             	add    $0xc,%esp
   1b1e0:	89 f0                	mov    %esi,%eax
   1b1e2:	5b                   	pop    %ebx
   1b1e3:	5e                   	pop    %esi
   1b1e4:	5f                   	pop    %edi
   1b1e5:	5d                   	pop    %ebp
   1b1e6:	c3                   	ret    
   1b1e7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b1ee:	66 90                	xchg   %ax,%ax

0001b1f0 <cmovp_rm2r_v>:
   1b1f0:	55                   	push   %ebp
   1b1f1:	57                   	push   %edi
   1b1f2:	56                   	push   %esi
   1b1f3:	53                   	push   %ebx
   1b1f4:	e8 87 92 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b1f9:	81 c3 07 3e 03 00    	add    $0x33e07,%ebx
   1b1ff:	83 ec 10             	sub    $0x10,%esp
   1b202:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b208:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1b20e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b214:	0f b6 00             	movzbl (%eax),%eax
   1b217:	57                   	push   %edi
   1b218:	89 45 10             	mov    %eax,0x10(%ebp)
   1b21b:	55                   	push   %ebp
   1b21c:	89 47 10             	mov    %eax,0x10(%edi)
   1b21f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b223:	83 c0 01             	add    $0x1,%eax
   1b226:	50                   	push   %eax
   1b227:	e8 74 6c ff ff       	call   11ea0 <modrm_r_rm>
   1b22c:	89 2c 24             	mov    %ebp,(%esp)
   1b22f:	8d 70 01             	lea    0x1(%eax),%esi
   1b232:	57                   	push   %edi
   1b233:	89 f0                	mov    %esi,%eax
   1b235:	0f b6 c0             	movzbl %al,%eax
   1b238:	50                   	push   %eax
   1b239:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   1b23f:	50                   	push   %eax
   1b240:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1b246:	50                   	push   %eax
   1b247:	e8 54 6f ff ff       	call   121a0 <print_asm_2>
   1b24c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1b252:	83 c4 20             	add    $0x20,%esp
   1b255:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   1b259:	75 0d                	jne    1b268 <cmovp_rm2r_v+0x78>
   1b25b:	83 c4 0c             	add    $0xc,%esp
   1b25e:	89 f0                	mov    %esi,%eax
   1b260:	5b                   	pop    %ebx
   1b261:	5e                   	pop    %esi
   1b262:	5f                   	pop    %edi
   1b263:	5d                   	pop    %ebp
   1b264:	c3                   	ret    
   1b265:	8d 76 00             	lea    0x0(%esi),%esi
   1b268:	e8 e3 f7 ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1b26d:	83 c4 0c             	add    $0xc,%esp
   1b270:	89 f0                	mov    %esi,%eax
   1b272:	5b                   	pop    %ebx
   1b273:	5e                   	pop    %esi
   1b274:	5f                   	pop    %edi
   1b275:	5d                   	pop    %ebp
   1b276:	c3                   	ret    
   1b277:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b27e:	66 90                	xchg   %ax,%ax

0001b280 <cmovs_rm2r_v>:
   1b280:	55                   	push   %ebp
   1b281:	57                   	push   %edi
   1b282:	56                   	push   %esi
   1b283:	53                   	push   %ebx
   1b284:	e8 f7 91 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b289:	81 c3 77 3d 03 00    	add    $0x33d77,%ebx
   1b28f:	83 ec 10             	sub    $0x10,%esp
   1b292:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b298:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1b29e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b2a4:	0f b6 00             	movzbl (%eax),%eax
   1b2a7:	57                   	push   %edi
   1b2a8:	89 45 10             	mov    %eax,0x10(%ebp)
   1b2ab:	55                   	push   %ebp
   1b2ac:	89 47 10             	mov    %eax,0x10(%edi)
   1b2af:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b2b3:	83 c0 01             	add    $0x1,%eax
   1b2b6:	50                   	push   %eax
   1b2b7:	e8 e4 6b ff ff       	call   11ea0 <modrm_r_rm>
   1b2bc:	89 2c 24             	mov    %ebp,(%esp)
   1b2bf:	8d 70 01             	lea    0x1(%eax),%esi
   1b2c2:	57                   	push   %edi
   1b2c3:	89 f0                	mov    %esi,%eax
   1b2c5:	0f b6 c0             	movzbl %al,%eax
   1b2c8:	50                   	push   %eax
   1b2c9:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   1b2cf:	50                   	push   %eax
   1b2d0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1b2d6:	50                   	push   %eax
   1b2d7:	e8 c4 6e ff ff       	call   121a0 <print_asm_2>
   1b2dc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1b2e2:	83 c4 20             	add    $0x20,%esp
   1b2e5:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   1b2e9:	78 0d                	js     1b2f8 <cmovs_rm2r_v+0x78>
   1b2eb:	83 c4 0c             	add    $0xc,%esp
   1b2ee:	89 f0                	mov    %esi,%eax
   1b2f0:	5b                   	pop    %ebx
   1b2f1:	5e                   	pop    %esi
   1b2f2:	5f                   	pop    %edi
   1b2f3:	5d                   	pop    %ebp
   1b2f4:	c3                   	ret    
   1b2f5:	8d 76 00             	lea    0x0(%esi),%esi
   1b2f8:	e8 53 f7 ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1b2fd:	83 c4 0c             	add    $0xc,%esp
   1b300:	89 f0                	mov    %esi,%eax
   1b302:	5b                   	pop    %ebx
   1b303:	5e                   	pop    %esi
   1b304:	5f                   	pop    %edi
   1b305:	5d                   	pop    %ebp
   1b306:	c3                   	ret    
   1b307:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b30e:	66 90                	xchg   %ax,%ax

0001b310 <cmove_rm2r_v>:
   1b310:	55                   	push   %ebp
   1b311:	57                   	push   %edi
   1b312:	56                   	push   %esi
   1b313:	53                   	push   %ebx
   1b314:	e8 67 91 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b319:	81 c3 e7 3c 03 00    	add    $0x33ce7,%ebx
   1b31f:	83 ec 10             	sub    $0x10,%esp
   1b322:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b328:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1b32e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b334:	0f b6 00             	movzbl (%eax),%eax
   1b337:	57                   	push   %edi
   1b338:	89 45 10             	mov    %eax,0x10(%ebp)
   1b33b:	55                   	push   %ebp
   1b33c:	89 47 10             	mov    %eax,0x10(%edi)
   1b33f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b343:	83 c0 01             	add    $0x1,%eax
   1b346:	50                   	push   %eax
   1b347:	e8 54 6b ff ff       	call   11ea0 <modrm_r_rm>
   1b34c:	89 2c 24             	mov    %ebp,(%esp)
   1b34f:	8d 70 01             	lea    0x1(%eax),%esi
   1b352:	57                   	push   %edi
   1b353:	89 f0                	mov    %esi,%eax
   1b355:	0f b6 c0             	movzbl %al,%eax
   1b358:	50                   	push   %eax
   1b359:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   1b35f:	50                   	push   %eax
   1b360:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   1b366:	50                   	push   %eax
   1b367:	e8 34 6e ff ff       	call   121a0 <print_asm_2>
   1b36c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1b372:	83 c4 20             	add    $0x20,%esp
   1b375:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   1b379:	75 0d                	jne    1b388 <cmove_rm2r_v+0x78>
   1b37b:	83 c4 0c             	add    $0xc,%esp
   1b37e:	89 f0                	mov    %esi,%eax
   1b380:	5b                   	pop    %ebx
   1b381:	5e                   	pop    %esi
   1b382:	5f                   	pop    %edi
   1b383:	5d                   	pop    %ebp
   1b384:	c3                   	ret    
   1b385:	8d 76 00             	lea    0x0(%esi),%esi
   1b388:	e8 c3 f6 ff ff       	call   1aa50 <instr_execute_2op_cc_pass>
   1b38d:	83 c4 0c             	add    $0xc,%esp
   1b390:	89 f0                	mov    %esi,%eax
   1b392:	5b                   	pop    %ebx
   1b393:	5e                   	pop    %esi
   1b394:	5f                   	pop    %edi
   1b395:	5d                   	pop    %ebp
   1b396:	c3                   	ret    
   1b397:	66 90                	xchg   %ax,%ax
   1b399:	66 90                	xchg   %ax,%ax
   1b39b:	66 90                	xchg   %ax,%ax
   1b39d:	66 90                	xchg   %ax,%ax
   1b39f:	90                   	nop

0001b3a0 <sign_ext.part.0>:
   1b3a0:	53                   	push   %ebx
   1b3a1:	e8 da 90 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b3a6:	81 c3 5a 3c 03 00    	add    $0x33c5a,%ebx
   1b3ac:	83 ec 08             	sub    $0x8,%esp
   1b3af:	8d 83 f8 6a fe ff    	lea    -0x19508(%ebx),%eax
   1b3b5:	50                   	push   %eax
   1b3b6:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1b3bc:	6a 2e                	push   $0x2e
   1b3be:	50                   	push   %eax
   1b3bf:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   1b3c5:	50                   	push   %eax
   1b3c6:	e8 45 8f fe ff       	call   4310 <__assert_fail@plt>
   1b3cb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b3cf:	90                   	nop

0001b3d0 <instr_execute_2op>:
   1b3d0:	57                   	push   %edi
   1b3d1:	56                   	push   %esi
   1b3d2:	53                   	push   %ebx
   1b3d3:	e8 a8 90 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b3d8:	81 c3 28 3c 03 00    	add    $0x33c28,%ebx
   1b3de:	83 ec 0c             	sub    $0xc,%esp
   1b3e1:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b3e7:	57                   	push   %edi
   1b3e8:	e8 f3 6f ff ff       	call   123e0 <operand_read>
   1b3ed:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1b3f3:	89 34 24             	mov    %esi,(%esp)
   1b3f6:	e8 e5 6f ff ff       	call   123e0 <operand_read>
   1b3fb:	8b 57 10             	mov    0x10(%edi),%edx
   1b3fe:	83 c4 10             	add    $0x10,%esp
   1b401:	8b 47 0c             	mov    0xc(%edi),%eax
   1b404:	8d 4a f8             	lea    -0x8(%edx),%ecx
   1b407:	83 e1 f7             	and    $0xfffffff7,%ecx
   1b40a:	74 05                	je     1b411 <instr_execute_2op+0x41>
   1b40c:	83 fa 20             	cmp    $0x20,%edx
   1b40f:	75 6c                	jne    1b47d <instr_execute_2op+0xad>
   1b411:	83 fa 08             	cmp    $0x8,%edx
   1b414:	74 5a                	je     1b470 <instr_execute_2op+0xa0>
   1b416:	0f bf c8             	movswl %ax,%ecx
   1b419:	83 fa 10             	cmp    $0x10,%edx
   1b41c:	0f 44 c1             	cmove  %ecx,%eax
   1b41f:	8b 4e 10             	mov    0x10(%esi),%ecx
   1b422:	8b 56 0c             	mov    0xc(%esi),%edx
   1b425:	89 47 0c             	mov    %eax,0xc(%edi)
   1b428:	8d 79 f8             	lea    -0x8(%ecx),%edi
   1b42b:	83 e7 f7             	and    $0xfffffff7,%edi
   1b42e:	74 05                	je     1b435 <instr_execute_2op+0x65>
   1b430:	83 f9 20             	cmp    $0x20,%ecx
   1b433:	75 48                	jne    1b47d <instr_execute_2op+0xad>
   1b435:	83 f9 08             	cmp    $0x8,%ecx
   1b438:	74 3e                	je     1b478 <instr_execute_2op+0xa8>
   1b43a:	0f bf fa             	movswl %dx,%edi
   1b43d:	83 f9 10             	cmp    $0x10,%ecx
   1b440:	0f 44 d7             	cmove  %edi,%edx
   1b443:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   1b449:	83 ec 04             	sub    $0x4,%esp
   1b44c:	89 56 0c             	mov    %edx,0xc(%esi)
   1b44f:	0f b6 09             	movzbl (%ecx),%ecx
   1b452:	51                   	push   %ecx
   1b453:	52                   	push   %edx
   1b454:	50                   	push   %eax
   1b455:	e8 26 40 ff ff       	call   f480 <alu_adc>
   1b45a:	89 34 24             	mov    %esi,(%esp)
   1b45d:	89 46 0c             	mov    %eax,0xc(%esi)
   1b460:	e8 2b 71 ff ff       	call   12590 <operand_write>
   1b465:	83 c4 10             	add    $0x10,%esp
   1b468:	5b                   	pop    %ebx
   1b469:	5e                   	pop    %esi
   1b46a:	5f                   	pop    %edi
   1b46b:	c3                   	ret    
   1b46c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b470:	0f be c0             	movsbl %al,%eax
   1b473:	eb aa                	jmp    1b41f <instr_execute_2op+0x4f>
   1b475:	8d 76 00             	lea    0x0(%esi),%esi
   1b478:	0f be d2             	movsbl %dl,%edx
   1b47b:	eb c6                	jmp    1b443 <instr_execute_2op+0x73>
   1b47d:	e8 1e ff ff ff       	call   1b3a0 <sign_ext.part.0>
   1b482:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b489:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001b490 <adc_r2rm_b>:
   1b490:	55                   	push   %ebp
   1b491:	57                   	push   %edi
   1b492:	56                   	push   %esi
   1b493:	53                   	push   %ebx
   1b494:	e8 e7 8f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b499:	81 c3 67 3b 03 00    	add    $0x33b67,%ebx
   1b49f:	83 ec 10             	sub    $0x10,%esp
   1b4a2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1b4a8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b4ae:	56                   	push   %esi
   1b4af:	57                   	push   %edi
   1b4b0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b4b4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1b4bb:	83 c0 01             	add    $0x1,%eax
   1b4be:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1b4c5:	50                   	push   %eax
   1b4c6:	e8 d5 69 ff ff       	call   11ea0 <modrm_r_rm>
   1b4cb:	8b 4e 10             	mov    0x10(%esi),%ecx
   1b4ce:	83 c4 10             	add    $0x10,%esp
   1b4d1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1b4d7:	8d 68 01             	lea    0x1(%eax),%ebp
   1b4da:	89 e8                	mov    %ebp,%eax
   1b4dc:	0f b6 c0             	movzbl %al,%eax
   1b4df:	83 f9 08             	cmp    $0x8,%ecx
   1b4e2:	74 12                	je     1b4f6 <adc_r2rm_b+0x66>
   1b4e4:	83 f9 10             	cmp    $0x10,%ecx
   1b4e7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1b4ed:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1b4f3:	0f 45 d1             	cmovne %ecx,%edx
   1b4f6:	83 ec 0c             	sub    $0xc,%esp
   1b4f9:	56                   	push   %esi
   1b4fa:	57                   	push   %edi
   1b4fb:	50                   	push   %eax
   1b4fc:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b502:	52                   	push   %edx
   1b503:	50                   	push   %eax
   1b504:	e8 97 6c ff ff       	call   121a0 <print_asm_2>
   1b509:	83 c4 20             	add    $0x20,%esp
   1b50c:	e8 bf fe ff ff       	call   1b3d0 <instr_execute_2op>
   1b511:	83 c4 0c             	add    $0xc,%esp
   1b514:	89 e8                	mov    %ebp,%eax
   1b516:	5b                   	pop    %ebx
   1b517:	5e                   	pop    %esi
   1b518:	5f                   	pop    %edi
   1b519:	5d                   	pop    %ebp
   1b51a:	c3                   	ret    
   1b51b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b51f:	90                   	nop

0001b520 <adc_r2rm_v>:
   1b520:	55                   	push   %ebp
   1b521:	57                   	push   %edi
   1b522:	56                   	push   %esi
   1b523:	53                   	push   %ebx
   1b524:	e8 57 8f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b529:	81 c3 d7 3a 03 00    	add    $0x33ad7,%ebx
   1b52f:	83 ec 10             	sub    $0x10,%esp
   1b532:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b538:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1b53e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b544:	0f b6 00             	movzbl (%eax),%eax
   1b547:	56                   	push   %esi
   1b548:	57                   	push   %edi
   1b549:	89 46 10             	mov    %eax,0x10(%esi)
   1b54c:	89 47 10             	mov    %eax,0x10(%edi)
   1b54f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b553:	83 c0 01             	add    $0x1,%eax
   1b556:	50                   	push   %eax
   1b557:	e8 44 69 ff ff       	call   11ea0 <modrm_r_rm>
   1b55c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1b55f:	83 c4 10             	add    $0x10,%esp
   1b562:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1b568:	8d 68 01             	lea    0x1(%eax),%ebp
   1b56b:	89 e8                	mov    %ebp,%eax
   1b56d:	0f b6 c0             	movzbl %al,%eax
   1b570:	83 f9 08             	cmp    $0x8,%ecx
   1b573:	74 12                	je     1b587 <adc_r2rm_v+0x67>
   1b575:	83 f9 10             	cmp    $0x10,%ecx
   1b578:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1b57e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1b584:	0f 45 d1             	cmovne %ecx,%edx
   1b587:	83 ec 0c             	sub    $0xc,%esp
   1b58a:	56                   	push   %esi
   1b58b:	57                   	push   %edi
   1b58c:	50                   	push   %eax
   1b58d:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b593:	52                   	push   %edx
   1b594:	50                   	push   %eax
   1b595:	e8 06 6c ff ff       	call   121a0 <print_asm_2>
   1b59a:	83 c4 20             	add    $0x20,%esp
   1b59d:	e8 2e fe ff ff       	call   1b3d0 <instr_execute_2op>
   1b5a2:	83 c4 0c             	add    $0xc,%esp
   1b5a5:	89 e8                	mov    %ebp,%eax
   1b5a7:	5b                   	pop    %ebx
   1b5a8:	5e                   	pop    %esi
   1b5a9:	5f                   	pop    %edi
   1b5aa:	5d                   	pop    %ebp
   1b5ab:	c3                   	ret    
   1b5ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001b5b0 <adc_rm2r_b>:
   1b5b0:	55                   	push   %ebp
   1b5b1:	57                   	push   %edi
   1b5b2:	56                   	push   %esi
   1b5b3:	53                   	push   %ebx
   1b5b4:	e8 c7 8e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b5b9:	81 c3 47 3a 03 00    	add    $0x33a47,%ebx
   1b5bf:	83 ec 10             	sub    $0x10,%esp
   1b5c2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1b5c8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b5ce:	57                   	push   %edi
   1b5cf:	56                   	push   %esi
   1b5d0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b5d4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1b5db:	83 c0 01             	add    $0x1,%eax
   1b5de:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1b5e5:	50                   	push   %eax
   1b5e6:	e8 b5 68 ff ff       	call   11ea0 <modrm_r_rm>
   1b5eb:	8b 4e 10             	mov    0x10(%esi),%ecx
   1b5ee:	83 c4 10             	add    $0x10,%esp
   1b5f1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1b5f7:	8d 68 01             	lea    0x1(%eax),%ebp
   1b5fa:	89 e8                	mov    %ebp,%eax
   1b5fc:	0f b6 c0             	movzbl %al,%eax
   1b5ff:	83 f9 08             	cmp    $0x8,%ecx
   1b602:	74 12                	je     1b616 <adc_rm2r_b+0x66>
   1b604:	83 f9 10             	cmp    $0x10,%ecx
   1b607:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1b60d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1b613:	0f 45 d1             	cmovne %ecx,%edx
   1b616:	83 ec 0c             	sub    $0xc,%esp
   1b619:	56                   	push   %esi
   1b61a:	57                   	push   %edi
   1b61b:	50                   	push   %eax
   1b61c:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b622:	52                   	push   %edx
   1b623:	50                   	push   %eax
   1b624:	e8 77 6b ff ff       	call   121a0 <print_asm_2>
   1b629:	83 c4 20             	add    $0x20,%esp
   1b62c:	e8 9f fd ff ff       	call   1b3d0 <instr_execute_2op>
   1b631:	83 c4 0c             	add    $0xc,%esp
   1b634:	89 e8                	mov    %ebp,%eax
   1b636:	5b                   	pop    %ebx
   1b637:	5e                   	pop    %esi
   1b638:	5f                   	pop    %edi
   1b639:	5d                   	pop    %ebp
   1b63a:	c3                   	ret    
   1b63b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b63f:	90                   	nop

0001b640 <adc_rm2r_v>:
   1b640:	55                   	push   %ebp
   1b641:	57                   	push   %edi
   1b642:	56                   	push   %esi
   1b643:	53                   	push   %ebx
   1b644:	e8 37 8e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b649:	81 c3 b7 39 03 00    	add    $0x339b7,%ebx
   1b64f:	83 ec 10             	sub    $0x10,%esp
   1b652:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b658:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1b65e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b664:	0f b6 00             	movzbl (%eax),%eax
   1b667:	57                   	push   %edi
   1b668:	89 46 10             	mov    %eax,0x10(%esi)
   1b66b:	56                   	push   %esi
   1b66c:	89 47 10             	mov    %eax,0x10(%edi)
   1b66f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1b673:	83 c0 01             	add    $0x1,%eax
   1b676:	50                   	push   %eax
   1b677:	e8 24 68 ff ff       	call   11ea0 <modrm_r_rm>
   1b67c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1b67f:	83 c4 10             	add    $0x10,%esp
   1b682:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1b688:	8d 68 01             	lea    0x1(%eax),%ebp
   1b68b:	89 e8                	mov    %ebp,%eax
   1b68d:	0f b6 c0             	movzbl %al,%eax
   1b690:	83 f9 08             	cmp    $0x8,%ecx
   1b693:	74 12                	je     1b6a7 <adc_rm2r_v+0x67>
   1b695:	83 f9 10             	cmp    $0x10,%ecx
   1b698:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1b69e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1b6a4:	0f 45 d1             	cmovne %ecx,%edx
   1b6a7:	83 ec 0c             	sub    $0xc,%esp
   1b6aa:	56                   	push   %esi
   1b6ab:	57                   	push   %edi
   1b6ac:	50                   	push   %eax
   1b6ad:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b6b3:	52                   	push   %edx
   1b6b4:	50                   	push   %eax
   1b6b5:	e8 e6 6a ff ff       	call   121a0 <print_asm_2>
   1b6ba:	83 c4 20             	add    $0x20,%esp
   1b6bd:	e8 0e fd ff ff       	call   1b3d0 <instr_execute_2op>
   1b6c2:	83 c4 0c             	add    $0xc,%esp
   1b6c5:	89 e8                	mov    %ebp,%eax
   1b6c7:	5b                   	pop    %ebx
   1b6c8:	5e                   	pop    %esi
   1b6c9:	5f                   	pop    %edi
   1b6ca:	5d                   	pop    %ebp
   1b6cb:	c3                   	ret    
   1b6cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001b6d0 <adc_i2a_b>:
   1b6d0:	53                   	push   %ebx
   1b6d1:	e8 aa 8d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b6d6:	81 c3 2a 39 03 00    	add    $0x3392a,%ebx
   1b6dc:	83 ec 14             	sub    $0x14,%esp
   1b6df:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1b6e3:	83 c1 01             	add    $0x1,%ecx
   1b6e6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1b6ec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1b6f2:	89 48 04             	mov    %ecx,0x4(%eax)
   1b6f5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1b6fc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1b703:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1b709:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1b70d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1b713:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1b71a:	52                   	push   %edx
   1b71b:	50                   	push   %eax
   1b71c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1b722:	6a 02                	push   $0x2
   1b724:	50                   	push   %eax
   1b725:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b72b:	50                   	push   %eax
   1b72c:	e8 6f 6a ff ff       	call   121a0 <print_asm_2>
   1b731:	83 c4 20             	add    $0x20,%esp
   1b734:	e8 97 fc ff ff       	call   1b3d0 <instr_execute_2op>
   1b739:	83 c4 08             	add    $0x8,%esp
   1b73c:	b8 02 00 00 00       	mov    $0x2,%eax
   1b741:	5b                   	pop    %ebx
   1b742:	c3                   	ret    
   1b743:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b74a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001b750 <adc_i2a_v>:
   1b750:	55                   	push   %ebp
   1b751:	57                   	push   %edi
   1b752:	56                   	push   %esi
   1b753:	53                   	push   %ebx
   1b754:	e8 27 8d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b759:	81 c3 a7 38 03 00    	add    $0x338a7,%ebx
   1b75f:	83 ec 0c             	sub    $0xc,%esp
   1b762:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b768:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1b76e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   1b774:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1b77a:	0f b6 08             	movzbl (%eax),%ecx
   1b77d:	8b 44 24 20          	mov    0x20(%esp),%eax
   1b781:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   1b787:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1b78b:	89 cf                	mov    %ecx,%edi
   1b78d:	83 c0 01             	add    $0x1,%eax
   1b790:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1b793:	c1 ef 03             	shr    $0x3,%edi
   1b796:	89 4a 10             	mov    %ecx,0x10(%edx)
   1b799:	89 42 04             	mov    %eax,0x4(%edx)
   1b79c:	83 c7 01             	add    $0x1,%edi
   1b79f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1b7a6:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1b7ad:	83 f9 08             	cmp    $0x8,%ecx
   1b7b0:	74 12                	je     1b7c4 <adc_i2a_v+0x74>
   1b7b2:	83 f9 10             	cmp    $0x10,%ecx
   1b7b5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1b7bb:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1b7c1:	0f 45 f0             	cmovne %eax,%esi
   1b7c4:	83 ec 0c             	sub    $0xc,%esp
   1b7c7:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b7cd:	55                   	push   %ebp
   1b7ce:	52                   	push   %edx
   1b7cf:	57                   	push   %edi
   1b7d0:	56                   	push   %esi
   1b7d1:	50                   	push   %eax
   1b7d2:	e8 c9 69 ff ff       	call   121a0 <print_asm_2>
   1b7d7:	83 c4 20             	add    $0x20,%esp
   1b7da:	e8 f1 fb ff ff       	call   1b3d0 <instr_execute_2op>
   1b7df:	83 c4 0c             	add    $0xc,%esp
   1b7e2:	89 f8                	mov    %edi,%eax
   1b7e4:	5b                   	pop    %ebx
   1b7e5:	5e                   	pop    %esi
   1b7e6:	5f                   	pop    %edi
   1b7e7:	5d                   	pop    %ebp
   1b7e8:	c3                   	ret    
   1b7e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001b7f0 <adc_i2rm_b>:
   1b7f0:	55                   	push   %ebp
   1b7f1:	57                   	push   %edi
   1b7f2:	56                   	push   %esi
   1b7f3:	53                   	push   %ebx
   1b7f4:	e8 87 8c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b7f9:	81 c3 07 38 03 00    	add    $0x33807,%ebx
   1b7ff:	83 ec 24             	sub    $0x24,%esp
   1b802:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1b806:	8d 45 01             	lea    0x1(%ebp),%eax
   1b809:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1b80f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b815:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1b81c:	52                   	push   %edx
   1b81d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1b824:	89 54 24 18          	mov    %edx,0x18(%esp)
   1b828:	50                   	push   %eax
   1b829:	e8 52 67 ff ff       	call   11f80 <modrm_rm>
   1b82e:	8b 77 10             	mov    0x10(%edi),%esi
   1b831:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1b835:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1b839:	83 c0 01             	add    $0x1,%eax
   1b83c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1b842:	83 c4 10             	add    $0x10,%esp
   1b845:	01 c5                	add    %eax,%ebp
   1b847:	c1 ee 03             	shr    $0x3,%esi
   1b84a:	89 6f 04             	mov    %ebp,0x4(%edi)
   1b84d:	01 c6                	add    %eax,%esi
   1b84f:	8b 6a 10             	mov    0x10(%edx),%ebp
   1b852:	89 f0                	mov    %esi,%eax
   1b854:	0f b6 c8             	movzbl %al,%ecx
   1b857:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1b85d:	83 fd 08             	cmp    $0x8,%ebp
   1b860:	74 12                	je     1b874 <adc_i2rm_b+0x84>
   1b862:	83 fd 10             	cmp    $0x10,%ebp
   1b865:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1b86b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1b871:	0f 45 c5             	cmovne %ebp,%eax
   1b874:	83 ec 0c             	sub    $0xc,%esp
   1b877:	52                   	push   %edx
   1b878:	57                   	push   %edi
   1b879:	51                   	push   %ecx
   1b87a:	50                   	push   %eax
   1b87b:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b881:	50                   	push   %eax
   1b882:	e8 19 69 ff ff       	call   121a0 <print_asm_2>
   1b887:	83 c4 20             	add    $0x20,%esp
   1b88a:	e8 41 fb ff ff       	call   1b3d0 <instr_execute_2op>
   1b88f:	83 c4 1c             	add    $0x1c,%esp
   1b892:	89 f0                	mov    %esi,%eax
   1b894:	5b                   	pop    %ebx
   1b895:	5e                   	pop    %esi
   1b896:	5f                   	pop    %edi
   1b897:	5d                   	pop    %ebp
   1b898:	c3                   	ret    
   1b899:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001b8a0 <adc_i2rm_v>:
   1b8a0:	55                   	push   %ebp
   1b8a1:	57                   	push   %edi
   1b8a2:	56                   	push   %esi
   1b8a3:	53                   	push   %ebx
   1b8a4:	e8 d7 8b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b8a9:	81 c3 57 37 03 00    	add    $0x33757,%ebx
   1b8af:	83 ec 24             	sub    $0x24,%esp
   1b8b2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1b8b6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b8bc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1b8c2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b8c8:	0f b6 00             	movzbl (%eax),%eax
   1b8cb:	89 42 10             	mov    %eax,0x10(%edx)
   1b8ce:	52                   	push   %edx
   1b8cf:	89 47 10             	mov    %eax,0x10(%edi)
   1b8d2:	8d 45 01             	lea    0x1(%ebp),%eax
   1b8d5:	89 54 24 18          	mov    %edx,0x18(%esp)
   1b8d9:	50                   	push   %eax
   1b8da:	e8 a1 66 ff ff       	call   11f80 <modrm_rm>
   1b8df:	8b 77 10             	mov    0x10(%edi),%esi
   1b8e2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1b8e6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1b8ea:	83 c0 01             	add    $0x1,%eax
   1b8ed:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1b8f3:	83 c4 10             	add    $0x10,%esp
   1b8f6:	01 c5                	add    %eax,%ebp
   1b8f8:	c1 ee 03             	shr    $0x3,%esi
   1b8fb:	89 6f 04             	mov    %ebp,0x4(%edi)
   1b8fe:	01 c6                	add    %eax,%esi
   1b900:	8b 6a 10             	mov    0x10(%edx),%ebp
   1b903:	89 f0                	mov    %esi,%eax
   1b905:	0f b6 c8             	movzbl %al,%ecx
   1b908:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1b90e:	83 fd 08             	cmp    $0x8,%ebp
   1b911:	74 12                	je     1b925 <adc_i2rm_v+0x85>
   1b913:	83 fd 10             	cmp    $0x10,%ebp
   1b916:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1b91c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1b922:	0f 45 c5             	cmovne %ebp,%eax
   1b925:	83 ec 0c             	sub    $0xc,%esp
   1b928:	52                   	push   %edx
   1b929:	57                   	push   %edi
   1b92a:	51                   	push   %ecx
   1b92b:	50                   	push   %eax
   1b92c:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b932:	50                   	push   %eax
   1b933:	e8 68 68 ff ff       	call   121a0 <print_asm_2>
   1b938:	83 c4 20             	add    $0x20,%esp
   1b93b:	e8 90 fa ff ff       	call   1b3d0 <instr_execute_2op>
   1b940:	83 c4 1c             	add    $0x1c,%esp
   1b943:	89 f0                	mov    %esi,%eax
   1b945:	5b                   	pop    %ebx
   1b946:	5e                   	pop    %esi
   1b947:	5f                   	pop    %edi
   1b948:	5d                   	pop    %ebp
   1b949:	c3                   	ret    
   1b94a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001b950 <adc_i2rm_bv>:
   1b950:	55                   	push   %ebp
   1b951:	57                   	push   %edi
   1b952:	56                   	push   %esi
   1b953:	53                   	push   %ebx
   1b954:	e8 27 8b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1b959:	81 c3 a7 36 03 00    	add    $0x336a7,%ebx
   1b95f:	83 ec 24             	sub    $0x24,%esp
   1b962:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1b966:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1b96c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1b972:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1b978:	0f b6 00             	movzbl (%eax),%eax
   1b97b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1b982:	89 42 10             	mov    %eax,0x10(%edx)
   1b985:	8d 45 01             	lea    0x1(%ebp),%eax
   1b988:	52                   	push   %edx
   1b989:	89 54 24 18          	mov    %edx,0x18(%esp)
   1b98d:	50                   	push   %eax
   1b98e:	e8 ed 65 ff ff       	call   11f80 <modrm_rm>
   1b993:	8b 77 10             	mov    0x10(%edi),%esi
   1b996:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1b99a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1b99e:	83 c0 01             	add    $0x1,%eax
   1b9a1:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1b9a7:	83 c4 10             	add    $0x10,%esp
   1b9aa:	01 c5                	add    %eax,%ebp
   1b9ac:	c1 ee 03             	shr    $0x3,%esi
   1b9af:	89 6f 04             	mov    %ebp,0x4(%edi)
   1b9b2:	01 c6                	add    %eax,%esi
   1b9b4:	8b 6a 10             	mov    0x10(%edx),%ebp
   1b9b7:	89 f0                	mov    %esi,%eax
   1b9b9:	0f b6 c8             	movzbl %al,%ecx
   1b9bc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1b9c2:	83 fd 08             	cmp    $0x8,%ebp
   1b9c5:	74 12                	je     1b9d9 <adc_i2rm_bv+0x89>
   1b9c7:	83 fd 10             	cmp    $0x10,%ebp
   1b9ca:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1b9d0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1b9d6:	0f 45 c5             	cmovne %ebp,%eax
   1b9d9:	83 ec 0c             	sub    $0xc,%esp
   1b9dc:	52                   	push   %edx
   1b9dd:	57                   	push   %edi
   1b9de:	51                   	push   %ecx
   1b9df:	50                   	push   %eax
   1b9e0:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   1b9e6:	50                   	push   %eax
   1b9e7:	e8 b4 67 ff ff       	call   121a0 <print_asm_2>
   1b9ec:	83 c4 20             	add    $0x20,%esp
   1b9ef:	e8 dc f9 ff ff       	call   1b3d0 <instr_execute_2op>
   1b9f4:	83 c4 1c             	add    $0x1c,%esp
   1b9f7:	89 f0                	mov    %esi,%eax
   1b9f9:	5b                   	pop    %ebx
   1b9fa:	5e                   	pop    %esi
   1b9fb:	5f                   	pop    %edi
   1b9fc:	5d                   	pop    %ebp
   1b9fd:	c3                   	ret    
   1b9fe:	66 90                	xchg   %ax,%ax

0001ba00 <setne_b>:
   1ba00:	57                   	push   %edi
   1ba01:	56                   	push   %esi
   1ba02:	53                   	push   %ebx
   1ba03:	e8 78 8a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ba08:	81 c3 f8 35 03 00    	add    $0x335f8,%ebx
   1ba0e:	83 ec 08             	sub    $0x8,%esp
   1ba11:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1ba17:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1ba1d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1ba24:	56                   	push   %esi
   1ba25:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1ba29:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1ba30:	83 c0 01             	add    $0x1,%eax
   1ba33:	50                   	push   %eax
   1ba34:	e8 47 65 ff ff       	call   11f80 <modrm_rm>
   1ba39:	56                   	push   %esi
   1ba3a:	8d 78 01             	lea    0x1(%eax),%edi
   1ba3d:	89 f8                	mov    %edi,%eax
   1ba3f:	0f b6 c0             	movzbl %al,%eax
   1ba42:	50                   	push   %eax
   1ba43:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   1ba49:	50                   	push   %eax
   1ba4a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1ba50:	50                   	push   %eax
   1ba51:	e8 4a 66 ff ff       	call   120a0 <print_asm_1>
   1ba56:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1ba5c:	83 c4 20             	add    $0x20,%esp
   1ba5f:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   1ba63:	75 1b                	jne    1ba80 <setne_b+0x80>
   1ba65:	83 ec 0c             	sub    $0xc,%esp
   1ba68:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1ba6f:	56                   	push   %esi
   1ba70:	e8 1b 6b ff ff       	call   12590 <operand_write>
   1ba75:	83 c4 10             	add    $0x10,%esp
   1ba78:	89 f8                	mov    %edi,%eax
   1ba7a:	5b                   	pop    %ebx
   1ba7b:	5e                   	pop    %esi
   1ba7c:	5f                   	pop    %edi
   1ba7d:	c3                   	ret    
   1ba7e:	66 90                	xchg   %ax,%ax
   1ba80:	83 ec 0c             	sub    $0xc,%esp
   1ba83:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1ba8a:	56                   	push   %esi
   1ba8b:	e8 00 6b ff ff       	call   12590 <operand_write>
   1ba90:	83 c4 10             	add    $0x10,%esp
   1ba93:	89 f8                	mov    %edi,%eax
   1ba95:	5b                   	pop    %ebx
   1ba96:	5e                   	pop    %esi
   1ba97:	5f                   	pop    %edi
   1ba98:	c3                   	ret    
   1ba99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001baa0 <seta_b>:
   1baa0:	57                   	push   %edi
   1baa1:	56                   	push   %esi
   1baa2:	53                   	push   %ebx
   1baa3:	e8 d8 89 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1baa8:	81 c3 58 35 03 00    	add    $0x33558,%ebx
   1baae:	83 ec 08             	sub    $0x8,%esp
   1bab1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1bab7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1babd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1bac4:	56                   	push   %esi
   1bac5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1bac9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1bad0:	83 c0 01             	add    $0x1,%eax
   1bad3:	50                   	push   %eax
   1bad4:	e8 a7 64 ff ff       	call   11f80 <modrm_rm>
   1bad9:	56                   	push   %esi
   1bada:	8d 78 01             	lea    0x1(%eax),%edi
   1badd:	89 f8                	mov    %edi,%eax
   1badf:	0f b6 c0             	movzbl %al,%eax
   1bae2:	50                   	push   %eax
   1bae3:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   1bae9:	50                   	push   %eax
   1baea:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1baf0:	50                   	push   %eax
   1baf1:	e8 aa 65 ff ff       	call   120a0 <print_asm_1>
   1baf6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1bafc:	83 c4 20             	add    $0x20,%esp
   1baff:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   1bb03:	75 1b                	jne    1bb20 <seta_b+0x80>
   1bb05:	83 ec 0c             	sub    $0xc,%esp
   1bb08:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1bb0f:	56                   	push   %esi
   1bb10:	e8 7b 6a ff ff       	call   12590 <operand_write>
   1bb15:	83 c4 10             	add    $0x10,%esp
   1bb18:	89 f8                	mov    %edi,%eax
   1bb1a:	5b                   	pop    %ebx
   1bb1b:	5e                   	pop    %esi
   1bb1c:	5f                   	pop    %edi
   1bb1d:	c3                   	ret    
   1bb1e:	66 90                	xchg   %ax,%ax
   1bb20:	83 ec 0c             	sub    $0xc,%esp
   1bb23:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1bb2a:	56                   	push   %esi
   1bb2b:	e8 60 6a ff ff       	call   12590 <operand_write>
   1bb30:	83 c4 10             	add    $0x10,%esp
   1bb33:	89 f8                	mov    %edi,%eax
   1bb35:	5b                   	pop    %ebx
   1bb36:	5e                   	pop    %esi
   1bb37:	5f                   	pop    %edi
   1bb38:	c3                   	ret    
   1bb39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001bb40 <setae_b>:
   1bb40:	57                   	push   %edi
   1bb41:	56                   	push   %esi
   1bb42:	53                   	push   %ebx
   1bb43:	e8 38 89 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1bb48:	81 c3 b8 34 03 00    	add    $0x334b8,%ebx
   1bb4e:	83 ec 08             	sub    $0x8,%esp
   1bb51:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1bb57:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1bb5d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1bb64:	56                   	push   %esi
   1bb65:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1bb69:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1bb70:	83 c0 01             	add    $0x1,%eax
   1bb73:	50                   	push   %eax
   1bb74:	e8 07 64 ff ff       	call   11f80 <modrm_rm>
   1bb79:	56                   	push   %esi
   1bb7a:	8d 78 01             	lea    0x1(%eax),%edi
   1bb7d:	89 f8                	mov    %edi,%eax
   1bb7f:	0f b6 c0             	movzbl %al,%eax
   1bb82:	50                   	push   %eax
   1bb83:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   1bb89:	50                   	push   %eax
   1bb8a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1bb90:	50                   	push   %eax
   1bb91:	e8 0a 65 ff ff       	call   120a0 <print_asm_1>
   1bb96:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1bb9c:	83 c4 20             	add    $0x20,%esp
   1bb9f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   1bba3:	83 e0 41             	and    $0x41,%eax
   1bba6:	3c 01                	cmp    $0x1,%al
   1bba8:	74 1e                	je     1bbc8 <setae_b+0x88>
   1bbaa:	83 ec 0c             	sub    $0xc,%esp
   1bbad:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1bbb4:	56                   	push   %esi
   1bbb5:	e8 d6 69 ff ff       	call   12590 <operand_write>
   1bbba:	83 c4 10             	add    $0x10,%esp
   1bbbd:	89 f8                	mov    %edi,%eax
   1bbbf:	5b                   	pop    %ebx
   1bbc0:	5e                   	pop    %esi
   1bbc1:	5f                   	pop    %edi
   1bbc2:	c3                   	ret    
   1bbc3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1bbc7:	90                   	nop
   1bbc8:	83 ec 0c             	sub    $0xc,%esp
   1bbcb:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1bbd2:	56                   	push   %esi
   1bbd3:	e8 b8 69 ff ff       	call   12590 <operand_write>
   1bbd8:	83 c4 10             	add    $0x10,%esp
   1bbdb:	89 f8                	mov    %edi,%eax
   1bbdd:	5b                   	pop    %ebx
   1bbde:	5e                   	pop    %esi
   1bbdf:	5f                   	pop    %edi
   1bbe0:	c3                   	ret    
   1bbe1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1bbe8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1bbef:	90                   	nop

0001bbf0 <setbe_b>:
   1bbf0:	57                   	push   %edi
   1bbf1:	56                   	push   %esi
   1bbf2:	53                   	push   %ebx
   1bbf3:	e8 88 88 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1bbf8:	81 c3 08 34 03 00    	add    $0x33408,%ebx
   1bbfe:	83 ec 08             	sub    $0x8,%esp
   1bc01:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1bc07:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1bc0d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1bc14:	56                   	push   %esi
   1bc15:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1bc19:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1bc20:	83 c0 01             	add    $0x1,%eax
   1bc23:	50                   	push   %eax
   1bc24:	e8 57 63 ff ff       	call   11f80 <modrm_rm>
   1bc29:	56                   	push   %esi
   1bc2a:	8d 78 01             	lea    0x1(%eax),%edi
   1bc2d:	89 f8                	mov    %edi,%eax
   1bc2f:	0f b6 c0             	movzbl %al,%eax
   1bc32:	50                   	push   %eax
   1bc33:	8d 83 f4 6a fe ff    	lea    -0x1950c(%ebx),%eax
   1bc39:	50                   	push   %eax
   1bc3a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1bc40:	50                   	push   %eax
   1bc41:	e8 5a 64 ff ff       	call   120a0 <print_asm_1>
   1bc46:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1bc4c:	83 c4 20             	add    $0x20,%esp
   1bc4f:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   1bc53:	74 1b                	je     1bc70 <setbe_b+0x80>
   1bc55:	83 ec 0c             	sub    $0xc,%esp
   1bc58:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1bc5f:	56                   	push   %esi
   1bc60:	e8 2b 69 ff ff       	call   12590 <operand_write>
   1bc65:	83 c4 10             	add    $0x10,%esp
   1bc68:	89 f8                	mov    %edi,%eax
   1bc6a:	5b                   	pop    %ebx
   1bc6b:	5e                   	pop    %esi
   1bc6c:	5f                   	pop    %edi
   1bc6d:	c3                   	ret    
   1bc6e:	66 90                	xchg   %ax,%ax
   1bc70:	83 ec 0c             	sub    $0xc,%esp
   1bc73:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1bc7a:	56                   	push   %esi
   1bc7b:	e8 10 69 ff ff       	call   12590 <operand_write>
   1bc80:	83 c4 10             	add    $0x10,%esp
   1bc83:	89 f8                	mov    %edi,%eax
   1bc85:	5b                   	pop    %ebx
   1bc86:	5e                   	pop    %esi
   1bc87:	5f                   	pop    %edi
   1bc88:	c3                   	ret    
   1bc89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001bc90 <setc_b>:
   1bc90:	57                   	push   %edi
   1bc91:	56                   	push   %esi
   1bc92:	53                   	push   %ebx
   1bc93:	e8 e8 87 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1bc98:	81 c3 68 33 03 00    	add    $0x33368,%ebx
   1bc9e:	83 ec 08             	sub    $0x8,%esp
   1bca1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1bca7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1bcad:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1bcb4:	56                   	push   %esi
   1bcb5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1bcb9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1bcc0:	83 c0 01             	add    $0x1,%eax
   1bcc3:	50                   	push   %eax
   1bcc4:	e8 b7 62 ff ff       	call   11f80 <modrm_rm>
   1bcc9:	56                   	push   %esi
   1bcca:	8d 78 01             	lea    0x1(%eax),%edi
   1bccd:	89 f8                	mov    %edi,%eax
   1bccf:	0f b6 c0             	movzbl %al,%eax
   1bcd2:	50                   	push   %eax
   1bcd3:	8d 83 ff 54 fe ff    	lea    -0x1ab01(%ebx),%eax
   1bcd9:	50                   	push   %eax
   1bcda:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1bce0:	50                   	push   %eax
   1bce1:	e8 ba 63 ff ff       	call   120a0 <print_asm_1>
   1bce6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1bcec:	83 c4 20             	add    $0x20,%esp
   1bcef:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   1bcf3:	74 1b                	je     1bd10 <setc_b+0x80>
   1bcf5:	83 ec 0c             	sub    $0xc,%esp
   1bcf8:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1bcff:	56                   	push   %esi
   1bd00:	e8 8b 68 ff ff       	call   12590 <operand_write>
   1bd05:	83 c4 10             	add    $0x10,%esp
   1bd08:	89 f8                	mov    %edi,%eax
   1bd0a:	5b                   	pop    %ebx
   1bd0b:	5e                   	pop    %esi
   1bd0c:	5f                   	pop    %edi
   1bd0d:	c3                   	ret    
   1bd0e:	66 90                	xchg   %ax,%ax
   1bd10:	83 ec 0c             	sub    $0xc,%esp
   1bd13:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1bd1a:	56                   	push   %esi
   1bd1b:	e8 70 68 ff ff       	call   12590 <operand_write>
   1bd20:	83 c4 10             	add    $0x10,%esp
   1bd23:	89 f8                	mov    %edi,%eax
   1bd25:	5b                   	pop    %ebx
   1bd26:	5e                   	pop    %esi
   1bd27:	5f                   	pop    %edi
   1bd28:	c3                   	ret    
   1bd29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001bd30 <sete_b>:
   1bd30:	57                   	push   %edi
   1bd31:	56                   	push   %esi
   1bd32:	53                   	push   %ebx
   1bd33:	e8 48 87 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1bd38:	81 c3 c8 32 03 00    	add    $0x332c8,%ebx
   1bd3e:	83 ec 08             	sub    $0x8,%esp
   1bd41:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1bd47:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1bd4d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1bd54:	56                   	push   %esi
   1bd55:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1bd59:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1bd60:	83 c0 01             	add    $0x1,%eax
   1bd63:	50                   	push   %eax
   1bd64:	e8 17 62 ff ff       	call   11f80 <modrm_rm>
   1bd69:	56                   	push   %esi
   1bd6a:	8d 78 01             	lea    0x1(%eax),%edi
   1bd6d:	89 f8                	mov    %edi,%eax
   1bd6f:	0f b6 c0             	movzbl %al,%eax
   1bd72:	50                   	push   %eax
   1bd73:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   1bd79:	50                   	push   %eax
   1bd7a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1bd80:	50                   	push   %eax
   1bd81:	e8 1a 63 ff ff       	call   120a0 <print_asm_1>
   1bd86:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1bd8c:	83 c4 20             	add    $0x20,%esp
   1bd8f:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   1bd93:	74 1b                	je     1bdb0 <sete_b+0x80>
   1bd95:	83 ec 0c             	sub    $0xc,%esp
   1bd98:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1bd9f:	56                   	push   %esi
   1bda0:	e8 eb 67 ff ff       	call   12590 <operand_write>
   1bda5:	83 c4 10             	add    $0x10,%esp
   1bda8:	89 f8                	mov    %edi,%eax
   1bdaa:	5b                   	pop    %ebx
   1bdab:	5e                   	pop    %esi
   1bdac:	5f                   	pop    %edi
   1bdad:	c3                   	ret    
   1bdae:	66 90                	xchg   %ax,%ax
   1bdb0:	83 ec 0c             	sub    $0xc,%esp
   1bdb3:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1bdba:	56                   	push   %esi
   1bdbb:	e8 d0 67 ff ff       	call   12590 <operand_write>
   1bdc0:	83 c4 10             	add    $0x10,%esp
   1bdc3:	89 f8                	mov    %edi,%eax
   1bdc5:	5b                   	pop    %ebx
   1bdc6:	5e                   	pop    %esi
   1bdc7:	5f                   	pop    %edi
   1bdc8:	c3                   	ret    
   1bdc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001bdd0 <setg_b>:
   1bdd0:	57                   	push   %edi
   1bdd1:	56                   	push   %esi
   1bdd2:	53                   	push   %ebx
   1bdd3:	e8 a8 86 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1bdd8:	81 c3 28 32 03 00    	add    $0x33228,%ebx
   1bdde:	83 ec 08             	sub    $0x8,%esp
   1bde1:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1bde7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1bded:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1bdf4:	57                   	push   %edi
   1bdf5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1bdf9:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1be00:	83 c0 01             	add    $0x1,%eax
   1be03:	50                   	push   %eax
   1be04:	e8 77 61 ff ff       	call   11f80 <modrm_rm>
   1be09:	57                   	push   %edi
   1be0a:	8d 70 01             	lea    0x1(%eax),%esi
   1be0d:	89 f0                	mov    %esi,%eax
   1be0f:	0f b6 c0             	movzbl %al,%eax
   1be12:	50                   	push   %eax
   1be13:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   1be19:	50                   	push   %eax
   1be1a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1be20:	50                   	push   %eax
   1be21:	e8 7a 62 ff ff       	call   120a0 <print_asm_1>
   1be26:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1be2c:	83 c4 20             	add    $0x20,%esp
   1be2f:	0f b6 42 24          	movzbl 0x24(%edx),%eax
   1be33:	0f b6 52 25          	movzbl 0x25(%edx),%edx
   1be37:	89 c1                	mov    %eax,%ecx
   1be39:	c0 ea 03             	shr    $0x3,%dl
   1be3c:	c0 e9 07             	shr    $0x7,%cl
   1be3f:	83 e2 01             	and    $0x1,%edx
   1be42:	38 d1                	cmp    %dl,%cl
   1be44:	75 04                	jne    1be4a <setg_b+0x7a>
   1be46:	a8 40                	test   $0x40,%al
   1be48:	74 1e                	je     1be68 <setg_b+0x98>
   1be4a:	83 ec 0c             	sub    $0xc,%esp
   1be4d:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
   1be54:	57                   	push   %edi
   1be55:	e8 36 67 ff ff       	call   12590 <operand_write>
   1be5a:	83 c4 10             	add    $0x10,%esp
   1be5d:	89 f0                	mov    %esi,%eax
   1be5f:	5b                   	pop    %ebx
   1be60:	5e                   	pop    %esi
   1be61:	5f                   	pop    %edi
   1be62:	c3                   	ret    
   1be63:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1be67:	90                   	nop
   1be68:	83 ec 0c             	sub    $0xc,%esp
   1be6b:	c7 47 0c 01 00 00 00 	movl   $0x1,0xc(%edi)
   1be72:	57                   	push   %edi
   1be73:	e8 18 67 ff ff       	call   12590 <operand_write>
   1be78:	83 c4 10             	add    $0x10,%esp
   1be7b:	89 f0                	mov    %esi,%eax
   1be7d:	5b                   	pop    %ebx
   1be7e:	5e                   	pop    %esi
   1be7f:	5f                   	pop    %edi
   1be80:	c3                   	ret    
   1be81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1be88:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1be8f:	90                   	nop

0001be90 <setge_b>:
   1be90:	57                   	push   %edi
   1be91:	56                   	push   %esi
   1be92:	53                   	push   %ebx
   1be93:	e8 e8 85 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1be98:	81 c3 68 31 03 00    	add    $0x33168,%ebx
   1be9e:	83 ec 08             	sub    $0x8,%esp
   1bea1:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1bea7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1bead:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1beb4:	57                   	push   %edi
   1beb5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1beb9:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1bec0:	83 c0 01             	add    $0x1,%eax
   1bec3:	50                   	push   %eax
   1bec4:	e8 b7 60 ff ff       	call   11f80 <modrm_rm>
   1bec9:	57                   	push   %edi
   1beca:	8d 70 01             	lea    0x1(%eax),%esi
   1becd:	89 f0                	mov    %esi,%eax
   1becf:	0f b6 c0             	movzbl %al,%eax
   1bed2:	50                   	push   %eax
   1bed3:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   1bed9:	50                   	push   %eax
   1beda:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1bee0:	50                   	push   %eax
   1bee1:	e8 ba 61 ff ff       	call   120a0 <print_asm_1>
   1bee6:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1beec:	83 c4 20             	add    $0x20,%esp
   1beef:	0f b6 42 24          	movzbl 0x24(%edx),%eax
   1bef3:	0f b6 52 25          	movzbl 0x25(%edx),%edx
   1bef7:	89 c1                	mov    %eax,%ecx
   1bef9:	c0 ea 03             	shr    $0x3,%dl
   1befc:	c0 e9 07             	shr    $0x7,%cl
   1beff:	83 e2 01             	and    $0x1,%edx
   1bf02:	38 d1                	cmp    %dl,%cl
   1bf04:	74 04                	je     1bf0a <setge_b+0x7a>
   1bf06:	a8 40                	test   $0x40,%al
   1bf08:	74 1e                	je     1bf28 <setge_b+0x98>
   1bf0a:	83 ec 0c             	sub    $0xc,%esp
   1bf0d:	c7 47 0c 01 00 00 00 	movl   $0x1,0xc(%edi)
   1bf14:	57                   	push   %edi
   1bf15:	e8 76 66 ff ff       	call   12590 <operand_write>
   1bf1a:	83 c4 10             	add    $0x10,%esp
   1bf1d:	89 f0                	mov    %esi,%eax
   1bf1f:	5b                   	pop    %ebx
   1bf20:	5e                   	pop    %esi
   1bf21:	5f                   	pop    %edi
   1bf22:	c3                   	ret    
   1bf23:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1bf27:	90                   	nop
   1bf28:	83 ec 0c             	sub    $0xc,%esp
   1bf2b:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
   1bf32:	57                   	push   %edi
   1bf33:	e8 58 66 ff ff       	call   12590 <operand_write>
   1bf38:	83 c4 10             	add    $0x10,%esp
   1bf3b:	89 f0                	mov    %esi,%eax
   1bf3d:	5b                   	pop    %ebx
   1bf3e:	5e                   	pop    %esi
   1bf3f:	5f                   	pop    %edi
   1bf40:	c3                   	ret    
   1bf41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1bf48:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1bf4f:	90                   	nop

0001bf50 <setl_b>:
   1bf50:	57                   	push   %edi
   1bf51:	56                   	push   %esi
   1bf52:	53                   	push   %ebx
   1bf53:	e8 28 85 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1bf58:	81 c3 a8 30 03 00    	add    $0x330a8,%ebx
   1bf5e:	83 ec 08             	sub    $0x8,%esp
   1bf61:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1bf67:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1bf6d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1bf74:	57                   	push   %edi
   1bf75:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1bf79:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1bf80:	83 c0 01             	add    $0x1,%eax
   1bf83:	50                   	push   %eax
   1bf84:	e8 f7 5f ff ff       	call   11f80 <modrm_rm>
   1bf89:	57                   	push   %edi
   1bf8a:	8d 70 01             	lea    0x1(%eax),%esi
   1bf8d:	89 f0                	mov    %esi,%eax
   1bf8f:	0f b6 c0             	movzbl %al,%eax
   1bf92:	50                   	push   %eax
   1bf93:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1bf99:	50                   	push   %eax
   1bf9a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1bfa0:	50                   	push   %eax
   1bfa1:	e8 fa 60 ff ff       	call   120a0 <print_asm_1>
   1bfa6:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1bfac:	83 c4 20             	add    $0x20,%esp
   1bfaf:	0f b6 42 24          	movzbl 0x24(%edx),%eax
   1bfb3:	0f b6 52 25          	movzbl 0x25(%edx),%edx
   1bfb7:	89 c1                	mov    %eax,%ecx
   1bfb9:	c0 ea 03             	shr    $0x3,%dl
   1bfbc:	c0 e9 07             	shr    $0x7,%cl
   1bfbf:	83 e2 01             	and    $0x1,%edx
   1bfc2:	38 d1                	cmp    %dl,%cl
   1bfc4:	74 04                	je     1bfca <setl_b+0x7a>
   1bfc6:	a8 40                	test   $0x40,%al
   1bfc8:	74 1e                	je     1bfe8 <setl_b+0x98>
   1bfca:	83 ec 0c             	sub    $0xc,%esp
   1bfcd:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
   1bfd4:	57                   	push   %edi
   1bfd5:	e8 b6 65 ff ff       	call   12590 <operand_write>
   1bfda:	83 c4 10             	add    $0x10,%esp
   1bfdd:	89 f0                	mov    %esi,%eax
   1bfdf:	5b                   	pop    %ebx
   1bfe0:	5e                   	pop    %esi
   1bfe1:	5f                   	pop    %edi
   1bfe2:	c3                   	ret    
   1bfe3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1bfe7:	90                   	nop
   1bfe8:	83 ec 0c             	sub    $0xc,%esp
   1bfeb:	c7 47 0c 01 00 00 00 	movl   $0x1,0xc(%edi)
   1bff2:	57                   	push   %edi
   1bff3:	e8 98 65 ff ff       	call   12590 <operand_write>
   1bff8:	83 c4 10             	add    $0x10,%esp
   1bffb:	89 f0                	mov    %esi,%eax
   1bffd:	5b                   	pop    %ebx
   1bffe:	5e                   	pop    %esi
   1bfff:	5f                   	pop    %edi
   1c000:	c3                   	ret    
   1c001:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c008:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c00f:	90                   	nop

0001c010 <setle_b>:
   1c010:	57                   	push   %edi
   1c011:	56                   	push   %esi
   1c012:	53                   	push   %ebx
   1c013:	e8 68 84 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c018:	81 c3 e8 2f 03 00    	add    $0x32fe8,%ebx
   1c01e:	83 ec 08             	sub    $0x8,%esp
   1c021:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1c027:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c02d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1c034:	57                   	push   %edi
   1c035:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1c039:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1c040:	83 c0 01             	add    $0x1,%eax
   1c043:	50                   	push   %eax
   1c044:	e8 37 5f ff ff       	call   11f80 <modrm_rm>
   1c049:	57                   	push   %edi
   1c04a:	8d 70 01             	lea    0x1(%eax),%esi
   1c04d:	89 f0                	mov    %esi,%eax
   1c04f:	0f b6 c0             	movzbl %al,%eax
   1c052:	50                   	push   %eax
   1c053:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   1c059:	50                   	push   %eax
   1c05a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1c060:	50                   	push   %eax
   1c061:	e8 3a 60 ff ff       	call   120a0 <print_asm_1>
   1c066:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1c06c:	83 c4 20             	add    $0x20,%esp
   1c06f:	0f b6 42 24          	movzbl 0x24(%edx),%eax
   1c073:	0f b6 52 25          	movzbl 0x25(%edx),%edx
   1c077:	89 c1                	mov    %eax,%ecx
   1c079:	c0 ea 03             	shr    $0x3,%dl
   1c07c:	c0 e9 07             	shr    $0x7,%cl
   1c07f:	83 e2 01             	and    $0x1,%edx
   1c082:	38 d1                	cmp    %dl,%cl
   1c084:	75 04                	jne    1c08a <setle_b+0x7a>
   1c086:	a8 40                	test   $0x40,%al
   1c088:	74 1e                	je     1c0a8 <setle_b+0x98>
   1c08a:	83 ec 0c             	sub    $0xc,%esp
   1c08d:	c7 47 0c 01 00 00 00 	movl   $0x1,0xc(%edi)
   1c094:	57                   	push   %edi
   1c095:	e8 f6 64 ff ff       	call   12590 <operand_write>
   1c09a:	83 c4 10             	add    $0x10,%esp
   1c09d:	89 f0                	mov    %esi,%eax
   1c09f:	5b                   	pop    %ebx
   1c0a0:	5e                   	pop    %esi
   1c0a1:	5f                   	pop    %edi
   1c0a2:	c3                   	ret    
   1c0a3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c0a7:	90                   	nop
   1c0a8:	83 ec 0c             	sub    $0xc,%esp
   1c0ab:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
   1c0b2:	57                   	push   %edi
   1c0b3:	e8 d8 64 ff ff       	call   12590 <operand_write>
   1c0b8:	83 c4 10             	add    $0x10,%esp
   1c0bb:	89 f0                	mov    %esi,%eax
   1c0bd:	5b                   	pop    %ebx
   1c0be:	5e                   	pop    %esi
   1c0bf:	5f                   	pop    %edi
   1c0c0:	c3                   	ret    
   1c0c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c0c8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c0cf:	90                   	nop

0001c0d0 <setno_b>:
   1c0d0:	57                   	push   %edi
   1c0d1:	56                   	push   %esi
   1c0d2:	53                   	push   %ebx
   1c0d3:	e8 a8 83 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c0d8:	81 c3 28 2f 03 00    	add    $0x32f28,%ebx
   1c0de:	83 ec 08             	sub    $0x8,%esp
   1c0e1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c0e7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c0ed:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1c0f4:	56                   	push   %esi
   1c0f5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1c0f9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1c100:	83 c0 01             	add    $0x1,%eax
   1c103:	50                   	push   %eax
   1c104:	e8 77 5e ff ff       	call   11f80 <modrm_rm>
   1c109:	56                   	push   %esi
   1c10a:	8d 78 01             	lea    0x1(%eax),%edi
   1c10d:	89 f8                	mov    %edi,%eax
   1c10f:	0f b6 c0             	movzbl %al,%eax
   1c112:	50                   	push   %eax
   1c113:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   1c119:	50                   	push   %eax
   1c11a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1c120:	50                   	push   %eax
   1c121:	e8 7a 5f ff ff       	call   120a0 <print_asm_1>
   1c126:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1c12c:	83 c4 20             	add    $0x20,%esp
   1c12f:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   1c133:	75 1b                	jne    1c150 <setno_b+0x80>
   1c135:	83 ec 0c             	sub    $0xc,%esp
   1c138:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1c13f:	56                   	push   %esi
   1c140:	e8 4b 64 ff ff       	call   12590 <operand_write>
   1c145:	83 c4 10             	add    $0x10,%esp
   1c148:	89 f8                	mov    %edi,%eax
   1c14a:	5b                   	pop    %ebx
   1c14b:	5e                   	pop    %esi
   1c14c:	5f                   	pop    %edi
   1c14d:	c3                   	ret    
   1c14e:	66 90                	xchg   %ax,%ax
   1c150:	83 ec 0c             	sub    $0xc,%esp
   1c153:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1c15a:	56                   	push   %esi
   1c15b:	e8 30 64 ff ff       	call   12590 <operand_write>
   1c160:	83 c4 10             	add    $0x10,%esp
   1c163:	89 f8                	mov    %edi,%eax
   1c165:	5b                   	pop    %ebx
   1c166:	5e                   	pop    %esi
   1c167:	5f                   	pop    %edi
   1c168:	c3                   	ret    
   1c169:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001c170 <setnp_b>:
   1c170:	57                   	push   %edi
   1c171:	56                   	push   %esi
   1c172:	53                   	push   %ebx
   1c173:	e8 08 83 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c178:	81 c3 88 2e 03 00    	add    $0x32e88,%ebx
   1c17e:	83 ec 08             	sub    $0x8,%esp
   1c181:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c187:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c18d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1c194:	56                   	push   %esi
   1c195:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1c199:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1c1a0:	83 c0 01             	add    $0x1,%eax
   1c1a3:	50                   	push   %eax
   1c1a4:	e8 d7 5d ff ff       	call   11f80 <modrm_rm>
   1c1a9:	56                   	push   %esi
   1c1aa:	8d 78 01             	lea    0x1(%eax),%edi
   1c1ad:	89 f8                	mov    %edi,%eax
   1c1af:	0f b6 c0             	movzbl %al,%eax
   1c1b2:	50                   	push   %eax
   1c1b3:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   1c1b9:	50                   	push   %eax
   1c1ba:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1c1c0:	50                   	push   %eax
   1c1c1:	e8 da 5e ff ff       	call   120a0 <print_asm_1>
   1c1c6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1c1cc:	83 c4 20             	add    $0x20,%esp
   1c1cf:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   1c1d3:	75 1b                	jne    1c1f0 <setnp_b+0x80>
   1c1d5:	83 ec 0c             	sub    $0xc,%esp
   1c1d8:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1c1df:	56                   	push   %esi
   1c1e0:	e8 ab 63 ff ff       	call   12590 <operand_write>
   1c1e5:	83 c4 10             	add    $0x10,%esp
   1c1e8:	89 f8                	mov    %edi,%eax
   1c1ea:	5b                   	pop    %ebx
   1c1eb:	5e                   	pop    %esi
   1c1ec:	5f                   	pop    %edi
   1c1ed:	c3                   	ret    
   1c1ee:	66 90                	xchg   %ax,%ax
   1c1f0:	83 ec 0c             	sub    $0xc,%esp
   1c1f3:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1c1fa:	56                   	push   %esi
   1c1fb:	e8 90 63 ff ff       	call   12590 <operand_write>
   1c200:	83 c4 10             	add    $0x10,%esp
   1c203:	89 f8                	mov    %edi,%eax
   1c205:	5b                   	pop    %ebx
   1c206:	5e                   	pop    %esi
   1c207:	5f                   	pop    %edi
   1c208:	c3                   	ret    
   1c209:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001c210 <setns_b>:
   1c210:	57                   	push   %edi
   1c211:	56                   	push   %esi
   1c212:	53                   	push   %ebx
   1c213:	e8 68 82 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c218:	81 c3 e8 2d 03 00    	add    $0x32de8,%ebx
   1c21e:	83 ec 08             	sub    $0x8,%esp
   1c221:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c227:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c22d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1c234:	56                   	push   %esi
   1c235:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1c239:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1c240:	83 c0 01             	add    $0x1,%eax
   1c243:	50                   	push   %eax
   1c244:	e8 37 5d ff ff       	call   11f80 <modrm_rm>
   1c249:	56                   	push   %esi
   1c24a:	8d 78 01             	lea    0x1(%eax),%edi
   1c24d:	89 f8                	mov    %edi,%eax
   1c24f:	0f b6 c0             	movzbl %al,%eax
   1c252:	50                   	push   %eax
   1c253:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   1c259:	50                   	push   %eax
   1c25a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1c260:	50                   	push   %eax
   1c261:	e8 3a 5e ff ff       	call   120a0 <print_asm_1>
   1c266:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1c26c:	83 c4 20             	add    $0x20,%esp
   1c26f:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   1c273:	78 1b                	js     1c290 <setns_b+0x80>
   1c275:	83 ec 0c             	sub    $0xc,%esp
   1c278:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1c27f:	56                   	push   %esi
   1c280:	e8 0b 63 ff ff       	call   12590 <operand_write>
   1c285:	83 c4 10             	add    $0x10,%esp
   1c288:	89 f8                	mov    %edi,%eax
   1c28a:	5b                   	pop    %ebx
   1c28b:	5e                   	pop    %esi
   1c28c:	5f                   	pop    %edi
   1c28d:	c3                   	ret    
   1c28e:	66 90                	xchg   %ax,%ax
   1c290:	83 ec 0c             	sub    $0xc,%esp
   1c293:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1c29a:	56                   	push   %esi
   1c29b:	e8 f0 62 ff ff       	call   12590 <operand_write>
   1c2a0:	83 c4 10             	add    $0x10,%esp
   1c2a3:	89 f8                	mov    %edi,%eax
   1c2a5:	5b                   	pop    %ebx
   1c2a6:	5e                   	pop    %esi
   1c2a7:	5f                   	pop    %edi
   1c2a8:	c3                   	ret    
   1c2a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001c2b0 <seto_b>:
   1c2b0:	57                   	push   %edi
   1c2b1:	56                   	push   %esi
   1c2b2:	53                   	push   %ebx
   1c2b3:	e8 c8 81 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c2b8:	81 c3 48 2d 03 00    	add    $0x32d48,%ebx
   1c2be:	83 ec 08             	sub    $0x8,%esp
   1c2c1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c2c7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c2cd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1c2d4:	56                   	push   %esi
   1c2d5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1c2d9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1c2e0:	83 c0 01             	add    $0x1,%eax
   1c2e3:	50                   	push   %eax
   1c2e4:	e8 97 5c ff ff       	call   11f80 <modrm_rm>
   1c2e9:	56                   	push   %esi
   1c2ea:	8d 78 01             	lea    0x1(%eax),%edi
   1c2ed:	89 f8                	mov    %edi,%eax
   1c2ef:	0f b6 c0             	movzbl %al,%eax
   1c2f2:	50                   	push   %eax
   1c2f3:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   1c2f9:	50                   	push   %eax
   1c2fa:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1c300:	50                   	push   %eax
   1c301:	e8 9a 5d ff ff       	call   120a0 <print_asm_1>
   1c306:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1c30c:	83 c4 20             	add    $0x20,%esp
   1c30f:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   1c313:	74 1b                	je     1c330 <seto_b+0x80>
   1c315:	83 ec 0c             	sub    $0xc,%esp
   1c318:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1c31f:	56                   	push   %esi
   1c320:	e8 6b 62 ff ff       	call   12590 <operand_write>
   1c325:	83 c4 10             	add    $0x10,%esp
   1c328:	89 f8                	mov    %edi,%eax
   1c32a:	5b                   	pop    %ebx
   1c32b:	5e                   	pop    %esi
   1c32c:	5f                   	pop    %edi
   1c32d:	c3                   	ret    
   1c32e:	66 90                	xchg   %ax,%ax
   1c330:	83 ec 0c             	sub    $0xc,%esp
   1c333:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1c33a:	56                   	push   %esi
   1c33b:	e8 50 62 ff ff       	call   12590 <operand_write>
   1c340:	83 c4 10             	add    $0x10,%esp
   1c343:	89 f8                	mov    %edi,%eax
   1c345:	5b                   	pop    %ebx
   1c346:	5e                   	pop    %esi
   1c347:	5f                   	pop    %edi
   1c348:	c3                   	ret    
   1c349:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001c350 <setp_b>:
   1c350:	57                   	push   %edi
   1c351:	56                   	push   %esi
   1c352:	53                   	push   %ebx
   1c353:	e8 28 81 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c358:	81 c3 a8 2c 03 00    	add    $0x32ca8,%ebx
   1c35e:	83 ec 08             	sub    $0x8,%esp
   1c361:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c367:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c36d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1c374:	56                   	push   %esi
   1c375:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1c379:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1c380:	83 c0 01             	add    $0x1,%eax
   1c383:	50                   	push   %eax
   1c384:	e8 f7 5b ff ff       	call   11f80 <modrm_rm>
   1c389:	56                   	push   %esi
   1c38a:	8d 78 01             	lea    0x1(%eax),%edi
   1c38d:	89 f8                	mov    %edi,%eax
   1c38f:	0f b6 c0             	movzbl %al,%eax
   1c392:	50                   	push   %eax
   1c393:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   1c399:	50                   	push   %eax
   1c39a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1c3a0:	50                   	push   %eax
   1c3a1:	e8 fa 5c ff ff       	call   120a0 <print_asm_1>
   1c3a6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1c3ac:	83 c4 20             	add    $0x20,%esp
   1c3af:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   1c3b3:	74 1b                	je     1c3d0 <setp_b+0x80>
   1c3b5:	83 ec 0c             	sub    $0xc,%esp
   1c3b8:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1c3bf:	56                   	push   %esi
   1c3c0:	e8 cb 61 ff ff       	call   12590 <operand_write>
   1c3c5:	83 c4 10             	add    $0x10,%esp
   1c3c8:	89 f8                	mov    %edi,%eax
   1c3ca:	5b                   	pop    %ebx
   1c3cb:	5e                   	pop    %esi
   1c3cc:	5f                   	pop    %edi
   1c3cd:	c3                   	ret    
   1c3ce:	66 90                	xchg   %ax,%ax
   1c3d0:	83 ec 0c             	sub    $0xc,%esp
   1c3d3:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1c3da:	56                   	push   %esi
   1c3db:	e8 b0 61 ff ff       	call   12590 <operand_write>
   1c3e0:	83 c4 10             	add    $0x10,%esp
   1c3e3:	89 f8                	mov    %edi,%eax
   1c3e5:	5b                   	pop    %ebx
   1c3e6:	5e                   	pop    %esi
   1c3e7:	5f                   	pop    %edi
   1c3e8:	c3                   	ret    
   1c3e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001c3f0 <sets_b>:
   1c3f0:	57                   	push   %edi
   1c3f1:	56                   	push   %esi
   1c3f2:	53                   	push   %ebx
   1c3f3:	e8 88 80 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c3f8:	81 c3 08 2c 03 00    	add    $0x32c08,%ebx
   1c3fe:	83 ec 08             	sub    $0x8,%esp
   1c401:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c407:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c40d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1c414:	56                   	push   %esi
   1c415:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1c419:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1c420:	83 c0 01             	add    $0x1,%eax
   1c423:	50                   	push   %eax
   1c424:	e8 57 5b ff ff       	call   11f80 <modrm_rm>
   1c429:	56                   	push   %esi
   1c42a:	8d 78 01             	lea    0x1(%eax),%edi
   1c42d:	89 f8                	mov    %edi,%eax
   1c42f:	0f b6 c0             	movzbl %al,%eax
   1c432:	50                   	push   %eax
   1c433:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   1c439:	50                   	push   %eax
   1c43a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   1c440:	50                   	push   %eax
   1c441:	e8 5a 5c ff ff       	call   120a0 <print_asm_1>
   1c446:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1c44c:	83 c4 20             	add    $0x20,%esp
   1c44f:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   1c453:	78 1b                	js     1c470 <sets_b+0x80>
   1c455:	83 ec 0c             	sub    $0xc,%esp
   1c458:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   1c45f:	56                   	push   %esi
   1c460:	e8 2b 61 ff ff       	call   12590 <operand_write>
   1c465:	83 c4 10             	add    $0x10,%esp
   1c468:	89 f8                	mov    %edi,%eax
   1c46a:	5b                   	pop    %ebx
   1c46b:	5e                   	pop    %esi
   1c46c:	5f                   	pop    %edi
   1c46d:	c3                   	ret    
   1c46e:	66 90                	xchg   %ax,%ax
   1c470:	83 ec 0c             	sub    $0xc,%esp
   1c473:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   1c47a:	56                   	push   %esi
   1c47b:	e8 10 61 ff ff       	call   12590 <operand_write>
   1c480:	83 c4 10             	add    $0x10,%esp
   1c483:	89 f8                	mov    %edi,%eax
   1c485:	5b                   	pop    %ebx
   1c486:	5e                   	pop    %esi
   1c487:	5f                   	pop    %edi
   1c488:	c3                   	ret    
   1c489:	66 90                	xchg   %ax,%ax
   1c48b:	66 90                	xchg   %ax,%ax
   1c48d:	66 90                	xchg   %ax,%ax
   1c48f:	90                   	nop

0001c490 <ret_near>:
   1c490:	57                   	push   %edi
   1c491:	56                   	push   %esi
   1c492:	53                   	push   %ebx
   1c493:	e8 e8 7f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c498:	81 c3 68 2b 03 00    	add    $0x32b68,%ebx
   1c49e:	83 ec 34             	sub    $0x34,%esp
   1c4a1:	6a 01                	push   $0x1
   1c4a3:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1c4a9:	50                   	push   %eax
   1c4aa:	8d 83 06 6b fe ff    	lea    -0x194fa(%ebx),%eax
   1c4b0:	50                   	push   %eax
   1c4b1:	e8 0a 5b ff ff       	call   11fc0 <print_asm_0>
   1c4b6:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   1c4bc:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1c4c2:	c7 44 24 1c 02 00 00 	movl   $0x2,0x1c(%esp)
   1c4c9:	00 
   1c4ca:	c6 44 24 24 03       	movb   $0x3,0x24(%esp)
   1c4cf:	0f b6 07             	movzbl (%edi),%eax
   1c4d2:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   1c4d6:	8b 46 10             	mov    0x10(%esi),%eax
   1c4d9:	89 44 24 20          	mov    %eax,0x20(%esp)
   1c4dd:	58                   	pop    %eax
   1c4de:	8d 44 24 18          	lea    0x18(%esp),%eax
   1c4e2:	50                   	push   %eax
   1c4e3:	e8 f8 5e ff ff       	call   123e0 <operand_read>
   1c4e8:	8b 44 24 28          	mov    0x28(%esp),%eax
   1c4ec:	89 46 20             	mov    %eax,0x20(%esi)
   1c4ef:	0f b6 07             	movzbl (%edi),%eax
   1c4f2:	c0 e8 03             	shr    $0x3,%al
   1c4f5:	0f b6 c0             	movzbl %al,%eax
   1c4f8:	01 46 10             	add    %eax,0x10(%esi)
   1c4fb:	83 c4 40             	add    $0x40,%esp
   1c4fe:	31 c0                	xor    %eax,%eax
   1c500:	5b                   	pop    %ebx
   1c501:	5e                   	pop    %esi
   1c502:	5f                   	pop    %edi
   1c503:	c3                   	ret    
   1c504:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c50b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c50f:	90                   	nop

0001c510 <ret_near_imm_w>:
   1c510:	57                   	push   %edi
   1c511:	56                   	push   %esi
   1c512:	53                   	push   %ebx
   1c513:	e8 68 7f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c518:	81 c3 e8 2a 03 00    	add    $0x32ae8,%ebx
   1c51e:	83 ec 34             	sub    $0x34,%esp
   1c521:	6a 03                	push   $0x3
   1c523:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1c529:	50                   	push   %eax
   1c52a:	8d 83 06 6b fe ff    	lea    -0x194fa(%ebx),%eax
   1c530:	50                   	push   %eax
   1c531:	e8 8a 5a ff ff       	call   11fc0 <print_asm_0>
   1c536:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   1c53c:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1c542:	c7 44 24 1c 02 00 00 	movl   $0x2,0x1c(%esp)
   1c549:	00 
   1c54a:	c6 44 24 24 03       	movb   $0x3,0x24(%esp)
   1c54f:	0f b6 07             	movzbl (%edi),%eax
   1c552:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   1c556:	8b 46 10             	mov    0x10(%esi),%eax
   1c559:	89 44 24 20          	mov    %eax,0x20(%esp)
   1c55d:	58                   	pop    %eax
   1c55e:	8d 44 24 18          	lea    0x18(%esp),%eax
   1c562:	50                   	push   %eax
   1c563:	e8 78 5e ff ff       	call   123e0 <operand_read>
   1c568:	8b 44 24 28          	mov    0x28(%esp),%eax
   1c56c:	5a                   	pop    %edx
   1c56d:	59                   	pop    %ecx
   1c56e:	6a 02                	push   $0x2
   1c570:	89 46 20             	mov    %eax,0x20(%esi)
   1c573:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   1c577:	83 c0 01             	add    $0x1,%eax
   1c57a:	50                   	push   %eax
   1c57b:	e8 20 27 00 00       	call   1eca0 <instr_fetch>
   1c580:	0f b6 17             	movzbl (%edi),%edx
   1c583:	98                   	cwtl   
   1c584:	c0 ea 03             	shr    $0x3,%dl
   1c587:	0f b6 d2             	movzbl %dl,%edx
   1c58a:	01 d0                	add    %edx,%eax
   1c58c:	01 46 10             	add    %eax,0x10(%esi)
   1c58f:	83 c4 40             	add    $0x40,%esp
   1c592:	31 c0                	xor    %eax,%eax
   1c594:	5b                   	pop    %ebx
   1c595:	5e                   	pop    %esi
   1c596:	5f                   	pop    %edi
   1c597:	c3                   	ret    
   1c598:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c59f:	90                   	nop

0001c5a0 <iret>:
   1c5a0:	56                   	push   %esi
   1c5a1:	53                   	push   %ebx
   1c5a2:	e8 d9 7e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c5a7:	81 c3 59 2a 03 00    	add    $0x32a59,%ebx
   1c5ad:	83 ec 08             	sub    $0x8,%esp
   1c5b0:	6a 01                	push   $0x1
   1c5b2:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1c5b8:	50                   	push   %eax
   1c5b9:	8d 83 05 6b fe ff    	lea    -0x194fb(%ebx),%eax
   1c5bf:	50                   	push   %eax
   1c5c0:	e8 fb 59 ff ff       	call   11fc0 <print_asm_0>
   1c5c5:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1c5cb:	83 c4 0c             	add    $0xc,%esp
   1c5ce:	6a 04                	push   $0x4
   1c5d0:	6a 02                	push   $0x2
   1c5d2:	ff 76 10             	pushl  0x10(%esi)
   1c5d5:	e8 96 25 00 00       	call   1eb70 <vaddr_read>
   1c5da:	83 c4 0c             	add    $0xc,%esp
   1c5dd:	89 46 20             	mov    %eax,0x20(%esi)
   1c5e0:	8b 46 10             	mov    0x10(%esi),%eax
   1c5e3:	6a 02                	push   $0x2
   1c5e5:	83 c0 04             	add    $0x4,%eax
   1c5e8:	6a 02                	push   $0x2
   1c5ea:	50                   	push   %eax
   1c5eb:	89 46 10             	mov    %eax,0x10(%esi)
   1c5ee:	e8 7d 25 00 00       	call   1eb70 <vaddr_read>
   1c5f3:	83 c4 0c             	add    $0xc,%esp
   1c5f6:	66 89 46 40          	mov    %ax,0x40(%esi)
   1c5fa:	8b 46 10             	mov    0x10(%esi),%eax
   1c5fd:	6a 04                	push   $0x4
   1c5ff:	83 c0 02             	add    $0x2,%eax
   1c602:	6a 02                	push   $0x2
   1c604:	50                   	push   %eax
   1c605:	89 46 10             	mov    %eax,0x10(%esi)
   1c608:	e8 63 25 00 00       	call   1eb70 <vaddr_read>
   1c60d:	83 46 10 04          	addl   $0x4,0x10(%esi)
   1c611:	89 46 24             	mov    %eax,0x24(%esi)
   1c614:	83 c4 14             	add    $0x14,%esp
   1c617:	31 c0                	xor    %eax,%eax
   1c619:	5b                   	pop    %ebx
   1c61a:	5e                   	pop    %esi
   1c61b:	c3                   	ret    
   1c61c:	66 90                	xchg   %ax,%ax
   1c61e:	66 90                	xchg   %ax,%ax

0001c620 <sign_ext.part.0>:
   1c620:	53                   	push   %ebx
   1c621:	e8 5a 7e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c626:	81 c3 da 29 03 00    	add    $0x329da,%ebx
   1c62c:	83 ec 08             	sub    $0x8,%esp
   1c62f:	8d 83 10 6b fe ff    	lea    -0x194f0(%ebx),%eax
   1c635:	50                   	push   %eax
   1c636:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1c63c:	6a 2e                	push   $0x2e
   1c63e:	50                   	push   %eax
   1c63f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   1c645:	50                   	push   %eax
   1c646:	e8 c5 7c fe ff       	call   4310 <__assert_fail@plt>
   1c64b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c64f:	90                   	nop

0001c650 <jmp_near>:
   1c650:	55                   	push   %ebp
   1c651:	57                   	push   %edi
   1c652:	56                   	push   %esi
   1c653:	53                   	push   %ebx
   1c654:	e8 27 7e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c659:	81 c3 a7 29 03 00    	add    $0x329a7,%ebx
   1c65f:	83 ec 48             	sub    $0x48,%esp
   1c662:	8d 6c 24 18          	lea    0x18(%esp),%ebp
   1c666:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1c66d:	00 
   1c66e:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
   1c673:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   1c679:	0f b6 07             	movzbl (%edi),%eax
   1c67c:	89 44 24 28          	mov    %eax,0x28(%esp)
   1c680:	8b 44 24 5c          	mov    0x5c(%esp),%eax
   1c684:	83 c0 01             	add    $0x1,%eax
   1c687:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1c68b:	55                   	push   %ebp
   1c68c:	e8 4f 5d ff ff       	call   123e0 <operand_read>
   1c691:	0f b6 07             	movzbl (%edi),%eax
   1c694:	8b 74 24 28          	mov    0x28(%esp),%esi
   1c698:	83 c4 10             	add    $0x10,%esp
   1c69b:	8d 50 f8             	lea    -0x8(%eax),%edx
   1c69e:	81 e2 f7 00 00 00    	and    $0xf7,%edx
   1c6a4:	74 04                	je     1c6aa <jmp_near+0x5a>
   1c6a6:	3c 20                	cmp    $0x20,%al
   1c6a8:	75 55                	jne    1c6ff <jmp_near+0xaf>
   1c6aa:	3c 08                	cmp    $0x8,%al
   1c6ac:	74 4a                	je     1c6f8 <jmp_near+0xa8>
   1c6ae:	0f bf d6             	movswl %si,%edx
   1c6b1:	3c 10                	cmp    $0x10,%al
   1c6b3:	0f 44 f2             	cmove  %edx,%esi
   1c6b6:	c0 e8 03             	shr    $0x3,%al
   1c6b9:	55                   	push   %ebp
   1c6ba:	83 c0 01             	add    $0x1,%eax
   1c6bd:	0f b6 c0             	movzbl %al,%eax
   1c6c0:	50                   	push   %eax
   1c6c1:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1c6c7:	50                   	push   %eax
   1c6c8:	8d 83 0b 6b fe ff    	lea    -0x194f5(%ebx),%eax
   1c6ce:	50                   	push   %eax
   1c6cf:	e8 cc 59 ff ff       	call   120a0 <print_asm_1>
   1c6d4:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1c6da:	01 70 20             	add    %esi,0x20(%eax)
   1c6dd:	0f b6 07             	movzbl (%edi),%eax
   1c6e0:	83 c4 4c             	add    $0x4c,%esp
   1c6e3:	5b                   	pop    %ebx
   1c6e4:	5e                   	pop    %esi
   1c6e5:	c0 e8 03             	shr    $0x3,%al
   1c6e8:	5f                   	pop    %edi
   1c6e9:	5d                   	pop    %ebp
   1c6ea:	0f b6 c0             	movzbl %al,%eax
   1c6ed:	83 c0 01             	add    $0x1,%eax
   1c6f0:	c3                   	ret    
   1c6f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c6f8:	89 f1                	mov    %esi,%ecx
   1c6fa:	0f be f1             	movsbl %cl,%esi
   1c6fd:	eb b7                	jmp    1c6b6 <jmp_near+0x66>
   1c6ff:	e8 1c ff ff ff       	call   1c620 <sign_ext.part.0>
   1c704:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c70b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c70f:	90                   	nop

0001c710 <jmp_near_indirect>:
   1c710:	55                   	push   %ebp
   1c711:	57                   	push   %edi
   1c712:	56                   	push   %esi
   1c713:	53                   	push   %ebx
   1c714:	e8 67 7d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c719:	81 c3 e7 28 03 00    	add    $0x328e7,%ebx
   1c71f:	83 ec 44             	sub    $0x44,%esp
   1c722:	8d 6c 24 14          	lea    0x14(%esp),%ebp
   1c726:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   1c72c:	0f b6 07             	movzbl (%edi),%eax
   1c72f:	89 44 24 24          	mov    %eax,0x24(%esp)
   1c733:	55                   	push   %ebp
   1c734:	8b 44 24 5c          	mov    0x5c(%esp),%eax
   1c738:	83 c0 01             	add    $0x1,%eax
   1c73b:	50                   	push   %eax
   1c73c:	e8 3f 58 ff ff       	call   11f80 <modrm_rm>
   1c741:	89 2c 24             	mov    %ebp,(%esp)
   1c744:	89 c6                	mov    %eax,%esi
   1c746:	e8 95 5c ff ff       	call   123e0 <operand_read>
   1c74b:	8d 46 01             	lea    0x1(%esi),%eax
   1c74e:	55                   	push   %ebp
   1c74f:	0f b6 f0             	movzbl %al,%esi
   1c752:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1c758:	56                   	push   %esi
   1c759:	50                   	push   %eax
   1c75a:	8d 83 0b 6b fe ff    	lea    -0x194f5(%ebx),%eax
   1c760:	50                   	push   %eax
   1c761:	e8 3a 59 ff ff       	call   120a0 <print_asm_1>
   1c766:	8b 44 24 38          	mov    0x38(%esp),%eax
   1c76a:	80 3f 10             	cmpb   $0x10,(%edi)
   1c76d:	89 c2                	mov    %eax,%edx
   1c76f:	0f b7 c0             	movzwl %ax,%eax
   1c772:	0f 45 c2             	cmovne %edx,%eax
   1c775:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1c77b:	89 42 20             	mov    %eax,0x20(%edx)
   1c77e:	83 c4 5c             	add    $0x5c,%esp
   1c781:	31 c0                	xor    %eax,%eax
   1c783:	5b                   	pop    %ebx
   1c784:	5e                   	pop    %esi
   1c785:	5f                   	pop    %edi
   1c786:	5d                   	pop    %ebp
   1c787:	c3                   	ret    
   1c788:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c78f:	90                   	nop

0001c790 <jmp_short>:
   1c790:	56                   	push   %esi
   1c791:	53                   	push   %ebx
   1c792:	e8 e9 7c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c797:	81 c3 69 28 03 00    	add    $0x32869,%ebx
   1c79d:	83 ec 40             	sub    $0x40,%esp
   1c7a0:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   1c7a4:	8d 74 24 18          	lea    0x18(%esp),%esi
   1c7a8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1c7af:	00 
   1c7b0:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
   1c7b5:	83 c0 01             	add    $0x1,%eax
   1c7b8:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
   1c7bf:	00 
   1c7c0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1c7c4:	56                   	push   %esi
   1c7c5:	e8 16 5c ff ff       	call   123e0 <operand_read>
   1c7ca:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1c7d0:	56                   	push   %esi
   1c7d1:	6a 02                	push   $0x2
   1c7d3:	50                   	push   %eax
   1c7d4:	8d 83 0b 6b fe ff    	lea    -0x194f5(%ebx),%eax
   1c7da:	50                   	push   %eax
   1c7db:	e8 c0 58 ff ff       	call   120a0 <print_asm_1>
   1c7e0:	8b 54 24 3c          	mov    0x3c(%esp),%edx
   1c7e4:	8b 44 24 38          	mov    0x38(%esp),%eax
   1c7e8:	83 c4 20             	add    $0x20,%esp
   1c7eb:	8d 4a f8             	lea    -0x8(%edx),%ecx
   1c7ee:	83 e1 f7             	and    $0xfffffff7,%ecx
   1c7f1:	74 05                	je     1c7f8 <jmp_short+0x68>
   1c7f3:	83 fa 20             	cmp    $0x20,%edx
   1c7f6:	75 2d                	jne    1c825 <jmp_short+0x95>
   1c7f8:	83 fa 08             	cmp    $0x8,%edx
   1c7fb:	74 23                	je     1c820 <jmp_short+0x90>
   1c7fd:	0f bf c8             	movswl %ax,%ecx
   1c800:	83 fa 10             	cmp    $0x10,%edx
   1c803:	0f 44 c1             	cmove  %ecx,%eax
   1c806:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1c80c:	01 42 20             	add    %eax,0x20(%edx)
   1c80f:	83 c4 34             	add    $0x34,%esp
   1c812:	b8 02 00 00 00       	mov    $0x2,%eax
   1c817:	5b                   	pop    %ebx
   1c818:	5e                   	pop    %esi
   1c819:	c3                   	ret    
   1c81a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1c820:	0f be c0             	movsbl %al,%eax
   1c823:	eb e1                	jmp    1c806 <jmp_short+0x76>
   1c825:	e8 f6 fd ff ff       	call   1c620 <sign_ext.part.0>
   1c82a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001c830 <ljmp>:
   1c830:	57                   	push   %edi
   1c831:	56                   	push   %esi
   1c832:	53                   	push   %ebx
   1c833:	e8 48 7c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c838:	81 c3 c8 27 03 00    	add    $0x327c8,%ebx
   1c83e:	83 ec 3c             	sub    $0x3c,%esp
   1c841:	8b 74 24 4c          	mov    0x4c(%esp),%esi
   1c845:	8d 7c 24 18          	lea    0x18(%esp),%edi
   1c849:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1c850:	00 
   1c851:	c7 44 24 28 20 00 00 	movl   $0x20,0x28(%esp)
   1c858:	00 
   1c859:	8d 46 01             	lea    0x1(%esi),%eax
   1c85c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1c860:	57                   	push   %edi
   1c861:	e8 7a 5b ff ff       	call   123e0 <operand_read>
   1c866:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1c86c:	57                   	push   %edi
   1c86d:	6a 07                	push   $0x7
   1c86f:	50                   	push   %eax
   1c870:	8d 83 0a 6b fe ff    	lea    -0x194f6(%ebx),%eax
   1c876:	50                   	push   %eax
   1c877:	e8 24 58 ff ff       	call   120a0 <print_asm_1>
   1c87c:	83 c4 18             	add    $0x18,%esp
   1c87f:	8b 44 24 20          	mov    0x20(%esp),%eax
   1c883:	8d 93 84 07 00 00    	lea    0x784(%ebx),%edx
   1c889:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   1c88f:	80 3a 10             	cmpb   $0x10,(%edx)
   1c892:	89 c1                	mov    %eax,%ecx
   1c894:	0f b7 c0             	movzwl %ax,%eax
   1c897:	0f 45 c1             	cmovne %ecx,%eax
   1c89a:	83 c6 05             	add    $0x5,%esi
   1c89d:	89 47 20             	mov    %eax,0x20(%edi)
   1c8a0:	6a 02                	push   $0x2
   1c8a2:	56                   	push   %esi
   1c8a3:	e8 f8 23 00 00       	call   1eca0 <instr_fetch>
   1c8a8:	66 89 47 40          	mov    %ax,0x40(%edi)
   1c8ac:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   1c8b3:	e8 18 1f 00 00       	call   1e7d0 <load_sreg>
   1c8b8:	83 c4 40             	add    $0x40,%esp
   1c8bb:	31 c0                	xor    %eax,%eax
   1c8bd:	5b                   	pop    %ebx
   1c8be:	5e                   	pop    %esi
   1c8bf:	5f                   	pop    %edi
   1c8c0:	c3                   	ret    
   1c8c1:	66 90                	xchg   %ax,%ax
   1c8c3:	66 90                	xchg   %ax,%ax
   1c8c5:	66 90                	xchg   %ax,%ax
   1c8c7:	66 90                	xchg   %ax,%ax
   1c8c9:	66 90                	xchg   %ax,%ax
   1c8cb:	66 90                	xchg   %ax,%ax
   1c8cd:	66 90                	xchg   %ax,%ax
   1c8cf:	90                   	nop

0001c8d0 <instr_execute_1op>:
   1c8d0:	56                   	push   %esi
   1c8d1:	53                   	push   %ebx
   1c8d2:	e8 a9 7b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c8d7:	81 c3 29 27 03 00    	add    $0x32729,%ebx
   1c8dd:	83 ec 10             	sub    $0x10,%esp
   1c8e0:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c8e6:	56                   	push   %esi
   1c8e7:	e8 f4 5a ff ff       	call   123e0 <operand_read>
   1c8ec:	83 c4 0c             	add    $0xc,%esp
   1c8ef:	ff 76 10             	pushl  0x10(%esi)
   1c8f2:	ff 76 0c             	pushl  0xc(%esi)
   1c8f5:	6a 01                	push   $0x1
   1c8f7:	e8 94 2a ff ff       	call   f390 <alu_add>
   1c8fc:	89 34 24             	mov    %esi,(%esp)
   1c8ff:	89 46 0c             	mov    %eax,0xc(%esi)
   1c902:	e8 89 5c ff ff       	call   12590 <operand_write>
   1c907:	83 c4 14             	add    $0x14,%esp
   1c90a:	5b                   	pop    %ebx
   1c90b:	5e                   	pop    %esi
   1c90c:	c3                   	ret    
   1c90d:	8d 76 00             	lea    0x0(%esi),%esi

0001c910 <inc_r_v>:
   1c910:	53                   	push   %ebx
   1c911:	e8 6a 7b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c916:	81 c3 ea 26 03 00    	add    $0x326ea,%ebx
   1c91c:	83 ec 08             	sub    $0x8,%esp
   1c91f:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1c925:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1c92b:	0f b6 08             	movzbl (%eax),%ecx
   1c92e:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   1c934:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1c93a:	89 48 10             	mov    %ecx,0x10(%eax)
   1c93d:	8b 44 24 14          	mov    0x14(%esp),%eax
   1c941:	89 4a 10             	mov    %ecx,0x10(%edx)
   1c944:	83 e0 07             	and    $0x7,%eax
   1c947:	89 42 04             	mov    %eax,0x4(%edx)
   1c94a:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1c950:	83 f9 08             	cmp    $0x8,%ecx
   1c953:	74 12                	je     1c967 <inc_r_v+0x57>
   1c955:	83 f9 10             	cmp    $0x10,%ecx
   1c958:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1c95e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1c964:	0f 45 c1             	cmovne %ecx,%eax
   1c967:	52                   	push   %edx
   1c968:	6a 01                	push   $0x1
   1c96a:	50                   	push   %eax
   1c96b:	8d 83 19 6b fe ff    	lea    -0x194e7(%ebx),%eax
   1c971:	50                   	push   %eax
   1c972:	e8 29 57 ff ff       	call   120a0 <print_asm_1>
   1c977:	e8 54 ff ff ff       	call   1c8d0 <instr_execute_1op>
   1c97c:	83 c4 18             	add    $0x18,%esp
   1c97f:	b8 01 00 00 00       	mov    $0x1,%eax
   1c984:	5b                   	pop    %ebx
   1c985:	c3                   	ret    
   1c986:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c98d:	8d 76 00             	lea    0x0(%esi),%esi

0001c990 <inc_rm_v>:
   1c990:	55                   	push   %ebp
   1c991:	57                   	push   %edi
   1c992:	56                   	push   %esi
   1c993:	53                   	push   %ebx
   1c994:	e8 e7 7a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1c999:	81 c3 67 26 03 00    	add    $0x32667,%ebx
   1c99f:	83 ec 14             	sub    $0x14,%esp
   1c9a2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1c9a8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1c9ae:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1c9b4:	0f b6 00             	movzbl (%eax),%eax
   1c9b7:	56                   	push   %esi
   1c9b8:	89 45 10             	mov    %eax,0x10(%ebp)
   1c9bb:	89 46 10             	mov    %eax,0x10(%esi)
   1c9be:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1c9c2:	83 c0 01             	add    $0x1,%eax
   1c9c5:	50                   	push   %eax
   1c9c6:	e8 b5 55 ff ff       	call   11f80 <modrm_rm>
   1c9cb:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1c9ce:	83 c4 10             	add    $0x10,%esp
   1c9d1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1c9d7:	8d 78 01             	lea    0x1(%eax),%edi
   1c9da:	89 f8                	mov    %edi,%eax
   1c9dc:	0f b6 c0             	movzbl %al,%eax
   1c9df:	83 f9 08             	cmp    $0x8,%ecx
   1c9e2:	74 12                	je     1c9f6 <inc_rm_v+0x66>
   1c9e4:	83 f9 10             	cmp    $0x10,%ecx
   1c9e7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1c9ed:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1c9f3:	0f 45 d1             	cmovne %ecx,%edx
   1c9f6:	56                   	push   %esi
   1c9f7:	50                   	push   %eax
   1c9f8:	8d 83 19 6b fe ff    	lea    -0x194e7(%ebx),%eax
   1c9fe:	52                   	push   %edx
   1c9ff:	50                   	push   %eax
   1ca00:	e8 9b 56 ff ff       	call   120a0 <print_asm_1>
   1ca05:	e8 c6 fe ff ff       	call   1c8d0 <instr_execute_1op>
   1ca0a:	83 c4 1c             	add    $0x1c,%esp
   1ca0d:	89 f8                	mov    %edi,%eax
   1ca0f:	5b                   	pop    %ebx
   1ca10:	5e                   	pop    %esi
   1ca11:	5f                   	pop    %edi
   1ca12:	5d                   	pop    %ebp
   1ca13:	c3                   	ret    
   1ca14:	66 90                	xchg   %ax,%ax
   1ca16:	66 90                	xchg   %ax,%ax
   1ca18:	66 90                	xchg   %ax,%ax
   1ca1a:	66 90                	xchg   %ax,%ax
   1ca1c:	66 90                	xchg   %ax,%ax
   1ca1e:	66 90                	xchg   %ax,%ax

0001ca20 <lgdt>:
   1ca20:	55                   	push   %ebp
   1ca21:	57                   	push   %edi
   1ca22:	56                   	push   %esi
   1ca23:	53                   	push   %ebx
   1ca24:	e8 57 7a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ca29:	81 c3 d7 25 03 00    	add    $0x325d7,%ebx
   1ca2f:	83 ec 44             	sub    $0x44,%esp
   1ca32:	8d 7c 24 14          	lea    0x14(%esp),%edi
   1ca36:	57                   	push   %edi
   1ca37:	8b 44 24 5c          	mov    0x5c(%esp),%eax
   1ca3b:	83 c0 01             	add    $0x1,%eax
   1ca3e:	50                   	push   %eax
   1ca3f:	e8 3c 55 ff ff       	call   11f80 <modrm_rm>
   1ca44:	89 3c 24             	mov    %edi,(%esp)
   1ca47:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   1ca4e:	00 
   1ca4f:	8d 70 01             	lea    0x1(%eax),%esi
   1ca52:	e8 89 59 ff ff       	call   123e0 <operand_read>
   1ca57:	8b 44 24 28          	mov    0x28(%esp),%eax
   1ca5b:	8d ab 60 32 05 00    	lea    0x53260(%ebx),%ebp
   1ca61:	89 3c 24             	mov    %edi,(%esp)
   1ca64:	83 44 24 20 02       	addl   $0x2,0x20(%esp)
   1ca69:	c7 44 24 2c 20 00 00 	movl   $0x20,0x2c(%esp)
   1ca70:	00 
   1ca71:	66 89 45 28          	mov    %ax,0x28(%ebp)
   1ca75:	e8 66 59 ff ff       	call   123e0 <operand_read>
   1ca7a:	8b 44 24 28          	mov    0x28(%esp),%eax
   1ca7e:	57                   	push   %edi
   1ca7f:	89 45 2c             	mov    %eax,0x2c(%ebp)
   1ca82:	8d 46 01             	lea    0x1(%esi),%eax
   1ca85:	0f b6 c0             	movzbl %al,%eax
   1ca88:	50                   	push   %eax
   1ca89:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1ca8f:	50                   	push   %eax
   1ca90:	8d 83 1d 6b fe ff    	lea    -0x194e3(%ebx),%eax
   1ca96:	50                   	push   %eax
   1ca97:	e8 04 56 ff ff       	call   120a0 <print_asm_1>
   1ca9c:	83 c4 5c             	add    $0x5c,%esp
   1ca9f:	89 f0                	mov    %esi,%eax
   1caa1:	5b                   	pop    %ebx
   1caa2:	5e                   	pop    %esi
   1caa3:	5f                   	pop    %edi
   1caa4:	5d                   	pop    %ebp
   1caa5:	c3                   	ret    
   1caa6:	66 90                	xchg   %ax,%ax
   1caa8:	66 90                	xchg   %ax,%ax
   1caaa:	66 90                	xchg   %ax,%ax
   1caac:	66 90                	xchg   %ax,%ax
   1caae:	66 90                	xchg   %ax,%ax

0001cab0 <sign_ext.part.0>:
   1cab0:	53                   	push   %ebx
   1cab1:	e8 ca 79 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cab6:	81 c3 4a 25 03 00    	add    $0x3254a,%ebx
   1cabc:	83 ec 08             	sub    $0x8,%esp
   1cabf:	8d 83 28 6b fe ff    	lea    -0x194d8(%ebx),%eax
   1cac5:	50                   	push   %eax
   1cac6:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1cacc:	6a 2e                	push   $0x2e
   1cace:	50                   	push   %eax
   1cacf:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   1cad5:	50                   	push   %eax
   1cad6:	e8 35 78 fe ff       	call   4310 <__assert_fail@plt>
   1cadb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1cadf:	90                   	nop

0001cae0 <instr_execute_2op>:
   1cae0:	57                   	push   %edi
   1cae1:	56                   	push   %esi
   1cae2:	53                   	push   %ebx
   1cae3:	e8 98 79 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cae8:	81 c3 18 25 03 00    	add    $0x32518,%ebx
   1caee:	83 ec 0c             	sub    $0xc,%esp
   1caf1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1caf7:	56                   	push   %esi
   1caf8:	e8 e3 58 ff ff       	call   123e0 <operand_read>
   1cafd:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1cb03:	89 3c 24             	mov    %edi,(%esp)
   1cb06:	e8 d5 58 ff ff       	call   123e0 <operand_read>
   1cb0b:	8b 56 10             	mov    0x10(%esi),%edx
   1cb0e:	83 c4 10             	add    $0x10,%esp
   1cb11:	8b 46 0c             	mov    0xc(%esi),%eax
   1cb14:	8d 4a f8             	lea    -0x8(%edx),%ecx
   1cb17:	83 e1 f7             	and    $0xfffffff7,%ecx
   1cb1a:	74 05                	je     1cb21 <instr_execute_2op+0x41>
   1cb1c:	83 fa 20             	cmp    $0x20,%edx
   1cb1f:	75 64                	jne    1cb85 <instr_execute_2op+0xa5>
   1cb21:	83 fa 08             	cmp    $0x8,%edx
   1cb24:	74 52                	je     1cb78 <instr_execute_2op+0x98>
   1cb26:	0f bf c8             	movswl %ax,%ecx
   1cb29:	83 fa 10             	cmp    $0x10,%edx
   1cb2c:	0f 44 c1             	cmove  %ecx,%eax
   1cb2f:	8b 4f 10             	mov    0x10(%edi),%ecx
   1cb32:	8b 57 0c             	mov    0xc(%edi),%edx
   1cb35:	89 46 0c             	mov    %eax,0xc(%esi)
   1cb38:	8d 71 f8             	lea    -0x8(%ecx),%esi
   1cb3b:	83 e6 f7             	and    $0xfffffff7,%esi
   1cb3e:	74 05                	je     1cb45 <instr_execute_2op+0x65>
   1cb40:	83 f9 20             	cmp    $0x20,%ecx
   1cb43:	75 40                	jne    1cb85 <instr_execute_2op+0xa5>
   1cb45:	83 f9 08             	cmp    $0x8,%ecx
   1cb48:	74 36                	je     1cb80 <instr_execute_2op+0xa0>
   1cb4a:	0f bf f2             	movswl %dx,%esi
   1cb4d:	83 f9 10             	cmp    $0x10,%ecx
   1cb50:	0f 44 d6             	cmove  %esi,%edx
   1cb53:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   1cb59:	83 ec 04             	sub    $0x4,%esp
   1cb5c:	89 57 0c             	mov    %edx,0xc(%edi)
   1cb5f:	0f b6 09             	movzbl (%ecx),%ecx
   1cb62:	51                   	push   %ecx
   1cb63:	52                   	push   %edx
   1cb64:	50                   	push   %eax
   1cb65:	e8 06 2a ff ff       	call   f570 <alu_sub>
   1cb6a:	83 c4 10             	add    $0x10,%esp
   1cb6d:	5b                   	pop    %ebx
   1cb6e:	5e                   	pop    %esi
   1cb6f:	5f                   	pop    %edi
   1cb70:	c3                   	ret    
   1cb71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1cb78:	0f be c0             	movsbl %al,%eax
   1cb7b:	eb b2                	jmp    1cb2f <instr_execute_2op+0x4f>
   1cb7d:	8d 76 00             	lea    0x0(%esi),%esi
   1cb80:	0f be d2             	movsbl %dl,%edx
   1cb83:	eb ce                	jmp    1cb53 <instr_execute_2op+0x73>
   1cb85:	e8 26 ff ff ff       	call   1cab0 <sign_ext.part.0>
   1cb8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001cb90 <cmp_r2rm_b>:
   1cb90:	55                   	push   %ebp
   1cb91:	57                   	push   %edi
   1cb92:	56                   	push   %esi
   1cb93:	53                   	push   %ebx
   1cb94:	e8 e7 78 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cb99:	81 c3 67 24 03 00    	add    $0x32467,%ebx
   1cb9f:	83 ec 10             	sub    $0x10,%esp
   1cba2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1cba8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1cbae:	56                   	push   %esi
   1cbaf:	57                   	push   %edi
   1cbb0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1cbb4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1cbbb:	83 c0 01             	add    $0x1,%eax
   1cbbe:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1cbc5:	50                   	push   %eax
   1cbc6:	e8 d5 52 ff ff       	call   11ea0 <modrm_r_rm>
   1cbcb:	8b 4e 10             	mov    0x10(%esi),%ecx
   1cbce:	83 c4 10             	add    $0x10,%esp
   1cbd1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1cbd7:	8d 68 01             	lea    0x1(%eax),%ebp
   1cbda:	89 e8                	mov    %ebp,%eax
   1cbdc:	0f b6 c0             	movzbl %al,%eax
   1cbdf:	83 f9 08             	cmp    $0x8,%ecx
   1cbe2:	74 12                	je     1cbf6 <cmp_r2rm_b+0x66>
   1cbe4:	83 f9 10             	cmp    $0x10,%ecx
   1cbe7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1cbed:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1cbf3:	0f 45 d1             	cmovne %ecx,%edx
   1cbf6:	83 ec 0c             	sub    $0xc,%esp
   1cbf9:	56                   	push   %esi
   1cbfa:	57                   	push   %edi
   1cbfb:	50                   	push   %eax
   1cbfc:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1cc02:	52                   	push   %edx
   1cc03:	50                   	push   %eax
   1cc04:	e8 97 55 ff ff       	call   121a0 <print_asm_2>
   1cc09:	83 c4 20             	add    $0x20,%esp
   1cc0c:	e8 cf fe ff ff       	call   1cae0 <instr_execute_2op>
   1cc11:	83 c4 0c             	add    $0xc,%esp
   1cc14:	89 e8                	mov    %ebp,%eax
   1cc16:	5b                   	pop    %ebx
   1cc17:	5e                   	pop    %esi
   1cc18:	5f                   	pop    %edi
   1cc19:	5d                   	pop    %ebp
   1cc1a:	c3                   	ret    
   1cc1b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1cc1f:	90                   	nop

0001cc20 <cmp_r2rm_v>:
   1cc20:	55                   	push   %ebp
   1cc21:	57                   	push   %edi
   1cc22:	56                   	push   %esi
   1cc23:	53                   	push   %ebx
   1cc24:	e8 57 78 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cc29:	81 c3 d7 23 03 00    	add    $0x323d7,%ebx
   1cc2f:	83 ec 10             	sub    $0x10,%esp
   1cc32:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1cc38:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1cc3e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1cc44:	0f b6 00             	movzbl (%eax),%eax
   1cc47:	56                   	push   %esi
   1cc48:	57                   	push   %edi
   1cc49:	89 46 10             	mov    %eax,0x10(%esi)
   1cc4c:	89 47 10             	mov    %eax,0x10(%edi)
   1cc4f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1cc53:	83 c0 01             	add    $0x1,%eax
   1cc56:	50                   	push   %eax
   1cc57:	e8 44 52 ff ff       	call   11ea0 <modrm_r_rm>
   1cc5c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1cc5f:	83 c4 10             	add    $0x10,%esp
   1cc62:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1cc68:	8d 68 01             	lea    0x1(%eax),%ebp
   1cc6b:	89 e8                	mov    %ebp,%eax
   1cc6d:	0f b6 c0             	movzbl %al,%eax
   1cc70:	83 f9 08             	cmp    $0x8,%ecx
   1cc73:	74 12                	je     1cc87 <cmp_r2rm_v+0x67>
   1cc75:	83 f9 10             	cmp    $0x10,%ecx
   1cc78:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1cc7e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1cc84:	0f 45 d1             	cmovne %ecx,%edx
   1cc87:	83 ec 0c             	sub    $0xc,%esp
   1cc8a:	56                   	push   %esi
   1cc8b:	57                   	push   %edi
   1cc8c:	50                   	push   %eax
   1cc8d:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1cc93:	52                   	push   %edx
   1cc94:	50                   	push   %eax
   1cc95:	e8 06 55 ff ff       	call   121a0 <print_asm_2>
   1cc9a:	83 c4 20             	add    $0x20,%esp
   1cc9d:	e8 3e fe ff ff       	call   1cae0 <instr_execute_2op>
   1cca2:	83 c4 0c             	add    $0xc,%esp
   1cca5:	89 e8                	mov    %ebp,%eax
   1cca7:	5b                   	pop    %ebx
   1cca8:	5e                   	pop    %esi
   1cca9:	5f                   	pop    %edi
   1ccaa:	5d                   	pop    %ebp
   1ccab:	c3                   	ret    
   1ccac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001ccb0 <cmp_rm2r_b>:
   1ccb0:	55                   	push   %ebp
   1ccb1:	57                   	push   %edi
   1ccb2:	56                   	push   %esi
   1ccb3:	53                   	push   %ebx
   1ccb4:	e8 c7 77 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ccb9:	81 c3 47 23 03 00    	add    $0x32347,%ebx
   1ccbf:	83 ec 10             	sub    $0x10,%esp
   1ccc2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1ccc8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1ccce:	57                   	push   %edi
   1cccf:	56                   	push   %esi
   1ccd0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1ccd4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1ccdb:	83 c0 01             	add    $0x1,%eax
   1ccde:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1cce5:	50                   	push   %eax
   1cce6:	e8 b5 51 ff ff       	call   11ea0 <modrm_r_rm>
   1cceb:	8b 4e 10             	mov    0x10(%esi),%ecx
   1ccee:	83 c4 10             	add    $0x10,%esp
   1ccf1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1ccf7:	8d 68 01             	lea    0x1(%eax),%ebp
   1ccfa:	89 e8                	mov    %ebp,%eax
   1ccfc:	0f b6 c0             	movzbl %al,%eax
   1ccff:	83 f9 08             	cmp    $0x8,%ecx
   1cd02:	74 12                	je     1cd16 <cmp_rm2r_b+0x66>
   1cd04:	83 f9 10             	cmp    $0x10,%ecx
   1cd07:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1cd0d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1cd13:	0f 45 d1             	cmovne %ecx,%edx
   1cd16:	83 ec 0c             	sub    $0xc,%esp
   1cd19:	56                   	push   %esi
   1cd1a:	57                   	push   %edi
   1cd1b:	50                   	push   %eax
   1cd1c:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1cd22:	52                   	push   %edx
   1cd23:	50                   	push   %eax
   1cd24:	e8 77 54 ff ff       	call   121a0 <print_asm_2>
   1cd29:	83 c4 20             	add    $0x20,%esp
   1cd2c:	e8 af fd ff ff       	call   1cae0 <instr_execute_2op>
   1cd31:	83 c4 0c             	add    $0xc,%esp
   1cd34:	89 e8                	mov    %ebp,%eax
   1cd36:	5b                   	pop    %ebx
   1cd37:	5e                   	pop    %esi
   1cd38:	5f                   	pop    %edi
   1cd39:	5d                   	pop    %ebp
   1cd3a:	c3                   	ret    
   1cd3b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1cd3f:	90                   	nop

0001cd40 <cmp_rm2r_v>:
   1cd40:	55                   	push   %ebp
   1cd41:	57                   	push   %edi
   1cd42:	56                   	push   %esi
   1cd43:	53                   	push   %ebx
   1cd44:	e8 37 77 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cd49:	81 c3 b7 22 03 00    	add    $0x322b7,%ebx
   1cd4f:	83 ec 10             	sub    $0x10,%esp
   1cd52:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1cd58:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1cd5e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1cd64:	0f b6 00             	movzbl (%eax),%eax
   1cd67:	57                   	push   %edi
   1cd68:	89 46 10             	mov    %eax,0x10(%esi)
   1cd6b:	56                   	push   %esi
   1cd6c:	89 47 10             	mov    %eax,0x10(%edi)
   1cd6f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1cd73:	83 c0 01             	add    $0x1,%eax
   1cd76:	50                   	push   %eax
   1cd77:	e8 24 51 ff ff       	call   11ea0 <modrm_r_rm>
   1cd7c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1cd7f:	83 c4 10             	add    $0x10,%esp
   1cd82:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1cd88:	8d 68 01             	lea    0x1(%eax),%ebp
   1cd8b:	89 e8                	mov    %ebp,%eax
   1cd8d:	0f b6 c0             	movzbl %al,%eax
   1cd90:	83 f9 08             	cmp    $0x8,%ecx
   1cd93:	74 12                	je     1cda7 <cmp_rm2r_v+0x67>
   1cd95:	83 f9 10             	cmp    $0x10,%ecx
   1cd98:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1cd9e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1cda4:	0f 45 d1             	cmovne %ecx,%edx
   1cda7:	83 ec 0c             	sub    $0xc,%esp
   1cdaa:	56                   	push   %esi
   1cdab:	57                   	push   %edi
   1cdac:	50                   	push   %eax
   1cdad:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1cdb3:	52                   	push   %edx
   1cdb4:	50                   	push   %eax
   1cdb5:	e8 e6 53 ff ff       	call   121a0 <print_asm_2>
   1cdba:	83 c4 20             	add    $0x20,%esp
   1cdbd:	e8 1e fd ff ff       	call   1cae0 <instr_execute_2op>
   1cdc2:	83 c4 0c             	add    $0xc,%esp
   1cdc5:	89 e8                	mov    %ebp,%eax
   1cdc7:	5b                   	pop    %ebx
   1cdc8:	5e                   	pop    %esi
   1cdc9:	5f                   	pop    %edi
   1cdca:	5d                   	pop    %ebp
   1cdcb:	c3                   	ret    
   1cdcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001cdd0 <cmp_i2a_b>:
   1cdd0:	53                   	push   %ebx
   1cdd1:	e8 aa 76 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cdd6:	81 c3 2a 22 03 00    	add    $0x3222a,%ebx
   1cddc:	83 ec 14             	sub    $0x14,%esp
   1cddf:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1cde3:	83 c1 01             	add    $0x1,%ecx
   1cde6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1cdec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1cdf2:	89 48 04             	mov    %ecx,0x4(%eax)
   1cdf5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1cdfc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1ce03:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1ce09:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1ce0d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1ce13:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1ce1a:	52                   	push   %edx
   1ce1b:	50                   	push   %eax
   1ce1c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1ce22:	6a 02                	push   $0x2
   1ce24:	50                   	push   %eax
   1ce25:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1ce2b:	50                   	push   %eax
   1ce2c:	e8 6f 53 ff ff       	call   121a0 <print_asm_2>
   1ce31:	83 c4 20             	add    $0x20,%esp
   1ce34:	e8 a7 fc ff ff       	call   1cae0 <instr_execute_2op>
   1ce39:	83 c4 08             	add    $0x8,%esp
   1ce3c:	b8 02 00 00 00       	mov    $0x2,%eax
   1ce41:	5b                   	pop    %ebx
   1ce42:	c3                   	ret    
   1ce43:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ce4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001ce50 <cmp_i2a_v>:
   1ce50:	55                   	push   %ebp
   1ce51:	57                   	push   %edi
   1ce52:	56                   	push   %esi
   1ce53:	53                   	push   %ebx
   1ce54:	e8 27 76 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ce59:	81 c3 a7 21 03 00    	add    $0x321a7,%ebx
   1ce5f:	83 ec 0c             	sub    $0xc,%esp
   1ce62:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1ce68:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1ce6e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   1ce74:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1ce7a:	0f b6 08             	movzbl (%eax),%ecx
   1ce7d:	8b 44 24 20          	mov    0x20(%esp),%eax
   1ce81:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   1ce87:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1ce8b:	89 cf                	mov    %ecx,%edi
   1ce8d:	83 c0 01             	add    $0x1,%eax
   1ce90:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1ce93:	c1 ef 03             	shr    $0x3,%edi
   1ce96:	89 4a 10             	mov    %ecx,0x10(%edx)
   1ce99:	89 42 04             	mov    %eax,0x4(%edx)
   1ce9c:	83 c7 01             	add    $0x1,%edi
   1ce9f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1cea6:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1cead:	83 f9 08             	cmp    $0x8,%ecx
   1ceb0:	74 12                	je     1cec4 <cmp_i2a_v+0x74>
   1ceb2:	83 f9 10             	cmp    $0x10,%ecx
   1ceb5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1cebb:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1cec1:	0f 45 f0             	cmovne %eax,%esi
   1cec4:	83 ec 0c             	sub    $0xc,%esp
   1cec7:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1cecd:	55                   	push   %ebp
   1cece:	52                   	push   %edx
   1cecf:	57                   	push   %edi
   1ced0:	56                   	push   %esi
   1ced1:	50                   	push   %eax
   1ced2:	e8 c9 52 ff ff       	call   121a0 <print_asm_2>
   1ced7:	83 c4 20             	add    $0x20,%esp
   1ceda:	e8 01 fc ff ff       	call   1cae0 <instr_execute_2op>
   1cedf:	83 c4 0c             	add    $0xc,%esp
   1cee2:	89 f8                	mov    %edi,%eax
   1cee4:	5b                   	pop    %ebx
   1cee5:	5e                   	pop    %esi
   1cee6:	5f                   	pop    %edi
   1cee7:	5d                   	pop    %ebp
   1cee8:	c3                   	ret    
   1cee9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001cef0 <cmp_i2rm_b>:
   1cef0:	55                   	push   %ebp
   1cef1:	57                   	push   %edi
   1cef2:	56                   	push   %esi
   1cef3:	53                   	push   %ebx
   1cef4:	e8 87 75 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cef9:	81 c3 07 21 03 00    	add    $0x32107,%ebx
   1ceff:	83 ec 24             	sub    $0x24,%esp
   1cf02:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1cf06:	8d 45 01             	lea    0x1(%ebp),%eax
   1cf09:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1cf0f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1cf15:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1cf1c:	52                   	push   %edx
   1cf1d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1cf24:	89 54 24 18          	mov    %edx,0x18(%esp)
   1cf28:	50                   	push   %eax
   1cf29:	e8 52 50 ff ff       	call   11f80 <modrm_rm>
   1cf2e:	8b 77 10             	mov    0x10(%edi),%esi
   1cf31:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1cf35:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1cf39:	83 c0 01             	add    $0x1,%eax
   1cf3c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1cf42:	83 c4 10             	add    $0x10,%esp
   1cf45:	01 c5                	add    %eax,%ebp
   1cf47:	c1 ee 03             	shr    $0x3,%esi
   1cf4a:	89 6f 04             	mov    %ebp,0x4(%edi)
   1cf4d:	01 c6                	add    %eax,%esi
   1cf4f:	8b 6a 10             	mov    0x10(%edx),%ebp
   1cf52:	89 f0                	mov    %esi,%eax
   1cf54:	0f b6 c8             	movzbl %al,%ecx
   1cf57:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1cf5d:	83 fd 08             	cmp    $0x8,%ebp
   1cf60:	74 12                	je     1cf74 <cmp_i2rm_b+0x84>
   1cf62:	83 fd 10             	cmp    $0x10,%ebp
   1cf65:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1cf6b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1cf71:	0f 45 c5             	cmovne %ebp,%eax
   1cf74:	83 ec 0c             	sub    $0xc,%esp
   1cf77:	52                   	push   %edx
   1cf78:	57                   	push   %edi
   1cf79:	51                   	push   %ecx
   1cf7a:	50                   	push   %eax
   1cf7b:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1cf81:	50                   	push   %eax
   1cf82:	e8 19 52 ff ff       	call   121a0 <print_asm_2>
   1cf87:	83 c4 20             	add    $0x20,%esp
   1cf8a:	e8 51 fb ff ff       	call   1cae0 <instr_execute_2op>
   1cf8f:	83 c4 1c             	add    $0x1c,%esp
   1cf92:	89 f0                	mov    %esi,%eax
   1cf94:	5b                   	pop    %ebx
   1cf95:	5e                   	pop    %esi
   1cf96:	5f                   	pop    %edi
   1cf97:	5d                   	pop    %ebp
   1cf98:	c3                   	ret    
   1cf99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001cfa0 <cmp_i2rm_v>:
   1cfa0:	55                   	push   %ebp
   1cfa1:	57                   	push   %edi
   1cfa2:	56                   	push   %esi
   1cfa3:	53                   	push   %ebx
   1cfa4:	e8 d7 74 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1cfa9:	81 c3 57 20 03 00    	add    $0x32057,%ebx
   1cfaf:	83 ec 24             	sub    $0x24,%esp
   1cfb2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1cfb6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1cfbc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1cfc2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1cfc8:	0f b6 00             	movzbl (%eax),%eax
   1cfcb:	89 42 10             	mov    %eax,0x10(%edx)
   1cfce:	52                   	push   %edx
   1cfcf:	89 47 10             	mov    %eax,0x10(%edi)
   1cfd2:	8d 45 01             	lea    0x1(%ebp),%eax
   1cfd5:	89 54 24 18          	mov    %edx,0x18(%esp)
   1cfd9:	50                   	push   %eax
   1cfda:	e8 a1 4f ff ff       	call   11f80 <modrm_rm>
   1cfdf:	8b 77 10             	mov    0x10(%edi),%esi
   1cfe2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1cfe6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1cfea:	83 c0 01             	add    $0x1,%eax
   1cfed:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1cff3:	83 c4 10             	add    $0x10,%esp
   1cff6:	01 c5                	add    %eax,%ebp
   1cff8:	c1 ee 03             	shr    $0x3,%esi
   1cffb:	89 6f 04             	mov    %ebp,0x4(%edi)
   1cffe:	01 c6                	add    %eax,%esi
   1d000:	8b 6a 10             	mov    0x10(%edx),%ebp
   1d003:	89 f0                	mov    %esi,%eax
   1d005:	0f b6 c8             	movzbl %al,%ecx
   1d008:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1d00e:	83 fd 08             	cmp    $0x8,%ebp
   1d011:	74 12                	je     1d025 <cmp_i2rm_v+0x85>
   1d013:	83 fd 10             	cmp    $0x10,%ebp
   1d016:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1d01c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1d022:	0f 45 c5             	cmovne %ebp,%eax
   1d025:	83 ec 0c             	sub    $0xc,%esp
   1d028:	52                   	push   %edx
   1d029:	57                   	push   %edi
   1d02a:	51                   	push   %ecx
   1d02b:	50                   	push   %eax
   1d02c:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1d032:	50                   	push   %eax
   1d033:	e8 68 51 ff ff       	call   121a0 <print_asm_2>
   1d038:	83 c4 20             	add    $0x20,%esp
   1d03b:	e8 a0 fa ff ff       	call   1cae0 <instr_execute_2op>
   1d040:	83 c4 1c             	add    $0x1c,%esp
   1d043:	89 f0                	mov    %esi,%eax
   1d045:	5b                   	pop    %ebx
   1d046:	5e                   	pop    %esi
   1d047:	5f                   	pop    %edi
   1d048:	5d                   	pop    %ebp
   1d049:	c3                   	ret    
   1d04a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001d050 <cmp_i2rm_bv>:
   1d050:	55                   	push   %ebp
   1d051:	57                   	push   %edi
   1d052:	56                   	push   %esi
   1d053:	53                   	push   %ebx
   1d054:	e8 27 74 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d059:	81 c3 a7 1f 03 00    	add    $0x31fa7,%ebx
   1d05f:	83 ec 24             	sub    $0x24,%esp
   1d062:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1d066:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1d06c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1d072:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d078:	0f b6 00             	movzbl (%eax),%eax
   1d07b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1d082:	89 42 10             	mov    %eax,0x10(%edx)
   1d085:	8d 45 01             	lea    0x1(%ebp),%eax
   1d088:	52                   	push   %edx
   1d089:	89 54 24 18          	mov    %edx,0x18(%esp)
   1d08d:	50                   	push   %eax
   1d08e:	e8 ed 4e ff ff       	call   11f80 <modrm_rm>
   1d093:	8b 77 10             	mov    0x10(%edi),%esi
   1d096:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1d09a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1d09e:	83 c0 01             	add    $0x1,%eax
   1d0a1:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1d0a7:	83 c4 10             	add    $0x10,%esp
   1d0aa:	01 c5                	add    %eax,%ebp
   1d0ac:	c1 ee 03             	shr    $0x3,%esi
   1d0af:	89 6f 04             	mov    %ebp,0x4(%edi)
   1d0b2:	01 c6                	add    %eax,%esi
   1d0b4:	8b 6a 10             	mov    0x10(%edx),%ebp
   1d0b7:	89 f0                	mov    %esi,%eax
   1d0b9:	0f b6 c8             	movzbl %al,%ecx
   1d0bc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1d0c2:	83 fd 08             	cmp    $0x8,%ebp
   1d0c5:	74 12                	je     1d0d9 <cmp_i2rm_bv+0x89>
   1d0c7:	83 fd 10             	cmp    $0x10,%ebp
   1d0ca:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1d0d0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1d0d6:	0f 45 c5             	cmovne %ebp,%eax
   1d0d9:	83 ec 0c             	sub    $0xc,%esp
   1d0dc:	52                   	push   %edx
   1d0dd:	57                   	push   %edi
   1d0de:	51                   	push   %ecx
   1d0df:	50                   	push   %eax
   1d0e0:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   1d0e6:	50                   	push   %eax
   1d0e7:	e8 b4 50 ff ff       	call   121a0 <print_asm_2>
   1d0ec:	83 c4 20             	add    $0x20,%esp
   1d0ef:	e8 ec f9 ff ff       	call   1cae0 <instr_execute_2op>
   1d0f4:	83 c4 1c             	add    $0x1c,%esp
   1d0f7:	89 f0                	mov    %esi,%eax
   1d0f9:	5b                   	pop    %ebx
   1d0fa:	5e                   	pop    %esi
   1d0fb:	5f                   	pop    %edi
   1d0fc:	5d                   	pop    %ebp
   1d0fd:	c3                   	ret    
   1d0fe:	66 90                	xchg   %ax,%ax

0001d100 <leave>:
   1d100:	57                   	push   %edi
   1d101:	56                   	push   %esi
   1d102:	53                   	push   %ebx
   1d103:	e8 78 73 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d108:	81 c3 f8 1e 03 00    	add    $0x31ef8,%ebx
   1d10e:	83 ec 3c             	sub    $0x3c,%esp
   1d111:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   1d118:	00 
   1d119:	c6 44 24 20 03       	movb   $0x3,0x20(%esp)
   1d11e:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   1d124:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   1d12a:	8b 46 14             	mov    0x14(%esi),%eax
   1d12d:	0f b6 17             	movzbl (%edi),%edx
   1d130:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1d134:	89 46 10             	mov    %eax,0x10(%esi)
   1d137:	8d 44 24 18          	lea    0x18(%esp),%eax
   1d13b:	89 54 24 28          	mov    %edx,0x28(%esp)
   1d13f:	50                   	push   %eax
   1d140:	e8 9b 52 ff ff       	call   123e0 <operand_read>
   1d145:	8b 44 24 28          	mov    0x28(%esp),%eax
   1d149:	89 46 14             	mov    %eax,0x14(%esi)
   1d14c:	0f b6 07             	movzbl (%edi),%eax
   1d14f:	c0 e8 03             	shr    $0x3,%al
   1d152:	0f b6 c0             	movzbl %al,%eax
   1d155:	01 46 10             	add    %eax,0x10(%esi)
   1d158:	83 c4 40             	add    $0x40,%esp
   1d15b:	b8 01 00 00 00       	mov    $0x1,%eax
   1d160:	5b                   	pop    %ebx
   1d161:	5e                   	pop    %esi
   1d162:	5f                   	pop    %edi
   1d163:	c3                   	ret    
   1d164:	66 90                	xchg   %ax,%ax
   1d166:	66 90                	xchg   %ax,%ax
   1d168:	66 90                	xchg   %ax,%ax
   1d16a:	66 90                	xchg   %ax,%ax
   1d16c:	66 90                	xchg   %ax,%ax
   1d16e:	66 90                	xchg   %ax,%ax

0001d170 <x87_fldl>:
   1d170:	57                   	push   %edi
   1d171:	56                   	push   %esi
   1d172:	53                   	push   %ebx
   1d173:	e8 08 73 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d178:	81 c3 88 1e 03 00    	add    $0x31e88,%ebx
   1d17e:	83 ec 18             	sub    $0x18,%esp
   1d181:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1d187:	56                   	push   %esi
   1d188:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1d18c:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   1d193:	83 c0 01             	add    $0x1,%eax
   1d196:	50                   	push   %eax
   1d197:	e8 e4 4d ff ff       	call   11f80 <modrm_rm>
   1d19c:	89 34 24             	mov    %esi,(%esp)
   1d19f:	8d 78 01             	lea    0x1(%eax),%edi
   1d1a2:	e8 39 52 ff ff       	call   123e0 <operand_read>
   1d1a7:	8b 46 0c             	mov    0xc(%esi),%eax
   1d1aa:	89 34 24             	mov    %esi,(%esp)
   1d1ad:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1d1b4:	00 
   1d1b5:	89 44 24 10          	mov    %eax,0x10(%esp)
   1d1b9:	83 46 04 04          	addl   $0x4,0x4(%esi)
   1d1bd:	e8 1e 52 ff ff       	call   123e0 <operand_read>
   1d1c2:	8b 46 0c             	mov    0xc(%esi),%eax
   1d1c5:	89 44 24 14          	mov    %eax,0x14(%esp)
   1d1c9:	89 f8                	mov    %edi,%eax
   1d1cb:	83 c4 0c             	add    $0xc,%esp
   1d1ce:	0f b6 c0             	movzbl %al,%eax
   1d1d1:	50                   	push   %eax
   1d1d2:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d1d8:	50                   	push   %eax
   1d1d9:	8d 83 31 6b fe ff    	lea    -0x194cf(%ebx),%eax
   1d1df:	50                   	push   %eax
   1d1e0:	e8 db 4d ff ff       	call   11fc0 <print_asm_0>
   1d1e5:	dd 44 24 10          	fldl   0x10(%esp)
   1d1e9:	d9 5c 24 1c          	fstps  0x1c(%esp)
   1d1ed:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d1f1:	89 04 24             	mov    %eax,(%esp)
   1d1f4:	e8 97 41 ff ff       	call   11390 <fpu_load>
   1d1f9:	83 c4 20             	add    $0x20,%esp
   1d1fc:	89 f8                	mov    %edi,%eax
   1d1fe:	5b                   	pop    %ebx
   1d1ff:	5e                   	pop    %esi
   1d200:	5f                   	pop    %edi
   1d201:	c3                   	ret    
   1d202:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d209:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001d210 <x87_flds>:
   1d210:	57                   	push   %edi
   1d211:	56                   	push   %esi
   1d212:	53                   	push   %ebx
   1d213:	e8 68 72 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d218:	81 c3 e8 1d 03 00    	add    $0x31de8,%ebx
   1d21e:	83 ec 08             	sub    $0x8,%esp
   1d221:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d227:	57                   	push   %edi
   1d228:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d22c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1d233:	83 c0 01             	add    $0x1,%eax
   1d236:	50                   	push   %eax
   1d237:	e8 44 4d ff ff       	call   11f80 <modrm_rm>
   1d23c:	89 3c 24             	mov    %edi,(%esp)
   1d23f:	8d 70 01             	lea    0x1(%eax),%esi
   1d242:	e8 99 51 ff ff       	call   123e0 <operand_read>
   1d247:	89 f0                	mov    %esi,%eax
   1d249:	83 c4 0c             	add    $0xc,%esp
   1d24c:	0f b6 c0             	movzbl %al,%eax
   1d24f:	50                   	push   %eax
   1d250:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d256:	50                   	push   %eax
   1d257:	8d 83 36 6b fe ff    	lea    -0x194ca(%ebx),%eax
   1d25d:	50                   	push   %eax
   1d25e:	e8 5d 4d ff ff       	call   11fc0 <print_asm_0>
   1d263:	58                   	pop    %eax
   1d264:	ff 77 0c             	pushl  0xc(%edi)
   1d267:	e8 24 41 ff ff       	call   11390 <fpu_load>
   1d26c:	83 c4 10             	add    $0x10,%esp
   1d26f:	89 f0                	mov    %esi,%eax
   1d271:	5b                   	pop    %ebx
   1d272:	5e                   	pop    %esi
   1d273:	5f                   	pop    %edi
   1d274:	c3                   	ret    
   1d275:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d27c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001d280 <x87_fildl>:
   1d280:	57                   	push   %edi
   1d281:	56                   	push   %esi
   1d282:	53                   	push   %ebx
   1d283:	e8 f8 71 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d288:	81 c3 78 1d 03 00    	add    $0x31d78,%ebx
   1d28e:	83 ec 18             	sub    $0x18,%esp
   1d291:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d297:	57                   	push   %edi
   1d298:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1d29c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1d2a3:	83 c0 01             	add    $0x1,%eax
   1d2a6:	50                   	push   %eax
   1d2a7:	e8 d4 4c ff ff       	call   11f80 <modrm_rm>
   1d2ac:	89 3c 24             	mov    %edi,(%esp)
   1d2af:	8d 70 01             	lea    0x1(%eax),%esi
   1d2b2:	e8 29 51 ff ff       	call   123e0 <operand_read>
   1d2b7:	db 47 0c             	fildl  0xc(%edi)
   1d2ba:	58                   	pop    %eax
   1d2bb:	d9 5c 24 18          	fstps  0x18(%esp)
   1d2bf:	ff 74 24 18          	pushl  0x18(%esp)
   1d2c3:	e8 c8 40 ff ff       	call   11390 <fpu_load>
   1d2c8:	89 f0                	mov    %esi,%eax
   1d2ca:	83 c4 0c             	add    $0xc,%esp
   1d2cd:	0f b6 c0             	movzbl %al,%eax
   1d2d0:	50                   	push   %eax
   1d2d1:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d2d7:	50                   	push   %eax
   1d2d8:	8d 83 3b 6b fe ff    	lea    -0x194c5(%ebx),%eax
   1d2de:	50                   	push   %eax
   1d2df:	e8 dc 4c ff ff       	call   11fc0 <print_asm_0>
   1d2e4:	83 c4 20             	add    $0x20,%esp
   1d2e7:	89 f0                	mov    %esi,%eax
   1d2e9:	5b                   	pop    %ebx
   1d2ea:	5e                   	pop    %esi
   1d2eb:	5f                   	pop    %edi
   1d2ec:	c3                   	ret    
   1d2ed:	8d 76 00             	lea    0x0(%esi),%esi

0001d2f0 <x87_fldx>:
   1d2f0:	57                   	push   %edi
   1d2f1:	56                   	push   %esi
   1d2f2:	53                   	push   %ebx
   1d2f3:	8b 44 24 10          	mov    0x10(%esp),%eax
   1d2f7:	e8 84 71 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d2fc:	81 c3 04 1d 03 00    	add    $0x31d04,%ebx
   1d302:	8d 70 01             	lea    0x1(%eax),%esi
   1d305:	83 ec 08             	sub    $0x8,%esp
   1d308:	6a 01                	push   $0x1
   1d30a:	56                   	push   %esi
   1d30b:	e8 90 19 00 00       	call   1eca0 <instr_fetch>
   1d310:	83 c4 10             	add    $0x10,%esp
   1d313:	2d e8 00 00 00       	sub    $0xe8,%eax
   1d318:	83 f8 06             	cmp    $0x6,%eax
   1d31b:	77 53                	ja     1d370 <.L10+0x20>
   1d31d:	8b 8c 83 d8 6b fe ff 	mov    -0x19428(%ebx,%eax,4),%ecx
   1d324:	01 d9                	add    %ebx,%ecx
   1d326:	ff e1                	jmp    *%ecx
   1d328:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d32f:	90                   	nop

0001d330 <.L17>:
   1d330:	83 ec 0c             	sub    $0xc,%esp
   1d333:	be 02 00 00 00       	mov    $0x2,%esi
   1d338:	68 00 00 80 3f       	push   $0x3f800000
   1d33d:	e8 4e 40 ff ff       	call   11390 <fpu_load>
   1d342:	83 c4 10             	add    $0x10,%esp
   1d345:	89 f0                	mov    %esi,%eax
   1d347:	5b                   	pop    %ebx
   1d348:	5e                   	pop    %esi
   1d349:	5f                   	pop    %edi
   1d34a:	c3                   	ret    
   1d34b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d34f:	90                   	nop

0001d350 <.L10>:
   1d350:	83 ec 0c             	sub    $0xc,%esp
   1d353:	be 02 00 00 00       	mov    $0x2,%esi
   1d358:	6a 00                	push   $0x0
   1d35a:	e8 31 40 ff ff       	call   11390 <fpu_load>
   1d35f:	83 c4 10             	add    $0x10,%esp
   1d362:	89 f0                	mov    %esi,%eax
   1d364:	5b                   	pop    %ebx
   1d365:	5e                   	pop    %esi
   1d366:	5f                   	pop    %edi
   1d367:	c3                   	ret    
   1d368:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d36f:	90                   	nop
   1d370:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1d376:	83 ec 08             	sub    $0x8,%esp
   1d379:	57                   	push   %edi
   1d37a:	56                   	push   %esi
   1d37b:	c7 47 10 10 00 00 00 	movl   $0x10,0x10(%edi)
   1d382:	e8 f9 4b ff ff       	call   11f80 <modrm_rm>
   1d387:	89 3c 24             	mov    %edi,(%esp)
   1d38a:	8d 70 01             	lea    0x1(%eax),%esi
   1d38d:	e8 4e 50 ff ff       	call   123e0 <operand_read>
   1d392:	8d 83 20 32 05 00    	lea    0x53220(%ebx),%eax
   1d398:	8b 57 0c             	mov    0xc(%edi),%edx
   1d39b:	83 c4 0c             	add    $0xc,%esp
   1d39e:	66 89 50 24          	mov    %dx,0x24(%eax)
   1d3a2:	89 f0                	mov    %esi,%eax
   1d3a4:	0f b6 c0             	movzbl %al,%eax
   1d3a7:	50                   	push   %eax
   1d3a8:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d3ae:	50                   	push   %eax
   1d3af:	8d 83 55 6b fe ff    	lea    -0x194ab(%ebx),%eax
   1d3b5:	50                   	push   %eax
   1d3b6:	e8 05 4c ff ff       	call   11fc0 <print_asm_0>
   1d3bb:	83 c4 10             	add    $0x10,%esp
   1d3be:	89 f0                	mov    %esi,%eax
   1d3c0:	5b                   	pop    %ebx
   1d3c1:	5e                   	pop    %esi
   1d3c2:	5f                   	pop    %edi
   1d3c3:	c3                   	ret    

0001d3c4 <.L12>:
   1d3c4:	8d 83 f4 6b fe ff    	lea    -0x1940c(%ebx),%eax
   1d3ca:	50                   	push   %eax
   1d3cb:	6a 51                	push   $0x51
   1d3cd:	8d 83 41 6b fe ff    	lea    -0x194bf(%ebx),%eax
   1d3d3:	50                   	push   %eax
   1d3d4:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   1d3da:	50                   	push   %eax
   1d3db:	e8 30 6f fe ff       	call   4310 <__assert_fail@plt>

0001d3e0 <.L13>:
   1d3e0:	8d 83 f4 6b fe ff    	lea    -0x1940c(%ebx),%eax
   1d3e6:	50                   	push   %eax
   1d3e7:	6a 4e                	push   $0x4e
   1d3e9:	eb e2                	jmp    1d3cd <.L12+0x9>

0001d3eb <.L14>:
   1d3eb:	8d 83 f4 6b fe ff    	lea    -0x1940c(%ebx),%eax
   1d3f1:	50                   	push   %eax
   1d3f2:	6a 4b                	push   $0x4b
   1d3f4:	eb d7                	jmp    1d3cd <.L12+0x9>

0001d3f6 <.L15>:
   1d3f6:	8d 83 f4 6b fe ff    	lea    -0x1940c(%ebx),%eax
   1d3fc:	50                   	push   %eax
   1d3fd:	6a 48                	push   $0x48
   1d3ff:	eb cc                	jmp    1d3cd <.L12+0x9>

0001d401 <.L16>:
   1d401:	8d 83 f4 6b fe ff    	lea    -0x1940c(%ebx),%eax
   1d407:	50                   	push   %eax
   1d408:	6a 45                	push   $0x45
   1d40a:	eb c1                	jmp    1d3cd <.L12+0x9>
   1d40c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001d410 <x87_fadds>:
   1d410:	57                   	push   %edi
   1d411:	56                   	push   %esi
   1d412:	53                   	push   %ebx
   1d413:	8b 44 24 10          	mov    0x10(%esp),%eax
   1d417:	e8 64 70 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d41c:	81 c3 e4 1b 03 00    	add    $0x31be4,%ebx
   1d422:	8d 70 01             	lea    0x1(%eax),%esi
   1d425:	83 ec 08             	sub    $0x8,%esp
   1d428:	6a 01                	push   $0x1
   1d42a:	56                   	push   %esi
   1d42b:	e8 70 18 00 00       	call   1eca0 <instr_fetch>
   1d430:	83 c4 10             	add    $0x10,%esp
   1d433:	2d c0 00 00 00       	sub    $0xc0,%eax
   1d438:	83 f8 07             	cmp    $0x7,%eax
   1d43b:	76 53                	jbe    1d490 <x87_fadds+0x80>
   1d43d:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d443:	83 ec 08             	sub    $0x8,%esp
   1d446:	57                   	push   %edi
   1d447:	56                   	push   %esi
   1d448:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1d44f:	e8 2c 4b ff ff       	call   11f80 <modrm_rm>
   1d454:	89 3c 24             	mov    %edi,(%esp)
   1d457:	8d 70 01             	lea    0x1(%eax),%esi
   1d45a:	e8 81 4f ff ff       	call   123e0 <operand_read>
   1d45f:	58                   	pop    %eax
   1d460:	ff 77 0c             	pushl  0xc(%edi)
   1d463:	e8 d8 3f ff ff       	call   11440 <fpu_add>
   1d468:	89 f0                	mov    %esi,%eax
   1d46a:	83 c4 10             	add    $0x10,%esp
   1d46d:	0f b6 c0             	movzbl %al,%eax
   1d470:	83 ec 04             	sub    $0x4,%esp
   1d473:	50                   	push   %eax
   1d474:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d47a:	50                   	push   %eax
   1d47b:	8d 83 5b 6b fe ff    	lea    -0x194a5(%ebx),%eax
   1d481:	50                   	push   %eax
   1d482:	e8 39 4b ff ff       	call   11fc0 <print_asm_0>
   1d487:	83 c4 10             	add    $0x10,%esp
   1d48a:	89 f0                	mov    %esi,%eax
   1d48c:	5b                   	pop    %ebx
   1d48d:	5e                   	pop    %esi
   1d48e:	5f                   	pop    %edi
   1d48f:	c3                   	ret    
   1d490:	83 ec 08             	sub    $0x8,%esp
   1d493:	6a 01                	push   $0x1
   1d495:	56                   	push   %esi
   1d496:	be 02 00 00 00       	mov    $0x2,%esi
   1d49b:	e8 00 18 00 00       	call   1eca0 <instr_fetch>
   1d4a0:	5a                   	pop    %edx
   1d4a1:	59                   	pop    %ecx
   1d4a2:	6a 00                	push   $0x0
   1d4a4:	83 e0 07             	and    $0x7,%eax
   1d4a7:	50                   	push   %eax
   1d4a8:	e8 d3 3f ff ff       	call   11480 <fpu_add_idx>
   1d4ad:	83 c4 10             	add    $0x10,%esp
   1d4b0:	b8 02 00 00 00       	mov    $0x2,%eax
   1d4b5:	eb b9                	jmp    1d470 <x87_fadds+0x60>
   1d4b7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d4be:	66 90                	xchg   %ax,%ax

0001d4c0 <x87_faddx>:
   1d4c0:	57                   	push   %edi
   1d4c1:	56                   	push   %esi
   1d4c2:	53                   	push   %ebx
   1d4c3:	e8 b8 6f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d4c8:	81 c3 38 1b 03 00    	add    $0x31b38,%ebx
   1d4ce:	83 ec 18             	sub    $0x18,%esp
   1d4d1:	8b 44 24 28          	mov    0x28(%esp),%eax
   1d4d5:	6a 01                	push   $0x1
   1d4d7:	8d 70 01             	lea    0x1(%eax),%esi
   1d4da:	56                   	push   %esi
   1d4db:	e8 c0 17 00 00       	call   1eca0 <instr_fetch>
   1d4e0:	83 c4 10             	add    $0x10,%esp
   1d4e3:	2d c0 00 00 00       	sub    $0xc0,%eax
   1d4e8:	83 f8 07             	cmp    $0x7,%eax
   1d4eb:	76 63                	jbe    1d550 <x87_faddx+0x90>
   1d4ed:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d4f3:	83 ec 08             	sub    $0x8,%esp
   1d4f6:	57                   	push   %edi
   1d4f7:	56                   	push   %esi
   1d4f8:	c7 47 10 10 00 00 00 	movl   $0x10,0x10(%edi)
   1d4ff:	e8 7c 4a ff ff       	call   11f80 <modrm_rm>
   1d504:	89 3c 24             	mov    %edi,(%esp)
   1d507:	8d 70 01             	lea    0x1(%eax),%esi
   1d50a:	e8 d1 4e ff ff       	call   123e0 <operand_read>
   1d50f:	db 47 0c             	fildl  0xc(%edi)
   1d512:	58                   	pop    %eax
   1d513:	d9 5c 24 18          	fstps  0x18(%esp)
   1d517:	ff 74 24 18          	pushl  0x18(%esp)
   1d51b:	e8 20 3f ff ff       	call   11440 <fpu_add>
   1d520:	89 f0                	mov    %esi,%eax
   1d522:	83 c4 10             	add    $0x10,%esp
   1d525:	0f b6 c0             	movzbl %al,%eax
   1d528:	83 ec 04             	sub    $0x4,%esp
   1d52b:	50                   	push   %eax
   1d52c:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d532:	50                   	push   %eax
   1d533:	8d 83 61 6b fe ff    	lea    -0x1949f(%ebx),%eax
   1d539:	50                   	push   %eax
   1d53a:	e8 81 4a ff ff       	call   11fc0 <print_asm_0>
   1d53f:	83 c4 20             	add    $0x20,%esp
   1d542:	89 f0                	mov    %esi,%eax
   1d544:	5b                   	pop    %ebx
   1d545:	5e                   	pop    %esi
   1d546:	5f                   	pop    %edi
   1d547:	c3                   	ret    
   1d548:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d54f:	90                   	nop
   1d550:	83 ec 08             	sub    $0x8,%esp
   1d553:	6a 01                	push   $0x1
   1d555:	56                   	push   %esi
   1d556:	be 02 00 00 00       	mov    $0x2,%esi
   1d55b:	e8 40 17 00 00       	call   1eca0 <instr_fetch>
   1d560:	5a                   	pop    %edx
   1d561:	59                   	pop    %ecx
   1d562:	83 e0 07             	and    $0x7,%eax
   1d565:	50                   	push   %eax
   1d566:	50                   	push   %eax
   1d567:	e8 14 3f ff ff       	call   11480 <fpu_add_idx>
   1d56c:	e8 6f 3e ff ff       	call   113e0 <fpu_store>
   1d571:	83 c4 10             	add    $0x10,%esp
   1d574:	b8 02 00 00 00       	mov    $0x2,%eax
   1d579:	eb ad                	jmp    1d528 <x87_faddx+0x68>
   1d57b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d57f:	90                   	nop

0001d580 <x87_faddlx>:
   1d580:	57                   	push   %edi
   1d581:	56                   	push   %esi
   1d582:	53                   	push   %ebx
   1d583:	e8 f8 6e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d588:	81 c3 78 1a 03 00    	add    $0x31a78,%ebx
   1d58e:	83 ec 18             	sub    $0x18,%esp
   1d591:	8b 44 24 28          	mov    0x28(%esp),%eax
   1d595:	6a 01                	push   $0x1
   1d597:	8d 78 01             	lea    0x1(%eax),%edi
   1d59a:	57                   	push   %edi
   1d59b:	e8 00 17 00 00       	call   1eca0 <instr_fetch>
   1d5a0:	83 c4 10             	add    $0x10,%esp
   1d5a3:	2d c0 00 00 00       	sub    $0xc0,%eax
   1d5a8:	83 f8 07             	cmp    $0x7,%eax
   1d5ab:	0f 86 87 00 00 00    	jbe    1d638 <x87_faddlx+0xb8>
   1d5b1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1d5b7:	83 ec 08             	sub    $0x8,%esp
   1d5ba:	56                   	push   %esi
   1d5bb:	57                   	push   %edi
   1d5bc:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   1d5c3:	e8 b8 49 ff ff       	call   11f80 <modrm_rm>
   1d5c8:	89 34 24             	mov    %esi,(%esp)
   1d5cb:	8d 78 01             	lea    0x1(%eax),%edi
   1d5ce:	e8 0d 4e ff ff       	call   123e0 <operand_read>
   1d5d3:	8b 46 0c             	mov    0xc(%esi),%eax
   1d5d6:	89 34 24             	mov    %esi,(%esp)
   1d5d9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1d5e0:	00 
   1d5e1:	89 44 24 10          	mov    %eax,0x10(%esp)
   1d5e5:	83 46 04 04          	addl   $0x4,0x4(%esi)
   1d5e9:	e8 f2 4d ff ff       	call   123e0 <operand_read>
   1d5ee:	8b 46 0c             	mov    0xc(%esi),%eax
   1d5f1:	89 44 24 14          	mov    %eax,0x14(%esp)
   1d5f5:	dd 44 24 10          	fldl   0x10(%esp)
   1d5f9:	d9 5c 24 1c          	fstps  0x1c(%esp)
   1d5fd:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d601:	89 04 24             	mov    %eax,(%esp)
   1d604:	e8 37 3e ff ff       	call   11440 <fpu_add>
   1d609:	89 f8                	mov    %edi,%eax
   1d60b:	83 c4 10             	add    $0x10,%esp
   1d60e:	0f b6 c0             	movzbl %al,%eax
   1d611:	83 ec 04             	sub    $0x4,%esp
   1d614:	50                   	push   %eax
   1d615:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d61b:	50                   	push   %eax
   1d61c:	8d 83 66 6b fe ff    	lea    -0x1949a(%ebx),%eax
   1d622:	50                   	push   %eax
   1d623:	e8 98 49 ff ff       	call   11fc0 <print_asm_0>
   1d628:	83 c4 20             	add    $0x20,%esp
   1d62b:	89 f8                	mov    %edi,%eax
   1d62d:	5b                   	pop    %ebx
   1d62e:	5e                   	pop    %esi
   1d62f:	5f                   	pop    %edi
   1d630:	c3                   	ret    
   1d631:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d638:	83 ec 08             	sub    $0x8,%esp
   1d63b:	6a 01                	push   $0x1
   1d63d:	57                   	push   %edi
   1d63e:	bf 02 00 00 00       	mov    $0x2,%edi
   1d643:	e8 58 16 00 00       	call   1eca0 <instr_fetch>
   1d648:	5a                   	pop    %edx
   1d649:	59                   	pop    %ecx
   1d64a:	83 e0 07             	and    $0x7,%eax
   1d64d:	50                   	push   %eax
   1d64e:	50                   	push   %eax
   1d64f:	e8 2c 3e ff ff       	call   11480 <fpu_add_idx>
   1d654:	83 c4 10             	add    $0x10,%esp
   1d657:	b8 02 00 00 00       	mov    $0x2,%eax
   1d65c:	eb b3                	jmp    1d611 <x87_faddlx+0x91>
   1d65e:	66 90                	xchg   %ax,%ax

0001d660 <x87_fsubs>:
   1d660:	57                   	push   %edi
   1d661:	56                   	push   %esi
   1d662:	53                   	push   %ebx
   1d663:	e8 18 6e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d668:	81 c3 98 19 03 00    	add    $0x31998,%ebx
   1d66e:	83 ec 08             	sub    $0x8,%esp
   1d671:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d677:	57                   	push   %edi
   1d678:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d67c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1d683:	83 c0 01             	add    $0x1,%eax
   1d686:	50                   	push   %eax
   1d687:	e8 f4 48 ff ff       	call   11f80 <modrm_rm>
   1d68c:	89 3c 24             	mov    %edi,(%esp)
   1d68f:	8d 70 01             	lea    0x1(%eax),%esi
   1d692:	e8 49 4d ff ff       	call   123e0 <operand_read>
   1d697:	58                   	pop    %eax
   1d698:	ff 77 0c             	pushl  0xc(%edi)
   1d69b:	e8 30 3e ff ff       	call   114d0 <fpu_sub>
   1d6a0:	89 f0                	mov    %esi,%eax
   1d6a2:	83 c4 0c             	add    $0xc,%esp
   1d6a5:	0f b6 c0             	movzbl %al,%eax
   1d6a8:	50                   	push   %eax
   1d6a9:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d6af:	50                   	push   %eax
   1d6b0:	8d 83 6c 6b fe ff    	lea    -0x19494(%ebx),%eax
   1d6b6:	50                   	push   %eax
   1d6b7:	e8 04 49 ff ff       	call   11fc0 <print_asm_0>
   1d6bc:	83 c4 10             	add    $0x10,%esp
   1d6bf:	89 f0                	mov    %esi,%eax
   1d6c1:	5b                   	pop    %ebx
   1d6c2:	5e                   	pop    %esi
   1d6c3:	5f                   	pop    %edi
   1d6c4:	c3                   	ret    
   1d6c5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d6cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001d6d0 <x87_fmuls>:
   1d6d0:	57                   	push   %edi
   1d6d1:	56                   	push   %esi
   1d6d2:	53                   	push   %ebx
   1d6d3:	e8 a8 6d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d6d8:	81 c3 28 19 03 00    	add    $0x31928,%ebx
   1d6de:	83 ec 08             	sub    $0x8,%esp
   1d6e1:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d6e7:	57                   	push   %edi
   1d6e8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d6ec:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1d6f3:	83 c0 01             	add    $0x1,%eax
   1d6f6:	50                   	push   %eax
   1d6f7:	e8 84 48 ff ff       	call   11f80 <modrm_rm>
   1d6fc:	89 3c 24             	mov    %edi,(%esp)
   1d6ff:	8d 70 01             	lea    0x1(%eax),%esi
   1d702:	e8 d9 4c ff ff       	call   123e0 <operand_read>
   1d707:	58                   	pop    %eax
   1d708:	ff 77 0c             	pushl  0xc(%edi)
   1d70b:	e8 00 3e ff ff       	call   11510 <fpu_mul>
   1d710:	89 f0                	mov    %esi,%eax
   1d712:	83 c4 0c             	add    $0xc,%esp
   1d715:	0f b6 c0             	movzbl %al,%eax
   1d718:	50                   	push   %eax
   1d719:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d71f:	50                   	push   %eax
   1d720:	8d 83 72 6b fe ff    	lea    -0x1948e(%ebx),%eax
   1d726:	50                   	push   %eax
   1d727:	e8 94 48 ff ff       	call   11fc0 <print_asm_0>
   1d72c:	83 c4 10             	add    $0x10,%esp
   1d72f:	89 f0                	mov    %esi,%eax
   1d731:	5b                   	pop    %ebx
   1d732:	5e                   	pop    %esi
   1d733:	5f                   	pop    %edi
   1d734:	c3                   	ret    
   1d735:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d73c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001d740 <x87_fmullx>:
   1d740:	57                   	push   %edi
   1d741:	56                   	push   %esi
   1d742:	53                   	push   %ebx
   1d743:	e8 38 6d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d748:	81 c3 b8 18 03 00    	add    $0x318b8,%ebx
   1d74e:	83 ec 18             	sub    $0x18,%esp
   1d751:	8b 44 24 28          	mov    0x28(%esp),%eax
   1d755:	6a 01                	push   $0x1
   1d757:	8d 78 01             	lea    0x1(%eax),%edi
   1d75a:	57                   	push   %edi
   1d75b:	e8 40 15 00 00       	call   1eca0 <instr_fetch>
   1d760:	83 c4 10             	add    $0x10,%esp
   1d763:	2d c8 00 00 00       	sub    $0xc8,%eax
   1d768:	83 f8 07             	cmp    $0x7,%eax
   1d76b:	0f 86 87 00 00 00    	jbe    1d7f8 <x87_fmullx+0xb8>
   1d771:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   1d777:	83 ec 08             	sub    $0x8,%esp
   1d77a:	56                   	push   %esi
   1d77b:	57                   	push   %edi
   1d77c:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   1d783:	e8 f8 47 ff ff       	call   11f80 <modrm_rm>
   1d788:	89 34 24             	mov    %esi,(%esp)
   1d78b:	8d 78 01             	lea    0x1(%eax),%edi
   1d78e:	e8 4d 4c ff ff       	call   123e0 <operand_read>
   1d793:	8b 46 0c             	mov    0xc(%esi),%eax
   1d796:	89 34 24             	mov    %esi,(%esp)
   1d799:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1d7a0:	00 
   1d7a1:	89 44 24 10          	mov    %eax,0x10(%esp)
   1d7a5:	83 46 04 04          	addl   $0x4,0x4(%esi)
   1d7a9:	e8 32 4c ff ff       	call   123e0 <operand_read>
   1d7ae:	8b 46 0c             	mov    0xc(%esi),%eax
   1d7b1:	89 44 24 14          	mov    %eax,0x14(%esp)
   1d7b5:	dd 44 24 10          	fldl   0x10(%esp)
   1d7b9:	d9 5c 24 1c          	fstps  0x1c(%esp)
   1d7bd:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d7c1:	89 04 24             	mov    %eax,(%esp)
   1d7c4:	e8 47 3d ff ff       	call   11510 <fpu_mul>
   1d7c9:	89 f8                	mov    %edi,%eax
   1d7cb:	83 c4 10             	add    $0x10,%esp
   1d7ce:	0f b6 c0             	movzbl %al,%eax
   1d7d1:	83 ec 04             	sub    $0x4,%esp
   1d7d4:	50                   	push   %eax
   1d7d5:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d7db:	50                   	push   %eax
   1d7dc:	8d 83 78 6b fe ff    	lea    -0x19488(%ebx),%eax
   1d7e2:	50                   	push   %eax
   1d7e3:	e8 d8 47 ff ff       	call   11fc0 <print_asm_0>
   1d7e8:	83 c4 20             	add    $0x20,%esp
   1d7eb:	89 f8                	mov    %edi,%eax
   1d7ed:	5b                   	pop    %ebx
   1d7ee:	5e                   	pop    %esi
   1d7ef:	5f                   	pop    %edi
   1d7f0:	c3                   	ret    
   1d7f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d7f8:	83 ec 08             	sub    $0x8,%esp
   1d7fb:	6a 01                	push   $0x1
   1d7fd:	57                   	push   %edi
   1d7fe:	bf 02 00 00 00       	mov    $0x2,%edi
   1d803:	e8 98 14 00 00       	call   1eca0 <instr_fetch>
   1d808:	5a                   	pop    %edx
   1d809:	59                   	pop    %ecx
   1d80a:	83 e0 07             	and    $0x7,%eax
   1d80d:	50                   	push   %eax
   1d80e:	50                   	push   %eax
   1d80f:	e8 3c 3d ff ff       	call   11550 <fpu_mul_idx>
   1d814:	83 c4 10             	add    $0x10,%esp
   1d817:	b8 02 00 00 00       	mov    $0x2,%eax
   1d81c:	eb b3                	jmp    1d7d1 <x87_fmullx+0x91>
   1d81e:	66 90                	xchg   %ax,%ax

0001d820 <x87_fdivs>:
   1d820:	57                   	push   %edi
   1d821:	56                   	push   %esi
   1d822:	53                   	push   %ebx
   1d823:	e8 58 6c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d828:	81 c3 d8 17 03 00    	add    $0x317d8,%ebx
   1d82e:	83 ec 08             	sub    $0x8,%esp
   1d831:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1d837:	57                   	push   %edi
   1d838:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d83c:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1d843:	83 c0 01             	add    $0x1,%eax
   1d846:	50                   	push   %eax
   1d847:	e8 34 47 ff ff       	call   11f80 <modrm_rm>
   1d84c:	89 3c 24             	mov    %edi,(%esp)
   1d84f:	8d 70 01             	lea    0x1(%eax),%esi
   1d852:	e8 89 4b ff ff       	call   123e0 <operand_read>
   1d857:	58                   	pop    %eax
   1d858:	ff 77 0c             	pushl  0xc(%edi)
   1d85b:	e8 40 3d ff ff       	call   115a0 <fpu_div>
   1d860:	89 f0                	mov    %esi,%eax
   1d862:	83 c4 0c             	add    $0xc,%esp
   1d865:	0f b6 c0             	movzbl %al,%eax
   1d868:	50                   	push   %eax
   1d869:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d86f:	50                   	push   %eax
   1d870:	8d 83 7e 6b fe ff    	lea    -0x19482(%ebx),%eax
   1d876:	50                   	push   %eax
   1d877:	e8 44 47 ff ff       	call   11fc0 <print_asm_0>
   1d87c:	83 c4 10             	add    $0x10,%esp
   1d87f:	89 f0                	mov    %esi,%eax
   1d881:	5b                   	pop    %ebx
   1d882:	5e                   	pop    %esi
   1d883:	5f                   	pop    %edi
   1d884:	c3                   	ret    
   1d885:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d88c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001d890 <x87_fstps>:
   1d890:	57                   	push   %edi
   1d891:	56                   	push   %esi
   1d892:	53                   	push   %ebx
   1d893:	e8 e8 6b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d898:	81 c3 68 17 03 00    	add    $0x31768,%ebx
   1d89e:	83 ec 08             	sub    $0x8,%esp
   1d8a1:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1d8a7:	57                   	push   %edi
   1d8a8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d8ac:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1d8b3:	83 c0 01             	add    $0x1,%eax
   1d8b6:	50                   	push   %eax
   1d8b7:	e8 c4 46 ff ff       	call   11f80 <modrm_rm>
   1d8bc:	8d 70 01             	lea    0x1(%eax),%esi
   1d8bf:	e8 1c 3b ff ff       	call   113e0 <fpu_store>
   1d8c4:	89 3c 24             	mov    %edi,(%esp)
   1d8c7:	89 47 0c             	mov    %eax,0xc(%edi)
   1d8ca:	e8 c1 4c ff ff       	call   12590 <operand_write>
   1d8cf:	89 f0                	mov    %esi,%eax
   1d8d1:	83 c4 0c             	add    $0xc,%esp
   1d8d4:	0f b6 c0             	movzbl %al,%eax
   1d8d7:	50                   	push   %eax
   1d8d8:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d8de:	50                   	push   %eax
   1d8df:	8d 83 84 6b fe ff    	lea    -0x1947c(%ebx),%eax
   1d8e5:	50                   	push   %eax
   1d8e6:	e8 d5 46 ff ff       	call   11fc0 <print_asm_0>
   1d8eb:	83 c4 10             	add    $0x10,%esp
   1d8ee:	89 f0                	mov    %esi,%eax
   1d8f0:	5b                   	pop    %ebx
   1d8f1:	5e                   	pop    %esi
   1d8f2:	5f                   	pop    %edi
   1d8f3:	c3                   	ret    
   1d8f4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d8fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d8ff:	90                   	nop

0001d900 <x87_fxch>:
   1d900:	53                   	push   %ebx
   1d901:	e8 7a 6b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d906:	81 c3 fa 16 03 00    	add    $0x316fa,%ebx
   1d90c:	83 ec 10             	sub    $0x10,%esp
   1d90f:	6a 01                	push   $0x1
   1d911:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1d915:	83 c0 01             	add    $0x1,%eax
   1d918:	50                   	push   %eax
   1d919:	e8 82 13 00 00       	call   1eca0 <instr_fetch>
   1d91e:	83 e0 07             	and    $0x7,%eax
   1d921:	89 04 24             	mov    %eax,(%esp)
   1d924:	e8 b7 3c ff ff       	call   115e0 <fpu_xch>
   1d929:	83 c4 0c             	add    $0xc,%esp
   1d92c:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d932:	6a 02                	push   $0x2
   1d934:	50                   	push   %eax
   1d935:	8d 83 8a 6b fe ff    	lea    -0x19476(%ebx),%eax
   1d93b:	50                   	push   %eax
   1d93c:	e8 7f 46 ff ff       	call   11fc0 <print_asm_0>
   1d941:	83 c4 18             	add    $0x18,%esp
   1d944:	b8 02 00 00 00       	mov    $0x2,%eax
   1d949:	5b                   	pop    %ebx
   1d94a:	c3                   	ret    
   1d94b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d94f:	90                   	nop

0001d950 <x87_fucompp>:
   1d950:	53                   	push   %ebx
   1d951:	e8 2a 6b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d956:	81 c3 aa 16 03 00    	add    $0x316aa,%ebx
   1d95c:	83 ec 14             	sub    $0x14,%esp
   1d95f:	6a 01                	push   $0x1
   1d961:	e8 ea 3c ff ff       	call   11650 <fpu_cmp>
   1d966:	e8 75 3a ff ff       	call   113e0 <fpu_store>
   1d96b:	e8 70 3a ff ff       	call   113e0 <fpu_store>
   1d970:	83 c4 0c             	add    $0xc,%esp
   1d973:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d979:	6a 02                	push   $0x2
   1d97b:	50                   	push   %eax
   1d97c:	8d 83 8f 6b fe ff    	lea    -0x19471(%ebx),%eax
   1d982:	50                   	push   %eax
   1d983:	e8 38 46 ff ff       	call   11fc0 <print_asm_0>
   1d988:	83 c4 18             	add    $0x18,%esp
   1d98b:	b8 02 00 00 00       	mov    $0x2,%eax
   1d990:	5b                   	pop    %ebx
   1d991:	c3                   	ret    
   1d992:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d999:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001d9a0 <x87_fnstsw>:
   1d9a0:	53                   	push   %ebx
   1d9a1:	e8 da 6a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d9a6:	81 c3 5a 16 03 00    	add    $0x3165a,%ebx
   1d9ac:	83 ec 0c             	sub    $0xc,%esp
   1d9af:	8d 93 20 32 05 00    	lea    0x53220(%ebx),%edx
   1d9b5:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1d9bb:	0f b7 52 20          	movzwl 0x20(%edx),%edx
   1d9bf:	66 89 10             	mov    %dx,(%eax)
   1d9c2:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1d9c8:	6a 02                	push   $0x2
   1d9ca:	50                   	push   %eax
   1d9cb:	8d 83 97 6b fe ff    	lea    -0x19469(%ebx),%eax
   1d9d1:	50                   	push   %eax
   1d9d2:	e8 e9 45 ff ff       	call   11fc0 <print_asm_0>
   1d9d7:	83 c4 18             	add    $0x18,%esp
   1d9da:	b8 02 00 00 00       	mov    $0x2,%eax
   1d9df:	5b                   	pop    %ebx
   1d9e0:	c3                   	ret    
   1d9e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d9e8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d9ef:	90                   	nop

0001d9f0 <x87_fstpx>:
   1d9f0:	57                   	push   %edi
   1d9f1:	56                   	push   %esi
   1d9f2:	53                   	push   %ebx
   1d9f3:	e8 88 6a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1d9f8:	81 c3 08 16 03 00    	add    $0x31608,%ebx
   1d9fe:	83 ec 18             	sub    $0x18,%esp
   1da01:	8b 44 24 28          	mov    0x28(%esp),%eax
   1da05:	6a 01                	push   $0x1
   1da07:	8d 78 01             	lea    0x1(%eax),%edi
   1da0a:	57                   	push   %edi
   1da0b:	e8 90 12 00 00       	call   1eca0 <instr_fetch>
   1da10:	83 c4 10             	add    $0x10,%esp
   1da13:	2d d8 00 00 00       	sub    $0xd8,%eax
   1da18:	83 f8 07             	cmp    $0x7,%eax
   1da1b:	76 7b                	jbe    1da98 <x87_fstpx+0xa8>
   1da1d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1da23:	83 ec 08             	sub    $0x8,%esp
   1da26:	56                   	push   %esi
   1da27:	57                   	push   %edi
   1da28:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   1da2f:	e8 4c 45 ff ff       	call   11f80 <modrm_rm>
   1da34:	8d 78 01             	lea    0x1(%eax),%edi
   1da37:	e8 a4 39 ff ff       	call   113e0 <fpu_store>
   1da3c:	89 34 24             	mov    %esi,(%esp)
   1da3f:	89 44 24 18          	mov    %eax,0x18(%esp)
   1da43:	d9 44 24 18          	flds   0x18(%esp)
   1da47:	dd 5c 24 18          	fstpl  0x18(%esp)
   1da4b:	8b 44 24 18          	mov    0x18(%esp),%eax
   1da4f:	89 46 0c             	mov    %eax,0xc(%esi)
   1da52:	e8 39 4b ff ff       	call   12590 <operand_write>
   1da57:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1da5b:	89 34 24             	mov    %esi,(%esp)
   1da5e:	83 46 04 04          	addl   $0x4,0x4(%esi)
   1da62:	89 46 0c             	mov    %eax,0xc(%esi)
   1da65:	e8 26 4b ff ff       	call   12590 <operand_write>
   1da6a:	89 f8                	mov    %edi,%eax
   1da6c:	83 c4 10             	add    $0x10,%esp
   1da6f:	0f b6 c0             	movzbl %al,%eax
   1da72:	83 ec 04             	sub    $0x4,%esp
   1da75:	50                   	push   %eax
   1da76:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1da7c:	50                   	push   %eax
   1da7d:	8d 83 9e 6b fe ff    	lea    -0x19462(%ebx),%eax
   1da83:	50                   	push   %eax
   1da84:	e8 37 45 ff ff       	call   11fc0 <print_asm_0>
   1da89:	83 c4 20             	add    $0x20,%esp
   1da8c:	89 f8                	mov    %edi,%eax
   1da8e:	5b                   	pop    %ebx
   1da8f:	5e                   	pop    %esi
   1da90:	5f                   	pop    %edi
   1da91:	c3                   	ret    
   1da92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1da98:	83 ec 08             	sub    $0x8,%esp
   1da9b:	6a 01                	push   $0x1
   1da9d:	57                   	push   %edi
   1da9e:	bf 02 00 00 00       	mov    $0x2,%edi
   1daa3:	e8 f8 11 00 00       	call   1eca0 <instr_fetch>
   1daa8:	83 e0 07             	and    $0x7,%eax
   1daab:	89 04 24             	mov    %eax,(%esp)
   1daae:	e8 6d 3b ff ff       	call   11620 <fpu_copy>
   1dab3:	e8 28 39 ff ff       	call   113e0 <fpu_store>
   1dab8:	83 c4 10             	add    $0x10,%esp
   1dabb:	b8 02 00 00 00       	mov    $0x2,%eax
   1dac0:	eb b0                	jmp    1da72 <x87_fstpx+0x82>
   1dac2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1dac9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001dad0 <x87_fstx>:
   1dad0:	57                   	push   %edi
   1dad1:	56                   	push   %esi
   1dad2:	53                   	push   %ebx
   1dad3:	e8 a8 69 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1dad8:	81 c3 28 15 03 00    	add    $0x31528,%ebx
   1dade:	83 ec 18             	sub    $0x18,%esp
   1dae1:	8b 44 24 28          	mov    0x28(%esp),%eax
   1dae5:	6a 01                	push   $0x1
   1dae7:	8d 78 01             	lea    0x1(%eax),%edi
   1daea:	57                   	push   %edi
   1daeb:	e8 b0 11 00 00       	call   1eca0 <instr_fetch>
   1daf0:	83 c4 10             	add    $0x10,%esp
   1daf3:	2d d0 00 00 00       	sub    $0xd0,%eax
   1daf8:	83 f8 07             	cmp    $0x7,%eax
   1dafb:	76 7b                	jbe    1db78 <x87_fstx+0xa8>
   1dafd:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1db03:	83 ec 08             	sub    $0x8,%esp
   1db06:	56                   	push   %esi
   1db07:	57                   	push   %edi
   1db08:	c7 46 10 20 00 00 00 	movl   $0x20,0x10(%esi)
   1db0f:	e8 6c 44 ff ff       	call   11f80 <modrm_rm>
   1db14:	8d 78 01             	lea    0x1(%eax),%edi
   1db17:	e8 04 39 ff ff       	call   11420 <fpu_peek>
   1db1c:	89 34 24             	mov    %esi,(%esp)
   1db1f:	89 44 24 18          	mov    %eax,0x18(%esp)
   1db23:	d9 44 24 18          	flds   0x18(%esp)
   1db27:	dd 5c 24 18          	fstpl  0x18(%esp)
   1db2b:	8b 44 24 18          	mov    0x18(%esp),%eax
   1db2f:	89 46 0c             	mov    %eax,0xc(%esi)
   1db32:	e8 59 4a ff ff       	call   12590 <operand_write>
   1db37:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1db3b:	89 34 24             	mov    %esi,(%esp)
   1db3e:	83 46 04 04          	addl   $0x4,0x4(%esi)
   1db42:	89 46 0c             	mov    %eax,0xc(%esi)
   1db45:	e8 46 4a ff ff       	call   12590 <operand_write>
   1db4a:	89 f8                	mov    %edi,%eax
   1db4c:	83 c4 10             	add    $0x10,%esp
   1db4f:	0f b6 c0             	movzbl %al,%eax
   1db52:	83 ec 04             	sub    $0x4,%esp
   1db55:	50                   	push   %eax
   1db56:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1db5c:	50                   	push   %eax
   1db5d:	8d 83 a3 6b fe ff    	lea    -0x1945d(%ebx),%eax
   1db63:	50                   	push   %eax
   1db64:	e8 57 44 ff ff       	call   11fc0 <print_asm_0>
   1db69:	83 c4 20             	add    $0x20,%esp
   1db6c:	89 f8                	mov    %edi,%eax
   1db6e:	5b                   	pop    %ebx
   1db6f:	5e                   	pop    %esi
   1db70:	5f                   	pop    %edi
   1db71:	c3                   	ret    
   1db72:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1db78:	83 ec 08             	sub    $0x8,%esp
   1db7b:	6a 01                	push   $0x1
   1db7d:	57                   	push   %edi
   1db7e:	bf 02 00 00 00       	mov    $0x2,%edi
   1db83:	e8 18 11 00 00       	call   1eca0 <instr_fetch>
   1db88:	83 e0 07             	and    $0x7,%eax
   1db8b:	89 04 24             	mov    %eax,(%esp)
   1db8e:	e8 8d 3a ff ff       	call   11620 <fpu_copy>
   1db93:	83 c4 10             	add    $0x10,%esp
   1db96:	b8 02 00 00 00       	mov    $0x2,%eax
   1db9b:	eb b5                	jmp    1db52 <x87_fstx+0x82>
   1db9d:	8d 76 00             	lea    0x0(%esi),%esi

0001dba0 <x87_fsts>:
   1dba0:	57                   	push   %edi
   1dba1:	56                   	push   %esi
   1dba2:	53                   	push   %ebx
   1dba3:	e8 d8 68 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1dba8:	81 c3 58 14 03 00    	add    $0x31458,%ebx
   1dbae:	83 ec 08             	sub    $0x8,%esp
   1dbb1:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1dbb7:	57                   	push   %edi
   1dbb8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1dbbc:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1dbc3:	83 c0 01             	add    $0x1,%eax
   1dbc6:	50                   	push   %eax
   1dbc7:	e8 b4 43 ff ff       	call   11f80 <modrm_rm>
   1dbcc:	8d 70 01             	lea    0x1(%eax),%esi
   1dbcf:	e8 4c 38 ff ff       	call   11420 <fpu_peek>
   1dbd4:	89 3c 24             	mov    %edi,(%esp)
   1dbd7:	89 47 0c             	mov    %eax,0xc(%edi)
   1dbda:	e8 b1 49 ff ff       	call   12590 <operand_write>
   1dbdf:	89 f0                	mov    %esi,%eax
   1dbe1:	83 c4 0c             	add    $0xc,%esp
   1dbe4:	0f b6 c0             	movzbl %al,%eax
   1dbe7:	50                   	push   %eax
   1dbe8:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1dbee:	50                   	push   %eax
   1dbef:	8d 83 a7 6b fe ff    	lea    -0x19459(%ebx),%eax
   1dbf5:	50                   	push   %eax
   1dbf6:	e8 c5 43 ff ff       	call   11fc0 <print_asm_0>
   1dbfb:	83 c4 10             	add    $0x10,%esp
   1dbfe:	89 f0                	mov    %esi,%eax
   1dc00:	5b                   	pop    %ebx
   1dc01:	5e                   	pop    %esi
   1dc02:	5f                   	pop    %edi
   1dc03:	c3                   	ret    
   1dc04:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1dc0b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1dc0f:	90                   	nop

0001dc10 <x87_fucom>:
   1dc10:	53                   	push   %ebx
   1dc11:	e8 6a 68 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1dc16:	81 c3 ea 13 03 00    	add    $0x313ea,%ebx
   1dc1c:	83 ec 10             	sub    $0x10,%esp
   1dc1f:	6a 01                	push   $0x1
   1dc21:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1dc25:	83 c0 01             	add    $0x1,%eax
   1dc28:	50                   	push   %eax
   1dc29:	e8 72 10 00 00       	call   1eca0 <instr_fetch>
   1dc2e:	83 e0 07             	and    $0x7,%eax
   1dc31:	89 04 24             	mov    %eax,(%esp)
   1dc34:	e8 17 3a ff ff       	call   11650 <fpu_cmp>
   1dc39:	83 c4 0c             	add    $0xc,%esp
   1dc3c:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1dc42:	6a 02                	push   $0x2
   1dc44:	50                   	push   %eax
   1dc45:	8d 83 ac 6b fe ff    	lea    -0x19454(%ebx),%eax
   1dc4b:	50                   	push   %eax
   1dc4c:	e8 6f 43 ff ff       	call   11fc0 <print_asm_0>
   1dc51:	83 c4 18             	add    $0x18,%esp
   1dc54:	b8 02 00 00 00       	mov    $0x2,%eax
   1dc59:	5b                   	pop    %ebx
   1dc5a:	c3                   	ret    
   1dc5b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1dc5f:	90                   	nop

0001dc60 <x87_fucomi>:
   1dc60:	53                   	push   %ebx
   1dc61:	e8 1a 68 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1dc66:	81 c3 9a 13 03 00    	add    $0x3139a,%ebx
   1dc6c:	83 ec 10             	sub    $0x10,%esp
   1dc6f:	6a 01                	push   $0x1
   1dc71:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1dc75:	83 c0 01             	add    $0x1,%eax
   1dc78:	50                   	push   %eax
   1dc79:	e8 22 10 00 00       	call   1eca0 <instr_fetch>
   1dc7e:	83 e0 07             	and    $0x7,%eax
   1dc81:	89 04 24             	mov    %eax,(%esp)
   1dc84:	e8 27 3a ff ff       	call   116b0 <fpu_cmpi>
   1dc89:	83 c4 0c             	add    $0xc,%esp
   1dc8c:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1dc92:	6a 02                	push   $0x2
   1dc94:	50                   	push   %eax
   1dc95:	8d 83 b2 6b fe ff    	lea    -0x1944e(%ebx),%eax
   1dc9b:	50                   	push   %eax
   1dc9c:	e8 1f 43 ff ff       	call   11fc0 <print_asm_0>
   1dca1:	83 c4 18             	add    $0x18,%esp
   1dca4:	b8 02 00 00 00       	mov    $0x2,%eax
   1dca9:	5b                   	pop    %ebx
   1dcaa:	c3                   	ret    
   1dcab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1dcaf:	90                   	nop

0001dcb0 <x87_fucomip>:
   1dcb0:	53                   	push   %ebx
   1dcb1:	e8 ca 67 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1dcb6:	81 c3 4a 13 03 00    	add    $0x3134a,%ebx
   1dcbc:	83 ec 10             	sub    $0x10,%esp
   1dcbf:	6a 01                	push   $0x1
   1dcc1:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1dcc5:	83 c0 01             	add    $0x1,%eax
   1dcc8:	50                   	push   %eax
   1dcc9:	e8 d2 0f 00 00       	call   1eca0 <instr_fetch>
   1dcce:	83 e0 07             	and    $0x7,%eax
   1dcd1:	89 04 24             	mov    %eax,(%esp)
   1dcd4:	e8 d7 39 ff ff       	call   116b0 <fpu_cmpi>
   1dcd9:	e8 02 37 ff ff       	call   113e0 <fpu_store>
   1dcde:	83 c4 0c             	add    $0xc,%esp
   1dce1:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1dce7:	6a 02                	push   $0x2
   1dce9:	50                   	push   %eax
   1dcea:	8d 83 b9 6b fe ff    	lea    -0x19447(%ebx),%eax
   1dcf0:	50                   	push   %eax
   1dcf1:	e8 ca 42 ff ff       	call   11fc0 <print_asm_0>
   1dcf6:	83 c4 18             	add    $0x18,%esp
   1dcf9:	b8 02 00 00 00       	mov    $0x2,%eax
   1dcfe:	5b                   	pop    %ebx
   1dcff:	c3                   	ret    

0001dd00 <x87_fucomp>:
   1dd00:	53                   	push   %ebx
   1dd01:	e8 7a 67 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1dd06:	81 c3 fa 12 03 00    	add    $0x312fa,%ebx
   1dd0c:	83 ec 10             	sub    $0x10,%esp
   1dd0f:	6a 01                	push   $0x1
   1dd11:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1dd15:	83 c0 01             	add    $0x1,%eax
   1dd18:	50                   	push   %eax
   1dd19:	e8 82 0f 00 00       	call   1eca0 <instr_fetch>
   1dd1e:	83 e0 07             	and    $0x7,%eax
   1dd21:	89 04 24             	mov    %eax,(%esp)
   1dd24:	e8 27 39 ff ff       	call   11650 <fpu_cmp>
   1dd29:	e8 b2 36 ff ff       	call   113e0 <fpu_store>
   1dd2e:	83 c4 0c             	add    $0xc,%esp
   1dd31:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1dd37:	6a 02                	push   $0x2
   1dd39:	50                   	push   %eax
   1dd3a:	8d 83 c1 6b fe ff    	lea    -0x1943f(%ebx),%eax
   1dd40:	50                   	push   %eax
   1dd41:	e8 7a 42 ff ff       	call   11fc0 <print_asm_0>
   1dd46:	83 c4 18             	add    $0x18,%esp
   1dd49:	b8 02 00 00 00       	mov    $0x2,%eax
   1dd4e:	5b                   	pop    %ebx
   1dd4f:	c3                   	ret    

0001dd50 <x87_fnstcw>:
   1dd50:	57                   	push   %edi
   1dd51:	56                   	push   %esi
   1dd52:	53                   	push   %ebx
   1dd53:	e8 28 67 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1dd58:	81 c3 a8 12 03 00    	add    $0x312a8,%ebx
   1dd5e:	83 ec 08             	sub    $0x8,%esp
   1dd61:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1dd67:	57                   	push   %edi
   1dd68:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1dd6c:	c7 47 10 10 00 00 00 	movl   $0x10,0x10(%edi)
   1dd73:	83 c0 01             	add    $0x1,%eax
   1dd76:	50                   	push   %eax
   1dd77:	e8 04 42 ff ff       	call   11f80 <modrm_rm>
   1dd7c:	8d 70 01             	lea    0x1(%eax),%esi
   1dd7f:	8d 83 20 32 05 00    	lea    0x53220(%ebx),%eax
   1dd85:	0f b7 40 24          	movzwl 0x24(%eax),%eax
   1dd89:	89 3c 24             	mov    %edi,(%esp)
   1dd8c:	89 47 0c             	mov    %eax,0xc(%edi)
   1dd8f:	e8 fc 47 ff ff       	call   12590 <operand_write>
   1dd94:	89 f0                	mov    %esi,%eax
   1dd96:	83 c4 0c             	add    $0xc,%esp
   1dd99:	0f b6 c0             	movzbl %al,%eax
   1dd9c:	50                   	push   %eax
   1dd9d:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1dda3:	50                   	push   %eax
   1dda4:	8d 83 c8 6b fe ff    	lea    -0x19438(%ebx),%eax
   1ddaa:	50                   	push   %eax
   1ddab:	e8 10 42 ff ff       	call   11fc0 <print_asm_0>
   1ddb0:	83 c4 10             	add    $0x10,%esp
   1ddb3:	89 f0                	mov    %esi,%eax
   1ddb5:	5b                   	pop    %ebx
   1ddb6:	5e                   	pop    %esi
   1ddb7:	5f                   	pop    %edi
   1ddb8:	c3                   	ret    
   1ddb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001ddc0 <x87_fistpl>:
   1ddc0:	57                   	push   %edi
   1ddc1:	56                   	push   %esi
   1ddc2:	53                   	push   %ebx
   1ddc3:	e8 b8 66 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ddc8:	81 c3 38 12 03 00    	add    $0x31238,%ebx
   1ddce:	83 ec 18             	sub    $0x18,%esp
   1ddd1:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   1ddd7:	57                   	push   %edi
   1ddd8:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1dddc:	c7 47 10 20 00 00 00 	movl   $0x20,0x10(%edi)
   1dde3:	83 c0 01             	add    $0x1,%eax
   1dde6:	50                   	push   %eax
   1dde7:	e8 94 41 ff ff       	call   11f80 <modrm_rm>
   1ddec:	8d 70 01             	lea    0x1(%eax),%esi
   1ddef:	e8 ec 35 ff ff       	call   113e0 <fpu_store>
   1ddf4:	89 3c 24             	mov    %edi,(%esp)
   1ddf7:	d9 7c 24 1e          	fnstcw 0x1e(%esp)
   1ddfb:	89 44 24 18          	mov    %eax,0x18(%esp)
   1ddff:	d9 44 24 18          	flds   0x18(%esp)
   1de03:	0f b7 44 24 1e       	movzwl 0x1e(%esp),%eax
   1de08:	80 cc 0c             	or     $0xc,%ah
   1de0b:	66 89 44 24 1c       	mov    %ax,0x1c(%esp)
   1de10:	d9 6c 24 1c          	fldcw  0x1c(%esp)
   1de14:	db 5f 0c             	fistpl 0xc(%edi)
   1de17:	d9 6c 24 1e          	fldcw  0x1e(%esp)
   1de1b:	e8 70 47 ff ff       	call   12590 <operand_write>
   1de20:	89 f0                	mov    %esi,%eax
   1de22:	83 c4 0c             	add    $0xc,%esp
   1de25:	0f b6 c0             	movzbl %al,%eax
   1de28:	50                   	push   %eax
   1de29:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1de2f:	50                   	push   %eax
   1de30:	8d 83 cf 6b fe ff    	lea    -0x19431(%ebx),%eax
   1de36:	50                   	push   %eax
   1de37:	e8 84 41 ff ff       	call   11fc0 <print_asm_0>
   1de3c:	83 c4 20             	add    $0x20,%esp
   1de3f:	89 f0                	mov    %esi,%eax
   1de41:	5b                   	pop    %ebx
   1de42:	5e                   	pop    %esi
   1de43:	5f                   	pop    %edi
   1de44:	c3                   	ret    
   1de45:	66 90                	xchg   %ax,%ax
   1de47:	66 90                	xchg   %ax,%ax
   1de49:	66 90                	xchg   %ax,%ax
   1de4b:	66 90                	xchg   %ax,%ax
   1de4d:	66 90                	xchg   %ax,%ax
   1de4f:	90                   	nop

0001de50 <rep_repe>:
   1de50:	55                   	push   %ebp
   1de51:	57                   	push   %edi
   1de52:	56                   	push   %esi
   1de53:	53                   	push   %ebx
   1de54:	e8 27 66 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1de59:	81 c3 a7 11 03 00    	add    $0x311a7,%ebx
   1de5f:	83 ec 24             	sub    $0x24,%esp
   1de62:	8b 44 24 38          	mov    0x38(%esp),%eax
   1de66:	6a 01                	push   $0x1
   1de68:	8d 70 01             	lea    0x1(%eax),%esi
   1de6b:	56                   	push   %esi
   1de6c:	e8 2f 0e 00 00       	call   1eca0 <instr_fetch>
   1de71:	8d 93 9a 54 fe ff    	lea    -0x1ab66(%ebx),%edx
   1de77:	88 44 24 1f          	mov    %al,0x1f(%esp)
   1de7b:	83 c4 0c             	add    $0xc,%esp
   1de7e:	89 c7                	mov    %eax,%edi
   1de80:	6a 02                	push   $0x2
   1de82:	52                   	push   %edx
   1de83:	8d 93 fd 6b fe ff    	lea    -0x19403(%ebx),%edx
   1de89:	52                   	push   %edx
   1de8a:	e8 31 41 ff ff       	call   11fc0 <print_asm_0>
   1de8f:	89 f8                	mov    %edi,%eax
   1de91:	83 c4 10             	add    $0x10,%esp
   1de94:	3c c3                	cmp    $0xc3,%al
   1de96:	74 58                	je     1def0 <rep_repe+0xa0>
   1de98:	8d ab 60 32 05 00    	lea    0x53260(%ebx),%ebp
   1de9e:	8d 9b e0 18 00 00    	lea    0x18e0(%ebx),%ebx
   1dea4:	0f b6 f8             	movzbl %al,%edi
   1dea7:	8b 55 04             	mov    0x4(%ebp),%edx
   1deaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1deb0:	85 d2                	test   %edx,%edx
   1deb2:	74 26                	je     1deda <rep_repe+0x8a>
   1deb4:	83 ec 08             	sub    $0x8,%esp
   1deb7:	57                   	push   %edi
   1deb8:	56                   	push   %esi
   1deb9:	ff 14 bb             	call   *(%ebx,%edi,4)
   1debc:	8b 45 04             	mov    0x4(%ebp),%eax
   1debf:	8d 50 ff             	lea    -0x1(%eax),%edx
   1dec2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   1dec7:	83 c4 10             	add    $0x10,%esp
   1deca:	89 55 04             	mov    %edx,0x4(%ebp)
   1decd:	83 e0 f6             	and    $0xfffffff6,%eax
   1ded0:	3c a6                	cmp    $0xa6,%al
   1ded2:	75 dc                	jne    1deb0 <rep_repe+0x60>
   1ded4:	f6 45 24 40          	testb  $0x40,0x24(%ebp)
   1ded8:	74 d6                	je     1deb0 <rep_repe+0x60>
   1deda:	83 c4 1c             	add    $0x1c,%esp
   1dedd:	b8 02 00 00 00       	mov    $0x2,%eax
   1dee2:	5b                   	pop    %ebx
   1dee3:	5e                   	pop    %esi
   1dee4:	5f                   	pop    %edi
   1dee5:	5d                   	pop    %ebp
   1dee6:	c3                   	ret    
   1dee7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1deee:	66 90                	xchg   %ax,%ax
   1def0:	83 ec 08             	sub    $0x8,%esp
   1def3:	8d 83 e0 18 00 00    	lea    0x18e0(%ebx),%eax
   1def9:	68 c3 00 00 00       	push   $0xc3
   1defe:	56                   	push   %esi
   1deff:	ff 90 0c 03 00 00    	call   *0x30c(%eax)
   1df05:	31 c0                	xor    %eax,%eax
   1df07:	83 c4 10             	add    $0x10,%esp
   1df0a:	83 c4 1c             	add    $0x1c,%esp
   1df0d:	5b                   	pop    %ebx
   1df0e:	5e                   	pop    %esi
   1df0f:	5f                   	pop    %edi
   1df10:	5d                   	pop    %ebp
   1df11:	c3                   	ret    
   1df12:	66 90                	xchg   %ax,%ax
   1df14:	66 90                	xchg   %ax,%ax
   1df16:	66 90                	xchg   %ax,%ax
   1df18:	66 90                	xchg   %ax,%ax
   1df1a:	66 90                	xchg   %ax,%ax
   1df1c:	66 90                	xchg   %ax,%ax
   1df1e:	66 90                	xchg   %ax,%ax

0001df20 <sign_ext.part.0>:
   1df20:	53                   	push   %ebx
   1df21:	e8 5a 65 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1df26:	81 c3 da 10 03 00    	add    $0x310da,%ebx
   1df2c:	83 ec 08             	sub    $0x8,%esp
   1df2f:	8d 83 04 6c fe ff    	lea    -0x193fc(%ebx),%eax
   1df35:	50                   	push   %eax
   1df36:	8d 83 59 60 fe ff    	lea    -0x19fa7(%ebx),%eax
   1df3c:	6a 2e                	push   $0x2e
   1df3e:	50                   	push   %eax
   1df3f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   1df45:	50                   	push   %eax
   1df46:	e8 c5 63 fe ff       	call   4310 <__assert_fail@plt>
   1df4b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1df4f:	90                   	nop

0001df50 <instr_execute_2op>:
   1df50:	57                   	push   %edi
   1df51:	56                   	push   %esi
   1df52:	53                   	push   %ebx
   1df53:	e8 28 65 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1df58:	81 c3 a8 10 03 00    	add    $0x310a8,%ebx
   1df5e:	83 ec 0c             	sub    $0xc,%esp
   1df61:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1df67:	57                   	push   %edi
   1df68:	e8 73 44 ff ff       	call   123e0 <operand_read>
   1df6d:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1df73:	89 34 24             	mov    %esi,(%esp)
   1df76:	e8 65 44 ff ff       	call   123e0 <operand_read>
   1df7b:	8b 57 10             	mov    0x10(%edi),%edx
   1df7e:	83 c4 10             	add    $0x10,%esp
   1df81:	8b 47 0c             	mov    0xc(%edi),%eax
   1df84:	8d 4a f8             	lea    -0x8(%edx),%ecx
   1df87:	83 e1 f7             	and    $0xfffffff7,%ecx
   1df8a:	74 05                	je     1df91 <instr_execute_2op+0x41>
   1df8c:	83 fa 20             	cmp    $0x20,%edx
   1df8f:	75 6c                	jne    1dffd <instr_execute_2op+0xad>
   1df91:	83 fa 08             	cmp    $0x8,%edx
   1df94:	74 5a                	je     1dff0 <instr_execute_2op+0xa0>
   1df96:	0f bf c8             	movswl %ax,%ecx
   1df99:	83 fa 10             	cmp    $0x10,%edx
   1df9c:	0f 44 c1             	cmove  %ecx,%eax
   1df9f:	8b 4e 10             	mov    0x10(%esi),%ecx
   1dfa2:	8b 56 0c             	mov    0xc(%esi),%edx
   1dfa5:	89 47 0c             	mov    %eax,0xc(%edi)
   1dfa8:	8d 79 f8             	lea    -0x8(%ecx),%edi
   1dfab:	83 e7 f7             	and    $0xfffffff7,%edi
   1dfae:	74 05                	je     1dfb5 <instr_execute_2op+0x65>
   1dfb0:	83 f9 20             	cmp    $0x20,%ecx
   1dfb3:	75 48                	jne    1dffd <instr_execute_2op+0xad>
   1dfb5:	83 f9 08             	cmp    $0x8,%ecx
   1dfb8:	74 3e                	je     1dff8 <instr_execute_2op+0xa8>
   1dfba:	0f bf fa             	movswl %dx,%edi
   1dfbd:	83 f9 10             	cmp    $0x10,%ecx
   1dfc0:	0f 44 d7             	cmove  %edi,%edx
   1dfc3:	8d 8b 84 07 00 00    	lea    0x784(%ebx),%ecx
   1dfc9:	83 ec 04             	sub    $0x4,%esp
   1dfcc:	89 56 0c             	mov    %edx,0xc(%esi)
   1dfcf:	0f b6 09             	movzbl (%ecx),%ecx
   1dfd2:	51                   	push   %ecx
   1dfd3:	52                   	push   %edx
   1dfd4:	50                   	push   %eax
   1dfd5:	e8 86 16 ff ff       	call   f660 <alu_sbb>
   1dfda:	89 34 24             	mov    %esi,(%esp)
   1dfdd:	89 46 0c             	mov    %eax,0xc(%esi)
   1dfe0:	e8 ab 45 ff ff       	call   12590 <operand_write>
   1dfe5:	83 c4 10             	add    $0x10,%esp
   1dfe8:	5b                   	pop    %ebx
   1dfe9:	5e                   	pop    %esi
   1dfea:	5f                   	pop    %edi
   1dfeb:	c3                   	ret    
   1dfec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1dff0:	0f be c0             	movsbl %al,%eax
   1dff3:	eb aa                	jmp    1df9f <instr_execute_2op+0x4f>
   1dff5:	8d 76 00             	lea    0x0(%esi),%esi
   1dff8:	0f be d2             	movsbl %dl,%edx
   1dffb:	eb c6                	jmp    1dfc3 <instr_execute_2op+0x73>
   1dffd:	e8 1e ff ff ff       	call   1df20 <sign_ext.part.0>
   1e002:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001e010 <sbb_r2rm_b>:
   1e010:	55                   	push   %ebp
   1e011:	57                   	push   %edi
   1e012:	56                   	push   %esi
   1e013:	53                   	push   %ebx
   1e014:	e8 67 64 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e019:	81 c3 e7 0f 03 00    	add    $0x30fe7,%ebx
   1e01f:	83 ec 10             	sub    $0x10,%esp
   1e022:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1e028:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1e02e:	56                   	push   %esi
   1e02f:	57                   	push   %edi
   1e030:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1e034:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1e03b:	83 c0 01             	add    $0x1,%eax
   1e03e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1e045:	50                   	push   %eax
   1e046:	e8 55 3e ff ff       	call   11ea0 <modrm_r_rm>
   1e04b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1e04e:	83 c4 10             	add    $0x10,%esp
   1e051:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1e057:	8d 68 01             	lea    0x1(%eax),%ebp
   1e05a:	89 e8                	mov    %ebp,%eax
   1e05c:	0f b6 c0             	movzbl %al,%eax
   1e05f:	83 f9 08             	cmp    $0x8,%ecx
   1e062:	74 12                	je     1e076 <sbb_r2rm_b+0x66>
   1e064:	83 f9 10             	cmp    $0x10,%ecx
   1e067:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1e06d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1e073:	0f 45 d1             	cmovne %ecx,%edx
   1e076:	83 ec 0c             	sub    $0xc,%esp
   1e079:	56                   	push   %esi
   1e07a:	57                   	push   %edi
   1e07b:	50                   	push   %eax
   1e07c:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e082:	52                   	push   %edx
   1e083:	50                   	push   %eax
   1e084:	e8 17 41 ff ff       	call   121a0 <print_asm_2>
   1e089:	83 c4 20             	add    $0x20,%esp
   1e08c:	e8 bf fe ff ff       	call   1df50 <instr_execute_2op>
   1e091:	83 c4 0c             	add    $0xc,%esp
   1e094:	89 e8                	mov    %ebp,%eax
   1e096:	5b                   	pop    %ebx
   1e097:	5e                   	pop    %esi
   1e098:	5f                   	pop    %edi
   1e099:	5d                   	pop    %ebp
   1e09a:	c3                   	ret    
   1e09b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1e09f:	90                   	nop

0001e0a0 <sbb_r2rm_v>:
   1e0a0:	55                   	push   %ebp
   1e0a1:	57                   	push   %edi
   1e0a2:	56                   	push   %esi
   1e0a3:	53                   	push   %ebx
   1e0a4:	e8 d7 63 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e0a9:	81 c3 57 0f 03 00    	add    $0x30f57,%ebx
   1e0af:	83 ec 10             	sub    $0x10,%esp
   1e0b2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1e0b8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1e0be:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1e0c4:	0f b6 00             	movzbl (%eax),%eax
   1e0c7:	56                   	push   %esi
   1e0c8:	57                   	push   %edi
   1e0c9:	89 46 10             	mov    %eax,0x10(%esi)
   1e0cc:	89 47 10             	mov    %eax,0x10(%edi)
   1e0cf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1e0d3:	83 c0 01             	add    $0x1,%eax
   1e0d6:	50                   	push   %eax
   1e0d7:	e8 c4 3d ff ff       	call   11ea0 <modrm_r_rm>
   1e0dc:	8b 4e 10             	mov    0x10(%esi),%ecx
   1e0df:	83 c4 10             	add    $0x10,%esp
   1e0e2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1e0e8:	8d 68 01             	lea    0x1(%eax),%ebp
   1e0eb:	89 e8                	mov    %ebp,%eax
   1e0ed:	0f b6 c0             	movzbl %al,%eax
   1e0f0:	83 f9 08             	cmp    $0x8,%ecx
   1e0f3:	74 12                	je     1e107 <sbb_r2rm_v+0x67>
   1e0f5:	83 f9 10             	cmp    $0x10,%ecx
   1e0f8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1e0fe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1e104:	0f 45 d1             	cmovne %ecx,%edx
   1e107:	83 ec 0c             	sub    $0xc,%esp
   1e10a:	56                   	push   %esi
   1e10b:	57                   	push   %edi
   1e10c:	50                   	push   %eax
   1e10d:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e113:	52                   	push   %edx
   1e114:	50                   	push   %eax
   1e115:	e8 86 40 ff ff       	call   121a0 <print_asm_2>
   1e11a:	83 c4 20             	add    $0x20,%esp
   1e11d:	e8 2e fe ff ff       	call   1df50 <instr_execute_2op>
   1e122:	83 c4 0c             	add    $0xc,%esp
   1e125:	89 e8                	mov    %ebp,%eax
   1e127:	5b                   	pop    %ebx
   1e128:	5e                   	pop    %esi
   1e129:	5f                   	pop    %edi
   1e12a:	5d                   	pop    %ebp
   1e12b:	c3                   	ret    
   1e12c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001e130 <sbb_rm2r_b>:
   1e130:	55                   	push   %ebp
   1e131:	57                   	push   %edi
   1e132:	56                   	push   %esi
   1e133:	53                   	push   %ebx
   1e134:	e8 47 63 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e139:	81 c3 c7 0e 03 00    	add    $0x30ec7,%ebx
   1e13f:	83 ec 10             	sub    $0x10,%esp
   1e142:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1e148:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1e14e:	57                   	push   %edi
   1e14f:	56                   	push   %esi
   1e150:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1e154:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1e15b:	83 c0 01             	add    $0x1,%eax
   1e15e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1e165:	50                   	push   %eax
   1e166:	e8 35 3d ff ff       	call   11ea0 <modrm_r_rm>
   1e16b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1e16e:	83 c4 10             	add    $0x10,%esp
   1e171:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1e177:	8d 68 01             	lea    0x1(%eax),%ebp
   1e17a:	89 e8                	mov    %ebp,%eax
   1e17c:	0f b6 c0             	movzbl %al,%eax
   1e17f:	83 f9 08             	cmp    $0x8,%ecx
   1e182:	74 12                	je     1e196 <sbb_rm2r_b+0x66>
   1e184:	83 f9 10             	cmp    $0x10,%ecx
   1e187:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1e18d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1e193:	0f 45 d1             	cmovne %ecx,%edx
   1e196:	83 ec 0c             	sub    $0xc,%esp
   1e199:	56                   	push   %esi
   1e19a:	57                   	push   %edi
   1e19b:	50                   	push   %eax
   1e19c:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e1a2:	52                   	push   %edx
   1e1a3:	50                   	push   %eax
   1e1a4:	e8 f7 3f ff ff       	call   121a0 <print_asm_2>
   1e1a9:	83 c4 20             	add    $0x20,%esp
   1e1ac:	e8 9f fd ff ff       	call   1df50 <instr_execute_2op>
   1e1b1:	83 c4 0c             	add    $0xc,%esp
   1e1b4:	89 e8                	mov    %ebp,%eax
   1e1b6:	5b                   	pop    %ebx
   1e1b7:	5e                   	pop    %esi
   1e1b8:	5f                   	pop    %edi
   1e1b9:	5d                   	pop    %ebp
   1e1ba:	c3                   	ret    
   1e1bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1e1bf:	90                   	nop

0001e1c0 <sbb_rm2r_v>:
   1e1c0:	55                   	push   %ebp
   1e1c1:	57                   	push   %edi
   1e1c2:	56                   	push   %esi
   1e1c3:	53                   	push   %ebx
   1e1c4:	e8 b7 62 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e1c9:	81 c3 37 0e 03 00    	add    $0x30e37,%ebx
   1e1cf:	83 ec 10             	sub    $0x10,%esp
   1e1d2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1e1d8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1e1de:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1e1e4:	0f b6 00             	movzbl (%eax),%eax
   1e1e7:	57                   	push   %edi
   1e1e8:	89 46 10             	mov    %eax,0x10(%esi)
   1e1eb:	56                   	push   %esi
   1e1ec:	89 47 10             	mov    %eax,0x10(%edi)
   1e1ef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1e1f3:	83 c0 01             	add    $0x1,%eax
   1e1f6:	50                   	push   %eax
   1e1f7:	e8 a4 3c ff ff       	call   11ea0 <modrm_r_rm>
   1e1fc:	8b 4e 10             	mov    0x10(%esi),%ecx
   1e1ff:	83 c4 10             	add    $0x10,%esp
   1e202:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1e208:	8d 68 01             	lea    0x1(%eax),%ebp
   1e20b:	89 e8                	mov    %ebp,%eax
   1e20d:	0f b6 c0             	movzbl %al,%eax
   1e210:	83 f9 08             	cmp    $0x8,%ecx
   1e213:	74 12                	je     1e227 <sbb_rm2r_v+0x67>
   1e215:	83 f9 10             	cmp    $0x10,%ecx
   1e218:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1e21e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1e224:	0f 45 d1             	cmovne %ecx,%edx
   1e227:	83 ec 0c             	sub    $0xc,%esp
   1e22a:	56                   	push   %esi
   1e22b:	57                   	push   %edi
   1e22c:	50                   	push   %eax
   1e22d:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e233:	52                   	push   %edx
   1e234:	50                   	push   %eax
   1e235:	e8 66 3f ff ff       	call   121a0 <print_asm_2>
   1e23a:	83 c4 20             	add    $0x20,%esp
   1e23d:	e8 0e fd ff ff       	call   1df50 <instr_execute_2op>
   1e242:	83 c4 0c             	add    $0xc,%esp
   1e245:	89 e8                	mov    %ebp,%eax
   1e247:	5b                   	pop    %ebx
   1e248:	5e                   	pop    %esi
   1e249:	5f                   	pop    %edi
   1e24a:	5d                   	pop    %ebp
   1e24b:	c3                   	ret    
   1e24c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001e250 <sbb_i2a_b>:
   1e250:	53                   	push   %ebx
   1e251:	e8 2a 62 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e256:	81 c3 aa 0d 03 00    	add    $0x30daa,%ebx
   1e25c:	83 ec 14             	sub    $0x14,%esp
   1e25f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1e263:	83 c1 01             	add    $0x1,%ecx
   1e266:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1e26c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1e272:	89 48 04             	mov    %ecx,0x4(%eax)
   1e275:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1e27c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1e283:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1e289:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1e28d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1e293:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1e29a:	52                   	push   %edx
   1e29b:	50                   	push   %eax
   1e29c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1e2a2:	6a 02                	push   $0x2
   1e2a4:	50                   	push   %eax
   1e2a5:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e2ab:	50                   	push   %eax
   1e2ac:	e8 ef 3e ff ff       	call   121a0 <print_asm_2>
   1e2b1:	83 c4 20             	add    $0x20,%esp
   1e2b4:	e8 97 fc ff ff       	call   1df50 <instr_execute_2op>
   1e2b9:	83 c4 08             	add    $0x8,%esp
   1e2bc:	b8 02 00 00 00       	mov    $0x2,%eax
   1e2c1:	5b                   	pop    %ebx
   1e2c2:	c3                   	ret    
   1e2c3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e2ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001e2d0 <sbb_i2a_v>:
   1e2d0:	55                   	push   %ebp
   1e2d1:	57                   	push   %edi
   1e2d2:	56                   	push   %esi
   1e2d3:	53                   	push   %ebx
   1e2d4:	e8 a7 61 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e2d9:	81 c3 27 0d 03 00    	add    $0x30d27,%ebx
   1e2df:	83 ec 0c             	sub    $0xc,%esp
   1e2e2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1e2e8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1e2ee:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   1e2f4:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1e2fa:	0f b6 08             	movzbl (%eax),%ecx
   1e2fd:	8b 44 24 20          	mov    0x20(%esp),%eax
   1e301:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   1e307:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1e30b:	89 cf                	mov    %ecx,%edi
   1e30d:	83 c0 01             	add    $0x1,%eax
   1e310:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1e313:	c1 ef 03             	shr    $0x3,%edi
   1e316:	89 4a 10             	mov    %ecx,0x10(%edx)
   1e319:	89 42 04             	mov    %eax,0x4(%edx)
   1e31c:	83 c7 01             	add    $0x1,%edi
   1e31f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1e326:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1e32d:	83 f9 08             	cmp    $0x8,%ecx
   1e330:	74 12                	je     1e344 <sbb_i2a_v+0x74>
   1e332:	83 f9 10             	cmp    $0x10,%ecx
   1e335:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1e33b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1e341:	0f 45 f0             	cmovne %eax,%esi
   1e344:	83 ec 0c             	sub    $0xc,%esp
   1e347:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e34d:	55                   	push   %ebp
   1e34e:	52                   	push   %edx
   1e34f:	57                   	push   %edi
   1e350:	56                   	push   %esi
   1e351:	50                   	push   %eax
   1e352:	e8 49 3e ff ff       	call   121a0 <print_asm_2>
   1e357:	83 c4 20             	add    $0x20,%esp
   1e35a:	e8 f1 fb ff ff       	call   1df50 <instr_execute_2op>
   1e35f:	83 c4 0c             	add    $0xc,%esp
   1e362:	89 f8                	mov    %edi,%eax
   1e364:	5b                   	pop    %ebx
   1e365:	5e                   	pop    %esi
   1e366:	5f                   	pop    %edi
   1e367:	5d                   	pop    %ebp
   1e368:	c3                   	ret    
   1e369:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001e370 <sbb_i2rm_b>:
   1e370:	55                   	push   %ebp
   1e371:	57                   	push   %edi
   1e372:	56                   	push   %esi
   1e373:	53                   	push   %ebx
   1e374:	e8 07 61 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e379:	81 c3 87 0c 03 00    	add    $0x30c87,%ebx
   1e37f:	83 ec 24             	sub    $0x24,%esp
   1e382:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1e386:	8d 45 01             	lea    0x1(%ebp),%eax
   1e389:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1e38f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1e395:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1e39c:	52                   	push   %edx
   1e39d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1e3a4:	89 54 24 18          	mov    %edx,0x18(%esp)
   1e3a8:	50                   	push   %eax
   1e3a9:	e8 d2 3b ff ff       	call   11f80 <modrm_rm>
   1e3ae:	8b 77 10             	mov    0x10(%edi),%esi
   1e3b1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1e3b5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1e3b9:	83 c0 01             	add    $0x1,%eax
   1e3bc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1e3c2:	83 c4 10             	add    $0x10,%esp
   1e3c5:	01 c5                	add    %eax,%ebp
   1e3c7:	c1 ee 03             	shr    $0x3,%esi
   1e3ca:	89 6f 04             	mov    %ebp,0x4(%edi)
   1e3cd:	01 c6                	add    %eax,%esi
   1e3cf:	8b 6a 10             	mov    0x10(%edx),%ebp
   1e3d2:	89 f0                	mov    %esi,%eax
   1e3d4:	0f b6 c8             	movzbl %al,%ecx
   1e3d7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1e3dd:	83 fd 08             	cmp    $0x8,%ebp
   1e3e0:	74 12                	je     1e3f4 <sbb_i2rm_b+0x84>
   1e3e2:	83 fd 10             	cmp    $0x10,%ebp
   1e3e5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1e3eb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1e3f1:	0f 45 c5             	cmovne %ebp,%eax
   1e3f4:	83 ec 0c             	sub    $0xc,%esp
   1e3f7:	52                   	push   %edx
   1e3f8:	57                   	push   %edi
   1e3f9:	51                   	push   %ecx
   1e3fa:	50                   	push   %eax
   1e3fb:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e401:	50                   	push   %eax
   1e402:	e8 99 3d ff ff       	call   121a0 <print_asm_2>
   1e407:	83 c4 20             	add    $0x20,%esp
   1e40a:	e8 41 fb ff ff       	call   1df50 <instr_execute_2op>
   1e40f:	83 c4 1c             	add    $0x1c,%esp
   1e412:	89 f0                	mov    %esi,%eax
   1e414:	5b                   	pop    %ebx
   1e415:	5e                   	pop    %esi
   1e416:	5f                   	pop    %edi
   1e417:	5d                   	pop    %ebp
   1e418:	c3                   	ret    
   1e419:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001e420 <sbb_i2rm_v>:
   1e420:	55                   	push   %ebp
   1e421:	57                   	push   %edi
   1e422:	56                   	push   %esi
   1e423:	53                   	push   %ebx
   1e424:	e8 57 60 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e429:	81 c3 d7 0b 03 00    	add    $0x30bd7,%ebx
   1e42f:	83 ec 24             	sub    $0x24,%esp
   1e432:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1e436:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1e43c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1e442:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1e448:	0f b6 00             	movzbl (%eax),%eax
   1e44b:	89 42 10             	mov    %eax,0x10(%edx)
   1e44e:	52                   	push   %edx
   1e44f:	89 47 10             	mov    %eax,0x10(%edi)
   1e452:	8d 45 01             	lea    0x1(%ebp),%eax
   1e455:	89 54 24 18          	mov    %edx,0x18(%esp)
   1e459:	50                   	push   %eax
   1e45a:	e8 21 3b ff ff       	call   11f80 <modrm_rm>
   1e45f:	8b 77 10             	mov    0x10(%edi),%esi
   1e462:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1e466:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1e46a:	83 c0 01             	add    $0x1,%eax
   1e46d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1e473:	83 c4 10             	add    $0x10,%esp
   1e476:	01 c5                	add    %eax,%ebp
   1e478:	c1 ee 03             	shr    $0x3,%esi
   1e47b:	89 6f 04             	mov    %ebp,0x4(%edi)
   1e47e:	01 c6                	add    %eax,%esi
   1e480:	8b 6a 10             	mov    0x10(%edx),%ebp
   1e483:	89 f0                	mov    %esi,%eax
   1e485:	0f b6 c8             	movzbl %al,%ecx
   1e488:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1e48e:	83 fd 08             	cmp    $0x8,%ebp
   1e491:	74 12                	je     1e4a5 <sbb_i2rm_v+0x85>
   1e493:	83 fd 10             	cmp    $0x10,%ebp
   1e496:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1e49c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1e4a2:	0f 45 c5             	cmovne %ebp,%eax
   1e4a5:	83 ec 0c             	sub    $0xc,%esp
   1e4a8:	52                   	push   %edx
   1e4a9:	57                   	push   %edi
   1e4aa:	51                   	push   %ecx
   1e4ab:	50                   	push   %eax
   1e4ac:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e4b2:	50                   	push   %eax
   1e4b3:	e8 e8 3c ff ff       	call   121a0 <print_asm_2>
   1e4b8:	83 c4 20             	add    $0x20,%esp
   1e4bb:	e8 90 fa ff ff       	call   1df50 <instr_execute_2op>
   1e4c0:	83 c4 1c             	add    $0x1c,%esp
   1e4c3:	89 f0                	mov    %esi,%eax
   1e4c5:	5b                   	pop    %ebx
   1e4c6:	5e                   	pop    %esi
   1e4c7:	5f                   	pop    %edi
   1e4c8:	5d                   	pop    %ebp
   1e4c9:	c3                   	ret    
   1e4ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001e4d0 <sbb_i2rm_bv>:
   1e4d0:	55                   	push   %ebp
   1e4d1:	57                   	push   %edi
   1e4d2:	56                   	push   %esi
   1e4d3:	53                   	push   %ebx
   1e4d4:	e8 a7 5f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e4d9:	81 c3 27 0b 03 00    	add    $0x30b27,%ebx
   1e4df:	83 ec 24             	sub    $0x24,%esp
   1e4e2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1e4e6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1e4ec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1e4f2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1e4f8:	0f b6 00             	movzbl (%eax),%eax
   1e4fb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1e502:	89 42 10             	mov    %eax,0x10(%edx)
   1e505:	8d 45 01             	lea    0x1(%ebp),%eax
   1e508:	52                   	push   %edx
   1e509:	89 54 24 18          	mov    %edx,0x18(%esp)
   1e50d:	50                   	push   %eax
   1e50e:	e8 6d 3a ff ff       	call   11f80 <modrm_rm>
   1e513:	8b 77 10             	mov    0x10(%edi),%esi
   1e516:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1e51a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1e51e:	83 c0 01             	add    $0x1,%eax
   1e521:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1e527:	83 c4 10             	add    $0x10,%esp
   1e52a:	01 c5                	add    %eax,%ebp
   1e52c:	c1 ee 03             	shr    $0x3,%esi
   1e52f:	89 6f 04             	mov    %ebp,0x4(%edi)
   1e532:	01 c6                	add    %eax,%esi
   1e534:	8b 6a 10             	mov    0x10(%edx),%ebp
   1e537:	89 f0                	mov    %esi,%eax
   1e539:	0f b6 c8             	movzbl %al,%ecx
   1e53c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1e542:	83 fd 08             	cmp    $0x8,%ebp
   1e545:	74 12                	je     1e559 <sbb_i2rm_bv+0x89>
   1e547:	83 fd 10             	cmp    $0x10,%ebp
   1e54a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1e550:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1e556:	0f 45 c5             	cmovne %ebp,%eax
   1e559:	83 ec 0c             	sub    $0xc,%esp
   1e55c:	52                   	push   %edx
   1e55d:	57                   	push   %edi
   1e55e:	51                   	push   %ecx
   1e55f:	50                   	push   %eax
   1e560:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   1e566:	50                   	push   %eax
   1e567:	e8 34 3c ff ff       	call   121a0 <print_asm_2>
   1e56c:	83 c4 20             	add    $0x20,%esp
   1e56f:	e8 dc f9 ff ff       	call   1df50 <instr_execute_2op>
   1e574:	83 c4 1c             	add    $0x1c,%esp
   1e577:	89 f0                	mov    %esi,%eax
   1e579:	5b                   	pop    %ebx
   1e57a:	5e                   	pop    %esi
   1e57b:	5f                   	pop    %edi
   1e57c:	5d                   	pop    %ebp
   1e57d:	c3                   	ret    
   1e57e:	66 90                	xchg   %ax,%ax

0001e580 <page_walk>:
   1e580:	53                   	push   %ebx
   1e581:	e8 fa 5e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e586:	81 c3 7a 0a 03 00    	add    $0x30a7a,%ebx
   1e58c:	83 ec 10             	sub    $0x10,%esp
   1e58f:	6a 04                	push   $0x4
   1e591:	0f b7 44 24 1e       	movzwl 0x1e(%esp),%eax
   1e596:	66 c1 e8 06          	shr    $0x6,%ax
   1e59a:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1e5a0:	0f b7 c0             	movzwl %ax,%eax
   1e5a3:	8b 92 94 00 00 00    	mov    0x94(%edx),%edx
   1e5a9:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
   1e5af:	8d 04 82             	lea    (%edx,%eax,4),%eax
   1e5b2:	50                   	push   %eax
   1e5b3:	e8 b8 03 00 00       	call   1e970 <paddr_read>
   1e5b8:	83 c4 10             	add    $0x10,%esp
   1e5bb:	a8 01                	test   $0x1,%al
   1e5bd:	74 2b                	je     1e5ea <page_walk+0x6a>
   1e5bf:	83 ec 08             	sub    $0x8,%esp
   1e5c2:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   1e5c7:	6a 04                	push   $0x4
   1e5c9:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1e5cd:	c1 ea 0a             	shr    $0xa,%edx
   1e5d0:	81 e2 fc 0f 00 00    	and    $0xffc,%edx
   1e5d6:	01 c2                	add    %eax,%edx
   1e5d8:	52                   	push   %edx
   1e5d9:	e8 92 03 00 00       	call   1e970 <paddr_read>
   1e5de:	83 c4 10             	add    $0x10,%esp
   1e5e1:	a8 01                	test   $0x1,%al
   1e5e3:	74 21                	je     1e606 <page_walk+0x86>
   1e5e5:	83 c4 08             	add    $0x8,%esp
   1e5e8:	5b                   	pop    %ebx
   1e5e9:	c3                   	ret    
   1e5ea:	8d 83 3c 6c fe ff    	lea    -0x193c4(%ebx),%eax
   1e5f0:	50                   	push   %eax
   1e5f1:	8d 83 0d 6c fe ff    	lea    -0x193f3(%ebx),%eax
   1e5f7:	6a 21                	push   $0x21
   1e5f9:	50                   	push   %eax
   1e5fa:	8d 83 22 6c fe ff    	lea    -0x193de(%ebx),%eax
   1e600:	50                   	push   %eax
   1e601:	e8 0a 5d fe ff       	call   4310 <__assert_fail@plt>
   1e606:	8d 83 3c 6c fe ff    	lea    -0x193c4(%ebx),%eax
   1e60c:	50                   	push   %eax
   1e60d:	8d 83 0d 6c fe ff    	lea    -0x193f3(%ebx),%eax
   1e613:	6a 2a                	push   $0x2a
   1e615:	50                   	push   %eax
   1e616:	8d 83 2e 6c fe ff    	lea    -0x193d2(%ebx),%eax
   1e61c:	50                   	push   %eax
   1e61d:	e8 ee 5c fe ff       	call   4310 <__assert_fail@plt>
   1e622:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001e630 <tlb_query>:
   1e630:	55                   	push   %ebp
   1e631:	57                   	push   %edi
   1e632:	56                   	push   %esi
   1e633:	53                   	push   %ebx
   1e634:	e8 47 5e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e639:	81 c3 c7 09 03 00    	add    $0x309c7,%ebx
   1e63f:	83 ec 0c             	sub    $0xc,%esp
   1e642:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   1e646:	8b 44 24 24          	mov    0x24(%esp),%eax
   1e64a:	8b 74 24 28          	mov    0x28(%esp),%esi
   1e64e:	8b 55 00             	mov    0x0(%ebp),%edx
   1e651:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   1e656:	8b 7d 08             	mov    0x8(%ebp),%edi
   1e659:	83 c8 01             	or     $0x1,%eax
   1e65c:	8d 4a 01             	lea    0x1(%edx),%ecx
   1e65f:	fc                   	cld    
   1e660:	f2 af                	repnz scas %es:(%edi),%eax
   1e662:	29 ca                	sub    %ecx,%edx
   1e664:	b8 01 00 00 00       	mov    $0x1,%eax
   1e669:	89 16                	mov    %edx,(%esi)
   1e66b:	3b 55 00             	cmp    0x0(%ebp),%edx
   1e66e:	7c 18                	jl     1e688 <tlb_query+0x58>
   1e670:	e8 7b 5b fe ff       	call   41f0 <rand@plt>
   1e675:	8b 4d 04             	mov    0x4(%ebp),%ecx
   1e678:	ba 01 00 00 00       	mov    $0x1,%edx
   1e67d:	d3 e2                	shl    %cl,%edx
   1e67f:	83 ea 01             	sub    $0x1,%edx
   1e682:	21 c2                	and    %eax,%edx
   1e684:	31 c0                	xor    %eax,%eax
   1e686:	89 16                	mov    %edx,(%esi)
   1e688:	83 c4 0c             	add    $0xc,%esp
   1e68b:	5b                   	pop    %ebx
   1e68c:	5e                   	pop    %esi
   1e68d:	5f                   	pop    %edi
   1e68e:	5d                   	pop    %ebp
   1e68f:	c3                   	ret    

0001e690 <tlb_read>:
   1e690:	57                   	push   %edi
   1e691:	56                   	push   %esi
   1e692:	53                   	push   %ebx
   1e693:	e8 e8 5d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e698:	81 c3 68 09 03 00    	add    $0x30968,%ebx
   1e69e:	83 ec 14             	sub    $0x14,%esp
   1e6a1:	8b 74 24 24          	mov    0x24(%esp),%esi
   1e6a5:	8d 44 24 10          	lea    0x10(%esp),%eax
   1e6a9:	50                   	push   %eax
   1e6aa:	56                   	push   %esi
   1e6ab:	8d 83 f8 24 05 00    	lea    0x524f8(%ebx),%eax
   1e6b1:	50                   	push   %eax
   1e6b2:	e8 79 ff ff ff       	call   1e630 <tlb_query>
   1e6b7:	83 c4 10             	add    $0x10,%esp
   1e6ba:	84 c0                	test   %al,%al
   1e6bc:	74 22                	je     1e6e0 <tlb_read+0x50>
   1e6be:	8b 54 24 0c          	mov    0xc(%esp),%edx
   1e6c2:	8b 83 04 25 05 00    	mov    0x52504(%ebx),%eax
   1e6c8:	8b 04 90             	mov    (%eax,%edx,4),%eax
   1e6cb:	83 c4 10             	add    $0x10,%esp
   1e6ce:	5b                   	pop    %ebx
   1e6cf:	5e                   	pop    %esi
   1e6d0:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   1e6d5:	5f                   	pop    %edi
   1e6d6:	c3                   	ret    
   1e6d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e6de:	66 90                	xchg   %ax,%ax
   1e6e0:	89 f0                	mov    %esi,%eax
   1e6e2:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
   1e6e6:	8b 93 00 25 05 00    	mov    0x52500(%ebx),%edx
   1e6ec:	83 ec 0c             	sub    $0xc,%esp
   1e6ef:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   1e6f4:	83 c8 01             	or     $0x1,%eax
   1e6f7:	89 04 8a             	mov    %eax,(%edx,%ecx,4)
   1e6fa:	8b 54 24 18          	mov    0x18(%esp),%edx
   1e6fe:	56                   	push   %esi
   1e6ff:	8b 83 04 25 05 00    	mov    0x52504(%ebx),%eax
   1e705:	8d 3c 90             	lea    (%eax,%edx,4),%edi
   1e708:	e8 73 fe ff ff       	call   1e580 <page_walk>
   1e70d:	89 07                	mov    %eax,(%edi)
   1e70f:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1e713:	83 c4 10             	add    $0x10,%esp
   1e716:	eb aa                	jmp    1e6c2 <tlb_read+0x32>
   1e718:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e71f:	90                   	nop

0001e720 <make_all_tlb>:
   1e720:	53                   	push   %ebx
   1e721:	e8 5a 5d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e726:	81 c3 da 08 03 00    	add    $0x308da,%ebx
   1e72c:	83 ec 14             	sub    $0x14,%esp
   1e72f:	68 00 01 00 00       	push   $0x100
   1e734:	c7 83 fc 24 05 00 06 	movl   $0x6,0x524fc(%ebx)
   1e73b:	00 00 00 
   1e73e:	c7 83 f8 24 05 00 40 	movl   $0x40,0x524f8(%ebx)
   1e745:	00 00 00 
   1e748:	e8 53 59 fe ff       	call   40a0 <malloc@plt>
   1e74d:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)
   1e754:	89 83 00 25 05 00    	mov    %eax,0x52500(%ebx)
   1e75a:	e8 41 59 fe ff       	call   40a0 <malloc@plt>
   1e75f:	89 83 04 25 05 00    	mov    %eax,0x52504(%ebx)
   1e765:	83 c4 18             	add    $0x18,%esp
   1e768:	5b                   	pop    %ebx
   1e769:	c3                   	ret    
   1e76a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001e770 <init_all_tlb>:
   1e770:	e8 62 7b fe ff       	call   62d7 <__x86.get_pc_thunk.ax>
   1e775:	05 8b 08 03 00       	add    $0x3088b,%eax
   1e77a:	8b 90 f8 24 05 00    	mov    0x524f8(%eax),%edx
   1e780:	85 d2                	test   %edx,%edx
   1e782:	7e 19                	jle    1e79d <init_all_tlb+0x2d>
   1e784:	8b 80 00 25 05 00    	mov    0x52500(%eax),%eax
   1e78a:	8d 14 90             	lea    (%eax,%edx,4),%edx
   1e78d:	8d 76 00             	lea    0x0(%esi),%esi
   1e790:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1e796:	83 c0 04             	add    $0x4,%eax
   1e799:	39 d0                	cmp    %edx,%eax
   1e79b:	75 f3                	jne    1e790 <init_all_tlb+0x20>
   1e79d:	c3                   	ret    
   1e79e:	66 90                	xchg   %ax,%ax

0001e7a0 <segment_translate>:
   1e7a0:	e8 d0 5d fe ff       	call   4575 <__x86.get_pc_thunk.dx>
   1e7a5:	81 c2 5b 08 03 00    	add    $0x3085b,%edx
   1e7ab:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
   1e7b0:	83 c0 03             	add    $0x3,%eax
   1e7b3:	c1 e0 04             	shl    $0x4,%eax
   1e7b6:	03 82 d4 ff ff ff    	add    -0x2c(%edx),%eax
   1e7bc:	8b 40 04             	mov    0x4(%eax),%eax
   1e7bf:	03 44 24 04          	add    0x4(%esp),%eax
   1e7c3:	c3                   	ret    
   1e7c4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e7cb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1e7cf:	90                   	nop

0001e7d0 <load_sreg>:
   1e7d0:	55                   	push   %ebp
   1e7d1:	57                   	push   %edi
   1e7d2:	56                   	push   %esi
   1e7d3:	53                   	push   %ebx
   1e7d4:	e8 a7 5c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e7d9:	81 c3 27 08 03 00    	add    $0x30827,%ebx
   1e7df:	83 ec 0c             	sub    $0xc,%esp
   1e7e2:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
   1e7e7:	83 c2 03             	add    $0x3,%edx
   1e7ea:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   1e7f0:	c1 e2 04             	shl    $0x4,%edx
   1e7f3:	01 ca                	add    %ecx,%edx
   1e7f5:	8b 49 2c             	mov    0x2c(%ecx),%ecx
   1e7f8:	03 8b d8 ff ff ff    	add    -0x28(%ebx),%ecx
   1e7fe:	0f b7 02             	movzwl (%edx),%eax
   1e801:	25 f8 ff 00 00       	and    $0xfff8,%eax
   1e806:	01 c8                	add    %ecx,%eax
   1e808:	0f b6 78 07          	movzbl 0x7(%eax),%edi
   1e80c:	0f b6 48 06          	movzbl 0x6(%eax),%ecx
   1e810:	0f b7 30             	movzwl (%eax),%esi
   1e813:	c1 e7 18             	shl    $0x18,%edi
   1e816:	83 e1 0f             	and    $0xf,%ecx
   1e819:	89 fd                	mov    %edi,%ebp
   1e81b:	0f b6 78 04          	movzbl 0x4(%eax),%edi
   1e81f:	c1 e1 10             	shl    $0x10,%ecx
   1e822:	01 ce                	add    %ecx,%esi
   1e824:	0f b6 48 05          	movzbl 0x5(%eax),%ecx
   1e828:	c1 e7 10             	shl    $0x10,%edi
   1e82b:	01 ef                	add    %ebp,%edi
   1e82d:	0f b7 68 02          	movzwl 0x2(%eax),%ebp
   1e831:	c0 e9 05             	shr    $0x5,%cl
   1e834:	83 e1 03             	and    $0x3,%ecx
   1e837:	01 ef                	add    %ebp,%edi
   1e839:	75 36                	jne    1e871 <load_sreg+0xa1>
   1e83b:	81 fe ff ff 0f 00    	cmp    $0xfffff,%esi
   1e841:	75 66                	jne    1e8a9 <load_sreg+0xd9>
   1e843:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
   1e847:	79 44                	jns    1e88d <load_sreg+0xbd>
   1e849:	0f b6 42 0c          	movzbl 0xc(%edx),%eax
   1e84d:	83 e1 03             	and    $0x3,%ecx
   1e850:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1e857:	c1 e1 05             	shl    $0x5,%ecx
   1e85a:	c7 42 08 ff ff 0f 00 	movl   $0xfffff,0x8(%edx)
   1e861:	83 e0 9f             	and    $0xffffff9f,%eax
   1e864:	09 c1                	or     %eax,%ecx
   1e866:	88 4a 0c             	mov    %cl,0xc(%edx)
   1e869:	83 c4 0c             	add    $0xc,%esp
   1e86c:	5b                   	pop    %ebx
   1e86d:	5e                   	pop    %esi
   1e86e:	5f                   	pop    %edi
   1e86f:	5d                   	pop    %ebp
   1e870:	c3                   	ret    
   1e871:	8d 83 94 6c fe ff    	lea    -0x1936c(%ebx),%eax
   1e877:	50                   	push   %eax
   1e878:	8d 83 46 6c fe ff    	lea    -0x193ba(%ebx),%eax
   1e87e:	6a 1c                	push   $0x1c
   1e880:	50                   	push   %eax
   1e881:	8d 83 5f 6c fe ff    	lea    -0x193a1(%ebx),%eax
   1e887:	50                   	push   %eax
   1e888:	e8 83 5a fe ff       	call   4310 <__assert_fail@plt>
   1e88d:	8d 83 94 6c fe ff    	lea    -0x1936c(%ebx),%eax
   1e893:	50                   	push   %eax
   1e894:	8d 83 46 6c fe ff    	lea    -0x193ba(%ebx),%eax
   1e89a:	6a 1e                	push   $0x1e
   1e89c:	50                   	push   %eax
   1e89d:	8d 83 7a 6c fe ff    	lea    -0x19386(%ebx),%eax
   1e8a3:	50                   	push   %eax
   1e8a4:	e8 67 5a fe ff       	call   4310 <__assert_fail@plt>
   1e8a9:	8d 83 94 6c fe ff    	lea    -0x1936c(%ebx),%eax
   1e8af:	50                   	push   %eax
   1e8b0:	8d 83 46 6c fe ff    	lea    -0x193ba(%ebx),%eax
   1e8b6:	6a 1d                	push   $0x1d
   1e8b8:	50                   	push   %eax
   1e8b9:	8d 83 69 6c fe ff    	lea    -0x19397(%ebx),%eax
   1e8bf:	50                   	push   %eax
   1e8c0:	e8 4b 5a fe ff       	call   4310 <__assert_fail@plt>
   1e8c5:	66 90                	xchg   %ax,%ax
   1e8c7:	66 90                	xchg   %ax,%ax
   1e8c9:	66 90                	xchg   %ax,%ax
   1e8cb:	66 90                	xchg   %ax,%ax
   1e8cd:	66 90                	xchg   %ax,%ax
   1e8cf:	90                   	nop

0001e8d0 <page_translate>:
   1e8d0:	56                   	push   %esi
   1e8d1:	53                   	push   %ebx
   1e8d2:	e8 a9 5b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e8d7:	81 c3 29 07 03 00    	add    $0x30729,%ebx
   1e8dd:	83 ec 10             	sub    $0x10,%esp
   1e8e0:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   1e8e4:	56                   	push   %esi
   1e8e5:	81 e6 ff 0f 00 00    	and    $0xfff,%esi
   1e8eb:	e8 a0 fd ff ff       	call   1e690 <tlb_read>
   1e8f0:	83 c4 14             	add    $0x14,%esp
   1e8f3:	09 f0                	or     %esi,%eax
   1e8f5:	5b                   	pop    %ebx
   1e8f6:	5e                   	pop    %esi
   1e8f7:	c3                   	ret    
   1e8f8:	66 90                	xchg   %ax,%ax
   1e8fa:	66 90                	xchg   %ax,%ax
   1e8fc:	66 90                	xchg   %ax,%ax
   1e8fe:	66 90                	xchg   %ax,%ax

0001e900 <hw_mem_read>:
   1e900:	53                   	push   %ebx
   1e901:	e8 7a 5b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e906:	81 c3 fa 06 03 00    	add    $0x306fa,%ebx
   1e90c:	83 ec 18             	sub    $0x18,%esp
   1e90f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1e916:	00 
   1e917:	8d 54 24 0c          	lea    0xc(%esp),%edx
   1e91b:	83 ec 04             	sub    $0x4,%esp
   1e91e:	8d 83 60 34 05 00    	lea    0x53460(%ebx),%eax
   1e924:	03 44 24 24          	add    0x24(%esp),%eax
   1e928:	ff 74 24 28          	pushl  0x28(%esp)
   1e92c:	50                   	push   %eax
   1e92d:	52                   	push   %edx
   1e92e:	e8 5d 57 fe ff       	call   4090 <memcpy@plt>
   1e933:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1e937:	83 c4 28             	add    $0x28,%esp
   1e93a:	5b                   	pop    %ebx
   1e93b:	c3                   	ret    
   1e93c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001e940 <hw_mem_write>:
   1e940:	53                   	push   %ebx
   1e941:	e8 3a 5b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e946:	81 c3 ba 06 03 00    	add    $0x306ba,%ebx
   1e94c:	83 ec 08             	sub    $0x8,%esp
   1e94f:	8d 54 24 18          	lea    0x18(%esp),%edx
   1e953:	83 ec 04             	sub    $0x4,%esp
   1e956:	8d 83 60 34 05 00    	lea    0x53460(%ebx),%eax
   1e95c:	03 44 24 14          	add    0x14(%esp),%eax
   1e960:	ff 74 24 18          	pushl  0x18(%esp)
   1e964:	52                   	push   %edx
   1e965:	50                   	push   %eax
   1e966:	e8 25 57 fe ff       	call   4090 <memcpy@plt>
   1e96b:	83 c4 18             	add    $0x18,%esp
   1e96e:	5b                   	pop    %ebx
   1e96f:	c3                   	ret    

0001e970 <paddr_read>:
   1e970:	56                   	push   %esi
   1e971:	53                   	push   %ebx
   1e972:	e8 09 5b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e977:	81 c3 89 06 03 00    	add    $0x30689,%ebx
   1e97d:	83 ec 20             	sub    $0x20,%esp
   1e980:	8b 74 24 2c          	mov    0x2c(%esp),%esi
   1e984:	56                   	push   %esi
   1e985:	e8 d6 85 fe ff       	call   6f60 <is_mmio>
   1e98a:	83 c4 10             	add    $0x10,%esp
   1e98d:	83 f8 ff             	cmp    $0xffffffff,%eax
   1e990:	74 1e                	je     1e9b0 <paddr_read+0x40>
   1e992:	83 ec 04             	sub    $0x4,%esp
   1e995:	50                   	push   %eax
   1e996:	ff 74 24 2c          	pushl  0x2c(%esp)
   1e99a:	56                   	push   %esi
   1e99b:	e8 10 86 fe ff       	call   6fb0 <mmio_read>
   1e9a0:	83 c4 10             	add    $0x10,%esp
   1e9a3:	83 c4 14             	add    $0x14,%esp
   1e9a6:	5b                   	pop    %ebx
   1e9a7:	5e                   	pop    %esi
   1e9a8:	c3                   	ret    
   1e9a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e9b0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1e9b7:	00 
   1e9b8:	03 b3 d8 ff ff ff    	add    -0x28(%ebx),%esi
   1e9be:	8d 44 24 0c          	lea    0xc(%esp),%eax
   1e9c2:	83 ec 04             	sub    $0x4,%esp
   1e9c5:	ff 74 24 28          	pushl  0x28(%esp)
   1e9c9:	56                   	push   %esi
   1e9ca:	50                   	push   %eax
   1e9cb:	e8 c0 56 fe ff       	call   4090 <memcpy@plt>
   1e9d0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1e9d4:	83 c4 10             	add    $0x10,%esp
   1e9d7:	83 c4 14             	add    $0x14,%esp
   1e9da:	5b                   	pop    %ebx
   1e9db:	5e                   	pop    %esi
   1e9dc:	c3                   	ret    
   1e9dd:	8d 76 00             	lea    0x0(%esi),%esi

0001e9e0 <paddr_write>:
   1e9e0:	56                   	push   %esi
   1e9e1:	53                   	push   %ebx
   1e9e2:	e8 99 5a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1e9e7:	81 c3 19 06 03 00    	add    $0x30619,%ebx
   1e9ed:	83 ec 20             	sub    $0x20,%esp
   1e9f0:	8b 74 24 2c          	mov    0x2c(%esp),%esi
   1e9f4:	56                   	push   %esi
   1e9f5:	e8 66 85 fe ff       	call   6f60 <is_mmio>
   1e9fa:	83 c4 10             	add    $0x10,%esp
   1e9fd:	83 f8 ff             	cmp    $0xffffffff,%eax
   1ea00:	74 1e                	je     1ea20 <paddr_write+0x40>
   1ea02:	50                   	push   %eax
   1ea03:	ff 74 24 2c          	pushl  0x2c(%esp)
   1ea07:	ff 74 24 2c          	pushl  0x2c(%esp)
   1ea0b:	56                   	push   %esi
   1ea0c:	e8 3f 86 fe ff       	call   7050 <mmio_write>
   1ea11:	83 c4 10             	add    $0x10,%esp
   1ea14:	83 c4 14             	add    $0x14,%esp
   1ea17:	5b                   	pop    %ebx
   1ea18:	5e                   	pop    %esi
   1ea19:	c3                   	ret    
   1ea1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ea20:	8b 44 24 28          	mov    0x28(%esp),%eax
   1ea24:	03 b3 d8 ff ff ff    	add    -0x28(%ebx),%esi
   1ea2a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1ea2e:	8d 44 24 0c          	lea    0xc(%esp),%eax
   1ea32:	83 ec 04             	sub    $0x4,%esp
   1ea35:	ff 74 24 28          	pushl  0x28(%esp)
   1ea39:	50                   	push   %eax
   1ea3a:	56                   	push   %esi
   1ea3b:	e8 50 56 fe ff       	call   4090 <memcpy@plt>
   1ea40:	83 c4 10             	add    $0x10,%esp
   1ea43:	83 c4 14             	add    $0x14,%esp
   1ea46:	5b                   	pop    %ebx
   1ea47:	5e                   	pop    %esi
   1ea48:	c3                   	ret    
   1ea49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001ea50 <laddr_read>:
   1ea50:	56                   	push   %esi
   1ea51:	53                   	push   %ebx
   1ea52:	e8 29 5a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ea57:	81 c3 a9 05 03 00    	add    $0x305a9,%ebx
   1ea5d:	83 ec 04             	sub    $0x4,%esp
   1ea60:	8b 74 24 14          	mov    0x14(%esp),%esi
   1ea64:	8b 44 24 10          	mov    0x10(%esp),%eax
   1ea68:	8d 56 ff             	lea    -0x1(%esi),%edx
   1ea6b:	83 fa 01             	cmp    $0x1,%edx
   1ea6e:	76 05                	jbe    1ea75 <laddr_read+0x25>
   1ea70:	83 fe 04             	cmp    $0x4,%esi
   1ea73:	75 41                	jne    1eab6 <laddr_read+0x66>
   1ea75:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1ea7b:	8b 92 90 00 00 00    	mov    0x90(%edx),%edx
   1ea81:	81 e2 01 00 00 80    	and    $0x80000001,%edx
   1ea87:	81 fa 01 00 00 80    	cmp    $0x80000001,%edx
   1ea8d:	74 19                	je     1eaa8 <laddr_read+0x58>
   1ea8f:	89 74 24 14          	mov    %esi,0x14(%esp)
   1ea93:	89 44 24 10          	mov    %eax,0x10(%esp)
   1ea97:	83 c4 04             	add    $0x4,%esp
   1ea9a:	5b                   	pop    %ebx
   1ea9b:	5e                   	pop    %esi
   1ea9c:	e9 cf fe ff ff       	jmp    1e970 <paddr_read>
   1eaa1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1eaa8:	83 ec 0c             	sub    $0xc,%esp
   1eaab:	50                   	push   %eax
   1eaac:	e8 1f fe ff ff       	call   1e8d0 <page_translate>
   1eab1:	83 c4 10             	add    $0x10,%esp
   1eab4:	eb d9                	jmp    1ea8f <laddr_read+0x3f>
   1eab6:	8d 83 e4 6c fe ff    	lea    -0x1931c(%ebx),%eax
   1eabc:	50                   	push   %eax
   1eabd:	8d 83 9e 6c fe ff    	lea    -0x19362(%ebx),%eax
   1eac3:	6a 3f                	push   $0x3f
   1eac5:	50                   	push   %eax
   1eac6:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
   1eacc:	50                   	push   %eax
   1eacd:	e8 3e 58 fe ff       	call   4310 <__assert_fail@plt>
   1ead2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ead9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001eae0 <laddr_write>:
   1eae0:	57                   	push   %edi
   1eae1:	56                   	push   %esi
   1eae2:	53                   	push   %ebx
   1eae3:	8b 74 24 14          	mov    0x14(%esp),%esi
   1eae7:	e8 94 59 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1eaec:	81 c3 14 05 03 00    	add    $0x30514,%ebx
   1eaf2:	8b 44 24 10          	mov    0x10(%esp),%eax
   1eaf6:	8b 7c 24 18          	mov    0x18(%esp),%edi
   1eafa:	8d 56 ff             	lea    -0x1(%esi),%edx
   1eafd:	83 fa 01             	cmp    $0x1,%edx
   1eb00:	76 05                	jbe    1eb07 <laddr_write+0x27>
   1eb02:	83 fe 04             	cmp    $0x4,%esi
   1eb05:	75 3f                	jne    1eb46 <laddr_write+0x66>
   1eb07:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1eb0d:	8b 92 90 00 00 00    	mov    0x90(%edx),%edx
   1eb13:	81 e2 01 00 00 80    	and    $0x80000001,%edx
   1eb19:	81 fa 01 00 00 80    	cmp    $0x80000001,%edx
   1eb1f:	74 17                	je     1eb38 <laddr_write+0x58>
   1eb21:	89 7c 24 18          	mov    %edi,0x18(%esp)
   1eb25:	89 74 24 14          	mov    %esi,0x14(%esp)
   1eb29:	89 44 24 10          	mov    %eax,0x10(%esp)
   1eb2d:	5b                   	pop    %ebx
   1eb2e:	5e                   	pop    %esi
   1eb2f:	5f                   	pop    %edi
   1eb30:	e9 ab fe ff ff       	jmp    1e9e0 <paddr_write>
   1eb35:	8d 76 00             	lea    0x0(%esi),%esi
   1eb38:	83 ec 0c             	sub    $0xc,%esp
   1eb3b:	50                   	push   %eax
   1eb3c:	e8 8f fd ff ff       	call   1e8d0 <page_translate>
   1eb41:	83 c4 10             	add    $0x10,%esp
   1eb44:	eb db                	jmp    1eb21 <laddr_write+0x41>
   1eb46:	8d 83 d8 6c fe ff    	lea    -0x19328(%ebx),%eax
   1eb4c:	50                   	push   %eax
   1eb4d:	8d 83 9e 6c fe ff    	lea    -0x19362(%ebx),%eax
   1eb53:	6a 4d                	push   $0x4d
   1eb55:	50                   	push   %eax
   1eb56:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
   1eb5c:	50                   	push   %eax
   1eb5d:	e8 ae 57 fe ff       	call   4310 <__assert_fail@plt>
   1eb62:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1eb69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001eb70 <vaddr_read>:
   1eb70:	56                   	push   %esi
   1eb71:	53                   	push   %ebx
   1eb72:	e8 09 59 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1eb77:	81 c3 89 04 03 00    	add    $0x30489,%ebx
   1eb7d:	83 ec 04             	sub    $0x4,%esp
   1eb80:	8b 74 24 18          	mov    0x18(%esp),%esi
   1eb84:	8b 44 24 10          	mov    0x10(%esp),%eax
   1eb88:	8b 4c 24 14          	mov    0x14(%esp),%ecx
   1eb8c:	8d 56 ff             	lea    -0x1(%esi),%edx
   1eb8f:	83 fa 01             	cmp    $0x1,%edx
   1eb92:	76 05                	jbe    1eb99 <vaddr_read+0x29>
   1eb94:	83 fe 04             	cmp    $0x4,%esi
   1eb97:	75 39                	jne    1ebd2 <vaddr_read+0x62>
   1eb99:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1eb9f:	f6 82 90 00 00 00 01 	testb  $0x1,0x90(%edx)
   1eba6:	75 18                	jne    1ebc0 <vaddr_read+0x50>
   1eba8:	89 74 24 14          	mov    %esi,0x14(%esp)
   1ebac:	89 44 24 10          	mov    %eax,0x10(%esp)
   1ebb0:	83 c4 04             	add    $0x4,%esp
   1ebb3:	5b                   	pop    %ebx
   1ebb4:	5e                   	pop    %esi
   1ebb5:	e9 96 fe ff ff       	jmp    1ea50 <laddr_read>
   1ebba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ebc0:	83 ec 08             	sub    $0x8,%esp
   1ebc3:	0f b6 c9             	movzbl %cl,%ecx
   1ebc6:	51                   	push   %ecx
   1ebc7:	50                   	push   %eax
   1ebc8:	e8 d3 fb ff ff       	call   1e7a0 <segment_translate>
   1ebcd:	83 c4 10             	add    $0x10,%esp
   1ebd0:	eb d6                	jmp    1eba8 <vaddr_read+0x38>
   1ebd2:	8d 83 cc 6c fe ff    	lea    -0x19334(%ebx),%eax
   1ebd8:	50                   	push   %eax
   1ebd9:	8d 83 9e 6c fe ff    	lea    -0x19362(%ebx),%eax
   1ebdf:	6a 5b                	push   $0x5b
   1ebe1:	50                   	push   %eax
   1ebe2:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
   1ebe8:	50                   	push   %eax
   1ebe9:	e8 22 57 fe ff       	call   4310 <__assert_fail@plt>
   1ebee:	66 90                	xchg   %ax,%ax

0001ebf0 <vaddr_write>:
   1ebf0:	57                   	push   %edi
   1ebf1:	56                   	push   %esi
   1ebf2:	53                   	push   %ebx
   1ebf3:	8b 74 24 18          	mov    0x18(%esp),%esi
   1ebf7:	e8 84 58 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ebfc:	81 c3 04 04 03 00    	add    $0x30404,%ebx
   1ec02:	8b 44 24 10          	mov    0x10(%esp),%eax
   1ec06:	8b 4c 24 14          	mov    0x14(%esp),%ecx
   1ec0a:	8d 56 ff             	lea    -0x1(%esi),%edx
   1ec0d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   1ec11:	83 fa 01             	cmp    $0x1,%edx
   1ec14:	76 05                	jbe    1ec1b <vaddr_write+0x2b>
   1ec16:	83 fe 04             	cmp    $0x4,%esi
   1ec19:	75 37                	jne    1ec52 <vaddr_write+0x62>
   1ec1b:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   1ec21:	f6 82 90 00 00 00 01 	testb  $0x1,0x90(%edx)
   1ec28:	75 16                	jne    1ec40 <vaddr_write+0x50>
   1ec2a:	89 7c 24 18          	mov    %edi,0x18(%esp)
   1ec2e:	89 74 24 14          	mov    %esi,0x14(%esp)
   1ec32:	89 44 24 10          	mov    %eax,0x10(%esp)
   1ec36:	5b                   	pop    %ebx
   1ec37:	5e                   	pop    %esi
   1ec38:	5f                   	pop    %edi
   1ec39:	e9 a2 fe ff ff       	jmp    1eae0 <laddr_write>
   1ec3e:	66 90                	xchg   %ax,%ax
   1ec40:	83 ec 08             	sub    $0x8,%esp
   1ec43:	0f b6 c9             	movzbl %cl,%ecx
   1ec46:	51                   	push   %ecx
   1ec47:	50                   	push   %eax
   1ec48:	e8 53 fb ff ff       	call   1e7a0 <segment_translate>
   1ec4d:	83 c4 10             	add    $0x10,%esp
   1ec50:	eb d8                	jmp    1ec2a <vaddr_write+0x3a>
   1ec52:	8d 83 c0 6c fe ff    	lea    -0x19340(%ebx),%eax
   1ec58:	50                   	push   %eax
   1ec59:	8d 83 9e 6c fe ff    	lea    -0x19362(%ebx),%eax
   1ec5f:	6a 6a                	push   $0x6a
   1ec61:	50                   	push   %eax
   1ec62:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
   1ec68:	50                   	push   %eax
   1ec69:	e8 a2 56 fe ff       	call   4310 <__assert_fail@plt>
   1ec6e:	66 90                	xchg   %ax,%ax

0001ec70 <init_mem>:
   1ec70:	53                   	push   %ebx
   1ec71:	e8 0a 58 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ec76:	81 c3 8a 03 03 00    	add    $0x3038a,%ebx
   1ec7c:	83 ec 0c             	sub    $0xc,%esp
   1ec7f:	68 00 00 00 08       	push   $0x8000000
   1ec84:	6a 00                	push   $0x0
   1ec86:	ff b3 d8 ff ff ff    	pushl  -0x28(%ebx)
   1ec8c:	e8 2f 56 fe ff       	call   42c0 <memset@plt>
   1ec91:	e8 8a fa ff ff       	call   1e720 <make_all_tlb>
   1ec96:	e8 d5 fa ff ff       	call   1e770 <init_all_tlb>
   1ec9b:	83 c4 18             	add    $0x18,%esp
   1ec9e:	5b                   	pop    %ebx
   1ec9f:	c3                   	ret    

0001eca0 <instr_fetch>:
   1eca0:	53                   	push   %ebx
   1eca1:	e8 da 57 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1eca6:	81 c3 5a 03 03 00    	add    $0x3035a,%ebx
   1ecac:	83 ec 08             	sub    $0x8,%esp
   1ecaf:	8b 44 24 14          	mov    0x14(%esp),%eax
   1ecb3:	8d 50 ff             	lea    -0x1(%eax),%edx
   1ecb6:	83 fa 01             	cmp    $0x1,%edx
   1ecb9:	76 05                	jbe    1ecc0 <instr_fetch+0x20>
   1ecbb:	83 f8 04             	cmp    $0x4,%eax
   1ecbe:	75 14                	jne    1ecd4 <instr_fetch+0x34>
   1ecc0:	83 ec 04             	sub    $0x4,%esp
   1ecc3:	50                   	push   %eax
   1ecc4:	6a 01                	push   $0x1
   1ecc6:	ff 74 24 1c          	pushl  0x1c(%esp)
   1ecca:	e8 a1 fe ff ff       	call   1eb70 <vaddr_read>
   1eccf:	83 c4 18             	add    $0x18,%esp
   1ecd2:	5b                   	pop    %ebx
   1ecd3:	c3                   	ret    
   1ecd4:	8d 83 b4 6c fe ff    	lea    -0x1934c(%ebx),%eax
   1ecda:	50                   	push   %eax
   1ecdb:	8d 83 9e 6c fe ff    	lea    -0x19362(%ebx),%eax
   1ece1:	68 84 00 00 00       	push   $0x84
   1ece6:	50                   	push   %eax
   1ece7:	8d 83 3c 5b fe ff    	lea    -0x1a4c4(%ebx),%eax
   1eced:	50                   	push   %eax
   1ecee:	e8 1d 56 fe ff       	call   4310 <__assert_fail@plt>
   1ecf3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ecfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001ed00 <get_mem_addr>:
   1ed00:	e8 d2 75 fe ff       	call   62d7 <__x86.get_pc_thunk.ax>
   1ed05:	05 fb 02 03 00       	add    $0x302fb,%eax
   1ed0a:	8d 80 60 34 05 00    	lea    0x53460(%eax),%eax
   1ed10:	c3                   	ret    
   1ed11:	66 90                	xchg   %ax,%ax
   1ed13:	66 90                	xchg   %ax,%ax
   1ed15:	66 90                	xchg   %ax,%ax
   1ed17:	66 90                	xchg   %ax,%ax
   1ed19:	66 90                	xchg   %ax,%ax
   1ed1b:	66 90                	xchg   %ax,%ax
   1ed1d:	66 90                	xchg   %ax,%ax
   1ed1f:	90                   	nop

0001ed20 <init_cache>:
   1ed20:	e8 b2 75 fe ff       	call   62d7 <__x86.get_pc_thunk.ax>
   1ed25:	05 db 02 03 00       	add    $0x302db,%eax
   1ed2a:	8d 80 60 34 05 08    	lea    0x8053460(%eax),%eax
   1ed30:	8d 90 00 20 01 00    	lea    0x12000(%eax),%edx
   1ed36:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ed3d:	8d 76 00             	lea    0x0(%esi),%esi
   1ed40:	c6 00 00             	movb   $0x0,(%eax)
   1ed43:	83 c0 48             	add    $0x48,%eax
   1ed46:	39 d0                	cmp    %edx,%eax
   1ed48:	75 f6                	jne    1ed40 <init_cache+0x20>
   1ed4a:	c3                   	ret    
   1ed4b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ed4f:	90                   	nop

0001ed50 <cache_read>:
   1ed50:	55                   	push   %ebp
   1ed51:	57                   	push   %edi
   1ed52:	56                   	push   %esi
   1ed53:	53                   	push   %ebx
   1ed54:	e8 27 57 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ed59:	81 c3 a7 02 03 00    	add    $0x302a7,%ebx
   1ed5f:	83 ec 2c             	sub    $0x2c,%esp
   1ed62:	8b 44 24 40          	mov    0x40(%esp),%eax
   1ed66:	8b 54 24 40          	mov    0x40(%esp),%edx
   1ed6a:	8b 74 24 40          	mov    0x40(%esp),%esi
   1ed6e:	8b 6c 24 48          	mov    0x48(%esp),%ebp
   1ed72:	c1 e8 06             	shr    $0x6,%eax
   1ed75:	83 e2 3f             	and    $0x3f,%edx
   1ed78:	8b 7c 24 48          	mov    0x48(%esp),%edi
   1ed7c:	83 e0 7f             	and    $0x7f,%eax
   1ed7f:	89 54 24 04          	mov    %edx,0x4(%esp)
   1ed83:	c1 ee 0d             	shr    $0xd,%esi
   1ed86:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
   1ed8d:	81 e6 ff 4f 00 00    	and    $0x4fff,%esi
   1ed93:	01 d0                	add    %edx,%eax
   1ed95:	c1 e0 06             	shl    $0x6,%eax
   1ed98:	01 c5                	add    %eax,%ebp
   1ed9a:	8d bc 07 40 02 00 00 	lea    0x240(%edi,%eax,1),%edi
   1eda1:	89 e8                	mov    %ebp,%eax
   1eda3:	eb 0a                	jmp    1edaf <cache_read+0x5f>
   1eda5:	8d 76 00             	lea    0x0(%esi),%esi
   1eda8:	83 c0 48             	add    $0x48,%eax
   1edab:	39 f8                	cmp    %edi,%eax
   1edad:	74 51                	je     1ee00 <cache_read+0xb0>
   1edaf:	8b 48 04             	mov    0x4(%eax),%ecx
   1edb2:	81 e1 ff ff ff 07    	and    $0x7ffffff,%ecx
   1edb8:	39 ce                	cmp    %ecx,%esi
   1edba:	75 ec                	jne    1eda8 <cache_read+0x58>
   1edbc:	80 38 01             	cmpb   $0x1,(%eax)
   1edbf:	75 e7                	jne    1eda8 <cache_read+0x58>
   1edc1:	8b 7c 24 04          	mov    0x4(%esp),%edi
   1edc5:	8d 54 38 08          	lea    0x8(%eax,%edi,1),%edx
   1edc9:	8b 44 24 44          	mov    0x44(%esp),%eax
   1edcd:	01 f8                	add    %edi,%eax
   1edcf:	83 f8 40             	cmp    $0x40,%eax
   1edd2:	0f 87 26 01 00 00    	ja     1eefe <cache_read+0x1ae>
   1edd8:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   1eddc:	83 ec 04             	sub    $0x4,%esp
   1eddf:	ff 74 24 48          	pushl  0x48(%esp)
   1ede3:	52                   	push   %edx
   1ede4:	50                   	push   %eax
   1ede5:	e8 a6 52 fe ff       	call   4090 <memcpy@plt>
   1edea:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1edee:	83 c4 10             	add    $0x10,%esp
   1edf1:	e9 00 01 00 00       	jmp    1eef6 <cache_read+0x1a6>
   1edf6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1edfd:	8d 76 00             	lea    0x0(%esi),%esi
   1ee00:	89 54 24 0c          	mov    %edx,0xc(%esp)
   1ee04:	8b 4c 24 40          	mov    0x40(%esp),%ecx
   1ee08:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   1ee0c:	83 ec 04             	sub    $0x4,%esp
   1ee0f:	8d 93 60 34 05 00    	lea    0x53460(%ebx),%edx
   1ee15:	89 54 24 0c          	mov    %edx,0xc(%esp)
   1ee19:	01 d1                	add    %edx,%ecx
   1ee1b:	ff 74 24 48          	pushl  0x48(%esp)
   1ee1f:	51                   	push   %ecx
   1ee20:	50                   	push   %eax
   1ee21:	e8 6a 52 fe ff       	call   4090 <memcpy@plt>
   1ee26:	83 c4 10             	add    $0x10,%esp
   1ee29:	8b 54 24 0c          	mov    0xc(%esp),%edx
   1ee2d:	8d 76 00             	lea    0x0(%esi),%esi
   1ee30:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   1ee34:	0f 84 0d 01 00 00    	je     1ef47 <cache_read+0x1f7>
   1ee3a:	83 c5 48             	add    $0x48,%ebp
   1ee3d:	39 fd                	cmp    %edi,%ebp
   1ee3f:	75 ef                	jne    1ee30 <cache_read+0xe0>
   1ee41:	89 54 24 0c          	mov    %edx,0xc(%esp)
   1ee45:	83 ec 0c             	sub    $0xc,%esp
   1ee48:	6a 00                	push   $0x0
   1ee4a:	e8 e1 52 fe ff       	call   4130 <time@plt>
   1ee4f:	89 04 24             	mov    %eax,(%esp)
   1ee52:	e8 39 53 fe ff       	call   4190 <srand@plt>
   1ee57:	e8 94 53 fe ff       	call   41f0 <rand@plt>
   1ee5c:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1ee60:	8b 5c 24 58          	mov    0x58(%esp),%ebx
   1ee64:	89 c1                	mov    %eax,%ecx
   1ee66:	c1 f9 1f             	sar    $0x1f,%ecx
   1ee69:	c1 e9 1d             	shr    $0x1d,%ecx
   1ee6c:	01 c8                	add    %ecx,%eax
   1ee6e:	83 e0 07             	and    $0x7,%eax
   1ee71:	29 c8                	sub    %ecx,%eax
   1ee73:	01 c2                	add    %eax,%edx
   1ee75:	8d 04 d2             	lea    (%edx,%edx,8),%eax
   1ee78:	8d 0c c3             	lea    (%ebx,%eax,8),%ecx
   1ee7b:	8b 44 24 50          	mov    0x50(%esp),%eax
   1ee7f:	2b 44 24 14          	sub    0x14(%esp),%eax
   1ee83:	03 44 24 18          	add    0x18(%esp),%eax
   1ee87:	c6 01 01             	movb   $0x1,(%ecx)
   1ee8a:	8d 51 08             	lea    0x8(%ecx),%edx
   1ee8d:	89 71 04             	mov    %esi,0x4(%ecx)
   1ee90:	8b 18                	mov    (%eax),%ebx
   1ee92:	89 59 08             	mov    %ebx,0x8(%ecx)
   1ee95:	8b 48 04             	mov    0x4(%eax),%ecx
   1ee98:	89 4a 04             	mov    %ecx,0x4(%edx)
   1ee9b:	8b 48 08             	mov    0x8(%eax),%ecx
   1ee9e:	89 4a 08             	mov    %ecx,0x8(%edx)
   1eea1:	8b 48 0c             	mov    0xc(%eax),%ecx
   1eea4:	89 4a 0c             	mov    %ecx,0xc(%edx)
   1eea7:	8b 48 10             	mov    0x10(%eax),%ecx
   1eeaa:	89 4a 10             	mov    %ecx,0x10(%edx)
   1eead:	8b 48 14             	mov    0x14(%eax),%ecx
   1eeb0:	89 4a 14             	mov    %ecx,0x14(%edx)
   1eeb3:	8b 48 18             	mov    0x18(%eax),%ecx
   1eeb6:	89 4a 18             	mov    %ecx,0x18(%edx)
   1eeb9:	8b 48 1c             	mov    0x1c(%eax),%ecx
   1eebc:	89 4a 1c             	mov    %ecx,0x1c(%edx)
   1eebf:	8b 48 20             	mov    0x20(%eax),%ecx
   1eec2:	89 4a 20             	mov    %ecx,0x20(%edx)
   1eec5:	8b 48 24             	mov    0x24(%eax),%ecx
   1eec8:	89 4a 24             	mov    %ecx,0x24(%edx)
   1eecb:	8b 48 28             	mov    0x28(%eax),%ecx
   1eece:	89 4a 28             	mov    %ecx,0x28(%edx)
   1eed1:	8b 48 2c             	mov    0x2c(%eax),%ecx
   1eed4:	89 4a 2c             	mov    %ecx,0x2c(%edx)
   1eed7:	8b 48 30             	mov    0x30(%eax),%ecx
   1eeda:	89 4a 30             	mov    %ecx,0x30(%edx)
   1eedd:	8b 48 34             	mov    0x34(%eax),%ecx
   1eee0:	89 4a 34             	mov    %ecx,0x34(%edx)
   1eee3:	8b 48 38             	mov    0x38(%eax),%ecx
   1eee6:	89 4a 38             	mov    %ecx,0x38(%edx)
   1eee9:	8b 40 3c             	mov    0x3c(%eax),%eax
   1eeec:	89 42 3c             	mov    %eax,0x3c(%edx)
   1eeef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1eef3:	83 c4 10             	add    $0x10,%esp
   1eef6:	83 c4 2c             	add    $0x2c,%esp
   1eef9:	5b                   	pop    %ebx
   1eefa:	5e                   	pop    %esi
   1eefb:	5f                   	pop    %edi
   1eefc:	5d                   	pop    %ebp
   1eefd:	c3                   	ret    
   1eefe:	bb 40 00 00 00       	mov    $0x40,%ebx
   1ef03:	2b 5c 24 04          	sub    0x4(%esp),%ebx
   1ef07:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   1ef0e:	00 
   1ef0f:	8d 4c 24 1c          	lea    0x1c(%esp),%ecx
   1ef13:	83 fb 04             	cmp    $0x4,%ebx
   1ef16:	0f 82 a6 00 00 00    	jb     1efc2 <cache_read+0x272>
   1ef1c:	8b 44 1a fc          	mov    -0x4(%edx,%ebx,1),%eax
   1ef20:	8d 73 ff             	lea    -0x1(%ebx),%esi
   1ef23:	89 44 1c 18          	mov    %eax,0x18(%esp,%ebx,1)
   1ef27:	83 fe 04             	cmp    $0x4,%esi
   1ef2a:	0f 82 a0 00 00 00    	jb     1efd0 <cache_read+0x280>
   1ef30:	83 e6 fc             	and    $0xfffffffc,%esi
   1ef33:	31 c0                	xor    %eax,%eax
   1ef35:	8b 3c 02             	mov    (%edx,%eax,1),%edi
   1ef38:	89 3c 01             	mov    %edi,(%ecx,%eax,1)
   1ef3b:	83 c0 04             	add    $0x4,%eax
   1ef3e:	39 f0                	cmp    %esi,%eax
   1ef40:	72 f3                	jb     1ef35 <cache_read+0x1e5>
   1ef42:	e9 89 00 00 00       	jmp    1efd0 <cache_read+0x280>
   1ef47:	8b 44 24 40          	mov    0x40(%esp),%eax
   1ef4b:	2b 44 24 04          	sub    0x4(%esp),%eax
   1ef4f:	c6 45 00 01          	movb   $0x1,0x0(%ebp)
   1ef53:	03 44 24 08          	add    0x8(%esp),%eax
   1ef57:	89 75 04             	mov    %esi,0x4(%ebp)
   1ef5a:	8b 08                	mov    (%eax),%ecx
   1ef5c:	89 4d 08             	mov    %ecx,0x8(%ebp)
   1ef5f:	8b 48 04             	mov    0x4(%eax),%ecx
   1ef62:	89 4d 0c             	mov    %ecx,0xc(%ebp)
   1ef65:	8b 48 08             	mov    0x8(%eax),%ecx
   1ef68:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1ef6b:	8b 48 0c             	mov    0xc(%eax),%ecx
   1ef6e:	89 4d 14             	mov    %ecx,0x14(%ebp)
   1ef71:	8b 48 10             	mov    0x10(%eax),%ecx
   1ef74:	89 4d 18             	mov    %ecx,0x18(%ebp)
   1ef77:	8b 48 14             	mov    0x14(%eax),%ecx
   1ef7a:	89 4d 1c             	mov    %ecx,0x1c(%ebp)
   1ef7d:	8b 48 18             	mov    0x18(%eax),%ecx
   1ef80:	89 4d 20             	mov    %ecx,0x20(%ebp)
   1ef83:	8b 48 1c             	mov    0x1c(%eax),%ecx
   1ef86:	89 4d 24             	mov    %ecx,0x24(%ebp)
   1ef89:	8b 48 20             	mov    0x20(%eax),%ecx
   1ef8c:	89 4d 28             	mov    %ecx,0x28(%ebp)
   1ef8f:	8b 48 24             	mov    0x24(%eax),%ecx
   1ef92:	89 4d 2c             	mov    %ecx,0x2c(%ebp)
   1ef95:	8b 48 28             	mov    0x28(%eax),%ecx
   1ef98:	89 4d 30             	mov    %ecx,0x30(%ebp)
   1ef9b:	8b 48 2c             	mov    0x2c(%eax),%ecx
   1ef9e:	89 4d 34             	mov    %ecx,0x34(%ebp)
   1efa1:	8b 48 30             	mov    0x30(%eax),%ecx
   1efa4:	89 4d 38             	mov    %ecx,0x38(%ebp)
   1efa7:	8b 48 34             	mov    0x34(%eax),%ecx
   1efaa:	89 4d 3c             	mov    %ecx,0x3c(%ebp)
   1efad:	8b 48 38             	mov    0x38(%eax),%ecx
   1efb0:	89 4d 40             	mov    %ecx,0x40(%ebp)
   1efb3:	8b 40 3c             	mov    0x3c(%eax),%eax
   1efb6:	89 45 44             	mov    %eax,0x44(%ebp)
   1efb9:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1efbd:	e9 34 ff ff ff       	jmp    1eef6 <cache_read+0x1a6>
   1efc2:	85 db                	test   %ebx,%ebx
   1efc4:	74 0a                	je     1efd0 <cache_read+0x280>
   1efc6:	0f b6 02             	movzbl (%edx),%eax
   1efc9:	88 01                	mov    %al,(%ecx)
   1efcb:	f6 c3 02             	test   $0x2,%bl
   1efce:	75 38                	jne    1f008 <cache_read+0x2b8>
   1efd0:	83 ec 04             	sub    $0x4,%esp
   1efd3:	ff 74 24 4c          	pushl  0x4c(%esp)
   1efd7:	8b 54 24 0c          	mov    0xc(%esp),%edx
   1efdb:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   1efdf:	8d 44 02 c0          	lea    -0x40(%edx,%eax,1),%eax
   1efe3:	50                   	push   %eax
   1efe4:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   1efe8:	83 c0 40             	add    $0x40,%eax
   1efeb:	29 d0                	sub    %edx,%eax
   1efed:	50                   	push   %eax
   1efee:	e8 5d fd ff ff       	call   1ed50 <cache_read>
   1eff3:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecx
   1effa:	d3 e0                	shl    %cl,%eax
   1effc:	0b 44 24 2c          	or     0x2c(%esp),%eax
   1f000:	83 c4 10             	add    $0x10,%esp
   1f003:	e9 ee fe ff ff       	jmp    1eef6 <cache_read+0x1a6>
   1f008:	0f b7 44 1a fe       	movzwl -0x2(%edx,%ebx,1),%eax
   1f00d:	66 89 44 19 fe       	mov    %ax,-0x2(%ecx,%ebx,1)
   1f012:	eb bc                	jmp    1efd0 <cache_read+0x280>
   1f014:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f01b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f01f:	90                   	nop

0001f020 <cache_write>:
   1f020:	55                   	push   %ebp
   1f021:	57                   	push   %edi
   1f022:	56                   	push   %esi
   1f023:	53                   	push   %ebx
   1f024:	e8 57 54 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f029:	81 c3 d7 ff 02 00    	add    $0x2ffd7,%ebx
   1f02f:	83 ec 1c             	sub    $0x1c,%esp
   1f032:	8b 74 24 30          	mov    0x30(%esp),%esi
   1f036:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
   1f03a:	8d 6c 24 38          	lea    0x38(%esp),%ebp
   1f03e:	83 ec 04             	sub    $0x4,%esp
   1f041:	ff 74 24 38          	pushl  0x38(%esp)
   1f045:	55                   	push   %ebp
   1f046:	8d 83 60 34 05 00    	lea    0x53460(%ebx),%eax
   1f04c:	01 f0                	add    %esi,%eax
   1f04e:	50                   	push   %eax
   1f04f:	e8 3c 50 fe ff       	call   4090 <memcpy@plt>
   1f054:	89 f2                	mov    %esi,%edx
   1f056:	89 f0                	mov    %esi,%eax
   1f058:	83 c4 10             	add    $0x10,%esp
   1f05b:	c1 ea 06             	shr    $0x6,%edx
   1f05e:	c1 e8 0d             	shr    $0xd,%eax
   1f061:	83 e2 7f             	and    $0x7f,%edx
   1f064:	25 ff 4f 00 00       	and    $0x4fff,%eax
   1f069:	8d 14 d2             	lea    (%edx,%edx,8),%edx
   1f06c:	c1 e2 06             	shl    $0x6,%edx
   1f06f:	8d 0c 17             	lea    (%edi,%edx,1),%ecx
   1f072:	8d 94 17 40 02 00 00 	lea    0x240(%edi,%edx,1),%edx
   1f079:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f080:	89 41 04             	mov    %eax,0x4(%ecx)
   1f083:	85 c0                	test   %eax,%eax
   1f085:	74 05                	je     1f08c <cache_write+0x6c>
   1f087:	80 39 01             	cmpb   $0x1,(%ecx)
   1f08a:	74 14                	je     1f0a0 <cache_write+0x80>
   1f08c:	83 c1 48             	add    $0x48,%ecx
   1f08f:	39 d1                	cmp    %edx,%ecx
   1f091:	75 ed                	jne    1f080 <cache_write+0x60>
   1f093:	83 c4 1c             	add    $0x1c,%esp
   1f096:	5b                   	pop    %ebx
   1f097:	5e                   	pop    %esi
   1f098:	5f                   	pop    %edi
   1f099:	5d                   	pop    %ebp
   1f09a:	c3                   	ret    
   1f09b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f09f:	90                   	nop
   1f0a0:	89 f0                	mov    %esi,%eax
   1f0a2:	8b 54 24 34          	mov    0x34(%esp),%edx
   1f0a6:	83 e0 3f             	and    $0x3f,%eax
   1f0a9:	01 c2                	add    %eax,%edx
   1f0ab:	83 fa 40             	cmp    $0x40,%edx
   1f0ae:	77 20                	ja     1f0d0 <cache_write+0xb0>
   1f0b0:	83 ec 04             	sub    $0x4,%esp
   1f0b3:	83 c1 08             	add    $0x8,%ecx
   1f0b6:	ff 74 24 38          	pushl  0x38(%esp)
   1f0ba:	55                   	push   %ebp
   1f0bb:	51                   	push   %ecx
   1f0bc:	e8 cf 4f fe ff       	call   4090 <memcpy@plt>
   1f0c1:	83 c4 10             	add    $0x10,%esp
   1f0c4:	eb cd                	jmp    1f093 <cache_write+0x73>
   1f0c6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f0cd:	8d 76 00             	lea    0x0(%esi),%esi
   1f0d0:	8b 5c 24 38          	mov    0x38(%esp),%ebx
   1f0d4:	89 54 24 0c          	mov    %edx,0xc(%esp)
   1f0d8:	b9 40 00 00 00       	mov    $0x40,%ecx
   1f0dd:	57                   	push   %edi
   1f0de:	29 c1                	sub    %eax,%ecx
   1f0e0:	53                   	push   %ebx
   1f0e1:	89 44 24 10          	mov    %eax,0x10(%esp)
   1f0e5:	51                   	push   %ecx
   1f0e6:	56                   	push   %esi
   1f0e7:	83 c6 40             	add    $0x40,%esi
   1f0ea:	e8 31 ff ff ff       	call   1f020 <cache_write>
   1f0ef:	57                   	push   %edi
   1f0f0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   1f0f4:	89 c1                	mov    %eax,%ecx
   1f0f6:	29 c6                	sub    %eax,%esi
   1f0f8:	f7 d9                	neg    %ecx
   1f0fa:	8d 0c cd 00 02 00 00 	lea    0x200(,%ecx,8),%ecx
   1f101:	d3 eb                	shr    %cl,%ebx
   1f103:	53                   	push   %ebx
   1f104:	8b 54 24 24          	mov    0x24(%esp),%edx
   1f108:	83 ea 40             	sub    $0x40,%edx
   1f10b:	52                   	push   %edx
   1f10c:	56                   	push   %esi
   1f10d:	e8 0e ff ff ff       	call   1f020 <cache_write>
   1f112:	83 c4 20             	add    $0x20,%esp
   1f115:	e9 79 ff ff ff       	jmp    1f093 <cache_write+0x73>
   1f11a:	66 90                	xchg   %ax,%ax
   1f11c:	66 90                	xchg   %ax,%ax
   1f11e:	66 90                	xchg   %ax,%ax

0001f120 <sign_ext.part.0>:
   1f120:	53                   	push   %ebx
   1f121:	e8 5a 53 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f126:	81 c3 da fe 02 00    	add    $0x2feda,%ebx
   1f12c:	83 ec 08             	sub    $0x8,%esp
   1f12f:	8d 83 0c 6d fe ff    	lea    -0x192f4(%ebx),%eax
   1f135:	50                   	push   %eax
   1f136:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   1f13c:	6a 2e                	push   $0x2e
   1f13e:	50                   	push   %eax
   1f13f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   1f145:	50                   	push   %eax
   1f146:	e8 c5 51 fe ff       	call   4310 <__assert_fail@plt>
   1f14b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f14f:	90                   	nop

0001f150 <instr_execute_2op>:
   1f150:	55                   	push   %ebp
   1f151:	57                   	push   %edi
   1f152:	56                   	push   %esi
   1f153:	53                   	push   %ebx
   1f154:	e8 27 53 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f159:	81 c3 a7 fe 02 00    	add    $0x2fea7,%ebx
   1f15f:	83 ec 0c             	sub    $0xc,%esp
   1f162:	e8 79 b6 00 00       	call   2a7e0 <set_ref>
   1f167:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f16d:	83 ec 0c             	sub    $0xc,%esp
   1f170:	57                   	push   %edi
   1f171:	e8 6a 32 ff ff       	call   123e0 <operand_read>
   1f176:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f17c:	89 34 24             	mov    %esi,(%esp)
   1f17f:	e8 5c 32 ff ff       	call   123e0 <operand_read>
   1f184:	8b 56 10             	mov    0x10(%esi),%edx
   1f187:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f18d:	83 c4 10             	add    $0x10,%esp
   1f190:	8d 6a f8             	lea    -0x8(%edx),%ebp
   1f193:	0f b6 08             	movzbl (%eax),%ecx
   1f196:	8b 46 0c             	mov    0xc(%esi),%eax
   1f199:	83 e5 f7             	and    $0xfffffff7,%ebp
   1f19c:	74 05                	je     1f1a3 <instr_execute_2op+0x53>
   1f19e:	83 fa 20             	cmp    $0x20,%edx
   1f1a1:	75 5a                	jne    1f1fd <instr_execute_2op+0xad>
   1f1a3:	83 fa 08             	cmp    $0x8,%edx
   1f1a6:	74 48                	je     1f1f0 <instr_execute_2op+0xa0>
   1f1a8:	0f bf e8             	movswl %ax,%ebp
   1f1ab:	83 fa 10             	cmp    $0x10,%edx
   1f1ae:	0f 44 c5             	cmove  %ebp,%eax
   1f1b1:	8b 6f 10             	mov    0x10(%edi),%ebp
   1f1b4:	8b 57 0c             	mov    0xc(%edi),%edx
   1f1b7:	8d 7d f8             	lea    -0x8(%ebp),%edi
   1f1ba:	83 e7 f7             	and    $0xfffffff7,%edi
   1f1bd:	74 05                	je     1f1c4 <instr_execute_2op+0x74>
   1f1bf:	83 fd 20             	cmp    $0x20,%ebp
   1f1c2:	75 39                	jne    1f1fd <instr_execute_2op+0xad>
   1f1c4:	83 fd 08             	cmp    $0x8,%ebp
   1f1c7:	74 2f                	je     1f1f8 <instr_execute_2op+0xa8>
   1f1c9:	0f bf fa             	movswl %dx,%edi
   1f1cc:	83 fd 10             	cmp    $0x10,%ebp
   1f1cf:	0f 44 d7             	cmove  %edi,%edx
   1f1d2:	83 ec 04             	sub    $0x4,%esp
   1f1d5:	51                   	push   %ecx
   1f1d6:	50                   	push   %eax
   1f1d7:	52                   	push   %edx
   1f1d8:	e8 53 b1 00 00       	call   2a330 <__ref_alu_and>
   1f1dd:	89 34 24             	mov    %esi,(%esp)
   1f1e0:	89 46 0c             	mov    %eax,0xc(%esi)
   1f1e3:	e8 a8 33 ff ff       	call   12590 <operand_write>
   1f1e8:	83 c4 1c             	add    $0x1c,%esp
   1f1eb:	5b                   	pop    %ebx
   1f1ec:	5e                   	pop    %esi
   1f1ed:	5f                   	pop    %edi
   1f1ee:	5d                   	pop    %ebp
   1f1ef:	c3                   	ret    
   1f1f0:	0f be c0             	movsbl %al,%eax
   1f1f3:	eb bc                	jmp    1f1b1 <instr_execute_2op+0x61>
   1f1f5:	8d 76 00             	lea    0x0(%esi),%esi
   1f1f8:	0f be d2             	movsbl %dl,%edx
   1f1fb:	eb d5                	jmp    1f1d2 <instr_execute_2op+0x82>
   1f1fd:	e8 1e ff ff ff       	call   1f120 <sign_ext.part.0>
   1f202:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f209:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001f210 <__ref_and_r2rm_b>:
   1f210:	55                   	push   %ebp
   1f211:	57                   	push   %edi
   1f212:	56                   	push   %esi
   1f213:	53                   	push   %ebx
   1f214:	e8 67 52 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f219:	81 c3 e7 fd 02 00    	add    $0x2fde7,%ebx
   1f21f:	83 ec 10             	sub    $0x10,%esp
   1f222:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f228:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f22e:	56                   	push   %esi
   1f22f:	57                   	push   %edi
   1f230:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1f234:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1f23b:	83 c0 01             	add    $0x1,%eax
   1f23e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1f245:	50                   	push   %eax
   1f246:	e8 55 2c ff ff       	call   11ea0 <modrm_r_rm>
   1f24b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1f24e:	83 c4 10             	add    $0x10,%esp
   1f251:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1f257:	8d 68 01             	lea    0x1(%eax),%ebp
   1f25a:	89 e8                	mov    %ebp,%eax
   1f25c:	0f b6 c0             	movzbl %al,%eax
   1f25f:	83 f9 08             	cmp    $0x8,%ecx
   1f262:	74 12                	je     1f276 <__ref_and_r2rm_b+0x66>
   1f264:	83 f9 10             	cmp    $0x10,%ecx
   1f267:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1f26d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1f273:	0f 45 d1             	cmovne %ecx,%edx
   1f276:	83 ec 0c             	sub    $0xc,%esp
   1f279:	56                   	push   %esi
   1f27a:	57                   	push   %edi
   1f27b:	50                   	push   %eax
   1f27c:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f282:	52                   	push   %edx
   1f283:	50                   	push   %eax
   1f284:	e8 17 2f ff ff       	call   121a0 <print_asm_2>
   1f289:	83 c4 20             	add    $0x20,%esp
   1f28c:	e8 bf fe ff ff       	call   1f150 <instr_execute_2op>
   1f291:	83 c4 0c             	add    $0xc,%esp
   1f294:	89 e8                	mov    %ebp,%eax
   1f296:	5b                   	pop    %ebx
   1f297:	5e                   	pop    %esi
   1f298:	5f                   	pop    %edi
   1f299:	5d                   	pop    %ebp
   1f29a:	c3                   	ret    
   1f29b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f29f:	90                   	nop

0001f2a0 <__ref_and_r2rm_v>:
   1f2a0:	55                   	push   %ebp
   1f2a1:	57                   	push   %edi
   1f2a2:	56                   	push   %esi
   1f2a3:	53                   	push   %ebx
   1f2a4:	e8 d7 51 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f2a9:	81 c3 57 fd 02 00    	add    $0x2fd57,%ebx
   1f2af:	83 ec 10             	sub    $0x10,%esp
   1f2b2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f2b8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f2be:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f2c4:	0f b6 00             	movzbl (%eax),%eax
   1f2c7:	56                   	push   %esi
   1f2c8:	57                   	push   %edi
   1f2c9:	89 46 10             	mov    %eax,0x10(%esi)
   1f2cc:	89 47 10             	mov    %eax,0x10(%edi)
   1f2cf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1f2d3:	83 c0 01             	add    $0x1,%eax
   1f2d6:	50                   	push   %eax
   1f2d7:	e8 c4 2b ff ff       	call   11ea0 <modrm_r_rm>
   1f2dc:	8b 4e 10             	mov    0x10(%esi),%ecx
   1f2df:	83 c4 10             	add    $0x10,%esp
   1f2e2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1f2e8:	8d 68 01             	lea    0x1(%eax),%ebp
   1f2eb:	89 e8                	mov    %ebp,%eax
   1f2ed:	0f b6 c0             	movzbl %al,%eax
   1f2f0:	83 f9 08             	cmp    $0x8,%ecx
   1f2f3:	74 12                	je     1f307 <__ref_and_r2rm_v+0x67>
   1f2f5:	83 f9 10             	cmp    $0x10,%ecx
   1f2f8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1f2fe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1f304:	0f 45 d1             	cmovne %ecx,%edx
   1f307:	83 ec 0c             	sub    $0xc,%esp
   1f30a:	56                   	push   %esi
   1f30b:	57                   	push   %edi
   1f30c:	50                   	push   %eax
   1f30d:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f313:	52                   	push   %edx
   1f314:	50                   	push   %eax
   1f315:	e8 86 2e ff ff       	call   121a0 <print_asm_2>
   1f31a:	83 c4 20             	add    $0x20,%esp
   1f31d:	e8 2e fe ff ff       	call   1f150 <instr_execute_2op>
   1f322:	83 c4 0c             	add    $0xc,%esp
   1f325:	89 e8                	mov    %ebp,%eax
   1f327:	5b                   	pop    %ebx
   1f328:	5e                   	pop    %esi
   1f329:	5f                   	pop    %edi
   1f32a:	5d                   	pop    %ebp
   1f32b:	c3                   	ret    
   1f32c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001f330 <__ref_and_rm2r_b>:
   1f330:	55                   	push   %ebp
   1f331:	57                   	push   %edi
   1f332:	56                   	push   %esi
   1f333:	53                   	push   %ebx
   1f334:	e8 47 51 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f339:	81 c3 c7 fc 02 00    	add    $0x2fcc7,%ebx
   1f33f:	83 ec 10             	sub    $0x10,%esp
   1f342:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f348:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f34e:	57                   	push   %edi
   1f34f:	56                   	push   %esi
   1f350:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1f354:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1f35b:	83 c0 01             	add    $0x1,%eax
   1f35e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1f365:	50                   	push   %eax
   1f366:	e8 35 2b ff ff       	call   11ea0 <modrm_r_rm>
   1f36b:	8b 4e 10             	mov    0x10(%esi),%ecx
   1f36e:	83 c4 10             	add    $0x10,%esp
   1f371:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1f377:	8d 68 01             	lea    0x1(%eax),%ebp
   1f37a:	89 e8                	mov    %ebp,%eax
   1f37c:	0f b6 c0             	movzbl %al,%eax
   1f37f:	83 f9 08             	cmp    $0x8,%ecx
   1f382:	74 12                	je     1f396 <__ref_and_rm2r_b+0x66>
   1f384:	83 f9 10             	cmp    $0x10,%ecx
   1f387:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1f38d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1f393:	0f 45 d1             	cmovne %ecx,%edx
   1f396:	83 ec 0c             	sub    $0xc,%esp
   1f399:	56                   	push   %esi
   1f39a:	57                   	push   %edi
   1f39b:	50                   	push   %eax
   1f39c:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f3a2:	52                   	push   %edx
   1f3a3:	50                   	push   %eax
   1f3a4:	e8 f7 2d ff ff       	call   121a0 <print_asm_2>
   1f3a9:	83 c4 20             	add    $0x20,%esp
   1f3ac:	e8 9f fd ff ff       	call   1f150 <instr_execute_2op>
   1f3b1:	83 c4 0c             	add    $0xc,%esp
   1f3b4:	89 e8                	mov    %ebp,%eax
   1f3b6:	5b                   	pop    %ebx
   1f3b7:	5e                   	pop    %esi
   1f3b8:	5f                   	pop    %edi
   1f3b9:	5d                   	pop    %ebp
   1f3ba:	c3                   	ret    
   1f3bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f3bf:	90                   	nop

0001f3c0 <__ref_and_rm2r_v>:
   1f3c0:	55                   	push   %ebp
   1f3c1:	57                   	push   %edi
   1f3c2:	56                   	push   %esi
   1f3c3:	53                   	push   %ebx
   1f3c4:	e8 b7 50 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f3c9:	81 c3 37 fc 02 00    	add    $0x2fc37,%ebx
   1f3cf:	83 ec 10             	sub    $0x10,%esp
   1f3d2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f3d8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f3de:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f3e4:	0f b6 00             	movzbl (%eax),%eax
   1f3e7:	57                   	push   %edi
   1f3e8:	89 46 10             	mov    %eax,0x10(%esi)
   1f3eb:	56                   	push   %esi
   1f3ec:	89 47 10             	mov    %eax,0x10(%edi)
   1f3ef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1f3f3:	83 c0 01             	add    $0x1,%eax
   1f3f6:	50                   	push   %eax
   1f3f7:	e8 a4 2a ff ff       	call   11ea0 <modrm_r_rm>
   1f3fc:	8b 4e 10             	mov    0x10(%esi),%ecx
   1f3ff:	83 c4 10             	add    $0x10,%esp
   1f402:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1f408:	8d 68 01             	lea    0x1(%eax),%ebp
   1f40b:	89 e8                	mov    %ebp,%eax
   1f40d:	0f b6 c0             	movzbl %al,%eax
   1f410:	83 f9 08             	cmp    $0x8,%ecx
   1f413:	74 12                	je     1f427 <__ref_and_rm2r_v+0x67>
   1f415:	83 f9 10             	cmp    $0x10,%ecx
   1f418:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1f41e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1f424:	0f 45 d1             	cmovne %ecx,%edx
   1f427:	83 ec 0c             	sub    $0xc,%esp
   1f42a:	56                   	push   %esi
   1f42b:	57                   	push   %edi
   1f42c:	50                   	push   %eax
   1f42d:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f433:	52                   	push   %edx
   1f434:	50                   	push   %eax
   1f435:	e8 66 2d ff ff       	call   121a0 <print_asm_2>
   1f43a:	83 c4 20             	add    $0x20,%esp
   1f43d:	e8 0e fd ff ff       	call   1f150 <instr_execute_2op>
   1f442:	83 c4 0c             	add    $0xc,%esp
   1f445:	89 e8                	mov    %ebp,%eax
   1f447:	5b                   	pop    %ebx
   1f448:	5e                   	pop    %esi
   1f449:	5f                   	pop    %edi
   1f44a:	5d                   	pop    %ebp
   1f44b:	c3                   	ret    
   1f44c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001f450 <__ref_and_i2rm_b>:
   1f450:	55                   	push   %ebp
   1f451:	57                   	push   %edi
   1f452:	56                   	push   %esi
   1f453:	53                   	push   %ebx
   1f454:	e8 27 50 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f459:	81 c3 a7 fb 02 00    	add    $0x2fba7,%ebx
   1f45f:	83 ec 24             	sub    $0x24,%esp
   1f462:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1f466:	8d 45 01             	lea    0x1(%ebp),%eax
   1f469:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1f46f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f475:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1f47c:	52                   	push   %edx
   1f47d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1f484:	89 54 24 18          	mov    %edx,0x18(%esp)
   1f488:	50                   	push   %eax
   1f489:	e8 f2 2a ff ff       	call   11f80 <modrm_rm>
   1f48e:	8b 77 10             	mov    0x10(%edi),%esi
   1f491:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1f495:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1f499:	83 c0 01             	add    $0x1,%eax
   1f49c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1f4a2:	83 c4 10             	add    $0x10,%esp
   1f4a5:	01 c5                	add    %eax,%ebp
   1f4a7:	c1 ee 03             	shr    $0x3,%esi
   1f4aa:	89 6f 04             	mov    %ebp,0x4(%edi)
   1f4ad:	01 c6                	add    %eax,%esi
   1f4af:	8b 6a 10             	mov    0x10(%edx),%ebp
   1f4b2:	89 f0                	mov    %esi,%eax
   1f4b4:	0f b6 c8             	movzbl %al,%ecx
   1f4b7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1f4bd:	83 fd 08             	cmp    $0x8,%ebp
   1f4c0:	74 12                	je     1f4d4 <__ref_and_i2rm_b+0x84>
   1f4c2:	83 fd 10             	cmp    $0x10,%ebp
   1f4c5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1f4cb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1f4d1:	0f 45 c5             	cmovne %ebp,%eax
   1f4d4:	83 ec 0c             	sub    $0xc,%esp
   1f4d7:	52                   	push   %edx
   1f4d8:	57                   	push   %edi
   1f4d9:	51                   	push   %ecx
   1f4da:	50                   	push   %eax
   1f4db:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f4e1:	50                   	push   %eax
   1f4e2:	e8 b9 2c ff ff       	call   121a0 <print_asm_2>
   1f4e7:	83 c4 20             	add    $0x20,%esp
   1f4ea:	e8 61 fc ff ff       	call   1f150 <instr_execute_2op>
   1f4ef:	83 c4 1c             	add    $0x1c,%esp
   1f4f2:	89 f0                	mov    %esi,%eax
   1f4f4:	5b                   	pop    %ebx
   1f4f5:	5e                   	pop    %esi
   1f4f6:	5f                   	pop    %edi
   1f4f7:	5d                   	pop    %ebp
   1f4f8:	c3                   	ret    
   1f4f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001f500 <__ref_and_i2rm_v>:
   1f500:	55                   	push   %ebp
   1f501:	57                   	push   %edi
   1f502:	56                   	push   %esi
   1f503:	53                   	push   %ebx
   1f504:	e8 77 4f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f509:	81 c3 f7 fa 02 00    	add    $0x2faf7,%ebx
   1f50f:	83 ec 24             	sub    $0x24,%esp
   1f512:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1f516:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f51c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1f522:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f528:	0f b6 00             	movzbl (%eax),%eax
   1f52b:	89 42 10             	mov    %eax,0x10(%edx)
   1f52e:	52                   	push   %edx
   1f52f:	89 47 10             	mov    %eax,0x10(%edi)
   1f532:	8d 45 01             	lea    0x1(%ebp),%eax
   1f535:	89 54 24 18          	mov    %edx,0x18(%esp)
   1f539:	50                   	push   %eax
   1f53a:	e8 41 2a ff ff       	call   11f80 <modrm_rm>
   1f53f:	8b 77 10             	mov    0x10(%edi),%esi
   1f542:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1f546:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1f54a:	83 c0 01             	add    $0x1,%eax
   1f54d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1f553:	83 c4 10             	add    $0x10,%esp
   1f556:	01 c5                	add    %eax,%ebp
   1f558:	c1 ee 03             	shr    $0x3,%esi
   1f55b:	89 6f 04             	mov    %ebp,0x4(%edi)
   1f55e:	01 c6                	add    %eax,%esi
   1f560:	8b 6a 10             	mov    0x10(%edx),%ebp
   1f563:	89 f0                	mov    %esi,%eax
   1f565:	0f b6 c8             	movzbl %al,%ecx
   1f568:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1f56e:	83 fd 08             	cmp    $0x8,%ebp
   1f571:	74 12                	je     1f585 <__ref_and_i2rm_v+0x85>
   1f573:	83 fd 10             	cmp    $0x10,%ebp
   1f576:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1f57c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1f582:	0f 45 c5             	cmovne %ebp,%eax
   1f585:	83 ec 0c             	sub    $0xc,%esp
   1f588:	52                   	push   %edx
   1f589:	57                   	push   %edi
   1f58a:	51                   	push   %ecx
   1f58b:	50                   	push   %eax
   1f58c:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f592:	50                   	push   %eax
   1f593:	e8 08 2c ff ff       	call   121a0 <print_asm_2>
   1f598:	83 c4 20             	add    $0x20,%esp
   1f59b:	e8 b0 fb ff ff       	call   1f150 <instr_execute_2op>
   1f5a0:	83 c4 1c             	add    $0x1c,%esp
   1f5a3:	89 f0                	mov    %esi,%eax
   1f5a5:	5b                   	pop    %ebx
   1f5a6:	5e                   	pop    %esi
   1f5a7:	5f                   	pop    %edi
   1f5a8:	5d                   	pop    %ebp
   1f5a9:	c3                   	ret    
   1f5aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001f5b0 <__ref_and_i2rm_bv>:
   1f5b0:	55                   	push   %ebp
   1f5b1:	57                   	push   %edi
   1f5b2:	56                   	push   %esi
   1f5b3:	53                   	push   %ebx
   1f5b4:	e8 c7 4e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f5b9:	81 c3 47 fa 02 00    	add    $0x2fa47,%ebx
   1f5bf:	83 ec 24             	sub    $0x24,%esp
   1f5c2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1f5c6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f5cc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1f5d2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f5d8:	0f b6 00             	movzbl (%eax),%eax
   1f5db:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1f5e2:	89 42 10             	mov    %eax,0x10(%edx)
   1f5e5:	8d 45 01             	lea    0x1(%ebp),%eax
   1f5e8:	52                   	push   %edx
   1f5e9:	89 54 24 18          	mov    %edx,0x18(%esp)
   1f5ed:	50                   	push   %eax
   1f5ee:	e8 8d 29 ff ff       	call   11f80 <modrm_rm>
   1f5f3:	8b 77 10             	mov    0x10(%edi),%esi
   1f5f6:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1f5fa:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1f5fe:	83 c0 01             	add    $0x1,%eax
   1f601:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1f607:	83 c4 10             	add    $0x10,%esp
   1f60a:	01 c5                	add    %eax,%ebp
   1f60c:	c1 ee 03             	shr    $0x3,%esi
   1f60f:	89 6f 04             	mov    %ebp,0x4(%edi)
   1f612:	01 c6                	add    %eax,%esi
   1f614:	8b 6a 10             	mov    0x10(%edx),%ebp
   1f617:	89 f0                	mov    %esi,%eax
   1f619:	0f b6 c8             	movzbl %al,%ecx
   1f61c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1f622:	83 fd 08             	cmp    $0x8,%ebp
   1f625:	74 12                	je     1f639 <__ref_and_i2rm_bv+0x89>
   1f627:	83 fd 10             	cmp    $0x10,%ebp
   1f62a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1f630:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1f636:	0f 45 c5             	cmovne %ebp,%eax
   1f639:	83 ec 0c             	sub    $0xc,%esp
   1f63c:	52                   	push   %edx
   1f63d:	57                   	push   %edi
   1f63e:	51                   	push   %ecx
   1f63f:	50                   	push   %eax
   1f640:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f646:	50                   	push   %eax
   1f647:	e8 54 2b ff ff       	call   121a0 <print_asm_2>
   1f64c:	83 c4 20             	add    $0x20,%esp
   1f64f:	e8 fc fa ff ff       	call   1f150 <instr_execute_2op>
   1f654:	83 c4 1c             	add    $0x1c,%esp
   1f657:	89 f0                	mov    %esi,%eax
   1f659:	5b                   	pop    %ebx
   1f65a:	5e                   	pop    %esi
   1f65b:	5f                   	pop    %edi
   1f65c:	5d                   	pop    %ebp
   1f65d:	c3                   	ret    
   1f65e:	66 90                	xchg   %ax,%ax

0001f660 <__ref_and_i2a_b>:
   1f660:	53                   	push   %ebx
   1f661:	e8 1a 4e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f666:	81 c3 9a f9 02 00    	add    $0x2f99a,%ebx
   1f66c:	83 ec 14             	sub    $0x14,%esp
   1f66f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1f673:	83 c1 01             	add    $0x1,%ecx
   1f676:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1f67c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1f682:	89 48 04             	mov    %ecx,0x4(%eax)
   1f685:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1f68c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1f693:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1f699:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1f69d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1f6a3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1f6aa:	52                   	push   %edx
   1f6ab:	50                   	push   %eax
   1f6ac:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1f6b2:	6a 02                	push   $0x2
   1f6b4:	50                   	push   %eax
   1f6b5:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f6bb:	50                   	push   %eax
   1f6bc:	e8 df 2a ff ff       	call   121a0 <print_asm_2>
   1f6c1:	83 c4 20             	add    $0x20,%esp
   1f6c4:	e8 87 fa ff ff       	call   1f150 <instr_execute_2op>
   1f6c9:	83 c4 08             	add    $0x8,%esp
   1f6cc:	b8 02 00 00 00       	mov    $0x2,%eax
   1f6d1:	5b                   	pop    %ebx
   1f6d2:	c3                   	ret    
   1f6d3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f6da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001f6e0 <__ref_and_i2a_v>:
   1f6e0:	55                   	push   %ebp
   1f6e1:	57                   	push   %edi
   1f6e2:	56                   	push   %esi
   1f6e3:	53                   	push   %ebx
   1f6e4:	e8 97 4d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f6e9:	81 c3 17 f9 02 00    	add    $0x2f917,%ebx
   1f6ef:	83 ec 0c             	sub    $0xc,%esp
   1f6f2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f6f8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1f6fe:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   1f704:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1f70a:	0f b6 08             	movzbl (%eax),%ecx
   1f70d:	8b 44 24 20          	mov    0x20(%esp),%eax
   1f711:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   1f717:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1f71b:	89 cf                	mov    %ecx,%edi
   1f71d:	83 c0 01             	add    $0x1,%eax
   1f720:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1f723:	c1 ef 03             	shr    $0x3,%edi
   1f726:	89 4a 10             	mov    %ecx,0x10(%edx)
   1f729:	89 42 04             	mov    %eax,0x4(%edx)
   1f72c:	83 c7 01             	add    $0x1,%edi
   1f72f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1f736:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1f73d:	83 f9 08             	cmp    $0x8,%ecx
   1f740:	74 12                	je     1f754 <__ref_and_i2a_v+0x74>
   1f742:	83 f9 10             	cmp    $0x10,%ecx
   1f745:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1f74b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1f751:	0f 45 f0             	cmovne %eax,%esi
   1f754:	83 ec 0c             	sub    $0xc,%esp
   1f757:	8d 83 fa 6f fe ff    	lea    -0x19006(%ebx),%eax
   1f75d:	55                   	push   %ebp
   1f75e:	52                   	push   %edx
   1f75f:	57                   	push   %edi
   1f760:	56                   	push   %esi
   1f761:	50                   	push   %eax
   1f762:	e8 39 2a ff ff       	call   121a0 <print_asm_2>
   1f767:	83 c4 20             	add    $0x20,%esp
   1f76a:	e8 e1 f9 ff ff       	call   1f150 <instr_execute_2op>
   1f76f:	83 c4 0c             	add    $0xc,%esp
   1f772:	89 f8                	mov    %edi,%eax
   1f774:	5b                   	pop    %ebx
   1f775:	5e                   	pop    %esi
   1f776:	5f                   	pop    %edi
   1f777:	5d                   	pop    %ebp
   1f778:	c3                   	ret    
   1f779:	66 90                	xchg   %ax,%ax
   1f77b:	66 90                	xchg   %ax,%ax
   1f77d:	66 90                	xchg   %ax,%ax
   1f77f:	90                   	nop

0001f780 <sign_ext.part.0>:
   1f780:	53                   	push   %ebx
   1f781:	e8 fa 4c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f786:	81 c3 7a f8 02 00    	add    $0x2f87a,%ebx
   1f78c:	83 ec 08             	sub    $0x8,%esp
   1f78f:	8d 83 18 6d fe ff    	lea    -0x192e8(%ebx),%eax
   1f795:	50                   	push   %eax
   1f796:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   1f79c:	6a 2e                	push   $0x2e
   1f79e:	50                   	push   %eax
   1f79f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   1f7a5:	50                   	push   %eax
   1f7a6:	e8 65 4b fe ff       	call   4310 <__assert_fail@plt>
   1f7ab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f7af:	90                   	nop

0001f7b0 <instr_execute_2op>:
   1f7b0:	55                   	push   %ebp
   1f7b1:	57                   	push   %edi
   1f7b2:	56                   	push   %esi
   1f7b3:	53                   	push   %ebx
   1f7b4:	e8 c7 4c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f7b9:	81 c3 47 f8 02 00    	add    $0x2f847,%ebx
   1f7bf:	83 ec 0c             	sub    $0xc,%esp
   1f7c2:	e8 19 b0 00 00       	call   2a7e0 <set_ref>
   1f7c7:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f7cd:	83 ec 0c             	sub    $0xc,%esp
   1f7d0:	57                   	push   %edi
   1f7d1:	e8 0a 2c ff ff       	call   123e0 <operand_read>
   1f7d6:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f7dc:	89 34 24             	mov    %esi,(%esp)
   1f7df:	e8 fc 2b ff ff       	call   123e0 <operand_read>
   1f7e4:	8b 56 10             	mov    0x10(%esi),%edx
   1f7e7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f7ed:	83 c4 10             	add    $0x10,%esp
   1f7f0:	8d 6a f8             	lea    -0x8(%edx),%ebp
   1f7f3:	0f b6 08             	movzbl (%eax),%ecx
   1f7f6:	8b 46 0c             	mov    0xc(%esi),%eax
   1f7f9:	83 e5 f7             	and    $0xfffffff7,%ebp
   1f7fc:	74 05                	je     1f803 <instr_execute_2op+0x53>
   1f7fe:	83 fa 20             	cmp    $0x20,%edx
   1f801:	75 5a                	jne    1f85d <instr_execute_2op+0xad>
   1f803:	83 fa 08             	cmp    $0x8,%edx
   1f806:	74 48                	je     1f850 <instr_execute_2op+0xa0>
   1f808:	0f bf e8             	movswl %ax,%ebp
   1f80b:	83 fa 10             	cmp    $0x10,%edx
   1f80e:	0f 44 c5             	cmove  %ebp,%eax
   1f811:	8b 6f 10             	mov    0x10(%edi),%ebp
   1f814:	8b 57 0c             	mov    0xc(%edi),%edx
   1f817:	8d 7d f8             	lea    -0x8(%ebp),%edi
   1f81a:	83 e7 f7             	and    $0xfffffff7,%edi
   1f81d:	74 05                	je     1f824 <instr_execute_2op+0x74>
   1f81f:	83 fd 20             	cmp    $0x20,%ebp
   1f822:	75 39                	jne    1f85d <instr_execute_2op+0xad>
   1f824:	83 fd 08             	cmp    $0x8,%ebp
   1f827:	74 2f                	je     1f858 <instr_execute_2op+0xa8>
   1f829:	0f bf fa             	movswl %dx,%edi
   1f82c:	83 fd 10             	cmp    $0x10,%ebp
   1f82f:	0f 44 d7             	cmove  %edi,%edx
   1f832:	83 ec 04             	sub    $0x4,%esp
   1f835:	51                   	push   %ecx
   1f836:	50                   	push   %eax
   1f837:	52                   	push   %edx
   1f838:	e8 13 a5 00 00       	call   29d50 <__ref_alu_add>
   1f83d:	89 34 24             	mov    %esi,(%esp)
   1f840:	89 46 0c             	mov    %eax,0xc(%esi)
   1f843:	e8 48 2d ff ff       	call   12590 <operand_write>
   1f848:	83 c4 1c             	add    $0x1c,%esp
   1f84b:	5b                   	pop    %ebx
   1f84c:	5e                   	pop    %esi
   1f84d:	5f                   	pop    %edi
   1f84e:	5d                   	pop    %ebp
   1f84f:	c3                   	ret    
   1f850:	0f be c0             	movsbl %al,%eax
   1f853:	eb bc                	jmp    1f811 <instr_execute_2op+0x61>
   1f855:	8d 76 00             	lea    0x0(%esi),%esi
   1f858:	0f be d2             	movsbl %dl,%edx
   1f85b:	eb d5                	jmp    1f832 <instr_execute_2op+0x82>
   1f85d:	e8 1e ff ff ff       	call   1f780 <sign_ext.part.0>
   1f862:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f869:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001f870 <__ref_add_r2rm_b>:
   1f870:	55                   	push   %ebp
   1f871:	57                   	push   %edi
   1f872:	56                   	push   %esi
   1f873:	53                   	push   %ebx
   1f874:	e8 07 4c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f879:	81 c3 87 f7 02 00    	add    $0x2f787,%ebx
   1f87f:	83 ec 10             	sub    $0x10,%esp
   1f882:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f888:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f88e:	56                   	push   %esi
   1f88f:	57                   	push   %edi
   1f890:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1f894:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1f89b:	83 c0 01             	add    $0x1,%eax
   1f89e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1f8a5:	50                   	push   %eax
   1f8a6:	e8 f5 25 ff ff       	call   11ea0 <modrm_r_rm>
   1f8ab:	8b 4e 10             	mov    0x10(%esi),%ecx
   1f8ae:	83 c4 10             	add    $0x10,%esp
   1f8b1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1f8b7:	8d 68 01             	lea    0x1(%eax),%ebp
   1f8ba:	89 e8                	mov    %ebp,%eax
   1f8bc:	0f b6 c0             	movzbl %al,%eax
   1f8bf:	83 f9 08             	cmp    $0x8,%ecx
   1f8c2:	74 12                	je     1f8d6 <__ref_add_r2rm_b+0x66>
   1f8c4:	83 f9 10             	cmp    $0x10,%ecx
   1f8c7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1f8cd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1f8d3:	0f 45 d1             	cmovne %ecx,%edx
   1f8d6:	83 ec 0c             	sub    $0xc,%esp
   1f8d9:	56                   	push   %esi
   1f8da:	57                   	push   %edi
   1f8db:	50                   	push   %eax
   1f8dc:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1f8e2:	52                   	push   %edx
   1f8e3:	50                   	push   %eax
   1f8e4:	e8 b7 28 ff ff       	call   121a0 <print_asm_2>
   1f8e9:	83 c4 20             	add    $0x20,%esp
   1f8ec:	e8 bf fe ff ff       	call   1f7b0 <instr_execute_2op>
   1f8f1:	83 c4 0c             	add    $0xc,%esp
   1f8f4:	89 e8                	mov    %ebp,%eax
   1f8f6:	5b                   	pop    %ebx
   1f8f7:	5e                   	pop    %esi
   1f8f8:	5f                   	pop    %edi
   1f8f9:	5d                   	pop    %ebp
   1f8fa:	c3                   	ret    
   1f8fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f8ff:	90                   	nop

0001f900 <__ref_add_r2rm_v>:
   1f900:	55                   	push   %ebp
   1f901:	57                   	push   %edi
   1f902:	56                   	push   %esi
   1f903:	53                   	push   %ebx
   1f904:	e8 77 4b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f909:	81 c3 f7 f6 02 00    	add    $0x2f6f7,%ebx
   1f90f:	83 ec 10             	sub    $0x10,%esp
   1f912:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1f918:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f91e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f924:	0f b6 00             	movzbl (%eax),%eax
   1f927:	56                   	push   %esi
   1f928:	57                   	push   %edi
   1f929:	89 46 10             	mov    %eax,0x10(%esi)
   1f92c:	89 47 10             	mov    %eax,0x10(%edi)
   1f92f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1f933:	83 c0 01             	add    $0x1,%eax
   1f936:	50                   	push   %eax
   1f937:	e8 64 25 ff ff       	call   11ea0 <modrm_r_rm>
   1f93c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1f93f:	83 c4 10             	add    $0x10,%esp
   1f942:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1f948:	8d 68 01             	lea    0x1(%eax),%ebp
   1f94b:	89 e8                	mov    %ebp,%eax
   1f94d:	0f b6 c0             	movzbl %al,%eax
   1f950:	83 f9 08             	cmp    $0x8,%ecx
   1f953:	74 12                	je     1f967 <__ref_add_r2rm_v+0x67>
   1f955:	83 f9 10             	cmp    $0x10,%ecx
   1f958:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1f95e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1f964:	0f 45 d1             	cmovne %ecx,%edx
   1f967:	83 ec 0c             	sub    $0xc,%esp
   1f96a:	56                   	push   %esi
   1f96b:	57                   	push   %edi
   1f96c:	50                   	push   %eax
   1f96d:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1f973:	52                   	push   %edx
   1f974:	50                   	push   %eax
   1f975:	e8 26 28 ff ff       	call   121a0 <print_asm_2>
   1f97a:	83 c4 20             	add    $0x20,%esp
   1f97d:	e8 2e fe ff ff       	call   1f7b0 <instr_execute_2op>
   1f982:	83 c4 0c             	add    $0xc,%esp
   1f985:	89 e8                	mov    %ebp,%eax
   1f987:	5b                   	pop    %ebx
   1f988:	5e                   	pop    %esi
   1f989:	5f                   	pop    %edi
   1f98a:	5d                   	pop    %ebp
   1f98b:	c3                   	ret    
   1f98c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001f990 <__ref_add_rm2r_b>:
   1f990:	55                   	push   %ebp
   1f991:	57                   	push   %edi
   1f992:	56                   	push   %esi
   1f993:	53                   	push   %ebx
   1f994:	e8 e7 4a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1f999:	81 c3 67 f6 02 00    	add    $0x2f667,%ebx
   1f99f:	83 ec 10             	sub    $0x10,%esp
   1f9a2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1f9a8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1f9ae:	57                   	push   %edi
   1f9af:	56                   	push   %esi
   1f9b0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1f9b4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   1f9bb:	83 c0 01             	add    $0x1,%eax
   1f9be:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1f9c5:	50                   	push   %eax
   1f9c6:	e8 d5 24 ff ff       	call   11ea0 <modrm_r_rm>
   1f9cb:	8b 4e 10             	mov    0x10(%esi),%ecx
   1f9ce:	83 c4 10             	add    $0x10,%esp
   1f9d1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1f9d7:	8d 68 01             	lea    0x1(%eax),%ebp
   1f9da:	89 e8                	mov    %ebp,%eax
   1f9dc:	0f b6 c0             	movzbl %al,%eax
   1f9df:	83 f9 08             	cmp    $0x8,%ecx
   1f9e2:	74 12                	je     1f9f6 <__ref_add_rm2r_b+0x66>
   1f9e4:	83 f9 10             	cmp    $0x10,%ecx
   1f9e7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1f9ed:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1f9f3:	0f 45 d1             	cmovne %ecx,%edx
   1f9f6:	83 ec 0c             	sub    $0xc,%esp
   1f9f9:	56                   	push   %esi
   1f9fa:	57                   	push   %edi
   1f9fb:	50                   	push   %eax
   1f9fc:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1fa02:	52                   	push   %edx
   1fa03:	50                   	push   %eax
   1fa04:	e8 97 27 ff ff       	call   121a0 <print_asm_2>
   1fa09:	83 c4 20             	add    $0x20,%esp
   1fa0c:	e8 9f fd ff ff       	call   1f7b0 <instr_execute_2op>
   1fa11:	83 c4 0c             	add    $0xc,%esp
   1fa14:	89 e8                	mov    %ebp,%eax
   1fa16:	5b                   	pop    %ebx
   1fa17:	5e                   	pop    %esi
   1fa18:	5f                   	pop    %edi
   1fa19:	5d                   	pop    %ebp
   1fa1a:	c3                   	ret    
   1fa1b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1fa1f:	90                   	nop

0001fa20 <__ref_add_rm2r_v>:
   1fa20:	55                   	push   %ebp
   1fa21:	57                   	push   %edi
   1fa22:	56                   	push   %esi
   1fa23:	53                   	push   %ebx
   1fa24:	e8 57 4a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fa29:	81 c3 d7 f5 02 00    	add    $0x2f5d7,%ebx
   1fa2f:	83 ec 10             	sub    $0x10,%esp
   1fa32:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1fa38:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   1fa3e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1fa44:	0f b6 00             	movzbl (%eax),%eax
   1fa47:	57                   	push   %edi
   1fa48:	89 46 10             	mov    %eax,0x10(%esi)
   1fa4b:	56                   	push   %esi
   1fa4c:	89 47 10             	mov    %eax,0x10(%edi)
   1fa4f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   1fa53:	83 c0 01             	add    $0x1,%eax
   1fa56:	50                   	push   %eax
   1fa57:	e8 44 24 ff ff       	call   11ea0 <modrm_r_rm>
   1fa5c:	8b 4e 10             	mov    0x10(%esi),%ecx
   1fa5f:	83 c4 10             	add    $0x10,%esp
   1fa62:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   1fa68:	8d 68 01             	lea    0x1(%eax),%ebp
   1fa6b:	89 e8                	mov    %ebp,%eax
   1fa6d:	0f b6 c0             	movzbl %al,%eax
   1fa70:	83 f9 08             	cmp    $0x8,%ecx
   1fa73:	74 12                	je     1fa87 <__ref_add_rm2r_v+0x67>
   1fa75:	83 f9 10             	cmp    $0x10,%ecx
   1fa78:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   1fa7e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   1fa84:	0f 45 d1             	cmovne %ecx,%edx
   1fa87:	83 ec 0c             	sub    $0xc,%esp
   1fa8a:	56                   	push   %esi
   1fa8b:	57                   	push   %edi
   1fa8c:	50                   	push   %eax
   1fa8d:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1fa93:	52                   	push   %edx
   1fa94:	50                   	push   %eax
   1fa95:	e8 06 27 ff ff       	call   121a0 <print_asm_2>
   1fa9a:	83 c4 20             	add    $0x20,%esp
   1fa9d:	e8 0e fd ff ff       	call   1f7b0 <instr_execute_2op>
   1faa2:	83 c4 0c             	add    $0xc,%esp
   1faa5:	89 e8                	mov    %ebp,%eax
   1faa7:	5b                   	pop    %ebx
   1faa8:	5e                   	pop    %esi
   1faa9:	5f                   	pop    %edi
   1faaa:	5d                   	pop    %ebp
   1faab:	c3                   	ret    
   1faac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001fab0 <__ref_add_i2rm_b>:
   1fab0:	55                   	push   %ebp
   1fab1:	57                   	push   %edi
   1fab2:	56                   	push   %esi
   1fab3:	53                   	push   %ebx
   1fab4:	e8 c7 49 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fab9:	81 c3 47 f5 02 00    	add    $0x2f547,%ebx
   1fabf:	83 ec 24             	sub    $0x24,%esp
   1fac2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1fac6:	8d 45 01             	lea    0x1(%ebp),%eax
   1fac9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1facf:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1fad5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1fadc:	52                   	push   %edx
   1fadd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1fae4:	89 54 24 18          	mov    %edx,0x18(%esp)
   1fae8:	50                   	push   %eax
   1fae9:	e8 92 24 ff ff       	call   11f80 <modrm_rm>
   1faee:	8b 77 10             	mov    0x10(%edi),%esi
   1faf1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1faf5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1faf9:	83 c0 01             	add    $0x1,%eax
   1fafc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1fb02:	83 c4 10             	add    $0x10,%esp
   1fb05:	01 c5                	add    %eax,%ebp
   1fb07:	c1 ee 03             	shr    $0x3,%esi
   1fb0a:	89 6f 04             	mov    %ebp,0x4(%edi)
   1fb0d:	01 c6                	add    %eax,%esi
   1fb0f:	8b 6a 10             	mov    0x10(%edx),%ebp
   1fb12:	89 f0                	mov    %esi,%eax
   1fb14:	0f b6 c8             	movzbl %al,%ecx
   1fb17:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1fb1d:	83 fd 08             	cmp    $0x8,%ebp
   1fb20:	74 12                	je     1fb34 <__ref_add_i2rm_b+0x84>
   1fb22:	83 fd 10             	cmp    $0x10,%ebp
   1fb25:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1fb2b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1fb31:	0f 45 c5             	cmovne %ebp,%eax
   1fb34:	83 ec 0c             	sub    $0xc,%esp
   1fb37:	52                   	push   %edx
   1fb38:	57                   	push   %edi
   1fb39:	51                   	push   %ecx
   1fb3a:	50                   	push   %eax
   1fb3b:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1fb41:	50                   	push   %eax
   1fb42:	e8 59 26 ff ff       	call   121a0 <print_asm_2>
   1fb47:	83 c4 20             	add    $0x20,%esp
   1fb4a:	e8 61 fc ff ff       	call   1f7b0 <instr_execute_2op>
   1fb4f:	83 c4 1c             	add    $0x1c,%esp
   1fb52:	89 f0                	mov    %esi,%eax
   1fb54:	5b                   	pop    %ebx
   1fb55:	5e                   	pop    %esi
   1fb56:	5f                   	pop    %edi
   1fb57:	5d                   	pop    %ebp
   1fb58:	c3                   	ret    
   1fb59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001fb60 <__ref_add_i2rm_v>:
   1fb60:	55                   	push   %ebp
   1fb61:	57                   	push   %edi
   1fb62:	56                   	push   %esi
   1fb63:	53                   	push   %ebx
   1fb64:	e8 17 49 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fb69:	81 c3 97 f4 02 00    	add    $0x2f497,%ebx
   1fb6f:	83 ec 24             	sub    $0x24,%esp
   1fb72:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1fb76:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1fb7c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1fb82:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1fb88:	0f b6 00             	movzbl (%eax),%eax
   1fb8b:	89 42 10             	mov    %eax,0x10(%edx)
   1fb8e:	52                   	push   %edx
   1fb8f:	89 47 10             	mov    %eax,0x10(%edi)
   1fb92:	8d 45 01             	lea    0x1(%ebp),%eax
   1fb95:	89 54 24 18          	mov    %edx,0x18(%esp)
   1fb99:	50                   	push   %eax
   1fb9a:	e8 e1 23 ff ff       	call   11f80 <modrm_rm>
   1fb9f:	8b 77 10             	mov    0x10(%edi),%esi
   1fba2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1fba6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1fbaa:	83 c0 01             	add    $0x1,%eax
   1fbad:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1fbb3:	83 c4 10             	add    $0x10,%esp
   1fbb6:	01 c5                	add    %eax,%ebp
   1fbb8:	c1 ee 03             	shr    $0x3,%esi
   1fbbb:	89 6f 04             	mov    %ebp,0x4(%edi)
   1fbbe:	01 c6                	add    %eax,%esi
   1fbc0:	8b 6a 10             	mov    0x10(%edx),%ebp
   1fbc3:	89 f0                	mov    %esi,%eax
   1fbc5:	0f b6 c8             	movzbl %al,%ecx
   1fbc8:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1fbce:	83 fd 08             	cmp    $0x8,%ebp
   1fbd1:	74 12                	je     1fbe5 <__ref_add_i2rm_v+0x85>
   1fbd3:	83 fd 10             	cmp    $0x10,%ebp
   1fbd6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1fbdc:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1fbe2:	0f 45 c5             	cmovne %ebp,%eax
   1fbe5:	83 ec 0c             	sub    $0xc,%esp
   1fbe8:	52                   	push   %edx
   1fbe9:	57                   	push   %edi
   1fbea:	51                   	push   %ecx
   1fbeb:	50                   	push   %eax
   1fbec:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1fbf2:	50                   	push   %eax
   1fbf3:	e8 a8 25 ff ff       	call   121a0 <print_asm_2>
   1fbf8:	83 c4 20             	add    $0x20,%esp
   1fbfb:	e8 b0 fb ff ff       	call   1f7b0 <instr_execute_2op>
   1fc00:	83 c4 1c             	add    $0x1c,%esp
   1fc03:	89 f0                	mov    %esi,%eax
   1fc05:	5b                   	pop    %ebx
   1fc06:	5e                   	pop    %esi
   1fc07:	5f                   	pop    %edi
   1fc08:	5d                   	pop    %ebp
   1fc09:	c3                   	ret    
   1fc0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001fc10 <__ref_add_i2rm_bv>:
   1fc10:	55                   	push   %ebp
   1fc11:	57                   	push   %edi
   1fc12:	56                   	push   %esi
   1fc13:	53                   	push   %ebx
   1fc14:	e8 67 48 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fc19:	81 c3 e7 f3 02 00    	add    $0x2f3e7,%ebx
   1fc1f:	83 ec 24             	sub    $0x24,%esp
   1fc22:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   1fc26:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1fc2c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1fc32:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   1fc38:	0f b6 00             	movzbl (%eax),%eax
   1fc3b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   1fc42:	89 42 10             	mov    %eax,0x10(%edx)
   1fc45:	8d 45 01             	lea    0x1(%ebp),%eax
   1fc48:	52                   	push   %edx
   1fc49:	89 54 24 18          	mov    %edx,0x18(%esp)
   1fc4d:	50                   	push   %eax
   1fc4e:	e8 2d 23 ff ff       	call   11f80 <modrm_rm>
   1fc53:	8b 77 10             	mov    0x10(%edi),%esi
   1fc56:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   1fc5a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   1fc5e:	83 c0 01             	add    $0x1,%eax
   1fc61:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   1fc67:	83 c4 10             	add    $0x10,%esp
   1fc6a:	01 c5                	add    %eax,%ebp
   1fc6c:	c1 ee 03             	shr    $0x3,%esi
   1fc6f:	89 6f 04             	mov    %ebp,0x4(%edi)
   1fc72:	01 c6                	add    %eax,%esi
   1fc74:	8b 6a 10             	mov    0x10(%edx),%ebp
   1fc77:	89 f0                	mov    %esi,%eax
   1fc79:	0f b6 c8             	movzbl %al,%ecx
   1fc7c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1fc82:	83 fd 08             	cmp    $0x8,%ebp
   1fc85:	74 12                	je     1fc99 <__ref_add_i2rm_bv+0x89>
   1fc87:	83 fd 10             	cmp    $0x10,%ebp
   1fc8a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   1fc90:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   1fc96:	0f 45 c5             	cmovne %ebp,%eax
   1fc99:	83 ec 0c             	sub    $0xc,%esp
   1fc9c:	52                   	push   %edx
   1fc9d:	57                   	push   %edi
   1fc9e:	51                   	push   %ecx
   1fc9f:	50                   	push   %eax
   1fca0:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1fca6:	50                   	push   %eax
   1fca7:	e8 f4 24 ff ff       	call   121a0 <print_asm_2>
   1fcac:	83 c4 20             	add    $0x20,%esp
   1fcaf:	e8 fc fa ff ff       	call   1f7b0 <instr_execute_2op>
   1fcb4:	83 c4 1c             	add    $0x1c,%esp
   1fcb7:	89 f0                	mov    %esi,%eax
   1fcb9:	5b                   	pop    %ebx
   1fcba:	5e                   	pop    %esi
   1fcbb:	5f                   	pop    %edi
   1fcbc:	5d                   	pop    %ebp
   1fcbd:	c3                   	ret    
   1fcbe:	66 90                	xchg   %ax,%ax

0001fcc0 <__ref_add_i2a_b>:
   1fcc0:	53                   	push   %ebx
   1fcc1:	e8 ba 47 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fcc6:	81 c3 3a f3 02 00    	add    $0x2f33a,%ebx
   1fccc:	83 ec 14             	sub    $0x14,%esp
   1fccf:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   1fcd3:	83 c1 01             	add    $0x1,%ecx
   1fcd6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   1fcdc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   1fce2:	89 48 04             	mov    %ecx,0x4(%eax)
   1fce5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   1fcec:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   1fcf3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1fcf9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   1fcfd:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   1fd03:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   1fd0a:	52                   	push   %edx
   1fd0b:	50                   	push   %eax
   1fd0c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   1fd12:	6a 02                	push   $0x2
   1fd14:	50                   	push   %eax
   1fd15:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1fd1b:	50                   	push   %eax
   1fd1c:	e8 7f 24 ff ff       	call   121a0 <print_asm_2>
   1fd21:	83 c4 20             	add    $0x20,%esp
   1fd24:	e8 87 fa ff ff       	call   1f7b0 <instr_execute_2op>
   1fd29:	83 c4 08             	add    $0x8,%esp
   1fd2c:	b8 02 00 00 00       	mov    $0x2,%eax
   1fd31:	5b                   	pop    %ebx
   1fd32:	c3                   	ret    
   1fd33:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1fd3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001fd40 <__ref_add_i2a_v>:
   1fd40:	55                   	push   %ebp
   1fd41:	57                   	push   %edi
   1fd42:	56                   	push   %esi
   1fd43:	53                   	push   %ebx
   1fd44:	e8 37 47 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fd49:	81 c3 b7 f2 02 00    	add    $0x2f2b7,%ebx
   1fd4f:	83 ec 0c             	sub    $0xc,%esp
   1fd52:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   1fd58:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   1fd5e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   1fd64:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   1fd6a:	0f b6 08             	movzbl (%eax),%ecx
   1fd6d:	8b 44 24 20          	mov    0x20(%esp),%eax
   1fd71:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   1fd77:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   1fd7b:	89 cf                	mov    %ecx,%edi
   1fd7d:	83 c0 01             	add    $0x1,%eax
   1fd80:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1fd83:	c1 ef 03             	shr    $0x3,%edi
   1fd86:	89 4a 10             	mov    %ecx,0x10(%edx)
   1fd89:	89 42 04             	mov    %eax,0x4(%edx)
   1fd8c:	83 c7 01             	add    $0x1,%edi
   1fd8f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   1fd96:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   1fd9d:	83 f9 08             	cmp    $0x8,%ecx
   1fda0:	74 12                	je     1fdb4 <__ref_add_i2a_v+0x74>
   1fda2:	83 f9 10             	cmp    $0x10,%ecx
   1fda5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   1fdab:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   1fdb1:	0f 45 f0             	cmovne %eax,%esi
   1fdb4:	83 ec 0c             	sub    $0xc,%esp
   1fdb7:	8d 83 a6 6f fe ff    	lea    -0x1905a(%ebx),%eax
   1fdbd:	55                   	push   %ebp
   1fdbe:	52                   	push   %edx
   1fdbf:	57                   	push   %edi
   1fdc0:	56                   	push   %esi
   1fdc1:	50                   	push   %eax
   1fdc2:	e8 d9 23 ff ff       	call   121a0 <print_asm_2>
   1fdc7:	83 c4 20             	add    $0x20,%esp
   1fdca:	e8 e1 f9 ff ff       	call   1f7b0 <instr_execute_2op>
   1fdcf:	83 c4 0c             	add    $0xc,%esp
   1fdd2:	89 f8                	mov    %edi,%eax
   1fdd4:	5b                   	pop    %ebx
   1fdd5:	5e                   	pop    %esi
   1fdd6:	5f                   	pop    %edi
   1fdd7:	5d                   	pop    %ebp
   1fdd8:	c3                   	ret    
   1fdd9:	66 90                	xchg   %ax,%ax
   1fddb:	66 90                	xchg   %ax,%ax
   1fddd:	66 90                	xchg   %ax,%ax
   1fddf:	90                   	nop

0001fde0 <__ref_cld>:
   1fde0:	53                   	push   %ebx
   1fde1:	e8 9a 46 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fde6:	81 c3 1a f2 02 00    	add    $0x2f21a,%ebx
   1fdec:	83 ec 08             	sub    $0x8,%esp
   1fdef:	e8 ec a9 00 00       	call   2a7e0 <set_ref>
   1fdf4:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1fdfa:	83 ec 04             	sub    $0x4,%esp
   1fdfd:	80 60 25 fb          	andb   $0xfb,0x25(%eax)
   1fe01:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1fe07:	6a 01                	push   $0x1
   1fe09:	50                   	push   %eax
   1fe0a:	8d 83 69 67 fe ff    	lea    -0x19897(%ebx),%eax
   1fe10:	50                   	push   %eax
   1fe11:	e8 aa 21 ff ff       	call   11fc0 <print_asm_0>
   1fe16:	83 c4 18             	add    $0x18,%esp
   1fe19:	b8 01 00 00 00       	mov    $0x1,%eax
   1fe1e:	5b                   	pop    %ebx
   1fe1f:	c3                   	ret    

0001fe20 <__ref_clc>:
   1fe20:	53                   	push   %ebx
   1fe21:	e8 5a 46 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fe26:	81 c3 da f1 02 00    	add    $0x2f1da,%ebx
   1fe2c:	83 ec 08             	sub    $0x8,%esp
   1fe2f:	e8 ac a9 00 00       	call   2a7e0 <set_ref>
   1fe34:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1fe3a:	83 ec 04             	sub    $0x4,%esp
   1fe3d:	80 60 24 fe          	andb   $0xfe,0x24(%eax)
   1fe41:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1fe47:	6a 01                	push   $0x1
   1fe49:	50                   	push   %eax
   1fe4a:	8d 83 6d 67 fe ff    	lea    -0x19893(%ebx),%eax
   1fe50:	50                   	push   %eax
   1fe51:	e8 6a 21 ff ff       	call   11fc0 <print_asm_0>
   1fe56:	83 c4 18             	add    $0x18,%esp
   1fe59:	b8 01 00 00 00       	mov    $0x1,%eax
   1fe5e:	5b                   	pop    %ebx
   1fe5f:	c3                   	ret    

0001fe60 <__ref_sahf>:
   1fe60:	53                   	push   %ebx
   1fe61:	e8 1a 46 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fe66:	81 c3 9a f1 02 00    	add    $0x2f19a,%ebx
   1fe6c:	83 ec 08             	sub    $0x8,%esp
   1fe6f:	e8 6c a9 00 00       	call   2a7e0 <set_ref>
   1fe74:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1fe7a:	83 ec 04             	sub    $0x4,%esp
   1fe7d:	0f b6 50 01          	movzbl 0x1(%eax),%edx
   1fe81:	66 89 50 24          	mov    %dx,0x24(%eax)
   1fe85:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1fe8b:	6a 01                	push   $0x1
   1fe8d:	50                   	push   %eax
   1fe8e:	8d 83 71 67 fe ff    	lea    -0x1988f(%ebx),%eax
   1fe94:	50                   	push   %eax
   1fe95:	e8 26 21 ff ff       	call   11fc0 <print_asm_0>
   1fe9a:	83 c4 18             	add    $0x18,%esp
   1fe9d:	b8 01 00 00 00       	mov    $0x1,%eax
   1fea2:	5b                   	pop    %ebx
   1fea3:	c3                   	ret    
   1fea4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1feab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1feaf:	90                   	nop

0001feb0 <__ref_cli>:
   1feb0:	53                   	push   %ebx
   1feb1:	e8 ca 45 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1feb6:	81 c3 4a f1 02 00    	add    $0x2f14a,%ebx
   1febc:	83 ec 08             	sub    $0x8,%esp
   1febf:	e8 1c a9 00 00       	call   2a7e0 <set_ref>
   1fec4:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1feca:	83 ec 04             	sub    $0x4,%esp
   1fecd:	80 60 25 fd          	andb   $0xfd,0x25(%eax)
   1fed1:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1fed7:	6a 01                	push   $0x1
   1fed9:	50                   	push   %eax
   1feda:	8d 83 c5 66 fe ff    	lea    -0x1993b(%ebx),%eax
   1fee0:	50                   	push   %eax
   1fee1:	e8 da 20 ff ff       	call   11fc0 <print_asm_0>
   1fee6:	83 c4 18             	add    $0x18,%esp
   1fee9:	b8 01 00 00 00       	mov    $0x1,%eax
   1feee:	5b                   	pop    %ebx
   1feef:	c3                   	ret    

0001fef0 <__ref_sti>:
   1fef0:	53                   	push   %ebx
   1fef1:	e8 8a 45 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1fef6:	81 c3 0a f1 02 00    	add    $0x2f10a,%ebx
   1fefc:	83 ec 08             	sub    $0x8,%esp
   1feff:	e8 dc a8 00 00       	call   2a7e0 <set_ref>
   1ff04:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   1ff0a:	83 ec 04             	sub    $0x4,%esp
   1ff0d:	80 48 25 02          	orb    $0x2,0x25(%eax)
   1ff11:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   1ff17:	6a 01                	push   $0x1
   1ff19:	50                   	push   %eax
   1ff1a:	8d 83 9d 67 fe ff    	lea    -0x19863(%ebx),%eax
   1ff20:	50                   	push   %eax
   1ff21:	e8 9a 20 ff ff       	call   11fc0 <print_asm_0>
   1ff26:	83 c4 18             	add    $0x18,%esp
   1ff29:	b8 01 00 00 00       	mov    $0x1,%eax
   1ff2e:	5b                   	pop    %ebx
   1ff2f:	c3                   	ret    

0001ff30 <__ref_rep_repe>:
   1ff30:	55                   	push   %ebp
   1ff31:	57                   	push   %edi
   1ff32:	56                   	push   %esi
   1ff33:	53                   	push   %ebx
   1ff34:	e8 47 45 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   1ff39:	81 c3 c7 f0 02 00    	add    $0x2f0c7,%ebx
   1ff3f:	83 ec 1c             	sub    $0x1c,%esp
   1ff42:	e8 99 a8 00 00       	call   2a7e0 <set_ref>
   1ff47:	8b 44 24 30          	mov    0x30(%esp),%eax
   1ff4b:	83 ec 08             	sub    $0x8,%esp
   1ff4e:	6a 01                	push   $0x1
   1ff50:	8d 70 01             	lea    0x1(%eax),%esi
   1ff53:	56                   	push   %esi
   1ff54:	e8 47 ed ff ff       	call   1eca0 <instr_fetch>
   1ff59:	8d 93 9a 54 fe ff    	lea    -0x1ab66(%ebx),%edx
   1ff5f:	88 44 24 1f          	mov    %al,0x1f(%esp)
   1ff63:	83 c4 0c             	add    $0xc,%esp
   1ff66:	89 c7                	mov    %eax,%edi
   1ff68:	6a 02                	push   $0x2
   1ff6a:	52                   	push   %edx
   1ff6b:	8d 93 fd 6b fe ff    	lea    -0x19403(%ebx),%edx
   1ff71:	52                   	push   %edx
   1ff72:	e8 49 20 ff ff       	call   11fc0 <print_asm_0>
   1ff77:	89 f8                	mov    %edi,%eax
   1ff79:	83 c4 10             	add    $0x10,%esp
   1ff7c:	3c c3                	cmp    $0xc3,%al
   1ff7e:	74 50                	je     1ffd0 <__ref_rep_repe+0xa0>
   1ff80:	8d ab 60 32 05 00    	lea    0x53260(%ebx),%ebp
   1ff86:	8d 9b 40 0e 00 00    	lea    0xe40(%ebx),%ebx
   1ff8c:	0f b6 f8             	movzbl %al,%edi
   1ff8f:	8b 55 04             	mov    0x4(%ebp),%edx
   1ff92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ff98:	85 d2                	test   %edx,%edx
   1ff9a:	74 26                	je     1ffc2 <__ref_rep_repe+0x92>
   1ff9c:	83 ec 08             	sub    $0x8,%esp
   1ff9f:	57                   	push   %edi
   1ffa0:	56                   	push   %esi
   1ffa1:	ff 14 bb             	call   *(%ebx,%edi,4)
   1ffa4:	8b 45 04             	mov    0x4(%ebp),%eax
   1ffa7:	8d 50 ff             	lea    -0x1(%eax),%edx
   1ffaa:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   1ffaf:	83 c4 10             	add    $0x10,%esp
   1ffb2:	89 55 04             	mov    %edx,0x4(%ebp)
   1ffb5:	83 e0 f6             	and    $0xfffffff6,%eax
   1ffb8:	3c a6                	cmp    $0xa6,%al
   1ffba:	75 dc                	jne    1ff98 <__ref_rep_repe+0x68>
   1ffbc:	f6 45 24 40          	testb  $0x40,0x24(%ebp)
   1ffc0:	74 d6                	je     1ff98 <__ref_rep_repe+0x68>
   1ffc2:	83 c4 1c             	add    $0x1c,%esp
   1ffc5:	b8 02 00 00 00       	mov    $0x2,%eax
   1ffca:	5b                   	pop    %ebx
   1ffcb:	5e                   	pop    %esi
   1ffcc:	5f                   	pop    %edi
   1ffcd:	5d                   	pop    %ebp
   1ffce:	c3                   	ret    
   1ffcf:	90                   	nop
   1ffd0:	83 ec 08             	sub    $0x8,%esp
   1ffd3:	8d 83 40 0e 00 00    	lea    0xe40(%ebx),%eax
   1ffd9:	68 c3 00 00 00       	push   $0xc3
   1ffde:	56                   	push   %esi
   1ffdf:	ff 90 0c 03 00 00    	call   *0x30c(%eax)
   1ffe5:	31 c0                	xor    %eax,%eax
   1ffe7:	83 c4 10             	add    $0x10,%esp
   1ffea:	83 c4 1c             	add    $0x1c,%esp
   1ffed:	5b                   	pop    %ebx
   1ffee:	5e                   	pop    %esi
   1ffef:	5f                   	pop    %edi
   1fff0:	5d                   	pop    %ebp
   1fff1:	c3                   	ret    
   1fff2:	66 90                	xchg   %ax,%ax
   1fff4:	66 90                	xchg   %ax,%ax
   1fff6:	66 90                	xchg   %ax,%ax
   1fff8:	66 90                	xchg   %ax,%ax
   1fffa:	66 90                	xchg   %ax,%ax
   1fffc:	66 90                	xchg   %ax,%ax
   1fffe:	66 90                	xchg   %ax,%ax

00020000 <instr_execute_2op>:
   20000:	57                   	push   %edi
   20001:	56                   	push   %esi
   20002:	53                   	push   %ebx
   20003:	e8 78 44 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20008:	81 c3 f8 ef 02 00    	add    $0x2eff8,%ebx
   2000e:	e8 cd a7 00 00       	call   2a7e0 <set_ref>
   20013:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   20019:	83 ec 0c             	sub    $0xc,%esp
   2001c:	57                   	push   %edi
   2001d:	e8 be 23 ff ff       	call   123e0 <operand_read>
   20022:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   20028:	89 34 24             	mov    %esi,(%esp)
   2002b:	e8 b0 23 ff ff       	call   123e0 <operand_read>
   20030:	83 c4 0c             	add    $0xc,%esp
   20033:	ff 76 10             	pushl  0x10(%esi)
   20036:	ff 76 0c             	pushl  0xc(%esi)
   20039:	ff 77 0c             	pushl  0xc(%edi)
   2003c:	e8 ff a4 00 00       	call   2a540 <__ref_alu_shl>
   20041:	89 34 24             	mov    %esi,(%esp)
   20044:	89 46 0c             	mov    %eax,0xc(%esi)
   20047:	e8 44 25 ff ff       	call   12590 <operand_write>
   2004c:	83 c4 10             	add    $0x10,%esp
   2004f:	5b                   	pop    %ebx
   20050:	5e                   	pop    %esi
   20051:	5f                   	pop    %edi
   20052:	c3                   	ret    
   20053:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2005a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00020060 <instr_execute_1op>:
   20060:	56                   	push   %esi
   20061:	53                   	push   %ebx
   20062:	e8 19 44 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20067:	81 c3 99 ef 02 00    	add    $0x2ef99,%ebx
   2006d:	83 ec 04             	sub    $0x4,%esp
   20070:	e8 6b a7 00 00       	call   2a7e0 <set_ref>
   20075:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2007b:	83 ec 0c             	sub    $0xc,%esp
   2007e:	56                   	push   %esi
   2007f:	e8 5c 23 ff ff       	call   123e0 <operand_read>
   20084:	83 c4 0c             	add    $0xc,%esp
   20087:	ff 76 10             	pushl  0x10(%esi)
   2008a:	ff 76 0c             	pushl  0xc(%esi)
   2008d:	6a 01                	push   $0x1
   2008f:	e8 ac a4 00 00       	call   2a540 <__ref_alu_shl>
   20094:	89 34 24             	mov    %esi,(%esp)
   20097:	89 46 0c             	mov    %eax,0xc(%esi)
   2009a:	e8 f1 24 ff ff       	call   12590 <operand_write>
   2009f:	83 c4 14             	add    $0x14,%esp
   200a2:	5b                   	pop    %ebx
   200a3:	5e                   	pop    %esi
   200a4:	c3                   	ret    
   200a5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   200ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000200b0 <__ref_shl_i2rm_b>:
   200b0:	55                   	push   %ebp
   200b1:	57                   	push   %edi
   200b2:	56                   	push   %esi
   200b3:	53                   	push   %ebx
   200b4:	e8 c7 43 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   200b9:	81 c3 47 ef 02 00    	add    $0x2ef47,%ebx
   200bf:	83 ec 24             	sub    $0x24,%esp
   200c2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   200c6:	8d 45 01             	lea    0x1(%ebp),%eax
   200c9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   200cf:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   200d5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   200dc:	52                   	push   %edx
   200dd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   200e4:	89 54 24 18          	mov    %edx,0x18(%esp)
   200e8:	50                   	push   %eax
   200e9:	e8 92 1e ff ff       	call   11f80 <modrm_rm>
   200ee:	8b 77 10             	mov    0x10(%edi),%esi
   200f1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   200f5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   200f9:	83 c0 01             	add    $0x1,%eax
   200fc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   20102:	83 c4 10             	add    $0x10,%esp
   20105:	01 c5                	add    %eax,%ebp
   20107:	c1 ee 03             	shr    $0x3,%esi
   2010a:	89 6f 04             	mov    %ebp,0x4(%edi)
   2010d:	01 c6                	add    %eax,%esi
   2010f:	8b 6a 10             	mov    0x10(%edx),%ebp
   20112:	89 f0                	mov    %esi,%eax
   20114:	0f b6 c8             	movzbl %al,%ecx
   20117:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2011d:	83 fd 08             	cmp    $0x8,%ebp
   20120:	74 12                	je     20134 <__ref_shl_i2rm_b+0x84>
   20122:	83 fd 10             	cmp    $0x10,%ebp
   20125:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2012b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   20131:	0f 45 c5             	cmovne %ebp,%eax
   20134:	83 ec 0c             	sub    $0xc,%esp
   20137:	52                   	push   %edx
   20138:	57                   	push   %edi
   20139:	51                   	push   %ecx
   2013a:	50                   	push   %eax
   2013b:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   20141:	50                   	push   %eax
   20142:	e8 59 20 ff ff       	call   121a0 <print_asm_2>
   20147:	83 c4 20             	add    $0x20,%esp
   2014a:	e8 b1 fe ff ff       	call   20000 <instr_execute_2op>
   2014f:	83 c4 1c             	add    $0x1c,%esp
   20152:	89 f0                	mov    %esi,%eax
   20154:	5b                   	pop    %ebx
   20155:	5e                   	pop    %esi
   20156:	5f                   	pop    %edi
   20157:	5d                   	pop    %ebp
   20158:	c3                   	ret    
   20159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00020160 <__ref_shl_i2rm_bv>:
   20160:	55                   	push   %ebp
   20161:	57                   	push   %edi
   20162:	56                   	push   %esi
   20163:	53                   	push   %ebx
   20164:	e8 17 43 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20169:	81 c3 97 ee 02 00    	add    $0x2ee97,%ebx
   2016f:	83 ec 24             	sub    $0x24,%esp
   20172:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   20176:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2017c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   20182:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   20188:	0f b6 00             	movzbl (%eax),%eax
   2018b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   20192:	89 42 10             	mov    %eax,0x10(%edx)
   20195:	8d 45 01             	lea    0x1(%ebp),%eax
   20198:	52                   	push   %edx
   20199:	89 54 24 18          	mov    %edx,0x18(%esp)
   2019d:	50                   	push   %eax
   2019e:	e8 dd 1d ff ff       	call   11f80 <modrm_rm>
   201a3:	8b 77 10             	mov    0x10(%edi),%esi
   201a6:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   201aa:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   201ae:	83 c0 01             	add    $0x1,%eax
   201b1:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   201b7:	83 c4 10             	add    $0x10,%esp
   201ba:	01 c5                	add    %eax,%ebp
   201bc:	c1 ee 03             	shr    $0x3,%esi
   201bf:	89 6f 04             	mov    %ebp,0x4(%edi)
   201c2:	01 c6                	add    %eax,%esi
   201c4:	8b 6a 10             	mov    0x10(%edx),%ebp
   201c7:	89 f0                	mov    %esi,%eax
   201c9:	0f b6 c8             	movzbl %al,%ecx
   201cc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   201d2:	83 fd 08             	cmp    $0x8,%ebp
   201d5:	74 12                	je     201e9 <__ref_shl_i2rm_bv+0x89>
   201d7:	83 fd 10             	cmp    $0x10,%ebp
   201da:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   201e0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   201e6:	0f 45 c5             	cmovne %ebp,%eax
   201e9:	83 ec 0c             	sub    $0xc,%esp
   201ec:	52                   	push   %edx
   201ed:	57                   	push   %edi
   201ee:	51                   	push   %ecx
   201ef:	50                   	push   %eax
   201f0:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   201f6:	50                   	push   %eax
   201f7:	e8 a4 1f ff ff       	call   121a0 <print_asm_2>
   201fc:	83 c4 20             	add    $0x20,%esp
   201ff:	e8 fc fd ff ff       	call   20000 <instr_execute_2op>
   20204:	83 c4 1c             	add    $0x1c,%esp
   20207:	89 f0                	mov    %esi,%eax
   20209:	5b                   	pop    %ebx
   2020a:	5e                   	pop    %esi
   2020b:	5f                   	pop    %edi
   2020c:	5d                   	pop    %ebp
   2020d:	c3                   	ret    
   2020e:	66 90                	xchg   %ax,%ax

00020210 <__ref_shl_c2rm_b>:
   20210:	55                   	push   %ebp
   20211:	57                   	push   %edi
   20212:	56                   	push   %esi
   20213:	53                   	push   %ebx
   20214:	e8 67 42 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20219:	81 c3 e7 ed 02 00    	add    $0x2ede7,%ebx
   2021f:	83 ec 14             	sub    $0x14,%esp
   20222:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   20228:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2022e:	57                   	push   %edi
   2022f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   20233:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   2023a:	83 c0 01             	add    $0x1,%eax
   2023d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   20244:	50                   	push   %eax
   20245:	e8 36 1d ff ff       	call   11f80 <modrm_rm>
   2024a:	8b 4f 10             	mov    0x10(%edi),%ecx
   2024d:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   20253:	83 c4 10             	add    $0x10,%esp
   20256:	8d 68 01             	lea    0x1(%eax),%ebp
   20259:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   20260:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   20266:	89 e8                	mov    %ebp,%eax
   20268:	0f b6 c0             	movzbl %al,%eax
   2026b:	83 f9 08             	cmp    $0x8,%ecx
   2026e:	74 12                	je     20282 <__ref_shl_c2rm_b+0x72>
   20270:	83 f9 10             	cmp    $0x10,%ecx
   20273:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   20279:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   2027f:	0f 45 d1             	cmovne %ecx,%edx
   20282:	83 ec 0c             	sub    $0xc,%esp
   20285:	57                   	push   %edi
   20286:	56                   	push   %esi
   20287:	50                   	push   %eax
   20288:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   2028e:	52                   	push   %edx
   2028f:	50                   	push   %eax
   20290:	e8 0b 1f ff ff       	call   121a0 <print_asm_2>
   20295:	83 c4 20             	add    $0x20,%esp
   20298:	e8 63 fd ff ff       	call   20000 <instr_execute_2op>
   2029d:	83 c4 0c             	add    $0xc,%esp
   202a0:	89 e8                	mov    %ebp,%eax
   202a2:	5b                   	pop    %ebx
   202a3:	5e                   	pop    %esi
   202a4:	5f                   	pop    %edi
   202a5:	5d                   	pop    %ebp
   202a6:	c3                   	ret    
   202a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   202ae:	66 90                	xchg   %ax,%ax

000202b0 <__ref_shl_c2rm_bv>:
   202b0:	55                   	push   %ebp
   202b1:	57                   	push   %edi
   202b2:	56                   	push   %esi
   202b3:	53                   	push   %ebx
   202b4:	e8 c7 41 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   202b9:	81 c3 47 ed 02 00    	add    $0x2ed47,%ebx
   202bf:	83 ec 14             	sub    $0x14,%esp
   202c2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   202c8:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   202ce:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   202d4:	0f b6 00             	movzbl (%eax),%eax
   202d7:	57                   	push   %edi
   202d8:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   202df:	89 47 10             	mov    %eax,0x10(%edi)
   202e2:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   202e6:	83 c0 01             	add    $0x1,%eax
   202e9:	50                   	push   %eax
   202ea:	e8 91 1c ff ff       	call   11f80 <modrm_rm>
   202ef:	8b 4f 10             	mov    0x10(%edi),%ecx
   202f2:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   202f8:	83 c4 10             	add    $0x10,%esp
   202fb:	8d 68 01             	lea    0x1(%eax),%ebp
   202fe:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   20305:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   2030b:	89 e8                	mov    %ebp,%eax
   2030d:	0f b6 c0             	movzbl %al,%eax
   20310:	83 f9 08             	cmp    $0x8,%ecx
   20313:	74 12                	je     20327 <__ref_shl_c2rm_bv+0x77>
   20315:	83 f9 10             	cmp    $0x10,%ecx
   20318:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2031e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   20324:	0f 45 d1             	cmovne %ecx,%edx
   20327:	83 ec 0c             	sub    $0xc,%esp
   2032a:	57                   	push   %edi
   2032b:	56                   	push   %esi
   2032c:	50                   	push   %eax
   2032d:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   20333:	52                   	push   %edx
   20334:	50                   	push   %eax
   20335:	e8 66 1e ff ff       	call   121a0 <print_asm_2>
   2033a:	83 c4 20             	add    $0x20,%esp
   2033d:	e8 be fc ff ff       	call   20000 <instr_execute_2op>
   20342:	83 c4 0c             	add    $0xc,%esp
   20345:	89 e8                	mov    %ebp,%eax
   20347:	5b                   	pop    %ebx
   20348:	5e                   	pop    %esi
   20349:	5f                   	pop    %edi
   2034a:	5d                   	pop    %ebp
   2034b:	c3                   	ret    
   2034c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00020350 <__ref_shl_rm_b>:
   20350:	55                   	push   %ebp
   20351:	57                   	push   %edi
   20352:	56                   	push   %esi
   20353:	53                   	push   %ebx
   20354:	e8 27 41 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20359:	81 c3 a7 ec 02 00    	add    $0x2eca7,%ebx
   2035f:	83 ec 14             	sub    $0x14,%esp
   20362:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   20368:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2036e:	56                   	push   %esi
   2036f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   20373:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   2037a:	83 c0 01             	add    $0x1,%eax
   2037d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   20384:	50                   	push   %eax
   20385:	e8 f6 1b ff ff       	call   11f80 <modrm_rm>
   2038a:	8b 4d 10             	mov    0x10(%ebp),%ecx
   2038d:	83 c4 10             	add    $0x10,%esp
   20390:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   20396:	8d 78 01             	lea    0x1(%eax),%edi
   20399:	89 f8                	mov    %edi,%eax
   2039b:	0f b6 c0             	movzbl %al,%eax
   2039e:	83 f9 08             	cmp    $0x8,%ecx
   203a1:	74 12                	je     203b5 <__ref_shl_rm_b+0x65>
   203a3:	83 f9 10             	cmp    $0x10,%ecx
   203a6:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   203ac:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   203b2:	0f 45 d1             	cmovne %ecx,%edx
   203b5:	56                   	push   %esi
   203b6:	50                   	push   %eax
   203b7:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   203bd:	52                   	push   %edx
   203be:	50                   	push   %eax
   203bf:	e8 dc 1c ff ff       	call   120a0 <print_asm_1>
   203c4:	e8 97 fc ff ff       	call   20060 <instr_execute_1op>
   203c9:	83 c4 1c             	add    $0x1c,%esp
   203cc:	89 f8                	mov    %edi,%eax
   203ce:	5b                   	pop    %ebx
   203cf:	5e                   	pop    %esi
   203d0:	5f                   	pop    %edi
   203d1:	5d                   	pop    %ebp
   203d2:	c3                   	ret    
   203d3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   203da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000203e0 <__ref_shl_rm_v>:
   203e0:	55                   	push   %ebp
   203e1:	57                   	push   %edi
   203e2:	56                   	push   %esi
   203e3:	53                   	push   %ebx
   203e4:	e8 97 40 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   203e9:	81 c3 17 ec 02 00    	add    $0x2ec17,%ebx
   203ef:	83 ec 14             	sub    $0x14,%esp
   203f2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   203f8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   203fe:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   20404:	0f b6 00             	movzbl (%eax),%eax
   20407:	56                   	push   %esi
   20408:	89 45 10             	mov    %eax,0x10(%ebp)
   2040b:	89 46 10             	mov    %eax,0x10(%esi)
   2040e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   20412:	83 c0 01             	add    $0x1,%eax
   20415:	50                   	push   %eax
   20416:	e8 65 1b ff ff       	call   11f80 <modrm_rm>
   2041b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   2041e:	83 c4 10             	add    $0x10,%esp
   20421:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   20427:	8d 78 01             	lea    0x1(%eax),%edi
   2042a:	89 f8                	mov    %edi,%eax
   2042c:	0f b6 c0             	movzbl %al,%eax
   2042f:	83 f9 08             	cmp    $0x8,%ecx
   20432:	74 12                	je     20446 <__ref_shl_rm_v+0x66>
   20434:	83 f9 10             	cmp    $0x10,%ecx
   20437:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2043d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   20443:	0f 45 d1             	cmovne %ecx,%edx
   20446:	56                   	push   %esi
   20447:	50                   	push   %eax
   20448:	8d 83 38 70 fe ff    	lea    -0x18fc8(%ebx),%eax
   2044e:	52                   	push   %edx
   2044f:	50                   	push   %eax
   20450:	e8 4b 1c ff ff       	call   120a0 <print_asm_1>
   20455:	e8 06 fc ff ff       	call   20060 <instr_execute_1op>
   2045a:	83 c4 1c             	add    $0x1c,%esp
   2045d:	89 f8                	mov    %edi,%eax
   2045f:	5b                   	pop    %ebx
   20460:	5e                   	pop    %esi
   20461:	5f                   	pop    %edi
   20462:	5d                   	pop    %ebp
   20463:	c3                   	ret    
   20464:	66 90                	xchg   %ax,%ax
   20466:	66 90                	xchg   %ax,%ax
   20468:	66 90                	xchg   %ax,%ax
   2046a:	66 90                	xchg   %ax,%ax
   2046c:	66 90                	xchg   %ax,%ax
   2046e:	66 90                	xchg   %ax,%ax

00020470 <HLT_Thread>:
   20470:	57                   	push   %edi
   20471:	56                   	push   %esi
   20472:	53                   	push   %ebx
   20473:	e8 08 40 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20478:	81 c3 88 eb 02 00    	add    $0x2eb88,%ebx
   2047e:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   20484:	80 be a0 00 00 00 00 	cmpb   $0x0,0xa0(%esi)
   2048b:	75 27                	jne    204b4 <HLT_Thread+0x44>
   2048d:	8d bb 04 33 05 00    	lea    0x53304(%ebx),%edi
   20493:	eb 19                	jmp    204ae <HLT_Thread+0x3e>
   20495:	8d 76 00             	lea    0x0(%esi),%esi
   20498:	83 ec 0c             	sub    $0xc,%esp
   2049b:	6a 01                	push   $0x1
   2049d:	e8 5e 3c fe ff       	call   4100 <SDL_Delay@plt>
   204a2:	83 c4 10             	add    $0x10,%esp
   204a5:	80 be a0 00 00 00 00 	cmpb   $0x0,0xa0(%esi)
   204ac:	75 06                	jne    204b4 <HLT_Thread+0x44>
   204ae:	8b 07                	mov    (%edi),%eax
   204b0:	85 c0                	test   %eax,%eax
   204b2:	75 e4                	jne    20498 <HLT_Thread+0x28>
   204b4:	5b                   	pop    %ebx
   204b5:	31 c0                	xor    %eax,%eax
   204b7:	5e                   	pop    %esi
   204b8:	5f                   	pop    %edi
   204b9:	c3                   	ret    
   204ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000204c0 <__ref_hlt>:
   204c0:	53                   	push   %ebx
   204c1:	e8 ba 3f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   204c6:	81 c3 3a eb 02 00    	add    $0x2eb3a,%ebx
   204cc:	83 ec 08             	sub    $0x8,%esp
   204cf:	e8 0c a3 00 00       	call   2a7e0 <set_ref>
   204d4:	83 ec 04             	sub    $0x4,%esp
   204d7:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   204dd:	6a 01                	push   $0x1
   204df:	50                   	push   %eax
   204e0:	8d 83 15 67 fe ff    	lea    -0x198eb(%ebx),%eax
   204e6:	50                   	push   %eax
   204e7:	e8 d4 1a ff ff       	call   11fc0 <print_asm_0>
   204ec:	58                   	pop    %eax
   204ed:	8d 83 70 14 fd ff    	lea    -0x2eb90(%ebx),%eax
   204f3:	5a                   	pop    %edx
   204f4:	6a 00                	push   $0x0
   204f6:	50                   	push   %eax
   204f7:	e8 44 3c fe ff       	call   4140 <SDL_CreateThread@plt>
   204fc:	83 c4 10             	add    $0x10,%esp
   204ff:	85 c0                	test   %eax,%eax
   20501:	74 1d                	je     20520 <__ref_hlt+0x60>
   20503:	83 ec 08             	sub    $0x8,%esp
   20506:	6a 00                	push   $0x0
   20508:	50                   	push   %eax
   20509:	e8 e2 3d fe ff       	call   42f0 <SDL_WaitThread@plt>
   2050e:	83 c4 10             	add    $0x10,%esp
   20511:	b8 01 00 00 00       	mov    $0x1,%eax
   20516:	83 c4 08             	add    $0x8,%esp
   20519:	5b                   	pop    %ebx
   2051a:	c3                   	ret    
   2051b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2051f:	90                   	nop
   20520:	e8 fb 3b fe ff       	call   4120 <SDL_GetError@plt>
   20525:	83 ec 08             	sub    $0x8,%esp
   20528:	50                   	push   %eax
   20529:	8d 83 1c 67 fe ff    	lea    -0x198e4(%ebx),%eax
   2052f:	50                   	push   %eax
   20530:	e8 2b 3d fe ff       	call   4260 <printf@plt>
   20535:	83 c4 10             	add    $0x10,%esp
   20538:	b8 01 00 00 00       	mov    $0x1,%eax
   2053d:	83 c4 08             	add    $0x8,%esp
   20540:	5b                   	pop    %ebx
   20541:	c3                   	ret    
   20542:	66 90                	xchg   %ax,%ax
   20544:	66 90                	xchg   %ax,%ax
   20546:	66 90                	xchg   %ax,%ax
   20548:	66 90                	xchg   %ax,%ax
   2054a:	66 90                	xchg   %ax,%ax
   2054c:	66 90                	xchg   %ax,%ax
   2054e:	66 90                	xchg   %ax,%ax

00020550 <__ref_in_b>:
   20550:	56                   	push   %esi
   20551:	53                   	push   %ebx
   20552:	e8 29 3f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20557:	81 c3 a9 ea 02 00    	add    $0x2eaa9,%ebx
   2055d:	83 ec 54             	sub    $0x54,%esp
   20560:	e8 7b a2 00 00       	call   2a7e0 <set_ref>
   20565:	c7 44 24 18 08 00 00 	movl   $0x8,0x18(%esp)
   2056c:	00 
   2056d:	83 ec 0c             	sub    $0xc,%esp
   20570:	c7 44 24 48 10 00 00 	movl   $0x10,0x48(%esp)
   20577:	00 
   20578:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   2057f:	00 
   20580:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   20587:	00 
   20588:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   2058f:	00 
   20590:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   20597:	00 
   20598:	8d 74 24 38          	lea    0x38(%esp),%esi
   2059c:	56                   	push   %esi
   2059d:	e8 3e 1e ff ff       	call   123e0 <operand_read>
   205a2:	58                   	pop    %eax
   205a3:	5a                   	pop    %edx
   205a4:	6a 01                	push   $0x1
   205a6:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
   205ab:	50                   	push   %eax
   205ac:	e8 5f 67 fe ff       	call   6d10 <pio_read>
   205b1:	89 44 24 24          	mov    %eax,0x24(%esp)
   205b5:	59                   	pop    %ecx
   205b6:	8d 44 24 14          	lea    0x14(%esp),%eax
   205ba:	50                   	push   %eax
   205bb:	e8 d0 1f ff ff       	call   12590 <operand_write>
   205c0:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   205c6:	56                   	push   %esi
   205c7:	6a 01                	push   $0x1
   205c9:	50                   	push   %eax
   205ca:	8d 83 ec 6a fe ff    	lea    -0x19514(%ebx),%eax
   205d0:	50                   	push   %eax
   205d1:	e8 ca 1a ff ff       	call   120a0 <print_asm_1>
   205d6:	83 c4 74             	add    $0x74,%esp
   205d9:	b8 01 00 00 00       	mov    $0x1,%eax
   205de:	5b                   	pop    %ebx
   205df:	5e                   	pop    %esi
   205e0:	c3                   	ret    
   205e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   205e8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   205ef:	90                   	nop

000205f0 <__ref_in_v>:
   205f0:	57                   	push   %edi
   205f1:	56                   	push   %esi
   205f2:	53                   	push   %ebx
   205f3:	e8 88 3e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   205f8:	81 c3 08 ea 02 00    	add    $0x2ea08,%ebx
   205fe:	83 ec 50             	sub    $0x50,%esp
   20601:	e8 da a1 00 00       	call   2a7e0 <set_ref>
   20606:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   2060c:	83 ec 0c             	sub    $0xc,%esp
   2060f:	c7 44 24 48 10 00 00 	movl   $0x10,0x48(%esp)
   20616:	00 
   20617:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   2061e:	00 
   2061f:	0f b6 07             	movzbl (%edi),%eax
   20622:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   20629:	00 
   2062a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   20631:	00 
   20632:	89 44 24 24          	mov    %eax,0x24(%esp)
   20636:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   2063d:	00 
   2063e:	8d 74 24 38          	lea    0x38(%esp),%esi
   20642:	56                   	push   %esi
   20643:	e8 98 1d ff ff       	call   123e0 <operand_read>
   20648:	58                   	pop    %eax
   20649:	0f b6 07             	movzbl (%edi),%eax
   2064c:	5a                   	pop    %edx
   2064d:	c0 e8 03             	shr    $0x3,%al
   20650:	0f b6 c0             	movzbl %al,%eax
   20653:	50                   	push   %eax
   20654:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
   20659:	50                   	push   %eax
   2065a:	e8 b1 66 fe ff       	call   6d10 <pio_read>
   2065f:	89 44 24 24          	mov    %eax,0x24(%esp)
   20663:	59                   	pop    %ecx
   20664:	8d 44 24 14          	lea    0x14(%esp),%eax
   20668:	50                   	push   %eax
   20669:	e8 22 1f ff ff       	call   12590 <operand_write>
   2066e:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   20674:	56                   	push   %esi
   20675:	6a 01                	push   $0x1
   20677:	50                   	push   %eax
   20678:	8d 83 ec 6a fe ff    	lea    -0x19514(%ebx),%eax
   2067e:	50                   	push   %eax
   2067f:	e8 1c 1a ff ff       	call   120a0 <print_asm_1>
   20684:	83 c4 70             	add    $0x70,%esp
   20687:	b8 01 00 00 00       	mov    $0x1,%eax
   2068c:	5b                   	pop    %ebx
   2068d:	5e                   	pop    %esi
   2068e:	5f                   	pop    %edi
   2068f:	c3                   	ret    

00020690 <sign_ext.part.0>:
   20690:	53                   	push   %ebx
   20691:	e8 ea 3d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20696:	81 c3 6a e9 02 00    	add    $0x2e96a,%ebx
   2069c:	83 ec 08             	sub    $0x8,%esp
   2069f:	8d 83 24 6d fe ff    	lea    -0x192dc(%ebx),%eax
   206a5:	50                   	push   %eax
   206a6:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   206ac:	6a 2e                	push   $0x2e
   206ae:	50                   	push   %eax
   206af:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   206b5:	50                   	push   %eax
   206b6:	e8 55 3c fe ff       	call   4310 <__assert_fail@plt>
   206bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   206bf:	90                   	nop

000206c0 <instr_execute_2op>:
   206c0:	55                   	push   %ebp
   206c1:	57                   	push   %edi
   206c2:	56                   	push   %esi
   206c3:	53                   	push   %ebx
   206c4:	e8 b7 3d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   206c9:	81 c3 37 e9 02 00    	add    $0x2e937,%ebx
   206cf:	83 ec 0c             	sub    $0xc,%esp
   206d2:	e8 09 a1 00 00       	call   2a7e0 <set_ref>
   206d7:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   206dd:	83 ec 0c             	sub    $0xc,%esp
   206e0:	57                   	push   %edi
   206e1:	e8 fa 1c ff ff       	call   123e0 <operand_read>
   206e6:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   206ec:	89 34 24             	mov    %esi,(%esp)
   206ef:	e8 ec 1c ff ff       	call   123e0 <operand_read>
   206f4:	8b 56 10             	mov    0x10(%esi),%edx
   206f7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   206fd:	83 c4 10             	add    $0x10,%esp
   20700:	8d 6a f8             	lea    -0x8(%edx),%ebp
   20703:	0f b6 08             	movzbl (%eax),%ecx
   20706:	8b 46 0c             	mov    0xc(%esi),%eax
   20709:	83 e5 f7             	and    $0xfffffff7,%ebp
   2070c:	74 05                	je     20713 <instr_execute_2op+0x53>
   2070e:	83 fa 20             	cmp    $0x20,%edx
   20711:	75 5a                	jne    2076d <instr_execute_2op+0xad>
   20713:	83 fa 08             	cmp    $0x8,%edx
   20716:	74 48                	je     20760 <instr_execute_2op+0xa0>
   20718:	0f bf e8             	movswl %ax,%ebp
   2071b:	83 fa 10             	cmp    $0x10,%edx
   2071e:	0f 44 c5             	cmove  %ebp,%eax
   20721:	8b 6f 10             	mov    0x10(%edi),%ebp
   20724:	8b 57 0c             	mov    0xc(%edi),%edx
   20727:	8d 7d f8             	lea    -0x8(%ebp),%edi
   2072a:	83 e7 f7             	and    $0xfffffff7,%edi
   2072d:	74 05                	je     20734 <instr_execute_2op+0x74>
   2072f:	83 fd 20             	cmp    $0x20,%ebp
   20732:	75 39                	jne    2076d <instr_execute_2op+0xad>
   20734:	83 fd 08             	cmp    $0x8,%ebp
   20737:	74 2f                	je     20768 <instr_execute_2op+0xa8>
   20739:	0f bf fa             	movswl %dx,%edi
   2073c:	83 fd 10             	cmp    $0x10,%ebp
   2073f:	0f 44 d7             	cmove  %edi,%edx
   20742:	83 ec 04             	sub    $0x4,%esp
   20745:	51                   	push   %ecx
   20746:	50                   	push   %eax
   20747:	52                   	push   %edx
   20748:	e8 93 9c 00 00       	call   2a3e0 <__ref_alu_xor>
   2074d:	89 34 24             	mov    %esi,(%esp)
   20750:	89 46 0c             	mov    %eax,0xc(%esi)
   20753:	e8 38 1e ff ff       	call   12590 <operand_write>
   20758:	83 c4 1c             	add    $0x1c,%esp
   2075b:	5b                   	pop    %ebx
   2075c:	5e                   	pop    %esi
   2075d:	5f                   	pop    %edi
   2075e:	5d                   	pop    %ebp
   2075f:	c3                   	ret    
   20760:	0f be c0             	movsbl %al,%eax
   20763:	eb bc                	jmp    20721 <instr_execute_2op+0x61>
   20765:	8d 76 00             	lea    0x0(%esi),%esi
   20768:	0f be d2             	movsbl %dl,%edx
   2076b:	eb d5                	jmp    20742 <instr_execute_2op+0x82>
   2076d:	e8 1e ff ff ff       	call   20690 <sign_ext.part.0>
   20772:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   20779:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00020780 <__ref_xor_r2rm_b>:
   20780:	55                   	push   %ebp
   20781:	57                   	push   %edi
   20782:	56                   	push   %esi
   20783:	53                   	push   %ebx
   20784:	e8 f7 3c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20789:	81 c3 77 e8 02 00    	add    $0x2e877,%ebx
   2078f:	83 ec 10             	sub    $0x10,%esp
   20792:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   20798:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2079e:	56                   	push   %esi
   2079f:	57                   	push   %edi
   207a0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   207a4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   207ab:	83 c0 01             	add    $0x1,%eax
   207ae:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   207b5:	50                   	push   %eax
   207b6:	e8 e5 16 ff ff       	call   11ea0 <modrm_r_rm>
   207bb:	8b 4e 10             	mov    0x10(%esi),%ecx
   207be:	83 c4 10             	add    $0x10,%esp
   207c1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   207c7:	8d 68 01             	lea    0x1(%eax),%ebp
   207ca:	89 e8                	mov    %ebp,%eax
   207cc:	0f b6 c0             	movzbl %al,%eax
   207cf:	83 f9 08             	cmp    $0x8,%ecx
   207d2:	74 12                	je     207e6 <__ref_xor_r2rm_b+0x66>
   207d4:	83 f9 10             	cmp    $0x10,%ecx
   207d7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   207dd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   207e3:	0f 45 d1             	cmovne %ecx,%edx
   207e6:	83 ec 0c             	sub    $0xc,%esp
   207e9:	56                   	push   %esi
   207ea:	57                   	push   %edi
   207eb:	50                   	push   %eax
   207ec:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   207f2:	52                   	push   %edx
   207f3:	50                   	push   %eax
   207f4:	e8 a7 19 ff ff       	call   121a0 <print_asm_2>
   207f9:	83 c4 20             	add    $0x20,%esp
   207fc:	e8 bf fe ff ff       	call   206c0 <instr_execute_2op>
   20801:	83 c4 0c             	add    $0xc,%esp
   20804:	89 e8                	mov    %ebp,%eax
   20806:	5b                   	pop    %ebx
   20807:	5e                   	pop    %esi
   20808:	5f                   	pop    %edi
   20809:	5d                   	pop    %ebp
   2080a:	c3                   	ret    
   2080b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2080f:	90                   	nop

00020810 <__ref_xor_r2rm_v>:
   20810:	55                   	push   %ebp
   20811:	57                   	push   %edi
   20812:	56                   	push   %esi
   20813:	53                   	push   %ebx
   20814:	e8 67 3c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20819:	81 c3 e7 e7 02 00    	add    $0x2e7e7,%ebx
   2081f:	83 ec 10             	sub    $0x10,%esp
   20822:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   20828:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2082e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   20834:	0f b6 00             	movzbl (%eax),%eax
   20837:	56                   	push   %esi
   20838:	57                   	push   %edi
   20839:	89 46 10             	mov    %eax,0x10(%esi)
   2083c:	89 47 10             	mov    %eax,0x10(%edi)
   2083f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   20843:	83 c0 01             	add    $0x1,%eax
   20846:	50                   	push   %eax
   20847:	e8 54 16 ff ff       	call   11ea0 <modrm_r_rm>
   2084c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2084f:	83 c4 10             	add    $0x10,%esp
   20852:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   20858:	8d 68 01             	lea    0x1(%eax),%ebp
   2085b:	89 e8                	mov    %ebp,%eax
   2085d:	0f b6 c0             	movzbl %al,%eax
   20860:	83 f9 08             	cmp    $0x8,%ecx
   20863:	74 12                	je     20877 <__ref_xor_r2rm_v+0x67>
   20865:	83 f9 10             	cmp    $0x10,%ecx
   20868:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2086e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   20874:	0f 45 d1             	cmovne %ecx,%edx
   20877:	83 ec 0c             	sub    $0xc,%esp
   2087a:	56                   	push   %esi
   2087b:	57                   	push   %edi
   2087c:	50                   	push   %eax
   2087d:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   20883:	52                   	push   %edx
   20884:	50                   	push   %eax
   20885:	e8 16 19 ff ff       	call   121a0 <print_asm_2>
   2088a:	83 c4 20             	add    $0x20,%esp
   2088d:	e8 2e fe ff ff       	call   206c0 <instr_execute_2op>
   20892:	83 c4 0c             	add    $0xc,%esp
   20895:	89 e8                	mov    %ebp,%eax
   20897:	5b                   	pop    %ebx
   20898:	5e                   	pop    %esi
   20899:	5f                   	pop    %edi
   2089a:	5d                   	pop    %ebp
   2089b:	c3                   	ret    
   2089c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000208a0 <__ref_xor_rm2r_b>:
   208a0:	55                   	push   %ebp
   208a1:	57                   	push   %edi
   208a2:	56                   	push   %esi
   208a3:	53                   	push   %ebx
   208a4:	e8 d7 3b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   208a9:	81 c3 57 e7 02 00    	add    $0x2e757,%ebx
   208af:	83 ec 10             	sub    $0x10,%esp
   208b2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   208b8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   208be:	57                   	push   %edi
   208bf:	56                   	push   %esi
   208c0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   208c4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   208cb:	83 c0 01             	add    $0x1,%eax
   208ce:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   208d5:	50                   	push   %eax
   208d6:	e8 c5 15 ff ff       	call   11ea0 <modrm_r_rm>
   208db:	8b 4e 10             	mov    0x10(%esi),%ecx
   208de:	83 c4 10             	add    $0x10,%esp
   208e1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   208e7:	8d 68 01             	lea    0x1(%eax),%ebp
   208ea:	89 e8                	mov    %ebp,%eax
   208ec:	0f b6 c0             	movzbl %al,%eax
   208ef:	83 f9 08             	cmp    $0x8,%ecx
   208f2:	74 12                	je     20906 <__ref_xor_rm2r_b+0x66>
   208f4:	83 f9 10             	cmp    $0x10,%ecx
   208f7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   208fd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   20903:	0f 45 d1             	cmovne %ecx,%edx
   20906:	83 ec 0c             	sub    $0xc,%esp
   20909:	56                   	push   %esi
   2090a:	57                   	push   %edi
   2090b:	50                   	push   %eax
   2090c:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   20912:	52                   	push   %edx
   20913:	50                   	push   %eax
   20914:	e8 87 18 ff ff       	call   121a0 <print_asm_2>
   20919:	83 c4 20             	add    $0x20,%esp
   2091c:	e8 9f fd ff ff       	call   206c0 <instr_execute_2op>
   20921:	83 c4 0c             	add    $0xc,%esp
   20924:	89 e8                	mov    %ebp,%eax
   20926:	5b                   	pop    %ebx
   20927:	5e                   	pop    %esi
   20928:	5f                   	pop    %edi
   20929:	5d                   	pop    %ebp
   2092a:	c3                   	ret    
   2092b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2092f:	90                   	nop

00020930 <__ref_xor_rm2r_v>:
   20930:	55                   	push   %ebp
   20931:	57                   	push   %edi
   20932:	56                   	push   %esi
   20933:	53                   	push   %ebx
   20934:	e8 47 3b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20939:	81 c3 c7 e6 02 00    	add    $0x2e6c7,%ebx
   2093f:	83 ec 10             	sub    $0x10,%esp
   20942:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   20948:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2094e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   20954:	0f b6 00             	movzbl (%eax),%eax
   20957:	57                   	push   %edi
   20958:	89 46 10             	mov    %eax,0x10(%esi)
   2095b:	56                   	push   %esi
   2095c:	89 47 10             	mov    %eax,0x10(%edi)
   2095f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   20963:	83 c0 01             	add    $0x1,%eax
   20966:	50                   	push   %eax
   20967:	e8 34 15 ff ff       	call   11ea0 <modrm_r_rm>
   2096c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2096f:	83 c4 10             	add    $0x10,%esp
   20972:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   20978:	8d 68 01             	lea    0x1(%eax),%ebp
   2097b:	89 e8                	mov    %ebp,%eax
   2097d:	0f b6 c0             	movzbl %al,%eax
   20980:	83 f9 08             	cmp    $0x8,%ecx
   20983:	74 12                	je     20997 <__ref_xor_rm2r_v+0x67>
   20985:	83 f9 10             	cmp    $0x10,%ecx
   20988:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2098e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   20994:	0f 45 d1             	cmovne %ecx,%edx
   20997:	83 ec 0c             	sub    $0xc,%esp
   2099a:	56                   	push   %esi
   2099b:	57                   	push   %edi
   2099c:	50                   	push   %eax
   2099d:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   209a3:	52                   	push   %edx
   209a4:	50                   	push   %eax
   209a5:	e8 f6 17 ff ff       	call   121a0 <print_asm_2>
   209aa:	83 c4 20             	add    $0x20,%esp
   209ad:	e8 0e fd ff ff       	call   206c0 <instr_execute_2op>
   209b2:	83 c4 0c             	add    $0xc,%esp
   209b5:	89 e8                	mov    %ebp,%eax
   209b7:	5b                   	pop    %ebx
   209b8:	5e                   	pop    %esi
   209b9:	5f                   	pop    %edi
   209ba:	5d                   	pop    %ebp
   209bb:	c3                   	ret    
   209bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000209c0 <__ref_xor_i2rm_b>:
   209c0:	55                   	push   %ebp
   209c1:	57                   	push   %edi
   209c2:	56                   	push   %esi
   209c3:	53                   	push   %ebx
   209c4:	e8 b7 3a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   209c9:	81 c3 37 e6 02 00    	add    $0x2e637,%ebx
   209cf:	83 ec 24             	sub    $0x24,%esp
   209d2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   209d6:	8d 45 01             	lea    0x1(%ebp),%eax
   209d9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   209df:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   209e5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   209ec:	52                   	push   %edx
   209ed:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   209f4:	89 54 24 18          	mov    %edx,0x18(%esp)
   209f8:	50                   	push   %eax
   209f9:	e8 82 15 ff ff       	call   11f80 <modrm_rm>
   209fe:	8b 77 10             	mov    0x10(%edi),%esi
   20a01:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   20a05:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   20a09:	83 c0 01             	add    $0x1,%eax
   20a0c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   20a12:	83 c4 10             	add    $0x10,%esp
   20a15:	01 c5                	add    %eax,%ebp
   20a17:	c1 ee 03             	shr    $0x3,%esi
   20a1a:	89 6f 04             	mov    %ebp,0x4(%edi)
   20a1d:	01 c6                	add    %eax,%esi
   20a1f:	8b 6a 10             	mov    0x10(%edx),%ebp
   20a22:	89 f0                	mov    %esi,%eax
   20a24:	0f b6 c8             	movzbl %al,%ecx
   20a27:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   20a2d:	83 fd 08             	cmp    $0x8,%ebp
   20a30:	74 12                	je     20a44 <__ref_xor_i2rm_b+0x84>
   20a32:	83 fd 10             	cmp    $0x10,%ebp
   20a35:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   20a3b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   20a41:	0f 45 c5             	cmovne %ebp,%eax
   20a44:	83 ec 0c             	sub    $0xc,%esp
   20a47:	52                   	push   %edx
   20a48:	57                   	push   %edi
   20a49:	51                   	push   %ecx
   20a4a:	50                   	push   %eax
   20a4b:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   20a51:	50                   	push   %eax
   20a52:	e8 49 17 ff ff       	call   121a0 <print_asm_2>
   20a57:	83 c4 20             	add    $0x20,%esp
   20a5a:	e8 61 fc ff ff       	call   206c0 <instr_execute_2op>
   20a5f:	83 c4 1c             	add    $0x1c,%esp
   20a62:	89 f0                	mov    %esi,%eax
   20a64:	5b                   	pop    %ebx
   20a65:	5e                   	pop    %esi
   20a66:	5f                   	pop    %edi
   20a67:	5d                   	pop    %ebp
   20a68:	c3                   	ret    
   20a69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00020a70 <__ref_xor_i2rm_v>:
   20a70:	55                   	push   %ebp
   20a71:	57                   	push   %edi
   20a72:	56                   	push   %esi
   20a73:	53                   	push   %ebx
   20a74:	e8 07 3a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20a79:	81 c3 87 e5 02 00    	add    $0x2e587,%ebx
   20a7f:	83 ec 24             	sub    $0x24,%esp
   20a82:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   20a86:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   20a8c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   20a92:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   20a98:	0f b6 00             	movzbl (%eax),%eax
   20a9b:	89 42 10             	mov    %eax,0x10(%edx)
   20a9e:	52                   	push   %edx
   20a9f:	89 47 10             	mov    %eax,0x10(%edi)
   20aa2:	8d 45 01             	lea    0x1(%ebp),%eax
   20aa5:	89 54 24 18          	mov    %edx,0x18(%esp)
   20aa9:	50                   	push   %eax
   20aaa:	e8 d1 14 ff ff       	call   11f80 <modrm_rm>
   20aaf:	8b 77 10             	mov    0x10(%edi),%esi
   20ab2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   20ab6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   20aba:	83 c0 01             	add    $0x1,%eax
   20abd:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   20ac3:	83 c4 10             	add    $0x10,%esp
   20ac6:	01 c5                	add    %eax,%ebp
   20ac8:	c1 ee 03             	shr    $0x3,%esi
   20acb:	89 6f 04             	mov    %ebp,0x4(%edi)
   20ace:	01 c6                	add    %eax,%esi
   20ad0:	8b 6a 10             	mov    0x10(%edx),%ebp
   20ad3:	89 f0                	mov    %esi,%eax
   20ad5:	0f b6 c8             	movzbl %al,%ecx
   20ad8:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   20ade:	83 fd 08             	cmp    $0x8,%ebp
   20ae1:	74 12                	je     20af5 <__ref_xor_i2rm_v+0x85>
   20ae3:	83 fd 10             	cmp    $0x10,%ebp
   20ae6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   20aec:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   20af2:	0f 45 c5             	cmovne %ebp,%eax
   20af5:	83 ec 0c             	sub    $0xc,%esp
   20af8:	52                   	push   %edx
   20af9:	57                   	push   %edi
   20afa:	51                   	push   %ecx
   20afb:	50                   	push   %eax
   20afc:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   20b02:	50                   	push   %eax
   20b03:	e8 98 16 ff ff       	call   121a0 <print_asm_2>
   20b08:	83 c4 20             	add    $0x20,%esp
   20b0b:	e8 b0 fb ff ff       	call   206c0 <instr_execute_2op>
   20b10:	83 c4 1c             	add    $0x1c,%esp
   20b13:	89 f0                	mov    %esi,%eax
   20b15:	5b                   	pop    %ebx
   20b16:	5e                   	pop    %esi
   20b17:	5f                   	pop    %edi
   20b18:	5d                   	pop    %ebp
   20b19:	c3                   	ret    
   20b1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00020b20 <__ref_xor_i2rm_bv>:
   20b20:	55                   	push   %ebp
   20b21:	57                   	push   %edi
   20b22:	56                   	push   %esi
   20b23:	53                   	push   %ebx
   20b24:	e8 57 39 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20b29:	81 c3 d7 e4 02 00    	add    $0x2e4d7,%ebx
   20b2f:	83 ec 24             	sub    $0x24,%esp
   20b32:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   20b36:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   20b3c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   20b42:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   20b48:	0f b6 00             	movzbl (%eax),%eax
   20b4b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   20b52:	89 42 10             	mov    %eax,0x10(%edx)
   20b55:	8d 45 01             	lea    0x1(%ebp),%eax
   20b58:	52                   	push   %edx
   20b59:	89 54 24 18          	mov    %edx,0x18(%esp)
   20b5d:	50                   	push   %eax
   20b5e:	e8 1d 14 ff ff       	call   11f80 <modrm_rm>
   20b63:	8b 77 10             	mov    0x10(%edi),%esi
   20b66:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   20b6a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   20b6e:	83 c0 01             	add    $0x1,%eax
   20b71:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   20b77:	83 c4 10             	add    $0x10,%esp
   20b7a:	01 c5                	add    %eax,%ebp
   20b7c:	c1 ee 03             	shr    $0x3,%esi
   20b7f:	89 6f 04             	mov    %ebp,0x4(%edi)
   20b82:	01 c6                	add    %eax,%esi
   20b84:	8b 6a 10             	mov    0x10(%edx),%ebp
   20b87:	89 f0                	mov    %esi,%eax
   20b89:	0f b6 c8             	movzbl %al,%ecx
   20b8c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   20b92:	83 fd 08             	cmp    $0x8,%ebp
   20b95:	74 12                	je     20ba9 <__ref_xor_i2rm_bv+0x89>
   20b97:	83 fd 10             	cmp    $0x10,%ebp
   20b9a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   20ba0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   20ba6:	0f 45 c5             	cmovne %ebp,%eax
   20ba9:	83 ec 0c             	sub    $0xc,%esp
   20bac:	52                   	push   %edx
   20bad:	57                   	push   %edi
   20bae:	51                   	push   %ecx
   20baf:	50                   	push   %eax
   20bb0:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   20bb6:	50                   	push   %eax
   20bb7:	e8 e4 15 ff ff       	call   121a0 <print_asm_2>
   20bbc:	83 c4 20             	add    $0x20,%esp
   20bbf:	e8 fc fa ff ff       	call   206c0 <instr_execute_2op>
   20bc4:	83 c4 1c             	add    $0x1c,%esp
   20bc7:	89 f0                	mov    %esi,%eax
   20bc9:	5b                   	pop    %ebx
   20bca:	5e                   	pop    %esi
   20bcb:	5f                   	pop    %edi
   20bcc:	5d                   	pop    %ebp
   20bcd:	c3                   	ret    
   20bce:	66 90                	xchg   %ax,%ax

00020bd0 <__ref_xor_i2a_b>:
   20bd0:	53                   	push   %ebx
   20bd1:	e8 aa 38 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20bd6:	81 c3 2a e4 02 00    	add    $0x2e42a,%ebx
   20bdc:	83 ec 14             	sub    $0x14,%esp
   20bdf:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   20be3:	83 c1 01             	add    $0x1,%ecx
   20be6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   20bec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   20bf2:	89 48 04             	mov    %ecx,0x4(%eax)
   20bf5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   20bfc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   20c03:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   20c09:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   20c0d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   20c13:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   20c1a:	52                   	push   %edx
   20c1b:	50                   	push   %eax
   20c1c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   20c22:	6a 02                	push   $0x2
   20c24:	50                   	push   %eax
   20c25:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   20c2b:	50                   	push   %eax
   20c2c:	e8 6f 15 ff ff       	call   121a0 <print_asm_2>
   20c31:	83 c4 20             	add    $0x20,%esp
   20c34:	e8 87 fa ff ff       	call   206c0 <instr_execute_2op>
   20c39:	83 c4 08             	add    $0x8,%esp
   20c3c:	b8 02 00 00 00       	mov    $0x2,%eax
   20c41:	5b                   	pop    %ebx
   20c42:	c3                   	ret    
   20c43:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   20c4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00020c50 <__ref_xor_i2a_v>:
   20c50:	55                   	push   %ebp
   20c51:	57                   	push   %edi
   20c52:	56                   	push   %esi
   20c53:	53                   	push   %ebx
   20c54:	e8 27 38 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20c59:	81 c3 a7 e3 02 00    	add    $0x2e3a7,%ebx
   20c5f:	83 ec 0c             	sub    $0xc,%esp
   20c62:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   20c68:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   20c6e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   20c74:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   20c7a:	0f b6 08             	movzbl (%eax),%ecx
   20c7d:	8b 44 24 20          	mov    0x20(%esp),%eax
   20c81:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   20c87:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   20c8b:	89 cf                	mov    %ecx,%edi
   20c8d:	83 c0 01             	add    $0x1,%eax
   20c90:	89 4d 10             	mov    %ecx,0x10(%ebp)
   20c93:	c1 ef 03             	shr    $0x3,%edi
   20c96:	89 4a 10             	mov    %ecx,0x10(%edx)
   20c99:	89 42 04             	mov    %eax,0x4(%edx)
   20c9c:	83 c7 01             	add    $0x1,%edi
   20c9f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   20ca6:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   20cad:	83 f9 08             	cmp    $0x8,%ecx
   20cb0:	74 12                	je     20cc4 <__ref_xor_i2a_v+0x74>
   20cb2:	83 f9 10             	cmp    $0x10,%ecx
   20cb5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   20cbb:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   20cc1:	0f 45 f0             	cmovne %eax,%esi
   20cc4:	83 ec 0c             	sub    $0xc,%esp
   20cc7:	8d 83 23 70 fe ff    	lea    -0x18fdd(%ebx),%eax
   20ccd:	55                   	push   %ebp
   20cce:	52                   	push   %edx
   20ccf:	57                   	push   %edi
   20cd0:	56                   	push   %esi
   20cd1:	50                   	push   %eax
   20cd2:	e8 c9 14 ff ff       	call   121a0 <print_asm_2>
   20cd7:	83 c4 20             	add    $0x20,%esp
   20cda:	e8 e1 f9 ff ff       	call   206c0 <instr_execute_2op>
   20cdf:	83 c4 0c             	add    $0xc,%esp
   20ce2:	89 f8                	mov    %edi,%eax
   20ce4:	5b                   	pop    %ebx
   20ce5:	5e                   	pop    %esi
   20ce6:	5f                   	pop    %edi
   20ce7:	5d                   	pop    %ebp
   20ce8:	c3                   	ret    
   20ce9:	66 90                	xchg   %ax,%ax
   20ceb:	66 90                	xchg   %ax,%ax
   20ced:	66 90                	xchg   %ax,%ax
   20cef:	90                   	nop

00020cf0 <sign_ext.part.0>:
   20cf0:	53                   	push   %ebx
   20cf1:	e8 8a 37 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20cf6:	81 c3 0a e3 02 00    	add    $0x2e30a,%ebx
   20cfc:	83 ec 08             	sub    $0x8,%esp
   20cff:	8d 83 30 6d fe ff    	lea    -0x192d0(%ebx),%eax
   20d05:	50                   	push   %eax
   20d06:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   20d0c:	6a 2e                	push   $0x2e
   20d0e:	50                   	push   %eax
   20d0f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   20d15:	50                   	push   %eax
   20d16:	e8 f5 35 fe ff       	call   4310 <__assert_fail@plt>
   20d1b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20d1f:	90                   	nop

00020d20 <__ref_imul_rm2r_v>:
   20d20:	55                   	push   %ebp
   20d21:	57                   	push   %edi
   20d22:	56                   	push   %esi
   20d23:	53                   	push   %ebx
   20d24:	e8 57 37 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20d29:	81 c3 d7 e2 02 00    	add    $0x2e2d7,%ebx
   20d2f:	83 ec 6c             	sub    $0x6c,%esp
   20d32:	e8 a9 9a 00 00       	call   2a7e0 <set_ref>
   20d37:	8d ab 84 07 00 00    	lea    0x784(%ebx),%ebp
   20d3d:	83 ec 04             	sub    $0x4,%esp
   20d40:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   20d44:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   20d48:	89 44 24 50          	mov    %eax,0x50(%esp)
   20d4c:	8d 7c 24 40          	lea    0x40(%esp),%edi
   20d50:	57                   	push   %edi
   20d51:	8d 74 24 20          	lea    0x20(%esp),%esi
   20d55:	56                   	push   %esi
   20d56:	8b 84 24 8c 00 00 00 	mov    0x8c(%esp),%eax
   20d5d:	83 c0 01             	add    $0x1,%eax
   20d60:	50                   	push   %eax
   20d61:	e8 3a 11 ff ff       	call   11ea0 <modrm_r_rm>
   20d66:	89 34 24             	mov    %esi,(%esp)
   20d69:	83 c0 01             	add    $0x1,%eax
   20d6c:	89 44 24 18          	mov    %eax,0x18(%esp)
   20d70:	e8 6b 16 ff ff       	call   123e0 <operand_read>
   20d75:	89 3c 24             	mov    %edi,(%esp)
   20d78:	e8 63 16 ff ff       	call   123e0 <operand_read>
   20d7d:	0f b6 6d 00          	movzbl 0x0(%ebp),%ebp
   20d81:	8b 4c 24 34          	mov    0x34(%esp),%ecx
   20d85:	83 c4 10             	add    $0x10,%esp
   20d88:	8d 55 f8             	lea    -0x8(%ebp),%edx
   20d8b:	89 e8                	mov    %ebp,%eax
   20d8d:	81 e2 f7 00 00 00    	and    $0xf7,%edx
   20d93:	74 05                	je     20d9a <__ref_imul_rm2r_v+0x7a>
   20d95:	83 fd 20             	cmp    $0x20,%ebp
   20d98:	75 7b                	jne    20e15 <__ref_imul_rm2r_v+0xf5>
   20d9a:	8b 54 24 48          	mov    0x48(%esp),%edx
   20d9e:	3c 08                	cmp    $0x8,%al
   20da0:	74 6e                	je     20e10 <__ref_imul_rm2r_v+0xf0>
   20da2:	3c 10                	cmp    $0x10,%al
   20da4:	74 5a                	je     20e00 <__ref_imul_rm2r_v+0xe0>
   20da6:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   20daa:	3c 08                	cmp    $0x8,%al
   20dac:	74 5d                	je     20e0b <__ref_imul_rm2r_v+0xeb>
   20dae:	0f bf ca             	movswl %dx,%ecx
   20db1:	3c 10                	cmp    $0x10,%al
   20db3:	0f 44 d1             	cmove  %ecx,%edx
   20db6:	83 ec 04             	sub    $0x4,%esp
   20db9:	55                   	push   %ebp
   20dba:	ff 74 24 14          	pushl  0x14(%esp)
   20dbe:	52                   	push   %edx
   20dbf:	e8 cc 93 00 00       	call   2a190 <__ref_alu_imul>
   20dc4:	89 34 24             	mov    %esi,(%esp)
   20dc7:	89 44 24 34          	mov    %eax,0x34(%esp)
   20dcb:	e8 c0 17 ff ff       	call   12590 <operand_write>
   20dd0:	89 34 24             	mov    %esi,(%esp)
   20dd3:	57                   	push   %edi
   20dd4:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
   20dd9:	50                   	push   %eax
   20dda:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   20de0:	50                   	push   %eax
   20de1:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   20de7:	50                   	push   %eax
   20de8:	e8 b3 13 ff ff       	call   121a0 <print_asm_2>
   20ded:	8b 44 24 28          	mov    0x28(%esp),%eax
   20df1:	81 c4 8c 00 00 00    	add    $0x8c,%esp
   20df7:	5b                   	pop    %ebx
   20df8:	5e                   	pop    %esi
   20df9:	5f                   	pop    %edi
   20dfa:	5d                   	pop    %ebp
   20dfb:	c3                   	ret    
   20dfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20e00:	0f bf c9             	movswl %cx,%ecx
   20e03:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   20e07:	3c 08                	cmp    $0x8,%al
   20e09:	75 a3                	jne    20dae <__ref_imul_rm2r_v+0x8e>
   20e0b:	0f be d2             	movsbl %dl,%edx
   20e0e:	eb a6                	jmp    20db6 <__ref_imul_rm2r_v+0x96>
   20e10:	0f be c9             	movsbl %cl,%ecx
   20e13:	eb 91                	jmp    20da6 <__ref_imul_rm2r_v+0x86>
   20e15:	e8 d6 fe ff ff       	call   20cf0 <sign_ext.part.0>
   20e1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00020e20 <__ref_imul_rm2a_b>:
   20e20:	55                   	push   %ebp
   20e21:	57                   	push   %edi
   20e22:	56                   	push   %esi
   20e23:	53                   	push   %ebx
   20e24:	e8 57 36 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20e29:	81 c3 d7 e1 02 00    	add    $0x2e1d7,%ebx
   20e2f:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
   20e35:	e8 a6 99 00 00       	call   2a7e0 <set_ref>
   20e3a:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   20e41:	00 
   20e42:	83 ec 08             	sub    $0x8,%esp
   20e45:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   20e4c:	00 
   20e4d:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   20e54:	00 
   20e55:	c7 44 24 50 08 00 00 	movl   $0x8,0x50(%esp)
   20e5c:	00 
   20e5d:	8d 7c 24 40          	lea    0x40(%esp),%edi
   20e61:	57                   	push   %edi
   20e62:	8b 84 24 ac 00 00 00 	mov    0xac(%esp),%eax
   20e69:	83 c0 01             	add    $0x1,%eax
   20e6c:	50                   	push   %eax
   20e6d:	e8 0e 11 ff ff       	call   11f80 <modrm_rm>
   20e72:	8d 70 01             	lea    0x1(%eax),%esi
   20e75:	58                   	pop    %eax
   20e76:	8d 6c 24 20          	lea    0x20(%esp),%ebp
   20e7a:	55                   	push   %ebp
   20e7b:	e8 60 15 ff ff       	call   123e0 <operand_read>
   20e80:	89 3c 24             	mov    %edi,(%esp)
   20e83:	e8 58 15 ff ff       	call   123e0 <operand_read>
   20e88:	83 c4 0c             	add    $0xc,%esp
   20e8b:	6a 08                	push   $0x8
   20e8d:	0f be 44 24 28       	movsbl 0x28(%esp),%eax
   20e92:	50                   	push   %eax
   20e93:	0f be 44 24 50       	movsbl 0x50(%esp),%eax
   20e98:	50                   	push   %eax
   20e99:	e8 f2 92 00 00       	call   2a190 <__ref_alu_imul>
   20e9e:	c7 44 24 7c 10 00 00 	movl   $0x10,0x7c(%esp)
   20ea5:	00 
   20ea6:	89 44 24 78          	mov    %eax,0x78(%esp)
   20eaa:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%esp)
   20eb1:	00 
   20eb2:	c7 44 24 70 00 00 00 	movl   $0x0,0x70(%esp)
   20eb9:	00 
   20eba:	5a                   	pop    %edx
   20ebb:	8d 44 24 68          	lea    0x68(%esp),%eax
   20ebf:	50                   	push   %eax
   20ec0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   20ec4:	e8 c7 16 ff ff       	call   12590 <operand_write>
   20ec9:	59                   	pop    %ecx
   20eca:	58                   	pop    %eax
   20ecb:	8b 44 24 14          	mov    0x14(%esp),%eax
   20ecf:	50                   	push   %eax
   20ed0:	89 f0                	mov    %esi,%eax
   20ed2:	0f b6 c0             	movzbl %al,%eax
   20ed5:	55                   	push   %ebp
   20ed6:	57                   	push   %edi
   20ed7:	50                   	push   %eax
   20ed8:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   20ede:	50                   	push   %eax
   20edf:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   20ee5:	50                   	push   %eax
   20ee6:	e8 c5 13 ff ff       	call   122b0 <print_asm_3>
   20eeb:	81 c4 ac 00 00 00    	add    $0xac,%esp
   20ef1:	89 f0                	mov    %esi,%eax
   20ef3:	5b                   	pop    %ebx
   20ef4:	5e                   	pop    %esi
   20ef5:	5f                   	pop    %edi
   20ef6:	5d                   	pop    %ebp
   20ef7:	c3                   	ret    
   20ef8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   20eff:	90                   	nop

00020f00 <__ref_imul_rm2a_v>:
   20f00:	55                   	push   %ebp
   20f01:	57                   	push   %edi
   20f02:	56                   	push   %esi
   20f03:	53                   	push   %ebx
   20f04:	e8 77 35 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   20f09:	81 c3 f7 e0 02 00    	add    $0x2e0f7,%ebx
   20f0f:	81 ec ac 00 00 00    	sub    $0xac,%esp
   20f15:	e8 c6 98 00 00       	call   2a7e0 <set_ref>
   20f1a:	8d ab 84 07 00 00    	lea    0x784(%ebx),%ebp
   20f20:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
   20f27:	00 
   20f28:	83 ec 08             	sub    $0x8,%esp
   20f2b:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   20f32:	00 
   20f33:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   20f37:	89 44 24 28          	mov    %eax,0x28(%esp)
   20f3b:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   20f3f:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   20f43:	57                   	push   %edi
   20f44:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   20f4b:	83 c0 01             	add    $0x1,%eax
   20f4e:	50                   	push   %eax
   20f4f:	e8 2c 10 ff ff       	call   11f80 <modrm_rm>
   20f54:	8d 70 01             	lea    0x1(%eax),%esi
   20f57:	58                   	pop    %eax
   20f58:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   20f5c:	50                   	push   %eax
   20f5d:	e8 7e 14 ff ff       	call   123e0 <operand_read>
   20f62:	89 3c 24             	mov    %edi,(%esp)
   20f65:	e8 76 14 ff ff       	call   123e0 <operand_read>
   20f6a:	89 f0                	mov    %esi,%eax
   20f6c:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   20f73:	00 
   20f74:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   20f7b:	01 00 00 00 
   20f7f:	0f b6 c8             	movzbl %al,%ecx
   20f82:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   20f89:	00 
   20f8a:	c7 84 24 90 00 00 00 	movl   $0x2,0x90(%esp)
   20f91:	02 00 00 00 
   20f95:	83 c4 10             	add    $0x10,%esp
   20f98:	80 7d 00 10          	cmpb   $0x10,0x0(%ebp)
   20f9c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   20fa0:	0f 84 8a 00 00 00    	je     21030 <__ref_imul_rm2a_v+0x130>
   20fa6:	83 ec 04             	sub    $0x4,%esp
   20fa9:	6a 20                	push   $0x20
   20fab:	ff 74 24 24          	pushl  0x24(%esp)
   20faf:	ff 74 24 4c          	pushl  0x4c(%esp)
   20fb3:	e8 d8 91 00 00       	call   2a190 <__ref_alu_imul>
   20fb8:	c7 44 24 78 20 00 00 	movl   $0x20,0x78(%esp)
   20fbf:	00 
   20fc0:	c7 84 24 9c 00 00 00 	movl   $0x20,0x9c(%esp)
   20fc7:	20 00 00 00 
   20fcb:	89 44 24 74          	mov    %eax,0x74(%esp)
   20fcf:	89 94 24 98 00 00 00 	mov    %edx,0x98(%esp)
   20fd6:	58                   	pop    %eax
   20fd7:	5a                   	pop    %edx
   20fd8:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   20fde:	8d 44 24 60          	lea    0x60(%esp),%eax
   20fe2:	50                   	push   %eax
   20fe3:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   20fea:	89 44 24 14          	mov    %eax,0x14(%esp)
   20fee:	55                   	push   %ebp
   20fef:	57                   	push   %edi
   20ff0:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   20ff4:	51                   	push   %ecx
   20ff5:	52                   	push   %edx
   20ff6:	8d 93 8c 70 fe ff    	lea    -0x18f74(%ebx),%edx
   20ffc:	52                   	push   %edx
   20ffd:	e8 ae 12 ff ff       	call   122b0 <print_asm_3>
   21002:	83 c4 20             	add    $0x20,%esp
   21005:	8b 44 24 08          	mov    0x8(%esp),%eax
   21009:	83 ec 0c             	sub    $0xc,%esp
   2100c:	50                   	push   %eax
   2100d:	e8 7e 15 ff ff       	call   12590 <operand_write>
   21012:	89 2c 24             	mov    %ebp,(%esp)
   21015:	e8 76 15 ff ff       	call   12590 <operand_write>
   2101a:	81 c4 bc 00 00 00    	add    $0xbc,%esp
   21020:	89 f0                	mov    %esi,%eax
   21022:	5b                   	pop    %ebx
   21023:	5e                   	pop    %esi
   21024:	5f                   	pop    %edi
   21025:	5d                   	pop    %ebp
   21026:	c3                   	ret    
   21027:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2102e:	66 90                	xchg   %ax,%ax
   21030:	83 ec 04             	sub    $0x4,%esp
   21033:	6a 10                	push   $0x10
   21035:	0f bf 44 24 24       	movswl 0x24(%esp),%eax
   2103a:	50                   	push   %eax
   2103b:	0f bf 44 24 4c       	movswl 0x4c(%esp),%eax
   21040:	50                   	push   %eax
   21041:	e8 4a 91 00 00       	call   2a190 <__ref_alu_imul>
   21046:	c7 44 24 78 10 00 00 	movl   $0x10,0x78(%esp)
   2104d:	00 
   2104e:	c7 84 24 9c 00 00 00 	movl   $0x10,0x9c(%esp)
   21055:	10 00 00 00 
   21059:	0f b7 d0             	movzwl %ax,%edx
   2105c:	c1 e8 10             	shr    $0x10,%eax
   2105f:	89 54 24 74          	mov    %edx,0x74(%esp)
   21063:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   21069:	89 84 24 98 00 00 00 	mov    %eax,0x98(%esp)
   21070:	59                   	pop    %ecx
   21071:	5d                   	pop    %ebp
   21072:	8d 44 24 60          	lea    0x60(%esp),%eax
   21076:	50                   	push   %eax
   21077:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   2107e:	89 44 24 14          	mov    %eax,0x14(%esp)
   21082:	55                   	push   %ebp
   21083:	57                   	push   %edi
   21084:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   21088:	51                   	push   %ecx
   21089:	e9 67 ff ff ff       	jmp    20ff5 <__ref_imul_rm2a_v+0xf5>
   2108e:	66 90                	xchg   %ax,%ax

00021090 <__ref_imul_irm2r_v>:
   21090:	55                   	push   %ebp
   21091:	57                   	push   %edi
   21092:	56                   	push   %esi
   21093:	53                   	push   %ebx
   21094:	e8 e7 33 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21099:	81 c3 67 df 02 00    	add    $0x2df67,%ebx
   2109f:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
   210a5:	8b bc 24 a0 00 00 00 	mov    0xa0(%esp),%edi
   210ac:	e8 2f 97 00 00       	call   2a7e0 <set_ref>
   210b1:	8d b3 84 07 00 00    	lea    0x784(%ebx),%esi
   210b7:	83 ec 04             	sub    $0x4,%esp
   210ba:	0f b6 06             	movzbl (%esi),%eax
   210bd:	89 44 24 28          	mov    %eax,0x28(%esp)
   210c1:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   210c5:	8d 6c 24 3c          	lea    0x3c(%esp),%ebp
   210c9:	55                   	push   %ebp
   210ca:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   210ce:	89 44 24 14          	mov    %eax,0x14(%esp)
   210d2:	50                   	push   %eax
   210d3:	8d 47 01             	lea    0x1(%edi),%eax
   210d6:	50                   	push   %eax
   210d7:	e8 c4 0d ff ff       	call   11ea0 <modrm_r_rm>
   210dc:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   210e3:	00 
   210e4:	83 c0 01             	add    $0x1,%eax
   210e7:	89 2c 24             	mov    %ebp,(%esp)
   210ea:	89 44 24 14          	mov    %eax,0x14(%esp)
   210ee:	89 c1                	mov    %eax,%ecx
   210f0:	0f b6 06             	movzbl (%esi),%eax
   210f3:	01 cf                	add    %ecx,%edi
   210f5:	89 44 24 7c          	mov    %eax,0x7c(%esp)
   210f9:	89 7c 24 70          	mov    %edi,0x70(%esp)
   210fd:	e8 de 12 ff ff       	call   123e0 <operand_read>
   21102:	59                   	pop    %ecx
   21103:	8d 44 24 68          	lea    0x68(%esp),%eax
   21107:	89 44 24 14          	mov    %eax,0x14(%esp)
   2110b:	50                   	push   %eax
   2110c:	e8 cf 12 ff ff       	call   123e0 <operand_read>
   21111:	0f b6 16             	movzbl (%esi),%edx
   21114:	8b 4c 24 54          	mov    0x54(%esp),%ecx
   21118:	89 54 24 10          	mov    %edx,0x10(%esp)
   2111c:	89 d0                	mov    %edx,%eax
   2111e:	83 ea 08             	sub    $0x8,%edx
   21121:	83 c4 10             	add    $0x10,%esp
   21124:	81 e2 f7 00 00 00    	and    $0xf7,%edx
   2112a:	74 09                	je     21135 <__ref_imul_irm2r_v+0xa5>
   2112c:	83 f8 20             	cmp    $0x20,%eax
   2112f:	0f 85 90 00 00 00    	jne    211c5 <__ref_imul_irm2r_v+0x135>
   21135:	8b 54 24 68          	mov    0x68(%esp),%edx
   21139:	3c 08                	cmp    $0x8,%al
   2113b:	0f 84 7f 00 00 00    	je     211c0 <__ref_imul_irm2r_v+0x130>
   21141:	3c 10                	cmp    $0x10,%al
   21143:	74 6b                	je     211b0 <__ref_imul_irm2r_v+0x120>
   21145:	3c 08                	cmp    $0x8,%al
   21147:	74 6e                	je     211b7 <__ref_imul_irm2r_v+0x127>
   21149:	0f bf fa             	movswl %dx,%edi
   2114c:	3c 10                	cmp    $0x10,%al
   2114e:	0f 44 d7             	cmove  %edi,%edx
   21151:	83 ec 04             	sub    $0x4,%esp
   21154:	ff 74 24 04          	pushl  0x4(%esp)
   21158:	51                   	push   %ecx
   21159:	52                   	push   %edx
   2115a:	e8 31 90 00 00       	call   2a190 <__ref_alu_imul>
   2115f:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   21163:	89 44 24 30          	mov    %eax,0x30(%esp)
   21167:	89 3c 24             	mov    %edi,(%esp)
   2116a:	e8 21 14 ff ff       	call   12590 <operand_write>
   2116f:	58                   	pop    %eax
   21170:	0f b6 06             	movzbl (%esi),%eax
   21173:	5a                   	pop    %edx
   21174:	57                   	push   %edi
   21175:	55                   	push   %ebp
   21176:	c0 e8 03             	shr    $0x3,%al
   21179:	ff 74 24 18          	pushl  0x18(%esp)
   2117d:	8b 7c 24 18          	mov    0x18(%esp),%edi
   21181:	01 f8                	add    %edi,%eax
   21183:	0f b6 c0             	movzbl %al,%eax
   21186:	50                   	push   %eax
   21187:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   2118d:	50                   	push   %eax
   2118e:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   21194:	50                   	push   %eax
   21195:	e8 16 11 ff ff       	call   122b0 <print_asm_3>
   2119a:	0f b6 06             	movzbl (%esi),%eax
   2119d:	81 c4 ac 00 00 00    	add    $0xac,%esp
   211a3:	5b                   	pop    %ebx
   211a4:	5e                   	pop    %esi
   211a5:	c0 e8 03             	shr    $0x3,%al
   211a8:	0f b6 c0             	movzbl %al,%eax
   211ab:	01 f8                	add    %edi,%eax
   211ad:	5f                   	pop    %edi
   211ae:	5d                   	pop    %ebp
   211af:	c3                   	ret    
   211b0:	0f bf c9             	movswl %cx,%ecx
   211b3:	3c 08                	cmp    $0x8,%al
   211b5:	75 92                	jne    21149 <__ref_imul_irm2r_v+0xb9>
   211b7:	0f be d2             	movsbl %dl,%edx
   211ba:	eb 95                	jmp    21151 <__ref_imul_irm2r_v+0xc1>
   211bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   211c0:	0f be c9             	movsbl %cl,%ecx
   211c3:	eb 80                	jmp    21145 <__ref_imul_irm2r_v+0xb5>
   211c5:	e8 26 fb ff ff       	call   20cf0 <sign_ext.part.0>
   211ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000211d0 <__ref_imul_i8rm2r_v>:
   211d0:	55                   	push   %ebp
   211d1:	57                   	push   %edi
   211d2:	56                   	push   %esi
   211d3:	53                   	push   %ebx
   211d4:	e8 a7 32 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   211d9:	81 c3 27 de 02 00    	add    $0x2de27,%ebx
   211df:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
   211e5:	8b b4 24 a0 00 00 00 	mov    0xa0(%esp),%esi
   211ec:	e8 ef 95 00 00       	call   2a7e0 <set_ref>
   211f1:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   211f7:	83 ec 04             	sub    $0x4,%esp
   211fa:	89 44 24 04          	mov    %eax,0x4(%esp)
   211fe:	0f b6 00             	movzbl (%eax),%eax
   21201:	89 44 24 28          	mov    %eax,0x28(%esp)
   21205:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   21209:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   2120d:	8d 46 01             	lea    0x1(%esi),%eax
   21210:	57                   	push   %edi
   21211:	8d 6c 24 1c          	lea    0x1c(%esp),%ebp
   21215:	55                   	push   %ebp
   21216:	50                   	push   %eax
   21217:	e8 84 0c ff ff       	call   11ea0 <modrm_r_rm>
   2121c:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   21223:	00 
   21224:	8d 48 01             	lea    0x1(%eax),%ecx
   21227:	89 44 24 14          	mov    %eax,0x14(%esp)
   2122b:	01 ce                	add    %ecx,%esi
   2122d:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   21231:	c7 44 24 7c 08 00 00 	movl   $0x8,0x7c(%esp)
   21238:	00 
   21239:	89 74 24 70          	mov    %esi,0x70(%esp)
   2123d:	89 3c 24             	mov    %edi,(%esp)
   21240:	e8 9b 11 ff ff       	call   123e0 <operand_read>
   21245:	5e                   	pop    %esi
   21246:	8d 74 24 68          	lea    0x68(%esp),%esi
   2124a:	89 74 24 18          	mov    %esi,0x18(%esp)
   2124e:	56                   	push   %esi
   2124f:	e8 8c 11 ff ff       	call   123e0 <operand_read>
   21254:	8b 44 24 10          	mov    0x10(%esp),%eax
   21258:	0f b6 08             	movzbl (%eax),%ecx
   2125b:	8b 44 24 54          	mov    0x54(%esp),%eax
   2125f:	83 c4 10             	add    $0x10,%esp
   21262:	8d 71 f8             	lea    -0x8(%ecx),%esi
   21265:	89 ca                	mov    %ecx,%edx
   21267:	81 e6 f7 00 00 00    	and    $0xf7,%esi
   2126d:	74 09                	je     21278 <__ref_imul_i8rm2r_v+0xa8>
   2126f:	83 f9 20             	cmp    $0x20,%ecx
   21272:	0f 85 7d 00 00 00    	jne    212f5 <__ref_imul_i8rm2r_v+0x125>
   21278:	80 fa 08             	cmp    $0x8,%dl
   2127b:	74 73                	je     212f0 <__ref_imul_i8rm2r_v+0x120>
   2127d:	0f bf f0             	movswl %ax,%esi
   21280:	80 fa 10             	cmp    $0x10,%dl
   21283:	0f 44 c6             	cmove  %esi,%eax
   21286:	83 ec 04             	sub    $0x4,%esp
   21289:	51                   	push   %ecx
   2128a:	50                   	push   %eax
   2128b:	0f be 44 24 74       	movsbl 0x74(%esp),%eax
   21290:	50                   	push   %eax
   21291:	e8 fa 8e 00 00       	call   2a190 <__ref_alu_imul>
   21296:	89 2c 24             	mov    %ebp,(%esp)
   21299:	89 44 24 30          	mov    %eax,0x30(%esp)
   2129d:	e8 ee 12 ff ff       	call   12590 <operand_write>
   212a2:	0f b6 44 24 18       	movzbl 0x18(%esp),%eax
   212a7:	5a                   	pop    %edx
   212a8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   212ae:	59                   	pop    %ecx
   212af:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   212b3:	83 c0 01             	add    $0x1,%eax
   212b6:	80 39 10             	cmpb   $0x10,(%ecx)
   212b9:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   212bf:	0f b6 c0             	movzbl %al,%eax
   212c2:	55                   	push   %ebp
   212c3:	0f 45 d1             	cmovne %ecx,%edx
   212c6:	57                   	push   %edi
   212c7:	ff 74 24 1c          	pushl  0x1c(%esp)
   212cb:	50                   	push   %eax
   212cc:	8d 83 8c 70 fe ff    	lea    -0x18f74(%ebx),%eax
   212d2:	52                   	push   %edx
   212d3:	50                   	push   %eax
   212d4:	e8 d7 0f ff ff       	call   122b0 <print_asm_3>
   212d9:	8b 44 24 24          	mov    0x24(%esp),%eax
   212dd:	81 c4 ac 00 00 00    	add    $0xac,%esp
   212e3:	5b                   	pop    %ebx
   212e4:	5e                   	pop    %esi
   212e5:	83 c0 02             	add    $0x2,%eax
   212e8:	5f                   	pop    %edi
   212e9:	5d                   	pop    %ebp
   212ea:	c3                   	ret    
   212eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   212ef:	90                   	nop
   212f0:	0f be c0             	movsbl %al,%eax
   212f3:	eb 91                	jmp    21286 <__ref_imul_i8rm2r_v+0xb6>
   212f5:	e8 f6 f9 ff ff       	call   20cf0 <sign_ext.part.0>
   212fa:	66 90                	xchg   %ax,%ax
   212fc:	66 90                	xchg   %ax,%ax
   212fe:	66 90                	xchg   %ax,%ax

00021300 <__ref_leave>:
   21300:	56                   	push   %esi
   21301:	53                   	push   %ebx
   21302:	e8 79 31 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21307:	81 c3 f9 dc 02 00    	add    $0x2dcf9,%ebx
   2130d:	83 ec 34             	sub    $0x34,%esp
   21310:	e8 cb 94 00 00       	call   2a7e0 <set_ref>
   21315:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   2131b:	83 ec 0c             	sub    $0xc,%esp
   2131e:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   21325:	00 
   21326:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   2132b:	8b 46 14             	mov    0x14(%esi),%eax
   2132e:	c7 44 24 28 20 00 00 	movl   $0x20,0x28(%esp)
   21335:	00 
   21336:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2133a:	89 46 10             	mov    %eax,0x10(%esi)
   2133d:	8d 44 24 18          	lea    0x18(%esp),%eax
   21341:	50                   	push   %eax
   21342:	e8 99 10 ff ff       	call   123e0 <operand_read>
   21347:	8b 44 24 28          	mov    0x28(%esp),%eax
   2134b:	83 c4 0c             	add    $0xc,%esp
   2134e:	83 46 10 04          	addl   $0x4,0x10(%esi)
   21352:	6a 01                	push   $0x1
   21354:	89 46 14             	mov    %eax,0x14(%esi)
   21357:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   2135d:	50                   	push   %eax
   2135e:	8d 83 39 6d fe ff    	lea    -0x192c7(%ebx),%eax
   21364:	50                   	push   %eax
   21365:	e8 56 0c ff ff       	call   11fc0 <print_asm_0>
   2136a:	83 c4 44             	add    $0x44,%esp
   2136d:	b8 01 00 00 00       	mov    $0x1,%eax
   21372:	5b                   	pop    %ebx
   21373:	5e                   	pop    %esi
   21374:	c3                   	ret    
   21375:	66 90                	xchg   %ax,%ax
   21377:	66 90                	xchg   %ax,%ax
   21379:	66 90                	xchg   %ax,%ax
   2137b:	66 90                	xchg   %ax,%ax
   2137d:	66 90                	xchg   %ax,%ax
   2137f:	90                   	nop

00021380 <__ref_lea>:
   21380:	55                   	push   %ebp
   21381:	57                   	push   %edi
   21382:	56                   	push   %esi
   21383:	53                   	push   %ebx
   21384:	e8 f7 30 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21389:	81 c3 77 dc 02 00    	add    $0x2dc77,%ebx
   2138f:	83 ec 5c             	sub    $0x5c,%esp
   21392:	e8 49 94 00 00       	call   2a7e0 <set_ref>
   21397:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2139d:	83 ec 04             	sub    $0x4,%esp
   213a0:	0f b6 00             	movzbl (%eax),%eax
   213a3:	89 44 24 40          	mov    %eax,0x40(%esp)
   213a7:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   213ab:	8d 6c 24 30          	lea    0x30(%esp),%ebp
   213af:	55                   	push   %ebp
   213b0:	8d 7c 24 10          	lea    0x10(%esp),%edi
   213b4:	57                   	push   %edi
   213b5:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   213b9:	83 c0 01             	add    $0x1,%eax
   213bc:	50                   	push   %eax
   213bd:	e8 de 0a ff ff       	call   11ea0 <modrm_r_rm>
   213c2:	89 3c 24             	mov    %edi,(%esp)
   213c5:	8d 70 01             	lea    0x1(%eax),%esi
   213c8:	8b 44 24 40          	mov    0x40(%esp),%eax
   213cc:	89 44 24 24          	mov    %eax,0x24(%esp)
   213d0:	e8 bb 11 ff ff       	call   12590 <operand_write>
   213d5:	89 f0                	mov    %esi,%eax
   213d7:	89 3c 24             	mov    %edi,(%esp)
   213da:	0f b6 c0             	movzbl %al,%eax
   213dd:	55                   	push   %ebp
   213de:	50                   	push   %eax
   213df:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   213e5:	50                   	push   %eax
   213e6:	8d 83 3f 6d fe ff    	lea    -0x192c1(%ebx),%eax
   213ec:	50                   	push   %eax
   213ed:	e8 ae 0d ff ff       	call   121a0 <print_asm_2>
   213f2:	83 c4 7c             	add    $0x7c,%esp
   213f5:	89 f0                	mov    %esi,%eax
   213f7:	5b                   	pop    %ebx
   213f8:	5e                   	pop    %esi
   213f9:	5f                   	pop    %edi
   213fa:	5d                   	pop    %ebp
   213fb:	c3                   	ret    
   213fc:	66 90                	xchg   %ax,%ax
   213fe:	66 90                	xchg   %ax,%ax

00021400 <instr_execute_1op>:
   21400:	57                   	push   %edi
   21401:	56                   	push   %esi
   21402:	53                   	push   %ebx
   21403:	e8 78 30 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21408:	81 c3 f8 db 02 00    	add    $0x2dbf8,%ebx
   2140e:	e8 cd 93 00 00       	call   2a7e0 <set_ref>
   21413:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   21419:	83 ec 0c             	sub    $0xc,%esp
   2141c:	56                   	push   %esi
   2141d:	e8 be 0f ff ff       	call   123e0 <operand_read>
   21422:	8b 56 0c             	mov    0xc(%esi),%edx
   21425:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   2142b:	85 d2                	test   %edx,%edx
   2142d:	0f 95 c0             	setne  %al
   21430:	f7 da                	neg    %edx
   21432:	89 c7                	mov    %eax,%edi
   21434:	0f b6 41 24          	movzbl 0x24(%ecx),%eax
   21438:	89 56 0c             	mov    %edx,0xc(%esi)
   2143b:	83 e0 fe             	and    $0xfffffffe,%eax
   2143e:	09 f8                	or     %edi,%eax
   21440:	88 41 24             	mov    %al,0x24(%ecx)
   21443:	89 34 24             	mov    %esi,(%esp)
   21446:	e8 45 11 ff ff       	call   12590 <operand_write>
   2144b:	83 c4 10             	add    $0x10,%esp
   2144e:	5b                   	pop    %ebx
   2144f:	5e                   	pop    %esi
   21450:	5f                   	pop    %edi
   21451:	c3                   	ret    
   21452:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21459:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021460 <__ref_neg_rm_b>:
   21460:	55                   	push   %ebp
   21461:	57                   	push   %edi
   21462:	56                   	push   %esi
   21463:	53                   	push   %ebx
   21464:	e8 17 30 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21469:	81 c3 97 db 02 00    	add    $0x2db97,%ebx
   2146f:	83 ec 14             	sub    $0x14,%esp
   21472:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   21478:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2147e:	56                   	push   %esi
   2147f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   21483:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   2148a:	83 c0 01             	add    $0x1,%eax
   2148d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   21494:	50                   	push   %eax
   21495:	e8 e6 0a ff ff       	call   11f80 <modrm_rm>
   2149a:	8b 4d 10             	mov    0x10(%ebp),%ecx
   2149d:	83 c4 10             	add    $0x10,%esp
   214a0:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   214a6:	8d 78 01             	lea    0x1(%eax),%edi
   214a9:	89 f8                	mov    %edi,%eax
   214ab:	0f b6 c0             	movzbl %al,%eax
   214ae:	83 f9 08             	cmp    $0x8,%ecx
   214b1:	74 12                	je     214c5 <__ref_neg_rm_b+0x65>
   214b3:	83 f9 10             	cmp    $0x10,%ecx
   214b6:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   214bc:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   214c2:	0f 45 d1             	cmovne %ecx,%edx
   214c5:	56                   	push   %esi
   214c6:	50                   	push   %eax
   214c7:	8d 83 e5 66 fe ff    	lea    -0x1991b(%ebx),%eax
   214cd:	52                   	push   %edx
   214ce:	50                   	push   %eax
   214cf:	e8 cc 0b ff ff       	call   120a0 <print_asm_1>
   214d4:	e8 27 ff ff ff       	call   21400 <instr_execute_1op>
   214d9:	83 c4 1c             	add    $0x1c,%esp
   214dc:	89 f8                	mov    %edi,%eax
   214de:	5b                   	pop    %ebx
   214df:	5e                   	pop    %esi
   214e0:	5f                   	pop    %edi
   214e1:	5d                   	pop    %ebp
   214e2:	c3                   	ret    
   214e3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   214ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000214f0 <__ref_neg_rm_v>:
   214f0:	55                   	push   %ebp
   214f1:	57                   	push   %edi
   214f2:	56                   	push   %esi
   214f3:	53                   	push   %ebx
   214f4:	e8 87 2f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   214f9:	81 c3 07 db 02 00    	add    $0x2db07,%ebx
   214ff:	83 ec 14             	sub    $0x14,%esp
   21502:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   21508:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2150e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   21514:	0f b6 00             	movzbl (%eax),%eax
   21517:	56                   	push   %esi
   21518:	89 45 10             	mov    %eax,0x10(%ebp)
   2151b:	89 46 10             	mov    %eax,0x10(%esi)
   2151e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   21522:	83 c0 01             	add    $0x1,%eax
   21525:	50                   	push   %eax
   21526:	e8 55 0a ff ff       	call   11f80 <modrm_rm>
   2152b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   2152e:	83 c4 10             	add    $0x10,%esp
   21531:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   21537:	8d 78 01             	lea    0x1(%eax),%edi
   2153a:	89 f8                	mov    %edi,%eax
   2153c:	0f b6 c0             	movzbl %al,%eax
   2153f:	83 f9 08             	cmp    $0x8,%ecx
   21542:	74 12                	je     21556 <__ref_neg_rm_v+0x66>
   21544:	83 f9 10             	cmp    $0x10,%ecx
   21547:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2154d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   21553:	0f 45 d1             	cmovne %ecx,%edx
   21556:	56                   	push   %esi
   21557:	50                   	push   %eax
   21558:	8d 83 e5 66 fe ff    	lea    -0x1991b(%ebx),%eax
   2155e:	52                   	push   %edx
   2155f:	50                   	push   %eax
   21560:	e8 3b 0b ff ff       	call   120a0 <print_asm_1>
   21565:	e8 96 fe ff ff       	call   21400 <instr_execute_1op>
   2156a:	83 c4 1c             	add    $0x1c,%esp
   2156d:	89 f8                	mov    %edi,%eax
   2156f:	5b                   	pop    %ebx
   21570:	5e                   	pop    %esi
   21571:	5f                   	pop    %edi
   21572:	5d                   	pop    %ebp
   21573:	c3                   	ret    
   21574:	66 90                	xchg   %ax,%ax
   21576:	66 90                	xchg   %ax,%ax
   21578:	66 90                	xchg   %ax,%ax
   2157a:	66 90                	xchg   %ax,%ax
   2157c:	66 90                	xchg   %ax,%ax
   2157e:	66 90                	xchg   %ax,%ax

00021580 <__ref_mul_rm2a_b>:
   21580:	55                   	push   %ebp
   21581:	57                   	push   %edi
   21582:	56                   	push   %esi
   21583:	53                   	push   %ebx
   21584:	e8 f7 2e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21589:	81 c3 77 da 02 00    	add    $0x2da77,%ebx
   2158f:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
   21595:	e8 46 92 00 00       	call   2a7e0 <set_ref>
   2159a:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   215a1:	00 
   215a2:	83 ec 08             	sub    $0x8,%esp
   215a5:	c7 44 24 1c 01 00 00 	movl   $0x1,0x1c(%esp)
   215ac:	00 
   215ad:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   215b4:	00 
   215b5:	c7 44 24 50 08 00 00 	movl   $0x8,0x50(%esp)
   215bc:	00 
   215bd:	8d 7c 24 40          	lea    0x40(%esp),%edi
   215c1:	57                   	push   %edi
   215c2:	8b 84 24 ac 00 00 00 	mov    0xac(%esp),%eax
   215c9:	83 c0 01             	add    $0x1,%eax
   215cc:	50                   	push   %eax
   215cd:	e8 ae 09 ff ff       	call   11f80 <modrm_rm>
   215d2:	8d 70 01             	lea    0x1(%eax),%esi
   215d5:	58                   	pop    %eax
   215d6:	8d 6c 24 20          	lea    0x20(%esp),%ebp
   215da:	55                   	push   %ebp
   215db:	e8 00 0e ff ff       	call   123e0 <operand_read>
   215e0:	89 3c 24             	mov    %edi,(%esp)
   215e3:	e8 f8 0d ff ff       	call   123e0 <operand_read>
   215e8:	83 c4 0c             	add    $0xc,%esp
   215eb:	6a 08                	push   $0x8
   215ed:	ff 74 24 28          	pushl  0x28(%esp)
   215f1:	ff 74 24 50          	pushl  0x50(%esp)
   215f5:	e8 b6 8a 00 00       	call   2a0b0 <__ref_alu_mul>
   215fa:	c7 44 24 7c 10 00 00 	movl   $0x10,0x7c(%esp)
   21601:	00 
   21602:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%esp)
   21609:	00 
   2160a:	c7 44 24 70 00 00 00 	movl   $0x0,0x70(%esp)
   21611:	00 
   21612:	89 44 24 78          	mov    %eax,0x78(%esp)
   21616:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2161a:	5a                   	pop    %edx
   2161b:	8d 54 24 68          	lea    0x68(%esp),%edx
   2161f:	52                   	push   %edx
   21620:	e8 6b 0f ff ff       	call   12590 <operand_write>
   21625:	83 c4 10             	add    $0x10,%esp
   21628:	8b 44 24 0c          	mov    0xc(%esp),%eax
   2162c:	f6 c4 ff             	test   $0xff,%ah
   2162f:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   21635:	75 39                	jne    21670 <__ref_mul_rm2a_b+0xf0>
   21637:	66 81 60 24 fe f7    	andw   $0xf7fe,0x24(%eax)
   2163d:	89 f0                	mov    %esi,%eax
   2163f:	83 ec 0c             	sub    $0xc,%esp
   21642:	0f b6 c0             	movzbl %al,%eax
   21645:	55                   	push   %ebp
   21646:	57                   	push   %edi
   21647:	50                   	push   %eax
   21648:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2164e:	50                   	push   %eax
   2164f:	8d 83 a2 70 fe ff    	lea    -0x18f5e(%ebx),%eax
   21655:	50                   	push   %eax
   21656:	e8 45 0b ff ff       	call   121a0 <print_asm_2>
   2165b:	81 c4 ac 00 00 00    	add    $0xac,%esp
   21661:	89 f0                	mov    %esi,%eax
   21663:	5b                   	pop    %ebx
   21664:	5e                   	pop    %esi
   21665:	5f                   	pop    %edi
   21666:	5d                   	pop    %ebp
   21667:	c3                   	ret    
   21668:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2166f:	90                   	nop
   21670:	66 81 48 24 01 08    	orw    $0x801,0x24(%eax)
   21676:	eb c5                	jmp    2163d <__ref_mul_rm2a_b+0xbd>
   21678:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2167f:	90                   	nop

00021680 <__ref_mul_rm2a_v>:
   21680:	55                   	push   %ebp
   21681:	57                   	push   %edi
   21682:	56                   	push   %esi
   21683:	53                   	push   %ebx
   21684:	e8 f7 2d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21689:	81 c3 77 d9 02 00    	add    $0x2d977,%ebx
   2168f:	81 ec ac 00 00 00    	sub    $0xac,%esp
   21695:	e8 46 91 00 00       	call   2a7e0 <set_ref>
   2169a:	8d ab 84 07 00 00    	lea    0x784(%ebx),%ebp
   216a0:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
   216a7:	00 
   216a8:	83 ec 08             	sub    $0x8,%esp
   216ab:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   216b2:	00 
   216b3:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
   216b7:	89 44 24 28          	mov    %eax,0x28(%esp)
   216bb:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   216bf:	8d 7c 24 3c          	lea    0x3c(%esp),%edi
   216c3:	57                   	push   %edi
   216c4:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   216cb:	83 c0 01             	add    $0x1,%eax
   216ce:	50                   	push   %eax
   216cf:	e8 ac 08 ff ff       	call   11f80 <modrm_rm>
   216d4:	59                   	pop    %ecx
   216d5:	8d 70 01             	lea    0x1(%eax),%esi
   216d8:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   216dc:	50                   	push   %eax
   216dd:	e8 fe 0c ff ff       	call   123e0 <operand_read>
   216e2:	89 3c 24             	mov    %edi,(%esp)
   216e5:	e8 f6 0c ff ff       	call   123e0 <operand_read>
   216ea:	89 f0                	mov    %esi,%eax
   216ec:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   216f3:	00 
   216f4:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   216fb:	01 00 00 00 
   216ff:	0f b6 c8             	movzbl %al,%ecx
   21702:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp)
   21709:	00 
   2170a:	c7 84 24 90 00 00 00 	movl   $0x2,0x90(%esp)
   21711:	02 00 00 00 
   21715:	83 c4 10             	add    $0x10,%esp
   21718:	80 7d 00 10          	cmpb   $0x10,0x0(%ebp)
   2171c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   21720:	0f 84 ba 00 00 00    	je     217e0 <__ref_mul_rm2a_v+0x160>
   21726:	83 ec 04             	sub    $0x4,%esp
   21729:	6a 20                	push   $0x20
   2172b:	ff 74 24 24          	pushl  0x24(%esp)
   2172f:	ff 74 24 4c          	pushl  0x4c(%esp)
   21733:	e8 78 89 00 00       	call   2a0b0 <__ref_alu_mul>
   21738:	c7 44 24 78 20 00 00 	movl   $0x20,0x78(%esp)
   2173f:	00 
   21740:	89 44 24 74          	mov    %eax,0x74(%esp)
   21744:	89 94 24 98 00 00 00 	mov    %edx,0x98(%esp)
   2174b:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   21751:	c7 84 24 9c 00 00 00 	movl   $0x20,0x9c(%esp)
   21758:	20 00 00 00 
   2175c:	59                   	pop    %ecx
   2175d:	5d                   	pop    %ebp
   2175e:	8d 44 24 60          	lea    0x60(%esp),%eax
   21762:	50                   	push   %eax
   21763:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   2176a:	89 44 24 14          	mov    %eax,0x14(%esp)
   2176e:	55                   	push   %ebp
   2176f:	57                   	push   %edi
   21770:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   21774:	51                   	push   %ecx
   21775:	52                   	push   %edx
   21776:	8d 93 a2 70 fe ff    	lea    -0x18f5e(%ebx),%edx
   2177c:	52                   	push   %edx
   2177d:	e8 2e 0b ff ff       	call   122b0 <print_asm_3>
   21782:	83 c4 20             	add    $0x20,%esp
   21785:	8b 44 24 08          	mov    0x8(%esp),%eax
   21789:	83 ec 0c             	sub    $0xc,%esp
   2178c:	50                   	push   %eax
   2178d:	e8 fe 0d ff ff       	call   12590 <operand_write>
   21792:	89 2c 24             	mov    %ebp,(%esp)
   21795:	e8 f6 0d ff ff       	call   12590 <operand_write>
   2179a:	83 c4 10             	add    $0x10,%esp
   2179d:	8b 94 24 88 00 00 00 	mov    0x88(%esp),%edx
   217a4:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   217aa:	85 d2                	test   %edx,%edx
   217ac:	74 1a                	je     217c8 <__ref_mul_rm2a_v+0x148>
   217ae:	66 81 48 24 01 08    	orw    $0x801,0x24(%eax)
   217b4:	81 c4 ac 00 00 00    	add    $0xac,%esp
   217ba:	89 f0                	mov    %esi,%eax
   217bc:	5b                   	pop    %ebx
   217bd:	5e                   	pop    %esi
   217be:	5f                   	pop    %edi
   217bf:	5d                   	pop    %ebp
   217c0:	c3                   	ret    
   217c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   217c8:	66 81 60 24 fe f7    	andw   $0xf7fe,0x24(%eax)
   217ce:	81 c4 ac 00 00 00    	add    $0xac,%esp
   217d4:	89 f0                	mov    %esi,%eax
   217d6:	5b                   	pop    %ebx
   217d7:	5e                   	pop    %esi
   217d8:	5f                   	pop    %edi
   217d9:	5d                   	pop    %ebp
   217da:	c3                   	ret    
   217db:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   217df:	90                   	nop
   217e0:	83 ec 04             	sub    $0x4,%esp
   217e3:	6a 10                	push   $0x10
   217e5:	ff 74 24 24          	pushl  0x24(%esp)
   217e9:	ff 74 24 4c          	pushl  0x4c(%esp)
   217ed:	e8 be 88 00 00       	call   2a0b0 <__ref_alu_mul>
   217f2:	c7 44 24 78 10 00 00 	movl   $0x10,0x78(%esp)
   217f9:	00 
   217fa:	c7 84 24 9c 00 00 00 	movl   $0x10,0x9c(%esp)
   21801:	10 00 00 00 
   21805:	0f b7 d0             	movzwl %ax,%edx
   21808:	c1 e8 10             	shr    $0x10,%eax
   2180b:	89 54 24 74          	mov    %edx,0x74(%esp)
   2180f:	89 84 24 98 00 00 00 	mov    %eax,0x98(%esp)
   21816:	58                   	pop    %eax
   21817:	5a                   	pop    %edx
   21818:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2181e:	8d 44 24 60          	lea    0x60(%esp),%eax
   21822:	50                   	push   %eax
   21823:	8d ac 24 88 00 00 00 	lea    0x88(%esp),%ebp
   2182a:	89 44 24 14          	mov    %eax,0x14(%esp)
   2182e:	55                   	push   %ebp
   2182f:	57                   	push   %edi
   21830:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   21834:	51                   	push   %ecx
   21835:	e9 3b ff ff ff       	jmp    21775 <__ref_mul_rm2a_v+0xf5>
   2183a:	66 90                	xchg   %ax,%ax
   2183c:	66 90                	xchg   %ax,%ax
   2183e:	66 90                	xchg   %ax,%ax

00021840 <instr_execute_1op>:
   21840:	56                   	push   %esi
   21841:	53                   	push   %ebx
   21842:	e8 39 2c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21847:	81 c3 b9 d7 02 00    	add    $0x2d7b9,%ebx
   2184d:	83 ec 04             	sub    $0x4,%esp
   21850:	e8 8b 8f 00 00       	call   2a7e0 <set_ref>
   21855:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2185b:	83 ec 0c             	sub    $0xc,%esp
   2185e:	56                   	push   %esi
   2185f:	e8 7c 0b ff ff       	call   123e0 <operand_read>
   21864:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2186a:	83 c4 0c             	add    $0xc,%esp
   2186d:	0f b6 00             	movzbl (%eax),%eax
   21870:	50                   	push   %eax
   21871:	ff 76 0c             	pushl  0xc(%esi)
   21874:	6a 01                	push   $0x1
   21876:	e8 85 86 00 00       	call   29f00 <__ref_alu_sub>
   2187b:	89 34 24             	mov    %esi,(%esp)
   2187e:	89 46 0c             	mov    %eax,0xc(%esi)
   21881:	e8 0a 0d ff ff       	call   12590 <operand_write>
   21886:	83 c4 14             	add    $0x14,%esp
   21889:	5b                   	pop    %ebx
   2188a:	5e                   	pop    %esi
   2188b:	c3                   	ret    
   2188c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00021890 <__ref_dec_r_v>:
   21890:	53                   	push   %ebx
   21891:	e8 ea 2b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21896:	81 c3 6a d7 02 00    	add    $0x2d76a,%ebx
   2189c:	83 ec 08             	sub    $0x8,%esp
   2189f:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   218a5:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   218ab:	0f b6 08             	movzbl (%eax),%ecx
   218ae:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   218b4:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   218ba:	89 48 10             	mov    %ecx,0x10(%eax)
   218bd:	8b 44 24 14          	mov    0x14(%esp),%eax
   218c1:	89 4a 10             	mov    %ecx,0x10(%edx)
   218c4:	83 e0 07             	and    $0x7,%eax
   218c7:	89 42 04             	mov    %eax,0x4(%edx)
   218ca:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   218d0:	83 f9 08             	cmp    $0x8,%ecx
   218d3:	74 12                	je     218e7 <__ref_dec_r_v+0x57>
   218d5:	83 f9 10             	cmp    $0x10,%ecx
   218d8:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   218de:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   218e4:	0f 45 c1             	cmovne %ecx,%eax
   218e7:	52                   	push   %edx
   218e8:	6a 01                	push   $0x1
   218ea:	50                   	push   %eax
   218eb:	8d 83 b7 67 fe ff    	lea    -0x19849(%ebx),%eax
   218f1:	50                   	push   %eax
   218f2:	e8 a9 07 ff ff       	call   120a0 <print_asm_1>
   218f7:	e8 44 ff ff ff       	call   21840 <instr_execute_1op>
   218fc:	83 c4 18             	add    $0x18,%esp
   218ff:	b8 01 00 00 00       	mov    $0x1,%eax
   21904:	5b                   	pop    %ebx
   21905:	c3                   	ret    
   21906:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2190d:	8d 76 00             	lea    0x0(%esi),%esi

00021910 <__ref_dec_rm_v>:
   21910:	55                   	push   %ebp
   21911:	57                   	push   %edi
   21912:	56                   	push   %esi
   21913:	53                   	push   %ebx
   21914:	e8 67 2b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21919:	81 c3 e7 d6 02 00    	add    $0x2d6e7,%ebx
   2191f:	83 ec 14             	sub    $0x14,%esp
   21922:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   21928:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2192e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   21934:	0f b6 00             	movzbl (%eax),%eax
   21937:	56                   	push   %esi
   21938:	89 45 10             	mov    %eax,0x10(%ebp)
   2193b:	89 46 10             	mov    %eax,0x10(%esi)
   2193e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   21942:	83 c0 01             	add    $0x1,%eax
   21945:	50                   	push   %eax
   21946:	e8 35 06 ff ff       	call   11f80 <modrm_rm>
   2194b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   2194e:	83 c4 10             	add    $0x10,%esp
   21951:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   21957:	8d 78 01             	lea    0x1(%eax),%edi
   2195a:	89 f8                	mov    %edi,%eax
   2195c:	0f b6 c0             	movzbl %al,%eax
   2195f:	83 f9 08             	cmp    $0x8,%ecx
   21962:	74 12                	je     21976 <__ref_dec_rm_v+0x66>
   21964:	83 f9 10             	cmp    $0x10,%ecx
   21967:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2196d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   21973:	0f 45 d1             	cmovne %ecx,%edx
   21976:	56                   	push   %esi
   21977:	50                   	push   %eax
   21978:	8d 83 b7 67 fe ff    	lea    -0x19849(%ebx),%eax
   2197e:	52                   	push   %edx
   2197f:	50                   	push   %eax
   21980:	e8 1b 07 ff ff       	call   120a0 <print_asm_1>
   21985:	e8 b6 fe ff ff       	call   21840 <instr_execute_1op>
   2198a:	83 c4 1c             	add    $0x1c,%esp
   2198d:	89 f8                	mov    %edi,%eax
   2198f:	5b                   	pop    %ebx
   21990:	5e                   	pop    %esi
   21991:	5f                   	pop    %edi
   21992:	5d                   	pop    %ebp
   21993:	c3                   	ret    
   21994:	66 90                	xchg   %ax,%ax
   21996:	66 90                	xchg   %ax,%ax
   21998:	66 90                	xchg   %ax,%ax
   2199a:	66 90                	xchg   %ax,%ax
   2199c:	66 90                	xchg   %ax,%ax
   2199e:	66 90                	xchg   %ax,%ax

000219a0 <__ref_stos_b>:
   219a0:	56                   	push   %esi
   219a1:	53                   	push   %ebx
   219a2:	e8 d9 2a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   219a7:	81 c3 59 d6 02 00    	add    $0x2d659,%ebx
   219ad:	83 ec 54             	sub    $0x54,%esp
   219b0:	e8 2b 8e 00 00       	call   2a7e0 <set_ref>
   219b5:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   219bb:	83 ec 0c             	sub    $0xc,%esp
   219be:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   219c5:	00 
   219c6:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   219cd:	00 
   219ce:	8b 46 1c             	mov    0x1c(%esi),%eax
   219d1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   219d8:	00 
   219d9:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   219e0:	00 
   219e1:	c6 44 24 40 00       	movb   $0x0,0x40(%esp)
   219e6:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   219ed:	00 
   219ee:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   219f2:	8d 44 24 14          	lea    0x14(%esp),%eax
   219f6:	50                   	push   %eax
   219f7:	e8 e4 09 ff ff       	call   123e0 <operand_read>
   219fc:	8b 44 24 24          	mov    0x24(%esp),%eax
   21a00:	89 44 24 48          	mov    %eax,0x48(%esp)
   21a04:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   21a08:	5a                   	pop    %edx
   21a09:	8b 56 1c             	mov    0x1c(%esi),%edx
   21a0c:	83 e0 04             	and    $0x4,%eax
   21a0f:	3c 01                	cmp    $0x1,%al
   21a11:	19 c0                	sbb    %eax,%eax
   21a13:	83 e0 02             	and    $0x2,%eax
   21a16:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax
   21a1a:	89 46 1c             	mov    %eax,0x1c(%esi)
   21a1d:	8d 44 24 38          	lea    0x38(%esp),%eax
   21a21:	50                   	push   %eax
   21a22:	e8 69 0b ff ff       	call   12590 <operand_write>
   21a27:	83 c4 0c             	add    $0xc,%esp
   21a2a:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21a30:	6a 01                	push   $0x1
   21a32:	50                   	push   %eax
   21a33:	8d 83 c9 66 fe ff    	lea    -0x19937(%ebx),%eax
   21a39:	50                   	push   %eax
   21a3a:	e8 81 05 ff ff       	call   11fc0 <print_asm_0>
   21a3f:	83 c4 64             	add    $0x64,%esp
   21a42:	b8 01 00 00 00       	mov    $0x1,%eax
   21a47:	5b                   	pop    %ebx
   21a48:	5e                   	pop    %esi
   21a49:	c3                   	ret    
   21a4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00021a50 <__ref_stos_v>:
   21a50:	57                   	push   %edi
   21a51:	56                   	push   %esi
   21a52:	53                   	push   %ebx
   21a53:	e8 28 2a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21a58:	81 c3 a8 d5 02 00    	add    $0x2d5a8,%ebx
   21a5e:	83 ec 50             	sub    $0x50,%esp
   21a61:	e8 7a 8d 00 00       	call   2a7e0 <set_ref>
   21a66:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   21a6c:	83 ec 0c             	sub    $0xc,%esp
   21a6f:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   21a75:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   21a7c:	00 
   21a7d:	0f b6 07             	movzbl (%edi),%eax
   21a80:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   21a87:	00 
   21a88:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   21a8f:	00 
   21a90:	89 44 24 24          	mov    %eax,0x24(%esp)
   21a94:	89 44 24 48          	mov    %eax,0x48(%esp)
   21a98:	8b 46 1c             	mov    0x1c(%esi),%eax
   21a9b:	c6 44 24 40 00       	movb   $0x0,0x40(%esp)
   21aa0:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   21aa4:	8d 44 24 14          	lea    0x14(%esp),%eax
   21aa8:	50                   	push   %eax
   21aa9:	e8 32 09 ff ff       	call   123e0 <operand_read>
   21aae:	8b 44 24 24          	mov    0x24(%esp),%eax
   21ab2:	89 44 24 48          	mov    %eax,0x48(%esp)
   21ab6:	83 c4 10             	add    $0x10,%esp
   21ab9:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   21abd:	75 41                	jne    21b00 <__ref_stos_v+0xb0>
   21abf:	0f b6 07             	movzbl (%edi),%eax
   21ac2:	c0 e8 03             	shr    $0x3,%al
   21ac5:	0f b6 c0             	movzbl %al,%eax
   21ac8:	83 ec 0c             	sub    $0xc,%esp
   21acb:	01 46 1c             	add    %eax,0x1c(%esi)
   21ace:	8d 44 24 38          	lea    0x38(%esp),%eax
   21ad2:	50                   	push   %eax
   21ad3:	e8 b8 0a ff ff       	call   12590 <operand_write>
   21ad8:	83 c4 0c             	add    $0xc,%esp
   21adb:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21ae1:	6a 01                	push   $0x1
   21ae3:	50                   	push   %eax
   21ae4:	8d 83 c9 66 fe ff    	lea    -0x19937(%ebx),%eax
   21aea:	50                   	push   %eax
   21aeb:	e8 d0 04 ff ff       	call   11fc0 <print_asm_0>
   21af0:	83 c4 60             	add    $0x60,%esp
   21af3:	b8 01 00 00 00       	mov    $0x1,%eax
   21af8:	5b                   	pop    %ebx
   21af9:	5e                   	pop    %esi
   21afa:	5f                   	pop    %edi
   21afb:	c3                   	ret    
   21afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   21b00:	0f b6 07             	movzbl (%edi),%eax
   21b03:	c1 f8 03             	sar    $0x3,%eax
   21b06:	f7 d8                	neg    %eax
   21b08:	eb be                	jmp    21ac8 <__ref_stos_v+0x78>
   21b0a:	66 90                	xchg   %ax,%ax
   21b0c:	66 90                	xchg   %ax,%ax
   21b0e:	66 90                	xchg   %ax,%ax

00021b10 <__ref_int_>:
   21b10:	56                   	push   %esi
   21b11:	53                   	push   %ebx
   21b12:	e8 69 29 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21b17:	81 c3 e9 d4 02 00    	add    $0x2d4e9,%ebx
   21b1d:	83 ec 34             	sub    $0x34,%esp
   21b20:	e8 bb 8c 00 00       	call   2a7e0 <set_ref>
   21b25:	8b 44 24 40          	mov    0x40(%esp),%eax
   21b29:	83 ec 0c             	sub    $0xc,%esp
   21b2c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   21b33:	00 
   21b34:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
   21b39:	83 c0 01             	add    $0x1,%eax
   21b3c:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
   21b43:	00 
   21b44:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   21b48:	8d 74 24 18          	lea    0x18(%esp),%esi
   21b4c:	56                   	push   %esi
   21b4d:	e8 8e 08 ff ff       	call   123e0 <operand_read>
   21b52:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21b58:	56                   	push   %esi
   21b59:	6a 02                	push   $0x2
   21b5b:	50                   	push   %eax
   21b5c:	8d 83 79 55 fe ff    	lea    -0x1aa87(%ebx),%eax
   21b62:	50                   	push   %eax
   21b63:	e8 38 05 ff ff       	call   120a0 <print_asm_1>
   21b68:	83 c4 14             	add    $0x14,%esp
   21b6b:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
   21b70:	50                   	push   %eax
   21b71:	e8 6a 56 fe ff       	call   71e0 <raise_sw_intr>
   21b76:	83 c4 44             	add    $0x44,%esp
   21b79:	31 c0                	xor    %eax,%eax
   21b7b:	5b                   	pop    %ebx
   21b7c:	5e                   	pop    %esi
   21b7d:	c3                   	ret    
   21b7e:	66 90                	xchg   %ax,%ax

00021b80 <__ref_jmp_short>:
   21b80:	57                   	push   %edi
   21b81:	56                   	push   %esi
   21b82:	53                   	push   %ebx
   21b83:	e8 f8 28 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21b88:	81 c3 78 d4 02 00    	add    $0x2d478,%ebx
   21b8e:	83 ec 30             	sub    $0x30,%esp
   21b91:	e8 4a 8c 00 00       	call   2a7e0 <set_ref>
   21b96:	8b 44 24 40          	mov    0x40(%esp),%eax
   21b9a:	83 ec 0c             	sub    $0xc,%esp
   21b9d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   21ba4:	00 
   21ba5:	c6 44 24 20 01       	movb   $0x1,0x20(%esp)
   21baa:	83 c0 01             	add    $0x1,%eax
   21bad:	c7 44 24 28 08 00 00 	movl   $0x8,0x28(%esp)
   21bb4:	00 
   21bb5:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   21bb9:	8d 74 24 18          	lea    0x18(%esp),%esi
   21bbd:	56                   	push   %esi
   21bbe:	e8 1d 08 ff ff       	call   123e0 <operand_read>
   21bc3:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21bc9:	0f be 7c 24 28       	movsbl 0x28(%esp),%edi
   21bce:	56                   	push   %esi
   21bcf:	6a 02                	push   $0x2
   21bd1:	50                   	push   %eax
   21bd2:	8d 83 0b 6b fe ff    	lea    -0x194f5(%ebx),%eax
   21bd8:	50                   	push   %eax
   21bd9:	e8 c2 04 ff ff       	call   120a0 <print_asm_1>
   21bde:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   21be4:	01 78 20             	add    %edi,0x20(%eax)
   21be7:	83 c4 50             	add    $0x50,%esp
   21bea:	b8 02 00 00 00       	mov    $0x2,%eax
   21bef:	5b                   	pop    %ebx
   21bf0:	5e                   	pop    %esi
   21bf1:	5f                   	pop    %edi
   21bf2:	c3                   	ret    
   21bf3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21bfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00021c00 <__ref_jmp_near>:
   21c00:	55                   	push   %ebp
   21c01:	57                   	push   %edi
   21c02:	56                   	push   %esi
   21c03:	53                   	push   %ebx
   21c04:	e8 77 28 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21c09:	81 c3 f7 d3 02 00    	add    $0x2d3f7,%ebx
   21c0f:	83 ec 3c             	sub    $0x3c,%esp
   21c12:	e8 c9 8b 00 00       	call   2a7e0 <set_ref>
   21c17:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   21c1d:	c6 44 24 14 01       	movb   $0x1,0x14(%esp)
   21c22:	83 ec 0c             	sub    $0xc,%esp
   21c25:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   21c2c:	00 
   21c2d:	0f b6 07             	movzbl (%edi),%eax
   21c30:	89 44 24 28          	mov    %eax,0x28(%esp)
   21c34:	8b 44 24 5c          	mov    0x5c(%esp),%eax
   21c38:	83 c0 01             	add    $0x1,%eax
   21c3b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   21c3f:	8d 6c 24 18          	lea    0x18(%esp),%ebp
   21c43:	55                   	push   %ebp
   21c44:	e8 97 07 ff ff       	call   123e0 <operand_read>
   21c49:	0f b6 07             	movzbl (%edi),%eax
   21c4c:	8b 74 24 28          	mov    0x28(%esp),%esi
   21c50:	83 c4 10             	add    $0x10,%esp
   21c53:	8d 50 f8             	lea    -0x8(%eax),%edx
   21c56:	81 e2 f7 00 00 00    	and    $0xf7,%edx
   21c5c:	74 04                	je     21c62 <__ref_jmp_near+0x62>
   21c5e:	3c 20                	cmp    $0x20,%al
   21c60:	75 4d                	jne    21caf <__ref_jmp_near+0xaf>
   21c62:	3c 08                	cmp    $0x8,%al
   21c64:	74 42                	je     21ca8 <__ref_jmp_near+0xa8>
   21c66:	0f bf d6             	movswl %si,%edx
   21c69:	3c 10                	cmp    $0x10,%al
   21c6b:	0f 44 f2             	cmove  %edx,%esi
   21c6e:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21c74:	55                   	push   %ebp
   21c75:	6a 02                	push   $0x2
   21c77:	50                   	push   %eax
   21c78:	8d 83 0b 6b fe ff    	lea    -0x194f5(%ebx),%eax
   21c7e:	50                   	push   %eax
   21c7f:	e8 1c 04 ff ff       	call   120a0 <print_asm_1>
   21c84:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   21c8a:	01 70 20             	add    %esi,0x20(%eax)
   21c8d:	0f b6 07             	movzbl (%edi),%eax
   21c90:	83 c4 4c             	add    $0x4c,%esp
   21c93:	5b                   	pop    %ebx
   21c94:	5e                   	pop    %esi
   21c95:	c0 e8 03             	shr    $0x3,%al
   21c98:	5f                   	pop    %edi
   21c99:	5d                   	pop    %ebp
   21c9a:	0f b6 c0             	movzbl %al,%eax
   21c9d:	83 c0 01             	add    $0x1,%eax
   21ca0:	c3                   	ret    
   21ca1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21ca8:	89 f0                	mov    %esi,%eax
   21caa:	0f be f0             	movsbl %al,%esi
   21cad:	eb bf                	jmp    21c6e <__ref_jmp_near+0x6e>
   21caf:	8d 83 44 6d fe ff    	lea    -0x192bc(%ebx),%eax
   21cb5:	50                   	push   %eax
   21cb6:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   21cbc:	6a 2e                	push   $0x2e
   21cbe:	50                   	push   %eax
   21cbf:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   21cc5:	50                   	push   %eax
   21cc6:	e8 45 26 fe ff       	call   4310 <__assert_fail@plt>
   21ccb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   21ccf:	90                   	nop

00021cd0 <__ref_jmp_near_indirect>:
   21cd0:	57                   	push   %edi
   21cd1:	56                   	push   %esi
   21cd2:	53                   	push   %ebx
   21cd3:	e8 a8 27 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21cd8:	81 c3 28 d3 02 00    	add    $0x2d328,%ebx
   21cde:	83 ec 30             	sub    $0x30,%esp
   21ce1:	e8 fa 8a 00 00       	call   2a7e0 <set_ref>
   21ce6:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   21cec:	83 ec 08             	sub    $0x8,%esp
   21cef:	0f b6 07             	movzbl (%edi),%eax
   21cf2:	89 44 24 24          	mov    %eax,0x24(%esp)
   21cf6:	8d 74 24 14          	lea    0x14(%esp),%esi
   21cfa:	56                   	push   %esi
   21cfb:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   21cff:	83 c0 01             	add    $0x1,%eax
   21d02:	50                   	push   %eax
   21d03:	e8 78 02 ff ff       	call   11f80 <modrm_rm>
   21d08:	89 34 24             	mov    %esi,(%esp)
   21d0b:	e8 d0 06 ff ff       	call   123e0 <operand_read>
   21d10:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21d16:	56                   	push   %esi
   21d17:	6a 02                	push   $0x2
   21d19:	50                   	push   %eax
   21d1a:	8d 83 0b 6b fe ff    	lea    -0x194f5(%ebx),%eax
   21d20:	50                   	push   %eax
   21d21:	e8 7a 03 ff ff       	call   120a0 <print_asm_1>
   21d26:	8b 44 24 38          	mov    0x38(%esp),%eax
   21d2a:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   21d30:	83 c4 20             	add    $0x20,%esp
   21d33:	80 3f 10             	cmpb   $0x10,(%edi)
   21d36:	89 42 20             	mov    %eax,0x20(%edx)
   21d39:	75 08                	jne    21d43 <__ref_jmp_near_indirect+0x73>
   21d3b:	25 ff ff 00 00       	and    $0xffff,%eax
   21d40:	89 42 20             	mov    %eax,0x20(%edx)
   21d43:	83 c4 30             	add    $0x30,%esp
   21d46:	31 c0                	xor    %eax,%eax
   21d48:	5b                   	pop    %ebx
   21d49:	5e                   	pop    %esi
   21d4a:	5f                   	pop    %edi
   21d4b:	c3                   	ret    
   21d4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00021d50 <__ref_jmp_far_imm>:
   21d50:	57                   	push   %edi
   21d51:	56                   	push   %esi
   21d52:	53                   	push   %ebx
   21d53:	e8 28 27 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21d58:	81 c3 a8 d2 02 00    	add    $0x2d2a8,%ebx
   21d5e:	83 ec 50             	sub    $0x50,%esp
   21d61:	8b 74 24 60          	mov    0x60(%esp),%esi
   21d65:	e8 76 8a 00 00       	call   2a7e0 <set_ref>
   21d6a:	8d 46 01             	lea    0x1(%esi),%eax
   21d6d:	83 c6 05             	add    $0x5,%esi
   21d70:	c7 44 24 18 10 00 00 	movl   $0x10,0x18(%esp)
   21d77:	00 
   21d78:	89 74 24 0c          	mov    %esi,0xc(%esp)
   21d7c:	83 ec 0c             	sub    $0xc,%esp
   21d7f:	c7 44 24 48 20 00 00 	movl   $0x20,0x48(%esp)
   21d86:	00 
   21d87:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   21d8e:	00 
   21d8f:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
   21d96:	00 
   21d97:	c6 44 24 40 01       	movb   $0x1,0x40(%esp)
   21d9c:	c6 44 24 1c 01       	movb   $0x1,0x1c(%esp)
   21da1:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   21da5:	8d 44 24 14          	lea    0x14(%esp),%eax
   21da9:	50                   	push   %eax
   21daa:	e8 31 06 ff ff       	call   123e0 <operand_read>
   21daf:	58                   	pop    %eax
   21db0:	8d 7c 24 38          	lea    0x38(%esp),%edi
   21db4:	57                   	push   %edi
   21db5:	e8 26 06 ff ff       	call   123e0 <operand_read>
   21dba:	8b 44 24 24          	mov    0x24(%esp),%eax
   21dbe:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   21dc4:	66 89 46 40          	mov    %ax,0x40(%esi)
   21dc8:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21dce:	57                   	push   %edi
   21dcf:	6a 06                	push   $0x6
   21dd1:	50                   	push   %eax
   21dd2:	8d 83 0b 6b fe ff    	lea    -0x194f5(%ebx),%eax
   21dd8:	50                   	push   %eax
   21dd9:	e8 c2 02 ff ff       	call   120a0 <print_asm_1>
   21dde:	8b 44 24 58          	mov    0x58(%esp),%eax
   21de2:	83 c4 14             	add    $0x14,%esp
   21de5:	89 46 20             	mov    %eax,0x20(%esi)
   21de8:	6a 01                	push   $0x1
   21dea:	e8 e1 c9 ff ff       	call   1e7d0 <load_sreg>
   21def:	83 c4 60             	add    $0x60,%esp
   21df2:	31 c0                	xor    %eax,%eax
   21df4:	5b                   	pop    %ebx
   21df5:	5e                   	pop    %esi
   21df6:	5f                   	pop    %edi
   21df7:	c3                   	ret    
   21df8:	66 90                	xchg   %ax,%ax
   21dfa:	66 90                	xchg   %ax,%ax
   21dfc:	66 90                	xchg   %ax,%ax
   21dfe:	66 90                	xchg   %ax,%ax

00021e00 <__ref_iret>:
   21e00:	57                   	push   %edi
   21e01:	56                   	push   %esi
   21e02:	53                   	push   %ebx
   21e03:	e8 78 26 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21e08:	81 c3 f8 d1 02 00    	add    $0x2d1f8,%ebx
   21e0e:	83 ec 30             	sub    $0x30,%esp
   21e11:	e8 ca 89 00 00       	call   2a7e0 <set_ref>
   21e16:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   21e1c:	83 ec 0c             	sub    $0xc,%esp
   21e1f:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   21e26:	00 
   21e27:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   21e2c:	8b 46 10             	mov    0x10(%esi),%eax
   21e2f:	c7 44 24 28 20 00 00 	movl   $0x20,0x28(%esp)
   21e36:	00 
   21e37:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   21e3b:	8d 7c 24 18          	lea    0x18(%esp),%edi
   21e3f:	57                   	push   %edi
   21e40:	e8 9b 05 ff ff       	call   123e0 <operand_read>
   21e45:	83 c4 0c             	add    $0xc,%esp
   21e48:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   21e4e:	6a 01                	push   $0x1
   21e50:	50                   	push   %eax
   21e51:	8d 83 05 6b fe ff    	lea    -0x194fb(%ebx),%eax
   21e57:	50                   	push   %eax
   21e58:	e8 63 01 ff ff       	call   11fc0 <print_asm_0>
   21e5d:	8b 44 24 28          	mov    0x28(%esp),%eax
   21e61:	89 3c 24             	mov    %edi,(%esp)
   21e64:	89 46 20             	mov    %eax,0x20(%esi)
   21e67:	8b 46 10             	mov    0x10(%esi),%eax
   21e6a:	83 c0 04             	add    $0x4,%eax
   21e6d:	89 46 10             	mov    %eax,0x10(%esi)
   21e70:	89 44 24 20          	mov    %eax,0x20(%esp)
   21e74:	e8 67 05 ff ff       	call   123e0 <operand_read>
   21e79:	8b 44 24 28          	mov    0x28(%esp),%eax
   21e7d:	89 3c 24             	mov    %edi,(%esp)
   21e80:	66 89 46 40          	mov    %ax,0x40(%esi)
   21e84:	8b 46 10             	mov    0x10(%esi),%eax
   21e87:	83 c0 04             	add    $0x4,%eax
   21e8a:	89 46 10             	mov    %eax,0x10(%esi)
   21e8d:	89 44 24 20          	mov    %eax,0x20(%esp)
   21e91:	e8 4a 05 ff ff       	call   123e0 <operand_read>
   21e96:	8b 44 24 28          	mov    0x28(%esp),%eax
   21e9a:	83 46 10 04          	addl   $0x4,0x10(%esi)
   21e9e:	89 46 24             	mov    %eax,0x24(%esi)
   21ea1:	83 c4 40             	add    $0x40,%esp
   21ea4:	31 c0                	xor    %eax,%eax
   21ea6:	5b                   	pop    %ebx
   21ea7:	5e                   	pop    %esi
   21ea8:	5f                   	pop    %edi
   21ea9:	c3                   	ret    
   21eaa:	66 90                	xchg   %ax,%ax
   21eac:	66 90                	xchg   %ax,%ax
   21eae:	66 90                	xchg   %ax,%ax

00021eb0 <instr_execute_2op>:
   21eb0:	57                   	push   %edi
   21eb1:	56                   	push   %esi
   21eb2:	53                   	push   %ebx
   21eb3:	e8 c8 25 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21eb8:	81 c3 48 d1 02 00    	add    $0x2d148,%ebx
   21ebe:	e8 1d 89 00 00       	call   2a7e0 <set_ref>
   21ec3:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   21ec9:	83 ec 0c             	sub    $0xc,%esp
   21ecc:	57                   	push   %edi
   21ecd:	e8 0e 05 ff ff       	call   123e0 <operand_read>
   21ed2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   21ed8:	89 34 24             	mov    %esi,(%esp)
   21edb:	e8 00 05 ff ff       	call   123e0 <operand_read>
   21ee0:	83 c4 0c             	add    $0xc,%esp
   21ee3:	ff 76 10             	pushl  0x10(%esi)
   21ee6:	ff 76 0c             	pushl  0xc(%esi)
   21ee9:	ff 77 0c             	pushl  0xc(%edi)
   21eec:	e8 8f 87 00 00       	call   2a680 <__ref_alu_sar>
   21ef1:	89 34 24             	mov    %esi,(%esp)
   21ef4:	89 46 0c             	mov    %eax,0xc(%esi)
   21ef7:	e8 94 06 ff ff       	call   12590 <operand_write>
   21efc:	83 c4 10             	add    $0x10,%esp
   21eff:	5b                   	pop    %ebx
   21f00:	5e                   	pop    %esi
   21f01:	5f                   	pop    %edi
   21f02:	c3                   	ret    
   21f03:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21f0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00021f10 <instr_execute_1op>:
   21f10:	56                   	push   %esi
   21f11:	53                   	push   %ebx
   21f12:	e8 69 25 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21f17:	81 c3 e9 d0 02 00    	add    $0x2d0e9,%ebx
   21f1d:	83 ec 04             	sub    $0x4,%esp
   21f20:	e8 bb 88 00 00       	call   2a7e0 <set_ref>
   21f25:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   21f2b:	83 ec 0c             	sub    $0xc,%esp
   21f2e:	56                   	push   %esi
   21f2f:	e8 ac 04 ff ff       	call   123e0 <operand_read>
   21f34:	83 c4 0c             	add    $0xc,%esp
   21f37:	ff 76 10             	pushl  0x10(%esi)
   21f3a:	ff 76 0c             	pushl  0xc(%esi)
   21f3d:	6a 01                	push   $0x1
   21f3f:	e8 3c 87 00 00       	call   2a680 <__ref_alu_sar>
   21f44:	89 34 24             	mov    %esi,(%esp)
   21f47:	89 46 0c             	mov    %eax,0xc(%esi)
   21f4a:	e8 41 06 ff ff       	call   12590 <operand_write>
   21f4f:	83 c4 14             	add    $0x14,%esp
   21f52:	5b                   	pop    %ebx
   21f53:	5e                   	pop    %esi
   21f54:	c3                   	ret    
   21f55:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21f5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00021f60 <__ref_sar_i2rm_b>:
   21f60:	55                   	push   %ebp
   21f61:	57                   	push   %edi
   21f62:	56                   	push   %esi
   21f63:	53                   	push   %ebx
   21f64:	e8 17 25 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   21f69:	81 c3 97 d0 02 00    	add    $0x2d097,%ebx
   21f6f:	83 ec 24             	sub    $0x24,%esp
   21f72:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   21f76:	8d 45 01             	lea    0x1(%ebp),%eax
   21f79:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   21f7f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   21f85:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   21f8c:	52                   	push   %edx
   21f8d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   21f94:	89 54 24 18          	mov    %edx,0x18(%esp)
   21f98:	50                   	push   %eax
   21f99:	e8 e2 ff fe ff       	call   11f80 <modrm_rm>
   21f9e:	8b 77 10             	mov    0x10(%edi),%esi
   21fa1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   21fa5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   21fa9:	83 c0 01             	add    $0x1,%eax
   21fac:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   21fb2:	83 c4 10             	add    $0x10,%esp
   21fb5:	01 c5                	add    %eax,%ebp
   21fb7:	c1 ee 03             	shr    $0x3,%esi
   21fba:	89 6f 04             	mov    %ebp,0x4(%edi)
   21fbd:	01 c6                	add    %eax,%esi
   21fbf:	8b 6a 10             	mov    0x10(%edx),%ebp
   21fc2:	89 f0                	mov    %esi,%eax
   21fc4:	0f b6 c8             	movzbl %al,%ecx
   21fc7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   21fcd:	83 fd 08             	cmp    $0x8,%ebp
   21fd0:	74 12                	je     21fe4 <__ref_sar_i2rm_b+0x84>
   21fd2:	83 fd 10             	cmp    $0x10,%ebp
   21fd5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   21fdb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   21fe1:	0f 45 c5             	cmovne %ebp,%eax
   21fe4:	83 ec 0c             	sub    $0xc,%esp
   21fe7:	52                   	push   %edx
   21fe8:	57                   	push   %edi
   21fe9:	51                   	push   %ecx
   21fea:	50                   	push   %eax
   21feb:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   21ff1:	50                   	push   %eax
   21ff2:	e8 a9 01 ff ff       	call   121a0 <print_asm_2>
   21ff7:	83 c4 20             	add    $0x20,%esp
   21ffa:	e8 b1 fe ff ff       	call   21eb0 <instr_execute_2op>
   21fff:	83 c4 1c             	add    $0x1c,%esp
   22002:	89 f0                	mov    %esi,%eax
   22004:	5b                   	pop    %ebx
   22005:	5e                   	pop    %esi
   22006:	5f                   	pop    %edi
   22007:	5d                   	pop    %ebp
   22008:	c3                   	ret    
   22009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022010 <__ref_sar_i2rm_bv>:
   22010:	55                   	push   %ebp
   22011:	57                   	push   %edi
   22012:	56                   	push   %esi
   22013:	53                   	push   %ebx
   22014:	e8 67 24 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22019:	81 c3 e7 cf 02 00    	add    $0x2cfe7,%ebx
   2201f:	83 ec 24             	sub    $0x24,%esp
   22022:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   22026:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2202c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   22032:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22038:	0f b6 00             	movzbl (%eax),%eax
   2203b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   22042:	89 42 10             	mov    %eax,0x10(%edx)
   22045:	8d 45 01             	lea    0x1(%ebp),%eax
   22048:	52                   	push   %edx
   22049:	89 54 24 18          	mov    %edx,0x18(%esp)
   2204d:	50                   	push   %eax
   2204e:	e8 2d ff fe ff       	call   11f80 <modrm_rm>
   22053:	8b 77 10             	mov    0x10(%edi),%esi
   22056:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   2205a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   2205e:	83 c0 01             	add    $0x1,%eax
   22061:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   22067:	83 c4 10             	add    $0x10,%esp
   2206a:	01 c5                	add    %eax,%ebp
   2206c:	c1 ee 03             	shr    $0x3,%esi
   2206f:	89 6f 04             	mov    %ebp,0x4(%edi)
   22072:	01 c6                	add    %eax,%esi
   22074:	8b 6a 10             	mov    0x10(%edx),%ebp
   22077:	89 f0                	mov    %esi,%eax
   22079:	0f b6 c8             	movzbl %al,%ecx
   2207c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   22082:	83 fd 08             	cmp    $0x8,%ebp
   22085:	74 12                	je     22099 <__ref_sar_i2rm_bv+0x89>
   22087:	83 fd 10             	cmp    $0x10,%ebp
   2208a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   22090:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   22096:	0f 45 c5             	cmovne %ebp,%eax
   22099:	83 ec 0c             	sub    $0xc,%esp
   2209c:	52                   	push   %edx
   2209d:	57                   	push   %edi
   2209e:	51                   	push   %ecx
   2209f:	50                   	push   %eax
   220a0:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   220a6:	50                   	push   %eax
   220a7:	e8 f4 00 ff ff       	call   121a0 <print_asm_2>
   220ac:	83 c4 20             	add    $0x20,%esp
   220af:	e8 fc fd ff ff       	call   21eb0 <instr_execute_2op>
   220b4:	83 c4 1c             	add    $0x1c,%esp
   220b7:	89 f0                	mov    %esi,%eax
   220b9:	5b                   	pop    %ebx
   220ba:	5e                   	pop    %esi
   220bb:	5f                   	pop    %edi
   220bc:	5d                   	pop    %ebp
   220bd:	c3                   	ret    
   220be:	66 90                	xchg   %ax,%ax

000220c0 <__ref_sar_c2rm_b>:
   220c0:	55                   	push   %ebp
   220c1:	57                   	push   %edi
   220c2:	56                   	push   %esi
   220c3:	53                   	push   %ebx
   220c4:	e8 b7 23 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   220c9:	81 c3 37 cf 02 00    	add    $0x2cf37,%ebx
   220cf:	83 ec 14             	sub    $0x14,%esp
   220d2:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   220d8:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   220de:	57                   	push   %edi
   220df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   220e3:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   220ea:	83 c0 01             	add    $0x1,%eax
   220ed:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   220f4:	50                   	push   %eax
   220f5:	e8 86 fe fe ff       	call   11f80 <modrm_rm>
   220fa:	8b 4f 10             	mov    0x10(%edi),%ecx
   220fd:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   22103:	83 c4 10             	add    $0x10,%esp
   22106:	8d 68 01             	lea    0x1(%eax),%ebp
   22109:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   22110:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   22116:	89 e8                	mov    %ebp,%eax
   22118:	0f b6 c0             	movzbl %al,%eax
   2211b:	83 f9 08             	cmp    $0x8,%ecx
   2211e:	74 12                	je     22132 <__ref_sar_c2rm_b+0x72>
   22120:	83 f9 10             	cmp    $0x10,%ecx
   22123:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   22129:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   2212f:	0f 45 d1             	cmovne %ecx,%edx
   22132:	83 ec 0c             	sub    $0xc,%esp
   22135:	57                   	push   %edi
   22136:	56                   	push   %esi
   22137:	50                   	push   %eax
   22138:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   2213e:	52                   	push   %edx
   2213f:	50                   	push   %eax
   22140:	e8 5b 00 ff ff       	call   121a0 <print_asm_2>
   22145:	83 c4 20             	add    $0x20,%esp
   22148:	e8 63 fd ff ff       	call   21eb0 <instr_execute_2op>
   2214d:	83 c4 0c             	add    $0xc,%esp
   22150:	89 e8                	mov    %ebp,%eax
   22152:	5b                   	pop    %ebx
   22153:	5e                   	pop    %esi
   22154:	5f                   	pop    %edi
   22155:	5d                   	pop    %ebp
   22156:	c3                   	ret    
   22157:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2215e:	66 90                	xchg   %ax,%ax

00022160 <__ref_sar_c2rm_bv>:
   22160:	55                   	push   %ebp
   22161:	57                   	push   %edi
   22162:	56                   	push   %esi
   22163:	53                   	push   %ebx
   22164:	e8 17 23 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22169:	81 c3 97 ce 02 00    	add    $0x2ce97,%ebx
   2216f:	83 ec 14             	sub    $0x14,%esp
   22172:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   22178:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   2217e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   22184:	0f b6 00             	movzbl (%eax),%eax
   22187:	57                   	push   %edi
   22188:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   2218f:	89 47 10             	mov    %eax,0x10(%edi)
   22192:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   22196:	83 c0 01             	add    $0x1,%eax
   22199:	50                   	push   %eax
   2219a:	e8 e1 fd fe ff       	call   11f80 <modrm_rm>
   2219f:	8b 4f 10             	mov    0x10(%edi),%ecx
   221a2:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   221a8:	83 c4 10             	add    $0x10,%esp
   221ab:	8d 68 01             	lea    0x1(%eax),%ebp
   221ae:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   221b5:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   221bb:	89 e8                	mov    %ebp,%eax
   221bd:	0f b6 c0             	movzbl %al,%eax
   221c0:	83 f9 08             	cmp    $0x8,%ecx
   221c3:	74 12                	je     221d7 <__ref_sar_c2rm_bv+0x77>
   221c5:	83 f9 10             	cmp    $0x10,%ecx
   221c8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   221ce:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   221d4:	0f 45 d1             	cmovne %ecx,%edx
   221d7:	83 ec 0c             	sub    $0xc,%esp
   221da:	57                   	push   %edi
   221db:	56                   	push   %esi
   221dc:	50                   	push   %eax
   221dd:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   221e3:	52                   	push   %edx
   221e4:	50                   	push   %eax
   221e5:	e8 b6 ff fe ff       	call   121a0 <print_asm_2>
   221ea:	83 c4 20             	add    $0x20,%esp
   221ed:	e8 be fc ff ff       	call   21eb0 <instr_execute_2op>
   221f2:	83 c4 0c             	add    $0xc,%esp
   221f5:	89 e8                	mov    %ebp,%eax
   221f7:	5b                   	pop    %ebx
   221f8:	5e                   	pop    %esi
   221f9:	5f                   	pop    %edi
   221fa:	5d                   	pop    %ebp
   221fb:	c3                   	ret    
   221fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00022200 <__ref_sar_rm_b>:
   22200:	55                   	push   %ebp
   22201:	57                   	push   %edi
   22202:	56                   	push   %esi
   22203:	53                   	push   %ebx
   22204:	e8 77 22 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22209:	81 c3 f7 cd 02 00    	add    $0x2cdf7,%ebx
   2220f:	83 ec 14             	sub    $0x14,%esp
   22212:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   22218:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2221e:	56                   	push   %esi
   2221f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   22223:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   2222a:	83 c0 01             	add    $0x1,%eax
   2222d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   22234:	50                   	push   %eax
   22235:	e8 46 fd fe ff       	call   11f80 <modrm_rm>
   2223a:	8b 4d 10             	mov    0x10(%ebp),%ecx
   2223d:	83 c4 10             	add    $0x10,%esp
   22240:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   22246:	8d 78 01             	lea    0x1(%eax),%edi
   22249:	89 f8                	mov    %edi,%eax
   2224b:	0f b6 c0             	movzbl %al,%eax
   2224e:	83 f9 08             	cmp    $0x8,%ecx
   22251:	74 12                	je     22265 <__ref_sar_rm_b+0x65>
   22253:	83 f9 10             	cmp    $0x10,%ecx
   22256:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2225c:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   22262:	0f 45 d1             	cmovne %ecx,%edx
   22265:	56                   	push   %esi
   22266:	50                   	push   %eax
   22267:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   2226d:	52                   	push   %edx
   2226e:	50                   	push   %eax
   2226f:	e8 2c fe fe ff       	call   120a0 <print_asm_1>
   22274:	e8 97 fc ff ff       	call   21f10 <instr_execute_1op>
   22279:	83 c4 1c             	add    $0x1c,%esp
   2227c:	89 f8                	mov    %edi,%eax
   2227e:	5b                   	pop    %ebx
   2227f:	5e                   	pop    %esi
   22280:	5f                   	pop    %edi
   22281:	5d                   	pop    %ebp
   22282:	c3                   	ret    
   22283:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2228a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00022290 <__ref_sar_rm_v>:
   22290:	55                   	push   %ebp
   22291:	57                   	push   %edi
   22292:	56                   	push   %esi
   22293:	53                   	push   %ebx
   22294:	e8 e7 21 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22299:	81 c3 67 cd 02 00    	add    $0x2cd67,%ebx
   2229f:	83 ec 14             	sub    $0x14,%esp
   222a2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   222a8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   222ae:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   222b4:	0f b6 00             	movzbl (%eax),%eax
   222b7:	56                   	push   %esi
   222b8:	89 45 10             	mov    %eax,0x10(%ebp)
   222bb:	89 46 10             	mov    %eax,0x10(%esi)
   222be:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   222c2:	83 c0 01             	add    $0x1,%eax
   222c5:	50                   	push   %eax
   222c6:	e8 b5 fc fe ff       	call   11f80 <modrm_rm>
   222cb:	8b 4d 10             	mov    0x10(%ebp),%ecx
   222ce:	83 c4 10             	add    $0x10,%esp
   222d1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   222d7:	8d 78 01             	lea    0x1(%eax),%edi
   222da:	89 f8                	mov    %edi,%eax
   222dc:	0f b6 c0             	movzbl %al,%eax
   222df:	83 f9 08             	cmp    $0x8,%ecx
   222e2:	74 12                	je     222f6 <__ref_sar_rm_v+0x66>
   222e4:	83 f9 10             	cmp    $0x10,%ecx
   222e7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   222ed:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   222f3:	0f 45 d1             	cmovne %ecx,%edx
   222f6:	56                   	push   %esi
   222f7:	50                   	push   %eax
   222f8:	8d 83 77 70 fe ff    	lea    -0x18f89(%ebx),%eax
   222fe:	52                   	push   %edx
   222ff:	50                   	push   %eax
   22300:	e8 9b fd fe ff       	call   120a0 <print_asm_1>
   22305:	e8 06 fc ff ff       	call   21f10 <instr_execute_1op>
   2230a:	83 c4 1c             	add    $0x1c,%esp
   2230d:	89 f8                	mov    %edi,%eax
   2230f:	5b                   	pop    %ebx
   22310:	5e                   	pop    %esi
   22311:	5f                   	pop    %edi
   22312:	5d                   	pop    %ebp
   22313:	c3                   	ret    
   22314:	66 90                	xchg   %ax,%ax
   22316:	66 90                	xchg   %ax,%ax
   22318:	66 90                	xchg   %ax,%ax
   2231a:	66 90                	xchg   %ax,%ax
   2231c:	66 90                	xchg   %ax,%ax
   2231e:	66 90                	xchg   %ax,%ax

00022320 <__ref_call_near>:
   22320:	55                   	push   %ebp
   22321:	57                   	push   %edi
   22322:	56                   	push   %esi
   22323:	53                   	push   %ebx
   22324:	e8 57 21 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22329:	81 c3 d7 cc 02 00    	add    $0x2ccd7,%ebx
   2232f:	83 ec 3c             	sub    $0x3c,%esp
   22332:	8b 74 24 50          	mov    0x50(%esp),%esi
   22336:	e8 a5 84 00 00       	call   2a7e0 <set_ref>
   2233b:	8d 46 01             	lea    0x1(%esi),%eax
   2233e:	83 ec 0c             	sub    $0xc,%esp
   22341:	83 c6 05             	add    $0x5,%esi
   22344:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   22348:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   2234f:	00 
   22350:	c7 44 24 28 20 00 00 	movl   $0x20,0x28(%esp)
   22357:	00 
   22358:	8d 7c 24 18          	lea    0x18(%esp),%edi
   2235c:	57                   	push   %edi
   2235d:	e8 7e 00 ff ff       	call   123e0 <operand_read>
   22362:	8b 6c 24 28          	mov    0x28(%esp),%ebp
   22366:	89 34 24             	mov    %esi,(%esp)
   22369:	e8 02 29 00 00       	call   24c70 <__ref_do_push>
   2236e:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   22374:	57                   	push   %edi
   22375:	6a 05                	push   $0x5
   22377:	50                   	push   %eax
   22378:	8d 83 76 67 fe ff    	lea    -0x1988a(%ebx),%eax
   2237e:	50                   	push   %eax
   2237f:	e8 1c fd fe ff       	call   120a0 <print_asm_1>
   22384:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   2238a:	01 68 20             	add    %ebp,0x20(%eax)
   2238d:	83 c4 5c             	add    $0x5c,%esp
   22390:	b8 05 00 00 00       	mov    $0x5,%eax
   22395:	5b                   	pop    %ebx
   22396:	5e                   	pop    %esi
   22397:	5f                   	pop    %edi
   22398:	5d                   	pop    %ebp
   22399:	c3                   	ret    
   2239a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000223a0 <__ref_call_near_indirect>:
   223a0:	55                   	push   %ebp
   223a1:	57                   	push   %edi
   223a2:	56                   	push   %esi
   223a3:	53                   	push   %ebx
   223a4:	e8 d7 20 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   223a9:	81 c3 57 cc 02 00    	add    $0x2cc57,%ebx
   223af:	83 ec 3c             	sub    $0x3c,%esp
   223b2:	8b 7c 24 50          	mov    0x50(%esp),%edi
   223b6:	e8 25 84 00 00       	call   2a7e0 <set_ref>
   223bb:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   223c2:	00 
   223c3:	83 ec 08             	sub    $0x8,%esp
   223c6:	8d 47 01             	lea    0x1(%edi),%eax
   223c9:	8d 6c 24 14          	lea    0x14(%esp),%ebp
   223cd:	55                   	push   %ebp
   223ce:	50                   	push   %eax
   223cf:	e8 ac fb fe ff       	call   11f80 <modrm_rm>
   223d4:	89 2c 24             	mov    %ebp,(%esp)
   223d7:	8d 70 01             	lea    0x1(%eax),%esi
   223da:	e8 01 00 ff ff       	call   123e0 <operand_read>
   223df:	01 f7                	add    %esi,%edi
   223e1:	89 3c 24             	mov    %edi,(%esp)
   223e4:	e8 87 28 00 00       	call   24c70 <__ref_do_push>
   223e9:	89 f0                	mov    %esi,%eax
   223eb:	55                   	push   %ebp
   223ec:	0f b6 f0             	movzbl %al,%esi
   223ef:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   223f5:	56                   	push   %esi
   223f6:	50                   	push   %eax
   223f7:	8d 83 76 67 fe ff    	lea    -0x1988a(%ebx),%eax
   223fd:	50                   	push   %eax
   223fe:	e8 9d fc fe ff       	call   120a0 <print_asm_1>
   22403:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   22409:	8b 54 24 38          	mov    0x38(%esp),%edx
   2240d:	89 50 20             	mov    %edx,0x20(%eax)
   22410:	83 c4 5c             	add    $0x5c,%esp
   22413:	31 c0                	xor    %eax,%eax
   22415:	5b                   	pop    %ebx
   22416:	5e                   	pop    %esi
   22417:	5f                   	pop    %edi
   22418:	5d                   	pop    %ebp
   22419:	c3                   	ret    
   2241a:	66 90                	xchg   %ax,%ax
   2241c:	66 90                	xchg   %ax,%ax
   2241e:	66 90                	xchg   %ax,%ax

00022420 <sign_ext.part.0>:
   22420:	53                   	push   %ebx
   22421:	e8 5a 20 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22426:	81 c3 da cb 02 00    	add    $0x2cbda,%ebx
   2242c:	83 ec 08             	sub    $0x8,%esp
   2242f:	8d 83 50 6d fe ff    	lea    -0x192b0(%ebx),%eax
   22435:	50                   	push   %eax
   22436:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   2243c:	6a 2e                	push   $0x2e
   2243e:	50                   	push   %eax
   2243f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   22445:	50                   	push   %eax
   22446:	e8 c5 1e fe ff       	call   4310 <__assert_fail@plt>
   2244b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2244f:	90                   	nop

00022450 <instr_execute_2op>:
   22450:	55                   	push   %ebp
   22451:	57                   	push   %edi
   22452:	56                   	push   %esi
   22453:	53                   	push   %ebx
   22454:	e8 27 20 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22459:	81 c3 a7 cb 02 00    	add    $0x2cba7,%ebx
   2245f:	83 ec 0c             	sub    $0xc,%esp
   22462:	e8 79 83 00 00       	call   2a7e0 <set_ref>
   22467:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2246d:	83 ec 0c             	sub    $0xc,%esp
   22470:	57                   	push   %edi
   22471:	e8 6a ff fe ff       	call   123e0 <operand_read>
   22476:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2247c:	89 34 24             	mov    %esi,(%esp)
   2247f:	e8 5c ff fe ff       	call   123e0 <operand_read>
   22484:	8b 56 10             	mov    0x10(%esi),%edx
   22487:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2248d:	83 c4 10             	add    $0x10,%esp
   22490:	8d 6a f8             	lea    -0x8(%edx),%ebp
   22493:	0f b6 08             	movzbl (%eax),%ecx
   22496:	8b 46 0c             	mov    0xc(%esi),%eax
   22499:	83 e5 f7             	and    $0xfffffff7,%ebp
   2249c:	74 05                	je     224a3 <instr_execute_2op+0x53>
   2249e:	83 fa 20             	cmp    $0x20,%edx
   224a1:	75 5a                	jne    224fd <instr_execute_2op+0xad>
   224a3:	83 fa 08             	cmp    $0x8,%edx
   224a6:	74 48                	je     224f0 <instr_execute_2op+0xa0>
   224a8:	0f bf e8             	movswl %ax,%ebp
   224ab:	83 fa 10             	cmp    $0x10,%edx
   224ae:	0f 44 c5             	cmove  %ebp,%eax
   224b1:	8b 6f 10             	mov    0x10(%edi),%ebp
   224b4:	8b 57 0c             	mov    0xc(%edi),%edx
   224b7:	8d 7d f8             	lea    -0x8(%ebp),%edi
   224ba:	83 e7 f7             	and    $0xfffffff7,%edi
   224bd:	74 05                	je     224c4 <instr_execute_2op+0x74>
   224bf:	83 fd 20             	cmp    $0x20,%ebp
   224c2:	75 39                	jne    224fd <instr_execute_2op+0xad>
   224c4:	83 fd 08             	cmp    $0x8,%ebp
   224c7:	74 2f                	je     224f8 <instr_execute_2op+0xa8>
   224c9:	0f bf fa             	movswl %dx,%edi
   224cc:	83 fd 10             	cmp    $0x10,%ebp
   224cf:	0f 44 d7             	cmove  %edi,%edx
   224d2:	83 ec 04             	sub    $0x4,%esp
   224d5:	51                   	push   %ecx
   224d6:	50                   	push   %eax
   224d7:	52                   	push   %edx
   224d8:	e8 b3 7f 00 00       	call   2a490 <__ref_alu_or>
   224dd:	89 34 24             	mov    %esi,(%esp)
   224e0:	89 46 0c             	mov    %eax,0xc(%esi)
   224e3:	e8 a8 00 ff ff       	call   12590 <operand_write>
   224e8:	83 c4 1c             	add    $0x1c,%esp
   224eb:	5b                   	pop    %ebx
   224ec:	5e                   	pop    %esi
   224ed:	5f                   	pop    %edi
   224ee:	5d                   	pop    %ebp
   224ef:	c3                   	ret    
   224f0:	0f be c0             	movsbl %al,%eax
   224f3:	eb bc                	jmp    224b1 <instr_execute_2op+0x61>
   224f5:	8d 76 00             	lea    0x0(%esi),%esi
   224f8:	0f be d2             	movsbl %dl,%edx
   224fb:	eb d5                	jmp    224d2 <instr_execute_2op+0x82>
   224fd:	e8 1e ff ff ff       	call   22420 <sign_ext.part.0>
   22502:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   22509:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022510 <__ref_or_r2rm_b>:
   22510:	55                   	push   %ebp
   22511:	57                   	push   %edi
   22512:	56                   	push   %esi
   22513:	53                   	push   %ebx
   22514:	e8 67 1f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22519:	81 c3 e7 ca 02 00    	add    $0x2cae7,%ebx
   2251f:	83 ec 10             	sub    $0x10,%esp
   22522:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   22528:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2252e:	56                   	push   %esi
   2252f:	57                   	push   %edi
   22530:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   22534:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   2253b:	83 c0 01             	add    $0x1,%eax
   2253e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   22545:	50                   	push   %eax
   22546:	e8 55 f9 fe ff       	call   11ea0 <modrm_r_rm>
   2254b:	8b 4e 10             	mov    0x10(%esi),%ecx
   2254e:	83 c4 10             	add    $0x10,%esp
   22551:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   22557:	8d 68 01             	lea    0x1(%eax),%ebp
   2255a:	89 e8                	mov    %ebp,%eax
   2255c:	0f b6 c0             	movzbl %al,%eax
   2255f:	83 f9 08             	cmp    $0x8,%ecx
   22562:	74 12                	je     22576 <__ref_or_r2rm_b+0x66>
   22564:	83 f9 10             	cmp    $0x10,%ecx
   22567:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2256d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   22573:	0f 45 d1             	cmovne %ecx,%edx
   22576:	83 ec 0c             	sub    $0xc,%esp
   22579:	56                   	push   %esi
   2257a:	57                   	push   %edi
   2257b:	50                   	push   %eax
   2257c:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   22582:	52                   	push   %edx
   22583:	50                   	push   %eax
   22584:	e8 17 fc fe ff       	call   121a0 <print_asm_2>
   22589:	83 c4 20             	add    $0x20,%esp
   2258c:	e8 bf fe ff ff       	call   22450 <instr_execute_2op>
   22591:	83 c4 0c             	add    $0xc,%esp
   22594:	89 e8                	mov    %ebp,%eax
   22596:	5b                   	pop    %ebx
   22597:	5e                   	pop    %esi
   22598:	5f                   	pop    %edi
   22599:	5d                   	pop    %ebp
   2259a:	c3                   	ret    
   2259b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2259f:	90                   	nop

000225a0 <__ref_or_r2rm_v>:
   225a0:	55                   	push   %ebp
   225a1:	57                   	push   %edi
   225a2:	56                   	push   %esi
   225a3:	53                   	push   %ebx
   225a4:	e8 d7 1e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   225a9:	81 c3 57 ca 02 00    	add    $0x2ca57,%ebx
   225af:	83 ec 10             	sub    $0x10,%esp
   225b2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   225b8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   225be:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   225c4:	0f b6 00             	movzbl (%eax),%eax
   225c7:	56                   	push   %esi
   225c8:	57                   	push   %edi
   225c9:	89 46 10             	mov    %eax,0x10(%esi)
   225cc:	89 47 10             	mov    %eax,0x10(%edi)
   225cf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   225d3:	83 c0 01             	add    $0x1,%eax
   225d6:	50                   	push   %eax
   225d7:	e8 c4 f8 fe ff       	call   11ea0 <modrm_r_rm>
   225dc:	8b 4e 10             	mov    0x10(%esi),%ecx
   225df:	83 c4 10             	add    $0x10,%esp
   225e2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   225e8:	8d 68 01             	lea    0x1(%eax),%ebp
   225eb:	89 e8                	mov    %ebp,%eax
   225ed:	0f b6 c0             	movzbl %al,%eax
   225f0:	83 f9 08             	cmp    $0x8,%ecx
   225f3:	74 12                	je     22607 <__ref_or_r2rm_v+0x67>
   225f5:	83 f9 10             	cmp    $0x10,%ecx
   225f8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   225fe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   22604:	0f 45 d1             	cmovne %ecx,%edx
   22607:	83 ec 0c             	sub    $0xc,%esp
   2260a:	56                   	push   %esi
   2260b:	57                   	push   %edi
   2260c:	50                   	push   %eax
   2260d:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   22613:	52                   	push   %edx
   22614:	50                   	push   %eax
   22615:	e8 86 fb fe ff       	call   121a0 <print_asm_2>
   2261a:	83 c4 20             	add    $0x20,%esp
   2261d:	e8 2e fe ff ff       	call   22450 <instr_execute_2op>
   22622:	83 c4 0c             	add    $0xc,%esp
   22625:	89 e8                	mov    %ebp,%eax
   22627:	5b                   	pop    %ebx
   22628:	5e                   	pop    %esi
   22629:	5f                   	pop    %edi
   2262a:	5d                   	pop    %ebp
   2262b:	c3                   	ret    
   2262c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00022630 <__ref_or_rm2r_b>:
   22630:	55                   	push   %ebp
   22631:	57                   	push   %edi
   22632:	56                   	push   %esi
   22633:	53                   	push   %ebx
   22634:	e8 47 1e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22639:	81 c3 c7 c9 02 00    	add    $0x2c9c7,%ebx
   2263f:	83 ec 10             	sub    $0x10,%esp
   22642:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   22648:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2264e:	57                   	push   %edi
   2264f:	56                   	push   %esi
   22650:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   22654:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   2265b:	83 c0 01             	add    $0x1,%eax
   2265e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   22665:	50                   	push   %eax
   22666:	e8 35 f8 fe ff       	call   11ea0 <modrm_r_rm>
   2266b:	8b 4e 10             	mov    0x10(%esi),%ecx
   2266e:	83 c4 10             	add    $0x10,%esp
   22671:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   22677:	8d 68 01             	lea    0x1(%eax),%ebp
   2267a:	89 e8                	mov    %ebp,%eax
   2267c:	0f b6 c0             	movzbl %al,%eax
   2267f:	83 f9 08             	cmp    $0x8,%ecx
   22682:	74 12                	je     22696 <__ref_or_rm2r_b+0x66>
   22684:	83 f9 10             	cmp    $0x10,%ecx
   22687:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2268d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   22693:	0f 45 d1             	cmovne %ecx,%edx
   22696:	83 ec 0c             	sub    $0xc,%esp
   22699:	56                   	push   %esi
   2269a:	57                   	push   %edi
   2269b:	50                   	push   %eax
   2269c:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   226a2:	52                   	push   %edx
   226a3:	50                   	push   %eax
   226a4:	e8 f7 fa fe ff       	call   121a0 <print_asm_2>
   226a9:	83 c4 20             	add    $0x20,%esp
   226ac:	e8 9f fd ff ff       	call   22450 <instr_execute_2op>
   226b1:	83 c4 0c             	add    $0xc,%esp
   226b4:	89 e8                	mov    %ebp,%eax
   226b6:	5b                   	pop    %ebx
   226b7:	5e                   	pop    %esi
   226b8:	5f                   	pop    %edi
   226b9:	5d                   	pop    %ebp
   226ba:	c3                   	ret    
   226bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   226bf:	90                   	nop

000226c0 <__ref_or_rm2r_v>:
   226c0:	55                   	push   %ebp
   226c1:	57                   	push   %edi
   226c2:	56                   	push   %esi
   226c3:	53                   	push   %ebx
   226c4:	e8 b7 1d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   226c9:	81 c3 37 c9 02 00    	add    $0x2c937,%ebx
   226cf:	83 ec 10             	sub    $0x10,%esp
   226d2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   226d8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   226de:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   226e4:	0f b6 00             	movzbl (%eax),%eax
   226e7:	57                   	push   %edi
   226e8:	89 46 10             	mov    %eax,0x10(%esi)
   226eb:	56                   	push   %esi
   226ec:	89 47 10             	mov    %eax,0x10(%edi)
   226ef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   226f3:	83 c0 01             	add    $0x1,%eax
   226f6:	50                   	push   %eax
   226f7:	e8 a4 f7 fe ff       	call   11ea0 <modrm_r_rm>
   226fc:	8b 4e 10             	mov    0x10(%esi),%ecx
   226ff:	83 c4 10             	add    $0x10,%esp
   22702:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   22708:	8d 68 01             	lea    0x1(%eax),%ebp
   2270b:	89 e8                	mov    %ebp,%eax
   2270d:	0f b6 c0             	movzbl %al,%eax
   22710:	83 f9 08             	cmp    $0x8,%ecx
   22713:	74 12                	je     22727 <__ref_or_rm2r_v+0x67>
   22715:	83 f9 10             	cmp    $0x10,%ecx
   22718:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2271e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   22724:	0f 45 d1             	cmovne %ecx,%edx
   22727:	83 ec 0c             	sub    $0xc,%esp
   2272a:	56                   	push   %esi
   2272b:	57                   	push   %edi
   2272c:	50                   	push   %eax
   2272d:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   22733:	52                   	push   %edx
   22734:	50                   	push   %eax
   22735:	e8 66 fa fe ff       	call   121a0 <print_asm_2>
   2273a:	83 c4 20             	add    $0x20,%esp
   2273d:	e8 0e fd ff ff       	call   22450 <instr_execute_2op>
   22742:	83 c4 0c             	add    $0xc,%esp
   22745:	89 e8                	mov    %ebp,%eax
   22747:	5b                   	pop    %ebx
   22748:	5e                   	pop    %esi
   22749:	5f                   	pop    %edi
   2274a:	5d                   	pop    %ebp
   2274b:	c3                   	ret    
   2274c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00022750 <__ref_or_i2rm_b>:
   22750:	55                   	push   %ebp
   22751:	57                   	push   %edi
   22752:	56                   	push   %esi
   22753:	53                   	push   %ebx
   22754:	e8 27 1d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22759:	81 c3 a7 c8 02 00    	add    $0x2c8a7,%ebx
   2275f:	83 ec 24             	sub    $0x24,%esp
   22762:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   22766:	8d 45 01             	lea    0x1(%ebp),%eax
   22769:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   2276f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22775:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   2277c:	52                   	push   %edx
   2277d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   22784:	89 54 24 18          	mov    %edx,0x18(%esp)
   22788:	50                   	push   %eax
   22789:	e8 f2 f7 fe ff       	call   11f80 <modrm_rm>
   2278e:	8b 77 10             	mov    0x10(%edi),%esi
   22791:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   22795:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   22799:	83 c0 01             	add    $0x1,%eax
   2279c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   227a2:	83 c4 10             	add    $0x10,%esp
   227a5:	01 c5                	add    %eax,%ebp
   227a7:	c1 ee 03             	shr    $0x3,%esi
   227aa:	89 6f 04             	mov    %ebp,0x4(%edi)
   227ad:	01 c6                	add    %eax,%esi
   227af:	8b 6a 10             	mov    0x10(%edx),%ebp
   227b2:	89 f0                	mov    %esi,%eax
   227b4:	0f b6 c8             	movzbl %al,%ecx
   227b7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   227bd:	83 fd 08             	cmp    $0x8,%ebp
   227c0:	74 12                	je     227d4 <__ref_or_i2rm_b+0x84>
   227c2:	83 fd 10             	cmp    $0x10,%ebp
   227c5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   227cb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   227d1:	0f 45 c5             	cmovne %ebp,%eax
   227d4:	83 ec 0c             	sub    $0xc,%esp
   227d7:	52                   	push   %edx
   227d8:	57                   	push   %edi
   227d9:	51                   	push   %ecx
   227da:	50                   	push   %eax
   227db:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   227e1:	50                   	push   %eax
   227e2:	e8 b9 f9 fe ff       	call   121a0 <print_asm_2>
   227e7:	83 c4 20             	add    $0x20,%esp
   227ea:	e8 61 fc ff ff       	call   22450 <instr_execute_2op>
   227ef:	83 c4 1c             	add    $0x1c,%esp
   227f2:	89 f0                	mov    %esi,%eax
   227f4:	5b                   	pop    %ebx
   227f5:	5e                   	pop    %esi
   227f6:	5f                   	pop    %edi
   227f7:	5d                   	pop    %ebp
   227f8:	c3                   	ret    
   227f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022800 <__ref_or_i2rm_v>:
   22800:	55                   	push   %ebp
   22801:	57                   	push   %edi
   22802:	56                   	push   %esi
   22803:	53                   	push   %ebx
   22804:	e8 77 1c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22809:	81 c3 f7 c7 02 00    	add    $0x2c7f7,%ebx
   2280f:	83 ec 24             	sub    $0x24,%esp
   22812:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   22816:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2281c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   22822:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22828:	0f b6 00             	movzbl (%eax),%eax
   2282b:	89 42 10             	mov    %eax,0x10(%edx)
   2282e:	52                   	push   %edx
   2282f:	89 47 10             	mov    %eax,0x10(%edi)
   22832:	8d 45 01             	lea    0x1(%ebp),%eax
   22835:	89 54 24 18          	mov    %edx,0x18(%esp)
   22839:	50                   	push   %eax
   2283a:	e8 41 f7 fe ff       	call   11f80 <modrm_rm>
   2283f:	8b 77 10             	mov    0x10(%edi),%esi
   22842:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   22846:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   2284a:	83 c0 01             	add    $0x1,%eax
   2284d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   22853:	83 c4 10             	add    $0x10,%esp
   22856:	01 c5                	add    %eax,%ebp
   22858:	c1 ee 03             	shr    $0x3,%esi
   2285b:	89 6f 04             	mov    %ebp,0x4(%edi)
   2285e:	01 c6                	add    %eax,%esi
   22860:	8b 6a 10             	mov    0x10(%edx),%ebp
   22863:	89 f0                	mov    %esi,%eax
   22865:	0f b6 c8             	movzbl %al,%ecx
   22868:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2286e:	83 fd 08             	cmp    $0x8,%ebp
   22871:	74 12                	je     22885 <__ref_or_i2rm_v+0x85>
   22873:	83 fd 10             	cmp    $0x10,%ebp
   22876:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2287c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   22882:	0f 45 c5             	cmovne %ebp,%eax
   22885:	83 ec 0c             	sub    $0xc,%esp
   22888:	52                   	push   %edx
   22889:	57                   	push   %edi
   2288a:	51                   	push   %ecx
   2288b:	50                   	push   %eax
   2288c:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   22892:	50                   	push   %eax
   22893:	e8 08 f9 fe ff       	call   121a0 <print_asm_2>
   22898:	83 c4 20             	add    $0x20,%esp
   2289b:	e8 b0 fb ff ff       	call   22450 <instr_execute_2op>
   228a0:	83 c4 1c             	add    $0x1c,%esp
   228a3:	89 f0                	mov    %esi,%eax
   228a5:	5b                   	pop    %ebx
   228a6:	5e                   	pop    %esi
   228a7:	5f                   	pop    %edi
   228a8:	5d                   	pop    %ebp
   228a9:	c3                   	ret    
   228aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000228b0 <__ref_or_i2rm_bv>:
   228b0:	55                   	push   %ebp
   228b1:	57                   	push   %edi
   228b2:	56                   	push   %esi
   228b3:	53                   	push   %ebx
   228b4:	e8 c7 1b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   228b9:	81 c3 47 c7 02 00    	add    $0x2c747,%ebx
   228bf:	83 ec 24             	sub    $0x24,%esp
   228c2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   228c6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   228cc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   228d2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   228d8:	0f b6 00             	movzbl (%eax),%eax
   228db:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   228e2:	89 42 10             	mov    %eax,0x10(%edx)
   228e5:	8d 45 01             	lea    0x1(%ebp),%eax
   228e8:	52                   	push   %edx
   228e9:	89 54 24 18          	mov    %edx,0x18(%esp)
   228ed:	50                   	push   %eax
   228ee:	e8 8d f6 fe ff       	call   11f80 <modrm_rm>
   228f3:	8b 77 10             	mov    0x10(%edi),%esi
   228f6:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   228fa:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   228fe:	83 c0 01             	add    $0x1,%eax
   22901:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   22907:	83 c4 10             	add    $0x10,%esp
   2290a:	01 c5                	add    %eax,%ebp
   2290c:	c1 ee 03             	shr    $0x3,%esi
   2290f:	89 6f 04             	mov    %ebp,0x4(%edi)
   22912:	01 c6                	add    %eax,%esi
   22914:	8b 6a 10             	mov    0x10(%edx),%ebp
   22917:	89 f0                	mov    %esi,%eax
   22919:	0f b6 c8             	movzbl %al,%ecx
   2291c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   22922:	83 fd 08             	cmp    $0x8,%ebp
   22925:	74 12                	je     22939 <__ref_or_i2rm_bv+0x89>
   22927:	83 fd 10             	cmp    $0x10,%ebp
   2292a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   22930:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   22936:	0f 45 c5             	cmovne %ebp,%eax
   22939:	83 ec 0c             	sub    $0xc,%esp
   2293c:	52                   	push   %edx
   2293d:	57                   	push   %edi
   2293e:	51                   	push   %ecx
   2293f:	50                   	push   %eax
   22940:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   22946:	50                   	push   %eax
   22947:	e8 54 f8 fe ff       	call   121a0 <print_asm_2>
   2294c:	83 c4 20             	add    $0x20,%esp
   2294f:	e8 fc fa ff ff       	call   22450 <instr_execute_2op>
   22954:	83 c4 1c             	add    $0x1c,%esp
   22957:	89 f0                	mov    %esi,%eax
   22959:	5b                   	pop    %ebx
   2295a:	5e                   	pop    %esi
   2295b:	5f                   	pop    %edi
   2295c:	5d                   	pop    %ebp
   2295d:	c3                   	ret    
   2295e:	66 90                	xchg   %ax,%ax

00022960 <__ref_or_i2a_b>:
   22960:	53                   	push   %ebx
   22961:	e8 1a 1b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22966:	81 c3 9a c6 02 00    	add    $0x2c69a,%ebx
   2296c:	83 ec 14             	sub    $0x14,%esp
   2296f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   22973:	83 c1 01             	add    $0x1,%ecx
   22976:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   2297c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   22982:	89 48 04             	mov    %ecx,0x4(%eax)
   22985:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   2298c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   22993:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   22999:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2299d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   229a3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   229aa:	52                   	push   %edx
   229ab:	50                   	push   %eax
   229ac:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   229b2:	6a 02                	push   $0x2
   229b4:	50                   	push   %eax
   229b5:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   229bb:	50                   	push   %eax
   229bc:	e8 df f7 fe ff       	call   121a0 <print_asm_2>
   229c1:	83 c4 20             	add    $0x20,%esp
   229c4:	e8 87 fa ff ff       	call   22450 <instr_execute_2op>
   229c9:	83 c4 08             	add    $0x8,%esp
   229cc:	b8 02 00 00 00       	mov    $0x2,%eax
   229d1:	5b                   	pop    %ebx
   229d2:	c3                   	ret    
   229d3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   229da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000229e0 <__ref_or_i2a_v>:
   229e0:	55                   	push   %ebp
   229e1:	57                   	push   %edi
   229e2:	56                   	push   %esi
   229e3:	53                   	push   %ebx
   229e4:	e8 97 1a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   229e9:	81 c3 17 c6 02 00    	add    $0x2c617,%ebx
   229ef:	83 ec 0c             	sub    $0xc,%esp
   229f2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   229f8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   229fe:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   22a04:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   22a0a:	0f b6 08             	movzbl (%eax),%ecx
   22a0d:	8b 44 24 20          	mov    0x20(%esp),%eax
   22a11:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   22a17:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   22a1b:	89 cf                	mov    %ecx,%edi
   22a1d:	83 c0 01             	add    $0x1,%eax
   22a20:	89 4d 10             	mov    %ecx,0x10(%ebp)
   22a23:	c1 ef 03             	shr    $0x3,%edi
   22a26:	89 4a 10             	mov    %ecx,0x10(%edx)
   22a29:	89 42 04             	mov    %eax,0x4(%edx)
   22a2c:	83 c7 01             	add    $0x1,%edi
   22a2f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   22a36:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   22a3d:	83 f9 08             	cmp    $0x8,%ecx
   22a40:	74 12                	je     22a54 <__ref_or_i2a_v+0x74>
   22a42:	83 f9 10             	cmp    $0x10,%ecx
   22a45:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   22a4b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   22a51:	0f 45 f0             	cmovne %eax,%esi
   22a54:	83 ec 0c             	sub    $0xc,%esp
   22a57:	8d 83 0f 70 fe ff    	lea    -0x18ff1(%ebx),%eax
   22a5d:	55                   	push   %ebp
   22a5e:	52                   	push   %edx
   22a5f:	57                   	push   %edi
   22a60:	56                   	push   %esi
   22a61:	50                   	push   %eax
   22a62:	e8 39 f7 fe ff       	call   121a0 <print_asm_2>
   22a67:	83 c4 20             	add    $0x20,%esp
   22a6a:	e8 e1 f9 ff ff       	call   22450 <instr_execute_2op>
   22a6f:	83 c4 0c             	add    $0xc,%esp
   22a72:	89 f8                	mov    %edi,%eax
   22a74:	5b                   	pop    %ebx
   22a75:	5e                   	pop    %esi
   22a76:	5f                   	pop    %edi
   22a77:	5d                   	pop    %ebp
   22a78:	c3                   	ret    
   22a79:	66 90                	xchg   %ax,%ax
   22a7b:	66 90                	xchg   %ax,%ax
   22a7d:	66 90                	xchg   %ax,%ax
   22a7f:	90                   	nop

00022a80 <__ref_movs_v>:
   22a80:	57                   	push   %edi
   22a81:	56                   	push   %esi
   22a82:	53                   	push   %ebx
   22a83:	e8 f8 19 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22a88:	81 c3 78 c5 02 00    	add    $0x2c578,%ebx
   22a8e:	83 ec 50             	sub    $0x50,%esp
   22a91:	e8 4a 7d 00 00       	call   2a7e0 <set_ref>
   22a96:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   22a9c:	83 ec 0c             	sub    $0xc,%esp
   22a9f:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   22aa5:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   22aac:	00 
   22aad:	0f b6 07             	movzbl (%edi),%eax
   22ab0:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   22ab7:	00 
   22ab8:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   22abd:	89 44 24 48          	mov    %eax,0x48(%esp)
   22ac1:	89 44 24 24          	mov    %eax,0x24(%esp)
   22ac5:	8b 46 18             	mov    0x18(%esi),%eax
   22ac8:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   22acd:	89 44 24 18          	mov    %eax,0x18(%esp)
   22ad1:	8b 46 1c             	mov    0x1c(%esi),%eax
   22ad4:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   22ad8:	8d 44 24 14          	lea    0x14(%esp),%eax
   22adc:	50                   	push   %eax
   22add:	e8 fe f8 fe ff       	call   123e0 <operand_read>
   22ae2:	8b 44 24 24          	mov    0x24(%esp),%eax
   22ae6:	89 44 24 48          	mov    %eax,0x48(%esp)
   22aea:	58                   	pop    %eax
   22aeb:	8d 44 24 38          	lea    0x38(%esp),%eax
   22aef:	50                   	push   %eax
   22af0:	e8 9b fa fe ff       	call   12590 <operand_write>
   22af5:	83 c4 10             	add    $0x10,%esp
   22af8:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   22afc:	75 3a                	jne    22b38 <__ref_movs_v+0xb8>
   22afe:	0f b6 07             	movzbl (%edi),%eax
   22b01:	c0 e8 03             	shr    $0x3,%al
   22b04:	0f b6 c0             	movzbl %al,%eax
   22b07:	83 ec 04             	sub    $0x4,%esp
   22b0a:	01 46 18             	add    %eax,0x18(%esi)
   22b0d:	01 46 1c             	add    %eax,0x1c(%esi)
   22b10:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   22b16:	6a 01                	push   $0x1
   22b18:	50                   	push   %eax
   22b19:	8d 83 d1 6a fe ff    	lea    -0x1952f(%ebx),%eax
   22b1f:	50                   	push   %eax
   22b20:	e8 9b f4 fe ff       	call   11fc0 <print_asm_0>
   22b25:	83 c4 60             	add    $0x60,%esp
   22b28:	b8 01 00 00 00       	mov    $0x1,%eax
   22b2d:	5b                   	pop    %ebx
   22b2e:	5e                   	pop    %esi
   22b2f:	5f                   	pop    %edi
   22b30:	c3                   	ret    
   22b31:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   22b38:	0f b6 07             	movzbl (%edi),%eax
   22b3b:	c1 f8 03             	sar    $0x3,%eax
   22b3e:	f7 d8                	neg    %eax
   22b40:	eb c5                	jmp    22b07 <__ref_movs_v+0x87>
   22b42:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   22b49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022b50 <__ref_movs_b>:
   22b50:	56                   	push   %esi
   22b51:	53                   	push   %ebx
   22b52:	e8 29 19 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22b57:	81 c3 a9 c4 02 00    	add    $0x2c4a9,%ebx
   22b5d:	83 ec 54             	sub    $0x54,%esp
   22b60:	e8 7b 7c 00 00       	call   2a7e0 <set_ref>
   22b65:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   22b6b:	c6 44 24 34 03       	movb   $0x3,0x34(%esp)
   22b70:	83 ec 0c             	sub    $0xc,%esp
   22b73:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   22b7a:	00 
   22b7b:	8b 46 18             	mov    0x18(%esi),%eax
   22b7e:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   22b85:	00 
   22b86:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   22b8b:	89 44 24 18          	mov    %eax,0x18(%esp)
   22b8f:	8b 46 1c             	mov    0x1c(%esi),%eax
   22b92:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   22b99:	00 
   22b9a:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   22ba1:	00 
   22ba2:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   22ba6:	8d 44 24 14          	lea    0x14(%esp),%eax
   22baa:	50                   	push   %eax
   22bab:	e8 30 f8 fe ff       	call   123e0 <operand_read>
   22bb0:	8b 44 24 24          	mov    0x24(%esp),%eax
   22bb4:	89 44 24 48          	mov    %eax,0x48(%esp)
   22bb8:	58                   	pop    %eax
   22bb9:	8d 44 24 38          	lea    0x38(%esp),%eax
   22bbd:	50                   	push   %eax
   22bbe:	e8 cd f9 fe ff       	call   12590 <operand_write>
   22bc3:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   22bc7:	83 c4 0c             	add    $0xc,%esp
   22bca:	6a 01                	push   $0x1
   22bcc:	83 e0 04             	and    $0x4,%eax
   22bcf:	3c 01                	cmp    $0x1,%al
   22bd1:	19 c0                	sbb    %eax,%eax
   22bd3:	83 e0 02             	and    $0x2,%eax
   22bd6:	83 e8 01             	sub    $0x1,%eax
   22bd9:	01 46 18             	add    %eax,0x18(%esi)
   22bdc:	01 46 1c             	add    %eax,0x1c(%esi)
   22bdf:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   22be5:	50                   	push   %eax
   22be6:	8d 83 d1 6a fe ff    	lea    -0x1952f(%ebx),%eax
   22bec:	50                   	push   %eax
   22bed:	e8 ce f3 fe ff       	call   11fc0 <print_asm_0>
   22bf2:	83 c4 64             	add    $0x64,%esp
   22bf5:	b8 01 00 00 00       	mov    $0x1,%eax
   22bfa:	5b                   	pop    %ebx
   22bfb:	5e                   	pop    %esi
   22bfc:	c3                   	ret    
   22bfd:	66 90                	xchg   %ax,%ax
   22bff:	90                   	nop

00022c00 <sign_ext.part.0>:
   22c00:	53                   	push   %ebx
   22c01:	e8 7a 18 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22c06:	81 c3 fa c3 02 00    	add    $0x2c3fa,%ebx
   22c0c:	83 ec 08             	sub    $0x8,%esp
   22c0f:	8d 83 5c 6d fe ff    	lea    -0x192a4(%ebx),%eax
   22c15:	50                   	push   %eax
   22c16:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   22c1c:	6a 2e                	push   $0x2e
   22c1e:	50                   	push   %eax
   22c1f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   22c25:	50                   	push   %eax
   22c26:	e8 e5 16 fe ff       	call   4310 <__assert_fail@plt>
   22c2b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22c2f:	90                   	nop

00022c30 <instr_execute_2op>:
   22c30:	55                   	push   %ebp
   22c31:	57                   	push   %edi
   22c32:	56                   	push   %esi
   22c33:	53                   	push   %ebx
   22c34:	e8 47 18 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22c39:	81 c3 c7 c3 02 00    	add    $0x2c3c7,%ebx
   22c3f:	83 ec 0c             	sub    $0xc,%esp
   22c42:	e8 99 7b 00 00       	call   2a7e0 <set_ref>
   22c47:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22c4d:	83 ec 0c             	sub    $0xc,%esp
   22c50:	57                   	push   %edi
   22c51:	e8 8a f7 fe ff       	call   123e0 <operand_read>
   22c56:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   22c5c:	89 34 24             	mov    %esi,(%esp)
   22c5f:	e8 7c f7 fe ff       	call   123e0 <operand_read>
   22c64:	8b 56 10             	mov    0x10(%esi),%edx
   22c67:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   22c6d:	83 c4 10             	add    $0x10,%esp
   22c70:	8d 6a f8             	lea    -0x8(%edx),%ebp
   22c73:	0f b6 08             	movzbl (%eax),%ecx
   22c76:	8b 46 0c             	mov    0xc(%esi),%eax
   22c79:	83 e5 f7             	and    $0xfffffff7,%ebp
   22c7c:	74 05                	je     22c83 <instr_execute_2op+0x53>
   22c7e:	83 fa 20             	cmp    $0x20,%edx
   22c81:	75 5a                	jne    22cdd <instr_execute_2op+0xad>
   22c83:	83 fa 08             	cmp    $0x8,%edx
   22c86:	74 48                	je     22cd0 <instr_execute_2op+0xa0>
   22c88:	0f bf e8             	movswl %ax,%ebp
   22c8b:	83 fa 10             	cmp    $0x10,%edx
   22c8e:	0f 44 c5             	cmove  %ebp,%eax
   22c91:	8b 6f 10             	mov    0x10(%edi),%ebp
   22c94:	8b 57 0c             	mov    0xc(%edi),%edx
   22c97:	8d 7d f8             	lea    -0x8(%ebp),%edi
   22c9a:	83 e7 f7             	and    $0xfffffff7,%edi
   22c9d:	74 05                	je     22ca4 <instr_execute_2op+0x74>
   22c9f:	83 fd 20             	cmp    $0x20,%ebp
   22ca2:	75 39                	jne    22cdd <instr_execute_2op+0xad>
   22ca4:	83 fd 08             	cmp    $0x8,%ebp
   22ca7:	74 2f                	je     22cd8 <instr_execute_2op+0xa8>
   22ca9:	0f bf fa             	movswl %dx,%edi
   22cac:	83 fd 10             	cmp    $0x10,%ebp
   22caf:	0f 44 d7             	cmove  %edi,%edx
   22cb2:	83 ec 04             	sub    $0x4,%esp
   22cb5:	51                   	push   %ecx
   22cb6:	50                   	push   %eax
   22cb7:	52                   	push   %edx
   22cb8:	e8 73 76 00 00       	call   2a330 <__ref_alu_and>
   22cbd:	89 46 0c             	mov    %eax,0xc(%esi)
   22cc0:	83 c4 1c             	add    $0x1c,%esp
   22cc3:	5b                   	pop    %ebx
   22cc4:	5e                   	pop    %esi
   22cc5:	5f                   	pop    %edi
   22cc6:	5d                   	pop    %ebp
   22cc7:	c3                   	ret    
   22cc8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   22ccf:	90                   	nop
   22cd0:	0f be c0             	movsbl %al,%eax
   22cd3:	eb bc                	jmp    22c91 <instr_execute_2op+0x61>
   22cd5:	8d 76 00             	lea    0x0(%esi),%esi
   22cd8:	0f be d2             	movsbl %dl,%edx
   22cdb:	eb d5                	jmp    22cb2 <instr_execute_2op+0x82>
   22cdd:	e8 1e ff ff ff       	call   22c00 <sign_ext.part.0>
   22ce2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   22ce9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022cf0 <__ref_test_r2rm_b>:
   22cf0:	55                   	push   %ebp
   22cf1:	57                   	push   %edi
   22cf2:	56                   	push   %esi
   22cf3:	53                   	push   %ebx
   22cf4:	e8 87 17 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22cf9:	81 c3 07 c3 02 00    	add    $0x2c307,%ebx
   22cff:	83 ec 10             	sub    $0x10,%esp
   22d02:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   22d08:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22d0e:	56                   	push   %esi
   22d0f:	57                   	push   %edi
   22d10:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   22d14:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   22d1b:	83 c0 01             	add    $0x1,%eax
   22d1e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   22d25:	50                   	push   %eax
   22d26:	e8 75 f1 fe ff       	call   11ea0 <modrm_r_rm>
   22d2b:	8b 4e 10             	mov    0x10(%esi),%ecx
   22d2e:	83 c4 10             	add    $0x10,%esp
   22d31:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   22d37:	8d 68 01             	lea    0x1(%eax),%ebp
   22d3a:	89 e8                	mov    %ebp,%eax
   22d3c:	0f b6 c0             	movzbl %al,%eax
   22d3f:	83 f9 08             	cmp    $0x8,%ecx
   22d42:	74 12                	je     22d56 <__ref_test_r2rm_b+0x66>
   22d44:	83 f9 10             	cmp    $0x10,%ecx
   22d47:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   22d4d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   22d53:	0f 45 d1             	cmovne %ecx,%edx
   22d56:	83 ec 0c             	sub    $0xc,%esp
   22d59:	56                   	push   %esi
   22d5a:	57                   	push   %edi
   22d5b:	50                   	push   %eax
   22d5c:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   22d62:	52                   	push   %edx
   22d63:	50                   	push   %eax
   22d64:	e8 37 f4 fe ff       	call   121a0 <print_asm_2>
   22d69:	83 c4 20             	add    $0x20,%esp
   22d6c:	e8 bf fe ff ff       	call   22c30 <instr_execute_2op>
   22d71:	83 c4 0c             	add    $0xc,%esp
   22d74:	89 e8                	mov    %ebp,%eax
   22d76:	5b                   	pop    %ebx
   22d77:	5e                   	pop    %esi
   22d78:	5f                   	pop    %edi
   22d79:	5d                   	pop    %ebp
   22d7a:	c3                   	ret    
   22d7b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22d7f:	90                   	nop

00022d80 <__ref_test_r2rm_v>:
   22d80:	55                   	push   %ebp
   22d81:	57                   	push   %edi
   22d82:	56                   	push   %esi
   22d83:	53                   	push   %ebx
   22d84:	e8 f7 16 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22d89:	81 c3 77 c2 02 00    	add    $0x2c277,%ebx
   22d8f:	83 ec 10             	sub    $0x10,%esp
   22d92:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   22d98:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   22d9e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22da4:	0f b6 00             	movzbl (%eax),%eax
   22da7:	56                   	push   %esi
   22da8:	57                   	push   %edi
   22da9:	89 46 10             	mov    %eax,0x10(%esi)
   22dac:	89 47 10             	mov    %eax,0x10(%edi)
   22daf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   22db3:	83 c0 01             	add    $0x1,%eax
   22db6:	50                   	push   %eax
   22db7:	e8 e4 f0 fe ff       	call   11ea0 <modrm_r_rm>
   22dbc:	8b 4e 10             	mov    0x10(%esi),%ecx
   22dbf:	83 c4 10             	add    $0x10,%esp
   22dc2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   22dc8:	8d 68 01             	lea    0x1(%eax),%ebp
   22dcb:	89 e8                	mov    %ebp,%eax
   22dcd:	0f b6 c0             	movzbl %al,%eax
   22dd0:	83 f9 08             	cmp    $0x8,%ecx
   22dd3:	74 12                	je     22de7 <__ref_test_r2rm_v+0x67>
   22dd5:	83 f9 10             	cmp    $0x10,%ecx
   22dd8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   22dde:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   22de4:	0f 45 d1             	cmovne %ecx,%edx
   22de7:	83 ec 0c             	sub    $0xc,%esp
   22dea:	56                   	push   %esi
   22deb:	57                   	push   %edi
   22dec:	50                   	push   %eax
   22ded:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   22df3:	52                   	push   %edx
   22df4:	50                   	push   %eax
   22df5:	e8 a6 f3 fe ff       	call   121a0 <print_asm_2>
   22dfa:	83 c4 20             	add    $0x20,%esp
   22dfd:	e8 2e fe ff ff       	call   22c30 <instr_execute_2op>
   22e02:	83 c4 0c             	add    $0xc,%esp
   22e05:	89 e8                	mov    %ebp,%eax
   22e07:	5b                   	pop    %ebx
   22e08:	5e                   	pop    %esi
   22e09:	5f                   	pop    %edi
   22e0a:	5d                   	pop    %ebp
   22e0b:	c3                   	ret    
   22e0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00022e10 <__ref_test_i2rm_b>:
   22e10:	55                   	push   %ebp
   22e11:	57                   	push   %edi
   22e12:	56                   	push   %esi
   22e13:	53                   	push   %ebx
   22e14:	e8 67 16 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22e19:	81 c3 e7 c1 02 00    	add    $0x2c1e7,%ebx
   22e1f:	83 ec 24             	sub    $0x24,%esp
   22e22:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   22e26:	8d 45 01             	lea    0x1(%ebp),%eax
   22e29:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   22e2f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22e35:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   22e3c:	52                   	push   %edx
   22e3d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   22e44:	89 54 24 18          	mov    %edx,0x18(%esp)
   22e48:	50                   	push   %eax
   22e49:	e8 32 f1 fe ff       	call   11f80 <modrm_rm>
   22e4e:	8b 77 10             	mov    0x10(%edi),%esi
   22e51:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   22e55:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   22e59:	83 c0 01             	add    $0x1,%eax
   22e5c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   22e62:	83 c4 10             	add    $0x10,%esp
   22e65:	01 c5                	add    %eax,%ebp
   22e67:	c1 ee 03             	shr    $0x3,%esi
   22e6a:	89 6f 04             	mov    %ebp,0x4(%edi)
   22e6d:	01 c6                	add    %eax,%esi
   22e6f:	8b 6a 10             	mov    0x10(%edx),%ebp
   22e72:	89 f0                	mov    %esi,%eax
   22e74:	0f b6 c8             	movzbl %al,%ecx
   22e77:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   22e7d:	83 fd 08             	cmp    $0x8,%ebp
   22e80:	74 12                	je     22e94 <__ref_test_i2rm_b+0x84>
   22e82:	83 fd 10             	cmp    $0x10,%ebp
   22e85:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   22e8b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   22e91:	0f 45 c5             	cmovne %ebp,%eax
   22e94:	83 ec 0c             	sub    $0xc,%esp
   22e97:	52                   	push   %edx
   22e98:	57                   	push   %edi
   22e99:	51                   	push   %ecx
   22e9a:	50                   	push   %eax
   22e9b:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   22ea1:	50                   	push   %eax
   22ea2:	e8 f9 f2 fe ff       	call   121a0 <print_asm_2>
   22ea7:	83 c4 20             	add    $0x20,%esp
   22eaa:	e8 81 fd ff ff       	call   22c30 <instr_execute_2op>
   22eaf:	83 c4 1c             	add    $0x1c,%esp
   22eb2:	89 f0                	mov    %esi,%eax
   22eb4:	5b                   	pop    %ebx
   22eb5:	5e                   	pop    %esi
   22eb6:	5f                   	pop    %edi
   22eb7:	5d                   	pop    %ebp
   22eb8:	c3                   	ret    
   22eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022ec0 <__ref_test_i2rm_v>:
   22ec0:	55                   	push   %ebp
   22ec1:	57                   	push   %edi
   22ec2:	56                   	push   %esi
   22ec3:	53                   	push   %ebx
   22ec4:	e8 b7 15 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22ec9:	81 c3 37 c1 02 00    	add    $0x2c137,%ebx
   22ecf:	83 ec 24             	sub    $0x24,%esp
   22ed2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   22ed6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   22edc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   22ee2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   22ee8:	0f b6 00             	movzbl (%eax),%eax
   22eeb:	89 42 10             	mov    %eax,0x10(%edx)
   22eee:	52                   	push   %edx
   22eef:	89 47 10             	mov    %eax,0x10(%edi)
   22ef2:	8d 45 01             	lea    0x1(%ebp),%eax
   22ef5:	89 54 24 18          	mov    %edx,0x18(%esp)
   22ef9:	50                   	push   %eax
   22efa:	e8 81 f0 fe ff       	call   11f80 <modrm_rm>
   22eff:	8b 77 10             	mov    0x10(%edi),%esi
   22f02:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   22f06:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   22f0a:	83 c0 01             	add    $0x1,%eax
   22f0d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   22f13:	83 c4 10             	add    $0x10,%esp
   22f16:	01 c5                	add    %eax,%ebp
   22f18:	c1 ee 03             	shr    $0x3,%esi
   22f1b:	89 6f 04             	mov    %ebp,0x4(%edi)
   22f1e:	01 c6                	add    %eax,%esi
   22f20:	8b 6a 10             	mov    0x10(%edx),%ebp
   22f23:	89 f0                	mov    %esi,%eax
   22f25:	0f b6 c8             	movzbl %al,%ecx
   22f28:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   22f2e:	83 fd 08             	cmp    $0x8,%ebp
   22f31:	74 12                	je     22f45 <__ref_test_i2rm_v+0x85>
   22f33:	83 fd 10             	cmp    $0x10,%ebp
   22f36:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   22f3c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   22f42:	0f 45 c5             	cmovne %ebp,%eax
   22f45:	83 ec 0c             	sub    $0xc,%esp
   22f48:	52                   	push   %edx
   22f49:	57                   	push   %edi
   22f4a:	51                   	push   %ecx
   22f4b:	50                   	push   %eax
   22f4c:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   22f52:	50                   	push   %eax
   22f53:	e8 48 f2 fe ff       	call   121a0 <print_asm_2>
   22f58:	83 c4 20             	add    $0x20,%esp
   22f5b:	e8 d0 fc ff ff       	call   22c30 <instr_execute_2op>
   22f60:	83 c4 1c             	add    $0x1c,%esp
   22f63:	89 f0                	mov    %esi,%eax
   22f65:	5b                   	pop    %ebx
   22f66:	5e                   	pop    %esi
   22f67:	5f                   	pop    %edi
   22f68:	5d                   	pop    %ebp
   22f69:	c3                   	ret    
   22f6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00022f70 <__ref_test_i2a_b>:
   22f70:	53                   	push   %ebx
   22f71:	e8 0a 15 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22f76:	81 c3 8a c0 02 00    	add    $0x2c08a,%ebx
   22f7c:	83 ec 14             	sub    $0x14,%esp
   22f7f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   22f83:	83 c1 01             	add    $0x1,%ecx
   22f86:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   22f8c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   22f92:	89 48 04             	mov    %ecx,0x4(%eax)
   22f95:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   22f9c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   22fa3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   22fa9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   22fad:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   22fb3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   22fba:	52                   	push   %edx
   22fbb:	50                   	push   %eax
   22fbc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   22fc2:	6a 02                	push   $0x2
   22fc4:	50                   	push   %eax
   22fc5:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   22fcb:	50                   	push   %eax
   22fcc:	e8 cf f1 fe ff       	call   121a0 <print_asm_2>
   22fd1:	83 c4 20             	add    $0x20,%esp
   22fd4:	e8 57 fc ff ff       	call   22c30 <instr_execute_2op>
   22fd9:	83 c4 08             	add    $0x8,%esp
   22fdc:	b8 02 00 00 00       	mov    $0x2,%eax
   22fe1:	5b                   	pop    %ebx
   22fe2:	c3                   	ret    
   22fe3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   22fea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00022ff0 <__ref_test_i2a_v>:
   22ff0:	55                   	push   %ebp
   22ff1:	57                   	push   %edi
   22ff2:	56                   	push   %esi
   22ff3:	53                   	push   %ebx
   22ff4:	e8 87 14 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   22ff9:	81 c3 07 c0 02 00    	add    $0x2c007,%ebx
   22fff:	83 ec 0c             	sub    $0xc,%esp
   23002:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   23008:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   2300e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   23014:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2301a:	0f b6 08             	movzbl (%eax),%ecx
   2301d:	8b 44 24 20          	mov    0x20(%esp),%eax
   23021:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   23027:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   2302b:	89 cf                	mov    %ecx,%edi
   2302d:	83 c0 01             	add    $0x1,%eax
   23030:	89 4d 10             	mov    %ecx,0x10(%ebp)
   23033:	c1 ef 03             	shr    $0x3,%edi
   23036:	89 4a 10             	mov    %ecx,0x10(%edx)
   23039:	89 42 04             	mov    %eax,0x4(%edx)
   2303c:	83 c7 01             	add    $0x1,%edi
   2303f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   23046:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   2304d:	83 f9 08             	cmp    $0x8,%ecx
   23050:	74 12                	je     23064 <__ref_test_i2a_v+0x74>
   23052:	83 f9 10             	cmp    $0x10,%ecx
   23055:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   2305b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   23061:	0f 45 f0             	cmovne %eax,%esi
   23064:	83 ec 0c             	sub    $0xc,%esp
   23067:	8d 83 d3 66 fe ff    	lea    -0x1992d(%ebx),%eax
   2306d:	55                   	push   %ebp
   2306e:	52                   	push   %edx
   2306f:	57                   	push   %edi
   23070:	56                   	push   %esi
   23071:	50                   	push   %eax
   23072:	e8 29 f1 fe ff       	call   121a0 <print_asm_2>
   23077:	83 c4 20             	add    $0x20,%esp
   2307a:	e8 b1 fb ff ff       	call   22c30 <instr_execute_2op>
   2307f:	83 c4 0c             	add    $0xc,%esp
   23082:	89 f8                	mov    %edi,%eax
   23084:	5b                   	pop    %ebx
   23085:	5e                   	pop    %esi
   23086:	5f                   	pop    %edi
   23087:	5d                   	pop    %ebp
   23088:	c3                   	ret    
   23089:	66 90                	xchg   %ax,%ax
   2308b:	66 90                	xchg   %ax,%ax
   2308d:	66 90                	xchg   %ax,%ax
   2308f:	90                   	nop

00023090 <sign_ext.part.0>:
   23090:	53                   	push   %ebx
   23091:	e8 ea 13 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23096:	81 c3 6a bf 02 00    	add    $0x2bf6a,%ebx
   2309c:	83 ec 08             	sub    $0x8,%esp
   2309f:	8d 83 68 6d fe ff    	lea    -0x19298(%ebx),%eax
   230a5:	50                   	push   %eax
   230a6:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   230ac:	6a 2e                	push   $0x2e
   230ae:	50                   	push   %eax
   230af:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   230b5:	50                   	push   %eax
   230b6:	e8 55 12 fe ff       	call   4310 <__assert_fail@plt>
   230bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   230bf:	90                   	nop

000230c0 <instr_execute_2op>:
   230c0:	55                   	push   %ebp
   230c1:	57                   	push   %edi
   230c2:	56                   	push   %esi
   230c3:	53                   	push   %ebx
   230c4:	e8 b7 13 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   230c9:	81 c3 37 bf 02 00    	add    $0x2bf37,%ebx
   230cf:	83 ec 0c             	sub    $0xc,%esp
   230d2:	e8 09 77 00 00       	call   2a7e0 <set_ref>
   230d7:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   230dd:	83 ec 0c             	sub    $0xc,%esp
   230e0:	57                   	push   %edi
   230e1:	e8 fa f2 fe ff       	call   123e0 <operand_read>
   230e6:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   230ec:	89 34 24             	mov    %esi,(%esp)
   230ef:	e8 ec f2 fe ff       	call   123e0 <operand_read>
   230f4:	8b 56 10             	mov    0x10(%esi),%edx
   230f7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   230fd:	83 c4 10             	add    $0x10,%esp
   23100:	8d 6a f8             	lea    -0x8(%edx),%ebp
   23103:	0f b6 08             	movzbl (%eax),%ecx
   23106:	8b 46 0c             	mov    0xc(%esi),%eax
   23109:	83 e5 f7             	and    $0xfffffff7,%ebp
   2310c:	74 05                	je     23113 <instr_execute_2op+0x53>
   2310e:	83 fa 20             	cmp    $0x20,%edx
   23111:	75 5a                	jne    2316d <instr_execute_2op+0xad>
   23113:	83 fa 08             	cmp    $0x8,%edx
   23116:	74 48                	je     23160 <instr_execute_2op+0xa0>
   23118:	0f bf e8             	movswl %ax,%ebp
   2311b:	83 fa 10             	cmp    $0x10,%edx
   2311e:	0f 44 c5             	cmove  %ebp,%eax
   23121:	8b 6f 10             	mov    0x10(%edi),%ebp
   23124:	8b 57 0c             	mov    0xc(%edi),%edx
   23127:	8d 7d f8             	lea    -0x8(%ebp),%edi
   2312a:	83 e7 f7             	and    $0xfffffff7,%edi
   2312d:	74 05                	je     23134 <instr_execute_2op+0x74>
   2312f:	83 fd 20             	cmp    $0x20,%ebp
   23132:	75 39                	jne    2316d <instr_execute_2op+0xad>
   23134:	83 fd 08             	cmp    $0x8,%ebp
   23137:	74 2f                	je     23168 <instr_execute_2op+0xa8>
   23139:	0f bf fa             	movswl %dx,%edi
   2313c:	83 fd 10             	cmp    $0x10,%ebp
   2313f:	0f 44 d7             	cmove  %edi,%edx
   23142:	83 ec 04             	sub    $0x4,%esp
   23145:	51                   	push   %ecx
   23146:	50                   	push   %eax
   23147:	52                   	push   %edx
   23148:	e8 b3 6d 00 00       	call   29f00 <__ref_alu_sub>
   2314d:	89 34 24             	mov    %esi,(%esp)
   23150:	89 46 0c             	mov    %eax,0xc(%esi)
   23153:	e8 38 f4 fe ff       	call   12590 <operand_write>
   23158:	83 c4 1c             	add    $0x1c,%esp
   2315b:	5b                   	pop    %ebx
   2315c:	5e                   	pop    %esi
   2315d:	5f                   	pop    %edi
   2315e:	5d                   	pop    %ebp
   2315f:	c3                   	ret    
   23160:	0f be c0             	movsbl %al,%eax
   23163:	eb bc                	jmp    23121 <instr_execute_2op+0x61>
   23165:	8d 76 00             	lea    0x0(%esi),%esi
   23168:	0f be d2             	movsbl %dl,%edx
   2316b:	eb d5                	jmp    23142 <instr_execute_2op+0x82>
   2316d:	e8 1e ff ff ff       	call   23090 <sign_ext.part.0>
   23172:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23179:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00023180 <__ref_sub_r2rm_b>:
   23180:	55                   	push   %ebp
   23181:	57                   	push   %edi
   23182:	56                   	push   %esi
   23183:	53                   	push   %ebx
   23184:	e8 f7 12 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23189:	81 c3 77 be 02 00    	add    $0x2be77,%ebx
   2318f:	83 ec 10             	sub    $0x10,%esp
   23192:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   23198:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2319e:	56                   	push   %esi
   2319f:	57                   	push   %edi
   231a0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   231a4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   231ab:	83 c0 01             	add    $0x1,%eax
   231ae:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   231b5:	50                   	push   %eax
   231b6:	e8 e5 ec fe ff       	call   11ea0 <modrm_r_rm>
   231bb:	8b 4e 10             	mov    0x10(%esi),%ecx
   231be:	83 c4 10             	add    $0x10,%esp
   231c1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   231c7:	8d 68 01             	lea    0x1(%eax),%ebp
   231ca:	89 e8                	mov    %ebp,%eax
   231cc:	0f b6 c0             	movzbl %al,%eax
   231cf:	83 f9 08             	cmp    $0x8,%ecx
   231d2:	74 12                	je     231e6 <__ref_sub_r2rm_b+0x66>
   231d4:	83 f9 10             	cmp    $0x10,%ecx
   231d7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   231dd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   231e3:	0f 45 d1             	cmovne %ecx,%edx
   231e6:	83 ec 0c             	sub    $0xc,%esp
   231e9:	56                   	push   %esi
   231ea:	57                   	push   %edi
   231eb:	50                   	push   %eax
   231ec:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   231f2:	52                   	push   %edx
   231f3:	50                   	push   %eax
   231f4:	e8 a7 ef fe ff       	call   121a0 <print_asm_2>
   231f9:	83 c4 20             	add    $0x20,%esp
   231fc:	e8 bf fe ff ff       	call   230c0 <instr_execute_2op>
   23201:	83 c4 0c             	add    $0xc,%esp
   23204:	89 e8                	mov    %ebp,%eax
   23206:	5b                   	pop    %ebx
   23207:	5e                   	pop    %esi
   23208:	5f                   	pop    %edi
   23209:	5d                   	pop    %ebp
   2320a:	c3                   	ret    
   2320b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2320f:	90                   	nop

00023210 <__ref_sub_r2rm_v>:
   23210:	55                   	push   %ebp
   23211:	57                   	push   %edi
   23212:	56                   	push   %esi
   23213:	53                   	push   %ebx
   23214:	e8 67 12 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23219:	81 c3 e7 bd 02 00    	add    $0x2bde7,%ebx
   2321f:	83 ec 10             	sub    $0x10,%esp
   23222:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   23228:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2322e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   23234:	0f b6 00             	movzbl (%eax),%eax
   23237:	56                   	push   %esi
   23238:	57                   	push   %edi
   23239:	89 46 10             	mov    %eax,0x10(%esi)
   2323c:	89 47 10             	mov    %eax,0x10(%edi)
   2323f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   23243:	83 c0 01             	add    $0x1,%eax
   23246:	50                   	push   %eax
   23247:	e8 54 ec fe ff       	call   11ea0 <modrm_r_rm>
   2324c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2324f:	83 c4 10             	add    $0x10,%esp
   23252:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   23258:	8d 68 01             	lea    0x1(%eax),%ebp
   2325b:	89 e8                	mov    %ebp,%eax
   2325d:	0f b6 c0             	movzbl %al,%eax
   23260:	83 f9 08             	cmp    $0x8,%ecx
   23263:	74 12                	je     23277 <__ref_sub_r2rm_v+0x67>
   23265:	83 f9 10             	cmp    $0x10,%ecx
   23268:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2326e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   23274:	0f 45 d1             	cmovne %ecx,%edx
   23277:	83 ec 0c             	sub    $0xc,%esp
   2327a:	56                   	push   %esi
   2327b:	57                   	push   %edi
   2327c:	50                   	push   %eax
   2327d:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   23283:	52                   	push   %edx
   23284:	50                   	push   %eax
   23285:	e8 16 ef fe ff       	call   121a0 <print_asm_2>
   2328a:	83 c4 20             	add    $0x20,%esp
   2328d:	e8 2e fe ff ff       	call   230c0 <instr_execute_2op>
   23292:	83 c4 0c             	add    $0xc,%esp
   23295:	89 e8                	mov    %ebp,%eax
   23297:	5b                   	pop    %ebx
   23298:	5e                   	pop    %esi
   23299:	5f                   	pop    %edi
   2329a:	5d                   	pop    %ebp
   2329b:	c3                   	ret    
   2329c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000232a0 <__ref_sub_rm2r_b>:
   232a0:	55                   	push   %ebp
   232a1:	57                   	push   %edi
   232a2:	56                   	push   %esi
   232a3:	53                   	push   %ebx
   232a4:	e8 d7 11 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   232a9:	81 c3 57 bd 02 00    	add    $0x2bd57,%ebx
   232af:	83 ec 10             	sub    $0x10,%esp
   232b2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   232b8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   232be:	57                   	push   %edi
   232bf:	56                   	push   %esi
   232c0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   232c4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   232cb:	83 c0 01             	add    $0x1,%eax
   232ce:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   232d5:	50                   	push   %eax
   232d6:	e8 c5 eb fe ff       	call   11ea0 <modrm_r_rm>
   232db:	8b 4e 10             	mov    0x10(%esi),%ecx
   232de:	83 c4 10             	add    $0x10,%esp
   232e1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   232e7:	8d 68 01             	lea    0x1(%eax),%ebp
   232ea:	89 e8                	mov    %ebp,%eax
   232ec:	0f b6 c0             	movzbl %al,%eax
   232ef:	83 f9 08             	cmp    $0x8,%ecx
   232f2:	74 12                	je     23306 <__ref_sub_rm2r_b+0x66>
   232f4:	83 f9 10             	cmp    $0x10,%ecx
   232f7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   232fd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   23303:	0f 45 d1             	cmovne %ecx,%edx
   23306:	83 ec 0c             	sub    $0xc,%esp
   23309:	56                   	push   %esi
   2330a:	57                   	push   %edi
   2330b:	50                   	push   %eax
   2330c:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   23312:	52                   	push   %edx
   23313:	50                   	push   %eax
   23314:	e8 87 ee fe ff       	call   121a0 <print_asm_2>
   23319:	83 c4 20             	add    $0x20,%esp
   2331c:	e8 9f fd ff ff       	call   230c0 <instr_execute_2op>
   23321:	83 c4 0c             	add    $0xc,%esp
   23324:	89 e8                	mov    %ebp,%eax
   23326:	5b                   	pop    %ebx
   23327:	5e                   	pop    %esi
   23328:	5f                   	pop    %edi
   23329:	5d                   	pop    %ebp
   2332a:	c3                   	ret    
   2332b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2332f:	90                   	nop

00023330 <__ref_sub_rm2r_v>:
   23330:	55                   	push   %ebp
   23331:	57                   	push   %edi
   23332:	56                   	push   %esi
   23333:	53                   	push   %ebx
   23334:	e8 47 11 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23339:	81 c3 c7 bc 02 00    	add    $0x2bcc7,%ebx
   2333f:	83 ec 10             	sub    $0x10,%esp
   23342:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   23348:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2334e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   23354:	0f b6 00             	movzbl (%eax),%eax
   23357:	57                   	push   %edi
   23358:	89 46 10             	mov    %eax,0x10(%esi)
   2335b:	56                   	push   %esi
   2335c:	89 47 10             	mov    %eax,0x10(%edi)
   2335f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   23363:	83 c0 01             	add    $0x1,%eax
   23366:	50                   	push   %eax
   23367:	e8 34 eb fe ff       	call   11ea0 <modrm_r_rm>
   2336c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2336f:	83 c4 10             	add    $0x10,%esp
   23372:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   23378:	8d 68 01             	lea    0x1(%eax),%ebp
   2337b:	89 e8                	mov    %ebp,%eax
   2337d:	0f b6 c0             	movzbl %al,%eax
   23380:	83 f9 08             	cmp    $0x8,%ecx
   23383:	74 12                	je     23397 <__ref_sub_rm2r_v+0x67>
   23385:	83 f9 10             	cmp    $0x10,%ecx
   23388:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2338e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   23394:	0f 45 d1             	cmovne %ecx,%edx
   23397:	83 ec 0c             	sub    $0xc,%esp
   2339a:	56                   	push   %esi
   2339b:	57                   	push   %edi
   2339c:	50                   	push   %eax
   2339d:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   233a3:	52                   	push   %edx
   233a4:	50                   	push   %eax
   233a5:	e8 f6 ed fe ff       	call   121a0 <print_asm_2>
   233aa:	83 c4 20             	add    $0x20,%esp
   233ad:	e8 0e fd ff ff       	call   230c0 <instr_execute_2op>
   233b2:	83 c4 0c             	add    $0xc,%esp
   233b5:	89 e8                	mov    %ebp,%eax
   233b7:	5b                   	pop    %ebx
   233b8:	5e                   	pop    %esi
   233b9:	5f                   	pop    %edi
   233ba:	5d                   	pop    %ebp
   233bb:	c3                   	ret    
   233bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000233c0 <__ref_sub_i2rm_b>:
   233c0:	55                   	push   %ebp
   233c1:	57                   	push   %edi
   233c2:	56                   	push   %esi
   233c3:	53                   	push   %ebx
   233c4:	e8 b7 10 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   233c9:	81 c3 37 bc 02 00    	add    $0x2bc37,%ebx
   233cf:	83 ec 24             	sub    $0x24,%esp
   233d2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   233d6:	8d 45 01             	lea    0x1(%ebp),%eax
   233d9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   233df:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   233e5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   233ec:	52                   	push   %edx
   233ed:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   233f4:	89 54 24 18          	mov    %edx,0x18(%esp)
   233f8:	50                   	push   %eax
   233f9:	e8 82 eb fe ff       	call   11f80 <modrm_rm>
   233fe:	8b 77 10             	mov    0x10(%edi),%esi
   23401:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   23405:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   23409:	83 c0 01             	add    $0x1,%eax
   2340c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   23412:	83 c4 10             	add    $0x10,%esp
   23415:	01 c5                	add    %eax,%ebp
   23417:	c1 ee 03             	shr    $0x3,%esi
   2341a:	89 6f 04             	mov    %ebp,0x4(%edi)
   2341d:	01 c6                	add    %eax,%esi
   2341f:	8b 6a 10             	mov    0x10(%edx),%ebp
   23422:	89 f0                	mov    %esi,%eax
   23424:	0f b6 c8             	movzbl %al,%ecx
   23427:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2342d:	83 fd 08             	cmp    $0x8,%ebp
   23430:	74 12                	je     23444 <__ref_sub_i2rm_b+0x84>
   23432:	83 fd 10             	cmp    $0x10,%ebp
   23435:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2343b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   23441:	0f 45 c5             	cmovne %ebp,%eax
   23444:	83 ec 0c             	sub    $0xc,%esp
   23447:	52                   	push   %edx
   23448:	57                   	push   %edi
   23449:	51                   	push   %ecx
   2344a:	50                   	push   %eax
   2344b:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   23451:	50                   	push   %eax
   23452:	e8 49 ed fe ff       	call   121a0 <print_asm_2>
   23457:	83 c4 20             	add    $0x20,%esp
   2345a:	e8 61 fc ff ff       	call   230c0 <instr_execute_2op>
   2345f:	83 c4 1c             	add    $0x1c,%esp
   23462:	89 f0                	mov    %esi,%eax
   23464:	5b                   	pop    %ebx
   23465:	5e                   	pop    %esi
   23466:	5f                   	pop    %edi
   23467:	5d                   	pop    %ebp
   23468:	c3                   	ret    
   23469:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00023470 <__ref_sub_i2rm_v>:
   23470:	55                   	push   %ebp
   23471:	57                   	push   %edi
   23472:	56                   	push   %esi
   23473:	53                   	push   %ebx
   23474:	e8 07 10 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23479:	81 c3 87 bb 02 00    	add    $0x2bb87,%ebx
   2347f:	83 ec 24             	sub    $0x24,%esp
   23482:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   23486:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2348c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   23492:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   23498:	0f b6 00             	movzbl (%eax),%eax
   2349b:	89 42 10             	mov    %eax,0x10(%edx)
   2349e:	52                   	push   %edx
   2349f:	89 47 10             	mov    %eax,0x10(%edi)
   234a2:	8d 45 01             	lea    0x1(%ebp),%eax
   234a5:	89 54 24 18          	mov    %edx,0x18(%esp)
   234a9:	50                   	push   %eax
   234aa:	e8 d1 ea fe ff       	call   11f80 <modrm_rm>
   234af:	8b 77 10             	mov    0x10(%edi),%esi
   234b2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   234b6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   234ba:	83 c0 01             	add    $0x1,%eax
   234bd:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   234c3:	83 c4 10             	add    $0x10,%esp
   234c6:	01 c5                	add    %eax,%ebp
   234c8:	c1 ee 03             	shr    $0x3,%esi
   234cb:	89 6f 04             	mov    %ebp,0x4(%edi)
   234ce:	01 c6                	add    %eax,%esi
   234d0:	8b 6a 10             	mov    0x10(%edx),%ebp
   234d3:	89 f0                	mov    %esi,%eax
   234d5:	0f b6 c8             	movzbl %al,%ecx
   234d8:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   234de:	83 fd 08             	cmp    $0x8,%ebp
   234e1:	74 12                	je     234f5 <__ref_sub_i2rm_v+0x85>
   234e3:	83 fd 10             	cmp    $0x10,%ebp
   234e6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   234ec:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   234f2:	0f 45 c5             	cmovne %ebp,%eax
   234f5:	83 ec 0c             	sub    $0xc,%esp
   234f8:	52                   	push   %edx
   234f9:	57                   	push   %edi
   234fa:	51                   	push   %ecx
   234fb:	50                   	push   %eax
   234fc:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   23502:	50                   	push   %eax
   23503:	e8 98 ec fe ff       	call   121a0 <print_asm_2>
   23508:	83 c4 20             	add    $0x20,%esp
   2350b:	e8 b0 fb ff ff       	call   230c0 <instr_execute_2op>
   23510:	83 c4 1c             	add    $0x1c,%esp
   23513:	89 f0                	mov    %esi,%eax
   23515:	5b                   	pop    %ebx
   23516:	5e                   	pop    %esi
   23517:	5f                   	pop    %edi
   23518:	5d                   	pop    %ebp
   23519:	c3                   	ret    
   2351a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00023520 <__ref_sub_i2rm_bv>:
   23520:	55                   	push   %ebp
   23521:	57                   	push   %edi
   23522:	56                   	push   %esi
   23523:	53                   	push   %ebx
   23524:	e8 57 0f fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23529:	81 c3 d7 ba 02 00    	add    $0x2bad7,%ebx
   2352f:	83 ec 24             	sub    $0x24,%esp
   23532:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   23536:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2353c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   23542:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   23548:	0f b6 00             	movzbl (%eax),%eax
   2354b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   23552:	89 42 10             	mov    %eax,0x10(%edx)
   23555:	8d 45 01             	lea    0x1(%ebp),%eax
   23558:	52                   	push   %edx
   23559:	89 54 24 18          	mov    %edx,0x18(%esp)
   2355d:	50                   	push   %eax
   2355e:	e8 1d ea fe ff       	call   11f80 <modrm_rm>
   23563:	8b 77 10             	mov    0x10(%edi),%esi
   23566:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   2356a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   2356e:	83 c0 01             	add    $0x1,%eax
   23571:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   23577:	83 c4 10             	add    $0x10,%esp
   2357a:	01 c5                	add    %eax,%ebp
   2357c:	c1 ee 03             	shr    $0x3,%esi
   2357f:	89 6f 04             	mov    %ebp,0x4(%edi)
   23582:	01 c6                	add    %eax,%esi
   23584:	8b 6a 10             	mov    0x10(%edx),%ebp
   23587:	89 f0                	mov    %esi,%eax
   23589:	0f b6 c8             	movzbl %al,%ecx
   2358c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   23592:	83 fd 08             	cmp    $0x8,%ebp
   23595:	74 12                	je     235a9 <__ref_sub_i2rm_bv+0x89>
   23597:	83 fd 10             	cmp    $0x10,%ebp
   2359a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   235a0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   235a6:	0f 45 c5             	cmovne %ebp,%eax
   235a9:	83 ec 0c             	sub    $0xc,%esp
   235ac:	52                   	push   %edx
   235ad:	57                   	push   %edi
   235ae:	51                   	push   %ecx
   235af:	50                   	push   %eax
   235b0:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   235b6:	50                   	push   %eax
   235b7:	e8 e4 eb fe ff       	call   121a0 <print_asm_2>
   235bc:	83 c4 20             	add    $0x20,%esp
   235bf:	e8 fc fa ff ff       	call   230c0 <instr_execute_2op>
   235c4:	83 c4 1c             	add    $0x1c,%esp
   235c7:	89 f0                	mov    %esi,%eax
   235c9:	5b                   	pop    %ebx
   235ca:	5e                   	pop    %esi
   235cb:	5f                   	pop    %edi
   235cc:	5d                   	pop    %ebp
   235cd:	c3                   	ret    
   235ce:	66 90                	xchg   %ax,%ax

000235d0 <__ref_sub_i2a_b>:
   235d0:	53                   	push   %ebx
   235d1:	e8 aa 0e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   235d6:	81 c3 2a ba 02 00    	add    $0x2ba2a,%ebx
   235dc:	83 ec 14             	sub    $0x14,%esp
   235df:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   235e3:	83 c1 01             	add    $0x1,%ecx
   235e6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   235ec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   235f2:	89 48 04             	mov    %ecx,0x4(%eax)
   235f5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   235fc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23603:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   23609:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2360d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   23613:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   2361a:	52                   	push   %edx
   2361b:	50                   	push   %eax
   2361c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   23622:	6a 02                	push   $0x2
   23624:	50                   	push   %eax
   23625:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   2362b:	50                   	push   %eax
   2362c:	e8 6f eb fe ff       	call   121a0 <print_asm_2>
   23631:	83 c4 20             	add    $0x20,%esp
   23634:	e8 87 fa ff ff       	call   230c0 <instr_execute_2op>
   23639:	83 c4 08             	add    $0x8,%esp
   2363c:	b8 02 00 00 00       	mov    $0x2,%eax
   23641:	5b                   	pop    %ebx
   23642:	c3                   	ret    
   23643:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2364a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00023650 <__ref_sub_i2a_v>:
   23650:	55                   	push   %ebp
   23651:	57                   	push   %edi
   23652:	56                   	push   %esi
   23653:	53                   	push   %ebx
   23654:	e8 27 0e fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23659:	81 c3 a7 b9 02 00    	add    $0x2b9a7,%ebx
   2365f:	83 ec 0c             	sub    $0xc,%esp
   23662:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   23668:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   2366e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   23674:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2367a:	0f b6 08             	movzbl (%eax),%ecx
   2367d:	8b 44 24 20          	mov    0x20(%esp),%eax
   23681:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   23687:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   2368b:	89 cf                	mov    %ecx,%edi
   2368d:	83 c0 01             	add    $0x1,%eax
   23690:	89 4d 10             	mov    %ecx,0x10(%ebp)
   23693:	c1 ef 03             	shr    $0x3,%edi
   23696:	89 4a 10             	mov    %ecx,0x10(%edx)
   23699:	89 42 04             	mov    %eax,0x4(%edx)
   2369c:	83 c7 01             	add    $0x1,%edi
   2369f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   236a6:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   236ad:	83 f9 08             	cmp    $0x8,%ecx
   236b0:	74 12                	je     236c4 <__ref_sub_i2a_v+0x74>
   236b2:	83 f9 10             	cmp    $0x10,%ecx
   236b5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   236bb:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   236c1:	0f 45 f0             	cmovne %eax,%esi
   236c4:	83 ec 0c             	sub    $0xc,%esp
   236c7:	8d 83 d0 6f fe ff    	lea    -0x19030(%ebx),%eax
   236cd:	55                   	push   %ebp
   236ce:	52                   	push   %edx
   236cf:	57                   	push   %edi
   236d0:	56                   	push   %esi
   236d1:	50                   	push   %eax
   236d2:	e8 c9 ea fe ff       	call   121a0 <print_asm_2>
   236d7:	83 c4 20             	add    $0x20,%esp
   236da:	e8 e1 f9 ff ff       	call   230c0 <instr_execute_2op>
   236df:	83 c4 0c             	add    $0xc,%esp
   236e2:	89 f8                	mov    %edi,%eax
   236e4:	5b                   	pop    %ebx
   236e5:	5e                   	pop    %esi
   236e6:	5f                   	pop    %edi
   236e7:	5d                   	pop    %ebp
   236e8:	c3                   	ret    
   236e9:	66 90                	xchg   %ax,%ax
   236eb:	66 90                	xchg   %ax,%ax
   236ed:	66 90                	xchg   %ax,%ax
   236ef:	90                   	nop

000236f0 <__ref_cmps_v>:
   236f0:	57                   	push   %edi
   236f1:	56                   	push   %esi
   236f2:	53                   	push   %ebx
   236f3:	e8 88 0d fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   236f8:	81 c3 08 b9 02 00    	add    $0x2b908,%ebx
   236fe:	83 ec 50             	sub    $0x50,%esp
   23701:	e8 da 70 00 00       	call   2a7e0 <set_ref>
   23706:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   2370c:	83 ec 0c             	sub    $0xc,%esp
   2370f:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   23715:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   2371c:	00 
   2371d:	0f b6 07             	movzbl (%edi),%eax
   23720:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   23727:	00 
   23728:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   2372d:	89 44 24 48          	mov    %eax,0x48(%esp)
   23731:	89 44 24 24          	mov    %eax,0x24(%esp)
   23735:	8b 46 18             	mov    0x18(%esi),%eax
   23738:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   2373d:	89 44 24 18          	mov    %eax,0x18(%esp)
   23741:	8b 46 1c             	mov    0x1c(%esi),%eax
   23744:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   23748:	8d 44 24 14          	lea    0x14(%esp),%eax
   2374c:	50                   	push   %eax
   2374d:	e8 8e ec fe ff       	call   123e0 <operand_read>
   23752:	58                   	pop    %eax
   23753:	8d 44 24 38          	lea    0x38(%esp),%eax
   23757:	50                   	push   %eax
   23758:	e8 83 ec fe ff       	call   123e0 <operand_read>
   2375d:	0f b6 07             	movzbl (%edi),%eax
   23760:	83 c4 0c             	add    $0xc,%esp
   23763:	50                   	push   %eax
   23764:	ff 74 24 1c          	pushl  0x1c(%esp)
   23768:	ff 74 24 44          	pushl  0x44(%esp)
   2376c:	e8 8f 67 00 00       	call   29f00 <__ref_alu_sub>
   23771:	83 c4 10             	add    $0x10,%esp
   23774:	f6 46 25 04          	testb  $0x4,0x25(%esi)
   23778:	75 36                	jne    237b0 <__ref_cmps_v+0xc0>
   2377a:	0f b6 07             	movzbl (%edi),%eax
   2377d:	c0 e8 03             	shr    $0x3,%al
   23780:	0f b6 c0             	movzbl %al,%eax
   23783:	83 ec 04             	sub    $0x4,%esp
   23786:	01 46 18             	add    %eax,0x18(%esi)
   23789:	01 46 1c             	add    %eax,0x1c(%esi)
   2378c:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   23792:	6a 01                	push   $0x1
   23794:	50                   	push   %eax
   23795:	8d 83 a1 67 fe ff    	lea    -0x1985f(%ebx),%eax
   2379b:	50                   	push   %eax
   2379c:	e8 1f e8 fe ff       	call   11fc0 <print_asm_0>
   237a1:	83 c4 60             	add    $0x60,%esp
   237a4:	b8 01 00 00 00       	mov    $0x1,%eax
   237a9:	5b                   	pop    %ebx
   237aa:	5e                   	pop    %esi
   237ab:	5f                   	pop    %edi
   237ac:	c3                   	ret    
   237ad:	8d 76 00             	lea    0x0(%esi),%esi
   237b0:	0f b6 07             	movzbl (%edi),%eax
   237b3:	c1 f8 03             	sar    $0x3,%eax
   237b6:	f7 d8                	neg    %eax
   237b8:	eb c9                	jmp    23783 <__ref_cmps_v+0x93>
   237ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000237c0 <__ref_cmps_b>:
   237c0:	56                   	push   %esi
   237c1:	53                   	push   %ebx
   237c2:	e8 b9 0c fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   237c7:	81 c3 39 b8 02 00    	add    $0x2b839,%ebx
   237cd:	83 ec 54             	sub    $0x54,%esp
   237d0:	e8 0b 70 00 00       	call   2a7e0 <set_ref>
   237d5:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   237db:	83 ec 0c             	sub    $0xc,%esp
   237de:	c7 44 24 48 08 00 00 	movl   $0x8,0x48(%esp)
   237e5:	00 
   237e6:	c7 44 24 24 08 00 00 	movl   $0x8,0x24(%esp)
   237ed:	00 
   237ee:	8b 46 18             	mov    0x18(%esi),%eax
   237f1:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   237f8:	00 
   237f9:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
   23800:	00 
   23801:	89 44 24 18          	mov    %eax,0x18(%esp)
   23805:	8b 46 1c             	mov    0x1c(%esi),%eax
   23808:	c6 44 24 40 03       	movb   $0x3,0x40(%esp)
   2380d:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
   23812:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   23816:	8d 44 24 14          	lea    0x14(%esp),%eax
   2381a:	50                   	push   %eax
   2381b:	e8 c0 eb fe ff       	call   123e0 <operand_read>
   23820:	58                   	pop    %eax
   23821:	8d 44 24 38          	lea    0x38(%esp),%eax
   23825:	50                   	push   %eax
   23826:	e8 b5 eb fe ff       	call   123e0 <operand_read>
   2382b:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   23831:	83 c4 0c             	add    $0xc,%esp
   23834:	0f b6 00             	movzbl (%eax),%eax
   23837:	50                   	push   %eax
   23838:	ff 74 24 1c          	pushl  0x1c(%esp)
   2383c:	ff 74 24 44          	pushl  0x44(%esp)
   23840:	e8 bb 66 00 00       	call   29f00 <__ref_alu_sub>
   23845:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   23849:	83 c4 0c             	add    $0xc,%esp
   2384c:	6a 01                	push   $0x1
   2384e:	83 e0 04             	and    $0x4,%eax
   23851:	3c 01                	cmp    $0x1,%al
   23853:	19 c0                	sbb    %eax,%eax
   23855:	83 e0 02             	and    $0x2,%eax
   23858:	83 e8 01             	sub    $0x1,%eax
   2385b:	01 46 18             	add    %eax,0x18(%esi)
   2385e:	01 46 1c             	add    %eax,0x1c(%esi)
   23861:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   23867:	50                   	push   %eax
   23868:	8d 83 a1 67 fe ff    	lea    -0x1985f(%ebx),%eax
   2386e:	50                   	push   %eax
   2386f:	e8 4c e7 fe ff       	call   11fc0 <print_asm_0>
   23874:	83 c4 64             	add    $0x64,%esp
   23877:	b8 01 00 00 00       	mov    $0x1,%eax
   2387c:	5b                   	pop    %ebx
   2387d:	5e                   	pop    %esi
   2387e:	c3                   	ret    
   2387f:	90                   	nop

00023880 <__ref_ret_near>:
   23880:	53                   	push   %ebx
   23881:	e8 fa 0b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23886:	81 c3 7a b7 02 00    	add    $0x2b77a,%ebx
   2388c:	83 ec 08             	sub    $0x8,%esp
   2388f:	e8 4c 6f 00 00       	call   2a7e0 <set_ref>
   23894:	83 ec 04             	sub    $0x4,%esp
   23897:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   2389d:	6a 01                	push   $0x1
   2389f:	50                   	push   %eax
   238a0:	8d 83 06 6b fe ff    	lea    -0x194fa(%ebx),%eax
   238a6:	50                   	push   %eax
   238a7:	e8 14 e7 fe ff       	call   11fc0 <print_asm_0>
   238ac:	e8 5f 12 00 00       	call   24b10 <__ref_do_pop>
   238b1:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   238b7:	89 42 20             	mov    %eax,0x20(%edx)
   238ba:	83 c4 18             	add    $0x18,%esp
   238bd:	31 c0                	xor    %eax,%eax
   238bf:	5b                   	pop    %ebx
   238c0:	c3                   	ret    
   238c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   238c8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   238cf:	90                   	nop

000238d0 <__ref_ret_near_imm16>:
   238d0:	56                   	push   %esi
   238d1:	53                   	push   %ebx
   238d2:	e8 a9 0b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   238d7:	81 c3 29 b7 02 00    	add    $0x2b729,%ebx
   238dd:	83 ec 34             	sub    $0x34,%esp
   238e0:	8d 74 24 0c          	lea    0xc(%esp),%esi
   238e4:	e8 f7 6e 00 00       	call   2a7e0 <set_ref>
   238e9:	8b 44 24 40          	mov    0x40(%esp),%eax
   238ed:	c7 44 24 1c 10 00 00 	movl   $0x10,0x1c(%esp)
   238f4:	00 
   238f5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   238fc:	00 
   238fd:	83 c0 01             	add    $0x1,%eax
   23900:	89 44 24 10          	mov    %eax,0x10(%esp)
   23904:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   2390a:	56                   	push   %esi
   2390b:	6a 05                	push   $0x5
   2390d:	50                   	push   %eax
   2390e:	8d 83 06 6b fe ff    	lea    -0x194fa(%ebx),%eax
   23914:	50                   	push   %eax
   23915:	e8 86 e7 fe ff       	call   120a0 <print_asm_1>
   2391a:	89 34 24             	mov    %esi,(%esp)
   2391d:	e8 be ea fe ff       	call   123e0 <operand_read>
   23922:	e8 e9 11 00 00       	call   24b10 <__ref_do_pop>
   23927:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   2392d:	89 42 20             	mov    %eax,0x20(%edx)
   23930:	8b 44 24 28          	mov    0x28(%esp),%eax
   23934:	01 42 10             	add    %eax,0x10(%edx)
   23937:	83 c4 44             	add    $0x44,%esp
   2393a:	31 c0                	xor    %eax,%eax
   2393c:	5b                   	pop    %ebx
   2393d:	5e                   	pop    %esi
   2393e:	c3                   	ret    
   2393f:	90                   	nop

00023940 <__ref_setne_b>:
   23940:	57                   	push   %edi
   23941:	56                   	push   %esi
   23942:	53                   	push   %ebx
   23943:	e8 38 0b fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23948:	81 c3 b8 b6 02 00    	add    $0x2b6b8,%ebx
   2394e:	83 ec 08             	sub    $0x8,%esp
   23951:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23957:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2395d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23964:	56                   	push   %esi
   23965:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23969:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23970:	83 c0 01             	add    $0x1,%eax
   23973:	50                   	push   %eax
   23974:	e8 07 e6 fe ff       	call   11f80 <modrm_rm>
   23979:	56                   	push   %esi
   2397a:	8d 78 01             	lea    0x1(%eax),%edi
   2397d:	89 f8                	mov    %edi,%eax
   2397f:	0f b6 c0             	movzbl %al,%eax
   23982:	50                   	push   %eax
   23983:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   23989:	50                   	push   %eax
   2398a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23990:	50                   	push   %eax
   23991:	e8 0a e7 fe ff       	call   120a0 <print_asm_1>
   23996:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   2399c:	83 c4 20             	add    $0x20,%esp
   2399f:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   239a3:	75 23                	jne    239c8 <__ref_setne_b+0x88>
   239a5:	e8 36 6e 00 00       	call   2a7e0 <set_ref>
   239aa:	83 ec 0c             	sub    $0xc,%esp
   239ad:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   239b4:	56                   	push   %esi
   239b5:	e8 d6 eb fe ff       	call   12590 <operand_write>
   239ba:	83 c4 10             	add    $0x10,%esp
   239bd:	89 f8                	mov    %edi,%eax
   239bf:	5b                   	pop    %ebx
   239c0:	5e                   	pop    %esi
   239c1:	5f                   	pop    %edi
   239c2:	c3                   	ret    
   239c3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   239c7:	90                   	nop
   239c8:	e8 13 6e 00 00       	call   2a7e0 <set_ref>
   239cd:	83 ec 0c             	sub    $0xc,%esp
   239d0:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   239d7:	56                   	push   %esi
   239d8:	e8 b3 eb fe ff       	call   12590 <operand_write>
   239dd:	83 c4 10             	add    $0x10,%esp
   239e0:	89 f8                	mov    %edi,%eax
   239e2:	5b                   	pop    %ebx
   239e3:	5e                   	pop    %esi
   239e4:	5f                   	pop    %edi
   239e5:	c3                   	ret    
   239e6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   239ed:	8d 76 00             	lea    0x0(%esi),%esi

000239f0 <__ref_seta_b>:
   239f0:	57                   	push   %edi
   239f1:	56                   	push   %esi
   239f2:	53                   	push   %ebx
   239f3:	e8 88 0a fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   239f8:	81 c3 08 b6 02 00    	add    $0x2b608,%ebx
   239fe:	83 ec 08             	sub    $0x8,%esp
   23a01:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23a07:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23a0d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23a14:	56                   	push   %esi
   23a15:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23a19:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23a20:	83 c0 01             	add    $0x1,%eax
   23a23:	50                   	push   %eax
   23a24:	e8 57 e5 fe ff       	call   11f80 <modrm_rm>
   23a29:	56                   	push   %esi
   23a2a:	8d 78 01             	lea    0x1(%eax),%edi
   23a2d:	89 f8                	mov    %edi,%eax
   23a2f:	0f b6 c0             	movzbl %al,%eax
   23a32:	50                   	push   %eax
   23a33:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   23a39:	50                   	push   %eax
   23a3a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23a40:	50                   	push   %eax
   23a41:	e8 5a e6 fe ff       	call   120a0 <print_asm_1>
   23a46:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23a4c:	83 c4 20             	add    $0x20,%esp
   23a4f:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   23a53:	75 23                	jne    23a78 <__ref_seta_b+0x88>
   23a55:	e8 86 6d 00 00       	call   2a7e0 <set_ref>
   23a5a:	83 ec 0c             	sub    $0xc,%esp
   23a5d:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23a64:	56                   	push   %esi
   23a65:	e8 26 eb fe ff       	call   12590 <operand_write>
   23a6a:	83 c4 10             	add    $0x10,%esp
   23a6d:	89 f8                	mov    %edi,%eax
   23a6f:	5b                   	pop    %ebx
   23a70:	5e                   	pop    %esi
   23a71:	5f                   	pop    %edi
   23a72:	c3                   	ret    
   23a73:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   23a77:	90                   	nop
   23a78:	e8 63 6d 00 00       	call   2a7e0 <set_ref>
   23a7d:	83 ec 0c             	sub    $0xc,%esp
   23a80:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23a87:	56                   	push   %esi
   23a88:	e8 03 eb fe ff       	call   12590 <operand_write>
   23a8d:	83 c4 10             	add    $0x10,%esp
   23a90:	89 f8                	mov    %edi,%eax
   23a92:	5b                   	pop    %ebx
   23a93:	5e                   	pop    %esi
   23a94:	5f                   	pop    %edi
   23a95:	c3                   	ret    
   23a96:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23a9d:	8d 76 00             	lea    0x0(%esi),%esi

00023aa0 <__ref_setae_b>:
   23aa0:	57                   	push   %edi
   23aa1:	56                   	push   %esi
   23aa2:	53                   	push   %ebx
   23aa3:	e8 d8 09 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23aa8:	81 c3 58 b5 02 00    	add    $0x2b558,%ebx
   23aae:	83 ec 08             	sub    $0x8,%esp
   23ab1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23ab7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23abd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23ac4:	56                   	push   %esi
   23ac5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23ac9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23ad0:	83 c0 01             	add    $0x1,%eax
   23ad3:	50                   	push   %eax
   23ad4:	e8 a7 e4 fe ff       	call   11f80 <modrm_rm>
   23ad9:	56                   	push   %esi
   23ada:	8d 78 01             	lea    0x1(%eax),%edi
   23add:	89 f8                	mov    %edi,%eax
   23adf:	0f b6 c0             	movzbl %al,%eax
   23ae2:	50                   	push   %eax
   23ae3:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   23ae9:	50                   	push   %eax
   23aea:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23af0:	50                   	push   %eax
   23af1:	e8 aa e5 fe ff       	call   120a0 <print_asm_1>
   23af6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23afc:	83 c4 20             	add    $0x20,%esp
   23aff:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   23b03:	75 23                	jne    23b28 <__ref_setae_b+0x88>
   23b05:	e8 d6 6c 00 00       	call   2a7e0 <set_ref>
   23b0a:	83 ec 0c             	sub    $0xc,%esp
   23b0d:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23b14:	56                   	push   %esi
   23b15:	e8 76 ea fe ff       	call   12590 <operand_write>
   23b1a:	83 c4 10             	add    $0x10,%esp
   23b1d:	89 f8                	mov    %edi,%eax
   23b1f:	5b                   	pop    %ebx
   23b20:	5e                   	pop    %esi
   23b21:	5f                   	pop    %edi
   23b22:	c3                   	ret    
   23b23:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   23b27:	90                   	nop
   23b28:	e8 b3 6c 00 00       	call   2a7e0 <set_ref>
   23b2d:	83 ec 0c             	sub    $0xc,%esp
   23b30:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23b37:	56                   	push   %esi
   23b38:	e8 53 ea fe ff       	call   12590 <operand_write>
   23b3d:	83 c4 10             	add    $0x10,%esp
   23b40:	89 f8                	mov    %edi,%eax
   23b42:	5b                   	pop    %ebx
   23b43:	5e                   	pop    %esi
   23b44:	5f                   	pop    %edi
   23b45:	c3                   	ret    
   23b46:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23b4d:	8d 76 00             	lea    0x0(%esi),%esi

00023b50 <__ref_setbe_b>:
   23b50:	57                   	push   %edi
   23b51:	56                   	push   %esi
   23b52:	53                   	push   %ebx
   23b53:	e8 28 09 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23b58:	81 c3 a8 b4 02 00    	add    $0x2b4a8,%ebx
   23b5e:	83 ec 08             	sub    $0x8,%esp
   23b61:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23b67:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23b6d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23b74:	56                   	push   %esi
   23b75:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23b79:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23b80:	83 c0 01             	add    $0x1,%eax
   23b83:	50                   	push   %eax
   23b84:	e8 f7 e3 fe ff       	call   11f80 <modrm_rm>
   23b89:	56                   	push   %esi
   23b8a:	8d 78 01             	lea    0x1(%eax),%edi
   23b8d:	89 f8                	mov    %edi,%eax
   23b8f:	0f b6 c0             	movzbl %al,%eax
   23b92:	50                   	push   %eax
   23b93:	8d 83 f4 6a fe ff    	lea    -0x1950c(%ebx),%eax
   23b99:	50                   	push   %eax
   23b9a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23ba0:	50                   	push   %eax
   23ba1:	e8 fa e4 fe ff       	call   120a0 <print_asm_1>
   23ba6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23bac:	83 c4 20             	add    $0x20,%esp
   23baf:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   23bb3:	74 23                	je     23bd8 <__ref_setbe_b+0x88>
   23bb5:	e8 26 6c 00 00       	call   2a7e0 <set_ref>
   23bba:	83 ec 0c             	sub    $0xc,%esp
   23bbd:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23bc4:	56                   	push   %esi
   23bc5:	e8 c6 e9 fe ff       	call   12590 <operand_write>
   23bca:	83 c4 10             	add    $0x10,%esp
   23bcd:	89 f8                	mov    %edi,%eax
   23bcf:	5b                   	pop    %ebx
   23bd0:	5e                   	pop    %esi
   23bd1:	5f                   	pop    %edi
   23bd2:	c3                   	ret    
   23bd3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   23bd7:	90                   	nop
   23bd8:	e8 03 6c 00 00       	call   2a7e0 <set_ref>
   23bdd:	83 ec 0c             	sub    $0xc,%esp
   23be0:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23be7:	56                   	push   %esi
   23be8:	e8 a3 e9 fe ff       	call   12590 <operand_write>
   23bed:	83 c4 10             	add    $0x10,%esp
   23bf0:	89 f8                	mov    %edi,%eax
   23bf2:	5b                   	pop    %ebx
   23bf3:	5e                   	pop    %esi
   23bf4:	5f                   	pop    %edi
   23bf5:	c3                   	ret    
   23bf6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23bfd:	8d 76 00             	lea    0x0(%esi),%esi

00023c00 <__ref_setc_b>:
   23c00:	57                   	push   %edi
   23c01:	56                   	push   %esi
   23c02:	53                   	push   %ebx
   23c03:	e8 78 08 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23c08:	81 c3 f8 b3 02 00    	add    $0x2b3f8,%ebx
   23c0e:	83 ec 08             	sub    $0x8,%esp
   23c11:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23c17:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23c1d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23c24:	56                   	push   %esi
   23c25:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23c29:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23c30:	83 c0 01             	add    $0x1,%eax
   23c33:	50                   	push   %eax
   23c34:	e8 47 e3 fe ff       	call   11f80 <modrm_rm>
   23c39:	56                   	push   %esi
   23c3a:	8d 78 01             	lea    0x1(%eax),%edi
   23c3d:	89 f8                	mov    %edi,%eax
   23c3f:	0f b6 c0             	movzbl %al,%eax
   23c42:	50                   	push   %eax
   23c43:	8d 83 ff 54 fe ff    	lea    -0x1ab01(%ebx),%eax
   23c49:	50                   	push   %eax
   23c4a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23c50:	50                   	push   %eax
   23c51:	e8 4a e4 fe ff       	call   120a0 <print_asm_1>
   23c56:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23c5c:	83 c4 20             	add    $0x20,%esp
   23c5f:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   23c63:	74 23                	je     23c88 <__ref_setc_b+0x88>
   23c65:	e8 76 6b 00 00       	call   2a7e0 <set_ref>
   23c6a:	83 ec 0c             	sub    $0xc,%esp
   23c6d:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23c74:	56                   	push   %esi
   23c75:	e8 16 e9 fe ff       	call   12590 <operand_write>
   23c7a:	83 c4 10             	add    $0x10,%esp
   23c7d:	89 f8                	mov    %edi,%eax
   23c7f:	5b                   	pop    %ebx
   23c80:	5e                   	pop    %esi
   23c81:	5f                   	pop    %edi
   23c82:	c3                   	ret    
   23c83:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   23c87:	90                   	nop
   23c88:	e8 53 6b 00 00       	call   2a7e0 <set_ref>
   23c8d:	83 ec 0c             	sub    $0xc,%esp
   23c90:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23c97:	56                   	push   %esi
   23c98:	e8 f3 e8 fe ff       	call   12590 <operand_write>
   23c9d:	83 c4 10             	add    $0x10,%esp
   23ca0:	89 f8                	mov    %edi,%eax
   23ca2:	5b                   	pop    %ebx
   23ca3:	5e                   	pop    %esi
   23ca4:	5f                   	pop    %edi
   23ca5:	c3                   	ret    
   23ca6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23cad:	8d 76 00             	lea    0x0(%esi),%esi

00023cb0 <__ref_sete_b>:
   23cb0:	57                   	push   %edi
   23cb1:	56                   	push   %esi
   23cb2:	53                   	push   %ebx
   23cb3:	e8 c8 07 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23cb8:	81 c3 48 b3 02 00    	add    $0x2b348,%ebx
   23cbe:	83 ec 08             	sub    $0x8,%esp
   23cc1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23cc7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23ccd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23cd4:	56                   	push   %esi
   23cd5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23cd9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23ce0:	83 c0 01             	add    $0x1,%eax
   23ce3:	50                   	push   %eax
   23ce4:	e8 97 e2 fe ff       	call   11f80 <modrm_rm>
   23ce9:	56                   	push   %esi
   23cea:	8d 78 01             	lea    0x1(%eax),%edi
   23ced:	89 f8                	mov    %edi,%eax
   23cef:	0f b6 c0             	movzbl %al,%eax
   23cf2:	50                   	push   %eax
   23cf3:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   23cf9:	50                   	push   %eax
   23cfa:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23d00:	50                   	push   %eax
   23d01:	e8 9a e3 fe ff       	call   120a0 <print_asm_1>
   23d06:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23d0c:	83 c4 20             	add    $0x20,%esp
   23d0f:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   23d13:	74 23                	je     23d38 <__ref_sete_b+0x88>
   23d15:	e8 c6 6a 00 00       	call   2a7e0 <set_ref>
   23d1a:	83 ec 0c             	sub    $0xc,%esp
   23d1d:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23d24:	56                   	push   %esi
   23d25:	e8 66 e8 fe ff       	call   12590 <operand_write>
   23d2a:	83 c4 10             	add    $0x10,%esp
   23d2d:	89 f8                	mov    %edi,%eax
   23d2f:	5b                   	pop    %ebx
   23d30:	5e                   	pop    %esi
   23d31:	5f                   	pop    %edi
   23d32:	c3                   	ret    
   23d33:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   23d37:	90                   	nop
   23d38:	e8 a3 6a 00 00       	call   2a7e0 <set_ref>
   23d3d:	83 ec 0c             	sub    $0xc,%esp
   23d40:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23d47:	56                   	push   %esi
   23d48:	e8 43 e8 fe ff       	call   12590 <operand_write>
   23d4d:	83 c4 10             	add    $0x10,%esp
   23d50:	89 f8                	mov    %edi,%eax
   23d52:	5b                   	pop    %ebx
   23d53:	5e                   	pop    %esi
   23d54:	5f                   	pop    %edi
   23d55:	c3                   	ret    
   23d56:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23d5d:	8d 76 00             	lea    0x0(%esi),%esi

00023d60 <__ref_setg_b>:
   23d60:	57                   	push   %edi
   23d61:	56                   	push   %esi
   23d62:	53                   	push   %ebx
   23d63:	e8 18 07 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23d68:	81 c3 98 b2 02 00    	add    $0x2b298,%ebx
   23d6e:	83 ec 08             	sub    $0x8,%esp
   23d71:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23d77:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23d7d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23d84:	56                   	push   %esi
   23d85:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23d89:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23d90:	83 c0 01             	add    $0x1,%eax
   23d93:	50                   	push   %eax
   23d94:	e8 e7 e1 fe ff       	call   11f80 <modrm_rm>
   23d99:	56                   	push   %esi
   23d9a:	8d 78 01             	lea    0x1(%eax),%edi
   23d9d:	89 f8                	mov    %edi,%eax
   23d9f:	0f b6 c0             	movzbl %al,%eax
   23da2:	50                   	push   %eax
   23da3:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   23da9:	50                   	push   %eax
   23daa:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23db0:	50                   	push   %eax
   23db1:	e8 ea e2 fe ff       	call   120a0 <print_asm_1>
   23db6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23dbc:	83 c4 20             	add    $0x20,%esp
   23dbf:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   23dc3:	f6 c2 40             	test   $0x40,%dl
   23dc6:	75 11                	jne    23dd9 <__ref_setg_b+0x79>
   23dc8:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   23dcc:	c0 ea 07             	shr    $0x7,%dl
   23dcf:	c0 e8 03             	shr    $0x3,%al
   23dd2:	83 e0 01             	and    $0x1,%eax
   23dd5:	38 c2                	cmp    %al,%dl
   23dd7:	74 27                	je     23e00 <__ref_setg_b+0xa0>
   23dd9:	e8 02 6a 00 00       	call   2a7e0 <set_ref>
   23dde:	83 ec 0c             	sub    $0xc,%esp
   23de1:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23de8:	56                   	push   %esi
   23de9:	e8 a2 e7 fe ff       	call   12590 <operand_write>
   23dee:	83 c4 10             	add    $0x10,%esp
   23df1:	89 f8                	mov    %edi,%eax
   23df3:	5b                   	pop    %ebx
   23df4:	5e                   	pop    %esi
   23df5:	5f                   	pop    %edi
   23df6:	c3                   	ret    
   23df7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23dfe:	66 90                	xchg   %ax,%ax
   23e00:	e8 db 69 00 00       	call   2a7e0 <set_ref>
   23e05:	83 ec 0c             	sub    $0xc,%esp
   23e08:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23e0f:	56                   	push   %esi
   23e10:	e8 7b e7 fe ff       	call   12590 <operand_write>
   23e15:	83 c4 10             	add    $0x10,%esp
   23e18:	89 f8                	mov    %edi,%eax
   23e1a:	5b                   	pop    %ebx
   23e1b:	5e                   	pop    %esi
   23e1c:	5f                   	pop    %edi
   23e1d:	c3                   	ret    
   23e1e:	66 90                	xchg   %ax,%ax

00023e20 <__ref_setge_b>:
   23e20:	57                   	push   %edi
   23e21:	56                   	push   %esi
   23e22:	53                   	push   %ebx
   23e23:	e8 58 06 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23e28:	81 c3 d8 b1 02 00    	add    $0x2b1d8,%ebx
   23e2e:	83 ec 08             	sub    $0x8,%esp
   23e31:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23e37:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23e3d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23e44:	56                   	push   %esi
   23e45:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23e49:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23e50:	83 c0 01             	add    $0x1,%eax
   23e53:	50                   	push   %eax
   23e54:	e8 27 e1 fe ff       	call   11f80 <modrm_rm>
   23e59:	56                   	push   %esi
   23e5a:	8d 78 01             	lea    0x1(%eax),%edi
   23e5d:	89 f8                	mov    %edi,%eax
   23e5f:	0f b6 c0             	movzbl %al,%eax
   23e62:	50                   	push   %eax
   23e63:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   23e69:	50                   	push   %eax
   23e6a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23e70:	50                   	push   %eax
   23e71:	e8 2a e2 fe ff       	call   120a0 <print_asm_1>
   23e76:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23e7c:	83 c4 20             	add    $0x20,%esp
   23e7f:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   23e83:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   23e87:	c0 e8 03             	shr    $0x3,%al
   23e8a:	c0 ea 07             	shr    $0x7,%dl
   23e8d:	83 e0 01             	and    $0x1,%eax
   23e90:	38 c2                	cmp    %al,%dl
   23e92:	74 24                	je     23eb8 <__ref_setge_b+0x98>
   23e94:	e8 47 69 00 00       	call   2a7e0 <set_ref>
   23e99:	83 ec 0c             	sub    $0xc,%esp
   23e9c:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23ea3:	56                   	push   %esi
   23ea4:	e8 e7 e6 fe ff       	call   12590 <operand_write>
   23ea9:	83 c4 10             	add    $0x10,%esp
   23eac:	89 f8                	mov    %edi,%eax
   23eae:	5b                   	pop    %ebx
   23eaf:	5e                   	pop    %esi
   23eb0:	5f                   	pop    %edi
   23eb1:	c3                   	ret    
   23eb2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   23eb8:	e8 23 69 00 00       	call   2a7e0 <set_ref>
   23ebd:	83 ec 0c             	sub    $0xc,%esp
   23ec0:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23ec7:	56                   	push   %esi
   23ec8:	e8 c3 e6 fe ff       	call   12590 <operand_write>
   23ecd:	83 c4 10             	add    $0x10,%esp
   23ed0:	89 f8                	mov    %edi,%eax
   23ed2:	5b                   	pop    %ebx
   23ed3:	5e                   	pop    %esi
   23ed4:	5f                   	pop    %edi
   23ed5:	c3                   	ret    
   23ed6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23edd:	8d 76 00             	lea    0x0(%esi),%esi

00023ee0 <__ref_setl_b>:
   23ee0:	57                   	push   %edi
   23ee1:	56                   	push   %esi
   23ee2:	53                   	push   %ebx
   23ee3:	e8 98 05 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23ee8:	81 c3 18 b1 02 00    	add    $0x2b118,%ebx
   23eee:	83 ec 08             	sub    $0x8,%esp
   23ef1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23ef7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23efd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23f04:	56                   	push   %esi
   23f05:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23f09:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23f10:	83 c0 01             	add    $0x1,%eax
   23f13:	50                   	push   %eax
   23f14:	e8 67 e0 fe ff       	call   11f80 <modrm_rm>
   23f19:	56                   	push   %esi
   23f1a:	8d 78 01             	lea    0x1(%eax),%edi
   23f1d:	89 f8                	mov    %edi,%eax
   23f1f:	0f b6 c0             	movzbl %al,%eax
   23f22:	50                   	push   %eax
   23f23:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   23f29:	50                   	push   %eax
   23f2a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23f30:	50                   	push   %eax
   23f31:	e8 6a e1 fe ff       	call   120a0 <print_asm_1>
   23f36:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23f3c:	83 c4 20             	add    $0x20,%esp
   23f3f:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   23f43:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   23f47:	c0 e8 03             	shr    $0x3,%al
   23f4a:	c0 ea 07             	shr    $0x7,%dl
   23f4d:	83 e0 01             	and    $0x1,%eax
   23f50:	38 c2                	cmp    %al,%dl
   23f52:	74 24                	je     23f78 <__ref_setl_b+0x98>
   23f54:	e8 87 68 00 00       	call   2a7e0 <set_ref>
   23f59:	83 ec 0c             	sub    $0xc,%esp
   23f5c:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   23f63:	56                   	push   %esi
   23f64:	e8 27 e6 fe ff       	call   12590 <operand_write>
   23f69:	83 c4 10             	add    $0x10,%esp
   23f6c:	89 f8                	mov    %edi,%eax
   23f6e:	5b                   	pop    %ebx
   23f6f:	5e                   	pop    %esi
   23f70:	5f                   	pop    %edi
   23f71:	c3                   	ret    
   23f72:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   23f78:	e8 63 68 00 00       	call   2a7e0 <set_ref>
   23f7d:	83 ec 0c             	sub    $0xc,%esp
   23f80:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   23f87:	56                   	push   %esi
   23f88:	e8 03 e6 fe ff       	call   12590 <operand_write>
   23f8d:	83 c4 10             	add    $0x10,%esp
   23f90:	89 f8                	mov    %edi,%eax
   23f92:	5b                   	pop    %ebx
   23f93:	5e                   	pop    %esi
   23f94:	5f                   	pop    %edi
   23f95:	c3                   	ret    
   23f96:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23f9d:	8d 76 00             	lea    0x0(%esi),%esi

00023fa0 <__ref_setle_b>:
   23fa0:	57                   	push   %edi
   23fa1:	56                   	push   %esi
   23fa2:	53                   	push   %ebx
   23fa3:	e8 d8 04 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   23fa8:	81 c3 58 b0 02 00    	add    $0x2b058,%ebx
   23fae:	83 ec 08             	sub    $0x8,%esp
   23fb1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   23fb7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   23fbd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   23fc4:	56                   	push   %esi
   23fc5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   23fc9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   23fd0:	83 c0 01             	add    $0x1,%eax
   23fd3:	50                   	push   %eax
   23fd4:	e8 a7 df fe ff       	call   11f80 <modrm_rm>
   23fd9:	56                   	push   %esi
   23fda:	8d 78 01             	lea    0x1(%eax),%edi
   23fdd:	89 f8                	mov    %edi,%eax
   23fdf:	0f b6 c0             	movzbl %al,%eax
   23fe2:	50                   	push   %eax
   23fe3:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   23fe9:	50                   	push   %eax
   23fea:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   23ff0:	50                   	push   %eax
   23ff1:	e8 aa e0 fe ff       	call   120a0 <print_asm_1>
   23ff6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   23ffc:	83 c4 20             	add    $0x20,%esp
   23fff:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   24003:	f6 c2 40             	test   $0x40,%dl
   24006:	75 11                	jne    24019 <__ref_setle_b+0x79>
   24008:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   2400c:	c0 ea 07             	shr    $0x7,%dl
   2400f:	c0 e8 03             	shr    $0x3,%al
   24012:	83 e0 01             	and    $0x1,%eax
   24015:	38 c2                	cmp    %al,%dl
   24017:	74 27                	je     24040 <__ref_setle_b+0xa0>
   24019:	e8 c2 67 00 00       	call   2a7e0 <set_ref>
   2401e:	83 ec 0c             	sub    $0xc,%esp
   24021:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   24028:	56                   	push   %esi
   24029:	e8 62 e5 fe ff       	call   12590 <operand_write>
   2402e:	83 c4 10             	add    $0x10,%esp
   24031:	89 f8                	mov    %edi,%eax
   24033:	5b                   	pop    %ebx
   24034:	5e                   	pop    %esi
   24035:	5f                   	pop    %edi
   24036:	c3                   	ret    
   24037:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2403e:	66 90                	xchg   %ax,%ax
   24040:	e8 9b 67 00 00       	call   2a7e0 <set_ref>
   24045:	83 ec 0c             	sub    $0xc,%esp
   24048:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   2404f:	56                   	push   %esi
   24050:	e8 3b e5 fe ff       	call   12590 <operand_write>
   24055:	83 c4 10             	add    $0x10,%esp
   24058:	89 f8                	mov    %edi,%eax
   2405a:	5b                   	pop    %ebx
   2405b:	5e                   	pop    %esi
   2405c:	5f                   	pop    %edi
   2405d:	c3                   	ret    
   2405e:	66 90                	xchg   %ax,%ax

00024060 <__ref_setno_b>:
   24060:	57                   	push   %edi
   24061:	56                   	push   %esi
   24062:	53                   	push   %ebx
   24063:	e8 18 04 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   24068:	81 c3 98 af 02 00    	add    $0x2af98,%ebx
   2406e:	83 ec 08             	sub    $0x8,%esp
   24071:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   24077:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2407d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   24084:	56                   	push   %esi
   24085:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   24089:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   24090:	83 c0 01             	add    $0x1,%eax
   24093:	50                   	push   %eax
   24094:	e8 e7 de fe ff       	call   11f80 <modrm_rm>
   24099:	56                   	push   %esi
   2409a:	8d 78 01             	lea    0x1(%eax),%edi
   2409d:	89 f8                	mov    %edi,%eax
   2409f:	0f b6 c0             	movzbl %al,%eax
   240a2:	50                   	push   %eax
   240a3:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   240a9:	50                   	push   %eax
   240aa:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   240b0:	50                   	push   %eax
   240b1:	e8 ea df fe ff       	call   120a0 <print_asm_1>
   240b6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   240bc:	83 c4 20             	add    $0x20,%esp
   240bf:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   240c3:	75 23                	jne    240e8 <__ref_setno_b+0x88>
   240c5:	e8 16 67 00 00       	call   2a7e0 <set_ref>
   240ca:	83 ec 0c             	sub    $0xc,%esp
   240cd:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   240d4:	56                   	push   %esi
   240d5:	e8 b6 e4 fe ff       	call   12590 <operand_write>
   240da:	83 c4 10             	add    $0x10,%esp
   240dd:	89 f8                	mov    %edi,%eax
   240df:	5b                   	pop    %ebx
   240e0:	5e                   	pop    %esi
   240e1:	5f                   	pop    %edi
   240e2:	c3                   	ret    
   240e3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   240e7:	90                   	nop
   240e8:	e8 f3 66 00 00       	call   2a7e0 <set_ref>
   240ed:	83 ec 0c             	sub    $0xc,%esp
   240f0:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   240f7:	56                   	push   %esi
   240f8:	e8 93 e4 fe ff       	call   12590 <operand_write>
   240fd:	83 c4 10             	add    $0x10,%esp
   24100:	89 f8                	mov    %edi,%eax
   24102:	5b                   	pop    %ebx
   24103:	5e                   	pop    %esi
   24104:	5f                   	pop    %edi
   24105:	c3                   	ret    
   24106:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2410d:	8d 76 00             	lea    0x0(%esi),%esi

00024110 <__ref_setnp_b>:
   24110:	57                   	push   %edi
   24111:	56                   	push   %esi
   24112:	53                   	push   %ebx
   24113:	e8 68 03 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   24118:	81 c3 e8 ae 02 00    	add    $0x2aee8,%ebx
   2411e:	83 ec 08             	sub    $0x8,%esp
   24121:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   24127:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2412d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   24134:	56                   	push   %esi
   24135:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   24139:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   24140:	83 c0 01             	add    $0x1,%eax
   24143:	50                   	push   %eax
   24144:	e8 37 de fe ff       	call   11f80 <modrm_rm>
   24149:	56                   	push   %esi
   2414a:	8d 78 01             	lea    0x1(%eax),%edi
   2414d:	89 f8                	mov    %edi,%eax
   2414f:	0f b6 c0             	movzbl %al,%eax
   24152:	50                   	push   %eax
   24153:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   24159:	50                   	push   %eax
   2415a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   24160:	50                   	push   %eax
   24161:	e8 3a df fe ff       	call   120a0 <print_asm_1>
   24166:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   2416c:	83 c4 20             	add    $0x20,%esp
   2416f:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   24173:	75 23                	jne    24198 <__ref_setnp_b+0x88>
   24175:	e8 66 66 00 00       	call   2a7e0 <set_ref>
   2417a:	83 ec 0c             	sub    $0xc,%esp
   2417d:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   24184:	56                   	push   %esi
   24185:	e8 06 e4 fe ff       	call   12590 <operand_write>
   2418a:	83 c4 10             	add    $0x10,%esp
   2418d:	89 f8                	mov    %edi,%eax
   2418f:	5b                   	pop    %ebx
   24190:	5e                   	pop    %esi
   24191:	5f                   	pop    %edi
   24192:	c3                   	ret    
   24193:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24197:	90                   	nop
   24198:	e8 43 66 00 00       	call   2a7e0 <set_ref>
   2419d:	83 ec 0c             	sub    $0xc,%esp
   241a0:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   241a7:	56                   	push   %esi
   241a8:	e8 e3 e3 fe ff       	call   12590 <operand_write>
   241ad:	83 c4 10             	add    $0x10,%esp
   241b0:	89 f8                	mov    %edi,%eax
   241b2:	5b                   	pop    %ebx
   241b3:	5e                   	pop    %esi
   241b4:	5f                   	pop    %edi
   241b5:	c3                   	ret    
   241b6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   241bd:	8d 76 00             	lea    0x0(%esi),%esi

000241c0 <__ref_setns_b>:
   241c0:	57                   	push   %edi
   241c1:	56                   	push   %esi
   241c2:	53                   	push   %ebx
   241c3:	e8 b8 02 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   241c8:	81 c3 38 ae 02 00    	add    $0x2ae38,%ebx
   241ce:	83 ec 08             	sub    $0x8,%esp
   241d1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   241d7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   241dd:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   241e4:	56                   	push   %esi
   241e5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   241e9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   241f0:	83 c0 01             	add    $0x1,%eax
   241f3:	50                   	push   %eax
   241f4:	e8 87 dd fe ff       	call   11f80 <modrm_rm>
   241f9:	56                   	push   %esi
   241fa:	8d 78 01             	lea    0x1(%eax),%edi
   241fd:	89 f8                	mov    %edi,%eax
   241ff:	0f b6 c0             	movzbl %al,%eax
   24202:	50                   	push   %eax
   24203:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   24209:	50                   	push   %eax
   2420a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   24210:	50                   	push   %eax
   24211:	e8 8a de fe ff       	call   120a0 <print_asm_1>
   24216:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   2421c:	83 c4 20             	add    $0x20,%esp
   2421f:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   24223:	78 23                	js     24248 <__ref_setns_b+0x88>
   24225:	e8 b6 65 00 00       	call   2a7e0 <set_ref>
   2422a:	83 ec 0c             	sub    $0xc,%esp
   2422d:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   24234:	56                   	push   %esi
   24235:	e8 56 e3 fe ff       	call   12590 <operand_write>
   2423a:	83 c4 10             	add    $0x10,%esp
   2423d:	89 f8                	mov    %edi,%eax
   2423f:	5b                   	pop    %ebx
   24240:	5e                   	pop    %esi
   24241:	5f                   	pop    %edi
   24242:	c3                   	ret    
   24243:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24247:	90                   	nop
   24248:	e8 93 65 00 00       	call   2a7e0 <set_ref>
   2424d:	83 ec 0c             	sub    $0xc,%esp
   24250:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   24257:	56                   	push   %esi
   24258:	e8 33 e3 fe ff       	call   12590 <operand_write>
   2425d:	83 c4 10             	add    $0x10,%esp
   24260:	89 f8                	mov    %edi,%eax
   24262:	5b                   	pop    %ebx
   24263:	5e                   	pop    %esi
   24264:	5f                   	pop    %edi
   24265:	c3                   	ret    
   24266:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2426d:	8d 76 00             	lea    0x0(%esi),%esi

00024270 <__ref_seto_b>:
   24270:	57                   	push   %edi
   24271:	56                   	push   %esi
   24272:	53                   	push   %ebx
   24273:	e8 08 02 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   24278:	81 c3 88 ad 02 00    	add    $0x2ad88,%ebx
   2427e:	83 ec 08             	sub    $0x8,%esp
   24281:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   24287:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2428d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   24294:	56                   	push   %esi
   24295:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   24299:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   242a0:	83 c0 01             	add    $0x1,%eax
   242a3:	50                   	push   %eax
   242a4:	e8 d7 dc fe ff       	call   11f80 <modrm_rm>
   242a9:	56                   	push   %esi
   242aa:	8d 78 01             	lea    0x1(%eax),%edi
   242ad:	89 f8                	mov    %edi,%eax
   242af:	0f b6 c0             	movzbl %al,%eax
   242b2:	50                   	push   %eax
   242b3:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   242b9:	50                   	push   %eax
   242ba:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   242c0:	50                   	push   %eax
   242c1:	e8 da dd fe ff       	call   120a0 <print_asm_1>
   242c6:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   242cc:	83 c4 20             	add    $0x20,%esp
   242cf:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   242d3:	74 23                	je     242f8 <__ref_seto_b+0x88>
   242d5:	e8 06 65 00 00       	call   2a7e0 <set_ref>
   242da:	83 ec 0c             	sub    $0xc,%esp
   242dd:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   242e4:	56                   	push   %esi
   242e5:	e8 a6 e2 fe ff       	call   12590 <operand_write>
   242ea:	83 c4 10             	add    $0x10,%esp
   242ed:	89 f8                	mov    %edi,%eax
   242ef:	5b                   	pop    %ebx
   242f0:	5e                   	pop    %esi
   242f1:	5f                   	pop    %edi
   242f2:	c3                   	ret    
   242f3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   242f7:	90                   	nop
   242f8:	e8 e3 64 00 00       	call   2a7e0 <set_ref>
   242fd:	83 ec 0c             	sub    $0xc,%esp
   24300:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   24307:	56                   	push   %esi
   24308:	e8 83 e2 fe ff       	call   12590 <operand_write>
   2430d:	83 c4 10             	add    $0x10,%esp
   24310:	89 f8                	mov    %edi,%eax
   24312:	5b                   	pop    %ebx
   24313:	5e                   	pop    %esi
   24314:	5f                   	pop    %edi
   24315:	c3                   	ret    
   24316:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2431d:	8d 76 00             	lea    0x0(%esi),%esi

00024320 <__ref_setp_b>:
   24320:	57                   	push   %edi
   24321:	56                   	push   %esi
   24322:	53                   	push   %ebx
   24323:	e8 58 01 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   24328:	81 c3 d8 ac 02 00    	add    $0x2acd8,%ebx
   2432e:	83 ec 08             	sub    $0x8,%esp
   24331:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   24337:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2433d:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   24344:	56                   	push   %esi
   24345:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   24349:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   24350:	83 c0 01             	add    $0x1,%eax
   24353:	50                   	push   %eax
   24354:	e8 27 dc fe ff       	call   11f80 <modrm_rm>
   24359:	56                   	push   %esi
   2435a:	8d 78 01             	lea    0x1(%eax),%edi
   2435d:	89 f8                	mov    %edi,%eax
   2435f:	0f b6 c0             	movzbl %al,%eax
   24362:	50                   	push   %eax
   24363:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   24369:	50                   	push   %eax
   2436a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   24370:	50                   	push   %eax
   24371:	e8 2a dd fe ff       	call   120a0 <print_asm_1>
   24376:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   2437c:	83 c4 20             	add    $0x20,%esp
   2437f:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   24383:	74 23                	je     243a8 <__ref_setp_b+0x88>
   24385:	e8 56 64 00 00       	call   2a7e0 <set_ref>
   2438a:	83 ec 0c             	sub    $0xc,%esp
   2438d:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   24394:	56                   	push   %esi
   24395:	e8 f6 e1 fe ff       	call   12590 <operand_write>
   2439a:	83 c4 10             	add    $0x10,%esp
   2439d:	89 f8                	mov    %edi,%eax
   2439f:	5b                   	pop    %ebx
   243a0:	5e                   	pop    %esi
   243a1:	5f                   	pop    %edi
   243a2:	c3                   	ret    
   243a3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   243a7:	90                   	nop
   243a8:	e8 33 64 00 00       	call   2a7e0 <set_ref>
   243ad:	83 ec 0c             	sub    $0xc,%esp
   243b0:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   243b7:	56                   	push   %esi
   243b8:	e8 d3 e1 fe ff       	call   12590 <operand_write>
   243bd:	83 c4 10             	add    $0x10,%esp
   243c0:	89 f8                	mov    %edi,%eax
   243c2:	5b                   	pop    %ebx
   243c3:	5e                   	pop    %esi
   243c4:	5f                   	pop    %edi
   243c5:	c3                   	ret    
   243c6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   243cd:	8d 76 00             	lea    0x0(%esi),%esi

000243d0 <__ref_sets_b>:
   243d0:	57                   	push   %edi
   243d1:	56                   	push   %esi
   243d2:	53                   	push   %ebx
   243d3:	e8 a8 00 fe ff       	call   4480 <__x86.get_pc_thunk.bx>
   243d8:	81 c3 28 ac 02 00    	add    $0x2ac28,%ebx
   243de:	83 ec 08             	sub    $0x8,%esp
   243e1:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   243e7:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   243ed:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   243f4:	56                   	push   %esi
   243f5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   243f9:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   24400:	83 c0 01             	add    $0x1,%eax
   24403:	50                   	push   %eax
   24404:	e8 77 db fe ff       	call   11f80 <modrm_rm>
   24409:	56                   	push   %esi
   2440a:	8d 78 01             	lea    0x1(%eax),%edi
   2440d:	89 f8                	mov    %edi,%eax
   2440f:	0f b6 c0             	movzbl %al,%eax
   24412:	50                   	push   %eax
   24413:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   24419:	50                   	push   %eax
   2441a:	8d 83 01 6b fe ff    	lea    -0x194ff(%ebx),%eax
   24420:	50                   	push   %eax
   24421:	e8 7a dc fe ff       	call   120a0 <print_asm_1>
   24426:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   2442c:	83 c4 20             	add    $0x20,%esp
   2442f:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   24433:	78 23                	js     24458 <__ref_sets_b+0x88>
   24435:	e8 a6 63 00 00       	call   2a7e0 <set_ref>
   2443a:	83 ec 0c             	sub    $0xc,%esp
   2443d:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
   24444:	56                   	push   %esi
   24445:	e8 46 e1 fe ff       	call   12590 <operand_write>
   2444a:	83 c4 10             	add    $0x10,%esp
   2444d:	89 f8                	mov    %edi,%eax
   2444f:	5b                   	pop    %ebx
   24450:	5e                   	pop    %esi
   24451:	5f                   	pop    %edi
   24452:	c3                   	ret    
   24453:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24457:	90                   	nop
   24458:	e8 83 63 00 00       	call   2a7e0 <set_ref>
   2445d:	83 ec 0c             	sub    $0xc,%esp
   24460:	c7 46 0c 01 00 00 00 	movl   $0x1,0xc(%esi)
   24467:	56                   	push   %esi
   24468:	e8 23 e1 fe ff       	call   12590 <operand_write>
   2446d:	83 c4 10             	add    $0x10,%esp
   24470:	89 f8                	mov    %edi,%eax
   24472:	5b                   	pop    %ebx
   24473:	5e                   	pop    %esi
   24474:	5f                   	pop    %edi
   24475:	c3                   	ret    
   24476:	66 90                	xchg   %ax,%ax
   24478:	66 90                	xchg   %ax,%ax
   2447a:	66 90                	xchg   %ax,%ax
   2447c:	66 90                	xchg   %ax,%ax
   2447e:	66 90                	xchg   %ax,%ax

00024480 <__ref_cltd>:
   24480:	53                   	push   %ebx
   24481:	e8 fa ff fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24486:	81 c3 7a ab 02 00    	add    $0x2ab7a,%ebx
   2448c:	83 ec 58             	sub    $0x58,%esp
   2448f:	e8 4c 63 00 00       	call   2a7e0 <set_ref>
   24494:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2449a:	83 ec 0c             	sub    $0xc,%esp
   2449d:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   244a4:	00 
   244a5:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   244ac:	00 
   244ad:	0f b6 00             	movzbl (%eax),%eax
   244b0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   244b7:	00 
   244b8:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   244bf:	00 
   244c0:	89 44 24 24          	mov    %eax,0x24(%esp)
   244c4:	89 44 24 48          	mov    %eax,0x48(%esp)
   244c8:	8d 44 24 14          	lea    0x14(%esp),%eax
   244cc:	50                   	push   %eax
   244cd:	e8 0e df fe ff       	call   123e0 <operand_read>
   244d2:	8b 44 24 24          	mov    0x24(%esp),%eax
   244d6:	c1 f8 1f             	sar    $0x1f,%eax
   244d9:	89 44 24 48          	mov    %eax,0x48(%esp)
   244dd:	58                   	pop    %eax
   244de:	8d 44 24 38          	lea    0x38(%esp),%eax
   244e2:	50                   	push   %eax
   244e3:	e8 a8 e0 fe ff       	call   12590 <operand_write>
   244e8:	83 c4 0c             	add    $0xc,%esp
   244eb:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   244f1:	6a 01                	push   $0x1
   244f3:	50                   	push   %eax
   244f4:	8d 83 e9 66 fe ff    	lea    -0x19917(%ebx),%eax
   244fa:	50                   	push   %eax
   244fb:	e8 c0 da fe ff       	call   11fc0 <print_asm_0>
   24500:	83 c4 68             	add    $0x68,%esp
   24503:	b8 01 00 00 00       	mov    $0x1,%eax
   24508:	5b                   	pop    %ebx
   24509:	c3                   	ret    
   2450a:	66 90                	xchg   %ax,%ax
   2450c:	66 90                	xchg   %ax,%ax
   2450e:	66 90                	xchg   %ax,%ax

00024510 <__ref_bt_r2rm_v>:
   24510:	55                   	push   %ebp
   24511:	57                   	push   %edi
   24512:	56                   	push   %esi
   24513:	53                   	push   %ebx
   24514:	e8 67 ff fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24519:	81 c3 e7 aa 02 00    	add    $0x2aae7,%ebx
   2451f:	83 ec 10             	sub    $0x10,%esp
   24522:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   24528:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2452e:	8d ab e0 33 05 00    	lea    0x533e0(%ebx),%ebp
   24534:	0f b6 00             	movzbl (%eax),%eax
   24537:	56                   	push   %esi
   24538:	55                   	push   %ebp
   24539:	89 46 10             	mov    %eax,0x10(%esi)
   2453c:	89 45 10             	mov    %eax,0x10(%ebp)
   2453f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   24543:	83 c0 01             	add    $0x1,%eax
   24546:	50                   	push   %eax
   24547:	e8 54 d9 fe ff       	call   11ea0 <modrm_r_rm>
   2454c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2454f:	83 c4 10             	add    $0x10,%esp
   24552:	8d 78 01             	lea    0x1(%eax),%edi
   24555:	89 f8                	mov    %edi,%eax
   24557:	0f b6 d0             	movzbl %al,%edx
   2455a:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   24560:	83 f9 08             	cmp    $0x8,%ecx
   24563:	74 12                	je     24577 <__ref_bt_r2rm_v+0x67>
   24565:	83 f9 10             	cmp    $0x10,%ecx
   24568:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2456e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   24574:	0f 45 c1             	cmovne %ecx,%eax
   24577:	83 ec 0c             	sub    $0xc,%esp
   2457a:	56                   	push   %esi
   2457b:	55                   	push   %ebp
   2457c:	52                   	push   %edx
   2457d:	50                   	push   %eax
   2457e:	8d 83 42 67 fe ff    	lea    -0x198be(%ebx),%eax
   24584:	50                   	push   %eax
   24585:	e8 16 dc fe ff       	call   121a0 <print_asm_2>
   2458a:	83 c4 20             	add    $0x20,%esp
   2458d:	e8 4e 62 00 00       	call   2a7e0 <set_ref>
   24592:	83 ec 0c             	sub    $0xc,%esp
   24595:	55                   	push   %ebp
   24596:	e8 45 de fe ff       	call   123e0 <operand_read>
   2459b:	89 34 24             	mov    %esi,(%esp)
   2459e:	e8 3d de fe ff       	call   123e0 <operand_read>
   245a3:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   245a6:	8b 56 0c             	mov    0xc(%esi),%edx
   245a9:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   245af:	d3 ea                	shr    %cl,%edx
   245b1:	89 d1                	mov    %edx,%ecx
   245b3:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   245b7:	83 e1 01             	and    $0x1,%ecx
   245ba:	83 e2 fe             	and    $0xfffffffe,%edx
   245bd:	09 ca                	or     %ecx,%edx
   245bf:	88 50 24             	mov    %dl,0x24(%eax)
   245c2:	83 c4 1c             	add    $0x1c,%esp
   245c5:	89 f8                	mov    %edi,%eax
   245c7:	5b                   	pop    %ebx
   245c8:	5e                   	pop    %esi
   245c9:	5f                   	pop    %edi
   245ca:	5d                   	pop    %ebp
   245cb:	c3                   	ret    
   245cc:	66 90                	xchg   %ax,%ax
   245ce:	66 90                	xchg   %ax,%ax

000245d0 <__ref_group_1_b>:
   245d0:	56                   	push   %esi
   245d1:	53                   	push   %ebx
   245d2:	e8 a9 fe fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   245d7:	81 c3 29 aa 02 00    	add    $0x2aa29,%ebx
   245dd:	83 ec 1c             	sub    $0x1c,%esp
   245e0:	8b 74 24 28          	mov    0x28(%esp),%esi
   245e4:	8d 44 24 17          	lea    0x17(%esp),%eax
   245e8:	50                   	push   %eax
   245e9:	8d 46 01             	lea    0x1(%esi),%eax
   245ec:	50                   	push   %eax
   245ed:	e8 5e d9 fe ff       	call   11f50 <modrm_opcode>
   245f2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   245f7:	5a                   	pop    %edx
   245f8:	59                   	pop    %ecx
   245f9:	8d 93 20 0e 00 00    	lea    0xe20(%ebx),%edx
   245ff:	50                   	push   %eax
   24600:	56                   	push   %esi
   24601:	ff 14 82             	call   *(%edx,%eax,4)
   24604:	83 c4 24             	add    $0x24,%esp
   24607:	5b                   	pop    %ebx
   24608:	5e                   	pop    %esi
   24609:	c3                   	ret    
   2460a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024610 <__ref_group_1_v>:
   24610:	56                   	push   %esi
   24611:	53                   	push   %ebx
   24612:	e8 69 fe fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24617:	81 c3 e9 a9 02 00    	add    $0x2a9e9,%ebx
   2461d:	83 ec 1c             	sub    $0x1c,%esp
   24620:	8b 74 24 28          	mov    0x28(%esp),%esi
   24624:	8d 44 24 17          	lea    0x17(%esp),%eax
   24628:	50                   	push   %eax
   24629:	8d 46 01             	lea    0x1(%esi),%eax
   2462c:	50                   	push   %eax
   2462d:	e8 1e d9 fe ff       	call   11f50 <modrm_opcode>
   24632:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24637:	5a                   	pop    %edx
   24638:	59                   	pop    %ecx
   24639:	8d 93 00 0e 00 00    	lea    0xe00(%ebx),%edx
   2463f:	50                   	push   %eax
   24640:	56                   	push   %esi
   24641:	ff 14 82             	call   *(%edx,%eax,4)
   24644:	83 c4 24             	add    $0x24,%esp
   24647:	5b                   	pop    %ebx
   24648:	5e                   	pop    %esi
   24649:	c3                   	ret    
   2464a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024650 <__ref_group_1_bv>:
   24650:	56                   	push   %esi
   24651:	53                   	push   %ebx
   24652:	e8 29 fe fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24657:	81 c3 a9 a9 02 00    	add    $0x2a9a9,%ebx
   2465d:	83 ec 1c             	sub    $0x1c,%esp
   24660:	8b 74 24 28          	mov    0x28(%esp),%esi
   24664:	8d 44 24 17          	lea    0x17(%esp),%eax
   24668:	50                   	push   %eax
   24669:	8d 46 01             	lea    0x1(%esi),%eax
   2466c:	50                   	push   %eax
   2466d:	e8 de d8 fe ff       	call   11f50 <modrm_opcode>
   24672:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24677:	5a                   	pop    %edx
   24678:	59                   	pop    %ecx
   24679:	8d 93 e0 0d 00 00    	lea    0xde0(%ebx),%edx
   2467f:	50                   	push   %eax
   24680:	56                   	push   %esi
   24681:	ff 14 82             	call   *(%edx,%eax,4)
   24684:	83 c4 24             	add    $0x24,%esp
   24687:	5b                   	pop    %ebx
   24688:	5e                   	pop    %esi
   24689:	c3                   	ret    
   2468a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024690 <__ref_group_2_b>:
   24690:	56                   	push   %esi
   24691:	53                   	push   %ebx
   24692:	e8 e9 fd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24697:	81 c3 69 a9 02 00    	add    $0x2a969,%ebx
   2469d:	83 ec 1c             	sub    $0x1c,%esp
   246a0:	8b 74 24 28          	mov    0x28(%esp),%esi
   246a4:	8d 44 24 17          	lea    0x17(%esp),%eax
   246a8:	50                   	push   %eax
   246a9:	8d 46 01             	lea    0x1(%esi),%eax
   246ac:	50                   	push   %eax
   246ad:	e8 9e d8 fe ff       	call   11f50 <modrm_opcode>
   246b2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   246b7:	5a                   	pop    %edx
   246b8:	59                   	pop    %ecx
   246b9:	8d 93 c0 0d 00 00    	lea    0xdc0(%ebx),%edx
   246bf:	50                   	push   %eax
   246c0:	56                   	push   %esi
   246c1:	ff 14 82             	call   *(%edx,%eax,4)
   246c4:	83 c4 24             	add    $0x24,%esp
   246c7:	5b                   	pop    %ebx
   246c8:	5e                   	pop    %esi
   246c9:	c3                   	ret    
   246ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000246d0 <__ref_group_2_v>:
   246d0:	56                   	push   %esi
   246d1:	53                   	push   %ebx
   246d2:	e8 a9 fd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   246d7:	81 c3 29 a9 02 00    	add    $0x2a929,%ebx
   246dd:	83 ec 1c             	sub    $0x1c,%esp
   246e0:	8b 74 24 28          	mov    0x28(%esp),%esi
   246e4:	8d 44 24 17          	lea    0x17(%esp),%eax
   246e8:	50                   	push   %eax
   246e9:	8d 46 01             	lea    0x1(%esi),%eax
   246ec:	50                   	push   %eax
   246ed:	e8 5e d8 fe ff       	call   11f50 <modrm_opcode>
   246f2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   246f7:	5a                   	pop    %edx
   246f8:	59                   	pop    %ecx
   246f9:	8d 93 a0 0d 00 00    	lea    0xda0(%ebx),%edx
   246ff:	50                   	push   %eax
   24700:	56                   	push   %esi
   24701:	ff 14 82             	call   *(%edx,%eax,4)
   24704:	83 c4 24             	add    $0x24,%esp
   24707:	5b                   	pop    %ebx
   24708:	5e                   	pop    %esi
   24709:	c3                   	ret    
   2470a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024710 <__ref_group_2_1b>:
   24710:	56                   	push   %esi
   24711:	53                   	push   %ebx
   24712:	e8 69 fd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24717:	81 c3 e9 a8 02 00    	add    $0x2a8e9,%ebx
   2471d:	83 ec 1c             	sub    $0x1c,%esp
   24720:	8b 74 24 28          	mov    0x28(%esp),%esi
   24724:	8d 44 24 17          	lea    0x17(%esp),%eax
   24728:	50                   	push   %eax
   24729:	8d 46 01             	lea    0x1(%esi),%eax
   2472c:	50                   	push   %eax
   2472d:	e8 1e d8 fe ff       	call   11f50 <modrm_opcode>
   24732:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24737:	5a                   	pop    %edx
   24738:	59                   	pop    %ecx
   24739:	8d 93 80 0d 00 00    	lea    0xd80(%ebx),%edx
   2473f:	50                   	push   %eax
   24740:	56                   	push   %esi
   24741:	ff 14 82             	call   *(%edx,%eax,4)
   24744:	83 c4 24             	add    $0x24,%esp
   24747:	5b                   	pop    %ebx
   24748:	5e                   	pop    %esi
   24749:	c3                   	ret    
   2474a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024750 <__ref_group_2_1v>:
   24750:	56                   	push   %esi
   24751:	53                   	push   %ebx
   24752:	e8 29 fd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24757:	81 c3 a9 a8 02 00    	add    $0x2a8a9,%ebx
   2475d:	83 ec 1c             	sub    $0x1c,%esp
   24760:	8b 74 24 28          	mov    0x28(%esp),%esi
   24764:	8d 44 24 17          	lea    0x17(%esp),%eax
   24768:	50                   	push   %eax
   24769:	8d 46 01             	lea    0x1(%esi),%eax
   2476c:	50                   	push   %eax
   2476d:	e8 de d7 fe ff       	call   11f50 <modrm_opcode>
   24772:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24777:	5a                   	pop    %edx
   24778:	59                   	pop    %ecx
   24779:	8d 93 60 0d 00 00    	lea    0xd60(%ebx),%edx
   2477f:	50                   	push   %eax
   24780:	56                   	push   %esi
   24781:	ff 14 82             	call   *(%edx,%eax,4)
   24784:	83 c4 24             	add    $0x24,%esp
   24787:	5b                   	pop    %ebx
   24788:	5e                   	pop    %esi
   24789:	c3                   	ret    
   2478a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024790 <__ref_group_2_cb>:
   24790:	56                   	push   %esi
   24791:	53                   	push   %ebx
   24792:	e8 e9 fc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24797:	81 c3 69 a8 02 00    	add    $0x2a869,%ebx
   2479d:	83 ec 1c             	sub    $0x1c,%esp
   247a0:	8b 74 24 28          	mov    0x28(%esp),%esi
   247a4:	8d 44 24 17          	lea    0x17(%esp),%eax
   247a8:	50                   	push   %eax
   247a9:	8d 46 01             	lea    0x1(%esi),%eax
   247ac:	50                   	push   %eax
   247ad:	e8 9e d7 fe ff       	call   11f50 <modrm_opcode>
   247b2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   247b7:	5a                   	pop    %edx
   247b8:	59                   	pop    %ecx
   247b9:	8d 93 40 0d 00 00    	lea    0xd40(%ebx),%edx
   247bf:	50                   	push   %eax
   247c0:	56                   	push   %esi
   247c1:	ff 14 82             	call   *(%edx,%eax,4)
   247c4:	83 c4 24             	add    $0x24,%esp
   247c7:	5b                   	pop    %ebx
   247c8:	5e                   	pop    %esi
   247c9:	c3                   	ret    
   247ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000247d0 <__ref_group_2_cv>:
   247d0:	56                   	push   %esi
   247d1:	53                   	push   %ebx
   247d2:	e8 a9 fc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   247d7:	81 c3 29 a8 02 00    	add    $0x2a829,%ebx
   247dd:	83 ec 1c             	sub    $0x1c,%esp
   247e0:	8b 74 24 28          	mov    0x28(%esp),%esi
   247e4:	8d 44 24 17          	lea    0x17(%esp),%eax
   247e8:	50                   	push   %eax
   247e9:	8d 46 01             	lea    0x1(%esi),%eax
   247ec:	50                   	push   %eax
   247ed:	e8 5e d7 fe ff       	call   11f50 <modrm_opcode>
   247f2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   247f7:	5a                   	pop    %edx
   247f8:	59                   	pop    %ecx
   247f9:	8d 93 20 0d 00 00    	lea    0xd20(%ebx),%edx
   247ff:	50                   	push   %eax
   24800:	56                   	push   %esi
   24801:	ff 14 82             	call   *(%edx,%eax,4)
   24804:	83 c4 24             	add    $0x24,%esp
   24807:	5b                   	pop    %ebx
   24808:	5e                   	pop    %esi
   24809:	c3                   	ret    
   2480a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024810 <__ref_group_3_b>:
   24810:	56                   	push   %esi
   24811:	53                   	push   %ebx
   24812:	e8 69 fc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24817:	81 c3 e9 a7 02 00    	add    $0x2a7e9,%ebx
   2481d:	83 ec 1c             	sub    $0x1c,%esp
   24820:	8b 74 24 28          	mov    0x28(%esp),%esi
   24824:	8d 44 24 17          	lea    0x17(%esp),%eax
   24828:	50                   	push   %eax
   24829:	8d 46 01             	lea    0x1(%esi),%eax
   2482c:	50                   	push   %eax
   2482d:	e8 1e d7 fe ff       	call   11f50 <modrm_opcode>
   24832:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24837:	5a                   	pop    %edx
   24838:	59                   	pop    %ecx
   24839:	8d 93 00 0d 00 00    	lea    0xd00(%ebx),%edx
   2483f:	50                   	push   %eax
   24840:	56                   	push   %esi
   24841:	ff 14 82             	call   *(%edx,%eax,4)
   24844:	83 c4 24             	add    $0x24,%esp
   24847:	5b                   	pop    %ebx
   24848:	5e                   	pop    %esi
   24849:	c3                   	ret    
   2484a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024850 <__ref_group_3_v>:
   24850:	56                   	push   %esi
   24851:	53                   	push   %ebx
   24852:	e8 29 fc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24857:	81 c3 a9 a7 02 00    	add    $0x2a7a9,%ebx
   2485d:	83 ec 1c             	sub    $0x1c,%esp
   24860:	8b 74 24 28          	mov    0x28(%esp),%esi
   24864:	8d 44 24 17          	lea    0x17(%esp),%eax
   24868:	50                   	push   %eax
   24869:	8d 46 01             	lea    0x1(%esi),%eax
   2486c:	50                   	push   %eax
   2486d:	e8 de d6 fe ff       	call   11f50 <modrm_opcode>
   24872:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24877:	5a                   	pop    %edx
   24878:	59                   	pop    %ecx
   24879:	8d 93 e0 0c 00 00    	lea    0xce0(%ebx),%edx
   2487f:	50                   	push   %eax
   24880:	56                   	push   %esi
   24881:	ff 14 82             	call   *(%edx,%eax,4)
   24884:	83 c4 24             	add    $0x24,%esp
   24887:	5b                   	pop    %ebx
   24888:	5e                   	pop    %esi
   24889:	c3                   	ret    
   2488a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024890 <__ref_group_5_indirect>:
   24890:	56                   	push   %esi
   24891:	53                   	push   %ebx
   24892:	e8 e9 fb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24897:	81 c3 69 a7 02 00    	add    $0x2a769,%ebx
   2489d:	83 ec 1c             	sub    $0x1c,%esp
   248a0:	8b 74 24 28          	mov    0x28(%esp),%esi
   248a4:	8d 44 24 17          	lea    0x17(%esp),%eax
   248a8:	50                   	push   %eax
   248a9:	8d 46 01             	lea    0x1(%esi),%eax
   248ac:	50                   	push   %eax
   248ad:	e8 9e d6 fe ff       	call   11f50 <modrm_opcode>
   248b2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   248b7:	5a                   	pop    %edx
   248b8:	59                   	pop    %ecx
   248b9:	8d 93 c0 0c 00 00    	lea    0xcc0(%ebx),%edx
   248bf:	50                   	push   %eax
   248c0:	56                   	push   %esi
   248c1:	ff 14 82             	call   *(%edx,%eax,4)
   248c4:	83 c4 24             	add    $0x24,%esp
   248c7:	5b                   	pop    %ebx
   248c8:	5e                   	pop    %esi
   248c9:	c3                   	ret    
   248ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000248d0 <__ref_group_7>:
   248d0:	56                   	push   %esi
   248d1:	53                   	push   %ebx
   248d2:	e8 a9 fb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   248d7:	81 c3 29 a7 02 00    	add    $0x2a729,%ebx
   248dd:	83 ec 1c             	sub    $0x1c,%esp
   248e0:	8b 74 24 28          	mov    0x28(%esp),%esi
   248e4:	8d 44 24 17          	lea    0x17(%esp),%eax
   248e8:	50                   	push   %eax
   248e9:	8d 46 01             	lea    0x1(%esi),%eax
   248ec:	50                   	push   %eax
   248ed:	e8 5e d6 fe ff       	call   11f50 <modrm_opcode>
   248f2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   248f7:	5a                   	pop    %edx
   248f8:	59                   	pop    %ecx
   248f9:	8d 93 a0 0c 00 00    	lea    0xca0(%ebx),%edx
   248ff:	50                   	push   %eax
   24900:	56                   	push   %esi
   24901:	ff 14 82             	call   *(%edx,%eax,4)
   24904:	83 c4 24             	add    $0x24,%esp
   24907:	5b                   	pop    %ebx
   24908:	5e                   	pop    %esi
   24909:	c3                   	ret    
   2490a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024910 <__ref_group_x87_d8>:
   24910:	56                   	push   %esi
   24911:	53                   	push   %ebx
   24912:	e8 69 fb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24917:	81 c3 e9 a6 02 00    	add    $0x2a6e9,%ebx
   2491d:	83 ec 1c             	sub    $0x1c,%esp
   24920:	8b 74 24 28          	mov    0x28(%esp),%esi
   24924:	8d 44 24 17          	lea    0x17(%esp),%eax
   24928:	50                   	push   %eax
   24929:	8d 46 01             	lea    0x1(%esi),%eax
   2492c:	50                   	push   %eax
   2492d:	e8 1e d6 fe ff       	call   11f50 <modrm_opcode>
   24932:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24937:	5a                   	pop    %edx
   24938:	59                   	pop    %ecx
   24939:	8d 93 80 0c 00 00    	lea    0xc80(%ebx),%edx
   2493f:	50                   	push   %eax
   24940:	56                   	push   %esi
   24941:	ff 14 82             	call   *(%edx,%eax,4)
   24944:	83 c4 24             	add    $0x24,%esp
   24947:	5b                   	pop    %ebx
   24948:	5e                   	pop    %esi
   24949:	c3                   	ret    
   2494a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024950 <__ref_group_x87_d9>:
   24950:	56                   	push   %esi
   24951:	53                   	push   %ebx
   24952:	e8 29 fb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24957:	81 c3 a9 a6 02 00    	add    $0x2a6a9,%ebx
   2495d:	83 ec 1c             	sub    $0x1c,%esp
   24960:	8b 74 24 28          	mov    0x28(%esp),%esi
   24964:	8d 44 24 17          	lea    0x17(%esp),%eax
   24968:	50                   	push   %eax
   24969:	8d 46 01             	lea    0x1(%esi),%eax
   2496c:	50                   	push   %eax
   2496d:	e8 de d5 fe ff       	call   11f50 <modrm_opcode>
   24972:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24977:	5a                   	pop    %edx
   24978:	59                   	pop    %ecx
   24979:	8d 93 60 0c 00 00    	lea    0xc60(%ebx),%edx
   2497f:	50                   	push   %eax
   24980:	56                   	push   %esi
   24981:	ff 14 82             	call   *(%edx,%eax,4)
   24984:	83 c4 24             	add    $0x24,%esp
   24987:	5b                   	pop    %ebx
   24988:	5e                   	pop    %esi
   24989:	c3                   	ret    
   2498a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024990 <__ref_group_x87_da>:
   24990:	56                   	push   %esi
   24991:	53                   	push   %ebx
   24992:	e8 e9 fa fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24997:	81 c3 69 a6 02 00    	add    $0x2a669,%ebx
   2499d:	83 ec 1c             	sub    $0x1c,%esp
   249a0:	8b 74 24 28          	mov    0x28(%esp),%esi
   249a4:	8d 44 24 17          	lea    0x17(%esp),%eax
   249a8:	50                   	push   %eax
   249a9:	8d 46 01             	lea    0x1(%esi),%eax
   249ac:	50                   	push   %eax
   249ad:	e8 9e d5 fe ff       	call   11f50 <modrm_opcode>
   249b2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   249b7:	5a                   	pop    %edx
   249b8:	59                   	pop    %ecx
   249b9:	8d 93 40 0c 00 00    	lea    0xc40(%ebx),%edx
   249bf:	50                   	push   %eax
   249c0:	56                   	push   %esi
   249c1:	ff 14 82             	call   *(%edx,%eax,4)
   249c4:	83 c4 24             	add    $0x24,%esp
   249c7:	5b                   	pop    %ebx
   249c8:	5e                   	pop    %esi
   249c9:	c3                   	ret    
   249ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000249d0 <__ref_group_x87_db>:
   249d0:	56                   	push   %esi
   249d1:	53                   	push   %ebx
   249d2:	e8 a9 fa fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   249d7:	81 c3 29 a6 02 00    	add    $0x2a629,%ebx
   249dd:	83 ec 1c             	sub    $0x1c,%esp
   249e0:	8b 74 24 28          	mov    0x28(%esp),%esi
   249e4:	8d 44 24 17          	lea    0x17(%esp),%eax
   249e8:	50                   	push   %eax
   249e9:	8d 46 01             	lea    0x1(%esi),%eax
   249ec:	50                   	push   %eax
   249ed:	e8 5e d5 fe ff       	call   11f50 <modrm_opcode>
   249f2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   249f7:	5a                   	pop    %edx
   249f8:	59                   	pop    %ecx
   249f9:	8d 93 20 0c 00 00    	lea    0xc20(%ebx),%edx
   249ff:	50                   	push   %eax
   24a00:	56                   	push   %esi
   24a01:	ff 14 82             	call   *(%edx,%eax,4)
   24a04:	83 c4 24             	add    $0x24,%esp
   24a07:	5b                   	pop    %ebx
   24a08:	5e                   	pop    %esi
   24a09:	c3                   	ret    
   24a0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024a10 <__ref_group_x87_dc>:
   24a10:	56                   	push   %esi
   24a11:	53                   	push   %ebx
   24a12:	e8 69 fa fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24a17:	81 c3 e9 a5 02 00    	add    $0x2a5e9,%ebx
   24a1d:	83 ec 1c             	sub    $0x1c,%esp
   24a20:	8b 74 24 28          	mov    0x28(%esp),%esi
   24a24:	8d 44 24 17          	lea    0x17(%esp),%eax
   24a28:	50                   	push   %eax
   24a29:	8d 46 01             	lea    0x1(%esi),%eax
   24a2c:	50                   	push   %eax
   24a2d:	e8 1e d5 fe ff       	call   11f50 <modrm_opcode>
   24a32:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24a37:	5a                   	pop    %edx
   24a38:	59                   	pop    %ecx
   24a39:	8d 93 00 0c 00 00    	lea    0xc00(%ebx),%edx
   24a3f:	50                   	push   %eax
   24a40:	56                   	push   %esi
   24a41:	ff 14 82             	call   *(%edx,%eax,4)
   24a44:	83 c4 24             	add    $0x24,%esp
   24a47:	5b                   	pop    %ebx
   24a48:	5e                   	pop    %esi
   24a49:	c3                   	ret    
   24a4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024a50 <__ref_group_x87_dd>:
   24a50:	56                   	push   %esi
   24a51:	53                   	push   %ebx
   24a52:	e8 29 fa fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24a57:	81 c3 a9 a5 02 00    	add    $0x2a5a9,%ebx
   24a5d:	83 ec 1c             	sub    $0x1c,%esp
   24a60:	8b 74 24 28          	mov    0x28(%esp),%esi
   24a64:	8d 44 24 17          	lea    0x17(%esp),%eax
   24a68:	50                   	push   %eax
   24a69:	8d 46 01             	lea    0x1(%esi),%eax
   24a6c:	50                   	push   %eax
   24a6d:	e8 de d4 fe ff       	call   11f50 <modrm_opcode>
   24a72:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24a77:	5a                   	pop    %edx
   24a78:	59                   	pop    %ecx
   24a79:	8d 93 e0 0b 00 00    	lea    0xbe0(%ebx),%edx
   24a7f:	50                   	push   %eax
   24a80:	56                   	push   %esi
   24a81:	ff 14 82             	call   *(%edx,%eax,4)
   24a84:	83 c4 24             	add    $0x24,%esp
   24a87:	5b                   	pop    %ebx
   24a88:	5e                   	pop    %esi
   24a89:	c3                   	ret    
   24a8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024a90 <__ref_group_x87_de>:
   24a90:	56                   	push   %esi
   24a91:	53                   	push   %ebx
   24a92:	e8 e9 f9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24a97:	81 c3 69 a5 02 00    	add    $0x2a569,%ebx
   24a9d:	83 ec 1c             	sub    $0x1c,%esp
   24aa0:	8b 74 24 28          	mov    0x28(%esp),%esi
   24aa4:	8d 44 24 17          	lea    0x17(%esp),%eax
   24aa8:	50                   	push   %eax
   24aa9:	8d 46 01             	lea    0x1(%esi),%eax
   24aac:	50                   	push   %eax
   24aad:	e8 9e d4 fe ff       	call   11f50 <modrm_opcode>
   24ab2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24ab7:	5a                   	pop    %edx
   24ab8:	59                   	pop    %ecx
   24ab9:	8d 93 c0 0b 00 00    	lea    0xbc0(%ebx),%edx
   24abf:	50                   	push   %eax
   24ac0:	56                   	push   %esi
   24ac1:	ff 14 82             	call   *(%edx,%eax,4)
   24ac4:	83 c4 24             	add    $0x24,%esp
   24ac7:	5b                   	pop    %ebx
   24ac8:	5e                   	pop    %esi
   24ac9:	c3                   	ret    
   24aca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024ad0 <__ref_group_x87_df>:
   24ad0:	56                   	push   %esi
   24ad1:	53                   	push   %ebx
   24ad2:	e8 a9 f9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24ad7:	81 c3 29 a5 02 00    	add    $0x2a529,%ebx
   24add:	83 ec 1c             	sub    $0x1c,%esp
   24ae0:	8b 74 24 28          	mov    0x28(%esp),%esi
   24ae4:	8d 44 24 17          	lea    0x17(%esp),%eax
   24ae8:	50                   	push   %eax
   24ae9:	8d 46 01             	lea    0x1(%esi),%eax
   24aec:	50                   	push   %eax
   24aed:	e8 5e d4 fe ff       	call   11f50 <modrm_opcode>
   24af2:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
   24af7:	5a                   	pop    %edx
   24af8:	59                   	pop    %ecx
   24af9:	8d 93 a0 0b 00 00    	lea    0xba0(%ebx),%edx
   24aff:	50                   	push   %eax
   24b00:	56                   	push   %esi
   24b01:	ff 14 82             	call   *(%edx,%eax,4)
   24b04:	83 c4 24             	add    $0x24,%esp
   24b07:	5b                   	pop    %ebx
   24b08:	5e                   	pop    %esi
   24b09:	c3                   	ret    
   24b0a:	66 90                	xchg   %ax,%ax
   24b0c:	66 90                	xchg   %ax,%ax
   24b0e:	66 90                	xchg   %ax,%ax

00024b10 <__ref_do_pop>:
   24b10:	56                   	push   %esi
   24b11:	53                   	push   %ebx
   24b12:	e8 69 f9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24b17:	81 c3 e9 a4 02 00    	add    $0x2a4e9,%ebx
   24b1d:	83 ec 40             	sub    $0x40,%esp
   24b20:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   24b27:	00 
   24b28:	c7 44 24 28 20 00 00 	movl   $0x20,0x28(%esp)
   24b2f:	00 
   24b30:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   24b35:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   24b3b:	8b 46 10             	mov    0x10(%esi),%eax
   24b3e:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   24b42:	8d 44 24 18          	lea    0x18(%esp),%eax
   24b46:	50                   	push   %eax
   24b47:	e8 94 d8 fe ff       	call   123e0 <operand_read>
   24b4c:	83 46 10 04          	addl   $0x4,0x10(%esi)
   24b50:	8b 44 24 28          	mov    0x28(%esp),%eax
   24b54:	83 c4 44             	add    $0x44,%esp
   24b57:	5b                   	pop    %ebx
   24b58:	5e                   	pop    %esi
   24b59:	c3                   	ret    
   24b5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024b60 <__ref_pop_r_v>:
   24b60:	56                   	push   %esi
   24b61:	53                   	push   %ebx
   24b62:	e8 19 f9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24b67:	81 c3 99 a4 02 00    	add    $0x2a499,%ebx
   24b6d:	83 ec 04             	sub    $0x4,%esp
   24b70:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   24b76:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   24b7c:	0f b6 10             	movzbl (%eax),%edx
   24b7f:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   24b85:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   24b8b:	89 50 10             	mov    %edx,0x10(%eax)
   24b8e:	8b 44 24 14          	mov    0x14(%esp),%eax
   24b92:	89 56 10             	mov    %edx,0x10(%esi)
   24b95:	83 e0 07             	and    $0x7,%eax
   24b98:	89 46 04             	mov    %eax,0x4(%esi)
   24b9b:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   24ba1:	83 fa 08             	cmp    $0x8,%edx
   24ba4:	74 12                	je     24bb8 <__ref_pop_r_v+0x58>
   24ba6:	83 fa 10             	cmp    $0x10,%edx
   24ba9:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   24baf:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   24bb5:	0f 45 c2             	cmovne %edx,%eax
   24bb8:	56                   	push   %esi
   24bb9:	6a 01                	push   $0x1
   24bbb:	50                   	push   %eax
   24bbc:	8d 83 c8 6a fe ff    	lea    -0x19538(%ebx),%eax
   24bc2:	50                   	push   %eax
   24bc3:	e8 d8 d4 fe ff       	call   120a0 <print_asm_1>
   24bc8:	e8 13 5c 00 00       	call   2a7e0 <set_ref>
   24bcd:	e8 3e ff ff ff       	call   24b10 <__ref_do_pop>
   24bd2:	89 34 24             	mov    %esi,(%esp)
   24bd5:	89 46 0c             	mov    %eax,0xc(%esi)
   24bd8:	e8 b3 d9 fe ff       	call   12590 <operand_write>
   24bdd:	83 c4 14             	add    $0x14,%esp
   24be0:	b8 01 00 00 00       	mov    $0x1,%eax
   24be5:	5b                   	pop    %ebx
   24be6:	5e                   	pop    %esi
   24be7:	c3                   	ret    
   24be8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   24bef:	90                   	nop

00024bf0 <__ref_popa>:
   24bf0:	56                   	push   %esi
   24bf1:	53                   	push   %ebx
   24bf2:	e8 89 f8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24bf7:	81 c3 09 a4 02 00    	add    $0x2a409,%ebx
   24bfd:	83 ec 04             	sub    $0x4,%esp
   24c00:	e8 db 5b 00 00       	call   2a7e0 <set_ref>
   24c05:	e8 06 ff ff ff       	call   24b10 <__ref_do_pop>
   24c0a:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   24c10:	89 46 1c             	mov    %eax,0x1c(%esi)
   24c13:	e8 f8 fe ff ff       	call   24b10 <__ref_do_pop>
   24c18:	89 46 18             	mov    %eax,0x18(%esi)
   24c1b:	e8 f0 fe ff ff       	call   24b10 <__ref_do_pop>
   24c20:	89 46 14             	mov    %eax,0x14(%esi)
   24c23:	e8 e8 fe ff ff       	call   24b10 <__ref_do_pop>
   24c28:	e8 e3 fe ff ff       	call   24b10 <__ref_do_pop>
   24c2d:	89 46 0c             	mov    %eax,0xc(%esi)
   24c30:	e8 db fe ff ff       	call   24b10 <__ref_do_pop>
   24c35:	89 46 08             	mov    %eax,0x8(%esi)
   24c38:	e8 d3 fe ff ff       	call   24b10 <__ref_do_pop>
   24c3d:	89 46 04             	mov    %eax,0x4(%esi)
   24c40:	e8 cb fe ff ff       	call   24b10 <__ref_do_pop>
   24c45:	83 ec 04             	sub    $0x4,%esp
   24c48:	89 06                	mov    %eax,(%esi)
   24c4a:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   24c50:	6a 01                	push   $0x1
   24c52:	50                   	push   %eax
   24c53:	8d 83 cc 6a fe ff    	lea    -0x19534(%ebx),%eax
   24c59:	50                   	push   %eax
   24c5a:	e8 61 d3 fe ff       	call   11fc0 <print_asm_0>
   24c5f:	83 c4 14             	add    $0x14,%esp
   24c62:	b8 01 00 00 00       	mov    $0x1,%eax
   24c67:	5b                   	pop    %ebx
   24c68:	5e                   	pop    %esi
   24c69:	c3                   	ret    
   24c6a:	66 90                	xchg   %ax,%ax
   24c6c:	66 90                	xchg   %ax,%ax
   24c6e:	66 90                	xchg   %ax,%ax

00024c70 <__ref_do_push>:
   24c70:	53                   	push   %ebx
   24c71:	e8 0a f8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24c76:	81 c3 8a a3 02 00    	add    $0x2a38a,%ebx
   24c7c:	83 ec 44             	sub    $0x44,%esp
   24c7f:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
   24c86:	00 
   24c87:	c7 44 24 28 20 00 00 	movl   $0x20,0x28(%esp)
   24c8e:	00 
   24c8f:	c6 44 24 20 02       	movb   $0x2,0x20(%esp)
   24c94:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   24c9a:	8b 42 10             	mov    0x10(%edx),%eax
   24c9d:	83 e8 04             	sub    $0x4,%eax
   24ca0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   24ca4:	89 42 10             	mov    %eax,0x10(%edx)
   24ca7:	8b 44 24 4c          	mov    0x4c(%esp),%eax
   24cab:	89 44 24 24          	mov    %eax,0x24(%esp)
   24caf:	8d 44 24 18          	lea    0x18(%esp),%eax
   24cb3:	50                   	push   %eax
   24cb4:	e8 d7 d8 fe ff       	call   12590 <operand_write>
   24cb9:	83 c4 48             	add    $0x48,%esp
   24cbc:	5b                   	pop    %ebx
   24cbd:	c3                   	ret    
   24cbe:	66 90                	xchg   %ax,%ax

00024cc0 <instr_execute_1op>:
   24cc0:	56                   	push   %esi
   24cc1:	53                   	push   %ebx
   24cc2:	e8 b9 f7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24cc7:	81 c3 39 a3 02 00    	add    $0x2a339,%ebx
   24ccd:	83 ec 04             	sub    $0x4,%esp
   24cd0:	e8 0b 5b 00 00       	call   2a7e0 <set_ref>
   24cd5:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   24cdb:	83 ec 0c             	sub    $0xc,%esp
   24cde:	56                   	push   %esi
   24cdf:	e8 fc d6 fe ff       	call   123e0 <operand_read>
   24ce4:	58                   	pop    %eax
   24ce5:	ff 76 0c             	pushl  0xc(%esi)
   24ce8:	e8 83 ff ff ff       	call   24c70 <__ref_do_push>
   24ced:	83 c4 14             	add    $0x14,%esp
   24cf0:	5b                   	pop    %ebx
   24cf1:	5e                   	pop    %esi
   24cf2:	c3                   	ret    
   24cf3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   24cfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00024d00 <__ref_push_r_v>:
   24d00:	53                   	push   %ebx
   24d01:	e8 7a f7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24d06:	81 c3 fa a2 02 00    	add    $0x2a2fa,%ebx
   24d0c:	83 ec 08             	sub    $0x8,%esp
   24d0f:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   24d15:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   24d1b:	0f b6 08             	movzbl (%eax),%ecx
   24d1e:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   24d24:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   24d2a:	89 48 10             	mov    %ecx,0x10(%eax)
   24d2d:	8b 44 24 14          	mov    0x14(%esp),%eax
   24d31:	89 4a 10             	mov    %ecx,0x10(%edx)
   24d34:	83 e0 07             	and    $0x7,%eax
   24d37:	89 42 04             	mov    %eax,0x4(%edx)
   24d3a:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   24d40:	83 f9 08             	cmp    $0x8,%ecx
   24d43:	74 12                	je     24d57 <__ref_push_r_v+0x57>
   24d45:	83 f9 10             	cmp    $0x10,%ecx
   24d48:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   24d4e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   24d54:	0f 45 c1             	cmovne %ecx,%eax
   24d57:	52                   	push   %edx
   24d58:	6a 01                	push   $0x1
   24d5a:	50                   	push   %eax
   24d5b:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   24d61:	50                   	push   %eax
   24d62:	e8 39 d3 fe ff       	call   120a0 <print_asm_1>
   24d67:	e8 54 ff ff ff       	call   24cc0 <instr_execute_1op>
   24d6c:	83 c4 18             	add    $0x18,%esp
   24d6f:	b8 01 00 00 00       	mov    $0x1,%eax
   24d74:	5b                   	pop    %ebx
   24d75:	c3                   	ret    
   24d76:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   24d7d:	8d 76 00             	lea    0x0(%esi),%esi

00024d80 <__ref_push_rm_v>:
   24d80:	55                   	push   %ebp
   24d81:	57                   	push   %edi
   24d82:	56                   	push   %esi
   24d83:	53                   	push   %ebx
   24d84:	e8 f7 f6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24d89:	81 c3 77 a2 02 00    	add    $0x2a277,%ebx
   24d8f:	83 ec 14             	sub    $0x14,%esp
   24d92:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   24d98:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   24d9e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   24da4:	0f b6 00             	movzbl (%eax),%eax
   24da7:	56                   	push   %esi
   24da8:	89 45 10             	mov    %eax,0x10(%ebp)
   24dab:	89 46 10             	mov    %eax,0x10(%esi)
   24dae:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   24db2:	83 c0 01             	add    $0x1,%eax
   24db5:	50                   	push   %eax
   24db6:	e8 c5 d1 fe ff       	call   11f80 <modrm_rm>
   24dbb:	8b 4d 10             	mov    0x10(%ebp),%ecx
   24dbe:	83 c4 10             	add    $0x10,%esp
   24dc1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   24dc7:	8d 78 01             	lea    0x1(%eax),%edi
   24dca:	89 f8                	mov    %edi,%eax
   24dcc:	0f b6 c0             	movzbl %al,%eax
   24dcf:	83 f9 08             	cmp    $0x8,%ecx
   24dd2:	74 12                	je     24de6 <__ref_push_rm_v+0x66>
   24dd4:	83 f9 10             	cmp    $0x10,%ecx
   24dd7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   24ddd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   24de3:	0f 45 d1             	cmovne %ecx,%edx
   24de6:	56                   	push   %esi
   24de7:	50                   	push   %eax
   24de8:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   24dee:	52                   	push   %edx
   24def:	50                   	push   %eax
   24df0:	e8 ab d2 fe ff       	call   120a0 <print_asm_1>
   24df5:	e8 c6 fe ff ff       	call   24cc0 <instr_execute_1op>
   24dfa:	83 c4 1c             	add    $0x1c,%esp
   24dfd:	89 f8                	mov    %edi,%eax
   24dff:	5b                   	pop    %ebx
   24e00:	5e                   	pop    %esi
   24e01:	5f                   	pop    %edi
   24e02:	5d                   	pop    %ebp
   24e03:	c3                   	ret    
   24e04:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   24e0b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24e0f:	90                   	nop

00024e10 <__ref_push_i_b>:
   24e10:	53                   	push   %ebx
   24e11:	e8 6a f6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24e16:	81 c3 ea a1 02 00    	add    $0x2a1ea,%ebx
   24e1c:	83 ec 08             	sub    $0x8,%esp
   24e1f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   24e23:	8d 51 01             	lea    0x1(%ecx),%edx
   24e26:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   24e2c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   24e33:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   24e39:	89 50 04             	mov    %edx,0x4(%eax)
   24e3c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   24e43:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   24e49:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   24e4d:	50                   	push   %eax
   24e4e:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   24e54:	6a 02                	push   $0x2
   24e56:	50                   	push   %eax
   24e57:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   24e5d:	50                   	push   %eax
   24e5e:	e8 3d d2 fe ff       	call   120a0 <print_asm_1>
   24e63:	e8 58 fe ff ff       	call   24cc0 <instr_execute_1op>
   24e68:	83 c4 18             	add    $0x18,%esp
   24e6b:	b8 02 00 00 00       	mov    $0x2,%eax
   24e70:	5b                   	pop    %ebx
   24e71:	c3                   	ret    
   24e72:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   24e79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00024e80 <__ref_push_i_v>:
   24e80:	57                   	push   %edi
   24e81:	56                   	push   %esi
   24e82:	53                   	push   %ebx
   24e83:	e8 f8 f5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24e88:	81 c3 78 a1 02 00    	add    $0x2a178,%ebx
   24e8e:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   24e94:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   24e9a:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   24ea0:	0f b6 08             	movzbl (%eax),%ecx
   24ea3:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   24ea9:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   24eaf:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   24eb3:	89 48 10             	mov    %ecx,0x10(%eax)
   24eb6:	8b 44 24 10          	mov    0x10(%esp),%eax
   24eba:	89 cf                	mov    %ecx,%edi
   24ebc:	c1 ef 03             	shr    $0x3,%edi
   24ebf:	89 4a 10             	mov    %ecx,0x10(%edx)
   24ec2:	83 c0 01             	add    $0x1,%eax
   24ec5:	83 c7 01             	add    $0x1,%edi
   24ec8:	89 42 04             	mov    %eax,0x4(%edx)
   24ecb:	83 f9 08             	cmp    $0x8,%ecx
   24ece:	74 12                	je     24ee2 <__ref_push_i_v+0x62>
   24ed0:	83 f9 10             	cmp    $0x10,%ecx
   24ed3:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   24ed9:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   24edf:	0f 45 f0             	cmovne %eax,%esi
   24ee2:	8d 83 bd 6a fe ff    	lea    -0x19543(%ebx),%eax
   24ee8:	52                   	push   %edx
   24ee9:	57                   	push   %edi
   24eea:	56                   	push   %esi
   24eeb:	50                   	push   %eax
   24eec:	e8 af d1 fe ff       	call   120a0 <print_asm_1>
   24ef1:	e8 ca fd ff ff       	call   24cc0 <instr_execute_1op>
   24ef6:	83 c4 10             	add    $0x10,%esp
   24ef9:	89 f8                	mov    %edi,%eax
   24efb:	5b                   	pop    %ebx
   24efc:	5e                   	pop    %esi
   24efd:	5f                   	pop    %edi
   24efe:	c3                   	ret    
   24eff:	90                   	nop

00024f00 <__ref_pusha>:
   24f00:	57                   	push   %edi
   24f01:	56                   	push   %esi
   24f02:	53                   	push   %ebx
   24f03:	e8 78 f5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24f08:	81 c3 f8 a0 02 00    	add    $0x2a0f8,%ebx
   24f0e:	e8 cd 58 00 00       	call   2a7e0 <set_ref>
   24f13:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   24f19:	83 ec 0c             	sub    $0xc,%esp
   24f1c:	ff 36                	pushl  (%esi)
   24f1e:	8b 7e 10             	mov    0x10(%esi),%edi
   24f21:	e8 4a fd ff ff       	call   24c70 <__ref_do_push>
   24f26:	58                   	pop    %eax
   24f27:	ff 76 04             	pushl  0x4(%esi)
   24f2a:	e8 41 fd ff ff       	call   24c70 <__ref_do_push>
   24f2f:	5a                   	pop    %edx
   24f30:	ff 76 08             	pushl  0x8(%esi)
   24f33:	e8 38 fd ff ff       	call   24c70 <__ref_do_push>
   24f38:	59                   	pop    %ecx
   24f39:	ff 76 0c             	pushl  0xc(%esi)
   24f3c:	e8 2f fd ff ff       	call   24c70 <__ref_do_push>
   24f41:	89 3c 24             	mov    %edi,(%esp)
   24f44:	e8 27 fd ff ff       	call   24c70 <__ref_do_push>
   24f49:	5f                   	pop    %edi
   24f4a:	ff 76 14             	pushl  0x14(%esi)
   24f4d:	e8 1e fd ff ff       	call   24c70 <__ref_do_push>
   24f52:	58                   	pop    %eax
   24f53:	ff 76 18             	pushl  0x18(%esi)
   24f56:	e8 15 fd ff ff       	call   24c70 <__ref_do_push>
   24f5b:	58                   	pop    %eax
   24f5c:	ff 76 1c             	pushl  0x1c(%esi)
   24f5f:	e8 0c fd ff ff       	call   24c70 <__ref_do_push>
   24f64:	83 c4 0c             	add    $0xc,%esp
   24f67:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   24f6d:	6a 01                	push   $0x1
   24f6f:	50                   	push   %eax
   24f70:	8d 83 c2 6a fe ff    	lea    -0x1953e(%ebx),%eax
   24f76:	50                   	push   %eax
   24f77:	e8 44 d0 fe ff       	call   11fc0 <print_asm_0>
   24f7c:	83 c4 10             	add    $0x10,%esp
   24f7f:	b8 01 00 00 00       	mov    $0x1,%eax
   24f84:	5b                   	pop    %ebx
   24f85:	5e                   	pop    %esi
   24f86:	5f                   	pop    %edi
   24f87:	c3                   	ret    
   24f88:	66 90                	xchg   %ax,%ax
   24f8a:	66 90                	xchg   %ax,%ax
   24f8c:	66 90                	xchg   %ax,%ax
   24f8e:	66 90                	xchg   %ax,%ax

00024f90 <__ref_div_rm2a_b>:
   24f90:	55                   	push   %ebp
   24f91:	57                   	push   %edi
   24f92:	56                   	push   %esi
   24f93:	53                   	push   %ebx
   24f94:	e8 e7 f4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   24f99:	81 c3 67 a0 02 00    	add    $0x2a067,%ebx
   24f9f:	81 ec ac 00 00 00    	sub    $0xac,%esp
   24fa5:	e8 36 58 00 00       	call   2a7e0 <set_ref>
   24faa:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
   24fb1:	00 
   24fb2:	83 ec 0c             	sub    $0xc,%esp
   24fb5:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   24fbc:	00 
   24fbd:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   24fc4:	00 
   24fc5:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   24fc9:	57                   	push   %edi
   24fca:	e8 11 d4 fe ff       	call   123e0 <operand_read>
   24fcf:	c7 44 24 54 08 00 00 	movl   $0x8,0x54(%esp)
   24fd6:	00 
   24fd7:	58                   	pop    %eax
   24fd8:	5a                   	pop    %edx
   24fd9:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   24fdd:	56                   	push   %esi
   24fde:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   24fe5:	83 c0 01             	add    $0x1,%eax
   24fe8:	50                   	push   %eax
   24fe9:	e8 92 cf fe ff       	call   11f80 <modrm_rm>
   24fee:	89 34 24             	mov    %esi,(%esp)
   24ff1:	8d 68 01             	lea    0x1(%eax),%ebp
   24ff4:	e8 e7 d3 fe ff       	call   123e0 <operand_read>
   24ff9:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   24ffd:	31 d2                	xor    %edx,%edx
   24fff:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
   25006:	52                   	push   %edx
   25007:	31 d2                	xor    %edx,%edx
   25009:	50                   	push   %eax
   2500a:	8b 44 24 58          	mov    0x58(%esp),%eax
   2500e:	52                   	push   %edx
   2500f:	50                   	push   %eax
   25010:	e8 1b 52 00 00       	call   2a230 <__ref_alu_div>
   25015:	31 d2                	xor    %edx,%edx
   25017:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   2501b:	83 c4 20             	add    $0x20,%esp
   2501e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   25022:	52                   	push   %edx
   25023:	31 d2                	xor    %edx,%edx
   25025:	50                   	push   %eax
   25026:	8b 44 24 48          	mov    0x48(%esp),%eax
   2502a:	52                   	push   %edx
   2502b:	50                   	push   %eax
   2502c:	e8 7f 52 00 00       	call   2a2b0 <__ref_alu_mod>
   25031:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   25035:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   2503c:	01 00 00 00 
   25040:	89 44 24 74          	mov    %eax,0x74(%esp)
   25044:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   2504b:	00 
   2504c:	c7 84 24 9c 00 00 00 	movl   $0x8,0x9c(%esp)
   25053:	08 00 00 00 
   25057:	c7 44 24 78 08 00 00 	movl   $0x8,0x78(%esp)
   2505e:	00 
   2505f:	c7 44 24 6c 04 00 00 	movl   $0x4,0x6c(%esp)
   25066:	00 
   25067:	c7 84 24 90 00 00 00 	movl   $0x0,0x90(%esp)
   2506e:	00 00 00 00 
   25072:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%esp)
   25079:	59                   	pop    %ecx
   2507a:	8d 44 24 64          	lea    0x64(%esp),%eax
   2507e:	50                   	push   %eax
   2507f:	e8 0c d5 fe ff       	call   12590 <operand_write>
   25084:	58                   	pop    %eax
   25085:	8d 84 24 88 00 00 00 	lea    0x88(%esp),%eax
   2508c:	50                   	push   %eax
   2508d:	e8 fe d4 fe ff       	call   12590 <operand_write>
   25092:	89 e8                	mov    %ebp,%eax
   25094:	89 3c 24             	mov    %edi,(%esp)
   25097:	0f b6 c0             	movzbl %al,%eax
   2509a:	56                   	push   %esi
   2509b:	50                   	push   %eax
   2509c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   250a2:	50                   	push   %eax
   250a3:	8d 83 cd 70 fe ff    	lea    -0x18f33(%ebx),%eax
   250a9:	50                   	push   %eax
   250aa:	e8 f1 d0 fe ff       	call   121a0 <print_asm_2>
   250af:	81 c4 cc 00 00 00    	add    $0xcc,%esp
   250b5:	89 e8                	mov    %ebp,%eax
   250b7:	5b                   	pop    %ebx
   250b8:	5e                   	pop    %esi
   250b9:	5f                   	pop    %edi
   250ba:	5d                   	pop    %ebp
   250bb:	c3                   	ret    
   250bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000250c0 <__ref_div_rm2a_v>:
   250c0:	55                   	push   %ebp
   250c1:	57                   	push   %edi
   250c2:	56                   	push   %esi
   250c3:	53                   	push   %ebx
   250c4:	e8 b7 f3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   250c9:	81 c3 37 9f 02 00    	add    $0x29f37,%ebx
   250cf:	81 ec 9c 00 00 00    	sub    $0x9c,%esp
   250d5:	e8 06 57 00 00       	call   2a7e0 <set_ref>
   250da:	8d 93 84 07 00 00    	lea    0x784(%ebx),%edx
   250e0:	83 ec 0c             	sub    $0xc,%esp
   250e3:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   250ea:	00 
   250eb:	c7 44 24 54 01 00 00 	movl   $0x1,0x54(%esp)
   250f2:	00 
   250f3:	0f b6 02             	movzbl (%edx),%eax
   250f6:	89 54 24 14          	mov    %edx,0x14(%esp)
   250fa:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   25101:	00 
   25102:	89 44 24 40          	mov    %eax,0x40(%esp)
   25106:	89 44 24 64          	mov    %eax,0x64(%esp)
   2510a:	c7 44 24 58 02 00 00 	movl   $0x2,0x58(%esp)
   25111:	00 
   25112:	8d 7c 24 30          	lea    0x30(%esp),%edi
   25116:	57                   	push   %edi
   25117:	e8 c4 d2 fe ff       	call   123e0 <operand_read>
   2511c:	58                   	pop    %eax
   2511d:	8d 74 24 54          	lea    0x54(%esp),%esi
   25121:	56                   	push   %esi
   25122:	e8 b9 d2 fe ff       	call   123e0 <operand_read>
   25127:	8b 54 24 18          	mov    0x18(%esp),%edx
   2512b:	0f b6 02             	movzbl (%edx),%eax
   2512e:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%esp)
   25135:	58                   	pop    %eax
   25136:	5a                   	pop    %edx
   25137:	8d 6c 24 74          	lea    0x74(%esp),%ebp
   2513b:	55                   	push   %ebp
   2513c:	8b 84 24 bc 00 00 00 	mov    0xbc(%esp),%eax
   25143:	83 c0 01             	add    $0x1,%eax
   25146:	50                   	push   %eax
   25147:	e8 34 ce fe ff       	call   11f80 <modrm_rm>
   2514c:	89 2c 24             	mov    %ebp,(%esp)
   2514f:	83 c0 01             	add    $0x1,%eax
   25152:	89 44 24 24          	mov    %eax,0x24(%esp)
   25156:	e8 85 d2 fe ff       	call   123e0 <operand_read>
   2515b:	8b 54 24 18          	mov    0x18(%esp),%edx
   2515f:	0f b6 4c 24 24       	movzbl 0x24(%esp),%ecx
   25164:	0f b6 02             	movzbl (%edx),%eax
   25167:	89 4c 24 28          	mov    %ecx,0x28(%esp)
   2516b:	83 c4 10             	add    $0x10,%esp
   2516e:	3c 10                	cmp    $0x10,%al
   25170:	0f 84 a2 00 00 00    	je     25218 <__ref_div_rm2a_v+0x158>
   25176:	8b 4c 24 30          	mov    0x30(%esp),%ecx
   2517a:	83 ec 0c             	sub    $0xc,%esp
   2517d:	31 d2                	xor    %edx,%edx
   2517f:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   25183:	8b 4c 24 60          	mov    0x60(%esp),%ecx
   25187:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   2518b:	50                   	push   %eax
   2518c:	ff 74 24 1c          	pushl  0x1c(%esp)
   25190:	ff 74 24 1c          	pushl  0x1c(%esp)
   25194:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   2519b:	52                   	push   %edx
   2519c:	50                   	push   %eax
   2519d:	e8 8e 50 00 00       	call   2a230 <__ref_alu_div>
   251a2:	31 d2                	xor    %edx,%edx
   251a4:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   251a8:	83 c4 20             	add    $0x20,%esp
   251ab:	ff 74 24 0c          	pushl  0xc(%esp)
   251af:	ff 74 24 0c          	pushl  0xc(%esp)
   251b3:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   251ba:	52                   	push   %edx
   251bb:	50                   	push   %eax
   251bc:	e8 ef 50 00 00       	call   2a2b0 <__ref_alu_mod>
   251c1:	89 44 24 18          	mov    %eax,0x18(%esp)
   251c5:	58                   	pop    %eax
   251c6:	5a                   	pop    %edx
   251c7:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   251cd:	57                   	push   %edi
   251ce:	56                   	push   %esi
   251cf:	55                   	push   %ebp
   251d0:	ff 74 24 2c          	pushl  0x2c(%esp)
   251d4:	52                   	push   %edx
   251d5:	8d 93 cd 70 fe ff    	lea    -0x18f33(%ebx),%edx
   251db:	52                   	push   %edx
   251dc:	e8 cf d0 fe ff       	call   122b0 <print_asm_3>
   251e1:	83 c4 20             	add    $0x20,%esp
   251e4:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   251e8:	8b 44 24 08          	mov    0x8(%esp),%eax
   251ec:	89 4c 24 30          	mov    %ecx,0x30(%esp)
   251f0:	83 ec 0c             	sub    $0xc,%esp
   251f3:	89 44 24 60          	mov    %eax,0x60(%esp)
   251f7:	57                   	push   %edi
   251f8:	e8 93 d3 fe ff       	call   12590 <operand_write>
   251fd:	89 34 24             	mov    %esi,(%esp)
   25200:	e8 8b d3 fe ff       	call   12590 <operand_write>
   25205:	8b 44 24 24          	mov    0x24(%esp),%eax
   25209:	81 c4 ac 00 00 00    	add    $0xac,%esp
   2520f:	5b                   	pop    %ebx
   25210:	5e                   	pop    %esi
   25211:	5f                   	pop    %edi
   25212:	5d                   	pop    %ebp
   25213:	c3                   	ret    
   25214:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25218:	83 ec 0c             	sub    $0xc,%esp
   2521b:	31 d2                	xor    %edx,%edx
   2521d:	6a 10                	push   $0x10
   2521f:	8b 44 24 64          	mov    0x64(%esp),%eax
   25223:	c1 e0 10             	shl    $0x10,%eax
   25226:	0b 44 24 40          	or     0x40(%esp),%eax
   2522a:	52                   	push   %edx
   2522b:	31 d2                	xor    %edx,%edx
   2522d:	50                   	push   %eax
   2522e:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   25235:	52                   	push   %edx
   25236:	50                   	push   %eax
   25237:	e8 f4 4f 00 00       	call   2a230 <__ref_alu_div>
   2523c:	31 d2                	xor    %edx,%edx
   2523e:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   25242:	83 c4 20             	add    $0x20,%esp
   25245:	8b 44 24 54          	mov    0x54(%esp),%eax
   25249:	c1 e0 10             	shl    $0x10,%eax
   2524c:	0b 44 24 30          	or     0x30(%esp),%eax
   25250:	52                   	push   %edx
   25251:	31 d2                	xor    %edx,%edx
   25253:	50                   	push   %eax
   25254:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   2525b:	52                   	push   %edx
   2525c:	50                   	push   %eax
   2525d:	e8 4e 50 00 00       	call   2a2b0 <__ref_alu_mod>
   25262:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   25268:	89 44 24 18          	mov    %eax,0x18(%esp)
   2526c:	59                   	pop    %ecx
   2526d:	58                   	pop    %eax
   2526e:	57                   	push   %edi
   2526f:	56                   	push   %esi
   25270:	55                   	push   %ebp
   25271:	ff 74 24 2c          	pushl  0x2c(%esp)
   25275:	52                   	push   %edx
   25276:	8d 93 cd 70 fe ff    	lea    -0x18f33(%ebx),%edx
   2527c:	52                   	push   %edx
   2527d:	e8 2e d0 fe ff       	call   122b0 <print_asm_3>
   25282:	83 c4 20             	add    $0x20,%esp
   25285:	8b 44 24 08          	mov    0x8(%esp),%eax
   25289:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   2528d:	e9 5a ff ff ff       	jmp    251ec <__ref_div_rm2a_v+0x12c>
   25292:	66 90                	xchg   %ax,%ax
   25294:	66 90                	xchg   %ax,%ax
   25296:	66 90                	xchg   %ax,%ax
   25298:	66 90                	xchg   %ax,%ax
   2529a:	66 90                	xchg   %ax,%ax
   2529c:	66 90                	xchg   %ax,%ax
   2529e:	66 90                	xchg   %ax,%ax

000252a0 <__ref_lgdt>:
   252a0:	57                   	push   %edi
   252a1:	56                   	push   %esi
   252a2:	53                   	push   %ebx
   252a3:	e8 d8 f1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   252a8:	81 c3 58 9d 02 00    	add    $0x29d58,%ebx
   252ae:	83 ec 70             	sub    $0x70,%esp
   252b1:	e8 2a 55 00 00       	call   2a7e0 <set_ref>
   252b6:	c7 44 24 14 20 00 00 	movl   $0x20,0x14(%esp)
   252bd:	00 
   252be:	83 ec 08             	sub    $0x8,%esp
   252c1:	8d 7c 24 0c          	lea    0xc(%esp),%edi
   252c5:	57                   	push   %edi
   252c6:	8b 84 24 8c 00 00 00 	mov    0x8c(%esp),%eax
   252cd:	83 c0 01             	add    $0x1,%eax
   252d0:	50                   	push   %eax
   252d1:	e8 aa cc fe ff       	call   11f80 <modrm_rm>
   252d6:	89 3c 24             	mov    %edi,(%esp)
   252d9:	89 c6                	mov    %eax,%esi
   252db:	e8 00 d1 fe ff       	call   123e0 <operand_read>
   252e0:	8d 46 01             	lea    0x1(%esi),%eax
   252e3:	57                   	push   %edi
   252e4:	0f b6 c0             	movzbl %al,%eax
   252e7:	50                   	push   %eax
   252e8:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   252ee:	50                   	push   %eax
   252ef:	8d 83 1d 6b fe ff    	lea    -0x194e3(%ebx),%eax
   252f5:	50                   	push   %eax
   252f6:	e8 a5 cd fe ff       	call   120a0 <print_asm_1>
   252fb:	8b 44 24 28          	mov    0x28(%esp),%eax
   252ff:	c6 44 24 50 01       	movb   $0x1,0x50(%esp)
   25304:	c7 44 24 48 02 00 00 	movl   $0x2,0x48(%esp)
   2530b:	00 
   2530c:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   25310:	c7 44 24 58 10 00 00 	movl   $0x10,0x58(%esp)
   25317:	00 
   25318:	83 c4 14             	add    $0x14,%esp
   2531b:	8d 44 24 34          	lea    0x34(%esp),%eax
   2531f:	50                   	push   %eax
   25320:	e8 bb d0 fe ff       	call   123e0 <operand_read>
   25325:	8b 44 24 18          	mov    0x18(%esp),%eax
   25329:	c6 44 24 64 01       	movb   $0x1,0x64(%esp)
   2532e:	c7 44 24 5c 02 00 00 	movl   $0x2,0x5c(%esp)
   25335:	00 
   25336:	83 c0 02             	add    $0x2,%eax
   25339:	c7 44 24 6c 20 00 00 	movl   $0x20,0x6c(%esp)
   25340:	00 
   25341:	89 44 24 60          	mov    %eax,0x60(%esp)
   25345:	58                   	pop    %eax
   25346:	8d 44 24 58          	lea    0x58(%esp),%eax
   2534a:	50                   	push   %eax
   2534b:	e8 90 d0 fe ff       	call   123e0 <operand_read>
   25350:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   25356:	8b 54 24 44          	mov    0x44(%esp),%edx
   2535a:	66 89 50 28          	mov    %dx,0x28(%eax)
   2535e:	8b 54 24 68          	mov    0x68(%esp),%edx
   25362:	89 50 2c             	mov    %edx,0x2c(%eax)
   25365:	83 ec 80             	sub    $0xffffff80,%esp
   25368:	8d 46 01             	lea    0x1(%esi),%eax
   2536b:	5b                   	pop    %ebx
   2536c:	5e                   	pop    %esi
   2536d:	5f                   	pop    %edi
   2536e:	c3                   	ret    
   2536f:	90                   	nop

00025370 <__ref_lidt>:
   25370:	57                   	push   %edi
   25371:	56                   	push   %esi
   25372:	53                   	push   %ebx
   25373:	e8 08 f1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25378:	81 c3 88 9c 02 00    	add    $0x29c88,%ebx
   2537e:	83 ec 70             	sub    $0x70,%esp
   25381:	e8 5a 54 00 00       	call   2a7e0 <set_ref>
   25386:	c7 44 24 14 20 00 00 	movl   $0x20,0x14(%esp)
   2538d:	00 
   2538e:	83 ec 08             	sub    $0x8,%esp
   25391:	8d 7c 24 0c          	lea    0xc(%esp),%edi
   25395:	57                   	push   %edi
   25396:	8b 84 24 8c 00 00 00 	mov    0x8c(%esp),%eax
   2539d:	83 c0 01             	add    $0x1,%eax
   253a0:	50                   	push   %eax
   253a1:	e8 da cb fe ff       	call   11f80 <modrm_rm>
   253a6:	89 3c 24             	mov    %edi,(%esp)
   253a9:	89 c6                	mov    %eax,%esi
   253ab:	e8 30 d0 fe ff       	call   123e0 <operand_read>
   253b0:	8d 46 01             	lea    0x1(%esi),%eax
   253b3:	57                   	push   %edi
   253b4:	0f b6 c0             	movzbl %al,%eax
   253b7:	50                   	push   %eax
   253b8:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   253be:	50                   	push   %eax
   253bf:	8d 83 b4 6a fe ff    	lea    -0x1954c(%ebx),%eax
   253c5:	50                   	push   %eax
   253c6:	e8 d5 cc fe ff       	call   120a0 <print_asm_1>
   253cb:	8b 44 24 28          	mov    0x28(%esp),%eax
   253cf:	c7 44 24 48 02 00 00 	movl   $0x2,0x48(%esp)
   253d6:	00 
   253d7:	c6 44 24 50 03       	movb   $0x3,0x50(%esp)
   253dc:	89 44 24 4c          	mov    %eax,0x4c(%esp)
   253e0:	c7 44 24 58 10 00 00 	movl   $0x10,0x58(%esp)
   253e7:	00 
   253e8:	83 c4 14             	add    $0x14,%esp
   253eb:	8d 44 24 34          	lea    0x34(%esp),%eax
   253ef:	50                   	push   %eax
   253f0:	e8 eb cf fe ff       	call   123e0 <operand_read>
   253f5:	8b 44 24 18          	mov    0x18(%esp),%eax
   253f9:	c7 44 24 5c 02 00 00 	movl   $0x2,0x5c(%esp)
   25400:	00 
   25401:	c6 44 24 64 03       	movb   $0x3,0x64(%esp)
   25406:	83 c0 02             	add    $0x2,%eax
   25409:	c7 44 24 6c 20 00 00 	movl   $0x20,0x6c(%esp)
   25410:	00 
   25411:	89 44 24 60          	mov    %eax,0x60(%esp)
   25415:	58                   	pop    %eax
   25416:	8d 44 24 58          	lea    0x58(%esp),%eax
   2541a:	50                   	push   %eax
   2541b:	e8 c0 cf fe ff       	call   123e0 <operand_read>
   25420:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   25426:	8b 54 24 44          	mov    0x44(%esp),%edx
   2542a:	66 89 90 98 00 00 00 	mov    %dx,0x98(%eax)
   25431:	8b 54 24 68          	mov    0x68(%esp),%edx
   25435:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)
   2543b:	83 ec 80             	sub    $0xffffff80,%esp
   2543e:	8d 46 01             	lea    0x1(%esi),%eax
   25441:	5b                   	pop    %ebx
   25442:	5e                   	pop    %esi
   25443:	5f                   	pop    %edi
   25444:	c3                   	ret    
   25445:	66 90                	xchg   %ax,%ax
   25447:	66 90                	xchg   %ax,%ax
   25449:	66 90                	xchg   %ax,%ax
   2544b:	66 90                	xchg   %ax,%ax
   2544d:	66 90                	xchg   %ax,%ax
   2544f:	90                   	nop

00025450 <sign_ext.part.0>:
   25450:	53                   	push   %ebx
   25451:	e8 2a f0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25456:	81 c3 aa 9b 02 00    	add    $0x29baa,%ebx
   2545c:	83 ec 08             	sub    $0x8,%esp
   2545f:	8d 83 74 6d fe ff    	lea    -0x1928c(%ebx),%eax
   25465:	50                   	push   %eax
   25466:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   2546c:	6a 2e                	push   $0x2e
   2546e:	50                   	push   %eax
   2546f:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   25475:	50                   	push   %eax
   25476:	e8 95 ee fd ff       	call   4310 <__assert_fail@plt>
   2547b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2547f:	90                   	nop

00025480 <instr_execute_2op>:
   25480:	55                   	push   %ebp
   25481:	57                   	push   %edi
   25482:	56                   	push   %esi
   25483:	53                   	push   %ebx
   25484:	e8 f7 ef fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25489:	81 c3 77 9b 02 00    	add    $0x29b77,%ebx
   2548f:	83 ec 0c             	sub    $0xc,%esp
   25492:	e8 49 53 00 00       	call   2a7e0 <set_ref>
   25497:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2549d:	83 ec 0c             	sub    $0xc,%esp
   254a0:	56                   	push   %esi
   254a1:	e8 3a cf fe ff       	call   123e0 <operand_read>
   254a6:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   254ac:	89 2c 24             	mov    %ebp,(%esp)
   254af:	e8 2c cf fe ff       	call   123e0 <operand_read>
   254b4:	8b 55 10             	mov    0x10(%ebp),%edx
   254b7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   254bd:	83 c4 10             	add    $0x10,%esp
   254c0:	8d 4a f8             	lea    -0x8(%edx),%ecx
   254c3:	0f b6 38             	movzbl (%eax),%edi
   254c6:	8b 45 0c             	mov    0xc(%ebp),%eax
   254c9:	83 e1 f7             	and    $0xfffffff7,%ecx
   254cc:	74 05                	je     254d3 <instr_execute_2op+0x53>
   254ce:	83 fa 20             	cmp    $0x20,%edx
   254d1:	75 52                	jne    25525 <instr_execute_2op+0xa5>
   254d3:	83 fa 08             	cmp    $0x8,%edx
   254d6:	74 40                	je     25518 <instr_execute_2op+0x98>
   254d8:	0f bf c8             	movswl %ax,%ecx
   254db:	83 fa 10             	cmp    $0x10,%edx
   254de:	0f 44 c1             	cmove  %ecx,%eax
   254e1:	8b 4e 10             	mov    0x10(%esi),%ecx
   254e4:	8b 56 0c             	mov    0xc(%esi),%edx
   254e7:	8d 71 f8             	lea    -0x8(%ecx),%esi
   254ea:	83 e6 f7             	and    $0xfffffff7,%esi
   254ed:	74 05                	je     254f4 <instr_execute_2op+0x74>
   254ef:	83 f9 20             	cmp    $0x20,%ecx
   254f2:	75 31                	jne    25525 <instr_execute_2op+0xa5>
   254f4:	83 f9 08             	cmp    $0x8,%ecx
   254f7:	74 27                	je     25520 <instr_execute_2op+0xa0>
   254f9:	0f bf f2             	movswl %dx,%esi
   254fc:	83 f9 10             	cmp    $0x10,%ecx
   254ff:	0f 44 d6             	cmove  %esi,%edx
   25502:	83 ec 04             	sub    $0x4,%esp
   25505:	57                   	push   %edi
   25506:	50                   	push   %eax
   25507:	52                   	push   %edx
   25508:	e8 f3 49 00 00       	call   29f00 <__ref_alu_sub>
   2550d:	83 c4 1c             	add    $0x1c,%esp
   25510:	5b                   	pop    %ebx
   25511:	5e                   	pop    %esi
   25512:	5f                   	pop    %edi
   25513:	5d                   	pop    %ebp
   25514:	c3                   	ret    
   25515:	8d 76 00             	lea    0x0(%esi),%esi
   25518:	0f be c0             	movsbl %al,%eax
   2551b:	eb c4                	jmp    254e1 <instr_execute_2op+0x61>
   2551d:	8d 76 00             	lea    0x0(%esi),%esi
   25520:	0f be d2             	movsbl %dl,%edx
   25523:	eb dd                	jmp    25502 <instr_execute_2op+0x82>
   25525:	e8 26 ff ff ff       	call   25450 <sign_ext.part.0>
   2552a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00025530 <__ref_cmp_r2rm_b>:
   25530:	55                   	push   %ebp
   25531:	57                   	push   %edi
   25532:	56                   	push   %esi
   25533:	53                   	push   %ebx
   25534:	e8 47 ef fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25539:	81 c3 c7 9a 02 00    	add    $0x29ac7,%ebx
   2553f:	83 ec 10             	sub    $0x10,%esp
   25542:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   25548:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2554e:	56                   	push   %esi
   2554f:	57                   	push   %edi
   25550:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   25554:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   2555b:	83 c0 01             	add    $0x1,%eax
   2555e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   25565:	50                   	push   %eax
   25566:	e8 35 c9 fe ff       	call   11ea0 <modrm_r_rm>
   2556b:	8b 4e 10             	mov    0x10(%esi),%ecx
   2556e:	83 c4 10             	add    $0x10,%esp
   25571:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   25577:	8d 68 01             	lea    0x1(%eax),%ebp
   2557a:	89 e8                	mov    %ebp,%eax
   2557c:	0f b6 c0             	movzbl %al,%eax
   2557f:	83 f9 08             	cmp    $0x8,%ecx
   25582:	74 12                	je     25596 <__ref_cmp_r2rm_b+0x66>
   25584:	83 f9 10             	cmp    $0x10,%ecx
   25587:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2558d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   25593:	0f 45 d1             	cmovne %ecx,%edx
   25596:	83 ec 0c             	sub    $0xc,%esp
   25599:	56                   	push   %esi
   2559a:	57                   	push   %edi
   2559b:	50                   	push   %eax
   2559c:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   255a2:	52                   	push   %edx
   255a3:	50                   	push   %eax
   255a4:	e8 f7 cb fe ff       	call   121a0 <print_asm_2>
   255a9:	83 c4 20             	add    $0x20,%esp
   255ac:	e8 cf fe ff ff       	call   25480 <instr_execute_2op>
   255b1:	83 c4 0c             	add    $0xc,%esp
   255b4:	89 e8                	mov    %ebp,%eax
   255b6:	5b                   	pop    %ebx
   255b7:	5e                   	pop    %esi
   255b8:	5f                   	pop    %edi
   255b9:	5d                   	pop    %ebp
   255ba:	c3                   	ret    
   255bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   255bf:	90                   	nop

000255c0 <__ref_cmp_r2rm_v>:
   255c0:	55                   	push   %ebp
   255c1:	57                   	push   %edi
   255c2:	56                   	push   %esi
   255c3:	53                   	push   %ebx
   255c4:	e8 b7 ee fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   255c9:	81 c3 37 9a 02 00    	add    $0x29a37,%ebx
   255cf:	83 ec 10             	sub    $0x10,%esp
   255d2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   255d8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   255de:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   255e4:	0f b6 00             	movzbl (%eax),%eax
   255e7:	56                   	push   %esi
   255e8:	57                   	push   %edi
   255e9:	89 46 10             	mov    %eax,0x10(%esi)
   255ec:	89 47 10             	mov    %eax,0x10(%edi)
   255ef:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   255f3:	83 c0 01             	add    $0x1,%eax
   255f6:	50                   	push   %eax
   255f7:	e8 a4 c8 fe ff       	call   11ea0 <modrm_r_rm>
   255fc:	8b 4e 10             	mov    0x10(%esi),%ecx
   255ff:	83 c4 10             	add    $0x10,%esp
   25602:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   25608:	8d 68 01             	lea    0x1(%eax),%ebp
   2560b:	89 e8                	mov    %ebp,%eax
   2560d:	0f b6 c0             	movzbl %al,%eax
   25610:	83 f9 08             	cmp    $0x8,%ecx
   25613:	74 12                	je     25627 <__ref_cmp_r2rm_v+0x67>
   25615:	83 f9 10             	cmp    $0x10,%ecx
   25618:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2561e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   25624:	0f 45 d1             	cmovne %ecx,%edx
   25627:	83 ec 0c             	sub    $0xc,%esp
   2562a:	56                   	push   %esi
   2562b:	57                   	push   %edi
   2562c:	50                   	push   %eax
   2562d:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   25633:	52                   	push   %edx
   25634:	50                   	push   %eax
   25635:	e8 66 cb fe ff       	call   121a0 <print_asm_2>
   2563a:	83 c4 20             	add    $0x20,%esp
   2563d:	e8 3e fe ff ff       	call   25480 <instr_execute_2op>
   25642:	83 c4 0c             	add    $0xc,%esp
   25645:	89 e8                	mov    %ebp,%eax
   25647:	5b                   	pop    %ebx
   25648:	5e                   	pop    %esi
   25649:	5f                   	pop    %edi
   2564a:	5d                   	pop    %ebp
   2564b:	c3                   	ret    
   2564c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00025650 <__ref_cmp_rm2r_b>:
   25650:	55                   	push   %ebp
   25651:	57                   	push   %edi
   25652:	56                   	push   %esi
   25653:	53                   	push   %ebx
   25654:	e8 27 ee fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25659:	81 c3 a7 99 02 00    	add    $0x299a7,%ebx
   2565f:	83 ec 10             	sub    $0x10,%esp
   25662:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   25668:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2566e:	57                   	push   %edi
   2566f:	56                   	push   %esi
   25670:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   25674:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   2567b:	83 c0 01             	add    $0x1,%eax
   2567e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   25685:	50                   	push   %eax
   25686:	e8 15 c8 fe ff       	call   11ea0 <modrm_r_rm>
   2568b:	8b 4e 10             	mov    0x10(%esi),%ecx
   2568e:	83 c4 10             	add    $0x10,%esp
   25691:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   25697:	8d 68 01             	lea    0x1(%eax),%ebp
   2569a:	89 e8                	mov    %ebp,%eax
   2569c:	0f b6 c0             	movzbl %al,%eax
   2569f:	83 f9 08             	cmp    $0x8,%ecx
   256a2:	74 12                	je     256b6 <__ref_cmp_rm2r_b+0x66>
   256a4:	83 f9 10             	cmp    $0x10,%ecx
   256a7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   256ad:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   256b3:	0f 45 d1             	cmovne %ecx,%edx
   256b6:	83 ec 0c             	sub    $0xc,%esp
   256b9:	56                   	push   %esi
   256ba:	57                   	push   %edi
   256bb:	50                   	push   %eax
   256bc:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   256c2:	52                   	push   %edx
   256c3:	50                   	push   %eax
   256c4:	e8 d7 ca fe ff       	call   121a0 <print_asm_2>
   256c9:	83 c4 20             	add    $0x20,%esp
   256cc:	e8 af fd ff ff       	call   25480 <instr_execute_2op>
   256d1:	83 c4 0c             	add    $0xc,%esp
   256d4:	89 e8                	mov    %ebp,%eax
   256d6:	5b                   	pop    %ebx
   256d7:	5e                   	pop    %esi
   256d8:	5f                   	pop    %edi
   256d9:	5d                   	pop    %ebp
   256da:	c3                   	ret    
   256db:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   256df:	90                   	nop

000256e0 <__ref_cmp_rm2r_v>:
   256e0:	55                   	push   %ebp
   256e1:	57                   	push   %edi
   256e2:	56                   	push   %esi
   256e3:	53                   	push   %ebx
   256e4:	e8 97 ed fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   256e9:	81 c3 17 99 02 00    	add    $0x29917,%ebx
   256ef:	83 ec 10             	sub    $0x10,%esp
   256f2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   256f8:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   256fe:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   25704:	0f b6 00             	movzbl (%eax),%eax
   25707:	57                   	push   %edi
   25708:	89 46 10             	mov    %eax,0x10(%esi)
   2570b:	56                   	push   %esi
   2570c:	89 47 10             	mov    %eax,0x10(%edi)
   2570f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   25713:	83 c0 01             	add    $0x1,%eax
   25716:	50                   	push   %eax
   25717:	e8 84 c7 fe ff       	call   11ea0 <modrm_r_rm>
   2571c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2571f:	83 c4 10             	add    $0x10,%esp
   25722:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   25728:	8d 68 01             	lea    0x1(%eax),%ebp
   2572b:	89 e8                	mov    %ebp,%eax
   2572d:	0f b6 c0             	movzbl %al,%eax
   25730:	83 f9 08             	cmp    $0x8,%ecx
   25733:	74 12                	je     25747 <__ref_cmp_rm2r_v+0x67>
   25735:	83 f9 10             	cmp    $0x10,%ecx
   25738:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2573e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   25744:	0f 45 d1             	cmovne %ecx,%edx
   25747:	83 ec 0c             	sub    $0xc,%esp
   2574a:	56                   	push   %esi
   2574b:	57                   	push   %edi
   2574c:	50                   	push   %eax
   2574d:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   25753:	52                   	push   %edx
   25754:	50                   	push   %eax
   25755:	e8 46 ca fe ff       	call   121a0 <print_asm_2>
   2575a:	83 c4 20             	add    $0x20,%esp
   2575d:	e8 1e fd ff ff       	call   25480 <instr_execute_2op>
   25762:	83 c4 0c             	add    $0xc,%esp
   25765:	89 e8                	mov    %ebp,%eax
   25767:	5b                   	pop    %ebx
   25768:	5e                   	pop    %esi
   25769:	5f                   	pop    %edi
   2576a:	5d                   	pop    %ebp
   2576b:	c3                   	ret    
   2576c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00025770 <__ref_cmp_i2rm_b>:
   25770:	55                   	push   %ebp
   25771:	57                   	push   %edi
   25772:	56                   	push   %esi
   25773:	53                   	push   %ebx
   25774:	e8 07 ed fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25779:	81 c3 87 98 02 00    	add    $0x29887,%ebx
   2577f:	83 ec 24             	sub    $0x24,%esp
   25782:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   25786:	8d 45 01             	lea    0x1(%ebp),%eax
   25789:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   2578f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   25795:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   2579c:	52                   	push   %edx
   2579d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   257a4:	89 54 24 18          	mov    %edx,0x18(%esp)
   257a8:	50                   	push   %eax
   257a9:	e8 d2 c7 fe ff       	call   11f80 <modrm_rm>
   257ae:	8b 77 10             	mov    0x10(%edi),%esi
   257b1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   257b5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   257b9:	83 c0 01             	add    $0x1,%eax
   257bc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   257c2:	83 c4 10             	add    $0x10,%esp
   257c5:	01 c5                	add    %eax,%ebp
   257c7:	c1 ee 03             	shr    $0x3,%esi
   257ca:	89 6f 04             	mov    %ebp,0x4(%edi)
   257cd:	01 c6                	add    %eax,%esi
   257cf:	8b 6a 10             	mov    0x10(%edx),%ebp
   257d2:	89 f0                	mov    %esi,%eax
   257d4:	0f b6 c8             	movzbl %al,%ecx
   257d7:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   257dd:	83 fd 08             	cmp    $0x8,%ebp
   257e0:	74 12                	je     257f4 <__ref_cmp_i2rm_b+0x84>
   257e2:	83 fd 10             	cmp    $0x10,%ebp
   257e5:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   257eb:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   257f1:	0f 45 c5             	cmovne %ebp,%eax
   257f4:	83 ec 0c             	sub    $0xc,%esp
   257f7:	52                   	push   %edx
   257f8:	57                   	push   %edi
   257f9:	51                   	push   %ecx
   257fa:	50                   	push   %eax
   257fb:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   25801:	50                   	push   %eax
   25802:	e8 99 c9 fe ff       	call   121a0 <print_asm_2>
   25807:	83 c4 20             	add    $0x20,%esp
   2580a:	e8 71 fc ff ff       	call   25480 <instr_execute_2op>
   2580f:	83 c4 1c             	add    $0x1c,%esp
   25812:	89 f0                	mov    %esi,%eax
   25814:	5b                   	pop    %ebx
   25815:	5e                   	pop    %esi
   25816:	5f                   	pop    %edi
   25817:	5d                   	pop    %ebp
   25818:	c3                   	ret    
   25819:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00025820 <__ref_cmp_i2rm_v>:
   25820:	55                   	push   %ebp
   25821:	57                   	push   %edi
   25822:	56                   	push   %esi
   25823:	53                   	push   %ebx
   25824:	e8 57 ec fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25829:	81 c3 d7 97 02 00    	add    $0x297d7,%ebx
   2582f:	83 ec 24             	sub    $0x24,%esp
   25832:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   25836:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2583c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   25842:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   25848:	0f b6 00             	movzbl (%eax),%eax
   2584b:	89 42 10             	mov    %eax,0x10(%edx)
   2584e:	52                   	push   %edx
   2584f:	89 47 10             	mov    %eax,0x10(%edi)
   25852:	8d 45 01             	lea    0x1(%ebp),%eax
   25855:	89 54 24 18          	mov    %edx,0x18(%esp)
   25859:	50                   	push   %eax
   2585a:	e8 21 c7 fe ff       	call   11f80 <modrm_rm>
   2585f:	8b 77 10             	mov    0x10(%edi),%esi
   25862:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   25866:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   2586a:	83 c0 01             	add    $0x1,%eax
   2586d:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   25873:	83 c4 10             	add    $0x10,%esp
   25876:	01 c5                	add    %eax,%ebp
   25878:	c1 ee 03             	shr    $0x3,%esi
   2587b:	89 6f 04             	mov    %ebp,0x4(%edi)
   2587e:	01 c6                	add    %eax,%esi
   25880:	8b 6a 10             	mov    0x10(%edx),%ebp
   25883:	89 f0                	mov    %esi,%eax
   25885:	0f b6 c8             	movzbl %al,%ecx
   25888:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2588e:	83 fd 08             	cmp    $0x8,%ebp
   25891:	74 12                	je     258a5 <__ref_cmp_i2rm_v+0x85>
   25893:	83 fd 10             	cmp    $0x10,%ebp
   25896:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2589c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   258a2:	0f 45 c5             	cmovne %ebp,%eax
   258a5:	83 ec 0c             	sub    $0xc,%esp
   258a8:	52                   	push   %edx
   258a9:	57                   	push   %edi
   258aa:	51                   	push   %ecx
   258ab:	50                   	push   %eax
   258ac:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   258b2:	50                   	push   %eax
   258b3:	e8 e8 c8 fe ff       	call   121a0 <print_asm_2>
   258b8:	83 c4 20             	add    $0x20,%esp
   258bb:	e8 c0 fb ff ff       	call   25480 <instr_execute_2op>
   258c0:	83 c4 1c             	add    $0x1c,%esp
   258c3:	89 f0                	mov    %esi,%eax
   258c5:	5b                   	pop    %ebx
   258c6:	5e                   	pop    %esi
   258c7:	5f                   	pop    %edi
   258c8:	5d                   	pop    %ebp
   258c9:	c3                   	ret    
   258ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000258d0 <__ref_cmp_i2rm_bv>:
   258d0:	55                   	push   %ebp
   258d1:	57                   	push   %edi
   258d2:	56                   	push   %esi
   258d3:	53                   	push   %ebx
   258d4:	e8 a7 eb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   258d9:	81 c3 27 97 02 00    	add    $0x29727,%ebx
   258df:	83 ec 24             	sub    $0x24,%esp
   258e2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   258e6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   258ec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   258f2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   258f8:	0f b6 00             	movzbl (%eax),%eax
   258fb:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   25902:	89 42 10             	mov    %eax,0x10(%edx)
   25905:	8d 45 01             	lea    0x1(%ebp),%eax
   25908:	52                   	push   %edx
   25909:	89 54 24 18          	mov    %edx,0x18(%esp)
   2590d:	50                   	push   %eax
   2590e:	e8 6d c6 fe ff       	call   11f80 <modrm_rm>
   25913:	8b 77 10             	mov    0x10(%edi),%esi
   25916:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   2591a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   2591e:	83 c0 01             	add    $0x1,%eax
   25921:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   25927:	83 c4 10             	add    $0x10,%esp
   2592a:	01 c5                	add    %eax,%ebp
   2592c:	c1 ee 03             	shr    $0x3,%esi
   2592f:	89 6f 04             	mov    %ebp,0x4(%edi)
   25932:	01 c6                	add    %eax,%esi
   25934:	8b 6a 10             	mov    0x10(%edx),%ebp
   25937:	89 f0                	mov    %esi,%eax
   25939:	0f b6 c8             	movzbl %al,%ecx
   2593c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   25942:	83 fd 08             	cmp    $0x8,%ebp
   25945:	74 12                	je     25959 <__ref_cmp_i2rm_bv+0x89>
   25947:	83 fd 10             	cmp    $0x10,%ebp
   2594a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   25950:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   25956:	0f 45 c5             	cmovne %ebp,%eax
   25959:	83 ec 0c             	sub    $0xc,%esp
   2595c:	52                   	push   %edx
   2595d:	57                   	push   %edi
   2595e:	51                   	push   %ecx
   2595f:	50                   	push   %eax
   25960:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   25966:	50                   	push   %eax
   25967:	e8 34 c8 fe ff       	call   121a0 <print_asm_2>
   2596c:	83 c4 20             	add    $0x20,%esp
   2596f:	e8 0c fb ff ff       	call   25480 <instr_execute_2op>
   25974:	83 c4 1c             	add    $0x1c,%esp
   25977:	89 f0                	mov    %esi,%eax
   25979:	5b                   	pop    %ebx
   2597a:	5e                   	pop    %esi
   2597b:	5f                   	pop    %edi
   2597c:	5d                   	pop    %ebp
   2597d:	c3                   	ret    
   2597e:	66 90                	xchg   %ax,%ax

00025980 <__ref_cmp_i2a_b>:
   25980:	53                   	push   %ebx
   25981:	e8 fa ea fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25986:	81 c3 7a 96 02 00    	add    $0x2967a,%ebx
   2598c:	83 ec 14             	sub    $0x14,%esp
   2598f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   25993:	83 c1 01             	add    $0x1,%ecx
   25996:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   2599c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   259a2:	89 48 04             	mov    %ecx,0x4(%eax)
   259a5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   259ac:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   259b3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   259b9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   259bd:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   259c3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   259ca:	52                   	push   %edx
   259cb:	50                   	push   %eax
   259cc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   259d2:	6a 02                	push   $0x2
   259d4:	50                   	push   %eax
   259d5:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   259db:	50                   	push   %eax
   259dc:	e8 bf c7 fe ff       	call   121a0 <print_asm_2>
   259e1:	83 c4 20             	add    $0x20,%esp
   259e4:	e8 97 fa ff ff       	call   25480 <instr_execute_2op>
   259e9:	83 c4 08             	add    $0x8,%esp
   259ec:	b8 02 00 00 00       	mov    $0x2,%eax
   259f1:	5b                   	pop    %ebx
   259f2:	c3                   	ret    
   259f3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   259fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00025a00 <__ref_cmp_i2a_v>:
   25a00:	55                   	push   %ebp
   25a01:	57                   	push   %edi
   25a02:	56                   	push   %esi
   25a03:	53                   	push   %ebx
   25a04:	e8 77 ea fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25a09:	81 c3 f7 95 02 00    	add    $0x295f7,%ebx
   25a0f:	83 ec 0c             	sub    $0xc,%esp
   25a12:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   25a18:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   25a1e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   25a24:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   25a2a:	0f b6 08             	movzbl (%eax),%ecx
   25a2d:	8b 44 24 20          	mov    0x20(%esp),%eax
   25a31:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   25a37:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   25a3b:	89 cf                	mov    %ecx,%edi
   25a3d:	83 c0 01             	add    $0x1,%eax
   25a40:	89 4d 10             	mov    %ecx,0x10(%ebp)
   25a43:	c1 ef 03             	shr    $0x3,%edi
   25a46:	89 4a 10             	mov    %ecx,0x10(%edx)
   25a49:	89 42 04             	mov    %eax,0x4(%edx)
   25a4c:	83 c7 01             	add    $0x1,%edi
   25a4f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   25a56:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   25a5d:	83 f9 08             	cmp    $0x8,%ecx
   25a60:	74 12                	je     25a74 <__ref_cmp_i2a_v+0x74>
   25a62:	83 f9 10             	cmp    $0x10,%ecx
   25a65:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   25a6b:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   25a71:	0f 45 f0             	cmovne %eax,%esi
   25a74:	83 ec 0c             	sub    $0xc,%esp
   25a77:	8d 83 22 6b fe ff    	lea    -0x194de(%ebx),%eax
   25a7d:	55                   	push   %ebp
   25a7e:	52                   	push   %edx
   25a7f:	57                   	push   %edi
   25a80:	56                   	push   %esi
   25a81:	50                   	push   %eax
   25a82:	e8 19 c7 fe ff       	call   121a0 <print_asm_2>
   25a87:	83 c4 20             	add    $0x20,%esp
   25a8a:	e8 f1 f9 ff ff       	call   25480 <instr_execute_2op>
   25a8f:	83 c4 0c             	add    $0xc,%esp
   25a92:	89 f8                	mov    %edi,%eax
   25a94:	5b                   	pop    %ebx
   25a95:	5e                   	pop    %esi
   25a96:	5f                   	pop    %edi
   25a97:	5d                   	pop    %ebp
   25a98:	c3                   	ret    
   25a99:	66 90                	xchg   %ax,%ax
   25a9b:	66 90                	xchg   %ax,%ax
   25a9d:	66 90                	xchg   %ax,%ax
   25a9f:	90                   	nop

00025aa0 <instr_execute_1op>:
   25aa0:	56                   	push   %esi
   25aa1:	53                   	push   %ebx
   25aa2:	e8 d9 e9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25aa7:	81 c3 59 95 02 00    	add    $0x29559,%ebx
   25aad:	83 ec 04             	sub    $0x4,%esp
   25ab0:	e8 2b 4d 00 00       	call   2a7e0 <set_ref>
   25ab5:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   25abb:	83 ec 0c             	sub    $0xc,%esp
   25abe:	56                   	push   %esi
   25abf:	e8 1c c9 fe ff       	call   123e0 <operand_read>
   25ac4:	89 34 24             	mov    %esi,(%esp)
   25ac7:	f7 56 0c             	notl   0xc(%esi)
   25aca:	e8 c1 ca fe ff       	call   12590 <operand_write>
   25acf:	83 c4 14             	add    $0x14,%esp
   25ad2:	5b                   	pop    %ebx
   25ad3:	5e                   	pop    %esi
   25ad4:	c3                   	ret    
   25ad5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25adc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00025ae0 <__ref_not_rm_b>:
   25ae0:	55                   	push   %ebp
   25ae1:	57                   	push   %edi
   25ae2:	56                   	push   %esi
   25ae3:	53                   	push   %ebx
   25ae4:	e8 97 e9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25ae9:	81 c3 17 95 02 00    	add    $0x29517,%ebx
   25aef:	83 ec 14             	sub    $0x14,%esp
   25af2:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   25af8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   25afe:	56                   	push   %esi
   25aff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   25b03:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   25b0a:	83 c0 01             	add    $0x1,%eax
   25b0d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   25b14:	50                   	push   %eax
   25b15:	e8 66 c4 fe ff       	call   11f80 <modrm_rm>
   25b1a:	8b 4d 10             	mov    0x10(%ebp),%ecx
   25b1d:	83 c4 10             	add    $0x10,%esp
   25b20:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   25b26:	8d 78 01             	lea    0x1(%eax),%edi
   25b29:	89 f8                	mov    %edi,%eax
   25b2b:	0f b6 c0             	movzbl %al,%eax
   25b2e:	83 f9 08             	cmp    $0x8,%ecx
   25b31:	74 12                	je     25b45 <__ref_not_rm_b+0x65>
   25b33:	83 f9 10             	cmp    $0x10,%ecx
   25b36:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   25b3c:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   25b42:	0f 45 d1             	cmovne %ecx,%edx
   25b45:	56                   	push   %esi
   25b46:	50                   	push   %eax
   25b47:	8d 83 98 68 fe ff    	lea    -0x19768(%ebx),%eax
   25b4d:	52                   	push   %edx
   25b4e:	50                   	push   %eax
   25b4f:	e8 4c c5 fe ff       	call   120a0 <print_asm_1>
   25b54:	e8 47 ff ff ff       	call   25aa0 <instr_execute_1op>
   25b59:	83 c4 1c             	add    $0x1c,%esp
   25b5c:	89 f8                	mov    %edi,%eax
   25b5e:	5b                   	pop    %ebx
   25b5f:	5e                   	pop    %esi
   25b60:	5f                   	pop    %edi
   25b61:	5d                   	pop    %ebp
   25b62:	c3                   	ret    
   25b63:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25b6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00025b70 <__ref_not_rm_v>:
   25b70:	55                   	push   %ebp
   25b71:	57                   	push   %edi
   25b72:	56                   	push   %esi
   25b73:	53                   	push   %ebx
   25b74:	e8 07 e9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25b79:	81 c3 87 94 02 00    	add    $0x29487,%ebx
   25b7f:	83 ec 14             	sub    $0x14,%esp
   25b82:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   25b88:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   25b8e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   25b94:	0f b6 00             	movzbl (%eax),%eax
   25b97:	56                   	push   %esi
   25b98:	89 45 10             	mov    %eax,0x10(%ebp)
   25b9b:	89 46 10             	mov    %eax,0x10(%esi)
   25b9e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   25ba2:	83 c0 01             	add    $0x1,%eax
   25ba5:	50                   	push   %eax
   25ba6:	e8 d5 c3 fe ff       	call   11f80 <modrm_rm>
   25bab:	8b 4d 10             	mov    0x10(%ebp),%ecx
   25bae:	83 c4 10             	add    $0x10,%esp
   25bb1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   25bb7:	8d 78 01             	lea    0x1(%eax),%edi
   25bba:	89 f8                	mov    %edi,%eax
   25bbc:	0f b6 c0             	movzbl %al,%eax
   25bbf:	83 f9 08             	cmp    $0x8,%ecx
   25bc2:	74 12                	je     25bd6 <__ref_not_rm_v+0x66>
   25bc4:	83 f9 10             	cmp    $0x10,%ecx
   25bc7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   25bcd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   25bd3:	0f 45 d1             	cmovne %ecx,%edx
   25bd6:	56                   	push   %esi
   25bd7:	50                   	push   %eax
   25bd8:	8d 83 98 68 fe ff    	lea    -0x19768(%ebx),%eax
   25bde:	52                   	push   %edx
   25bdf:	50                   	push   %eax
   25be0:	e8 bb c4 fe ff       	call   120a0 <print_asm_1>
   25be5:	e8 b6 fe ff ff       	call   25aa0 <instr_execute_1op>
   25bea:	83 c4 1c             	add    $0x1c,%esp
   25bed:	89 f8                	mov    %edi,%eax
   25bef:	5b                   	pop    %ebx
   25bf0:	5e                   	pop    %esi
   25bf1:	5f                   	pop    %edi
   25bf2:	5d                   	pop    %ebp
   25bf3:	c3                   	ret    
   25bf4:	66 90                	xchg   %ax,%ax
   25bf6:	66 90                	xchg   %ax,%ax
   25bf8:	66 90                	xchg   %ax,%ax
   25bfa:	66 90                	xchg   %ax,%ax
   25bfc:	66 90                	xchg   %ax,%ax
   25bfe:	66 90                	xchg   %ax,%ax

00025c00 <__ref_out_b>:
   25c00:	56                   	push   %esi
   25c01:	53                   	push   %ebx
   25c02:	e8 79 e8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25c07:	81 c3 f9 93 02 00    	add    $0x293f9,%ebx
   25c0d:	83 ec 54             	sub    $0x54,%esp
   25c10:	e8 cb 4b 00 00       	call   2a7e0 <set_ref>
   25c15:	c7 44 24 18 08 00 00 	movl   $0x8,0x18(%esp)
   25c1c:	00 
   25c1d:	83 ec 0c             	sub    $0xc,%esp
   25c20:	c7 44 24 48 10 00 00 	movl   $0x10,0x48(%esp)
   25c27:	00 
   25c28:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   25c2f:	00 
   25c30:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   25c37:	00 
   25c38:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   25c3f:	00 
   25c40:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   25c47:	00 
   25c48:	8d 74 24 38          	lea    0x38(%esp),%esi
   25c4c:	56                   	push   %esi
   25c4d:	e8 8e c7 fe ff       	call   123e0 <operand_read>
   25c52:	58                   	pop    %eax
   25c53:	8d 44 24 14          	lea    0x14(%esp),%eax
   25c57:	50                   	push   %eax
   25c58:	e8 83 c7 fe ff       	call   123e0 <operand_read>
   25c5d:	83 c4 0c             	add    $0xc,%esp
   25c60:	ff 74 24 18          	pushl  0x18(%esp)
   25c64:	6a 01                	push   $0x1
   25c66:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
   25c6b:	50                   	push   %eax
   25c6c:	e8 9f 0f fe ff       	call   6c10 <pio_write>
   25c71:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   25c77:	56                   	push   %esi
   25c78:	6a 01                	push   $0x1
   25c7a:	50                   	push   %eax
   25c7b:	8d 83 59 67 fe ff    	lea    -0x198a7(%ebx),%eax
   25c81:	50                   	push   %eax
   25c82:	e8 19 c4 fe ff       	call   120a0 <print_asm_1>
   25c87:	83 c4 74             	add    $0x74,%esp
   25c8a:	b8 01 00 00 00       	mov    $0x1,%eax
   25c8f:	5b                   	pop    %ebx
   25c90:	5e                   	pop    %esi
   25c91:	c3                   	ret    
   25c92:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25c99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00025ca0 <__ref_out_v>:
   25ca0:	57                   	push   %edi
   25ca1:	56                   	push   %esi
   25ca2:	53                   	push   %ebx
   25ca3:	e8 d8 e7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25ca8:	81 c3 58 93 02 00    	add    $0x29358,%ebx
   25cae:	83 ec 50             	sub    $0x50,%esp
   25cb1:	e8 2a 4b 00 00       	call   2a7e0 <set_ref>
   25cb6:	8d bb 84 07 00 00    	lea    0x784(%ebx),%edi
   25cbc:	83 ec 0c             	sub    $0xc,%esp
   25cbf:	c7 44 24 48 10 00 00 	movl   $0x10,0x48(%esp)
   25cc6:	00 
   25cc7:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   25cce:	00 
   25ccf:	0f b6 07             	movzbl (%edi),%eax
   25cd2:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   25cd9:	00 
   25cda:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   25ce1:	00 
   25ce2:	89 44 24 24          	mov    %eax,0x24(%esp)
   25ce6:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   25ced:	00 
   25cee:	8d 74 24 38          	lea    0x38(%esp),%esi
   25cf2:	56                   	push   %esi
   25cf3:	e8 e8 c6 fe ff       	call   123e0 <operand_read>
   25cf8:	58                   	pop    %eax
   25cf9:	8d 44 24 14          	lea    0x14(%esp),%eax
   25cfd:	50                   	push   %eax
   25cfe:	e8 dd c6 fe ff       	call   123e0 <operand_read>
   25d03:	0f b6 07             	movzbl (%edi),%eax
   25d06:	83 c4 0c             	add    $0xc,%esp
   25d09:	ff 74 24 18          	pushl  0x18(%esp)
   25d0d:	c0 e8 03             	shr    $0x3,%al
   25d10:	0f b6 c0             	movzbl %al,%eax
   25d13:	50                   	push   %eax
   25d14:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
   25d19:	50                   	push   %eax
   25d1a:	e8 f1 0e fe ff       	call   6c10 <pio_write>
   25d1f:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   25d25:	56                   	push   %esi
   25d26:	6a 01                	push   $0x1
   25d28:	50                   	push   %eax
   25d29:	8d 83 59 67 fe ff    	lea    -0x198a7(%ebx),%eax
   25d2f:	50                   	push   %eax
   25d30:	e8 6b c3 fe ff       	call   120a0 <print_asm_1>
   25d35:	83 c4 70             	add    $0x70,%esp
   25d38:	b8 01 00 00 00       	mov    $0x1,%eax
   25d3d:	5b                   	pop    %ebx
   25d3e:	5e                   	pop    %esi
   25d3f:	5f                   	pop    %edi
   25d40:	c3                   	ret    
   25d41:	66 90                	xchg   %ax,%ax
   25d43:	66 90                	xchg   %ax,%ax
   25d45:	66 90                	xchg   %ax,%ax
   25d47:	66 90                	xchg   %ax,%ax
   25d49:	66 90                	xchg   %ax,%ax
   25d4b:	66 90                	xchg   %ax,%ax
   25d4d:	66 90                	xchg   %ax,%ax
   25d4f:	90                   	nop

00025d50 <instr_execute_1op_cc_pass>:
   25d50:	56                   	push   %esi
   25d51:	53                   	push   %ebx
   25d52:	e8 29 e7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25d57:	81 c3 a9 92 02 00    	add    $0x292a9,%ebx
   25d5d:	83 ec 04             	sub    $0x4,%esp
   25d60:	e8 7b 4a 00 00       	call   2a7e0 <set_ref>
   25d65:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   25d6b:	83 ec 0c             	sub    $0xc,%esp
   25d6e:	56                   	push   %esi
   25d6f:	e8 6c c6 fe ff       	call   123e0 <operand_read>
   25d74:	8b 56 10             	mov    0x10(%esi),%edx
   25d77:	83 c4 10             	add    $0x10,%esp
   25d7a:	8b 46 0c             	mov    0xc(%esi),%eax
   25d7d:	8d 4a f8             	lea    -0x8(%edx),%ecx
   25d80:	83 e1 f7             	and    $0xfffffff7,%ecx
   25d83:	74 05                	je     25d8a <instr_execute_1op_cc_pass+0x3a>
   25d85:	83 fa 20             	cmp    $0x20,%edx
   25d88:	75 38                	jne    25dc2 <instr_execute_1op_cc_pass+0x72>
   25d8a:	83 fa 08             	cmp    $0x8,%edx
   25d8d:	74 21                	je     25db0 <instr_execute_1op_cc_pass+0x60>
   25d8f:	83 fa 10             	cmp    $0x10,%edx
   25d92:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   25d98:	0f bf c8             	movswl %ax,%ecx
   25d9b:	0f 44 c1             	cmove  %ecx,%eax
   25d9e:	01 42 20             	add    %eax,0x20(%edx)
   25da1:	83 c4 04             	add    $0x4,%esp
   25da4:	5b                   	pop    %ebx
   25da5:	5e                   	pop    %esi
   25da6:	c3                   	ret    
   25da7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25dae:	66 90                	xchg   %ax,%ax
   25db0:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   25db6:	0f be c0             	movsbl %al,%eax
   25db9:	01 42 20             	add    %eax,0x20(%edx)
   25dbc:	83 c4 04             	add    $0x4,%esp
   25dbf:	5b                   	pop    %ebx
   25dc0:	5e                   	pop    %esi
   25dc1:	c3                   	ret    
   25dc2:	8d 83 80 6d fe ff    	lea    -0x19280(%ebx),%eax
   25dc8:	50                   	push   %eax
   25dc9:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   25dcf:	6a 2e                	push   $0x2e
   25dd1:	50                   	push   %eax
   25dd2:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   25dd8:	50                   	push   %eax
   25dd9:	e8 32 e5 fd ff       	call   4310 <__assert_fail@plt>
   25dde:	66 90                	xchg   %ax,%ax

00025de0 <__ref_je_near>:
   25de0:	53                   	push   %ebx
   25de1:	e8 9a e6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25de6:	81 c3 1a 92 02 00    	add    $0x2921a,%ebx
   25dec:	83 ec 08             	sub    $0x8,%esp
   25def:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   25df3:	8d 51 01             	lea    0x1(%ecx),%edx
   25df6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   25dfc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25e03:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   25e09:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25e10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   25e16:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   25e1a:	89 50 04             	mov    %edx,0x4(%eax)
   25e1d:	50                   	push   %eax
   25e1e:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   25e24:	6a 05                	push   $0x5
   25e26:	50                   	push   %eax
   25e27:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   25e2d:	50                   	push   %eax
   25e2e:	e8 6d c2 fe ff       	call   120a0 <print_asm_1>
   25e33:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   25e39:	83 c4 10             	add    $0x10,%esp
   25e3c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   25e40:	74 16                	je     25e58 <__ref_je_near+0x78>
   25e42:	e8 09 ff ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   25e47:	83 c4 08             	add    $0x8,%esp
   25e4a:	b8 05 00 00 00       	mov    $0x5,%eax
   25e4f:	5b                   	pop    %ebx
   25e50:	c3                   	ret    
   25e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25e58:	e8 83 49 00 00       	call   2a7e0 <set_ref>
   25e5d:	83 c4 08             	add    $0x8,%esp
   25e60:	b8 05 00 00 00       	mov    $0x5,%eax
   25e65:	5b                   	pop    %ebx
   25e66:	c3                   	ret    
   25e67:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25e6e:	66 90                	xchg   %ax,%ax

00025e70 <__ref_ja_near>:
   25e70:	53                   	push   %ebx
   25e71:	e8 0a e6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25e76:	81 c3 8a 91 02 00    	add    $0x2918a,%ebx
   25e7c:	83 ec 08             	sub    $0x8,%esp
   25e7f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   25e83:	8d 51 01             	lea    0x1(%ecx),%edx
   25e86:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   25e8c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25e93:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   25e99:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25ea0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   25ea6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   25eaa:	89 50 04             	mov    %edx,0x4(%eax)
   25ead:	50                   	push   %eax
   25eae:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   25eb4:	6a 05                	push   $0x5
   25eb6:	50                   	push   %eax
   25eb7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   25ebd:	50                   	push   %eax
   25ebe:	e8 dd c1 fe ff       	call   120a0 <print_asm_1>
   25ec3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   25ec9:	83 c4 10             	add    $0x10,%esp
   25ecc:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   25ed0:	75 16                	jne    25ee8 <__ref_ja_near+0x78>
   25ed2:	e8 79 fe ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   25ed7:	83 c4 08             	add    $0x8,%esp
   25eda:	b8 05 00 00 00       	mov    $0x5,%eax
   25edf:	5b                   	pop    %ebx
   25ee0:	c3                   	ret    
   25ee1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25ee8:	e8 f3 48 00 00       	call   2a7e0 <set_ref>
   25eed:	83 c4 08             	add    $0x8,%esp
   25ef0:	b8 05 00 00 00       	mov    $0x5,%eax
   25ef5:	5b                   	pop    %ebx
   25ef6:	c3                   	ret    
   25ef7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25efe:	66 90                	xchg   %ax,%ax

00025f00 <__ref_jb_near>:
   25f00:	53                   	push   %ebx
   25f01:	e8 7a e5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25f06:	81 c3 fa 90 02 00    	add    $0x290fa,%ebx
   25f0c:	83 ec 08             	sub    $0x8,%esp
   25f0f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   25f13:	8d 51 01             	lea    0x1(%ecx),%edx
   25f16:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   25f1c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25f23:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   25f29:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25f30:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   25f36:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   25f3a:	89 50 04             	mov    %edx,0x4(%eax)
   25f3d:	50                   	push   %eax
   25f3e:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   25f44:	6a 05                	push   $0x5
   25f46:	50                   	push   %eax
   25f47:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   25f4d:	50                   	push   %eax
   25f4e:	e8 4d c1 fe ff       	call   120a0 <print_asm_1>
   25f53:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   25f59:	83 c4 10             	add    $0x10,%esp
   25f5c:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   25f60:	74 16                	je     25f78 <__ref_jb_near+0x78>
   25f62:	e8 e9 fd ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   25f67:	83 c4 08             	add    $0x8,%esp
   25f6a:	b8 05 00 00 00       	mov    $0x5,%eax
   25f6f:	5b                   	pop    %ebx
   25f70:	c3                   	ret    
   25f71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25f78:	e8 63 48 00 00       	call   2a7e0 <set_ref>
   25f7d:	83 c4 08             	add    $0x8,%esp
   25f80:	b8 05 00 00 00       	mov    $0x5,%eax
   25f85:	5b                   	pop    %ebx
   25f86:	c3                   	ret    
   25f87:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25f8e:	66 90                	xchg   %ax,%ax

00025f90 <__ref_jg_near>:
   25f90:	53                   	push   %ebx
   25f91:	e8 ea e4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   25f96:	81 c3 6a 90 02 00    	add    $0x2906a,%ebx
   25f9c:	83 ec 08             	sub    $0x8,%esp
   25f9f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   25fa3:	8d 51 01             	lea    0x1(%ecx),%edx
   25fa6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   25fac:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25fb3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   25fb9:	89 50 04             	mov    %edx,0x4(%eax)
   25fbc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   25fc3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   25fc9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   25fcd:	50                   	push   %eax
   25fce:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   25fd4:	6a 05                	push   $0x5
   25fd6:	50                   	push   %eax
   25fd7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   25fdd:	50                   	push   %eax
   25fde:	e8 bd c0 fe ff       	call   120a0 <print_asm_1>
   25fe3:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   25fe9:	83 c4 10             	add    $0x10,%esp
   25fec:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
   25ff0:	f6 c2 40             	test   $0x40,%dl
   25ff3:	75 11                	jne    26006 <__ref_jg_near+0x76>
   25ff5:	0f b6 41 25          	movzbl 0x25(%ecx),%eax
   25ff9:	c0 ea 07             	shr    $0x7,%dl
   25ffc:	c0 e8 03             	shr    $0x3,%al
   25fff:	83 e0 01             	and    $0x1,%eax
   26002:	38 c2                	cmp    %al,%dl
   26004:	74 12                	je     26018 <__ref_jg_near+0x88>
   26006:	e8 d5 47 00 00       	call   2a7e0 <set_ref>
   2600b:	83 c4 08             	add    $0x8,%esp
   2600e:	b8 05 00 00 00       	mov    $0x5,%eax
   26013:	5b                   	pop    %ebx
   26014:	c3                   	ret    
   26015:	8d 76 00             	lea    0x0(%esi),%esi
   26018:	e8 33 fd ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   2601d:	83 c4 08             	add    $0x8,%esp
   26020:	b8 05 00 00 00       	mov    $0x5,%eax
   26025:	5b                   	pop    %ebx
   26026:	c3                   	ret    
   26027:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2602e:	66 90                	xchg   %ax,%ax

00026030 <__ref_jl_near>:
   26030:	53                   	push   %ebx
   26031:	e8 4a e4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26036:	81 c3 ca 8f 02 00    	add    $0x28fca,%ebx
   2603c:	83 ec 08             	sub    $0x8,%esp
   2603f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26043:	8d 51 01             	lea    0x1(%ecx),%edx
   26046:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2604c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26053:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26059:	89 50 04             	mov    %edx,0x4(%eax)
   2605c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26063:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26069:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2606d:	50                   	push   %eax
   2606e:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   26074:	6a 05                	push   $0x5
   26076:	50                   	push   %eax
   26077:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2607d:	50                   	push   %eax
   2607e:	e8 1d c0 fe ff       	call   120a0 <print_asm_1>
   26083:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26089:	83 c4 10             	add    $0x10,%esp
   2608c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   26090:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   26094:	c0 e8 03             	shr    $0x3,%al
   26097:	c0 ea 07             	shr    $0x7,%dl
   2609a:	83 e0 01             	and    $0x1,%eax
   2609d:	38 c2                	cmp    %al,%dl
   2609f:	74 0f                	je     260b0 <__ref_jl_near+0x80>
   260a1:	e8 aa fc ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   260a6:	83 c4 08             	add    $0x8,%esp
   260a9:	b8 05 00 00 00       	mov    $0x5,%eax
   260ae:	5b                   	pop    %ebx
   260af:	c3                   	ret    
   260b0:	e8 2b 47 00 00       	call   2a7e0 <set_ref>
   260b5:	83 c4 08             	add    $0x8,%esp
   260b8:	b8 05 00 00 00       	mov    $0x5,%eax
   260bd:	5b                   	pop    %ebx
   260be:	c3                   	ret    
   260bf:	90                   	nop

000260c0 <__ref_jo_near>:
   260c0:	53                   	push   %ebx
   260c1:	e8 ba e3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   260c6:	81 c3 3a 8f 02 00    	add    $0x28f3a,%ebx
   260cc:	83 ec 08             	sub    $0x8,%esp
   260cf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   260d3:	8d 51 01             	lea    0x1(%ecx),%edx
   260d6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   260dc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   260e3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   260e9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   260f0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   260f6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   260fa:	89 50 04             	mov    %edx,0x4(%eax)
   260fd:	50                   	push   %eax
   260fe:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   26104:	6a 05                	push   $0x5
   26106:	50                   	push   %eax
   26107:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2610d:	50                   	push   %eax
   2610e:	e8 8d bf fe ff       	call   120a0 <print_asm_1>
   26113:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26119:	83 c4 10             	add    $0x10,%esp
   2611c:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   26120:	74 16                	je     26138 <__ref_jo_near+0x78>
   26122:	e8 29 fc ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26127:	83 c4 08             	add    $0x8,%esp
   2612a:	b8 05 00 00 00       	mov    $0x5,%eax
   2612f:	5b                   	pop    %ebx
   26130:	c3                   	ret    
   26131:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26138:	e8 a3 46 00 00       	call   2a7e0 <set_ref>
   2613d:	83 c4 08             	add    $0x8,%esp
   26140:	b8 05 00 00 00       	mov    $0x5,%eax
   26145:	5b                   	pop    %ebx
   26146:	c3                   	ret    
   26147:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2614e:	66 90                	xchg   %ax,%ax

00026150 <__ref_jp_near>:
   26150:	53                   	push   %ebx
   26151:	e8 2a e3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26156:	81 c3 aa 8e 02 00    	add    $0x28eaa,%ebx
   2615c:	83 ec 08             	sub    $0x8,%esp
   2615f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26163:	8d 51 01             	lea    0x1(%ecx),%edx
   26166:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2616c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26173:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26179:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26180:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26186:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2618a:	89 50 04             	mov    %edx,0x4(%eax)
   2618d:	50                   	push   %eax
   2618e:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   26194:	6a 05                	push   $0x5
   26196:	50                   	push   %eax
   26197:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2619d:	50                   	push   %eax
   2619e:	e8 fd be fe ff       	call   120a0 <print_asm_1>
   261a3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   261a9:	83 c4 10             	add    $0x10,%esp
   261ac:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   261b0:	74 16                	je     261c8 <__ref_jp_near+0x78>
   261b2:	e8 99 fb ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   261b7:	83 c4 08             	add    $0x8,%esp
   261ba:	b8 05 00 00 00       	mov    $0x5,%eax
   261bf:	5b                   	pop    %ebx
   261c0:	c3                   	ret    
   261c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   261c8:	e8 13 46 00 00       	call   2a7e0 <set_ref>
   261cd:	83 c4 08             	add    $0x8,%esp
   261d0:	b8 05 00 00 00       	mov    $0x5,%eax
   261d5:	5b                   	pop    %ebx
   261d6:	c3                   	ret    
   261d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   261de:	66 90                	xchg   %ax,%ax

000261e0 <__ref_js_near>:
   261e0:	53                   	push   %ebx
   261e1:	e8 9a e2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   261e6:	81 c3 1a 8e 02 00    	add    $0x28e1a,%ebx
   261ec:	83 ec 08             	sub    $0x8,%esp
   261ef:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   261f3:	8d 51 01             	lea    0x1(%ecx),%edx
   261f6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   261fc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26203:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26209:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26210:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26216:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2621a:	89 50 04             	mov    %edx,0x4(%eax)
   2621d:	50                   	push   %eax
   2621e:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   26224:	6a 05                	push   $0x5
   26226:	50                   	push   %eax
   26227:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2622d:	50                   	push   %eax
   2622e:	e8 6d be fe ff       	call   120a0 <print_asm_1>
   26233:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26239:	83 c4 10             	add    $0x10,%esp
   2623c:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   26240:	78 16                	js     26258 <__ref_js_near+0x78>
   26242:	e8 99 45 00 00       	call   2a7e0 <set_ref>
   26247:	83 c4 08             	add    $0x8,%esp
   2624a:	b8 05 00 00 00       	mov    $0x5,%eax
   2624f:	5b                   	pop    %ebx
   26250:	c3                   	ret    
   26251:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26258:	e8 f3 fa ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   2625d:	83 c4 08             	add    $0x8,%esp
   26260:	b8 05 00 00 00       	mov    $0x5,%eax
   26265:	5b                   	pop    %ebx
   26266:	c3                   	ret    
   26267:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2626e:	66 90                	xchg   %ax,%ax

00026270 <__ref_jae_near>:
   26270:	53                   	push   %ebx
   26271:	e8 0a e2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26276:	81 c3 8a 8d 02 00    	add    $0x28d8a,%ebx
   2627c:	83 ec 08             	sub    $0x8,%esp
   2627f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26283:	8d 51 01             	lea    0x1(%ecx),%edx
   26286:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2628c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26293:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26299:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   262a0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   262a6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   262aa:	89 50 04             	mov    %edx,0x4(%eax)
   262ad:	50                   	push   %eax
   262ae:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   262b4:	6a 05                	push   $0x5
   262b6:	50                   	push   %eax
   262b7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   262bd:	50                   	push   %eax
   262be:	e8 dd bd fe ff       	call   120a0 <print_asm_1>
   262c3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   262c9:	83 c4 10             	add    $0x10,%esp
   262cc:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   262d0:	75 16                	jne    262e8 <__ref_jae_near+0x78>
   262d2:	e8 79 fa ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   262d7:	83 c4 08             	add    $0x8,%esp
   262da:	b8 05 00 00 00       	mov    $0x5,%eax
   262df:	5b                   	pop    %ebx
   262e0:	c3                   	ret    
   262e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   262e8:	e8 f3 44 00 00       	call   2a7e0 <set_ref>
   262ed:	83 c4 08             	add    $0x8,%esp
   262f0:	b8 05 00 00 00       	mov    $0x5,%eax
   262f5:	5b                   	pop    %ebx
   262f6:	c3                   	ret    
   262f7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   262fe:	66 90                	xchg   %ax,%ax

00026300 <__ref_jge_near>:
   26300:	53                   	push   %ebx
   26301:	e8 7a e1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26306:	81 c3 fa 8c 02 00    	add    $0x28cfa,%ebx
   2630c:	83 ec 08             	sub    $0x8,%esp
   2630f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26313:	8d 51 01             	lea    0x1(%ecx),%edx
   26316:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2631c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26323:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26329:	89 50 04             	mov    %edx,0x4(%eax)
   2632c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26333:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26339:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2633d:	50                   	push   %eax
   2633e:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   26344:	6a 05                	push   $0x5
   26346:	50                   	push   %eax
   26347:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2634d:	50                   	push   %eax
   2634e:	e8 4d bd fe ff       	call   120a0 <print_asm_1>
   26353:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26359:	83 c4 10             	add    $0x10,%esp
   2635c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   26360:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   26364:	c0 e8 03             	shr    $0x3,%al
   26367:	c0 ea 07             	shr    $0x7,%dl
   2636a:	83 e0 01             	and    $0x1,%eax
   2636d:	38 c2                	cmp    %al,%dl
   2636f:	74 0f                	je     26380 <__ref_jge_near+0x80>
   26371:	e8 6a 44 00 00       	call   2a7e0 <set_ref>
   26376:	83 c4 08             	add    $0x8,%esp
   26379:	b8 05 00 00 00       	mov    $0x5,%eax
   2637e:	5b                   	pop    %ebx
   2637f:	c3                   	ret    
   26380:	e8 cb f9 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26385:	83 c4 08             	add    $0x8,%esp
   26388:	b8 05 00 00 00       	mov    $0x5,%eax
   2638d:	5b                   	pop    %ebx
   2638e:	c3                   	ret    
   2638f:	90                   	nop

00026390 <__ref_jle_near>:
   26390:	53                   	push   %ebx
   26391:	e8 ea e0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26396:	81 c3 6a 8c 02 00    	add    $0x28c6a,%ebx
   2639c:	83 ec 08             	sub    $0x8,%esp
   2639f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   263a3:	8d 51 01             	lea    0x1(%ecx),%edx
   263a6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   263ac:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   263b3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   263b9:	89 50 04             	mov    %edx,0x4(%eax)
   263bc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   263c3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   263c9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   263cd:	50                   	push   %eax
   263ce:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   263d4:	6a 05                	push   $0x5
   263d6:	50                   	push   %eax
   263d7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   263dd:	50                   	push   %eax
   263de:	e8 bd bc fe ff       	call   120a0 <print_asm_1>
   263e3:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   263e9:	83 c4 10             	add    $0x10,%esp
   263ec:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
   263f0:	f6 c2 40             	test   $0x40,%dl
   263f3:	75 11                	jne    26406 <__ref_jle_near+0x76>
   263f5:	0f b6 41 25          	movzbl 0x25(%ecx),%eax
   263f9:	c0 ea 07             	shr    $0x7,%dl
   263fc:	c0 e8 03             	shr    $0x3,%al
   263ff:	83 e0 01             	and    $0x1,%eax
   26402:	38 c2                	cmp    %al,%dl
   26404:	74 12                	je     26418 <__ref_jle_near+0x88>
   26406:	e8 45 f9 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   2640b:	83 c4 08             	add    $0x8,%esp
   2640e:	b8 05 00 00 00       	mov    $0x5,%eax
   26413:	5b                   	pop    %ebx
   26414:	c3                   	ret    
   26415:	8d 76 00             	lea    0x0(%esi),%esi
   26418:	e8 c3 43 00 00       	call   2a7e0 <set_ref>
   2641d:	83 c4 08             	add    $0x8,%esp
   26420:	b8 05 00 00 00       	mov    $0x5,%eax
   26425:	5b                   	pop    %ebx
   26426:	c3                   	ret    
   26427:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2642e:	66 90                	xchg   %ax,%ax

00026430 <__ref_jna_near>:
   26430:	53                   	push   %ebx
   26431:	e8 4a e0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26436:	81 c3 ca 8b 02 00    	add    $0x28bca,%ebx
   2643c:	83 ec 08             	sub    $0x8,%esp
   2643f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26443:	8d 51 01             	lea    0x1(%ecx),%edx
   26446:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2644c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26453:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26459:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26460:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26466:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2646a:	89 50 04             	mov    %edx,0x4(%eax)
   2646d:	50                   	push   %eax
   2646e:	8d 83 f6 66 fe ff    	lea    -0x1990a(%ebx),%eax
   26474:	6a 05                	push   $0x5
   26476:	50                   	push   %eax
   26477:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2647d:	50                   	push   %eax
   2647e:	e8 1d bc fe ff       	call   120a0 <print_asm_1>
   26483:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26489:	83 c4 10             	add    $0x10,%esp
   2648c:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   26490:	74 16                	je     264a8 <__ref_jna_near+0x78>
   26492:	e8 b9 f8 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26497:	83 c4 08             	add    $0x8,%esp
   2649a:	b8 05 00 00 00       	mov    $0x5,%eax
   2649f:	5b                   	pop    %ebx
   264a0:	c3                   	ret    
   264a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   264a8:	e8 33 43 00 00       	call   2a7e0 <set_ref>
   264ad:	83 c4 08             	add    $0x8,%esp
   264b0:	b8 05 00 00 00       	mov    $0x5,%eax
   264b5:	5b                   	pop    %ebx
   264b6:	c3                   	ret    
   264b7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   264be:	66 90                	xchg   %ax,%ax

000264c0 <__ref_jne_near>:
   264c0:	53                   	push   %ebx
   264c1:	e8 ba df fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   264c6:	81 c3 3a 8b 02 00    	add    $0x28b3a,%ebx
   264cc:	83 ec 08             	sub    $0x8,%esp
   264cf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   264d3:	8d 51 01             	lea    0x1(%ecx),%edx
   264d6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   264dc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   264e3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   264e9:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   264f0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   264f6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   264fa:	89 50 04             	mov    %edx,0x4(%eax)
   264fd:	50                   	push   %eax
   264fe:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   26504:	6a 05                	push   $0x5
   26506:	50                   	push   %eax
   26507:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2650d:	50                   	push   %eax
   2650e:	e8 8d bb fe ff       	call   120a0 <print_asm_1>
   26513:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26519:	83 c4 10             	add    $0x10,%esp
   2651c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   26520:	75 16                	jne    26538 <__ref_jne_near+0x78>
   26522:	e8 29 f8 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26527:	83 c4 08             	add    $0x8,%esp
   2652a:	b8 05 00 00 00       	mov    $0x5,%eax
   2652f:	5b                   	pop    %ebx
   26530:	c3                   	ret    
   26531:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26538:	e8 a3 42 00 00       	call   2a7e0 <set_ref>
   2653d:	83 c4 08             	add    $0x8,%esp
   26540:	b8 05 00 00 00       	mov    $0x5,%eax
   26545:	5b                   	pop    %ebx
   26546:	c3                   	ret    
   26547:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2654e:	66 90                	xchg   %ax,%ax

00026550 <__ref_jno_near>:
   26550:	53                   	push   %ebx
   26551:	e8 2a df fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26556:	81 c3 aa 8a 02 00    	add    $0x28aaa,%ebx
   2655c:	83 ec 08             	sub    $0x8,%esp
   2655f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26563:	8d 51 01             	lea    0x1(%ecx),%edx
   26566:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2656c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26573:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26579:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26580:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26586:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2658a:	89 50 04             	mov    %edx,0x4(%eax)
   2658d:	50                   	push   %eax
   2658e:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   26594:	6a 05                	push   $0x5
   26596:	50                   	push   %eax
   26597:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2659d:	50                   	push   %eax
   2659e:	e8 fd ba fe ff       	call   120a0 <print_asm_1>
   265a3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   265a9:	83 c4 10             	add    $0x10,%esp
   265ac:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   265b0:	75 16                	jne    265c8 <__ref_jno_near+0x78>
   265b2:	e8 99 f7 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   265b7:	83 c4 08             	add    $0x8,%esp
   265ba:	b8 05 00 00 00       	mov    $0x5,%eax
   265bf:	5b                   	pop    %ebx
   265c0:	c3                   	ret    
   265c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   265c8:	e8 13 42 00 00       	call   2a7e0 <set_ref>
   265cd:	83 c4 08             	add    $0x8,%esp
   265d0:	b8 05 00 00 00       	mov    $0x5,%eax
   265d5:	5b                   	pop    %ebx
   265d6:	c3                   	ret    
   265d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   265de:	66 90                	xchg   %ax,%ax

000265e0 <__ref_jnp_near>:
   265e0:	53                   	push   %ebx
   265e1:	e8 9a de fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   265e6:	81 c3 1a 8a 02 00    	add    $0x28a1a,%ebx
   265ec:	83 ec 08             	sub    $0x8,%esp
   265ef:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   265f3:	8d 51 01             	lea    0x1(%ecx),%edx
   265f6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   265fc:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26603:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26609:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26610:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26616:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2661a:	89 50 04             	mov    %edx,0x4(%eax)
   2661d:	50                   	push   %eax
   2661e:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   26624:	6a 05                	push   $0x5
   26626:	50                   	push   %eax
   26627:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2662d:	50                   	push   %eax
   2662e:	e8 6d ba fe ff       	call   120a0 <print_asm_1>
   26633:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26639:	83 c4 10             	add    $0x10,%esp
   2663c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   26640:	75 16                	jne    26658 <__ref_jnp_near+0x78>
   26642:	e8 09 f7 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26647:	83 c4 08             	add    $0x8,%esp
   2664a:	b8 05 00 00 00       	mov    $0x5,%eax
   2664f:	5b                   	pop    %ebx
   26650:	c3                   	ret    
   26651:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26658:	e8 83 41 00 00       	call   2a7e0 <set_ref>
   2665d:	83 c4 08             	add    $0x8,%esp
   26660:	b8 05 00 00 00       	mov    $0x5,%eax
   26665:	5b                   	pop    %ebx
   26666:	c3                   	ret    
   26667:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2666e:	66 90                	xchg   %ax,%ax

00026670 <__ref_jns_near>:
   26670:	53                   	push   %ebx
   26671:	e8 0a de fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26676:	81 c3 8a 89 02 00    	add    $0x2898a,%ebx
   2667c:	83 ec 08             	sub    $0x8,%esp
   2667f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26683:	8d 51 01             	lea    0x1(%ecx),%edx
   26686:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2668c:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   26693:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26699:	c7 40 10 20 00 00 00 	movl   $0x20,0x10(%eax)
   266a0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   266a6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   266aa:	89 50 04             	mov    %edx,0x4(%eax)
   266ad:	50                   	push   %eax
   266ae:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   266b4:	6a 05                	push   $0x5
   266b6:	50                   	push   %eax
   266b7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   266bd:	50                   	push   %eax
   266be:	e8 dd b9 fe ff       	call   120a0 <print_asm_1>
   266c3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   266c9:	83 c4 10             	add    $0x10,%esp
   266cc:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   266d0:	78 16                	js     266e8 <__ref_jns_near+0x78>
   266d2:	e8 79 f6 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   266d7:	83 c4 08             	add    $0x8,%esp
   266da:	b8 05 00 00 00       	mov    $0x5,%eax
   266df:	5b                   	pop    %ebx
   266e0:	c3                   	ret    
   266e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   266e8:	e8 f3 40 00 00       	call   2a7e0 <set_ref>
   266ed:	83 c4 08             	add    $0x8,%esp
   266f0:	b8 05 00 00 00       	mov    $0x5,%eax
   266f5:	5b                   	pop    %ebx
   266f6:	c3                   	ret    
   266f7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   266fe:	66 90                	xchg   %ax,%ax

00026700 <__ref_je_short_>:
   26700:	53                   	push   %ebx
   26701:	e8 7a dd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26706:	81 c3 fa 88 02 00    	add    $0x288fa,%ebx
   2670c:	83 ec 08             	sub    $0x8,%esp
   2670f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26713:	8d 51 01             	lea    0x1(%ecx),%edx
   26716:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2671c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26723:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26729:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26730:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26736:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2673a:	89 50 04             	mov    %edx,0x4(%eax)
   2673d:	50                   	push   %eax
   2673e:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   26744:	6a 02                	push   $0x2
   26746:	50                   	push   %eax
   26747:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2674d:	50                   	push   %eax
   2674e:	e8 4d b9 fe ff       	call   120a0 <print_asm_1>
   26753:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26759:	83 c4 10             	add    $0x10,%esp
   2675c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   26760:	74 16                	je     26778 <__ref_je_short_+0x78>
   26762:	e8 e9 f5 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26767:	83 c4 08             	add    $0x8,%esp
   2676a:	b8 02 00 00 00       	mov    $0x2,%eax
   2676f:	5b                   	pop    %ebx
   26770:	c3                   	ret    
   26771:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26778:	e8 63 40 00 00       	call   2a7e0 <set_ref>
   2677d:	83 c4 08             	add    $0x8,%esp
   26780:	b8 02 00 00 00       	mov    $0x2,%eax
   26785:	5b                   	pop    %ebx
   26786:	c3                   	ret    
   26787:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2678e:	66 90                	xchg   %ax,%ax

00026790 <__ref_ja_short_>:
   26790:	53                   	push   %ebx
   26791:	e8 ea dc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26796:	81 c3 6a 88 02 00    	add    $0x2886a,%ebx
   2679c:	83 ec 08             	sub    $0x8,%esp
   2679f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   267a3:	8d 51 01             	lea    0x1(%ecx),%edx
   267a6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   267ac:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   267b3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   267b9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   267c0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   267c6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   267ca:	89 50 04             	mov    %edx,0x4(%eax)
   267cd:	50                   	push   %eax
   267ce:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   267d4:	6a 02                	push   $0x2
   267d6:	50                   	push   %eax
   267d7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   267dd:	50                   	push   %eax
   267de:	e8 bd b8 fe ff       	call   120a0 <print_asm_1>
   267e3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   267e9:	83 c4 10             	add    $0x10,%esp
   267ec:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   267f0:	75 16                	jne    26808 <__ref_ja_short_+0x78>
   267f2:	e8 59 f5 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   267f7:	83 c4 08             	add    $0x8,%esp
   267fa:	b8 02 00 00 00       	mov    $0x2,%eax
   267ff:	5b                   	pop    %ebx
   26800:	c3                   	ret    
   26801:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26808:	e8 d3 3f 00 00       	call   2a7e0 <set_ref>
   2680d:	83 c4 08             	add    $0x8,%esp
   26810:	b8 02 00 00 00       	mov    $0x2,%eax
   26815:	5b                   	pop    %ebx
   26816:	c3                   	ret    
   26817:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2681e:	66 90                	xchg   %ax,%ax

00026820 <__ref_jb_short_>:
   26820:	53                   	push   %ebx
   26821:	e8 5a dc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26826:	81 c3 da 87 02 00    	add    $0x287da,%ebx
   2682c:	83 ec 08             	sub    $0x8,%esp
   2682f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26833:	8d 51 01             	lea    0x1(%ecx),%edx
   26836:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2683c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26843:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26849:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26850:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26856:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2685a:	89 50 04             	mov    %edx,0x4(%eax)
   2685d:	50                   	push   %eax
   2685e:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   26864:	6a 02                	push   $0x2
   26866:	50                   	push   %eax
   26867:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2686d:	50                   	push   %eax
   2686e:	e8 2d b8 fe ff       	call   120a0 <print_asm_1>
   26873:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26879:	83 c4 10             	add    $0x10,%esp
   2687c:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   26880:	74 16                	je     26898 <__ref_jb_short_+0x78>
   26882:	e8 c9 f4 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26887:	83 c4 08             	add    $0x8,%esp
   2688a:	b8 02 00 00 00       	mov    $0x2,%eax
   2688f:	5b                   	pop    %ebx
   26890:	c3                   	ret    
   26891:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26898:	e8 43 3f 00 00       	call   2a7e0 <set_ref>
   2689d:	83 c4 08             	add    $0x8,%esp
   268a0:	b8 02 00 00 00       	mov    $0x2,%eax
   268a5:	5b                   	pop    %ebx
   268a6:	c3                   	ret    
   268a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   268ae:	66 90                	xchg   %ax,%ax

000268b0 <__ref_jg_short_>:
   268b0:	53                   	push   %ebx
   268b1:	e8 ca db fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   268b6:	81 c3 4a 87 02 00    	add    $0x2874a,%ebx
   268bc:	83 ec 08             	sub    $0x8,%esp
   268bf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   268c3:	8d 51 01             	lea    0x1(%ecx),%edx
   268c6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   268cc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   268d3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   268d9:	89 50 04             	mov    %edx,0x4(%eax)
   268dc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   268e3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   268e9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   268ed:	50                   	push   %eax
   268ee:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   268f4:	6a 02                	push   $0x2
   268f6:	50                   	push   %eax
   268f7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   268fd:	50                   	push   %eax
   268fe:	e8 9d b7 fe ff       	call   120a0 <print_asm_1>
   26903:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   26909:	83 c4 10             	add    $0x10,%esp
   2690c:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
   26910:	f6 c2 40             	test   $0x40,%dl
   26913:	75 11                	jne    26926 <__ref_jg_short_+0x76>
   26915:	0f b6 41 25          	movzbl 0x25(%ecx),%eax
   26919:	c0 ea 07             	shr    $0x7,%dl
   2691c:	c0 e8 03             	shr    $0x3,%al
   2691f:	83 e0 01             	and    $0x1,%eax
   26922:	38 c2                	cmp    %al,%dl
   26924:	74 12                	je     26938 <__ref_jg_short_+0x88>
   26926:	e8 b5 3e 00 00       	call   2a7e0 <set_ref>
   2692b:	83 c4 08             	add    $0x8,%esp
   2692e:	b8 02 00 00 00       	mov    $0x2,%eax
   26933:	5b                   	pop    %ebx
   26934:	c3                   	ret    
   26935:	8d 76 00             	lea    0x0(%esi),%esi
   26938:	e8 13 f4 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   2693d:	83 c4 08             	add    $0x8,%esp
   26940:	b8 02 00 00 00       	mov    $0x2,%eax
   26945:	5b                   	pop    %ebx
   26946:	c3                   	ret    
   26947:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2694e:	66 90                	xchg   %ax,%ax

00026950 <__ref_jl_short_>:
   26950:	53                   	push   %ebx
   26951:	e8 2a db fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26956:	81 c3 aa 86 02 00    	add    $0x286aa,%ebx
   2695c:	83 ec 08             	sub    $0x8,%esp
   2695f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26963:	8d 51 01             	lea    0x1(%ecx),%edx
   26966:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2696c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26973:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26979:	89 50 04             	mov    %edx,0x4(%eax)
   2697c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26983:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26989:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2698d:	50                   	push   %eax
   2698e:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   26994:	6a 02                	push   $0x2
   26996:	50                   	push   %eax
   26997:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2699d:	50                   	push   %eax
   2699e:	e8 fd b6 fe ff       	call   120a0 <print_asm_1>
   269a3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   269a9:	83 c4 10             	add    $0x10,%esp
   269ac:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   269b0:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   269b4:	c0 e8 03             	shr    $0x3,%al
   269b7:	c0 ea 07             	shr    $0x7,%dl
   269ba:	83 e0 01             	and    $0x1,%eax
   269bd:	38 c2                	cmp    %al,%dl
   269bf:	74 0f                	je     269d0 <__ref_jl_short_+0x80>
   269c1:	e8 8a f3 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   269c6:	83 c4 08             	add    $0x8,%esp
   269c9:	b8 02 00 00 00       	mov    $0x2,%eax
   269ce:	5b                   	pop    %ebx
   269cf:	c3                   	ret    
   269d0:	e8 0b 3e 00 00       	call   2a7e0 <set_ref>
   269d5:	83 c4 08             	add    $0x8,%esp
   269d8:	b8 02 00 00 00       	mov    $0x2,%eax
   269dd:	5b                   	pop    %ebx
   269de:	c3                   	ret    
   269df:	90                   	nop

000269e0 <__ref_jo_short_>:
   269e0:	53                   	push   %ebx
   269e1:	e8 9a da fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   269e6:	81 c3 1a 86 02 00    	add    $0x2861a,%ebx
   269ec:	83 ec 08             	sub    $0x8,%esp
   269ef:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   269f3:	8d 51 01             	lea    0x1(%ecx),%edx
   269f6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   269fc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26a03:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26a09:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26a10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26a16:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26a1a:	89 50 04             	mov    %edx,0x4(%eax)
   26a1d:	50                   	push   %eax
   26a1e:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   26a24:	6a 02                	push   $0x2
   26a26:	50                   	push   %eax
   26a27:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26a2d:	50                   	push   %eax
   26a2e:	e8 6d b6 fe ff       	call   120a0 <print_asm_1>
   26a33:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26a39:	83 c4 10             	add    $0x10,%esp
   26a3c:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   26a40:	74 16                	je     26a58 <__ref_jo_short_+0x78>
   26a42:	e8 09 f3 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26a47:	83 c4 08             	add    $0x8,%esp
   26a4a:	b8 02 00 00 00       	mov    $0x2,%eax
   26a4f:	5b                   	pop    %ebx
   26a50:	c3                   	ret    
   26a51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26a58:	e8 83 3d 00 00       	call   2a7e0 <set_ref>
   26a5d:	83 c4 08             	add    $0x8,%esp
   26a60:	b8 02 00 00 00       	mov    $0x2,%eax
   26a65:	5b                   	pop    %ebx
   26a66:	c3                   	ret    
   26a67:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26a6e:	66 90                	xchg   %ax,%ax

00026a70 <__ref_jp_short_>:
   26a70:	53                   	push   %ebx
   26a71:	e8 0a da fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26a76:	81 c3 8a 85 02 00    	add    $0x2858a,%ebx
   26a7c:	83 ec 08             	sub    $0x8,%esp
   26a7f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26a83:	8d 51 01             	lea    0x1(%ecx),%edx
   26a86:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26a8c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26a93:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26a99:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26aa0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26aa6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26aaa:	89 50 04             	mov    %edx,0x4(%eax)
   26aad:	50                   	push   %eax
   26aae:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   26ab4:	6a 02                	push   $0x2
   26ab6:	50                   	push   %eax
   26ab7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26abd:	50                   	push   %eax
   26abe:	e8 dd b5 fe ff       	call   120a0 <print_asm_1>
   26ac3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26ac9:	83 c4 10             	add    $0x10,%esp
   26acc:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   26ad0:	74 16                	je     26ae8 <__ref_jp_short_+0x78>
   26ad2:	e8 79 f2 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26ad7:	83 c4 08             	add    $0x8,%esp
   26ada:	b8 02 00 00 00       	mov    $0x2,%eax
   26adf:	5b                   	pop    %ebx
   26ae0:	c3                   	ret    
   26ae1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26ae8:	e8 f3 3c 00 00       	call   2a7e0 <set_ref>
   26aed:	83 c4 08             	add    $0x8,%esp
   26af0:	b8 02 00 00 00       	mov    $0x2,%eax
   26af5:	5b                   	pop    %ebx
   26af6:	c3                   	ret    
   26af7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26afe:	66 90                	xchg   %ax,%ax

00026b00 <__ref_js_short_>:
   26b00:	53                   	push   %ebx
   26b01:	e8 7a d9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26b06:	81 c3 fa 84 02 00    	add    $0x284fa,%ebx
   26b0c:	83 ec 08             	sub    $0x8,%esp
   26b0f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26b13:	8d 51 01             	lea    0x1(%ecx),%edx
   26b16:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26b1c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26b23:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26b29:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26b30:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26b36:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26b3a:	89 50 04             	mov    %edx,0x4(%eax)
   26b3d:	50                   	push   %eax
   26b3e:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   26b44:	6a 02                	push   $0x2
   26b46:	50                   	push   %eax
   26b47:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26b4d:	50                   	push   %eax
   26b4e:	e8 4d b5 fe ff       	call   120a0 <print_asm_1>
   26b53:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26b59:	83 c4 10             	add    $0x10,%esp
   26b5c:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   26b60:	78 16                	js     26b78 <__ref_js_short_+0x78>
   26b62:	e8 79 3c 00 00       	call   2a7e0 <set_ref>
   26b67:	83 c4 08             	add    $0x8,%esp
   26b6a:	b8 02 00 00 00       	mov    $0x2,%eax
   26b6f:	5b                   	pop    %ebx
   26b70:	c3                   	ret    
   26b71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26b78:	e8 d3 f1 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26b7d:	83 c4 08             	add    $0x8,%esp
   26b80:	b8 02 00 00 00       	mov    $0x2,%eax
   26b85:	5b                   	pop    %ebx
   26b86:	c3                   	ret    
   26b87:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26b8e:	66 90                	xchg   %ax,%ax

00026b90 <__ref_jae_short_>:
   26b90:	53                   	push   %ebx
   26b91:	e8 ea d8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26b96:	81 c3 6a 84 02 00    	add    $0x2846a,%ebx
   26b9c:	83 ec 08             	sub    $0x8,%esp
   26b9f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26ba3:	8d 51 01             	lea    0x1(%ecx),%edx
   26ba6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26bac:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26bb3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26bb9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26bc0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26bc6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26bca:	89 50 04             	mov    %edx,0x4(%eax)
   26bcd:	50                   	push   %eax
   26bce:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   26bd4:	6a 02                	push   $0x2
   26bd6:	50                   	push   %eax
   26bd7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26bdd:	50                   	push   %eax
   26bde:	e8 bd b4 fe ff       	call   120a0 <print_asm_1>
   26be3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26be9:	83 c4 10             	add    $0x10,%esp
   26bec:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   26bf0:	75 16                	jne    26c08 <__ref_jae_short_+0x78>
   26bf2:	e8 59 f1 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26bf7:	83 c4 08             	add    $0x8,%esp
   26bfa:	b8 02 00 00 00       	mov    $0x2,%eax
   26bff:	5b                   	pop    %ebx
   26c00:	c3                   	ret    
   26c01:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26c08:	e8 d3 3b 00 00       	call   2a7e0 <set_ref>
   26c0d:	83 c4 08             	add    $0x8,%esp
   26c10:	b8 02 00 00 00       	mov    $0x2,%eax
   26c15:	5b                   	pop    %ebx
   26c16:	c3                   	ret    
   26c17:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26c1e:	66 90                	xchg   %ax,%ax

00026c20 <__ref_jge_short_>:
   26c20:	53                   	push   %ebx
   26c21:	e8 5a d8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26c26:	81 c3 da 83 02 00    	add    $0x283da,%ebx
   26c2c:	83 ec 08             	sub    $0x8,%esp
   26c2f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26c33:	8d 51 01             	lea    0x1(%ecx),%edx
   26c36:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26c3c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26c43:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26c49:	89 50 04             	mov    %edx,0x4(%eax)
   26c4c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26c53:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26c59:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26c5d:	50                   	push   %eax
   26c5e:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   26c64:	6a 02                	push   $0x2
   26c66:	50                   	push   %eax
   26c67:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26c6d:	50                   	push   %eax
   26c6e:	e8 2d b4 fe ff       	call   120a0 <print_asm_1>
   26c73:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26c79:	83 c4 10             	add    $0x10,%esp
   26c7c:	0f b6 50 24          	movzbl 0x24(%eax),%edx
   26c80:	0f b6 40 25          	movzbl 0x25(%eax),%eax
   26c84:	c0 e8 03             	shr    $0x3,%al
   26c87:	c0 ea 07             	shr    $0x7,%dl
   26c8a:	83 e0 01             	and    $0x1,%eax
   26c8d:	38 c2                	cmp    %al,%dl
   26c8f:	74 0f                	je     26ca0 <__ref_jge_short_+0x80>
   26c91:	e8 4a 3b 00 00       	call   2a7e0 <set_ref>
   26c96:	83 c4 08             	add    $0x8,%esp
   26c99:	b8 02 00 00 00       	mov    $0x2,%eax
   26c9e:	5b                   	pop    %ebx
   26c9f:	c3                   	ret    
   26ca0:	e8 ab f0 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26ca5:	83 c4 08             	add    $0x8,%esp
   26ca8:	b8 02 00 00 00       	mov    $0x2,%eax
   26cad:	5b                   	pop    %ebx
   26cae:	c3                   	ret    
   26caf:	90                   	nop

00026cb0 <__ref_jle_short_>:
   26cb0:	53                   	push   %ebx
   26cb1:	e8 ca d7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26cb6:	81 c3 4a 83 02 00    	add    $0x2834a,%ebx
   26cbc:	83 ec 08             	sub    $0x8,%esp
   26cbf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26cc3:	8d 51 01             	lea    0x1(%ecx),%edx
   26cc6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26ccc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26cd3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26cd9:	89 50 04             	mov    %edx,0x4(%eax)
   26cdc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26ce3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26ce9:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26ced:	50                   	push   %eax
   26cee:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   26cf4:	6a 02                	push   $0x2
   26cf6:	50                   	push   %eax
   26cf7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26cfd:	50                   	push   %eax
   26cfe:	e8 9d b3 fe ff       	call   120a0 <print_asm_1>
   26d03:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   26d09:	83 c4 10             	add    $0x10,%esp
   26d0c:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
   26d10:	f6 c2 40             	test   $0x40,%dl
   26d13:	75 11                	jne    26d26 <__ref_jle_short_+0x76>
   26d15:	0f b6 41 25          	movzbl 0x25(%ecx),%eax
   26d19:	c0 ea 07             	shr    $0x7,%dl
   26d1c:	c0 e8 03             	shr    $0x3,%al
   26d1f:	83 e0 01             	and    $0x1,%eax
   26d22:	38 c2                	cmp    %al,%dl
   26d24:	74 12                	je     26d38 <__ref_jle_short_+0x88>
   26d26:	e8 25 f0 ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26d2b:	83 c4 08             	add    $0x8,%esp
   26d2e:	b8 02 00 00 00       	mov    $0x2,%eax
   26d33:	5b                   	pop    %ebx
   26d34:	c3                   	ret    
   26d35:	8d 76 00             	lea    0x0(%esi),%esi
   26d38:	e8 a3 3a 00 00       	call   2a7e0 <set_ref>
   26d3d:	83 c4 08             	add    $0x8,%esp
   26d40:	b8 02 00 00 00       	mov    $0x2,%eax
   26d45:	5b                   	pop    %ebx
   26d46:	c3                   	ret    
   26d47:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26d4e:	66 90                	xchg   %ax,%ax

00026d50 <__ref_jna_short_>:
   26d50:	53                   	push   %ebx
   26d51:	e8 2a d7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26d56:	81 c3 aa 82 02 00    	add    $0x282aa,%ebx
   26d5c:	83 ec 08             	sub    $0x8,%esp
   26d5f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26d63:	8d 51 01             	lea    0x1(%ecx),%edx
   26d66:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26d6c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26d73:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26d79:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26d80:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26d86:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26d8a:	89 50 04             	mov    %edx,0x4(%eax)
   26d8d:	50                   	push   %eax
   26d8e:	8d 83 f6 66 fe ff    	lea    -0x1990a(%ebx),%eax
   26d94:	6a 02                	push   $0x2
   26d96:	50                   	push   %eax
   26d97:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26d9d:	50                   	push   %eax
   26d9e:	e8 fd b2 fe ff       	call   120a0 <print_asm_1>
   26da3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26da9:	83 c4 10             	add    $0x10,%esp
   26dac:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   26db0:	74 16                	je     26dc8 <__ref_jna_short_+0x78>
   26db2:	e8 99 ef ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26db7:	83 c4 08             	add    $0x8,%esp
   26dba:	b8 02 00 00 00       	mov    $0x2,%eax
   26dbf:	5b                   	pop    %ebx
   26dc0:	c3                   	ret    
   26dc1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26dc8:	e8 13 3a 00 00       	call   2a7e0 <set_ref>
   26dcd:	83 c4 08             	add    $0x8,%esp
   26dd0:	b8 02 00 00 00       	mov    $0x2,%eax
   26dd5:	5b                   	pop    %ebx
   26dd6:	c3                   	ret    
   26dd7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26dde:	66 90                	xchg   %ax,%ax

00026de0 <__ref_jne_short_>:
   26de0:	53                   	push   %ebx
   26de1:	e8 9a d6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26de6:	81 c3 1a 82 02 00    	add    $0x2821a,%ebx
   26dec:	83 ec 08             	sub    $0x8,%esp
   26def:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26df3:	8d 51 01             	lea    0x1(%ecx),%edx
   26df6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26dfc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26e03:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26e09:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26e10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26e16:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26e1a:	89 50 04             	mov    %edx,0x4(%eax)
   26e1d:	50                   	push   %eax
   26e1e:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   26e24:	6a 02                	push   $0x2
   26e26:	50                   	push   %eax
   26e27:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26e2d:	50                   	push   %eax
   26e2e:	e8 6d b2 fe ff       	call   120a0 <print_asm_1>
   26e33:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26e39:	83 c4 10             	add    $0x10,%esp
   26e3c:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   26e40:	75 16                	jne    26e58 <__ref_jne_short_+0x78>
   26e42:	e8 09 ef ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26e47:	83 c4 08             	add    $0x8,%esp
   26e4a:	b8 02 00 00 00       	mov    $0x2,%eax
   26e4f:	5b                   	pop    %ebx
   26e50:	c3                   	ret    
   26e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26e58:	e8 83 39 00 00       	call   2a7e0 <set_ref>
   26e5d:	83 c4 08             	add    $0x8,%esp
   26e60:	b8 02 00 00 00       	mov    $0x2,%eax
   26e65:	5b                   	pop    %ebx
   26e66:	c3                   	ret    
   26e67:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26e6e:	66 90                	xchg   %ax,%ax

00026e70 <__ref_jno_short_>:
   26e70:	53                   	push   %ebx
   26e71:	e8 0a d6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26e76:	81 c3 8a 81 02 00    	add    $0x2818a,%ebx
   26e7c:	83 ec 08             	sub    $0x8,%esp
   26e7f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26e83:	8d 51 01             	lea    0x1(%ecx),%edx
   26e86:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26e8c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26e93:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26e99:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26ea0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26ea6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26eaa:	89 50 04             	mov    %edx,0x4(%eax)
   26ead:	50                   	push   %eax
   26eae:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   26eb4:	6a 02                	push   $0x2
   26eb6:	50                   	push   %eax
   26eb7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26ebd:	50                   	push   %eax
   26ebe:	e8 dd b1 fe ff       	call   120a0 <print_asm_1>
   26ec3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26ec9:	83 c4 10             	add    $0x10,%esp
   26ecc:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   26ed0:	75 16                	jne    26ee8 <__ref_jno_short_+0x78>
   26ed2:	e8 79 ee ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26ed7:	83 c4 08             	add    $0x8,%esp
   26eda:	b8 02 00 00 00       	mov    $0x2,%eax
   26edf:	5b                   	pop    %ebx
   26ee0:	c3                   	ret    
   26ee1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26ee8:	e8 f3 38 00 00       	call   2a7e0 <set_ref>
   26eed:	83 c4 08             	add    $0x8,%esp
   26ef0:	b8 02 00 00 00       	mov    $0x2,%eax
   26ef5:	5b                   	pop    %ebx
   26ef6:	c3                   	ret    
   26ef7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26efe:	66 90                	xchg   %ax,%ax

00026f00 <__ref_jnp_short_>:
   26f00:	53                   	push   %ebx
   26f01:	e8 7a d5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26f06:	81 c3 fa 80 02 00    	add    $0x280fa,%ebx
   26f0c:	83 ec 08             	sub    $0x8,%esp
   26f0f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26f13:	8d 51 01             	lea    0x1(%ecx),%edx
   26f16:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26f1c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26f23:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26f29:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26f30:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26f36:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26f3a:	89 50 04             	mov    %edx,0x4(%eax)
   26f3d:	50                   	push   %eax
   26f3e:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   26f44:	6a 02                	push   $0x2
   26f46:	50                   	push   %eax
   26f47:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26f4d:	50                   	push   %eax
   26f4e:	e8 4d b1 fe ff       	call   120a0 <print_asm_1>
   26f53:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26f59:	83 c4 10             	add    $0x10,%esp
   26f5c:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   26f60:	75 16                	jne    26f78 <__ref_jnp_short_+0x78>
   26f62:	e8 e9 ed ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26f67:	83 c4 08             	add    $0x8,%esp
   26f6a:	b8 02 00 00 00       	mov    $0x2,%eax
   26f6f:	5b                   	pop    %ebx
   26f70:	c3                   	ret    
   26f71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26f78:	e8 63 38 00 00       	call   2a7e0 <set_ref>
   26f7d:	83 c4 08             	add    $0x8,%esp
   26f80:	b8 02 00 00 00       	mov    $0x2,%eax
   26f85:	5b                   	pop    %ebx
   26f86:	c3                   	ret    
   26f87:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26f8e:	66 90                	xchg   %ax,%ax

00026f90 <__ref_jns_short_>:
   26f90:	53                   	push   %ebx
   26f91:	e8 ea d4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   26f96:	81 c3 6a 80 02 00    	add    $0x2806a,%ebx
   26f9c:	83 ec 08             	sub    $0x8,%esp
   26f9f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   26fa3:	8d 51 01             	lea    0x1(%ecx),%edx
   26fa6:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   26fac:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26fb3:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   26fb9:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   26fc0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   26fc6:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   26fca:	89 50 04             	mov    %edx,0x4(%eax)
   26fcd:	50                   	push   %eax
   26fce:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   26fd4:	6a 02                	push   $0x2
   26fd6:	50                   	push   %eax
   26fd7:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   26fdd:	50                   	push   %eax
   26fde:	e8 bd b0 fe ff       	call   120a0 <print_asm_1>
   26fe3:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   26fe9:	83 c4 10             	add    $0x10,%esp
   26fec:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   26ff0:	78 16                	js     27008 <__ref_jns_short_+0x78>
   26ff2:	e8 59 ed ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   26ff7:	83 c4 08             	add    $0x8,%esp
   26ffa:	b8 02 00 00 00       	mov    $0x2,%eax
   26fff:	5b                   	pop    %ebx
   27000:	c3                   	ret    
   27001:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   27008:	e8 d3 37 00 00       	call   2a7e0 <set_ref>
   2700d:	83 c4 08             	add    $0x8,%esp
   27010:	b8 02 00 00 00       	mov    $0x2,%eax
   27015:	5b                   	pop    %ebx
   27016:	c3                   	ret    
   27017:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2701e:	66 90                	xchg   %ax,%ax

00027020 <__ref_jecxz_short_>:
   27020:	53                   	push   %ebx
   27021:	e8 5a d4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27026:	81 c3 da 7f 02 00    	add    $0x27fda,%ebx
   2702c:	83 ec 08             	sub    $0x8,%esp
   2702f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   27033:	8d 51 01             	lea    0x1(%ecx),%edx
   27036:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   2703c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   27043:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   27049:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   27050:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   27056:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2705a:	89 50 04             	mov    %edx,0x4(%eax)
   2705d:	50                   	push   %eax
   2705e:	8d 83 05 67 fe ff    	lea    -0x198fb(%ebx),%eax
   27064:	6a 02                	push   $0x2
   27066:	50                   	push   %eax
   27067:	8d 83 ee 66 fe ff    	lea    -0x19912(%ebx),%eax
   2706d:	50                   	push   %eax
   2706e:	e8 2d b0 fe ff       	call   120a0 <print_asm_1>
   27073:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27079:	83 c4 10             	add    $0x10,%esp
   2707c:	8b 40 04             	mov    0x4(%eax),%eax
   2707f:	85 c0                	test   %eax,%eax
   27081:	75 15                	jne    27098 <__ref_jecxz_short_+0x78>
   27083:	e8 c8 ec ff ff       	call   25d50 <instr_execute_1op_cc_pass>
   27088:	83 c4 08             	add    $0x8,%esp
   2708b:	b8 02 00 00 00       	mov    $0x2,%eax
   27090:	5b                   	pop    %ebx
   27091:	c3                   	ret    
   27092:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27098:	e8 43 37 00 00       	call   2a7e0 <set_ref>
   2709d:	83 c4 08             	add    $0x8,%esp
   270a0:	b8 02 00 00 00       	mov    $0x2,%eax
   270a5:	5b                   	pop    %ebx
   270a6:	c3                   	ret    
   270a7:	66 90                	xchg   %ax,%ax
   270a9:	66 90                	xchg   %ax,%ax
   270ab:	66 90                	xchg   %ax,%ax
   270ad:	66 90                	xchg   %ax,%ax
   270af:	90                   	nop

000270b0 <instr_execute_2op_cc_pass>:
   270b0:	56                   	push   %esi
   270b1:	53                   	push   %ebx
   270b2:	e8 c9 d3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   270b7:	81 c3 49 7f 02 00    	add    $0x27f49,%ebx
   270bd:	83 ec 04             	sub    $0x4,%esp
   270c0:	e8 1b 37 00 00       	call   2a7e0 <set_ref>
   270c5:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   270cb:	83 ec 0c             	sub    $0xc,%esp
   270ce:	56                   	push   %esi
   270cf:	e8 0c b3 fe ff       	call   123e0 <operand_read>
   270d4:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   270da:	8b 56 0c             	mov    0xc(%esi),%edx
   270dd:	89 50 0c             	mov    %edx,0xc(%eax)
   270e0:	89 04 24             	mov    %eax,(%esp)
   270e3:	e8 a8 b4 fe ff       	call   12590 <operand_write>
   270e8:	83 c4 14             	add    $0x14,%esp
   270eb:	5b                   	pop    %ebx
   270ec:	5e                   	pop    %esi
   270ed:	c3                   	ret    
   270ee:	66 90                	xchg   %ax,%ax

000270f0 <__ref_cmova_rm2r_v>:
   270f0:	55                   	push   %ebp
   270f1:	57                   	push   %edi
   270f2:	56                   	push   %esi
   270f3:	53                   	push   %ebx
   270f4:	e8 87 d3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   270f9:	81 c3 07 7f 02 00    	add    $0x27f07,%ebx
   270ff:	83 ec 10             	sub    $0x10,%esp
   27102:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27108:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2710e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27114:	0f b6 00             	movzbl (%eax),%eax
   27117:	57                   	push   %edi
   27118:	89 45 10             	mov    %eax,0x10(%ebp)
   2711b:	55                   	push   %ebp
   2711c:	89 47 10             	mov    %eax,0x10(%edi)
   2711f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27123:	83 c0 01             	add    $0x1,%eax
   27126:	50                   	push   %eax
   27127:	e8 74 ad fe ff       	call   11ea0 <modrm_r_rm>
   2712c:	89 2c 24             	mov    %ebp,(%esp)
   2712f:	8d 70 01             	lea    0x1(%eax),%esi
   27132:	57                   	push   %edi
   27133:	89 f0                	mov    %esi,%eax
   27135:	0f b6 c0             	movzbl %al,%eax
   27138:	50                   	push   %eax
   27139:	8d 83 41 6d fe ff    	lea    -0x192bf(%ebx),%eax
   2713f:	50                   	push   %eax
   27140:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27146:	50                   	push   %eax
   27147:	e8 54 b0 fe ff       	call   121a0 <print_asm_2>
   2714c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27152:	83 c4 20             	add    $0x20,%esp
   27155:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   27159:	75 15                	jne    27170 <__ref_cmova_rm2r_v+0x80>
   2715b:	e8 50 ff ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27160:	83 c4 0c             	add    $0xc,%esp
   27163:	89 f0                	mov    %esi,%eax
   27165:	5b                   	pop    %ebx
   27166:	5e                   	pop    %esi
   27167:	5f                   	pop    %edi
   27168:	5d                   	pop    %ebp
   27169:	c3                   	ret    
   2716a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27170:	e8 6b 36 00 00       	call   2a7e0 <set_ref>
   27175:	83 c4 0c             	add    $0xc,%esp
   27178:	89 f0                	mov    %esi,%eax
   2717a:	5b                   	pop    %ebx
   2717b:	5e                   	pop    %esi
   2717c:	5f                   	pop    %edi
   2717d:	5d                   	pop    %ebp
   2717e:	c3                   	ret    
   2717f:	90                   	nop

00027180 <__ref_cmovae_rm2r_v>:
   27180:	55                   	push   %ebp
   27181:	57                   	push   %edi
   27182:	56                   	push   %esi
   27183:	53                   	push   %ebx
   27184:	e8 f7 d2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27189:	81 c3 77 7e 02 00    	add    $0x27e77,%ebx
   2718f:	83 ec 10             	sub    $0x10,%esp
   27192:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27198:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2719e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   271a4:	0f b6 00             	movzbl (%eax),%eax
   271a7:	57                   	push   %edi
   271a8:	89 45 10             	mov    %eax,0x10(%ebp)
   271ab:	55                   	push   %ebp
   271ac:	89 47 10             	mov    %eax,0x10(%edi)
   271af:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   271b3:	83 c0 01             	add    $0x1,%eax
   271b6:	50                   	push   %eax
   271b7:	e8 e4 ac fe ff       	call   11ea0 <modrm_r_rm>
   271bc:	89 2c 24             	mov    %ebp,(%esp)
   271bf:	8d 70 01             	lea    0x1(%eax),%esi
   271c2:	57                   	push   %edi
   271c3:	89 f0                	mov    %esi,%eax
   271c5:	0f b6 c0             	movzbl %al,%eax
   271c8:	50                   	push   %eax
   271c9:	8d 83 f0 66 fe ff    	lea    -0x19910(%ebx),%eax
   271cf:	50                   	push   %eax
   271d0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   271d6:	50                   	push   %eax
   271d7:	e8 c4 af fe ff       	call   121a0 <print_asm_2>
   271dc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   271e2:	83 c4 20             	add    $0x20,%esp
   271e5:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   271e9:	75 15                	jne    27200 <__ref_cmovae_rm2r_v+0x80>
   271eb:	e8 c0 fe ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   271f0:	83 c4 0c             	add    $0xc,%esp
   271f3:	89 f0                	mov    %esi,%eax
   271f5:	5b                   	pop    %ebx
   271f6:	5e                   	pop    %esi
   271f7:	5f                   	pop    %edi
   271f8:	5d                   	pop    %ebp
   271f9:	c3                   	ret    
   271fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27200:	e8 db 35 00 00       	call   2a7e0 <set_ref>
   27205:	83 c4 0c             	add    $0xc,%esp
   27208:	89 f0                	mov    %esi,%eax
   2720a:	5b                   	pop    %ebx
   2720b:	5e                   	pop    %esi
   2720c:	5f                   	pop    %edi
   2720d:	5d                   	pop    %ebp
   2720e:	c3                   	ret    
   2720f:	90                   	nop

00027210 <__ref_cmovb_rm2r_v>:
   27210:	55                   	push   %ebp
   27211:	57                   	push   %edi
   27212:	56                   	push   %esi
   27213:	53                   	push   %ebx
   27214:	e8 67 d2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27219:	81 c3 e7 7d 02 00    	add    $0x27de7,%ebx
   2721f:	83 ec 10             	sub    $0x10,%esp
   27222:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27228:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2722e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27234:	0f b6 00             	movzbl (%eax),%eax
   27237:	57                   	push   %edi
   27238:	89 45 10             	mov    %eax,0x10(%ebp)
   2723b:	55                   	push   %ebp
   2723c:	89 47 10             	mov    %eax,0x10(%edi)
   2723f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27243:	83 c0 01             	add    $0x1,%eax
   27246:	50                   	push   %eax
   27247:	e8 54 ac fe ff       	call   11ea0 <modrm_r_rm>
   2724c:	89 2c 24             	mov    %ebp,(%esp)
   2724f:	8d 70 01             	lea    0x1(%eax),%esi
   27252:	57                   	push   %edi
   27253:	89 f0                	mov    %esi,%eax
   27255:	0f b6 c0             	movzbl %al,%eax
   27258:	50                   	push   %eax
   27259:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2725f:	50                   	push   %eax
   27260:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27266:	50                   	push   %eax
   27267:	e8 34 af fe ff       	call   121a0 <print_asm_2>
   2726c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27272:	83 c4 20             	add    $0x20,%esp
   27275:	f6 40 24 01          	testb  $0x1,0x24(%eax)
   27279:	74 15                	je     27290 <__ref_cmovb_rm2r_v+0x80>
   2727b:	e8 30 fe ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27280:	83 c4 0c             	add    $0xc,%esp
   27283:	89 f0                	mov    %esi,%eax
   27285:	5b                   	pop    %ebx
   27286:	5e                   	pop    %esi
   27287:	5f                   	pop    %edi
   27288:	5d                   	pop    %ebp
   27289:	c3                   	ret    
   2728a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27290:	e8 4b 35 00 00       	call   2a7e0 <set_ref>
   27295:	83 c4 0c             	add    $0xc,%esp
   27298:	89 f0                	mov    %esi,%eax
   2729a:	5b                   	pop    %ebx
   2729b:	5e                   	pop    %esi
   2729c:	5f                   	pop    %edi
   2729d:	5d                   	pop    %ebp
   2729e:	c3                   	ret    
   2729f:	90                   	nop

000272a0 <__ref_cmovbe_rm2r_v>:
   272a0:	55                   	push   %ebp
   272a1:	57                   	push   %edi
   272a2:	56                   	push   %esi
   272a3:	53                   	push   %ebx
   272a4:	e8 d7 d1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   272a9:	81 c3 57 7d 02 00    	add    $0x27d57,%ebx
   272af:	83 ec 10             	sub    $0x10,%esp
   272b2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   272b8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   272be:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   272c4:	0f b6 00             	movzbl (%eax),%eax
   272c7:	57                   	push   %edi
   272c8:	89 45 10             	mov    %eax,0x10(%ebp)
   272cb:	55                   	push   %ebp
   272cc:	89 47 10             	mov    %eax,0x10(%edi)
   272cf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   272d3:	83 c0 01             	add    $0x1,%eax
   272d6:	50                   	push   %eax
   272d7:	e8 c4 ab fe ff       	call   11ea0 <modrm_r_rm>
   272dc:	89 2c 24             	mov    %ebp,(%esp)
   272df:	8d 70 01             	lea    0x1(%eax),%esi
   272e2:	57                   	push   %edi
   272e3:	89 f0                	mov    %esi,%eax
   272e5:	0f b6 c0             	movzbl %al,%eax
   272e8:	50                   	push   %eax
   272e9:	8d 83 f4 6a fe ff    	lea    -0x1950c(%ebx),%eax
   272ef:	50                   	push   %eax
   272f0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   272f6:	50                   	push   %eax
   272f7:	e8 a4 ae fe ff       	call   121a0 <print_asm_2>
   272fc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27302:	83 c4 20             	add    $0x20,%esp
   27305:	f6 40 24 41          	testb  $0x41,0x24(%eax)
   27309:	74 15                	je     27320 <__ref_cmovbe_rm2r_v+0x80>
   2730b:	e8 a0 fd ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27310:	83 c4 0c             	add    $0xc,%esp
   27313:	89 f0                	mov    %esi,%eax
   27315:	5b                   	pop    %ebx
   27316:	5e                   	pop    %esi
   27317:	5f                   	pop    %edi
   27318:	5d                   	pop    %ebp
   27319:	c3                   	ret    
   2731a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27320:	e8 bb 34 00 00       	call   2a7e0 <set_ref>
   27325:	83 c4 0c             	add    $0xc,%esp
   27328:	89 f0                	mov    %esi,%eax
   2732a:	5b                   	pop    %ebx
   2732b:	5e                   	pop    %esi
   2732c:	5f                   	pop    %edi
   2732d:	5d                   	pop    %ebp
   2732e:	c3                   	ret    
   2732f:	90                   	nop

00027330 <__ref_cmovg_rm2r_v>:
   27330:	55                   	push   %ebp
   27331:	57                   	push   %edi
   27332:	56                   	push   %esi
   27333:	53                   	push   %ebx
   27334:	e8 47 d1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27339:	81 c3 c7 7c 02 00    	add    $0x27cc7,%ebx
   2733f:	83 ec 10             	sub    $0x10,%esp
   27342:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27348:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2734e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27354:	0f b6 00             	movzbl (%eax),%eax
   27357:	57                   	push   %edi
   27358:	89 45 10             	mov    %eax,0x10(%ebp)
   2735b:	55                   	push   %ebp
   2735c:	89 47 10             	mov    %eax,0x10(%edi)
   2735f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27363:	83 c0 01             	add    $0x1,%eax
   27366:	50                   	push   %eax
   27367:	e8 34 ab fe ff       	call   11ea0 <modrm_r_rm>
   2736c:	89 2c 24             	mov    %ebp,(%esp)
   2736f:	8d 70 01             	lea    0x1(%eax),%esi
   27372:	57                   	push   %edi
   27373:	89 f0                	mov    %esi,%eax
   27375:	0f b6 c0             	movzbl %al,%eax
   27378:	50                   	push   %eax
   27379:	8d 83 e7 66 fe ff    	lea    -0x19919(%ebx),%eax
   2737f:	50                   	push   %eax
   27380:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27386:	50                   	push   %eax
   27387:	e8 14 ae fe ff       	call   121a0 <print_asm_2>
   2738c:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   27392:	83 c4 20             	add    $0x20,%esp
   27395:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
   27399:	f6 c2 40             	test   $0x40,%dl
   2739c:	75 11                	jne    273af <__ref_cmovg_rm2r_v+0x7f>
   2739e:	0f b6 41 25          	movzbl 0x25(%ecx),%eax
   273a2:	c0 ea 07             	shr    $0x7,%dl
   273a5:	c0 e8 03             	shr    $0x3,%al
   273a8:	83 e0 01             	and    $0x1,%eax
   273ab:	38 c2                	cmp    %al,%dl
   273ad:	74 11                	je     273c0 <__ref_cmovg_rm2r_v+0x90>
   273af:	e8 2c 34 00 00       	call   2a7e0 <set_ref>
   273b4:	83 c4 0c             	add    $0xc,%esp
   273b7:	89 f0                	mov    %esi,%eax
   273b9:	5b                   	pop    %ebx
   273ba:	5e                   	pop    %esi
   273bb:	5f                   	pop    %edi
   273bc:	5d                   	pop    %ebp
   273bd:	c3                   	ret    
   273be:	66 90                	xchg   %ax,%ax
   273c0:	e8 eb fc ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   273c5:	83 c4 0c             	add    $0xc,%esp
   273c8:	89 f0                	mov    %esi,%eax
   273ca:	5b                   	pop    %ebx
   273cb:	5e                   	pop    %esi
   273cc:	5f                   	pop    %edi
   273cd:	5d                   	pop    %ebp
   273ce:	c3                   	ret    
   273cf:	90                   	nop

000273d0 <__ref_cmovge_rm2r_v>:
   273d0:	55                   	push   %ebp
   273d1:	57                   	push   %edi
   273d2:	56                   	push   %esi
   273d3:	53                   	push   %ebx
   273d4:	e8 a7 d0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   273d9:	81 c3 27 7c 02 00    	add    $0x27c27,%ebx
   273df:	83 ec 10             	sub    $0x10,%esp
   273e2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   273e8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   273ee:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   273f4:	0f b6 00             	movzbl (%eax),%eax
   273f7:	57                   	push   %edi
   273f8:	89 45 10             	mov    %eax,0x10(%ebp)
   273fb:	55                   	push   %ebp
   273fc:	89 47 10             	mov    %eax,0x10(%edi)
   273ff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27403:	83 c0 01             	add    $0x1,%eax
   27406:	50                   	push   %eax
   27407:	e8 94 aa fe ff       	call   11ea0 <modrm_r_rm>
   2740c:	89 2c 24             	mov    %ebp,(%esp)
   2740f:	8d 70 01             	lea    0x1(%eax),%esi
   27412:	57                   	push   %edi
   27413:	89 f0                	mov    %esi,%eax
   27415:	0f b6 c0             	movzbl %al,%eax
   27418:	50                   	push   %eax
   27419:	8d 83 f3 66 fe ff    	lea    -0x1990d(%ebx),%eax
   2741f:	50                   	push   %eax
   27420:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27426:	50                   	push   %eax
   27427:	e8 74 ad fe ff       	call   121a0 <print_asm_2>
   2742c:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   27432:	83 c4 20             	add    $0x20,%esp
   27435:	0f b6 42 24          	movzbl 0x24(%edx),%eax
   27439:	0f b6 52 25          	movzbl 0x25(%edx),%edx
   2743d:	c0 ea 03             	shr    $0x3,%dl
   27440:	c0 e8 07             	shr    $0x7,%al
   27443:	83 e2 01             	and    $0x1,%edx
   27446:	38 d0                	cmp    %dl,%al
   27448:	74 16                	je     27460 <__ref_cmovge_rm2r_v+0x90>
   2744a:	e8 91 33 00 00       	call   2a7e0 <set_ref>
   2744f:	83 c4 0c             	add    $0xc,%esp
   27452:	89 f0                	mov    %esi,%eax
   27454:	5b                   	pop    %ebx
   27455:	5e                   	pop    %esi
   27456:	5f                   	pop    %edi
   27457:	5d                   	pop    %ebp
   27458:	c3                   	ret    
   27459:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   27460:	e8 4b fc ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27465:	83 c4 0c             	add    $0xc,%esp
   27468:	89 f0                	mov    %esi,%eax
   2746a:	5b                   	pop    %ebx
   2746b:	5e                   	pop    %esi
   2746c:	5f                   	pop    %edi
   2746d:	5d                   	pop    %ebp
   2746e:	c3                   	ret    
   2746f:	90                   	nop

00027470 <__ref_cmovl_rm2r_v>:
   27470:	55                   	push   %ebp
   27471:	57                   	push   %edi
   27472:	56                   	push   %esi
   27473:	53                   	push   %ebx
   27474:	e8 07 d0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27479:	81 c3 87 7b 02 00    	add    $0x27b87,%ebx
   2747f:	83 ec 10             	sub    $0x10,%esp
   27482:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27488:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2748e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27494:	0f b6 00             	movzbl (%eax),%eax
   27497:	57                   	push   %edi
   27498:	89 45 10             	mov    %eax,0x10(%ebp)
   2749b:	55                   	push   %ebp
   2749c:	89 47 10             	mov    %eax,0x10(%edi)
   2749f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   274a3:	83 c0 01             	add    $0x1,%eax
   274a6:	50                   	push   %eax
   274a7:	e8 f4 a9 fe ff       	call   11ea0 <modrm_r_rm>
   274ac:	89 2c 24             	mov    %ebp,(%esp)
   274af:	8d 70 01             	lea    0x1(%eax),%esi
   274b2:	57                   	push   %edi
   274b3:	89 f0                	mov    %esi,%eax
   274b5:	0f b6 c0             	movzbl %al,%eax
   274b8:	50                   	push   %eax
   274b9:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   274bf:	50                   	push   %eax
   274c0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   274c6:	50                   	push   %eax
   274c7:	e8 d4 ac fe ff       	call   121a0 <print_asm_2>
   274cc:	8d 93 60 32 05 00    	lea    0x53260(%ebx),%edx
   274d2:	83 c4 20             	add    $0x20,%esp
   274d5:	0f b6 42 24          	movzbl 0x24(%edx),%eax
   274d9:	0f b6 52 25          	movzbl 0x25(%edx),%edx
   274dd:	c0 ea 03             	shr    $0x3,%dl
   274e0:	c0 e8 07             	shr    $0x7,%al
   274e3:	83 e2 01             	and    $0x1,%edx
   274e6:	38 d0                	cmp    %dl,%al
   274e8:	74 16                	je     27500 <__ref_cmovl_rm2r_v+0x90>
   274ea:	e8 c1 fb ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   274ef:	83 c4 0c             	add    $0xc,%esp
   274f2:	89 f0                	mov    %esi,%eax
   274f4:	5b                   	pop    %ebx
   274f5:	5e                   	pop    %esi
   274f6:	5f                   	pop    %edi
   274f7:	5d                   	pop    %ebp
   274f8:	c3                   	ret    
   274f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   27500:	e8 db 32 00 00       	call   2a7e0 <set_ref>
   27505:	83 c4 0c             	add    $0xc,%esp
   27508:	89 f0                	mov    %esi,%eax
   2750a:	5b                   	pop    %ebx
   2750b:	5e                   	pop    %esi
   2750c:	5f                   	pop    %edi
   2750d:	5d                   	pop    %ebp
   2750e:	c3                   	ret    
   2750f:	90                   	nop

00027510 <__ref_cmovle_rm2r_v>:
   27510:	55                   	push   %ebp
   27511:	57                   	push   %edi
   27512:	56                   	push   %esi
   27513:	53                   	push   %ebx
   27514:	e8 67 cf fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27519:	81 c3 e7 7a 02 00    	add    $0x27ae7,%ebx
   2751f:	83 ec 10             	sub    $0x10,%esp
   27522:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27528:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2752e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27534:	0f b6 00             	movzbl (%eax),%eax
   27537:	57                   	push   %edi
   27538:	89 45 10             	mov    %eax,0x10(%ebp)
   2753b:	55                   	push   %ebp
   2753c:	89 47 10             	mov    %eax,0x10(%edi)
   2753f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27543:	83 c0 01             	add    $0x1,%eax
   27546:	50                   	push   %eax
   27547:	e8 54 a9 fe ff       	call   11ea0 <modrm_r_rm>
   2754c:	89 2c 24             	mov    %ebp,(%esp)
   2754f:	8d 70 01             	lea    0x1(%eax),%esi
   27552:	57                   	push   %edi
   27553:	89 f0                	mov    %esi,%eax
   27555:	0f b6 c0             	movzbl %al,%eax
   27558:	50                   	push   %eax
   27559:	8d 83 14 51 fe ff    	lea    -0x1aeec(%ebx),%eax
   2755f:	50                   	push   %eax
   27560:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27566:	50                   	push   %eax
   27567:	e8 34 ac fe ff       	call   121a0 <print_asm_2>
   2756c:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   27572:	83 c4 20             	add    $0x20,%esp
   27575:	0f b6 51 24          	movzbl 0x24(%ecx),%edx
   27579:	f6 c2 40             	test   $0x40,%dl
   2757c:	75 11                	jne    2758f <__ref_cmovle_rm2r_v+0x7f>
   2757e:	0f b6 41 25          	movzbl 0x25(%ecx),%eax
   27582:	c0 ea 07             	shr    $0x7,%dl
   27585:	c0 e8 03             	shr    $0x3,%al
   27588:	83 e0 01             	and    $0x1,%eax
   2758b:	38 c2                	cmp    %al,%dl
   2758d:	74 11                	je     275a0 <__ref_cmovle_rm2r_v+0x90>
   2758f:	e8 1c fb ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27594:	83 c4 0c             	add    $0xc,%esp
   27597:	89 f0                	mov    %esi,%eax
   27599:	5b                   	pop    %ebx
   2759a:	5e                   	pop    %esi
   2759b:	5f                   	pop    %edi
   2759c:	5d                   	pop    %ebp
   2759d:	c3                   	ret    
   2759e:	66 90                	xchg   %ax,%ax
   275a0:	e8 3b 32 00 00       	call   2a7e0 <set_ref>
   275a5:	83 c4 0c             	add    $0xc,%esp
   275a8:	89 f0                	mov    %esi,%eax
   275aa:	5b                   	pop    %ebx
   275ab:	5e                   	pop    %esi
   275ac:	5f                   	pop    %edi
   275ad:	5d                   	pop    %ebp
   275ae:	c3                   	ret    
   275af:	90                   	nop

000275b0 <__ref_cmovne_rm2r_v>:
   275b0:	55                   	push   %ebp
   275b1:	57                   	push   %edi
   275b2:	56                   	push   %esi
   275b3:	53                   	push   %ebx
   275b4:	e8 c7 ce fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   275b9:	81 c3 47 7a 02 00    	add    $0x27a47,%ebx
   275bf:	83 ec 10             	sub    $0x10,%esp
   275c2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   275c8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   275ce:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   275d4:	0f b6 00             	movzbl (%eax),%eax
   275d7:	57                   	push   %edi
   275d8:	89 45 10             	mov    %eax,0x10(%ebp)
   275db:	55                   	push   %ebp
   275dc:	89 47 10             	mov    %eax,0x10(%edi)
   275df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   275e3:	83 c0 01             	add    $0x1,%eax
   275e6:	50                   	push   %eax
   275e7:	e8 b4 a8 fe ff       	call   11ea0 <modrm_r_rm>
   275ec:	89 2c 24             	mov    %ebp,(%esp)
   275ef:	8d 70 01             	lea    0x1(%eax),%esi
   275f2:	57                   	push   %edi
   275f3:	89 f0                	mov    %esi,%eax
   275f5:	0f b6 c0             	movzbl %al,%eax
   275f8:	50                   	push   %eax
   275f9:	8d 83 f9 66 fe ff    	lea    -0x19907(%ebx),%eax
   275ff:	50                   	push   %eax
   27600:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27606:	50                   	push   %eax
   27607:	e8 94 ab fe ff       	call   121a0 <print_asm_2>
   2760c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27612:	83 c4 20             	add    $0x20,%esp
   27615:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   27619:	75 15                	jne    27630 <__ref_cmovne_rm2r_v+0x80>
   2761b:	e8 90 fa ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27620:	83 c4 0c             	add    $0xc,%esp
   27623:	89 f0                	mov    %esi,%eax
   27625:	5b                   	pop    %ebx
   27626:	5e                   	pop    %esi
   27627:	5f                   	pop    %edi
   27628:	5d                   	pop    %ebp
   27629:	c3                   	ret    
   2762a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27630:	e8 ab 31 00 00       	call   2a7e0 <set_ref>
   27635:	83 c4 0c             	add    $0xc,%esp
   27638:	89 f0                	mov    %esi,%eax
   2763a:	5b                   	pop    %ebx
   2763b:	5e                   	pop    %esi
   2763c:	5f                   	pop    %edi
   2763d:	5d                   	pop    %ebp
   2763e:	c3                   	ret    
   2763f:	90                   	nop

00027640 <__ref_cmovno_rm2r_v>:
   27640:	55                   	push   %ebp
   27641:	57                   	push   %edi
   27642:	56                   	push   %esi
   27643:	53                   	push   %ebx
   27644:	e8 37 ce fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27649:	81 c3 b7 79 02 00    	add    $0x279b7,%ebx
   2764f:	83 ec 10             	sub    $0x10,%esp
   27652:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27658:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2765e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27664:	0f b6 00             	movzbl (%eax),%eax
   27667:	57                   	push   %edi
   27668:	89 45 10             	mov    %eax,0x10(%ebp)
   2766b:	55                   	push   %ebp
   2766c:	89 47 10             	mov    %eax,0x10(%edi)
   2766f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27673:	83 c0 01             	add    $0x1,%eax
   27676:	50                   	push   %eax
   27677:	e8 24 a8 fe ff       	call   11ea0 <modrm_r_rm>
   2767c:	89 2c 24             	mov    %ebp,(%esp)
   2767f:	8d 70 01             	lea    0x1(%eax),%esi
   27682:	57                   	push   %edi
   27683:	89 f0                	mov    %esi,%eax
   27685:	0f b6 c0             	movzbl %al,%eax
   27688:	50                   	push   %eax
   27689:	8d 83 fc 66 fe ff    	lea    -0x19904(%ebx),%eax
   2768f:	50                   	push   %eax
   27690:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27696:	50                   	push   %eax
   27697:	e8 04 ab fe ff       	call   121a0 <print_asm_2>
   2769c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   276a2:	83 c4 20             	add    $0x20,%esp
   276a5:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   276a9:	75 15                	jne    276c0 <__ref_cmovno_rm2r_v+0x80>
   276ab:	e8 00 fa ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   276b0:	83 c4 0c             	add    $0xc,%esp
   276b3:	89 f0                	mov    %esi,%eax
   276b5:	5b                   	pop    %ebx
   276b6:	5e                   	pop    %esi
   276b7:	5f                   	pop    %edi
   276b8:	5d                   	pop    %ebp
   276b9:	c3                   	ret    
   276ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   276c0:	e8 1b 31 00 00       	call   2a7e0 <set_ref>
   276c5:	83 c4 0c             	add    $0xc,%esp
   276c8:	89 f0                	mov    %esi,%eax
   276ca:	5b                   	pop    %ebx
   276cb:	5e                   	pop    %esi
   276cc:	5f                   	pop    %edi
   276cd:	5d                   	pop    %ebp
   276ce:	c3                   	ret    
   276cf:	90                   	nop

000276d0 <__ref_cmovnp_rm2r_v>:
   276d0:	55                   	push   %ebp
   276d1:	57                   	push   %edi
   276d2:	56                   	push   %esi
   276d3:	53                   	push   %ebx
   276d4:	e8 a7 cd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   276d9:	81 c3 27 79 02 00    	add    $0x27927,%ebx
   276df:	83 ec 10             	sub    $0x10,%esp
   276e2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   276e8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   276ee:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   276f4:	0f b6 00             	movzbl (%eax),%eax
   276f7:	57                   	push   %edi
   276f8:	89 45 10             	mov    %eax,0x10(%ebp)
   276fb:	55                   	push   %ebp
   276fc:	89 47 10             	mov    %eax,0x10(%edi)
   276ff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27703:	83 c0 01             	add    $0x1,%eax
   27706:	50                   	push   %eax
   27707:	e8 94 a7 fe ff       	call   11ea0 <modrm_r_rm>
   2770c:	89 2c 24             	mov    %ebp,(%esp)
   2770f:	8d 70 01             	lea    0x1(%eax),%esi
   27712:	57                   	push   %edi
   27713:	89 f0                	mov    %esi,%eax
   27715:	0f b6 c0             	movzbl %al,%eax
   27718:	50                   	push   %eax
   27719:	8d 83 ff 66 fe ff    	lea    -0x19901(%ebx),%eax
   2771f:	50                   	push   %eax
   27720:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27726:	50                   	push   %eax
   27727:	e8 74 aa fe ff       	call   121a0 <print_asm_2>
   2772c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27732:	83 c4 20             	add    $0x20,%esp
   27735:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   27739:	75 15                	jne    27750 <__ref_cmovnp_rm2r_v+0x80>
   2773b:	e8 70 f9 ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27740:	83 c4 0c             	add    $0xc,%esp
   27743:	89 f0                	mov    %esi,%eax
   27745:	5b                   	pop    %ebx
   27746:	5e                   	pop    %esi
   27747:	5f                   	pop    %edi
   27748:	5d                   	pop    %ebp
   27749:	c3                   	ret    
   2774a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27750:	e8 8b 30 00 00       	call   2a7e0 <set_ref>
   27755:	83 c4 0c             	add    $0xc,%esp
   27758:	89 f0                	mov    %esi,%eax
   2775a:	5b                   	pop    %ebx
   2775b:	5e                   	pop    %esi
   2775c:	5f                   	pop    %edi
   2775d:	5d                   	pop    %ebp
   2775e:	c3                   	ret    
   2775f:	90                   	nop

00027760 <__ref_cmovns_rm2r_v>:
   27760:	55                   	push   %ebp
   27761:	57                   	push   %edi
   27762:	56                   	push   %esi
   27763:	53                   	push   %ebx
   27764:	e8 17 cd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27769:	81 c3 97 78 02 00    	add    $0x27897,%ebx
   2776f:	83 ec 10             	sub    $0x10,%esp
   27772:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27778:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2777e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27784:	0f b6 00             	movzbl (%eax),%eax
   27787:	57                   	push   %edi
   27788:	89 45 10             	mov    %eax,0x10(%ebp)
   2778b:	55                   	push   %ebp
   2778c:	89 47 10             	mov    %eax,0x10(%edi)
   2778f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27793:	83 c0 01             	add    $0x1,%eax
   27796:	50                   	push   %eax
   27797:	e8 04 a7 fe ff       	call   11ea0 <modrm_r_rm>
   2779c:	89 2c 24             	mov    %ebp,(%esp)
   2779f:	8d 70 01             	lea    0x1(%eax),%esi
   277a2:	57                   	push   %edi
   277a3:	89 f0                	mov    %esi,%eax
   277a5:	0f b6 c0             	movzbl %al,%eax
   277a8:	50                   	push   %eax
   277a9:	8d 83 02 67 fe ff    	lea    -0x198fe(%ebx),%eax
   277af:	50                   	push   %eax
   277b0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   277b6:	50                   	push   %eax
   277b7:	e8 e4 a9 fe ff       	call   121a0 <print_asm_2>
   277bc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   277c2:	83 c4 20             	add    $0x20,%esp
   277c5:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   277c9:	78 15                	js     277e0 <__ref_cmovns_rm2r_v+0x80>
   277cb:	e8 e0 f8 ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   277d0:	83 c4 0c             	add    $0xc,%esp
   277d3:	89 f0                	mov    %esi,%eax
   277d5:	5b                   	pop    %ebx
   277d6:	5e                   	pop    %esi
   277d7:	5f                   	pop    %edi
   277d8:	5d                   	pop    %ebp
   277d9:	c3                   	ret    
   277da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   277e0:	e8 fb 2f 00 00       	call   2a7e0 <set_ref>
   277e5:	83 c4 0c             	add    $0xc,%esp
   277e8:	89 f0                	mov    %esi,%eax
   277ea:	5b                   	pop    %ebx
   277eb:	5e                   	pop    %esi
   277ec:	5f                   	pop    %edi
   277ed:	5d                   	pop    %ebp
   277ee:	c3                   	ret    
   277ef:	90                   	nop

000277f0 <__ref_cmovo_rm2r_v>:
   277f0:	55                   	push   %ebp
   277f1:	57                   	push   %edi
   277f2:	56                   	push   %esi
   277f3:	53                   	push   %ebx
   277f4:	e8 87 cc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   277f9:	81 c3 07 78 02 00    	add    $0x27807,%ebx
   277ff:	83 ec 10             	sub    $0x10,%esp
   27802:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27808:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2780e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27814:	0f b6 00             	movzbl (%eax),%eax
   27817:	57                   	push   %edi
   27818:	89 45 10             	mov    %eax,0x10(%ebp)
   2781b:	55                   	push   %ebp
   2781c:	89 47 10             	mov    %eax,0x10(%edi)
   2781f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27823:	83 c0 01             	add    $0x1,%eax
   27826:	50                   	push   %eax
   27827:	e8 74 a6 fe ff       	call   11ea0 <modrm_r_rm>
   2782c:	89 2c 24             	mov    %ebp,(%esp)
   2782f:	8d 70 01             	lea    0x1(%eax),%esi
   27832:	57                   	push   %edi
   27833:	89 f0                	mov    %esi,%eax
   27835:	0f b6 c0             	movzbl %al,%eax
   27838:	50                   	push   %eax
   27839:	8d 83 ff 50 fe ff    	lea    -0x1af01(%ebx),%eax
   2783f:	50                   	push   %eax
   27840:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27846:	50                   	push   %eax
   27847:	e8 54 a9 fe ff       	call   121a0 <print_asm_2>
   2784c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27852:	83 c4 20             	add    $0x20,%esp
   27855:	f6 40 25 08          	testb  $0x8,0x25(%eax)
   27859:	74 15                	je     27870 <__ref_cmovo_rm2r_v+0x80>
   2785b:	e8 50 f8 ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27860:	83 c4 0c             	add    $0xc,%esp
   27863:	89 f0                	mov    %esi,%eax
   27865:	5b                   	pop    %ebx
   27866:	5e                   	pop    %esi
   27867:	5f                   	pop    %edi
   27868:	5d                   	pop    %ebp
   27869:	c3                   	ret    
   2786a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27870:	e8 6b 2f 00 00       	call   2a7e0 <set_ref>
   27875:	83 c4 0c             	add    $0xc,%esp
   27878:	89 f0                	mov    %esi,%eax
   2787a:	5b                   	pop    %ebx
   2787b:	5e                   	pop    %esi
   2787c:	5f                   	pop    %edi
   2787d:	5d                   	pop    %ebp
   2787e:	c3                   	ret    
   2787f:	90                   	nop

00027880 <__ref_cmovp_rm2r_v>:
   27880:	55                   	push   %ebp
   27881:	57                   	push   %edi
   27882:	56                   	push   %esi
   27883:	53                   	push   %ebx
   27884:	e8 f7 cb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27889:	81 c3 77 77 02 00    	add    $0x27777,%ebx
   2788f:	83 ec 10             	sub    $0x10,%esp
   27892:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27898:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2789e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   278a4:	0f b6 00             	movzbl (%eax),%eax
   278a7:	57                   	push   %edi
   278a8:	89 45 10             	mov    %eax,0x10(%ebp)
   278ab:	55                   	push   %ebp
   278ac:	89 47 10             	mov    %eax,0x10(%edi)
   278af:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   278b3:	83 c0 01             	add    $0x1,%eax
   278b6:	50                   	push   %eax
   278b7:	e8 e4 a5 fe ff       	call   11ea0 <modrm_r_rm>
   278bc:	89 2c 24             	mov    %ebp,(%esp)
   278bf:	8d 70 01             	lea    0x1(%eax),%esi
   278c2:	57                   	push   %edi
   278c3:	89 f0                	mov    %esi,%eax
   278c5:	0f b6 c0             	movzbl %al,%eax
   278c8:	50                   	push   %eax
   278c9:	8d 83 8c 62 fe ff    	lea    -0x19d74(%ebx),%eax
   278cf:	50                   	push   %eax
   278d0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   278d6:	50                   	push   %eax
   278d7:	e8 c4 a8 fe ff       	call   121a0 <print_asm_2>
   278dc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   278e2:	83 c4 20             	add    $0x20,%esp
   278e5:	f6 40 24 04          	testb  $0x4,0x24(%eax)
   278e9:	74 15                	je     27900 <__ref_cmovp_rm2r_v+0x80>
   278eb:	e8 c0 f7 ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   278f0:	83 c4 0c             	add    $0xc,%esp
   278f3:	89 f0                	mov    %esi,%eax
   278f5:	5b                   	pop    %ebx
   278f6:	5e                   	pop    %esi
   278f7:	5f                   	pop    %edi
   278f8:	5d                   	pop    %ebp
   278f9:	c3                   	ret    
   278fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27900:	e8 db 2e 00 00       	call   2a7e0 <set_ref>
   27905:	83 c4 0c             	add    $0xc,%esp
   27908:	89 f0                	mov    %esi,%eax
   2790a:	5b                   	pop    %ebx
   2790b:	5e                   	pop    %esi
   2790c:	5f                   	pop    %edi
   2790d:	5d                   	pop    %ebp
   2790e:	c3                   	ret    
   2790f:	90                   	nop

00027910 <__ref_cmovs_rm2r_v>:
   27910:	55                   	push   %ebp
   27911:	57                   	push   %edi
   27912:	56                   	push   %esi
   27913:	53                   	push   %ebx
   27914:	e8 67 cb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27919:	81 c3 e7 76 02 00    	add    $0x276e7,%ebx
   2791f:	83 ec 10             	sub    $0x10,%esp
   27922:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27928:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2792e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27934:	0f b6 00             	movzbl (%eax),%eax
   27937:	57                   	push   %edi
   27938:	89 45 10             	mov    %eax,0x10(%ebp)
   2793b:	55                   	push   %ebp
   2793c:	89 47 10             	mov    %eax,0x10(%edi)
   2793f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27943:	83 c0 01             	add    $0x1,%eax
   27946:	50                   	push   %eax
   27947:	e8 54 a5 fe ff       	call   11ea0 <modrm_r_rm>
   2794c:	89 2c 24             	mov    %ebp,(%esp)
   2794f:	8d 70 01             	lea    0x1(%eax),%esi
   27952:	57                   	push   %edi
   27953:	89 f0                	mov    %esi,%eax
   27955:	0f b6 c0             	movzbl %al,%eax
   27958:	50                   	push   %eax
   27959:	8d 83 51 66 fe ff    	lea    -0x199af(%ebx),%eax
   2795f:	50                   	push   %eax
   27960:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   27966:	50                   	push   %eax
   27967:	e8 34 a8 fe ff       	call   121a0 <print_asm_2>
   2796c:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27972:	83 c4 20             	add    $0x20,%esp
   27975:	80 78 24 00          	cmpb   $0x0,0x24(%eax)
   27979:	78 15                	js     27990 <__ref_cmovs_rm2r_v+0x80>
   2797b:	e8 60 2e 00 00       	call   2a7e0 <set_ref>
   27980:	83 c4 0c             	add    $0xc,%esp
   27983:	89 f0                	mov    %esi,%eax
   27985:	5b                   	pop    %ebx
   27986:	5e                   	pop    %esi
   27987:	5f                   	pop    %edi
   27988:	5d                   	pop    %ebp
   27989:	c3                   	ret    
   2798a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27990:	e8 1b f7 ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27995:	83 c4 0c             	add    $0xc,%esp
   27998:	89 f0                	mov    %esi,%eax
   2799a:	5b                   	pop    %ebx
   2799b:	5e                   	pop    %esi
   2799c:	5f                   	pop    %edi
   2799d:	5d                   	pop    %ebp
   2799e:	c3                   	ret    
   2799f:	90                   	nop

000279a0 <__ref_cmove_rm2r_v>:
   279a0:	55                   	push   %ebp
   279a1:	57                   	push   %edi
   279a2:	56                   	push   %esi
   279a3:	53                   	push   %ebx
   279a4:	e8 d7 ca fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   279a9:	81 c3 57 76 02 00    	add    $0x27657,%ebx
   279af:	83 ec 10             	sub    $0x10,%esp
   279b2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   279b8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   279be:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   279c4:	0f b6 00             	movzbl (%eax),%eax
   279c7:	57                   	push   %edi
   279c8:	89 45 10             	mov    %eax,0x10(%ebp)
   279cb:	55                   	push   %ebp
   279cc:	89 47 10             	mov    %eax,0x10(%edi)
   279cf:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   279d3:	83 c0 01             	add    $0x1,%eax
   279d6:	50                   	push   %eax
   279d7:	e8 c4 a4 fe ff       	call   11ea0 <modrm_r_rm>
   279dc:	89 2c 24             	mov    %ebp,(%esp)
   279df:	8d 70 01             	lea    0x1(%eax),%esi
   279e2:	57                   	push   %edi
   279e3:	89 f0                	mov    %esi,%eax
   279e5:	0f b6 c0             	movzbl %al,%eax
   279e8:	50                   	push   %eax
   279e9:	8d 83 f1 66 fe ff    	lea    -0x1990f(%ebx),%eax
   279ef:	50                   	push   %eax
   279f0:	8d 83 ef 6a fe ff    	lea    -0x19511(%ebx),%eax
   279f6:	50                   	push   %eax
   279f7:	e8 a4 a7 fe ff       	call   121a0 <print_asm_2>
   279fc:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   27a02:	83 c4 20             	add    $0x20,%esp
   27a05:	f6 40 24 40          	testb  $0x40,0x24(%eax)
   27a09:	74 15                	je     27a20 <__ref_cmove_rm2r_v+0x80>
   27a0b:	e8 a0 f6 ff ff       	call   270b0 <instr_execute_2op_cc_pass>
   27a10:	83 c4 0c             	add    $0xc,%esp
   27a13:	89 f0                	mov    %esi,%eax
   27a15:	5b                   	pop    %ebx
   27a16:	5e                   	pop    %esi
   27a17:	5f                   	pop    %edi
   27a18:	5d                   	pop    %ebp
   27a19:	c3                   	ret    
   27a1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27a20:	e8 bb 2d 00 00       	call   2a7e0 <set_ref>
   27a25:	83 c4 0c             	add    $0xc,%esp
   27a28:	89 f0                	mov    %esi,%eax
   27a2a:	5b                   	pop    %ebx
   27a2b:	5e                   	pop    %esi
   27a2c:	5f                   	pop    %edi
   27a2d:	5d                   	pop    %ebp
   27a2e:	c3                   	ret    
   27a2f:	90                   	nop

00027a30 <instr_execute_2op>:
   27a30:	56                   	push   %esi
   27a31:	53                   	push   %ebx
   27a32:	e8 49 ca fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27a37:	81 c3 c9 75 02 00    	add    $0x275c9,%ebx
   27a3d:	83 ec 04             	sub    $0x4,%esp
   27a40:	e8 9b 2d 00 00       	call   2a7e0 <set_ref>
   27a45:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   27a4b:	83 ec 0c             	sub    $0xc,%esp
   27a4e:	56                   	push   %esi
   27a4f:	e8 8c a9 fe ff       	call   123e0 <operand_read>
   27a54:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   27a5a:	8b 56 0c             	mov    0xc(%esi),%edx
   27a5d:	89 50 0c             	mov    %edx,0xc(%eax)
   27a60:	89 04 24             	mov    %eax,(%esp)
   27a63:	e8 28 ab fe ff       	call   12590 <operand_write>
   27a68:	83 c4 14             	add    $0x14,%esp
   27a6b:	5b                   	pop    %ebx
   27a6c:	5e                   	pop    %esi
   27a6d:	c3                   	ret    
   27a6e:	66 90                	xchg   %ax,%ax

00027a70 <__ref_mov_r2rm_b>:
   27a70:	55                   	push   %ebp
   27a71:	57                   	push   %edi
   27a72:	56                   	push   %esi
   27a73:	53                   	push   %ebx
   27a74:	e8 07 ca fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27a79:	81 c3 87 75 02 00    	add    $0x27587,%ebx
   27a7f:	83 ec 10             	sub    $0x10,%esp
   27a82:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   27a88:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27a8e:	56                   	push   %esi
   27a8f:	57                   	push   %edi
   27a90:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27a94:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   27a9b:	83 c0 01             	add    $0x1,%eax
   27a9e:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   27aa5:	50                   	push   %eax
   27aa6:	e8 f5 a3 fe ff       	call   11ea0 <modrm_r_rm>
   27aab:	8b 4e 10             	mov    0x10(%esi),%ecx
   27aae:	83 c4 10             	add    $0x10,%esp
   27ab1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   27ab7:	8d 68 01             	lea    0x1(%eax),%ebp
   27aba:	89 e8                	mov    %ebp,%eax
   27abc:	0f b6 c0             	movzbl %al,%eax
   27abf:	83 f9 08             	cmp    $0x8,%ecx
   27ac2:	74 12                	je     27ad6 <__ref_mov_r2rm_b+0x66>
   27ac4:	83 f9 10             	cmp    $0x10,%ecx
   27ac7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   27acd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   27ad3:	0f 45 d1             	cmovne %ecx,%edx
   27ad6:	83 ec 0c             	sub    $0xc,%esp
   27ad9:	56                   	push   %esi
   27ada:	57                   	push   %edi
   27adb:	50                   	push   %eax
   27adc:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27ae2:	52                   	push   %edx
   27ae3:	50                   	push   %eax
   27ae4:	e8 b7 a6 fe ff       	call   121a0 <print_asm_2>
   27ae9:	83 c4 20             	add    $0x20,%esp
   27aec:	e8 3f ff ff ff       	call   27a30 <instr_execute_2op>
   27af1:	83 c4 0c             	add    $0xc,%esp
   27af4:	89 e8                	mov    %ebp,%eax
   27af6:	5b                   	pop    %ebx
   27af7:	5e                   	pop    %esi
   27af8:	5f                   	pop    %edi
   27af9:	5d                   	pop    %ebp
   27afa:	c3                   	ret    
   27afb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   27aff:	90                   	nop

00027b00 <__ref_mov_r2rm_v>:
   27b00:	55                   	push   %ebp
   27b01:	57                   	push   %edi
   27b02:	56                   	push   %esi
   27b03:	53                   	push   %ebx
   27b04:	e8 77 c9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27b09:	81 c3 f7 74 02 00    	add    $0x274f7,%ebx
   27b0f:	83 ec 10             	sub    $0x10,%esp
   27b12:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27b18:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   27b1e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27b24:	0f b6 00             	movzbl (%eax),%eax
   27b27:	56                   	push   %esi
   27b28:	57                   	push   %edi
   27b29:	89 46 10             	mov    %eax,0x10(%esi)
   27b2c:	89 47 10             	mov    %eax,0x10(%edi)
   27b2f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27b33:	83 c0 01             	add    $0x1,%eax
   27b36:	50                   	push   %eax
   27b37:	e8 64 a3 fe ff       	call   11ea0 <modrm_r_rm>
   27b3c:	8b 4e 10             	mov    0x10(%esi),%ecx
   27b3f:	83 c4 10             	add    $0x10,%esp
   27b42:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   27b48:	8d 68 01             	lea    0x1(%eax),%ebp
   27b4b:	89 e8                	mov    %ebp,%eax
   27b4d:	0f b6 c0             	movzbl %al,%eax
   27b50:	83 f9 08             	cmp    $0x8,%ecx
   27b53:	74 12                	je     27b67 <__ref_mov_r2rm_v+0x67>
   27b55:	83 f9 10             	cmp    $0x10,%ecx
   27b58:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   27b5e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   27b64:	0f 45 d1             	cmovne %ecx,%edx
   27b67:	83 ec 0c             	sub    $0xc,%esp
   27b6a:	56                   	push   %esi
   27b6b:	57                   	push   %edi
   27b6c:	50                   	push   %eax
   27b6d:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27b73:	52                   	push   %edx
   27b74:	50                   	push   %eax
   27b75:	e8 26 a6 fe ff       	call   121a0 <print_asm_2>
   27b7a:	83 c4 20             	add    $0x20,%esp
   27b7d:	e8 ae fe ff ff       	call   27a30 <instr_execute_2op>
   27b82:	83 c4 0c             	add    $0xc,%esp
   27b85:	89 e8                	mov    %ebp,%eax
   27b87:	5b                   	pop    %ebx
   27b88:	5e                   	pop    %esi
   27b89:	5f                   	pop    %edi
   27b8a:	5d                   	pop    %ebp
   27b8b:	c3                   	ret    
   27b8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00027b90 <__ref_mov_rm2r_b>:
   27b90:	55                   	push   %ebp
   27b91:	57                   	push   %edi
   27b92:	56                   	push   %esi
   27b93:	53                   	push   %ebx
   27b94:	e8 e7 c8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27b99:	81 c3 67 74 02 00    	add    $0x27467,%ebx
   27b9f:	83 ec 10             	sub    $0x10,%esp
   27ba2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   27ba8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27bae:	57                   	push   %edi
   27baf:	56                   	push   %esi
   27bb0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27bb4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   27bbb:	83 c0 01             	add    $0x1,%eax
   27bbe:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   27bc5:	50                   	push   %eax
   27bc6:	e8 d5 a2 fe ff       	call   11ea0 <modrm_r_rm>
   27bcb:	8b 4e 10             	mov    0x10(%esi),%ecx
   27bce:	83 c4 10             	add    $0x10,%esp
   27bd1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   27bd7:	8d 68 01             	lea    0x1(%eax),%ebp
   27bda:	89 e8                	mov    %ebp,%eax
   27bdc:	0f b6 c0             	movzbl %al,%eax
   27bdf:	83 f9 08             	cmp    $0x8,%ecx
   27be2:	74 12                	je     27bf6 <__ref_mov_rm2r_b+0x66>
   27be4:	83 f9 10             	cmp    $0x10,%ecx
   27be7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   27bed:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   27bf3:	0f 45 d1             	cmovne %ecx,%edx
   27bf6:	83 ec 0c             	sub    $0xc,%esp
   27bf9:	56                   	push   %esi
   27bfa:	57                   	push   %edi
   27bfb:	50                   	push   %eax
   27bfc:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27c02:	52                   	push   %edx
   27c03:	50                   	push   %eax
   27c04:	e8 97 a5 fe ff       	call   121a0 <print_asm_2>
   27c09:	83 c4 20             	add    $0x20,%esp
   27c0c:	e8 1f fe ff ff       	call   27a30 <instr_execute_2op>
   27c11:	83 c4 0c             	add    $0xc,%esp
   27c14:	89 e8                	mov    %ebp,%eax
   27c16:	5b                   	pop    %ebx
   27c17:	5e                   	pop    %esi
   27c18:	5f                   	pop    %edi
   27c19:	5d                   	pop    %ebp
   27c1a:	c3                   	ret    
   27c1b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   27c1f:	90                   	nop

00027c20 <__ref_mov_rm2r_v>:
   27c20:	55                   	push   %ebp
   27c21:	57                   	push   %edi
   27c22:	56                   	push   %esi
   27c23:	53                   	push   %ebx
   27c24:	e8 57 c8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27c29:	81 c3 d7 73 02 00    	add    $0x273d7,%ebx
   27c2f:	83 ec 10             	sub    $0x10,%esp
   27c32:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27c38:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   27c3e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27c44:	0f b6 00             	movzbl (%eax),%eax
   27c47:	57                   	push   %edi
   27c48:	89 46 10             	mov    %eax,0x10(%esi)
   27c4b:	56                   	push   %esi
   27c4c:	89 47 10             	mov    %eax,0x10(%edi)
   27c4f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27c53:	83 c0 01             	add    $0x1,%eax
   27c56:	50                   	push   %eax
   27c57:	e8 44 a2 fe ff       	call   11ea0 <modrm_r_rm>
   27c5c:	8b 4e 10             	mov    0x10(%esi),%ecx
   27c5f:	83 c4 10             	add    $0x10,%esp
   27c62:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   27c68:	8d 68 01             	lea    0x1(%eax),%ebp
   27c6b:	89 e8                	mov    %ebp,%eax
   27c6d:	0f b6 c0             	movzbl %al,%eax
   27c70:	83 f9 08             	cmp    $0x8,%ecx
   27c73:	74 12                	je     27c87 <__ref_mov_rm2r_v+0x67>
   27c75:	83 f9 10             	cmp    $0x10,%ecx
   27c78:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   27c7e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   27c84:	0f 45 d1             	cmovne %ecx,%edx
   27c87:	83 ec 0c             	sub    $0xc,%esp
   27c8a:	56                   	push   %esi
   27c8b:	57                   	push   %edi
   27c8c:	50                   	push   %eax
   27c8d:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27c93:	52                   	push   %edx
   27c94:	50                   	push   %eax
   27c95:	e8 06 a5 fe ff       	call   121a0 <print_asm_2>
   27c9a:	83 c4 20             	add    $0x20,%esp
   27c9d:	e8 8e fd ff ff       	call   27a30 <instr_execute_2op>
   27ca2:	83 c4 0c             	add    $0xc,%esp
   27ca5:	89 e8                	mov    %ebp,%eax
   27ca7:	5b                   	pop    %ebx
   27ca8:	5e                   	pop    %esi
   27ca9:	5f                   	pop    %edi
   27caa:	5d                   	pop    %ebp
   27cab:	c3                   	ret    
   27cac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00027cb0 <__ref_mov_i2rm_b>:
   27cb0:	55                   	push   %ebp
   27cb1:	57                   	push   %edi
   27cb2:	56                   	push   %esi
   27cb3:	53                   	push   %ebx
   27cb4:	e8 c7 c7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27cb9:	81 c3 47 73 02 00    	add    $0x27347,%ebx
   27cbf:	83 ec 24             	sub    $0x24,%esp
   27cc2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   27cc6:	8d 45 01             	lea    0x1(%ebp),%eax
   27cc9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   27ccf:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27cd5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   27cdc:	52                   	push   %edx
   27cdd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   27ce4:	89 54 24 18          	mov    %edx,0x18(%esp)
   27ce8:	50                   	push   %eax
   27ce9:	e8 92 a2 fe ff       	call   11f80 <modrm_rm>
   27cee:	8b 77 10             	mov    0x10(%edi),%esi
   27cf1:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   27cf5:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   27cf9:	83 c0 01             	add    $0x1,%eax
   27cfc:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   27d02:	83 c4 10             	add    $0x10,%esp
   27d05:	01 c5                	add    %eax,%ebp
   27d07:	c1 ee 03             	shr    $0x3,%esi
   27d0a:	89 6f 04             	mov    %ebp,0x4(%edi)
   27d0d:	01 c6                	add    %eax,%esi
   27d0f:	8b 6a 10             	mov    0x10(%edx),%ebp
   27d12:	89 f0                	mov    %esi,%eax
   27d14:	0f b6 c8             	movzbl %al,%ecx
   27d17:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   27d1d:	83 fd 08             	cmp    $0x8,%ebp
   27d20:	74 12                	je     27d34 <__ref_mov_i2rm_b+0x84>
   27d22:	83 fd 10             	cmp    $0x10,%ebp
   27d25:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   27d2b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   27d31:	0f 45 c5             	cmovne %ebp,%eax
   27d34:	83 ec 0c             	sub    $0xc,%esp
   27d37:	52                   	push   %edx
   27d38:	57                   	push   %edi
   27d39:	51                   	push   %ecx
   27d3a:	50                   	push   %eax
   27d3b:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27d41:	50                   	push   %eax
   27d42:	e8 59 a4 fe ff       	call   121a0 <print_asm_2>
   27d47:	83 c4 20             	add    $0x20,%esp
   27d4a:	e8 e1 fc ff ff       	call   27a30 <instr_execute_2op>
   27d4f:	83 c4 1c             	add    $0x1c,%esp
   27d52:	89 f0                	mov    %esi,%eax
   27d54:	5b                   	pop    %ebx
   27d55:	5e                   	pop    %esi
   27d56:	5f                   	pop    %edi
   27d57:	5d                   	pop    %ebp
   27d58:	c3                   	ret    
   27d59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00027d60 <__ref_mov_i2rm_v>:
   27d60:	55                   	push   %ebp
   27d61:	57                   	push   %edi
   27d62:	56                   	push   %esi
   27d63:	53                   	push   %ebx
   27d64:	e8 17 c7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27d69:	81 c3 97 72 02 00    	add    $0x27297,%ebx
   27d6f:	83 ec 24             	sub    $0x24,%esp
   27d72:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   27d76:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27d7c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   27d82:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27d88:	0f b6 00             	movzbl (%eax),%eax
   27d8b:	89 42 10             	mov    %eax,0x10(%edx)
   27d8e:	52                   	push   %edx
   27d8f:	89 47 10             	mov    %eax,0x10(%edi)
   27d92:	8d 45 01             	lea    0x1(%ebp),%eax
   27d95:	89 54 24 18          	mov    %edx,0x18(%esp)
   27d99:	50                   	push   %eax
   27d9a:	e8 e1 a1 fe ff       	call   11f80 <modrm_rm>
   27d9f:	8b 77 10             	mov    0x10(%edi),%esi
   27da2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   27da6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   27daa:	83 c0 01             	add    $0x1,%eax
   27dad:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   27db3:	83 c4 10             	add    $0x10,%esp
   27db6:	01 c5                	add    %eax,%ebp
   27db8:	c1 ee 03             	shr    $0x3,%esi
   27dbb:	89 6f 04             	mov    %ebp,0x4(%edi)
   27dbe:	01 c6                	add    %eax,%esi
   27dc0:	8b 6a 10             	mov    0x10(%edx),%ebp
   27dc3:	89 f0                	mov    %esi,%eax
   27dc5:	0f b6 c8             	movzbl %al,%ecx
   27dc8:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   27dce:	83 fd 08             	cmp    $0x8,%ebp
   27dd1:	74 12                	je     27de5 <__ref_mov_i2rm_v+0x85>
   27dd3:	83 fd 10             	cmp    $0x10,%ebp
   27dd6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   27ddc:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   27de2:	0f 45 c5             	cmovne %ebp,%eax
   27de5:	83 ec 0c             	sub    $0xc,%esp
   27de8:	52                   	push   %edx
   27de9:	57                   	push   %edi
   27dea:	51                   	push   %ecx
   27deb:	50                   	push   %eax
   27dec:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27df2:	50                   	push   %eax
   27df3:	e8 a8 a3 fe ff       	call   121a0 <print_asm_2>
   27df8:	83 c4 20             	add    $0x20,%esp
   27dfb:	e8 30 fc ff ff       	call   27a30 <instr_execute_2op>
   27e00:	83 c4 1c             	add    $0x1c,%esp
   27e03:	89 f0                	mov    %esi,%eax
   27e05:	5b                   	pop    %ebx
   27e06:	5e                   	pop    %esi
   27e07:	5f                   	pop    %edi
   27e08:	5d                   	pop    %ebp
   27e09:	c3                   	ret    
   27e0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00027e10 <__ref_mov_i2r_b>:
   27e10:	53                   	push   %ebx
   27e11:	e8 6a c6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27e16:	81 c3 ea 71 02 00    	add    $0x271ea,%ebx
   27e1c:	83 ec 14             	sub    $0x14,%esp
   27e1f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   27e23:	83 c1 01             	add    $0x1,%ecx
   27e26:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   27e2c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   27e32:	89 48 04             	mov    %ecx,0x4(%eax)
   27e35:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   27e39:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   27e40:	83 e1 07             	and    $0x7,%ecx
   27e43:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   27e4a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   27e50:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   27e54:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   27e5a:	89 4a 04             	mov    %ecx,0x4(%edx)
   27e5d:	52                   	push   %edx
   27e5e:	50                   	push   %eax
   27e5f:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   27e65:	6a 02                	push   $0x2
   27e67:	50                   	push   %eax
   27e68:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27e6e:	50                   	push   %eax
   27e6f:	e8 2c a3 fe ff       	call   121a0 <print_asm_2>
   27e74:	83 c4 20             	add    $0x20,%esp
   27e77:	e8 b4 fb ff ff       	call   27a30 <instr_execute_2op>
   27e7c:	83 c4 08             	add    $0x8,%esp
   27e7f:	b8 02 00 00 00       	mov    $0x2,%eax
   27e84:	5b                   	pop    %ebx
   27e85:	c3                   	ret    
   27e86:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   27e8d:	8d 76 00             	lea    0x0(%esi),%esi

00027e90 <__ref_mov_i2r_v>:
   27e90:	55                   	push   %ebp
   27e91:	57                   	push   %edi
   27e92:	56                   	push   %esi
   27e93:	53                   	push   %ebx
   27e94:	e8 e7 c5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27e99:	81 c3 67 71 02 00    	add    $0x27167,%ebx
   27e9f:	83 ec 0c             	sub    $0xc,%esp
   27ea2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   27ea8:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   27eae:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   27eb4:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   27eba:	0f b6 08             	movzbl (%eax),%ecx
   27ebd:	8b 44 24 20          	mov    0x20(%esp),%eax
   27ec1:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   27ec7:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   27ecb:	83 c0 01             	add    $0x1,%eax
   27ece:	89 cf                	mov    %ecx,%edi
   27ed0:	89 4d 10             	mov    %ecx,0x10(%ebp)
   27ed3:	89 42 04             	mov    %eax,0x4(%edx)
   27ed6:	8b 44 24 24          	mov    0x24(%esp),%eax
   27eda:	c1 ef 03             	shr    $0x3,%edi
   27edd:	89 4a 10             	mov    %ecx,0x10(%edx)
   27ee0:	83 c7 01             	add    $0x1,%edi
   27ee3:	83 e0 07             	and    $0x7,%eax
   27ee6:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   27eed:	89 45 04             	mov    %eax,0x4(%ebp)
   27ef0:	83 f9 08             	cmp    $0x8,%ecx
   27ef3:	74 12                	je     27f07 <__ref_mov_i2r_v+0x77>
   27ef5:	83 f9 10             	cmp    $0x10,%ecx
   27ef8:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   27efe:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   27f04:	0f 45 f0             	cmovne %eax,%esi
   27f07:	83 ec 0c             	sub    $0xc,%esp
   27f0a:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27f10:	55                   	push   %ebp
   27f11:	52                   	push   %edx
   27f12:	57                   	push   %edi
   27f13:	56                   	push   %esi
   27f14:	50                   	push   %eax
   27f15:	e8 86 a2 fe ff       	call   121a0 <print_asm_2>
   27f1a:	83 c4 20             	add    $0x20,%esp
   27f1d:	e8 0e fb ff ff       	call   27a30 <instr_execute_2op>
   27f22:	83 c4 0c             	add    $0xc,%esp
   27f25:	89 f8                	mov    %edi,%eax
   27f27:	5b                   	pop    %ebx
   27f28:	5e                   	pop    %esi
   27f29:	5f                   	pop    %edi
   27f2a:	5d                   	pop    %ebp
   27f2b:	c3                   	ret    
   27f2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00027f30 <__ref_mov_a2o_b>:
   27f30:	55                   	push   %ebp
   27f31:	57                   	push   %edi
   27f32:	56                   	push   %esi
   27f33:	53                   	push   %ebx
   27f34:	e8 47 c5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   27f39:	81 c3 c7 70 02 00    	add    $0x270c7,%ebx
   27f3f:	83 ec 0c             	sub    $0xc,%esp
   27f42:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   27f48:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   27f4e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   27f54:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   27f58:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   27f5f:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   27f66:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   27f6c:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   27f70:	75 7e                	jne    27ff0 <__ref_mov_a2o_b+0xc0>
   27f72:	83 ec 08             	sub    $0x8,%esp
   27f75:	6a 04                	push   $0x4
   27f77:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   27f7b:	83 c0 01             	add    $0x1,%eax
   27f7e:	50                   	push   %eax
   27f7f:	e8 1c 6d ff ff       	call   1eca0 <instr_fetch>
   27f84:	83 c4 10             	add    $0x10,%esp
   27f87:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   27f8b:	89 46 04             	mov    %eax,0x4(%esi)
   27f8e:	74 03                	je     27f93 <__ref_mov_a2o_b+0x63>
   27f90:	89 46 14             	mov    %eax,0x14(%esi)
   27f93:	8b 56 10             	mov    0x10(%esi),%edx
   27f96:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   27f9c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   27fa2:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   27fa9:	83 fa 08             	cmp    $0x8,%edx
   27fac:	74 12                	je     27fc0 <__ref_mov_a2o_b+0x90>
   27fae:	83 fa 10             	cmp    $0x10,%edx
   27fb1:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   27fb7:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   27fbd:	0f 45 c2             	cmovne %edx,%eax
   27fc0:	83 ec 0c             	sub    $0xc,%esp
   27fc3:	56                   	push   %esi
   27fc4:	57                   	push   %edi
   27fc5:	6a 05                	push   $0x5
   27fc7:	50                   	push   %eax
   27fc8:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   27fce:	50                   	push   %eax
   27fcf:	e8 cc a1 fe ff       	call   121a0 <print_asm_2>
   27fd4:	83 c4 20             	add    $0x20,%esp
   27fd7:	e8 54 fa ff ff       	call   27a30 <instr_execute_2op>
   27fdc:	83 c4 0c             	add    $0xc,%esp
   27fdf:	b8 05 00 00 00       	mov    $0x5,%eax
   27fe4:	5b                   	pop    %ebx
   27fe5:	5e                   	pop    %esi
   27fe6:	5f                   	pop    %edi
   27fe7:	5d                   	pop    %ebp
   27fe8:	c3                   	ret    
   27fe9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   27ff0:	83 ec 0c             	sub    $0xc,%esp
   27ff3:	56                   	push   %esi
   27ff4:	e8 07 aa fe ff       	call   12a00 <clear_operand_mem_addr>
   27ff9:	83 c4 10             	add    $0x10,%esp
   27ffc:	e9 71 ff ff ff       	jmp    27f72 <__ref_mov_a2o_b+0x42>
   28001:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   28008:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2800f:	90                   	nop

00028010 <__ref_mov_a2o_v>:
   28010:	55                   	push   %ebp
   28011:	57                   	push   %edi
   28012:	56                   	push   %esi
   28013:	53                   	push   %ebx
   28014:	e8 67 c4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28019:	81 c3 e7 6f 02 00    	add    $0x26fe7,%ebx
   2801f:	83 ec 0c             	sub    $0xc,%esp
   28022:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28028:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   2802e:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   28034:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2803a:	0f b6 00             	movzbl (%eax),%eax
   2803d:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   28041:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   28047:	89 46 10             	mov    %eax,0x10(%esi)
   2804a:	89 47 10             	mov    %eax,0x10(%edi)
   2804d:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   28051:	75 7d                	jne    280d0 <__ref_mov_a2o_v+0xc0>
   28053:	83 ec 08             	sub    $0x8,%esp
   28056:	6a 04                	push   $0x4
   28058:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   2805c:	83 c0 01             	add    $0x1,%eax
   2805f:	50                   	push   %eax
   28060:	e8 3b 6c ff ff       	call   1eca0 <instr_fetch>
   28065:	83 c4 10             	add    $0x10,%esp
   28068:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   2806c:	89 46 04             	mov    %eax,0x4(%esi)
   2806f:	74 03                	je     28074 <__ref_mov_a2o_v+0x64>
   28071:	89 46 14             	mov    %eax,0x14(%esi)
   28074:	8b 56 10             	mov    0x10(%esi),%edx
   28077:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   2807d:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28083:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   2808a:	83 fa 08             	cmp    $0x8,%edx
   2808d:	74 12                	je     280a1 <__ref_mov_a2o_v+0x91>
   2808f:	83 fa 10             	cmp    $0x10,%edx
   28092:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   28098:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   2809e:	0f 45 c2             	cmovne %edx,%eax
   280a1:	83 ec 0c             	sub    $0xc,%esp
   280a4:	56                   	push   %esi
   280a5:	57                   	push   %edi
   280a6:	6a 05                	push   $0x5
   280a8:	50                   	push   %eax
   280a9:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   280af:	50                   	push   %eax
   280b0:	e8 eb a0 fe ff       	call   121a0 <print_asm_2>
   280b5:	83 c4 20             	add    $0x20,%esp
   280b8:	e8 73 f9 ff ff       	call   27a30 <instr_execute_2op>
   280bd:	83 c4 0c             	add    $0xc,%esp
   280c0:	b8 05 00 00 00       	mov    $0x5,%eax
   280c5:	5b                   	pop    %ebx
   280c6:	5e                   	pop    %esi
   280c7:	5f                   	pop    %edi
   280c8:	5d                   	pop    %ebp
   280c9:	c3                   	ret    
   280ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   280d0:	83 ec 0c             	sub    $0xc,%esp
   280d3:	56                   	push   %esi
   280d4:	e8 27 a9 fe ff       	call   12a00 <clear_operand_mem_addr>
   280d9:	83 c4 10             	add    $0x10,%esp
   280dc:	e9 72 ff ff ff       	jmp    28053 <__ref_mov_a2o_v+0x43>
   280e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   280e8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   280ef:	90                   	nop

000280f0 <__ref_mov_o2a_b>:
   280f0:	55                   	push   %ebp
   280f1:	57                   	push   %edi
   280f2:	56                   	push   %esi
   280f3:	53                   	push   %ebx
   280f4:	e8 87 c3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   280f9:	81 c3 07 6f 02 00    	add    $0x26f07,%ebx
   280ff:	83 ec 0c             	sub    $0xc,%esp
   28102:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   28108:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2810e:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   28114:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   28118:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   2811f:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   28126:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   2812c:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   28130:	75 7e                	jne    281b0 <__ref_mov_o2a_b+0xc0>
   28132:	83 ec 08             	sub    $0x8,%esp
   28135:	6a 04                	push   $0x4
   28137:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   2813b:	83 c0 01             	add    $0x1,%eax
   2813e:	50                   	push   %eax
   2813f:	e8 5c 6b ff ff       	call   1eca0 <instr_fetch>
   28144:	83 c4 10             	add    $0x10,%esp
   28147:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   2814b:	89 46 04             	mov    %eax,0x4(%esi)
   2814e:	74 03                	je     28153 <__ref_mov_o2a_b+0x63>
   28150:	89 46 14             	mov    %eax,0x14(%esi)
   28153:	8b 57 10             	mov    0x10(%edi),%edx
   28156:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   2815c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28162:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   28169:	83 fa 08             	cmp    $0x8,%edx
   2816c:	74 12                	je     28180 <__ref_mov_o2a_b+0x90>
   2816e:	83 fa 10             	cmp    $0x10,%edx
   28171:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   28177:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   2817d:	0f 45 c2             	cmovne %edx,%eax
   28180:	83 ec 0c             	sub    $0xc,%esp
   28183:	57                   	push   %edi
   28184:	56                   	push   %esi
   28185:	6a 05                	push   $0x5
   28187:	50                   	push   %eax
   28188:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   2818e:	50                   	push   %eax
   2818f:	e8 0c a0 fe ff       	call   121a0 <print_asm_2>
   28194:	83 c4 20             	add    $0x20,%esp
   28197:	e8 94 f8 ff ff       	call   27a30 <instr_execute_2op>
   2819c:	83 c4 0c             	add    $0xc,%esp
   2819f:	b8 05 00 00 00       	mov    $0x5,%eax
   281a4:	5b                   	pop    %ebx
   281a5:	5e                   	pop    %esi
   281a6:	5f                   	pop    %edi
   281a7:	5d                   	pop    %ebp
   281a8:	c3                   	ret    
   281a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   281b0:	83 ec 0c             	sub    $0xc,%esp
   281b3:	56                   	push   %esi
   281b4:	e8 47 a8 fe ff       	call   12a00 <clear_operand_mem_addr>
   281b9:	83 c4 10             	add    $0x10,%esp
   281bc:	e9 71 ff ff ff       	jmp    28132 <__ref_mov_o2a_b+0x42>
   281c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   281c8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   281cf:	90                   	nop

000281d0 <__ref_mov_o2a_v>:
   281d0:	55                   	push   %ebp
   281d1:	57                   	push   %edi
   281d2:	56                   	push   %esi
   281d3:	53                   	push   %ebx
   281d4:	e8 a7 c2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   281d9:	81 c3 27 6e 02 00    	add    $0x26e27,%ebx
   281df:	83 ec 0c             	sub    $0xc,%esp
   281e2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   281e8:	8d ab f4 24 05 00    	lea    0x524f4(%ebx),%ebp
   281ee:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   281f4:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   281fa:	0f b6 00             	movzbl (%eax),%eax
   281fd:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   28201:	c7 06 02 00 00 00    	movl   $0x2,(%esi)
   28207:	89 47 10             	mov    %eax,0x10(%edi)
   2820a:	89 46 10             	mov    %eax,0x10(%esi)
   2820d:	c6 46 08 03          	movb   $0x3,0x8(%esi)
   28211:	75 7d                	jne    28290 <__ref_mov_o2a_v+0xc0>
   28213:	83 ec 08             	sub    $0x8,%esp
   28216:	6a 04                	push   $0x4
   28218:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   2821c:	83 c0 01             	add    $0x1,%eax
   2821f:	50                   	push   %eax
   28220:	e8 7b 6a ff ff       	call   1eca0 <instr_fetch>
   28225:	83 c4 10             	add    $0x10,%esp
   28228:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
   2822c:	89 46 04             	mov    %eax,0x4(%esi)
   2822f:	74 03                	je     28234 <__ref_mov_o2a_v+0x64>
   28231:	89 46 14             	mov    %eax,0x14(%esi)
   28234:	8b 57 10             	mov    0x10(%edi),%edx
   28237:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
   2823d:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28243:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   2824a:	83 fa 08             	cmp    $0x8,%edx
   2824d:	74 12                	je     28261 <__ref_mov_o2a_v+0x91>
   2824f:	83 fa 10             	cmp    $0x10,%edx
   28252:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   28258:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   2825e:	0f 45 c2             	cmovne %edx,%eax
   28261:	83 ec 0c             	sub    $0xc,%esp
   28264:	57                   	push   %edi
   28265:	56                   	push   %esi
   28266:	6a 05                	push   $0x5
   28268:	50                   	push   %eax
   28269:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   2826f:	50                   	push   %eax
   28270:	e8 2b 9f fe ff       	call   121a0 <print_asm_2>
   28275:	83 c4 20             	add    $0x20,%esp
   28278:	e8 b3 f7 ff ff       	call   27a30 <instr_execute_2op>
   2827d:	83 c4 0c             	add    $0xc,%esp
   28280:	b8 05 00 00 00       	mov    $0x5,%eax
   28285:	5b                   	pop    %ebx
   28286:	5e                   	pop    %esi
   28287:	5f                   	pop    %edi
   28288:	5d                   	pop    %ebp
   28289:	c3                   	ret    
   2828a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   28290:	83 ec 0c             	sub    $0xc,%esp
   28293:	56                   	push   %esi
   28294:	e8 67 a7 fe ff       	call   12a00 <clear_operand_mem_addr>
   28299:	83 c4 10             	add    $0x10,%esp
   2829c:	e9 72 ff ff ff       	jmp    28213 <__ref_mov_o2a_v+0x43>
   282a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   282a8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   282af:	90                   	nop

000282b0 <__ref_mov_zrm82r_v>:
   282b0:	55                   	push   %ebp
   282b1:	57                   	push   %edi
   282b2:	56                   	push   %esi
   282b3:	53                   	push   %ebx
   282b4:	e8 c7 c1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   282b9:	81 c3 47 6d 02 00    	add    $0x26d47,%ebx
   282bf:	83 ec 5c             	sub    $0x5c,%esp
   282c2:	e8 19 25 00 00       	call   2a7e0 <set_ref>
   282c7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   282cd:	c7 44 24 3c 08 00 00 	movl   $0x8,0x3c(%esp)
   282d4:	00 
   282d5:	83 ec 04             	sub    $0x4,%esp
   282d8:	0f b6 00             	movzbl (%eax),%eax
   282db:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   282df:	8d 7c 24 30          	lea    0x30(%esp),%edi
   282e3:	57                   	push   %edi
   282e4:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   282e8:	55                   	push   %ebp
   282e9:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   282ed:	83 c0 01             	add    $0x1,%eax
   282f0:	50                   	push   %eax
   282f1:	e8 aa 9b fe ff       	call   11ea0 <modrm_r_rm>
   282f6:	89 3c 24             	mov    %edi,(%esp)
   282f9:	8d 70 01             	lea    0x1(%eax),%esi
   282fc:	e8 df a0 fe ff       	call   123e0 <operand_read>
   28301:	8b 44 24 48          	mov    0x48(%esp),%eax
   28305:	89 2c 24             	mov    %ebp,(%esp)
   28308:	89 44 24 24          	mov    %eax,0x24(%esp)
   2830c:	e8 7f a2 fe ff       	call   12590 <operand_write>
   28311:	89 f0                	mov    %esi,%eax
   28313:	89 2c 24             	mov    %ebp,(%esp)
   28316:	0f b6 c0             	movzbl %al,%eax
   28319:	57                   	push   %edi
   2831a:	50                   	push   %eax
   2831b:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   28321:	50                   	push   %eax
   28322:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   28328:	50                   	push   %eax
   28329:	e8 72 9e fe ff       	call   121a0 <print_asm_2>
   2832e:	83 c4 7c             	add    $0x7c,%esp
   28331:	89 f0                	mov    %esi,%eax
   28333:	5b                   	pop    %ebx
   28334:	5e                   	pop    %esi
   28335:	5f                   	pop    %edi
   28336:	5d                   	pop    %ebp
   28337:	c3                   	ret    
   28338:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2833f:	90                   	nop

00028340 <__ref_mov_zrm162r_l>:
   28340:	55                   	push   %ebp
   28341:	57                   	push   %edi
   28342:	56                   	push   %esi
   28343:	53                   	push   %ebx
   28344:	e8 37 c1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28349:	81 c3 b7 6c 02 00    	add    $0x26cb7,%ebx
   2834f:	83 ec 5c             	sub    $0x5c,%esp
   28352:	e8 89 24 00 00       	call   2a7e0 <set_ref>
   28357:	c7 44 24 18 20 00 00 	movl   $0x20,0x18(%esp)
   2835e:	00 
   2835f:	83 ec 04             	sub    $0x4,%esp
   28362:	c7 44 24 40 10 00 00 	movl   $0x10,0x40(%esp)
   28369:	00 
   2836a:	8d 7c 24 30          	lea    0x30(%esp),%edi
   2836e:	57                   	push   %edi
   2836f:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   28373:	55                   	push   %ebp
   28374:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   28378:	83 c0 01             	add    $0x1,%eax
   2837b:	50                   	push   %eax
   2837c:	e8 1f 9b fe ff       	call   11ea0 <modrm_r_rm>
   28381:	89 3c 24             	mov    %edi,(%esp)
   28384:	8d 70 01             	lea    0x1(%eax),%esi
   28387:	e8 54 a0 fe ff       	call   123e0 <operand_read>
   2838c:	8b 44 24 48          	mov    0x48(%esp),%eax
   28390:	89 2c 24             	mov    %ebp,(%esp)
   28393:	89 44 24 24          	mov    %eax,0x24(%esp)
   28397:	e8 f4 a1 fe ff       	call   12590 <operand_write>
   2839c:	89 f0                	mov    %esi,%eax
   2839e:	89 2c 24             	mov    %ebp,(%esp)
   283a1:	0f b6 c0             	movzbl %al,%eax
   283a4:	57                   	push   %edi
   283a5:	50                   	push   %eax
   283a6:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   283ac:	50                   	push   %eax
   283ad:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   283b3:	50                   	push   %eax
   283b4:	e8 e7 9d fe ff       	call   121a0 <print_asm_2>
   283b9:	83 c4 7c             	add    $0x7c,%esp
   283bc:	89 f0                	mov    %esi,%eax
   283be:	5b                   	pop    %ebx
   283bf:	5e                   	pop    %esi
   283c0:	5f                   	pop    %edi
   283c1:	5d                   	pop    %ebp
   283c2:	c3                   	ret    
   283c3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   283ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000283d0 <__ref_mov_srm82r_v>:
   283d0:	55                   	push   %ebp
   283d1:	57                   	push   %edi
   283d2:	56                   	push   %esi
   283d3:	53                   	push   %ebx
   283d4:	e8 a7 c0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   283d9:	81 c3 27 6c 02 00    	add    $0x26c27,%ebx
   283df:	83 ec 5c             	sub    $0x5c,%esp
   283e2:	e8 f9 23 00 00       	call   2a7e0 <set_ref>
   283e7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   283ed:	c7 44 24 3c 08 00 00 	movl   $0x8,0x3c(%esp)
   283f4:	00 
   283f5:	83 ec 04             	sub    $0x4,%esp
   283f8:	0f b6 00             	movzbl (%eax),%eax
   283fb:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   283ff:	8d 7c 24 30          	lea    0x30(%esp),%edi
   28403:	57                   	push   %edi
   28404:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   28408:	55                   	push   %ebp
   28409:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   2840d:	83 c0 01             	add    $0x1,%eax
   28410:	50                   	push   %eax
   28411:	e8 8a 9a fe ff       	call   11ea0 <modrm_r_rm>
   28416:	89 3c 24             	mov    %edi,(%esp)
   28419:	8d 70 01             	lea    0x1(%eax),%esi
   2841c:	e8 bf 9f fe ff       	call   123e0 <operand_read>
   28421:	0f be 44 24 48       	movsbl 0x48(%esp),%eax
   28426:	89 2c 24             	mov    %ebp,(%esp)
   28429:	89 44 24 24          	mov    %eax,0x24(%esp)
   2842d:	e8 5e a1 fe ff       	call   12590 <operand_write>
   28432:	89 f0                	mov    %esi,%eax
   28434:	89 2c 24             	mov    %ebp,(%esp)
   28437:	0f b6 c0             	movzbl %al,%eax
   2843a:	57                   	push   %edi
   2843b:	50                   	push   %eax
   2843c:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   28442:	50                   	push   %eax
   28443:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   28449:	50                   	push   %eax
   2844a:	e8 51 9d fe ff       	call   121a0 <print_asm_2>
   2844f:	83 c4 7c             	add    $0x7c,%esp
   28452:	89 f0                	mov    %esi,%eax
   28454:	5b                   	pop    %ebx
   28455:	5e                   	pop    %esi
   28456:	5f                   	pop    %edi
   28457:	5d                   	pop    %ebp
   28458:	c3                   	ret    
   28459:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00028460 <__ref_mov_srm162r_l>:
   28460:	55                   	push   %ebp
   28461:	57                   	push   %edi
   28462:	56                   	push   %esi
   28463:	53                   	push   %ebx
   28464:	e8 17 c0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28469:	81 c3 97 6b 02 00    	add    $0x26b97,%ebx
   2846f:	83 ec 5c             	sub    $0x5c,%esp
   28472:	e8 69 23 00 00       	call   2a7e0 <set_ref>
   28477:	c7 44 24 18 20 00 00 	movl   $0x20,0x18(%esp)
   2847e:	00 
   2847f:	83 ec 04             	sub    $0x4,%esp
   28482:	c7 44 24 40 10 00 00 	movl   $0x10,0x40(%esp)
   28489:	00 
   2848a:	8d 7c 24 30          	lea    0x30(%esp),%edi
   2848e:	57                   	push   %edi
   2848f:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   28493:	55                   	push   %ebp
   28494:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   28498:	83 c0 01             	add    $0x1,%eax
   2849b:	50                   	push   %eax
   2849c:	e8 ff 99 fe ff       	call   11ea0 <modrm_r_rm>
   284a1:	89 3c 24             	mov    %edi,(%esp)
   284a4:	8d 70 01             	lea    0x1(%eax),%esi
   284a7:	e8 34 9f fe ff       	call   123e0 <operand_read>
   284ac:	0f bf 44 24 48       	movswl 0x48(%esp),%eax
   284b1:	89 2c 24             	mov    %ebp,(%esp)
   284b4:	89 44 24 24          	mov    %eax,0x24(%esp)
   284b8:	e8 d3 a0 fe ff       	call   12590 <operand_write>
   284bd:	89 f0                	mov    %esi,%eax
   284bf:	89 2c 24             	mov    %ebp,(%esp)
   284c2:	0f b6 c0             	movzbl %al,%eax
   284c5:	57                   	push   %edi
   284c6:	50                   	push   %eax
   284c7:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   284cd:	50                   	push   %eax
   284ce:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   284d4:	50                   	push   %eax
   284d5:	e8 c6 9c fe ff       	call   121a0 <print_asm_2>
   284da:	83 c4 7c             	add    $0x7c,%esp
   284dd:	89 f0                	mov    %esi,%eax
   284df:	5b                   	pop    %ebx
   284e0:	5e                   	pop    %esi
   284e1:	5f                   	pop    %edi
   284e2:	5d                   	pop    %ebp
   284e3:	c3                   	ret    
   284e4:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   284eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   284ef:	90                   	nop

000284f0 <__ref_mov_r2c_l>:
   284f0:	55                   	push   %ebp
   284f1:	57                   	push   %edi
   284f2:	56                   	push   %esi
   284f3:	53                   	push   %ebx
   284f4:	e8 87 bf fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   284f9:	81 c3 07 6b 02 00    	add    $0x26b07,%ebx
   284ff:	83 ec 5c             	sub    $0x5c,%esp
   28502:	e8 d9 22 00 00       	call   2a7e0 <set_ref>
   28507:	c7 44 24 3c 20 00 00 	movl   $0x20,0x3c(%esp)
   2850e:	00 
   2850f:	83 ec 04             	sub    $0x4,%esp
   28512:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   28519:	00 
   2851a:	8d 6c 24 30          	lea    0x30(%esp),%ebp
   2851e:	55                   	push   %ebp
   2851f:	8d 7c 24 10          	lea    0x10(%esp),%edi
   28523:	57                   	push   %edi
   28524:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   28528:	83 c0 01             	add    $0x1,%eax
   2852b:	50                   	push   %eax
   2852c:	e8 6f 99 fe ff       	call   11ea0 <modrm_r_rm>
   28531:	83 c4 10             	add    $0x10,%esp
   28534:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%esp)
   28539:	75 4b                	jne    28586 <__ref_mov_r2c_l+0x96>
   2853b:	83 ec 0c             	sub    $0xc,%esp
   2853e:	8d 70 01             	lea    0x1(%eax),%esi
   28541:	55                   	push   %ebp
   28542:	e8 99 9e fe ff       	call   123e0 <operand_read>
   28547:	8b 44 24 48          	mov    0x48(%esp),%eax
   2854b:	89 3c 24             	mov    %edi,(%esp)
   2854e:	c7 44 24 18 03 00 00 	movl   $0x3,0x18(%esp)
   28555:	00 
   28556:	89 44 24 24          	mov    %eax,0x24(%esp)
   2855a:	e8 31 a0 fe ff       	call   12590 <operand_write>
   2855f:	89 f0                	mov    %esi,%eax
   28561:	89 3c 24             	mov    %edi,(%esp)
   28564:	0f b6 c0             	movzbl %al,%eax
   28567:	55                   	push   %ebp
   28568:	50                   	push   %eax
   28569:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   2856f:	50                   	push   %eax
   28570:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   28576:	50                   	push   %eax
   28577:	e8 24 9c fe ff       	call   121a0 <print_asm_2>
   2857c:	83 c4 7c             	add    $0x7c,%esp
   2857f:	89 f0                	mov    %esi,%eax
   28581:	5b                   	pop    %ebx
   28582:	5e                   	pop    %esi
   28583:	5f                   	pop    %edi
   28584:	5d                   	pop    %ebp
   28585:	c3                   	ret    
   28586:	8d 83 c8 6d fe ff    	lea    -0x19238(%ebx),%eax
   2858c:	50                   	push   %eax
   2858d:	8d 83 89 6d fe ff    	lea    -0x19277(%ebx),%eax
   28593:	6a 5a                	push   $0x5a
   28595:	50                   	push   %eax
   28596:	8d 83 a5 6d fe ff    	lea    -0x1925b(%ebx),%eax
   2859c:	50                   	push   %eax
   2859d:	e8 6e bd fd ff       	call   4310 <__assert_fail@plt>
   285a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   285a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000285b0 <__ref_mov_c2r_l>:
   285b0:	55                   	push   %ebp
   285b1:	57                   	push   %edi
   285b2:	56                   	push   %esi
   285b3:	53                   	push   %ebx
   285b4:	e8 c7 be fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   285b9:	81 c3 47 6a 02 00    	add    $0x26a47,%ebx
   285bf:	83 ec 5c             	sub    $0x5c,%esp
   285c2:	e8 19 22 00 00       	call   2a7e0 <set_ref>
   285c7:	c7 44 24 3c 20 00 00 	movl   $0x20,0x3c(%esp)
   285ce:	00 
   285cf:	83 ec 04             	sub    $0x4,%esp
   285d2:	c7 44 24 1c 20 00 00 	movl   $0x20,0x1c(%esp)
   285d9:	00 
   285da:	8d 7c 24 30          	lea    0x30(%esp),%edi
   285de:	57                   	push   %edi
   285df:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   285e3:	55                   	push   %ebp
   285e4:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   285e8:	83 c0 01             	add    $0x1,%eax
   285eb:	50                   	push   %eax
   285ec:	e8 af 98 fe ff       	call   11ea0 <modrm_r_rm>
   285f1:	83 c4 10             	add    $0x10,%esp
   285f4:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%esp)
   285f9:	75 4b                	jne    28646 <__ref_mov_c2r_l+0x96>
   285fb:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
   28602:	00 
   28603:	83 ec 0c             	sub    $0xc,%esp
   28606:	8d 70 01             	lea    0x1(%eax),%esi
   28609:	55                   	push   %ebp
   2860a:	e8 d1 9d fe ff       	call   123e0 <operand_read>
   2860f:	8b 44 24 24          	mov    0x24(%esp),%eax
   28613:	89 3c 24             	mov    %edi,(%esp)
   28616:	89 44 24 48          	mov    %eax,0x48(%esp)
   2861a:	e8 71 9f fe ff       	call   12590 <operand_write>
   2861f:	89 f0                	mov    %esi,%eax
   28621:	89 3c 24             	mov    %edi,(%esp)
   28624:	0f b6 c0             	movzbl %al,%eax
   28627:	55                   	push   %ebp
   28628:	50                   	push   %eax
   28629:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   2862f:	50                   	push   %eax
   28630:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   28636:	50                   	push   %eax
   28637:	e8 64 9b fe ff       	call   121a0 <print_asm_2>
   2863c:	83 c4 7c             	add    $0x7c,%esp
   2863f:	89 f0                	mov    %esi,%eax
   28641:	5b                   	pop    %ebx
   28642:	5e                   	pop    %esi
   28643:	5f                   	pop    %edi
   28644:	5d                   	pop    %ebp
   28645:	c3                   	ret    
   28646:	8d 83 b8 6d fe ff    	lea    -0x19248(%ebx),%eax
   2864c:	50                   	push   %eax
   2864d:	8d 83 89 6d fe ff    	lea    -0x19277(%ebx),%eax
   28653:	6a 69                	push   $0x69
   28655:	50                   	push   %eax
   28656:	8d 83 a5 6d fe ff    	lea    -0x1925b(%ebx),%eax
   2865c:	50                   	push   %eax
   2865d:	e8 ae bc fd ff       	call   4310 <__assert_fail@plt>
   28662:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   28669:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00028670 <__ref_mov_rm2s_w>:
   28670:	55                   	push   %ebp
   28671:	57                   	push   %edi
   28672:	56                   	push   %esi
   28673:	53                   	push   %ebx
   28674:	e8 07 be fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28679:	81 c3 87 69 02 00    	add    $0x26987,%ebx
   2867f:	83 ec 5c             	sub    $0x5c,%esp
   28682:	e8 59 21 00 00       	call   2a7e0 <set_ref>
   28687:	c7 44 24 3c 10 00 00 	movl   $0x10,0x3c(%esp)
   2868e:	00 
   2868f:	83 ec 04             	sub    $0x4,%esp
   28692:	c7 44 24 1c 10 00 00 	movl   $0x10,0x1c(%esp)
   28699:	00 
   2869a:	8d 7c 24 30          	lea    0x30(%esp),%edi
   2869e:	57                   	push   %edi
   2869f:	8d 6c 24 10          	lea    0x10(%esp),%ebp
   286a3:	55                   	push   %ebp
   286a4:	8b 44 24 7c          	mov    0x7c(%esp),%eax
   286a8:	83 c0 01             	add    $0x1,%eax
   286ab:	50                   	push   %eax
   286ac:	e8 ef 97 fe ff       	call   11ea0 <modrm_r_rm>
   286b1:	89 3c 24             	mov    %edi,(%esp)
   286b4:	c7 44 24 18 04 00 00 	movl   $0x4,0x18(%esp)
   286bb:	00 
   286bc:	8d 70 01             	lea    0x1(%eax),%esi
   286bf:	e8 1c 9d fe ff       	call   123e0 <operand_read>
   286c4:	8b 44 24 48          	mov    0x48(%esp),%eax
   286c8:	89 2c 24             	mov    %ebp,(%esp)
   286cb:	89 44 24 24          	mov    %eax,0x24(%esp)
   286cf:	e8 bc 9e fe ff       	call   12590 <operand_write>
   286d4:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
   286d9:	89 04 24             	mov    %eax,(%esp)
   286dc:	e8 ef 60 ff ff       	call   1e7d0 <load_sreg>
   286e1:	89 f0                	mov    %esi,%eax
   286e3:	89 2c 24             	mov    %ebp,(%esp)
   286e6:	0f b6 c0             	movzbl %al,%eax
   286e9:	57                   	push   %edi
   286ea:	50                   	push   %eax
   286eb:	8d 83 9a 54 fe ff    	lea    -0x1ab66(%ebx),%eax
   286f1:	50                   	push   %eax
   286f2:	8d 83 f0 6a fe ff    	lea    -0x19510(%ebx),%eax
   286f8:	50                   	push   %eax
   286f9:	e8 a2 9a fe ff       	call   121a0 <print_asm_2>
   286fe:	83 c4 7c             	add    $0x7c,%esp
   28701:	89 f0                	mov    %esi,%eax
   28703:	5b                   	pop    %ebx
   28704:	5e                   	pop    %esi
   28705:	5f                   	pop    %edi
   28706:	5d                   	pop    %ebp
   28707:	c3                   	ret    
   28708:	66 90                	xchg   %ax,%ax
   2870a:	66 90                	xchg   %ax,%ax
   2870c:	66 90                	xchg   %ax,%ax
   2870e:	66 90                	xchg   %ax,%ax

00028710 <__ref_cbw_a_v>:
   28710:	56                   	push   %esi
   28711:	53                   	push   %ebx
   28712:	e8 69 bd fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28717:	81 c3 e9 68 02 00    	add    $0x268e9,%ebx
   2871d:	83 ec 04             	sub    $0x4,%esp
   28720:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28726:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2872c:	0f b6 10             	movzbl (%eax),%edx
   2872f:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   28735:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   2873b:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
   28742:	89 50 10             	mov    %edx,0x10(%eax)
   28745:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2874b:	89 56 10             	mov    %edx,0x10(%esi)
   2874e:	83 fa 08             	cmp    $0x8,%edx
   28751:	74 12                	je     28765 <__ref_cbw_a_v+0x55>
   28753:	83 fa 10             	cmp    $0x10,%edx
   28756:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2875c:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   28762:	0f 45 c2             	cmovne %edx,%eax
   28765:	56                   	push   %esi
   28766:	6a 01                	push   $0x1
   28768:	50                   	push   %eax
   28769:	8d 83 b9 6a fe ff    	lea    -0x19547(%ebx),%eax
   2876f:	50                   	push   %eax
   28770:	e8 2b 99 fe ff       	call   120a0 <print_asm_1>
   28775:	e8 66 20 00 00       	call   2a7e0 <set_ref>
   2877a:	89 34 24             	mov    %esi,(%esp)
   2877d:	e8 5e 9c fe ff       	call   123e0 <operand_read>
   28782:	83 c4 10             	add    $0x10,%esp
   28785:	83 7e 10 10          	cmpl   $0x10,0x10(%esi)
   28789:	74 25                	je     287b0 <__ref_cbw_a_v+0xa0>
   2878b:	0f bf 46 0c          	movswl 0xc(%esi),%eax
   2878f:	83 ec 0c             	sub    $0xc,%esp
   28792:	89 46 0c             	mov    %eax,0xc(%esi)
   28795:	56                   	push   %esi
   28796:	e8 f5 9d fe ff       	call   12590 <operand_write>
   2879b:	83 c4 14             	add    $0x14,%esp
   2879e:	b8 01 00 00 00       	mov    $0x1,%eax
   287a3:	5b                   	pop    %ebx
   287a4:	5e                   	pop    %esi
   287a5:	c3                   	ret    
   287a6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   287ad:	8d 76 00             	lea    0x0(%esi),%esi
   287b0:	0f be 46 0c          	movsbl 0xc(%esi),%eax
   287b4:	eb d9                	jmp    2878f <__ref_cbw_a_v+0x7f>
   287b6:	66 90                	xchg   %ax,%ax
   287b8:	66 90                	xchg   %ax,%ax
   287ba:	66 90                	xchg   %ax,%ax
   287bc:	66 90                	xchg   %ax,%ax
   287be:	66 90                	xchg   %ax,%ax

000287c0 <sign_ext.part.0>:
   287c0:	53                   	push   %ebx
   287c1:	e8 ba bc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   287c6:	81 c3 3a 68 02 00    	add    $0x2683a,%ebx
   287cc:	83 ec 08             	sub    $0x8,%esp
   287cf:	8d 83 d8 6d fe ff    	lea    -0x19228(%ebx),%eax
   287d5:	50                   	push   %eax
   287d6:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   287dc:	6a 2e                	push   $0x2e
   287de:	50                   	push   %eax
   287df:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   287e5:	50                   	push   %eax
   287e6:	e8 25 bb fd ff       	call   4310 <__assert_fail@plt>
   287eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   287ef:	90                   	nop

000287f0 <instr_execute_2op>:
   287f0:	55                   	push   %ebp
   287f1:	57                   	push   %edi
   287f2:	56                   	push   %esi
   287f3:	53                   	push   %ebx
   287f4:	e8 87 bc fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   287f9:	81 c3 07 68 02 00    	add    $0x26807,%ebx
   287ff:	83 ec 0c             	sub    $0xc,%esp
   28802:	e8 d9 1f 00 00       	call   2a7e0 <set_ref>
   28807:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2880d:	83 ec 0c             	sub    $0xc,%esp
   28810:	57                   	push   %edi
   28811:	e8 ca 9b fe ff       	call   123e0 <operand_read>
   28816:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2881c:	89 34 24             	mov    %esi,(%esp)
   2881f:	e8 bc 9b fe ff       	call   123e0 <operand_read>
   28824:	8b 56 10             	mov    0x10(%esi),%edx
   28827:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2882d:	83 c4 10             	add    $0x10,%esp
   28830:	8d 6a f8             	lea    -0x8(%edx),%ebp
   28833:	0f b6 08             	movzbl (%eax),%ecx
   28836:	8b 46 0c             	mov    0xc(%esi),%eax
   28839:	83 e5 f7             	and    $0xfffffff7,%ebp
   2883c:	74 05                	je     28843 <instr_execute_2op+0x53>
   2883e:	83 fa 20             	cmp    $0x20,%edx
   28841:	75 5a                	jne    2889d <instr_execute_2op+0xad>
   28843:	83 fa 08             	cmp    $0x8,%edx
   28846:	74 48                	je     28890 <instr_execute_2op+0xa0>
   28848:	0f bf e8             	movswl %ax,%ebp
   2884b:	83 fa 10             	cmp    $0x10,%edx
   2884e:	0f 44 c5             	cmove  %ebp,%eax
   28851:	8b 6f 10             	mov    0x10(%edi),%ebp
   28854:	8b 57 0c             	mov    0xc(%edi),%edx
   28857:	8d 7d f8             	lea    -0x8(%ebp),%edi
   2885a:	83 e7 f7             	and    $0xfffffff7,%edi
   2885d:	74 05                	je     28864 <instr_execute_2op+0x74>
   2885f:	83 fd 20             	cmp    $0x20,%ebp
   28862:	75 39                	jne    2889d <instr_execute_2op+0xad>
   28864:	83 fd 08             	cmp    $0x8,%ebp
   28867:	74 2f                	je     28898 <instr_execute_2op+0xa8>
   28869:	0f bf fa             	movswl %dx,%edi
   2886c:	83 fd 10             	cmp    $0x10,%ebp
   2886f:	0f 44 d7             	cmove  %edi,%edx
   28872:	83 ec 04             	sub    $0x4,%esp
   28875:	51                   	push   %ecx
   28876:	50                   	push   %eax
   28877:	52                   	push   %edx
   28878:	e8 83 15 00 00       	call   29e00 <__ref_alu_adc>
   2887d:	89 34 24             	mov    %esi,(%esp)
   28880:	89 46 0c             	mov    %eax,0xc(%esi)
   28883:	e8 08 9d fe ff       	call   12590 <operand_write>
   28888:	83 c4 1c             	add    $0x1c,%esp
   2888b:	5b                   	pop    %ebx
   2888c:	5e                   	pop    %esi
   2888d:	5f                   	pop    %edi
   2888e:	5d                   	pop    %ebp
   2888f:	c3                   	ret    
   28890:	0f be c0             	movsbl %al,%eax
   28893:	eb bc                	jmp    28851 <instr_execute_2op+0x61>
   28895:	8d 76 00             	lea    0x0(%esi),%esi
   28898:	0f be d2             	movsbl %dl,%edx
   2889b:	eb d5                	jmp    28872 <instr_execute_2op+0x82>
   2889d:	e8 1e ff ff ff       	call   287c0 <sign_ext.part.0>
   288a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   288a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000288b0 <__ref_adc_r2rm_b>:
   288b0:	55                   	push   %ebp
   288b1:	57                   	push   %edi
   288b2:	56                   	push   %esi
   288b3:	53                   	push   %ebx
   288b4:	e8 c7 bb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   288b9:	81 c3 47 67 02 00    	add    $0x26747,%ebx
   288bf:	83 ec 10             	sub    $0x10,%esp
   288c2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   288c8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   288ce:	56                   	push   %esi
   288cf:	57                   	push   %edi
   288d0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   288d4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   288db:	83 c0 01             	add    $0x1,%eax
   288de:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   288e5:	50                   	push   %eax
   288e6:	e8 b5 95 fe ff       	call   11ea0 <modrm_r_rm>
   288eb:	8b 4e 10             	mov    0x10(%esi),%ecx
   288ee:	83 c4 10             	add    $0x10,%esp
   288f1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   288f7:	8d 68 01             	lea    0x1(%eax),%ebp
   288fa:	89 e8                	mov    %ebp,%eax
   288fc:	0f b6 c0             	movzbl %al,%eax
   288ff:	83 f9 08             	cmp    $0x8,%ecx
   28902:	74 12                	je     28916 <__ref_adc_r2rm_b+0x66>
   28904:	83 f9 10             	cmp    $0x10,%ecx
   28907:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2890d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   28913:	0f 45 d1             	cmovne %ecx,%edx
   28916:	83 ec 0c             	sub    $0xc,%esp
   28919:	56                   	push   %esi
   2891a:	57                   	push   %edi
   2891b:	50                   	push   %eax
   2891c:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28922:	52                   	push   %edx
   28923:	50                   	push   %eax
   28924:	e8 77 98 fe ff       	call   121a0 <print_asm_2>
   28929:	83 c4 20             	add    $0x20,%esp
   2892c:	e8 bf fe ff ff       	call   287f0 <instr_execute_2op>
   28931:	83 c4 0c             	add    $0xc,%esp
   28934:	89 e8                	mov    %ebp,%eax
   28936:	5b                   	pop    %ebx
   28937:	5e                   	pop    %esi
   28938:	5f                   	pop    %edi
   28939:	5d                   	pop    %ebp
   2893a:	c3                   	ret    
   2893b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2893f:	90                   	nop

00028940 <__ref_adc_r2rm_v>:
   28940:	55                   	push   %ebp
   28941:	57                   	push   %edi
   28942:	56                   	push   %esi
   28943:	53                   	push   %ebx
   28944:	e8 37 bb fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28949:	81 c3 b7 66 02 00    	add    $0x266b7,%ebx
   2894f:	83 ec 10             	sub    $0x10,%esp
   28952:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28958:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2895e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28964:	0f b6 00             	movzbl (%eax),%eax
   28967:	56                   	push   %esi
   28968:	57                   	push   %edi
   28969:	89 46 10             	mov    %eax,0x10(%esi)
   2896c:	89 47 10             	mov    %eax,0x10(%edi)
   2896f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   28973:	83 c0 01             	add    $0x1,%eax
   28976:	50                   	push   %eax
   28977:	e8 24 95 fe ff       	call   11ea0 <modrm_r_rm>
   2897c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2897f:	83 c4 10             	add    $0x10,%esp
   28982:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   28988:	8d 68 01             	lea    0x1(%eax),%ebp
   2898b:	89 e8                	mov    %ebp,%eax
   2898d:	0f b6 c0             	movzbl %al,%eax
   28990:	83 f9 08             	cmp    $0x8,%ecx
   28993:	74 12                	je     289a7 <__ref_adc_r2rm_v+0x67>
   28995:	83 f9 10             	cmp    $0x10,%ecx
   28998:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2899e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   289a4:	0f 45 d1             	cmovne %ecx,%edx
   289a7:	83 ec 0c             	sub    $0xc,%esp
   289aa:	56                   	push   %esi
   289ab:	57                   	push   %edi
   289ac:	50                   	push   %eax
   289ad:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   289b3:	52                   	push   %edx
   289b4:	50                   	push   %eax
   289b5:	e8 e6 97 fe ff       	call   121a0 <print_asm_2>
   289ba:	83 c4 20             	add    $0x20,%esp
   289bd:	e8 2e fe ff ff       	call   287f0 <instr_execute_2op>
   289c2:	83 c4 0c             	add    $0xc,%esp
   289c5:	89 e8                	mov    %ebp,%eax
   289c7:	5b                   	pop    %ebx
   289c8:	5e                   	pop    %esi
   289c9:	5f                   	pop    %edi
   289ca:	5d                   	pop    %ebp
   289cb:	c3                   	ret    
   289cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000289d0 <__ref_adc_rm2r_b>:
   289d0:	55                   	push   %ebp
   289d1:	57                   	push   %edi
   289d2:	56                   	push   %esi
   289d3:	53                   	push   %ebx
   289d4:	e8 a7 ba fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   289d9:	81 c3 27 66 02 00    	add    $0x26627,%ebx
   289df:	83 ec 10             	sub    $0x10,%esp
   289e2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   289e8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   289ee:	57                   	push   %edi
   289ef:	56                   	push   %esi
   289f0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   289f4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   289fb:	83 c0 01             	add    $0x1,%eax
   289fe:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   28a05:	50                   	push   %eax
   28a06:	e8 95 94 fe ff       	call   11ea0 <modrm_r_rm>
   28a0b:	8b 4e 10             	mov    0x10(%esi),%ecx
   28a0e:	83 c4 10             	add    $0x10,%esp
   28a11:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   28a17:	8d 68 01             	lea    0x1(%eax),%ebp
   28a1a:	89 e8                	mov    %ebp,%eax
   28a1c:	0f b6 c0             	movzbl %al,%eax
   28a1f:	83 f9 08             	cmp    $0x8,%ecx
   28a22:	74 12                	je     28a36 <__ref_adc_rm2r_b+0x66>
   28a24:	83 f9 10             	cmp    $0x10,%ecx
   28a27:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   28a2d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   28a33:	0f 45 d1             	cmovne %ecx,%edx
   28a36:	83 ec 0c             	sub    $0xc,%esp
   28a39:	56                   	push   %esi
   28a3a:	57                   	push   %edi
   28a3b:	50                   	push   %eax
   28a3c:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28a42:	52                   	push   %edx
   28a43:	50                   	push   %eax
   28a44:	e8 57 97 fe ff       	call   121a0 <print_asm_2>
   28a49:	83 c4 20             	add    $0x20,%esp
   28a4c:	e8 9f fd ff ff       	call   287f0 <instr_execute_2op>
   28a51:	83 c4 0c             	add    $0xc,%esp
   28a54:	89 e8                	mov    %ebp,%eax
   28a56:	5b                   	pop    %ebx
   28a57:	5e                   	pop    %esi
   28a58:	5f                   	pop    %edi
   28a59:	5d                   	pop    %ebp
   28a5a:	c3                   	ret    
   28a5b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28a5f:	90                   	nop

00028a60 <__ref_adc_rm2r_v>:
   28a60:	55                   	push   %ebp
   28a61:	57                   	push   %edi
   28a62:	56                   	push   %esi
   28a63:	53                   	push   %ebx
   28a64:	e8 17 ba fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28a69:	81 c3 97 65 02 00    	add    $0x26597,%ebx
   28a6f:	83 ec 10             	sub    $0x10,%esp
   28a72:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28a78:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   28a7e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28a84:	0f b6 00             	movzbl (%eax),%eax
   28a87:	57                   	push   %edi
   28a88:	89 46 10             	mov    %eax,0x10(%esi)
   28a8b:	56                   	push   %esi
   28a8c:	89 47 10             	mov    %eax,0x10(%edi)
   28a8f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   28a93:	83 c0 01             	add    $0x1,%eax
   28a96:	50                   	push   %eax
   28a97:	e8 04 94 fe ff       	call   11ea0 <modrm_r_rm>
   28a9c:	8b 4e 10             	mov    0x10(%esi),%ecx
   28a9f:	83 c4 10             	add    $0x10,%esp
   28aa2:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   28aa8:	8d 68 01             	lea    0x1(%eax),%ebp
   28aab:	89 e8                	mov    %ebp,%eax
   28aad:	0f b6 c0             	movzbl %al,%eax
   28ab0:	83 f9 08             	cmp    $0x8,%ecx
   28ab3:	74 12                	je     28ac7 <__ref_adc_rm2r_v+0x67>
   28ab5:	83 f9 10             	cmp    $0x10,%ecx
   28ab8:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   28abe:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   28ac4:	0f 45 d1             	cmovne %ecx,%edx
   28ac7:	83 ec 0c             	sub    $0xc,%esp
   28aca:	56                   	push   %esi
   28acb:	57                   	push   %edi
   28acc:	50                   	push   %eax
   28acd:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28ad3:	52                   	push   %edx
   28ad4:	50                   	push   %eax
   28ad5:	e8 c6 96 fe ff       	call   121a0 <print_asm_2>
   28ada:	83 c4 20             	add    $0x20,%esp
   28add:	e8 0e fd ff ff       	call   287f0 <instr_execute_2op>
   28ae2:	83 c4 0c             	add    $0xc,%esp
   28ae5:	89 e8                	mov    %ebp,%eax
   28ae7:	5b                   	pop    %ebx
   28ae8:	5e                   	pop    %esi
   28ae9:	5f                   	pop    %edi
   28aea:	5d                   	pop    %ebp
   28aeb:	c3                   	ret    
   28aec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00028af0 <__ref_adc_i2rm_b>:
   28af0:	55                   	push   %ebp
   28af1:	57                   	push   %edi
   28af2:	56                   	push   %esi
   28af3:	53                   	push   %ebx
   28af4:	e8 87 b9 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28af9:	81 c3 07 65 02 00    	add    $0x26507,%ebx
   28aff:	83 ec 24             	sub    $0x24,%esp
   28b02:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   28b06:	8d 45 01             	lea    0x1(%ebp),%eax
   28b09:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   28b0f:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28b15:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   28b1c:	52                   	push   %edx
   28b1d:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   28b24:	89 54 24 18          	mov    %edx,0x18(%esp)
   28b28:	50                   	push   %eax
   28b29:	e8 52 94 fe ff       	call   11f80 <modrm_rm>
   28b2e:	8b 77 10             	mov    0x10(%edi),%esi
   28b31:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   28b35:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   28b39:	83 c0 01             	add    $0x1,%eax
   28b3c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   28b42:	83 c4 10             	add    $0x10,%esp
   28b45:	01 c5                	add    %eax,%ebp
   28b47:	c1 ee 03             	shr    $0x3,%esi
   28b4a:	89 6f 04             	mov    %ebp,0x4(%edi)
   28b4d:	01 c6                	add    %eax,%esi
   28b4f:	8b 6a 10             	mov    0x10(%edx),%ebp
   28b52:	89 f0                	mov    %esi,%eax
   28b54:	0f b6 c8             	movzbl %al,%ecx
   28b57:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28b5d:	83 fd 08             	cmp    $0x8,%ebp
   28b60:	74 12                	je     28b74 <__ref_adc_i2rm_b+0x84>
   28b62:	83 fd 10             	cmp    $0x10,%ebp
   28b65:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   28b6b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   28b71:	0f 45 c5             	cmovne %ebp,%eax
   28b74:	83 ec 0c             	sub    $0xc,%esp
   28b77:	52                   	push   %edx
   28b78:	57                   	push   %edi
   28b79:	51                   	push   %ecx
   28b7a:	50                   	push   %eax
   28b7b:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28b81:	50                   	push   %eax
   28b82:	e8 19 96 fe ff       	call   121a0 <print_asm_2>
   28b87:	83 c4 20             	add    $0x20,%esp
   28b8a:	e8 61 fc ff ff       	call   287f0 <instr_execute_2op>
   28b8f:	83 c4 1c             	add    $0x1c,%esp
   28b92:	89 f0                	mov    %esi,%eax
   28b94:	5b                   	pop    %ebx
   28b95:	5e                   	pop    %esi
   28b96:	5f                   	pop    %edi
   28b97:	5d                   	pop    %ebp
   28b98:	c3                   	ret    
   28b99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00028ba0 <__ref_adc_i2rm_v>:
   28ba0:	55                   	push   %ebp
   28ba1:	57                   	push   %edi
   28ba2:	56                   	push   %esi
   28ba3:	53                   	push   %ebx
   28ba4:	e8 d7 b8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28ba9:	81 c3 57 64 02 00    	add    $0x26457,%ebx
   28baf:	83 ec 24             	sub    $0x24,%esp
   28bb2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   28bb6:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28bbc:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   28bc2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28bc8:	0f b6 00             	movzbl (%eax),%eax
   28bcb:	89 42 10             	mov    %eax,0x10(%edx)
   28bce:	52                   	push   %edx
   28bcf:	89 47 10             	mov    %eax,0x10(%edi)
   28bd2:	8d 45 01             	lea    0x1(%ebp),%eax
   28bd5:	89 54 24 18          	mov    %edx,0x18(%esp)
   28bd9:	50                   	push   %eax
   28bda:	e8 a1 93 fe ff       	call   11f80 <modrm_rm>
   28bdf:	8b 77 10             	mov    0x10(%edi),%esi
   28be2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   28be6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   28bea:	83 c0 01             	add    $0x1,%eax
   28bed:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   28bf3:	83 c4 10             	add    $0x10,%esp
   28bf6:	01 c5                	add    %eax,%ebp
   28bf8:	c1 ee 03             	shr    $0x3,%esi
   28bfb:	89 6f 04             	mov    %ebp,0x4(%edi)
   28bfe:	01 c6                	add    %eax,%esi
   28c00:	8b 6a 10             	mov    0x10(%edx),%ebp
   28c03:	89 f0                	mov    %esi,%eax
   28c05:	0f b6 c8             	movzbl %al,%ecx
   28c08:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28c0e:	83 fd 08             	cmp    $0x8,%ebp
   28c11:	74 12                	je     28c25 <__ref_adc_i2rm_v+0x85>
   28c13:	83 fd 10             	cmp    $0x10,%ebp
   28c16:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   28c1c:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   28c22:	0f 45 c5             	cmovne %ebp,%eax
   28c25:	83 ec 0c             	sub    $0xc,%esp
   28c28:	52                   	push   %edx
   28c29:	57                   	push   %edi
   28c2a:	51                   	push   %ecx
   28c2b:	50                   	push   %eax
   28c2c:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28c32:	50                   	push   %eax
   28c33:	e8 68 95 fe ff       	call   121a0 <print_asm_2>
   28c38:	83 c4 20             	add    $0x20,%esp
   28c3b:	e8 b0 fb ff ff       	call   287f0 <instr_execute_2op>
   28c40:	83 c4 1c             	add    $0x1c,%esp
   28c43:	89 f0                	mov    %esi,%eax
   28c45:	5b                   	pop    %ebx
   28c46:	5e                   	pop    %esi
   28c47:	5f                   	pop    %edi
   28c48:	5d                   	pop    %ebp
   28c49:	c3                   	ret    
   28c4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00028c50 <__ref_adc_i2rm_bv>:
   28c50:	55                   	push   %ebp
   28c51:	57                   	push   %edi
   28c52:	56                   	push   %esi
   28c53:	53                   	push   %ebx
   28c54:	e8 27 b8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28c59:	81 c3 a7 63 02 00    	add    $0x263a7,%ebx
   28c5f:	83 ec 24             	sub    $0x24,%esp
   28c62:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   28c66:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28c6c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   28c72:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28c78:	0f b6 00             	movzbl (%eax),%eax
   28c7b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   28c82:	89 42 10             	mov    %eax,0x10(%edx)
   28c85:	8d 45 01             	lea    0x1(%ebp),%eax
   28c88:	52                   	push   %edx
   28c89:	89 54 24 18          	mov    %edx,0x18(%esp)
   28c8d:	50                   	push   %eax
   28c8e:	e8 ed 92 fe ff       	call   11f80 <modrm_rm>
   28c93:	8b 77 10             	mov    0x10(%edi),%esi
   28c96:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   28c9a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   28c9e:	83 c0 01             	add    $0x1,%eax
   28ca1:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   28ca7:	83 c4 10             	add    $0x10,%esp
   28caa:	01 c5                	add    %eax,%ebp
   28cac:	c1 ee 03             	shr    $0x3,%esi
   28caf:	89 6f 04             	mov    %ebp,0x4(%edi)
   28cb2:	01 c6                	add    %eax,%esi
   28cb4:	8b 6a 10             	mov    0x10(%edx),%ebp
   28cb7:	89 f0                	mov    %esi,%eax
   28cb9:	0f b6 c8             	movzbl %al,%ecx
   28cbc:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28cc2:	83 fd 08             	cmp    $0x8,%ebp
   28cc5:	74 12                	je     28cd9 <__ref_adc_i2rm_bv+0x89>
   28cc7:	83 fd 10             	cmp    $0x10,%ebp
   28cca:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   28cd0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   28cd6:	0f 45 c5             	cmovne %ebp,%eax
   28cd9:	83 ec 0c             	sub    $0xc,%esp
   28cdc:	52                   	push   %edx
   28cdd:	57                   	push   %edi
   28cde:	51                   	push   %ecx
   28cdf:	50                   	push   %eax
   28ce0:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28ce6:	50                   	push   %eax
   28ce7:	e8 b4 94 fe ff       	call   121a0 <print_asm_2>
   28cec:	83 c4 20             	add    $0x20,%esp
   28cef:	e8 fc fa ff ff       	call   287f0 <instr_execute_2op>
   28cf4:	83 c4 1c             	add    $0x1c,%esp
   28cf7:	89 f0                	mov    %esi,%eax
   28cf9:	5b                   	pop    %ebx
   28cfa:	5e                   	pop    %esi
   28cfb:	5f                   	pop    %edi
   28cfc:	5d                   	pop    %ebp
   28cfd:	c3                   	ret    
   28cfe:	66 90                	xchg   %ax,%ax

00028d00 <__ref_adc_i2a_b>:
   28d00:	53                   	push   %ebx
   28d01:	e8 7a b7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28d06:	81 c3 fa 62 02 00    	add    $0x262fa,%ebx
   28d0c:	83 ec 14             	sub    $0x14,%esp
   28d0f:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   28d13:	83 c1 01             	add    $0x1,%ecx
   28d16:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   28d1c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   28d22:	89 48 04             	mov    %ecx,0x4(%eax)
   28d25:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   28d2c:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   28d33:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   28d39:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   28d3d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   28d43:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   28d4a:	52                   	push   %edx
   28d4b:	50                   	push   %eax
   28d4c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28d52:	6a 02                	push   $0x2
   28d54:	50                   	push   %eax
   28d55:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28d5b:	50                   	push   %eax
   28d5c:	e8 3f 94 fe ff       	call   121a0 <print_asm_2>
   28d61:	83 c4 20             	add    $0x20,%esp
   28d64:	e8 87 fa ff ff       	call   287f0 <instr_execute_2op>
   28d69:	83 c4 08             	add    $0x8,%esp
   28d6c:	b8 02 00 00 00       	mov    $0x2,%eax
   28d71:	5b                   	pop    %ebx
   28d72:	c3                   	ret    
   28d73:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   28d7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00028d80 <__ref_adc_i2a_v>:
   28d80:	55                   	push   %ebp
   28d81:	57                   	push   %edi
   28d82:	56                   	push   %esi
   28d83:	53                   	push   %ebx
   28d84:	e8 f7 b6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28d89:	81 c3 77 62 02 00    	add    $0x26277,%ebx
   28d8f:	83 ec 0c             	sub    $0xc,%esp
   28d92:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28d98:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   28d9e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   28da4:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   28daa:	0f b6 08             	movzbl (%eax),%ecx
   28dad:	8b 44 24 20          	mov    0x20(%esp),%eax
   28db1:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   28db7:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   28dbb:	89 cf                	mov    %ecx,%edi
   28dbd:	83 c0 01             	add    $0x1,%eax
   28dc0:	89 4d 10             	mov    %ecx,0x10(%ebp)
   28dc3:	c1 ef 03             	shr    $0x3,%edi
   28dc6:	89 4a 10             	mov    %ecx,0x10(%edx)
   28dc9:	89 42 04             	mov    %eax,0x4(%edx)
   28dcc:	83 c7 01             	add    $0x1,%edi
   28dcf:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   28dd6:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   28ddd:	83 f9 08             	cmp    $0x8,%ecx
   28de0:	74 12                	je     28df4 <__ref_adc_i2a_v+0x74>
   28de2:	83 f9 10             	cmp    $0x10,%ecx
   28de5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   28deb:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   28df1:	0f 45 f0             	cmovne %eax,%esi
   28df4:	83 ec 0c             	sub    $0xc,%esp
   28df7:	8d 83 bb 6f fe ff    	lea    -0x19045(%ebx),%eax
   28dfd:	55                   	push   %ebp
   28dfe:	52                   	push   %edx
   28dff:	57                   	push   %edi
   28e00:	56                   	push   %esi
   28e01:	50                   	push   %eax
   28e02:	e8 99 93 fe ff       	call   121a0 <print_asm_2>
   28e07:	83 c4 20             	add    $0x20,%esp
   28e0a:	e8 e1 f9 ff ff       	call   287f0 <instr_execute_2op>
   28e0f:	83 c4 0c             	add    $0xc,%esp
   28e12:	89 f8                	mov    %edi,%eax
   28e14:	5b                   	pop    %ebx
   28e15:	5e                   	pop    %esi
   28e16:	5f                   	pop    %edi
   28e17:	5d                   	pop    %ebp
   28e18:	c3                   	ret    
   28e19:	66 90                	xchg   %ax,%ax
   28e1b:	66 90                	xchg   %ax,%ax
   28e1d:	66 90                	xchg   %ax,%ax
   28e1f:	90                   	nop

00028e20 <instr_execute_2op>:
   28e20:	57                   	push   %edi
   28e21:	56                   	push   %esi
   28e22:	53                   	push   %ebx
   28e23:	e8 58 b6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28e28:	81 c3 d8 61 02 00    	add    $0x261d8,%ebx
   28e2e:	e8 ad 19 00 00       	call   2a7e0 <set_ref>
   28e33:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28e39:	83 ec 0c             	sub    $0xc,%esp
   28e3c:	57                   	push   %edi
   28e3d:	e8 9e 95 fe ff       	call   123e0 <operand_read>
   28e42:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   28e48:	89 34 24             	mov    %esi,(%esp)
   28e4b:	e8 90 95 fe ff       	call   123e0 <operand_read>
   28e50:	83 c4 0c             	add    $0xc,%esp
   28e53:	ff 76 10             	pushl  0x10(%esi)
   28e56:	ff 76 0c             	pushl  0xc(%esi)
   28e59:	ff 77 0c             	pushl  0xc(%edi)
   28e5c:	e8 7f 17 00 00       	call   2a5e0 <__ref_alu_shr>
   28e61:	89 34 24             	mov    %esi,(%esp)
   28e64:	89 46 0c             	mov    %eax,0xc(%esi)
   28e67:	e8 24 97 fe ff       	call   12590 <operand_write>
   28e6c:	83 c4 10             	add    $0x10,%esp
   28e6f:	5b                   	pop    %ebx
   28e70:	5e                   	pop    %esi
   28e71:	5f                   	pop    %edi
   28e72:	c3                   	ret    
   28e73:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   28e7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00028e80 <instr_execute_1op>:
   28e80:	56                   	push   %esi
   28e81:	53                   	push   %ebx
   28e82:	e8 f9 b5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28e87:	81 c3 79 61 02 00    	add    $0x26179,%ebx
   28e8d:	83 ec 04             	sub    $0x4,%esp
   28e90:	e8 4b 19 00 00       	call   2a7e0 <set_ref>
   28e95:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   28e9b:	83 ec 0c             	sub    $0xc,%esp
   28e9e:	56                   	push   %esi
   28e9f:	e8 3c 95 fe ff       	call   123e0 <operand_read>
   28ea4:	83 c4 0c             	add    $0xc,%esp
   28ea7:	ff 76 10             	pushl  0x10(%esi)
   28eaa:	ff 76 0c             	pushl  0xc(%esi)
   28ead:	6a 01                	push   $0x1
   28eaf:	e8 2c 17 00 00       	call   2a5e0 <__ref_alu_shr>
   28eb4:	89 34 24             	mov    %esi,(%esp)
   28eb7:	89 46 0c             	mov    %eax,0xc(%esi)
   28eba:	e8 d1 96 fe ff       	call   12590 <operand_write>
   28ebf:	83 c4 14             	add    $0x14,%esp
   28ec2:	5b                   	pop    %ebx
   28ec3:	5e                   	pop    %esi
   28ec4:	c3                   	ret    
   28ec5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   28ecc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00028ed0 <__ref_shr_i2rm_b>:
   28ed0:	55                   	push   %ebp
   28ed1:	57                   	push   %edi
   28ed2:	56                   	push   %esi
   28ed3:	53                   	push   %ebx
   28ed4:	e8 a7 b5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28ed9:	81 c3 27 61 02 00    	add    $0x26127,%ebx
   28edf:	83 ec 24             	sub    $0x24,%esp
   28ee2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   28ee6:	8d 45 01             	lea    0x1(%ebp),%eax
   28ee9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   28eef:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28ef5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   28efc:	52                   	push   %edx
   28efd:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   28f04:	89 54 24 18          	mov    %edx,0x18(%esp)
   28f08:	50                   	push   %eax
   28f09:	e8 72 90 fe ff       	call   11f80 <modrm_rm>
   28f0e:	8b 77 10             	mov    0x10(%edi),%esi
   28f11:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   28f15:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   28f19:	83 c0 01             	add    $0x1,%eax
   28f1c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   28f22:	83 c4 10             	add    $0x10,%esp
   28f25:	01 c5                	add    %eax,%ebp
   28f27:	c1 ee 03             	shr    $0x3,%esi
   28f2a:	89 6f 04             	mov    %ebp,0x4(%edi)
   28f2d:	01 c6                	add    %eax,%esi
   28f2f:	8b 6a 10             	mov    0x10(%edx),%ebp
   28f32:	89 f0                	mov    %esi,%eax
   28f34:	0f b6 c8             	movzbl %al,%ecx
   28f37:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28f3d:	83 fd 08             	cmp    $0x8,%ebp
   28f40:	74 12                	je     28f54 <__ref_shr_i2rm_b+0x84>
   28f42:	83 fd 10             	cmp    $0x10,%ebp
   28f45:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   28f4b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   28f51:	0f 45 c5             	cmovne %ebp,%eax
   28f54:	83 ec 0c             	sub    $0xc,%esp
   28f57:	52                   	push   %edx
   28f58:	57                   	push   %edi
   28f59:	51                   	push   %ecx
   28f5a:	50                   	push   %eax
   28f5b:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   28f61:	50                   	push   %eax
   28f62:	e8 39 92 fe ff       	call   121a0 <print_asm_2>
   28f67:	83 c4 20             	add    $0x20,%esp
   28f6a:	e8 b1 fe ff ff       	call   28e20 <instr_execute_2op>
   28f6f:	83 c4 1c             	add    $0x1c,%esp
   28f72:	89 f0                	mov    %esi,%eax
   28f74:	5b                   	pop    %ebx
   28f75:	5e                   	pop    %esi
   28f76:	5f                   	pop    %edi
   28f77:	5d                   	pop    %ebp
   28f78:	c3                   	ret    
   28f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00028f80 <__ref_shr_i2rm_bv>:
   28f80:	55                   	push   %ebp
   28f81:	57                   	push   %edi
   28f82:	56                   	push   %esi
   28f83:	53                   	push   %ebx
   28f84:	e8 f7 b4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   28f89:	81 c3 77 60 02 00    	add    $0x26077,%ebx
   28f8f:	83 ec 24             	sub    $0x24,%esp
   28f92:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   28f96:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   28f9c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   28fa2:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   28fa8:	0f b6 00             	movzbl (%eax),%eax
   28fab:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   28fb2:	89 42 10             	mov    %eax,0x10(%edx)
   28fb5:	8d 45 01             	lea    0x1(%ebp),%eax
   28fb8:	52                   	push   %edx
   28fb9:	89 54 24 18          	mov    %edx,0x18(%esp)
   28fbd:	50                   	push   %eax
   28fbe:	e8 bd 8f fe ff       	call   11f80 <modrm_rm>
   28fc3:	8b 77 10             	mov    0x10(%edi),%esi
   28fc6:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   28fca:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   28fce:	83 c0 01             	add    $0x1,%eax
   28fd1:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   28fd7:	83 c4 10             	add    $0x10,%esp
   28fda:	01 c5                	add    %eax,%ebp
   28fdc:	c1 ee 03             	shr    $0x3,%esi
   28fdf:	89 6f 04             	mov    %ebp,0x4(%edi)
   28fe2:	01 c6                	add    %eax,%esi
   28fe4:	8b 6a 10             	mov    0x10(%edx),%ebp
   28fe7:	89 f0                	mov    %esi,%eax
   28fe9:	0f b6 c8             	movzbl %al,%ecx
   28fec:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   28ff2:	83 fd 08             	cmp    $0x8,%ebp
   28ff5:	74 12                	je     29009 <__ref_shr_i2rm_bv+0x89>
   28ff7:	83 fd 10             	cmp    $0x10,%ebp
   28ffa:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   29000:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   29006:	0f 45 c5             	cmovne %ebp,%eax
   29009:	83 ec 0c             	sub    $0xc,%esp
   2900c:	52                   	push   %edx
   2900d:	57                   	push   %edi
   2900e:	51                   	push   %ecx
   2900f:	50                   	push   %eax
   29010:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   29016:	50                   	push   %eax
   29017:	e8 84 91 fe ff       	call   121a0 <print_asm_2>
   2901c:	83 c4 20             	add    $0x20,%esp
   2901f:	e8 fc fd ff ff       	call   28e20 <instr_execute_2op>
   29024:	83 c4 1c             	add    $0x1c,%esp
   29027:	89 f0                	mov    %esi,%eax
   29029:	5b                   	pop    %ebx
   2902a:	5e                   	pop    %esi
   2902b:	5f                   	pop    %edi
   2902c:	5d                   	pop    %ebp
   2902d:	c3                   	ret    
   2902e:	66 90                	xchg   %ax,%ax

00029030 <__ref_shr_c2rm_b>:
   29030:	55                   	push   %ebp
   29031:	57                   	push   %edi
   29032:	56                   	push   %esi
   29033:	53                   	push   %ebx
   29034:	e8 47 b4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29039:	81 c3 c7 5f 02 00    	add    $0x25fc7,%ebx
   2903f:	83 ec 14             	sub    $0x14,%esp
   29042:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   29048:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2904e:	57                   	push   %edi
   2904f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   29053:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   2905a:	83 c0 01             	add    $0x1,%eax
   2905d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   29064:	50                   	push   %eax
   29065:	e8 16 8f fe ff       	call   11f80 <modrm_rm>
   2906a:	8b 4f 10             	mov    0x10(%edi),%ecx
   2906d:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   29073:	83 c4 10             	add    $0x10,%esp
   29076:	8d 68 01             	lea    0x1(%eax),%ebp
   29079:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   29080:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   29086:	89 e8                	mov    %ebp,%eax
   29088:	0f b6 c0             	movzbl %al,%eax
   2908b:	83 f9 08             	cmp    $0x8,%ecx
   2908e:	74 12                	je     290a2 <__ref_shr_c2rm_b+0x72>
   29090:	83 f9 10             	cmp    $0x10,%ecx
   29093:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   29099:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   2909f:	0f 45 d1             	cmovne %ecx,%edx
   290a2:	83 ec 0c             	sub    $0xc,%esp
   290a5:	57                   	push   %edi
   290a6:	56                   	push   %esi
   290a7:	50                   	push   %eax
   290a8:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   290ae:	52                   	push   %edx
   290af:	50                   	push   %eax
   290b0:	e8 eb 90 fe ff       	call   121a0 <print_asm_2>
   290b5:	83 c4 20             	add    $0x20,%esp
   290b8:	e8 63 fd ff ff       	call   28e20 <instr_execute_2op>
   290bd:	83 c4 0c             	add    $0xc,%esp
   290c0:	89 e8                	mov    %ebp,%eax
   290c2:	5b                   	pop    %ebx
   290c3:	5e                   	pop    %esi
   290c4:	5f                   	pop    %edi
   290c5:	5d                   	pop    %ebp
   290c6:	c3                   	ret    
   290c7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   290ce:	66 90                	xchg   %ax,%ax

000290d0 <__ref_shr_c2rm_bv>:
   290d0:	55                   	push   %ebp
   290d1:	57                   	push   %edi
   290d2:	56                   	push   %esi
   290d3:	53                   	push   %ebx
   290d4:	e8 a7 b3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   290d9:	81 c3 27 5f 02 00    	add    $0x25f27,%ebx
   290df:	83 ec 14             	sub    $0x14,%esp
   290e2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   290e8:	8d bb 20 34 05 00    	lea    0x53420(%ebx),%edi
   290ee:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   290f4:	0f b6 00             	movzbl (%eax),%eax
   290f7:	57                   	push   %edi
   290f8:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   290ff:	89 47 10             	mov    %eax,0x10(%edi)
   29102:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   29106:	83 c0 01             	add    $0x1,%eax
   29109:	50                   	push   %eax
   2910a:	e8 71 8e fe ff       	call   11f80 <modrm_rm>
   2910f:	8b 4f 10             	mov    0x10(%edi),%ecx
   29112:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
   29118:	83 c4 10             	add    $0x10,%esp
   2911b:	8d 68 01             	lea    0x1(%eax),%ebp
   2911e:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   29125:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   2912b:	89 e8                	mov    %ebp,%eax
   2912d:	0f b6 c0             	movzbl %al,%eax
   29130:	83 f9 08             	cmp    $0x8,%ecx
   29133:	74 12                	je     29147 <__ref_shr_c2rm_bv+0x77>
   29135:	83 f9 10             	cmp    $0x10,%ecx
   29138:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2913e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   29144:	0f 45 d1             	cmovne %ecx,%edx
   29147:	83 ec 0c             	sub    $0xc,%esp
   2914a:	57                   	push   %edi
   2914b:	56                   	push   %esi
   2914c:	50                   	push   %eax
   2914d:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   29153:	52                   	push   %edx
   29154:	50                   	push   %eax
   29155:	e8 46 90 fe ff       	call   121a0 <print_asm_2>
   2915a:	83 c4 20             	add    $0x20,%esp
   2915d:	e8 be fc ff ff       	call   28e20 <instr_execute_2op>
   29162:	83 c4 0c             	add    $0xc,%esp
   29165:	89 e8                	mov    %ebp,%eax
   29167:	5b                   	pop    %ebx
   29168:	5e                   	pop    %esi
   29169:	5f                   	pop    %edi
   2916a:	5d                   	pop    %ebp
   2916b:	c3                   	ret    
   2916c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00029170 <__ref_shr_rm_b>:
   29170:	55                   	push   %ebp
   29171:	57                   	push   %edi
   29172:	56                   	push   %esi
   29173:	53                   	push   %ebx
   29174:	e8 07 b3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29179:	81 c3 87 5e 02 00    	add    $0x25e87,%ebx
   2917f:	83 ec 14             	sub    $0x14,%esp
   29182:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   29188:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2918e:	56                   	push   %esi
   2918f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   29193:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)
   2919a:	83 c0 01             	add    $0x1,%eax
   2919d:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   291a4:	50                   	push   %eax
   291a5:	e8 d6 8d fe ff       	call   11f80 <modrm_rm>
   291aa:	8b 4d 10             	mov    0x10(%ebp),%ecx
   291ad:	83 c4 10             	add    $0x10,%esp
   291b0:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   291b6:	8d 78 01             	lea    0x1(%eax),%edi
   291b9:	89 f8                	mov    %edi,%eax
   291bb:	0f b6 c0             	movzbl %al,%eax
   291be:	83 f9 08             	cmp    $0x8,%ecx
   291c1:	74 12                	je     291d5 <__ref_shr_rm_b+0x65>
   291c3:	83 f9 10             	cmp    $0x10,%ecx
   291c6:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   291cc:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   291d2:	0f 45 d1             	cmovne %ecx,%edx
   291d5:	56                   	push   %esi
   291d6:	50                   	push   %eax
   291d7:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   291dd:	52                   	push   %edx
   291de:	50                   	push   %eax
   291df:	e8 bc 8e fe ff       	call   120a0 <print_asm_1>
   291e4:	e8 97 fc ff ff       	call   28e80 <instr_execute_1op>
   291e9:	83 c4 1c             	add    $0x1c,%esp
   291ec:	89 f8                	mov    %edi,%eax
   291ee:	5b                   	pop    %ebx
   291ef:	5e                   	pop    %esi
   291f0:	5f                   	pop    %edi
   291f1:	5d                   	pop    %ebp
   291f2:	c3                   	ret    
   291f3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   291fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00029200 <__ref_shr_rm_v>:
   29200:	55                   	push   %ebp
   29201:	57                   	push   %edi
   29202:	56                   	push   %esi
   29203:	53                   	push   %ebx
   29204:	e8 77 b2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29209:	81 c3 f7 5d 02 00    	add    $0x25df7,%ebx
   2920f:	83 ec 14             	sub    $0x14,%esp
   29212:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   29218:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2921e:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   29224:	0f b6 00             	movzbl (%eax),%eax
   29227:	56                   	push   %esi
   29228:	89 45 10             	mov    %eax,0x10(%ebp)
   2922b:	89 46 10             	mov    %eax,0x10(%esi)
   2922e:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   29232:	83 c0 01             	add    $0x1,%eax
   29235:	50                   	push   %eax
   29236:	e8 45 8d fe ff       	call   11f80 <modrm_rm>
   2923b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   2923e:	83 c4 10             	add    $0x10,%esp
   29241:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   29247:	8d 78 01             	lea    0x1(%eax),%edi
   2924a:	89 f8                	mov    %edi,%eax
   2924c:	0f b6 c0             	movzbl %al,%eax
   2924f:	83 f9 08             	cmp    $0x8,%ecx
   29252:	74 12                	je     29266 <__ref_shr_rm_v+0x66>
   29254:	83 f9 10             	cmp    $0x10,%ecx
   29257:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2925d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   29263:	0f 45 d1             	cmovne %ecx,%edx
   29266:	56                   	push   %esi
   29267:	50                   	push   %eax
   29268:	8d 83 4d 70 fe ff    	lea    -0x18fb3(%ebx),%eax
   2926e:	52                   	push   %edx
   2926f:	50                   	push   %eax
   29270:	e8 2b 8e fe ff       	call   120a0 <print_asm_1>
   29275:	e8 06 fc ff ff       	call   28e80 <instr_execute_1op>
   2927a:	83 c4 1c             	add    $0x1c,%esp
   2927d:	89 f8                	mov    %edi,%eax
   2927f:	5b                   	pop    %ebx
   29280:	5e                   	pop    %esi
   29281:	5f                   	pop    %edi
   29282:	5d                   	pop    %ebp
   29283:	c3                   	ret    
   29284:	66 90                	xchg   %ax,%ax
   29286:	66 90                	xchg   %ax,%ax
   29288:	66 90                	xchg   %ax,%ax
   2928a:	66 90                	xchg   %ax,%ax
   2928c:	66 90                	xchg   %ax,%ax
   2928e:	66 90                	xchg   %ax,%ax

00029290 <sign_ext.part.0>:
   29290:	53                   	push   %ebx
   29291:	e8 ea b1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29296:	81 c3 6a 5d 02 00    	add    $0x25d6a,%ebx
   2929c:	83 ec 08             	sub    $0x8,%esp
   2929f:	8d 83 e4 6d fe ff    	lea    -0x1921c(%ebx),%eax
   292a5:	50                   	push   %eax
   292a6:	8d 83 ef 6c fe ff    	lea    -0x19311(%ebx),%eax
   292ac:	6a 2e                	push   $0x2e
   292ae:	50                   	push   %eax
   292af:	8d 83 70 60 fe ff    	lea    -0x19f90(%ebx),%eax
   292b5:	50                   	push   %eax
   292b6:	e8 55 b0 fd ff       	call   4310 <__assert_fail@plt>
   292bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   292bf:	90                   	nop

000292c0 <instr_execute_2op>:
   292c0:	55                   	push   %ebp
   292c1:	57                   	push   %edi
   292c2:	56                   	push   %esi
   292c3:	53                   	push   %ebx
   292c4:	e8 b7 b1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   292c9:	81 c3 37 5d 02 00    	add    $0x25d37,%ebx
   292cf:	83 ec 0c             	sub    $0xc,%esp
   292d2:	e8 09 15 00 00       	call   2a7e0 <set_ref>
   292d7:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   292dd:	83 ec 0c             	sub    $0xc,%esp
   292e0:	57                   	push   %edi
   292e1:	e8 fa 90 fe ff       	call   123e0 <operand_read>
   292e6:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   292ec:	89 34 24             	mov    %esi,(%esp)
   292ef:	e8 ec 90 fe ff       	call   123e0 <operand_read>
   292f4:	8b 56 10             	mov    0x10(%esi),%edx
   292f7:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   292fd:	83 c4 10             	add    $0x10,%esp
   29300:	8d 6a f8             	lea    -0x8(%edx),%ebp
   29303:	0f b6 08             	movzbl (%eax),%ecx
   29306:	8b 46 0c             	mov    0xc(%esi),%eax
   29309:	83 e5 f7             	and    $0xfffffff7,%ebp
   2930c:	74 05                	je     29313 <instr_execute_2op+0x53>
   2930e:	83 fa 20             	cmp    $0x20,%edx
   29311:	75 5a                	jne    2936d <instr_execute_2op+0xad>
   29313:	83 fa 08             	cmp    $0x8,%edx
   29316:	74 48                	je     29360 <instr_execute_2op+0xa0>
   29318:	0f bf e8             	movswl %ax,%ebp
   2931b:	83 fa 10             	cmp    $0x10,%edx
   2931e:	0f 44 c5             	cmove  %ebp,%eax
   29321:	8b 6f 10             	mov    0x10(%edi),%ebp
   29324:	8b 57 0c             	mov    0xc(%edi),%edx
   29327:	8d 7d f8             	lea    -0x8(%ebp),%edi
   2932a:	83 e7 f7             	and    $0xfffffff7,%edi
   2932d:	74 05                	je     29334 <instr_execute_2op+0x74>
   2932f:	83 fd 20             	cmp    $0x20,%ebp
   29332:	75 39                	jne    2936d <instr_execute_2op+0xad>
   29334:	83 fd 08             	cmp    $0x8,%ebp
   29337:	74 2f                	je     29368 <instr_execute_2op+0xa8>
   29339:	0f bf fa             	movswl %dx,%edi
   2933c:	83 fd 10             	cmp    $0x10,%ebp
   2933f:	0f 44 d7             	cmove  %edi,%edx
   29342:	83 ec 04             	sub    $0x4,%esp
   29345:	51                   	push   %ecx
   29346:	50                   	push   %eax
   29347:	52                   	push   %edx
   29348:	e8 63 0c 00 00       	call   29fb0 <__ref_alu_sbb>
   2934d:	89 34 24             	mov    %esi,(%esp)
   29350:	89 46 0c             	mov    %eax,0xc(%esi)
   29353:	e8 38 92 fe ff       	call   12590 <operand_write>
   29358:	83 c4 1c             	add    $0x1c,%esp
   2935b:	5b                   	pop    %ebx
   2935c:	5e                   	pop    %esi
   2935d:	5f                   	pop    %edi
   2935e:	5d                   	pop    %ebp
   2935f:	c3                   	ret    
   29360:	0f be c0             	movsbl %al,%eax
   29363:	eb bc                	jmp    29321 <instr_execute_2op+0x61>
   29365:	8d 76 00             	lea    0x0(%esi),%esi
   29368:	0f be d2             	movsbl %dl,%edx
   2936b:	eb d5                	jmp    29342 <instr_execute_2op+0x82>
   2936d:	e8 1e ff ff ff       	call   29290 <sign_ext.part.0>
   29372:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   29379:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00029380 <__ref_sbb_r2rm_b>:
   29380:	55                   	push   %ebp
   29381:	57                   	push   %edi
   29382:	56                   	push   %esi
   29383:	53                   	push   %ebx
   29384:	e8 f7 b0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29389:	81 c3 77 5c 02 00    	add    $0x25c77,%ebx
   2938f:	83 ec 10             	sub    $0x10,%esp
   29392:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   29398:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   2939e:	56                   	push   %esi
   2939f:	57                   	push   %edi
   293a0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   293a4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   293ab:	83 c0 01             	add    $0x1,%eax
   293ae:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   293b5:	50                   	push   %eax
   293b6:	e8 e5 8a fe ff       	call   11ea0 <modrm_r_rm>
   293bb:	8b 4e 10             	mov    0x10(%esi),%ecx
   293be:	83 c4 10             	add    $0x10,%esp
   293c1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   293c7:	8d 68 01             	lea    0x1(%eax),%ebp
   293ca:	89 e8                	mov    %ebp,%eax
   293cc:	0f b6 c0             	movzbl %al,%eax
   293cf:	83 f9 08             	cmp    $0x8,%ecx
   293d2:	74 12                	je     293e6 <__ref_sbb_r2rm_b+0x66>
   293d4:	83 f9 10             	cmp    $0x10,%ecx
   293d7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   293dd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   293e3:	0f 45 d1             	cmovne %ecx,%edx
   293e6:	83 ec 0c             	sub    $0xc,%esp
   293e9:	56                   	push   %esi
   293ea:	57                   	push   %edi
   293eb:	50                   	push   %eax
   293ec:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   293f2:	52                   	push   %edx
   293f3:	50                   	push   %eax
   293f4:	e8 a7 8d fe ff       	call   121a0 <print_asm_2>
   293f9:	83 c4 20             	add    $0x20,%esp
   293fc:	e8 bf fe ff ff       	call   292c0 <instr_execute_2op>
   29401:	83 c4 0c             	add    $0xc,%esp
   29404:	89 e8                	mov    %ebp,%eax
   29406:	5b                   	pop    %ebx
   29407:	5e                   	pop    %esi
   29408:	5f                   	pop    %edi
   29409:	5d                   	pop    %ebp
   2940a:	c3                   	ret    
   2940b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2940f:	90                   	nop

00029410 <__ref_sbb_r2rm_v>:
   29410:	55                   	push   %ebp
   29411:	57                   	push   %edi
   29412:	56                   	push   %esi
   29413:	53                   	push   %ebx
   29414:	e8 67 b0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29419:	81 c3 e7 5b 02 00    	add    $0x25be7,%ebx
   2941f:	83 ec 10             	sub    $0x10,%esp
   29422:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   29428:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2942e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   29434:	0f b6 00             	movzbl (%eax),%eax
   29437:	56                   	push   %esi
   29438:	57                   	push   %edi
   29439:	89 46 10             	mov    %eax,0x10(%esi)
   2943c:	89 47 10             	mov    %eax,0x10(%edi)
   2943f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   29443:	83 c0 01             	add    $0x1,%eax
   29446:	50                   	push   %eax
   29447:	e8 54 8a fe ff       	call   11ea0 <modrm_r_rm>
   2944c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2944f:	83 c4 10             	add    $0x10,%esp
   29452:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   29458:	8d 68 01             	lea    0x1(%eax),%ebp
   2945b:	89 e8                	mov    %ebp,%eax
   2945d:	0f b6 c0             	movzbl %al,%eax
   29460:	83 f9 08             	cmp    $0x8,%ecx
   29463:	74 12                	je     29477 <__ref_sbb_r2rm_v+0x67>
   29465:	83 f9 10             	cmp    $0x10,%ecx
   29468:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2946e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   29474:	0f 45 d1             	cmovne %ecx,%edx
   29477:	83 ec 0c             	sub    $0xc,%esp
   2947a:	56                   	push   %esi
   2947b:	57                   	push   %edi
   2947c:	50                   	push   %eax
   2947d:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   29483:	52                   	push   %edx
   29484:	50                   	push   %eax
   29485:	e8 16 8d fe ff       	call   121a0 <print_asm_2>
   2948a:	83 c4 20             	add    $0x20,%esp
   2948d:	e8 2e fe ff ff       	call   292c0 <instr_execute_2op>
   29492:	83 c4 0c             	add    $0xc,%esp
   29495:	89 e8                	mov    %ebp,%eax
   29497:	5b                   	pop    %ebx
   29498:	5e                   	pop    %esi
   29499:	5f                   	pop    %edi
   2949a:	5d                   	pop    %ebp
   2949b:	c3                   	ret    
   2949c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000294a0 <__ref_sbb_rm2r_b>:
   294a0:	55                   	push   %ebp
   294a1:	57                   	push   %edi
   294a2:	56                   	push   %esi
   294a3:	53                   	push   %ebx
   294a4:	e8 d7 af fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   294a9:	81 c3 57 5b 02 00    	add    $0x25b57,%ebx
   294af:	83 ec 10             	sub    $0x10,%esp
   294b2:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   294b8:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   294be:	57                   	push   %edi
   294bf:	56                   	push   %esi
   294c0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   294c4:	c7 46 10 08 00 00 00 	movl   $0x8,0x10(%esi)
   294cb:	83 c0 01             	add    $0x1,%eax
   294ce:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   294d5:	50                   	push   %eax
   294d6:	e8 c5 89 fe ff       	call   11ea0 <modrm_r_rm>
   294db:	8b 4e 10             	mov    0x10(%esi),%ecx
   294de:	83 c4 10             	add    $0x10,%esp
   294e1:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   294e7:	8d 68 01             	lea    0x1(%eax),%ebp
   294ea:	89 e8                	mov    %ebp,%eax
   294ec:	0f b6 c0             	movzbl %al,%eax
   294ef:	83 f9 08             	cmp    $0x8,%ecx
   294f2:	74 12                	je     29506 <__ref_sbb_rm2r_b+0x66>
   294f4:	83 f9 10             	cmp    $0x10,%ecx
   294f7:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   294fd:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   29503:	0f 45 d1             	cmovne %ecx,%edx
   29506:	83 ec 0c             	sub    $0xc,%esp
   29509:	56                   	push   %esi
   2950a:	57                   	push   %edi
   2950b:	50                   	push   %eax
   2950c:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   29512:	52                   	push   %edx
   29513:	50                   	push   %eax
   29514:	e8 87 8c fe ff       	call   121a0 <print_asm_2>
   29519:	83 c4 20             	add    $0x20,%esp
   2951c:	e8 9f fd ff ff       	call   292c0 <instr_execute_2op>
   29521:	83 c4 0c             	add    $0xc,%esp
   29524:	89 e8                	mov    %ebp,%eax
   29526:	5b                   	pop    %ebx
   29527:	5e                   	pop    %esi
   29528:	5f                   	pop    %edi
   29529:	5d                   	pop    %ebp
   2952a:	c3                   	ret    
   2952b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2952f:	90                   	nop

00029530 <__ref_sbb_rm2r_v>:
   29530:	55                   	push   %ebp
   29531:	57                   	push   %edi
   29532:	56                   	push   %esi
   29533:	53                   	push   %ebx
   29534:	e8 47 af fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29539:	81 c3 c7 5a 02 00    	add    $0x25ac7,%ebx
   2953f:	83 ec 10             	sub    $0x10,%esp
   29542:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   29548:	8d b3 20 34 05 00    	lea    0x53420(%ebx),%esi
   2954e:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   29554:	0f b6 00             	movzbl (%eax),%eax
   29557:	57                   	push   %edi
   29558:	89 46 10             	mov    %eax,0x10(%esi)
   2955b:	56                   	push   %esi
   2955c:	89 47 10             	mov    %eax,0x10(%edi)
   2955f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   29563:	83 c0 01             	add    $0x1,%eax
   29566:	50                   	push   %eax
   29567:	e8 34 89 fe ff       	call   11ea0 <modrm_r_rm>
   2956c:	8b 4e 10             	mov    0x10(%esi),%ecx
   2956f:	83 c4 10             	add    $0x10,%esp
   29572:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   29578:	8d 68 01             	lea    0x1(%eax),%ebp
   2957b:	89 e8                	mov    %ebp,%eax
   2957d:	0f b6 c0             	movzbl %al,%eax
   29580:	83 f9 08             	cmp    $0x8,%ecx
   29583:	74 12                	je     29597 <__ref_sbb_rm2r_v+0x67>
   29585:	83 f9 10             	cmp    $0x10,%ecx
   29588:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   2958e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   29594:	0f 45 d1             	cmovne %ecx,%edx
   29597:	83 ec 0c             	sub    $0xc,%esp
   2959a:	56                   	push   %esi
   2959b:	57                   	push   %edi
   2959c:	50                   	push   %eax
   2959d:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   295a3:	52                   	push   %edx
   295a4:	50                   	push   %eax
   295a5:	e8 f6 8b fe ff       	call   121a0 <print_asm_2>
   295aa:	83 c4 20             	add    $0x20,%esp
   295ad:	e8 0e fd ff ff       	call   292c0 <instr_execute_2op>
   295b2:	83 c4 0c             	add    $0xc,%esp
   295b5:	89 e8                	mov    %ebp,%eax
   295b7:	5b                   	pop    %ebx
   295b8:	5e                   	pop    %esi
   295b9:	5f                   	pop    %edi
   295ba:	5d                   	pop    %ebp
   295bb:	c3                   	ret    
   295bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000295c0 <__ref_sbb_i2rm_b>:
   295c0:	55                   	push   %ebp
   295c1:	57                   	push   %edi
   295c2:	56                   	push   %esi
   295c3:	53                   	push   %ebx
   295c4:	e8 b7 ae fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   295c9:	81 c3 37 5a 02 00    	add    $0x25a37,%ebx
   295cf:	83 ec 24             	sub    $0x24,%esp
   295d2:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   295d6:	8d 45 01             	lea    0x1(%ebp),%eax
   295d9:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   295df:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   295e5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   295ec:	52                   	push   %edx
   295ed:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   295f4:	89 54 24 18          	mov    %edx,0x18(%esp)
   295f8:	50                   	push   %eax
   295f9:	e8 82 89 fe ff       	call   11f80 <modrm_rm>
   295fe:	8b 77 10             	mov    0x10(%edi),%esi
   29601:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   29605:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   29609:	83 c0 01             	add    $0x1,%eax
   2960c:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   29612:	83 c4 10             	add    $0x10,%esp
   29615:	01 c5                	add    %eax,%ebp
   29617:	c1 ee 03             	shr    $0x3,%esi
   2961a:	89 6f 04             	mov    %ebp,0x4(%edi)
   2961d:	01 c6                	add    %eax,%esi
   2961f:	8b 6a 10             	mov    0x10(%edx),%ebp
   29622:	89 f0                	mov    %esi,%eax
   29624:	0f b6 c8             	movzbl %al,%ecx
   29627:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   2962d:	83 fd 08             	cmp    $0x8,%ebp
   29630:	74 12                	je     29644 <__ref_sbb_i2rm_b+0x84>
   29632:	83 fd 10             	cmp    $0x10,%ebp
   29635:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2963b:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   29641:	0f 45 c5             	cmovne %ebp,%eax
   29644:	83 ec 0c             	sub    $0xc,%esp
   29647:	52                   	push   %edx
   29648:	57                   	push   %edi
   29649:	51                   	push   %ecx
   2964a:	50                   	push   %eax
   2964b:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   29651:	50                   	push   %eax
   29652:	e8 49 8b fe ff       	call   121a0 <print_asm_2>
   29657:	83 c4 20             	add    $0x20,%esp
   2965a:	e8 61 fc ff ff       	call   292c0 <instr_execute_2op>
   2965f:	83 c4 1c             	add    $0x1c,%esp
   29662:	89 f0                	mov    %esi,%eax
   29664:	5b                   	pop    %ebx
   29665:	5e                   	pop    %esi
   29666:	5f                   	pop    %edi
   29667:	5d                   	pop    %ebp
   29668:	c3                   	ret    
   29669:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00029670 <__ref_sbb_i2rm_v>:
   29670:	55                   	push   %ebp
   29671:	57                   	push   %edi
   29672:	56                   	push   %esi
   29673:	53                   	push   %ebx
   29674:	e8 07 ae fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29679:	81 c3 87 59 02 00    	add    $0x25987,%ebx
   2967f:	83 ec 24             	sub    $0x24,%esp
   29682:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   29686:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2968c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   29692:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   29698:	0f b6 00             	movzbl (%eax),%eax
   2969b:	89 42 10             	mov    %eax,0x10(%edx)
   2969e:	52                   	push   %edx
   2969f:	89 47 10             	mov    %eax,0x10(%edi)
   296a2:	8d 45 01             	lea    0x1(%ebp),%eax
   296a5:	89 54 24 18          	mov    %edx,0x18(%esp)
   296a9:	50                   	push   %eax
   296aa:	e8 d1 88 fe ff       	call   11f80 <modrm_rm>
   296af:	8b 77 10             	mov    0x10(%edi),%esi
   296b2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   296b6:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   296ba:	83 c0 01             	add    $0x1,%eax
   296bd:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   296c3:	83 c4 10             	add    $0x10,%esp
   296c6:	01 c5                	add    %eax,%ebp
   296c8:	c1 ee 03             	shr    $0x3,%esi
   296cb:	89 6f 04             	mov    %ebp,0x4(%edi)
   296ce:	01 c6                	add    %eax,%esi
   296d0:	8b 6a 10             	mov    0x10(%edx),%ebp
   296d3:	89 f0                	mov    %esi,%eax
   296d5:	0f b6 c8             	movzbl %al,%ecx
   296d8:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   296de:	83 fd 08             	cmp    $0x8,%ebp
   296e1:	74 12                	je     296f5 <__ref_sbb_i2rm_v+0x85>
   296e3:	83 fd 10             	cmp    $0x10,%ebp
   296e6:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   296ec:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   296f2:	0f 45 c5             	cmovne %ebp,%eax
   296f5:	83 ec 0c             	sub    $0xc,%esp
   296f8:	52                   	push   %edx
   296f9:	57                   	push   %edi
   296fa:	51                   	push   %ecx
   296fb:	50                   	push   %eax
   296fc:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   29702:	50                   	push   %eax
   29703:	e8 98 8a fe ff       	call   121a0 <print_asm_2>
   29708:	83 c4 20             	add    $0x20,%esp
   2970b:	e8 b0 fb ff ff       	call   292c0 <instr_execute_2op>
   29710:	83 c4 1c             	add    $0x1c,%esp
   29713:	89 f0                	mov    %esi,%eax
   29715:	5b                   	pop    %ebx
   29716:	5e                   	pop    %esi
   29717:	5f                   	pop    %edi
   29718:	5d                   	pop    %ebp
   29719:	c3                   	ret    
   2971a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00029720 <__ref_sbb_i2rm_bv>:
   29720:	55                   	push   %ebp
   29721:	57                   	push   %edi
   29722:	56                   	push   %esi
   29723:	53                   	push   %ebx
   29724:	e8 57 ad fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29729:	81 c3 d7 58 02 00    	add    $0x258d7,%ebx
   2972f:	83 ec 24             	sub    $0x24,%esp
   29732:	8b 6c 24 38          	mov    0x38(%esp),%ebp
   29736:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2973c:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   29742:	8d bb e0 33 05 00    	lea    0x533e0(%ebx),%edi
   29748:	0f b6 00             	movzbl (%eax),%eax
   2974b:	c7 47 10 08 00 00 00 	movl   $0x8,0x10(%edi)
   29752:	89 42 10             	mov    %eax,0x10(%edx)
   29755:	8d 45 01             	lea    0x1(%ebp),%eax
   29758:	52                   	push   %edx
   29759:	89 54 24 18          	mov    %edx,0x18(%esp)
   2975d:	50                   	push   %eax
   2975e:	e8 1d 88 fe ff       	call   11f80 <modrm_rm>
   29763:	8b 77 10             	mov    0x10(%edi),%esi
   29766:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   2976a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   2976e:	83 c0 01             	add    $0x1,%eax
   29771:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   29777:	83 c4 10             	add    $0x10,%esp
   2977a:	01 c5                	add    %eax,%ebp
   2977c:	c1 ee 03             	shr    $0x3,%esi
   2977f:	89 6f 04             	mov    %ebp,0x4(%edi)
   29782:	01 c6                	add    %eax,%esi
   29784:	8b 6a 10             	mov    0x10(%edx),%ebp
   29787:	89 f0                	mov    %esi,%eax
   29789:	0f b6 c8             	movzbl %al,%ecx
   2978c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   29792:	83 fd 08             	cmp    $0x8,%ebp
   29795:	74 12                	je     297a9 <__ref_sbb_i2rm_bv+0x89>
   29797:	83 fd 10             	cmp    $0x10,%ebp
   2979a:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   297a0:	8d ab 58 62 fe ff    	lea    -0x19da8(%ebx),%ebp
   297a6:	0f 45 c5             	cmovne %ebp,%eax
   297a9:	83 ec 0c             	sub    $0xc,%esp
   297ac:	52                   	push   %edx
   297ad:	57                   	push   %edi
   297ae:	51                   	push   %ecx
   297af:	50                   	push   %eax
   297b0:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   297b6:	50                   	push   %eax
   297b7:	e8 e4 89 fe ff       	call   121a0 <print_asm_2>
   297bc:	83 c4 20             	add    $0x20,%esp
   297bf:	e8 fc fa ff ff       	call   292c0 <instr_execute_2op>
   297c4:	83 c4 1c             	add    $0x1c,%esp
   297c7:	89 f0                	mov    %esi,%eax
   297c9:	5b                   	pop    %ebx
   297ca:	5e                   	pop    %esi
   297cb:	5f                   	pop    %edi
   297cc:	5d                   	pop    %ebp
   297cd:	c3                   	ret    
   297ce:	66 90                	xchg   %ax,%ax

000297d0 <__ref_sbb_i2a_b>:
   297d0:	53                   	push   %ebx
   297d1:	e8 aa ac fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   297d6:	81 c3 2a 58 02 00    	add    $0x2582a,%ebx
   297dc:	83 ec 14             	sub    $0x14,%esp
   297df:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   297e3:	83 c1 01             	add    $0x1,%ecx
   297e6:	8d 83 e0 33 05 00    	lea    0x533e0(%ebx),%eax
   297ec:	8d 93 20 34 05 00    	lea    0x53420(%ebx),%edx
   297f2:	89 48 04             	mov    %ecx,0x4(%eax)
   297f5:	c7 42 10 08 00 00 00 	movl   $0x8,0x10(%edx)
   297fc:	c7 40 10 08 00 00 00 	movl   $0x8,0x10(%eax)
   29803:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   29809:	c6 40 08 01          	movb   $0x1,0x8(%eax)
   2980d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   29813:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   2981a:	52                   	push   %edx
   2981b:	50                   	push   %eax
   2981c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   29822:	6a 02                	push   $0x2
   29824:	50                   	push   %eax
   29825:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   2982b:	50                   	push   %eax
   2982c:	e8 6f 89 fe ff       	call   121a0 <print_asm_2>
   29831:	83 c4 20             	add    $0x20,%esp
   29834:	e8 87 fa ff ff       	call   292c0 <instr_execute_2op>
   29839:	83 c4 08             	add    $0x8,%esp
   2983c:	b8 02 00 00 00       	mov    $0x2,%eax
   29841:	5b                   	pop    %ebx
   29842:	c3                   	ret    
   29843:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2984a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00029850 <__ref_sbb_i2a_v>:
   29850:	55                   	push   %ebp
   29851:	57                   	push   %edi
   29852:	56                   	push   %esi
   29853:	53                   	push   %ebx
   29854:	e8 27 ac fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29859:	81 c3 a7 57 02 00    	add    $0x257a7,%ebx
   2985f:	83 ec 0c             	sub    $0xc,%esp
   29862:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   29868:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   2986e:	8d b3 43 52 fe ff    	lea    -0x1adbd(%ebx),%esi
   29874:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   2987a:	0f b6 08             	movzbl (%eax),%ecx
   2987d:	8b 44 24 20          	mov    0x20(%esp),%eax
   29881:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   29887:	c6 42 08 01          	movb   $0x1,0x8(%edx)
   2988b:	89 cf                	mov    %ecx,%edi
   2988d:	83 c0 01             	add    $0x1,%eax
   29890:	89 4d 10             	mov    %ecx,0x10(%ebp)
   29893:	c1 ef 03             	shr    $0x3,%edi
   29896:	89 4a 10             	mov    %ecx,0x10(%edx)
   29899:	89 42 04             	mov    %eax,0x4(%edx)
   2989c:	83 c7 01             	add    $0x1,%edi
   2989f:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%ebp)
   298a6:	c7 45 04 00 00 00 00 	movl   $0x0,0x4(%ebp)
   298ad:	83 f9 08             	cmp    $0x8,%ecx
   298b0:	74 12                	je     298c4 <__ref_sbb_i2a_v+0x74>
   298b2:	83 f9 10             	cmp    $0x10,%ecx
   298b5:	8d b3 bb 6a fe ff    	lea    -0x19545(%ebx),%esi
   298bb:	8d 83 58 62 fe ff    	lea    -0x19da8(%ebx),%eax
   298c1:	0f 45 f0             	cmovne %eax,%esi
   298c4:	83 ec 0c             	sub    $0xc,%esp
   298c7:	8d 83 e5 6f fe ff    	lea    -0x1901b(%ebx),%eax
   298cd:	55                   	push   %ebp
   298ce:	52                   	push   %edx
   298cf:	57                   	push   %edi
   298d0:	56                   	push   %esi
   298d1:	50                   	push   %eax
   298d2:	e8 c9 88 fe ff       	call   121a0 <print_asm_2>
   298d7:	83 c4 20             	add    $0x20,%esp
   298da:	e8 e1 f9 ff ff       	call   292c0 <instr_execute_2op>
   298df:	83 c4 0c             	add    $0xc,%esp
   298e2:	89 f8                	mov    %edi,%eax
   298e4:	5b                   	pop    %ebx
   298e5:	5e                   	pop    %esi
   298e6:	5f                   	pop    %edi
   298e7:	5d                   	pop    %ebp
   298e8:	c3                   	ret    
   298e9:	66 90                	xchg   %ax,%ax
   298eb:	66 90                	xchg   %ax,%ax
   298ed:	66 90                	xchg   %ax,%ax
   298ef:	90                   	nop

000298f0 <instr_execute_1op>:
   298f0:	56                   	push   %esi
   298f1:	53                   	push   %ebx
   298f2:	e8 89 ab fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   298f7:	81 c3 09 57 02 00    	add    $0x25709,%ebx
   298fd:	83 ec 04             	sub    $0x4,%esp
   29900:	e8 db 0e 00 00       	call   2a7e0 <set_ref>
   29905:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   2990b:	83 ec 0c             	sub    $0xc,%esp
   2990e:	56                   	push   %esi
   2990f:	e8 cc 8a fe ff       	call   123e0 <operand_read>
   29914:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   2991a:	83 c4 0c             	add    $0xc,%esp
   2991d:	0f b6 00             	movzbl (%eax),%eax
   29920:	50                   	push   %eax
   29921:	ff 76 0c             	pushl  0xc(%esi)
   29924:	6a 01                	push   $0x1
   29926:	e8 25 04 00 00       	call   29d50 <__ref_alu_add>
   2992b:	89 34 24             	mov    %esi,(%esp)
   2992e:	89 46 0c             	mov    %eax,0xc(%esi)
   29931:	e8 5a 8c fe ff       	call   12590 <operand_write>
   29936:	83 c4 14             	add    $0x14,%esp
   29939:	5b                   	pop    %ebx
   2993a:	5e                   	pop    %esi
   2993b:	c3                   	ret    
   2993c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00029940 <__ref_inc_r_v>:
   29940:	53                   	push   %ebx
   29941:	e8 3a ab fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29946:	81 c3 ba 56 02 00    	add    $0x256ba,%ebx
   2994c:	83 ec 08             	sub    $0x8,%esp
   2994f:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   29955:	8d 93 e0 33 05 00    	lea    0x533e0(%ebx),%edx
   2995b:	0f b6 08             	movzbl (%eax),%ecx
   2995e:	8d 83 20 34 05 00    	lea    0x53420(%ebx),%eax
   29964:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
   2996a:	89 48 10             	mov    %ecx,0x10(%eax)
   2996d:	8b 44 24 14          	mov    0x14(%esp),%eax
   29971:	89 4a 10             	mov    %ecx,0x10(%edx)
   29974:	83 e0 07             	and    $0x7,%eax
   29977:	89 42 04             	mov    %eax,0x4(%edx)
   2997a:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   29980:	83 f9 08             	cmp    $0x8,%ecx
   29983:	74 12                	je     29997 <__ref_inc_r_v+0x57>
   29985:	83 f9 10             	cmp    $0x10,%ecx
   29988:	8d 83 bb 6a fe ff    	lea    -0x19545(%ebx),%eax
   2998e:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   29994:	0f 45 c1             	cmovne %ecx,%eax
   29997:	52                   	push   %edx
   29998:	6a 01                	push   $0x1
   2999a:	50                   	push   %eax
   2999b:	8d 83 19 6b fe ff    	lea    -0x194e7(%ebx),%eax
   299a1:	50                   	push   %eax
   299a2:	e8 f9 86 fe ff       	call   120a0 <print_asm_1>
   299a7:	e8 44 ff ff ff       	call   298f0 <instr_execute_1op>
   299ac:	83 c4 18             	add    $0x18,%esp
   299af:	b8 01 00 00 00       	mov    $0x1,%eax
   299b4:	5b                   	pop    %ebx
   299b5:	c3                   	ret    
   299b6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   299bd:	8d 76 00             	lea    0x0(%esi),%esi

000299c0 <__ref_inc_rm_v>:
   299c0:	55                   	push   %ebp
   299c1:	57                   	push   %edi
   299c2:	56                   	push   %esi
   299c3:	53                   	push   %ebx
   299c4:	e8 b7 aa fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   299c9:	81 c3 37 56 02 00    	add    $0x25637,%ebx
   299cf:	83 ec 14             	sub    $0x14,%esp
   299d2:	8d 83 84 07 00 00    	lea    0x784(%ebx),%eax
   299d8:	8d ab 20 34 05 00    	lea    0x53420(%ebx),%ebp
   299de:	8d b3 e0 33 05 00    	lea    0x533e0(%ebx),%esi
   299e4:	0f b6 00             	movzbl (%eax),%eax
   299e7:	56                   	push   %esi
   299e8:	89 45 10             	mov    %eax,0x10(%ebp)
   299eb:	89 46 10             	mov    %eax,0x10(%esi)
   299ee:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   299f2:	83 c0 01             	add    $0x1,%eax
   299f5:	50                   	push   %eax
   299f6:	e8 85 85 fe ff       	call   11f80 <modrm_rm>
   299fb:	8b 4d 10             	mov    0x10(%ebp),%ecx
   299fe:	83 c4 10             	add    $0x10,%esp
   29a01:	8d 93 43 52 fe ff    	lea    -0x1adbd(%ebx),%edx
   29a07:	8d 78 01             	lea    0x1(%eax),%edi
   29a0a:	89 f8                	mov    %edi,%eax
   29a0c:	0f b6 c0             	movzbl %al,%eax
   29a0f:	83 f9 08             	cmp    $0x8,%ecx
   29a12:	74 12                	je     29a26 <__ref_inc_rm_v+0x66>
   29a14:	83 f9 10             	cmp    $0x10,%ecx
   29a17:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   29a1d:	8d 8b 58 62 fe ff    	lea    -0x19da8(%ebx),%ecx
   29a23:	0f 45 d1             	cmovne %ecx,%edx
   29a26:	56                   	push   %esi
   29a27:	50                   	push   %eax
   29a28:	8d 83 19 6b fe ff    	lea    -0x194e7(%ebx),%eax
   29a2e:	52                   	push   %edx
   29a2f:	50                   	push   %eax
   29a30:	e8 6b 86 fe ff       	call   120a0 <print_asm_1>
   29a35:	e8 b6 fe ff ff       	call   298f0 <instr_execute_1op>
   29a3a:	83 c4 1c             	add    $0x1c,%esp
   29a3d:	89 f8                	mov    %edi,%eax
   29a3f:	5b                   	pop    %ebx
   29a40:	5e                   	pop    %esi
   29a41:	5f                   	pop    %edi
   29a42:	5d                   	pop    %ebp
   29a43:	c3                   	ret    
   29a44:	66 90                	xchg   %ax,%ax
   29a46:	66 90                	xchg   %ax,%ax
   29a48:	66 90                	xchg   %ax,%ax
   29a4a:	66 90                	xchg   %ax,%ax
   29a4c:	66 90                	xchg   %ax,%ax
   29a4e:	66 90                	xchg   %ax,%ax

00029a50 <__ref_idiv_rm2a_b>:
   29a50:	55                   	push   %ebp
   29a51:	57                   	push   %edi
   29a52:	56                   	push   %esi
   29a53:	53                   	push   %ebx
   29a54:	e8 27 aa fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29a59:	81 c3 a7 55 02 00    	add    $0x255a7,%ebx
   29a5f:	81 ec ac 00 00 00    	sub    $0xac,%esp
   29a65:	e8 76 0d 00 00       	call   2a7e0 <set_ref>
   29a6a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
   29a71:	00 
   29a72:	83 ec 0c             	sub    $0xc,%esp
   29a75:	c7 44 24 2c 10 00 00 	movl   $0x10,0x2c(%esp)
   29a7c:	00 
   29a7d:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   29a84:	00 
   29a85:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   29a89:	57                   	push   %edi
   29a8a:	e8 51 89 fe ff       	call   123e0 <operand_read>
   29a8f:	c7 44 24 54 08 00 00 	movl   $0x8,0x54(%esp)
   29a96:	00 
   29a97:	58                   	pop    %eax
   29a98:	5a                   	pop    %edx
   29a99:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   29a9d:	56                   	push   %esi
   29a9e:	8b 84 24 cc 00 00 00 	mov    0xcc(%esp),%eax
   29aa5:	83 c0 01             	add    $0x1,%eax
   29aa8:	50                   	push   %eax
   29aa9:	e8 d2 84 fe ff       	call   11f80 <modrm_rm>
   29aae:	89 34 24             	mov    %esi,(%esp)
   29ab1:	8d 68 01             	lea    0x1(%eax),%ebp
   29ab4:	e8 27 89 fe ff       	call   123e0 <operand_read>
   29ab9:	0f bf 44 24 2c       	movswl 0x2c(%esp),%eax
   29abe:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
   29ac5:	99                   	cltd   
   29ac6:	52                   	push   %edx
   29ac7:	50                   	push   %eax
   29ac8:	0f be 44 24 58       	movsbl 0x58(%esp),%eax
   29acd:	99                   	cltd   
   29ace:	52                   	push   %edx
   29acf:	50                   	push   %eax
   29ad0:	e8 9b 07 00 00       	call   2a270 <__ref_alu_idiv>
   29ad5:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   29ad9:	83 c4 20             	add    $0x20,%esp
   29adc:	0f bf 44 24 1c       	movswl 0x1c(%esp),%eax
   29ae1:	99                   	cltd   
   29ae2:	52                   	push   %edx
   29ae3:	50                   	push   %eax
   29ae4:	0f be 44 24 48       	movsbl 0x48(%esp),%eax
   29ae9:	99                   	cltd   
   29aea:	52                   	push   %edx
   29aeb:	50                   	push   %eax
   29aec:	e8 ff 07 00 00       	call   2a2f0 <__ref_alu_imod>
   29af1:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   29af5:	c7 84 24 8c 00 00 00 	movl   $0x1,0x8c(%esp)
   29afc:	01 00 00 00 
   29b00:	89 44 24 74          	mov    %eax,0x74(%esp)
   29b04:	c7 44 24 68 01 00 00 	movl   $0x1,0x68(%esp)
   29b0b:	00 
   29b0c:	c7 84 24 9c 00 00 00 	movl   $0x8,0x9c(%esp)
   29b13:	08 00 00 00 
   29b17:	c7 44 24 78 08 00 00 	movl   $0x8,0x78(%esp)
   29b1e:	00 
   29b1f:	c7 44 24 6c 04 00 00 	movl   $0x4,0x6c(%esp)
   29b26:	00 
   29b27:	c7 84 24 90 00 00 00 	movl   $0x0,0x90(%esp)
   29b2e:	00 00 00 00 
   29b32:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%esp)
   29b39:	59                   	pop    %ecx
   29b3a:	8d 44 24 64          	lea    0x64(%esp),%eax
   29b3e:	50                   	push   %eax
   29b3f:	e8 4c 8a fe ff       	call   12590 <operand_write>
   29b44:	58                   	pop    %eax
   29b45:	8d 84 24 88 00 00 00 	lea    0x88(%esp),%eax
   29b4c:	50                   	push   %eax
   29b4d:	e8 3e 8a fe ff       	call   12590 <operand_write>
   29b52:	89 e8                	mov    %ebp,%eax
   29b54:	89 3c 24             	mov    %edi,(%esp)
   29b57:	0f b6 c0             	movzbl %al,%eax
   29b5a:	56                   	push   %esi
   29b5b:	50                   	push   %eax
   29b5c:	8d 83 43 52 fe ff    	lea    -0x1adbd(%ebx),%eax
   29b62:	50                   	push   %eax
   29b63:	8d 83 b7 70 fe ff    	lea    -0x18f49(%ebx),%eax
   29b69:	50                   	push   %eax
   29b6a:	e8 31 86 fe ff       	call   121a0 <print_asm_2>
   29b6f:	81 c4 cc 00 00 00    	add    $0xcc,%esp
   29b75:	89 e8                	mov    %ebp,%eax
   29b77:	5b                   	pop    %ebx
   29b78:	5e                   	pop    %esi
   29b79:	5f                   	pop    %edi
   29b7a:	5d                   	pop    %ebp
   29b7b:	c3                   	ret    
   29b7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00029b80 <__ref_idiv_rm2a_v>:
   29b80:	55                   	push   %ebp
   29b81:	57                   	push   %edi
   29b82:	56                   	push   %esi
   29b83:	53                   	push   %ebx
   29b84:	e8 f7 a8 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29b89:	81 c3 77 54 02 00    	add    $0x25477,%ebx
   29b8f:	81 ec 9c 00 00 00    	sub    $0x9c,%esp
   29b95:	e8 46 0c 00 00       	call   2a7e0 <set_ref>
   29b9a:	8d 93 84 07 00 00    	lea    0x784(%ebx),%edx
   29ba0:	83 ec 0c             	sub    $0xc,%esp
   29ba3:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   29baa:	00 
   29bab:	c7 44 24 54 01 00 00 	movl   $0x1,0x54(%esp)
   29bb2:	00 
   29bb3:	0f b6 02             	movzbl (%edx),%eax
   29bb6:	89 54 24 14          	mov    %edx,0x14(%esp)
   29bba:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   29bc1:	00 
   29bc2:	89 44 24 40          	mov    %eax,0x40(%esp)
   29bc6:	89 44 24 64          	mov    %eax,0x64(%esp)
   29bca:	c7 44 24 58 02 00 00 	movl   $0x2,0x58(%esp)
   29bd1:	00 
   29bd2:	8d 7c 24 30          	lea    0x30(%esp),%edi
   29bd6:	57                   	push   %edi
   29bd7:	e8 04 88 fe ff       	call   123e0 <operand_read>
   29bdc:	58                   	pop    %eax
   29bdd:	8d 74 24 54          	lea    0x54(%esp),%esi
   29be1:	56                   	push   %esi
   29be2:	e8 f9 87 fe ff       	call   123e0 <operand_read>
   29be7:	8b 54 24 18          	mov    0x18(%esp),%edx
   29beb:	0f b6 02             	movzbl (%edx),%eax
   29bee:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%esp)
   29bf5:	58                   	pop    %eax
   29bf6:	5a                   	pop    %edx
   29bf7:	8d 6c 24 74          	lea    0x74(%esp),%ebp
   29bfb:	55                   	push   %ebp
   29bfc:	8b 84 24 bc 00 00 00 	mov    0xbc(%esp),%eax
   29c03:	83 c0 01             	add    $0x1,%eax
   29c06:	50                   	push   %eax
   29c07:	e8 74 83 fe ff       	call   11f80 <modrm_rm>
   29c0c:	89 2c 24             	mov    %ebp,(%esp)
   29c0f:	83 c0 01             	add    $0x1,%eax
   29c12:	89 44 24 24          	mov    %eax,0x24(%esp)
   29c16:	e8 c5 87 fe ff       	call   123e0 <operand_read>
   29c1b:	8b 54 24 18          	mov    0x18(%esp),%edx
   29c1f:	0f b6 4c 24 24       	movzbl 0x24(%esp),%ecx
   29c24:	0f b6 02             	movzbl (%edx),%eax
   29c27:	89 4c 24 28          	mov    %ecx,0x28(%esp)
   29c2b:	83 c4 10             	add    $0x10,%esp
   29c2e:	3c 10                	cmp    $0x10,%al
   29c30:	0f 84 a2 00 00 00    	je     29cd8 <__ref_idiv_rm2a_v+0x158>
   29c36:	8b 4c 24 30          	mov    0x30(%esp),%ecx
   29c3a:	83 ec 0c             	sub    $0xc,%esp
   29c3d:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   29c41:	8b 4c 24 60          	mov    0x60(%esp),%ecx
   29c45:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   29c49:	50                   	push   %eax
   29c4a:	ff 74 24 1c          	pushl  0x1c(%esp)
   29c4e:	ff 74 24 1c          	pushl  0x1c(%esp)
   29c52:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
   29c59:	99                   	cltd   
   29c5a:	52                   	push   %edx
   29c5b:	50                   	push   %eax
   29c5c:	e8 0f 06 00 00       	call   2a270 <__ref_alu_idiv>
   29c61:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   29c65:	83 c4 20             	add    $0x20,%esp
   29c68:	ff 74 24 0c          	pushl  0xc(%esp)
   29c6c:	ff 74 24 0c          	pushl  0xc(%esp)
   29c70:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
   29c77:	99                   	cltd   
   29c78:	52                   	push   %edx
   29c79:	50                   	push   %eax
   29c7a:	e8 71 06 00 00       	call   2a2f0 <__ref_alu_imod>
   29c7f:	89 44 24 18          	mov    %eax,0x18(%esp)
   29c83:	58                   	pop    %eax
   29c84:	5a                   	pop    %edx
   29c85:	8d 93 58 62 fe ff    	lea    -0x19da8(%ebx),%edx
   29c8b:	57                   	push   %edi
   29c8c:	56                   	push   %esi
   29c8d:	55                   	push   %ebp
   29c8e:	ff 74 24 2c          	pushl  0x2c(%esp)
   29c92:	52                   	push   %edx
   29c93:	8d 93 b7 70 fe ff    	lea    -0x18f49(%ebx),%edx
   29c99:	52                   	push   %edx
   29c9a:	e8 11 86 fe ff       	call   122b0 <print_asm_3>
   29c9f:	83 c4 20             	add    $0x20,%esp
   29ca2:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   29ca6:	8b 44 24 08          	mov    0x8(%esp),%eax
   29caa:	89 4c 24 30          	mov    %ecx,0x30(%esp)
   29cae:	83 ec 0c             	sub    $0xc,%esp
   29cb1:	89 44 24 60          	mov    %eax,0x60(%esp)
   29cb5:	57                   	push   %edi
   29cb6:	e8 d5 88 fe ff       	call   12590 <operand_write>
   29cbb:	89 34 24             	mov    %esi,(%esp)
   29cbe:	e8 cd 88 fe ff       	call   12590 <operand_write>
   29cc3:	8b 44 24 24          	mov    0x24(%esp),%eax
   29cc7:	81 c4 ac 00 00 00    	add    $0xac,%esp
   29ccd:	5b                   	pop    %ebx
   29cce:	5e                   	pop    %esi
   29ccf:	5f                   	pop    %edi
   29cd0:	5d                   	pop    %ebp
   29cd1:	c3                   	ret    
   29cd2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   29cd8:	83 ec 0c             	sub    $0xc,%esp
   29cdb:	6a 10                	push   $0x10
   29cdd:	8b 44 24 64          	mov    0x64(%esp),%eax
   29ce1:	c1 e0 10             	shl    $0x10,%eax
   29ce4:	0b 44 24 40          	or     0x40(%esp),%eax
   29ce8:	99                   	cltd   
   29ce9:	52                   	push   %edx
   29cea:	50                   	push   %eax
   29ceb:	0f bf 84 24 90 00 00 	movswl 0x90(%esp),%eax
   29cf2:	00 
   29cf3:	99                   	cltd   
   29cf4:	52                   	push   %edx
   29cf5:	50                   	push   %eax
   29cf6:	e8 75 05 00 00       	call   2a270 <__ref_alu_idiv>
   29cfb:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   29cff:	83 c4 20             	add    $0x20,%esp
   29d02:	8b 44 24 54          	mov    0x54(%esp),%eax
   29d06:	c1 e0 10             	shl    $0x10,%eax
   29d09:	0b 44 24 30          	or     0x30(%esp),%eax
   29d0d:	99                   	cltd   
   29d0e:	52                   	push   %edx
   29d0f:	50                   	push   %eax
   29d10:	0f bf 84 24 80 00 00 	movswl 0x80(%esp),%eax
   29d17:	00 
   29d18:	99                   	cltd   
   29d19:	52                   	push   %edx
   29d1a:	50                   	push   %eax
   29d1b:	e8 d0 05 00 00       	call   2a2f0 <__ref_alu_imod>
   29d20:	8d 93 bb 6a fe ff    	lea    -0x19545(%ebx),%edx
   29d26:	89 44 24 18          	mov    %eax,0x18(%esp)
   29d2a:	59                   	pop    %ecx
   29d2b:	58                   	pop    %eax
   29d2c:	57                   	push   %edi
   29d2d:	56                   	push   %esi
   29d2e:	55                   	push   %ebp
   29d2f:	ff 74 24 2c          	pushl  0x2c(%esp)
   29d33:	52                   	push   %edx
   29d34:	8d 93 b7 70 fe ff    	lea    -0x18f49(%ebx),%edx
   29d3a:	52                   	push   %edx
   29d3b:	e8 70 85 fe ff       	call   122b0 <print_asm_3>
   29d40:	83 c4 20             	add    $0x20,%esp
   29d43:	8b 44 24 08          	mov    0x8(%esp),%eax
   29d47:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   29d4b:	e9 5a ff ff ff       	jmp    29caa <__ref_idiv_rm2a_v+0x12a>

00029d50 <__ref_alu_add>:
   29d50:	56                   	push   %esi
   29d51:	53                   	push   %ebx
   29d52:	e8 29 a7 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29d57:	81 c3 a9 52 02 00    	add    $0x252a9,%ebx
   29d5d:	83 ec 04             	sub    $0x4,%esp
   29d60:	8b 74 24 18          	mov    0x18(%esp),%esi
   29d64:	e8 77 0a 00 00       	call   2a7e0 <set_ref>
   29d69:	83 fe 20             	cmp    $0x20,%esi
   29d6c:	74 62                	je     29dd0 <__ref_alu_add+0x80>
   29d6e:	83 fe 10             	cmp    $0x10,%esi
   29d71:	74 45                	je     29db8 <__ref_alu_add+0x68>
   29d73:	83 fe 08             	cmp    $0x8,%esi
   29d76:	75 66                	jne    29dde <__ref_alu_add+0x8e>
   29d78:	8b 44 24 14          	mov    0x14(%esp),%eax
   29d7c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29d80:	00 c8                	add    %cl,%al
   29d82:	9c                   	pushf  
   29d83:	5a                   	pop    %edx
   29d84:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   29d8a:	66 81 e2 c5 08       	and    $0x8c5,%dx
   29d8f:	0f b7 4b 24          	movzwl 0x24(%ebx),%ecx
   29d93:	66 81 e1 3a f7       	and    $0xf73a,%cx
   29d98:	09 ca                	or     %ecx,%edx
   29d9a:	b9 20 00 00 00       	mov    $0x20,%ecx
   29d9f:	66 89 53 24          	mov    %dx,0x24(%ebx)
   29da3:	29 f1                	sub    %esi,%ecx
   29da5:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   29daa:	83 c4 04             	add    $0x4,%esp
   29dad:	d3 ea                	shr    %cl,%edx
   29daf:	5b                   	pop    %ebx
   29db0:	5e                   	pop    %esi
   29db1:	21 d0                	and    %edx,%eax
   29db3:	c3                   	ret    
   29db4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29db8:	8b 44 24 14          	mov    0x14(%esp),%eax
   29dbc:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29dc0:	66 01 c8             	add    %cx,%ax
   29dc3:	9c                   	pushf  
   29dc4:	5a                   	pop    %edx
   29dc5:	eb bd                	jmp    29d84 <__ref_alu_add+0x34>
   29dc7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   29dce:	66 90                	xchg   %ax,%ax
   29dd0:	8b 44 24 14          	mov    0x14(%esp),%eax
   29dd4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29dd8:	01 c8                	add    %ecx,%eax
   29dda:	9c                   	pushf  
   29ddb:	5a                   	pop    %edx
   29ddc:	eb a6                	jmp    29d84 <__ref_alu_add+0x34>
   29dde:	8d 83 c4 6e fe ff    	lea    -0x1913c(%ebx),%eax
   29de4:	50                   	push   %eax
   29de5:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   29deb:	6a 3d                	push   $0x3d
   29ded:	50                   	push   %eax
   29dee:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   29df4:	50                   	push   %eax
   29df5:	e8 16 a5 fd ff       	call   4310 <__assert_fail@plt>
   29dfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00029e00 <__ref_alu_adc>:
   29e00:	57                   	push   %edi
   29e01:	56                   	push   %esi
   29e02:	53                   	push   %ebx
   29e03:	8b 74 24 18          	mov    0x18(%esp),%esi
   29e07:	e8 74 a6 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29e0c:	81 c3 f4 51 02 00    	add    $0x251f4,%ebx
   29e12:	e8 c9 09 00 00       	call   2a7e0 <set_ref>
   29e17:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   29e1d:	f6 47 24 01          	testb  $0x1,0x24(%edi)
   29e21:	74 4d                	je     29e70 <__ref_alu_adc+0x70>
   29e23:	83 fe 20             	cmp    $0x20,%esi
   29e26:	74 68                	je     29e90 <__ref_alu_adc+0x90>
   29e28:	83 fe 10             	cmp    $0x10,%esi
   29e2b:	0f 84 8f 00 00 00    	je     29ec0 <__ref_alu_adc+0xc0>
   29e31:	83 fe 08             	cmp    $0x8,%esi
   29e34:	0f 85 99 00 00 00    	jne    29ed3 <__ref_alu_adc+0xd3>
   29e3a:	8b 44 24 14          	mov    0x14(%esp),%eax
   29e3e:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29e42:	f9                   	stc    
   29e43:	10 c8                	adc    %cl,%al
   29e45:	9c                   	pushf  
   29e46:	5a                   	pop    %edx
   29e47:	0f b7 4f 24          	movzwl 0x24(%edi),%ecx
   29e4b:	66 81 e2 c5 08       	and    $0x8c5,%dx
   29e50:	5b                   	pop    %ebx
   29e51:	66 81 e1 3a f7       	and    $0xf73a,%cx
   29e56:	09 ca                	or     %ecx,%edx
   29e58:	b9 20 00 00 00       	mov    $0x20,%ecx
   29e5d:	66 89 57 24          	mov    %dx,0x24(%edi)
   29e61:	29 f1                	sub    %esi,%ecx
   29e63:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   29e68:	5e                   	pop    %esi
   29e69:	d3 ea                	shr    %cl,%edx
   29e6b:	5f                   	pop    %edi
   29e6c:	21 d0                	and    %edx,%eax
   29e6e:	c3                   	ret    
   29e6f:	90                   	nop
   29e70:	83 fe 20             	cmp    $0x20,%esi
   29e73:	74 2b                	je     29ea0 <__ref_alu_adc+0xa0>
   29e75:	83 fe 10             	cmp    $0x10,%esi
   29e78:	74 36                	je     29eb0 <__ref_alu_adc+0xb0>
   29e7a:	83 fe 08             	cmp    $0x8,%esi
   29e7d:	75 70                	jne    29eef <__ref_alu_adc+0xef>
   29e7f:	8b 44 24 14          	mov    0x14(%esp),%eax
   29e83:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29e87:	f8                   	clc    
   29e88:	10 c8                	adc    %cl,%al
   29e8a:	9c                   	pushf  
   29e8b:	5a                   	pop    %edx
   29e8c:	eb b9                	jmp    29e47 <__ref_alu_adc+0x47>
   29e8e:	66 90                	xchg   %ax,%ax
   29e90:	8b 44 24 14          	mov    0x14(%esp),%eax
   29e94:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29e98:	f9                   	stc    
   29e99:	11 c8                	adc    %ecx,%eax
   29e9b:	9c                   	pushf  
   29e9c:	5a                   	pop    %edx
   29e9d:	eb a8                	jmp    29e47 <__ref_alu_adc+0x47>
   29e9f:	90                   	nop
   29ea0:	8b 44 24 14          	mov    0x14(%esp),%eax
   29ea4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29ea8:	f8                   	clc    
   29ea9:	11 c8                	adc    %ecx,%eax
   29eab:	9c                   	pushf  
   29eac:	5a                   	pop    %edx
   29ead:	eb 98                	jmp    29e47 <__ref_alu_adc+0x47>
   29eaf:	90                   	nop
   29eb0:	8b 44 24 14          	mov    0x14(%esp),%eax
   29eb4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29eb8:	f8                   	clc    
   29eb9:	66 11 c8             	adc    %cx,%ax
   29ebc:	9c                   	pushf  
   29ebd:	5a                   	pop    %edx
   29ebe:	eb 87                	jmp    29e47 <__ref_alu_adc+0x47>
   29ec0:	8b 44 24 14          	mov    0x14(%esp),%eax
   29ec4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29ec8:	f9                   	stc    
   29ec9:	66 11 c8             	adc    %cx,%ax
   29ecc:	9c                   	pushf  
   29ecd:	5a                   	pop    %edx
   29ece:	e9 74 ff ff ff       	jmp    29e47 <__ref_alu_adc+0x47>
   29ed3:	8d 83 b4 6e fe ff    	lea    -0x1914c(%ebx),%eax
   29ed9:	50                   	push   %eax
   29eda:	6a 60                	push   $0x60
   29edc:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   29ee2:	50                   	push   %eax
   29ee3:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   29ee9:	50                   	push   %eax
   29eea:	e8 21 a4 fd ff       	call   4310 <__assert_fail@plt>
   29eef:	8d 83 b4 6e fe ff    	lea    -0x1914c(%ebx),%eax
   29ef5:	50                   	push   %eax
   29ef6:	6a 78                	push   $0x78
   29ef8:	eb e2                	jmp    29edc <__ref_alu_adc+0xdc>
   29efa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00029f00 <__ref_alu_sub>:
   29f00:	56                   	push   %esi
   29f01:	53                   	push   %ebx
   29f02:	e8 79 a5 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29f07:	81 c3 f9 50 02 00    	add    $0x250f9,%ebx
   29f0d:	83 ec 04             	sub    $0x4,%esp
   29f10:	8b 74 24 18          	mov    0x18(%esp),%esi
   29f14:	e8 c7 08 00 00       	call   2a7e0 <set_ref>
   29f19:	83 fe 20             	cmp    $0x20,%esi
   29f1c:	74 62                	je     29f80 <__ref_alu_sub+0x80>
   29f1e:	83 fe 10             	cmp    $0x10,%esi
   29f21:	74 45                	je     29f68 <__ref_alu_sub+0x68>
   29f23:	83 fe 08             	cmp    $0x8,%esi
   29f26:	75 66                	jne    29f8e <__ref_alu_sub+0x8e>
   29f28:	8b 44 24 14          	mov    0x14(%esp),%eax
   29f2c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29f30:	28 c8                	sub    %cl,%al
   29f32:	9c                   	pushf  
   29f33:	5a                   	pop    %edx
   29f34:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   29f3a:	66 81 e2 c5 08       	and    $0x8c5,%dx
   29f3f:	0f b7 4b 24          	movzwl 0x24(%ebx),%ecx
   29f43:	66 81 e1 3a f7       	and    $0xf73a,%cx
   29f48:	09 ca                	or     %ecx,%edx
   29f4a:	b9 20 00 00 00       	mov    $0x20,%ecx
   29f4f:	66 89 53 24          	mov    %dx,0x24(%ebx)
   29f53:	29 f1                	sub    %esi,%ecx
   29f55:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   29f5a:	83 c4 04             	add    $0x4,%esp
   29f5d:	d3 ea                	shr    %cl,%edx
   29f5f:	5b                   	pop    %ebx
   29f60:	5e                   	pop    %esi
   29f61:	21 d0                	and    %edx,%eax
   29f63:	c3                   	ret    
   29f64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29f68:	8b 44 24 14          	mov    0x14(%esp),%eax
   29f6c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29f70:	66 29 c8             	sub    %cx,%ax
   29f73:	9c                   	pushf  
   29f74:	5a                   	pop    %edx
   29f75:	eb bd                	jmp    29f34 <__ref_alu_sub+0x34>
   29f77:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   29f7e:	66 90                	xchg   %ax,%ax
   29f80:	8b 44 24 14          	mov    0x14(%esp),%eax
   29f84:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29f88:	29 c8                	sub    %ecx,%eax
   29f8a:	9c                   	pushf  
   29f8b:	5a                   	pop    %edx
   29f8c:	eb a6                	jmp    29f34 <__ref_alu_sub+0x34>
   29f8e:	8d 83 a4 6e fe ff    	lea    -0x1915c(%ebx),%eax
   29f94:	50                   	push   %eax
   29f95:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   29f9b:	68 9a 00 00 00       	push   $0x9a
   29fa0:	50                   	push   %eax
   29fa1:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   29fa7:	50                   	push   %eax
   29fa8:	e8 63 a3 fd ff       	call   4310 <__assert_fail@plt>
   29fad:	8d 76 00             	lea    0x0(%esi),%esi

00029fb0 <__ref_alu_sbb>:
   29fb0:	57                   	push   %edi
   29fb1:	56                   	push   %esi
   29fb2:	53                   	push   %ebx
   29fb3:	8b 74 24 18          	mov    0x18(%esp),%esi
   29fb7:	e8 c4 a4 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   29fbc:	81 c3 44 50 02 00    	add    $0x25044,%ebx
   29fc2:	e8 19 08 00 00       	call   2a7e0 <set_ref>
   29fc7:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   29fcd:	f6 47 24 01          	testb  $0x1,0x24(%edi)
   29fd1:	74 4d                	je     2a020 <__ref_alu_sbb+0x70>
   29fd3:	83 fe 20             	cmp    $0x20,%esi
   29fd6:	74 68                	je     2a040 <__ref_alu_sbb+0x90>
   29fd8:	83 fe 10             	cmp    $0x10,%esi
   29fdb:	0f 84 8f 00 00 00    	je     2a070 <__ref_alu_sbb+0xc0>
   29fe1:	83 fe 08             	cmp    $0x8,%esi
   29fe4:	0f 85 99 00 00 00    	jne    2a083 <__ref_alu_sbb+0xd3>
   29fea:	8b 44 24 14          	mov    0x14(%esp),%eax
   29fee:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   29ff2:	f9                   	stc    
   29ff3:	18 c8                	sbb    %cl,%al
   29ff5:	9c                   	pushf  
   29ff6:	5a                   	pop    %edx
   29ff7:	0f b7 4f 24          	movzwl 0x24(%edi),%ecx
   29ffb:	66 81 e2 c5 08       	and    $0x8c5,%dx
   2a000:	5b                   	pop    %ebx
   2a001:	66 81 e1 3a f7       	and    $0xf73a,%cx
   2a006:	09 ca                	or     %ecx,%edx
   2a008:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a00d:	66 89 57 24          	mov    %dx,0x24(%edi)
   2a011:	29 f1                	sub    %esi,%ecx
   2a013:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a018:	5e                   	pop    %esi
   2a019:	d3 ea                	shr    %cl,%edx
   2a01b:	5f                   	pop    %edi
   2a01c:	21 d0                	and    %edx,%eax
   2a01e:	c3                   	ret    
   2a01f:	90                   	nop
   2a020:	83 fe 20             	cmp    $0x20,%esi
   2a023:	74 2b                	je     2a050 <__ref_alu_sbb+0xa0>
   2a025:	83 fe 10             	cmp    $0x10,%esi
   2a028:	74 36                	je     2a060 <__ref_alu_sbb+0xb0>
   2a02a:	83 fe 08             	cmp    $0x8,%esi
   2a02d:	75 73                	jne    2a0a2 <__ref_alu_sbb+0xf2>
   2a02f:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a033:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a037:	f8                   	clc    
   2a038:	18 c8                	sbb    %cl,%al
   2a03a:	9c                   	pushf  
   2a03b:	5a                   	pop    %edx
   2a03c:	eb b9                	jmp    29ff7 <__ref_alu_sbb+0x47>
   2a03e:	66 90                	xchg   %ax,%ax
   2a040:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a044:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a048:	f9                   	stc    
   2a049:	19 c8                	sbb    %ecx,%eax
   2a04b:	9c                   	pushf  
   2a04c:	5a                   	pop    %edx
   2a04d:	eb a8                	jmp    29ff7 <__ref_alu_sbb+0x47>
   2a04f:	90                   	nop
   2a050:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a054:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a058:	f8                   	clc    
   2a059:	19 c8                	sbb    %ecx,%eax
   2a05b:	9c                   	pushf  
   2a05c:	5a                   	pop    %edx
   2a05d:	eb 98                	jmp    29ff7 <__ref_alu_sbb+0x47>
   2a05f:	90                   	nop
   2a060:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a064:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a068:	f8                   	clc    
   2a069:	66 19 c8             	sbb    %cx,%ax
   2a06c:	9c                   	pushf  
   2a06d:	5a                   	pop    %edx
   2a06e:	eb 87                	jmp    29ff7 <__ref_alu_sbb+0x47>
   2a070:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a074:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a078:	f9                   	stc    
   2a079:	66 19 c8             	sbb    %cx,%ax
   2a07c:	9c                   	pushf  
   2a07d:	5a                   	pop    %edx
   2a07e:	e9 74 ff ff ff       	jmp    29ff7 <__ref_alu_sbb+0x47>
   2a083:	8d 83 94 6e fe ff    	lea    -0x1916c(%ebx),%eax
   2a089:	50                   	push   %eax
   2a08a:	68 be 00 00 00       	push   $0xbe
   2a08f:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a095:	50                   	push   %eax
   2a096:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a09c:	50                   	push   %eax
   2a09d:	e8 6e a2 fd ff       	call   4310 <__assert_fail@plt>
   2a0a2:	8d 83 94 6e fe ff    	lea    -0x1916c(%ebx),%eax
   2a0a8:	50                   	push   %eax
   2a0a9:	68 d6 00 00 00       	push   $0xd6
   2a0ae:	eb df                	jmp    2a08f <__ref_alu_sbb+0xdf>

0002a0b0 <__ref_alu_mul>:
   2a0b0:	57                   	push   %edi
   2a0b1:	56                   	push   %esi
   2a0b2:	53                   	push   %ebx
   2a0b3:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a0b7:	e8 c4 a3 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a0bc:	81 c3 44 4f 02 00    	add    $0x24f44,%ebx
   2a0c2:	e8 19 07 00 00       	call   2a7e0 <set_ref>
   2a0c7:	83 fe 20             	cmp    $0x20,%esi
   2a0ca:	74 74                	je     2a140 <__ref_alu_mul+0x90>
   2a0cc:	83 fe 10             	cmp    $0x10,%esi
   2a0cf:	74 4f                	je     2a120 <__ref_alu_mul+0x70>
   2a0d1:	83 fe 08             	cmp    $0x8,%esi
   2a0d4:	0f 85 90 00 00 00    	jne    2a16a <__ref_alu_mul+0xba>
   2a0da:	0f b6 44 24 14       	movzbl 0x14(%esp),%eax
   2a0df:	0f b6 4c 24 10       	movzbl 0x10(%esp),%ecx
   2a0e4:	ba 00 00 00 00       	mov    $0x0,%edx
   2a0e9:	f6 e1                	mul    %cl
   2a0eb:	9c                   	pushf  
   2a0ec:	59                   	pop    %ecx
   2a0ed:	89 ce                	mov    %ecx,%esi
   2a0ef:	c1 e2 08             	shl    $0x8,%edx
   2a0f2:	8d bb 60 32 05 00    	lea    0x53260(%ebx),%edi
   2a0f8:	89 d1                	mov    %edx,%ecx
   2a0fa:	31 d2                	xor    %edx,%edx
   2a0fc:	09 c1                	or     %eax,%ecx
   2a0fe:	0f b7 5f 24          	movzwl 0x24(%edi),%ebx
   2a102:	89 c8                	mov    %ecx,%eax
   2a104:	89 f1                	mov    %esi,%ecx
   2a106:	66 81 e1 01 08       	and    $0x801,%cx
   2a10b:	66 81 e3 fe f7       	and    $0xf7fe,%bx
   2a110:	09 cb                	or     %ecx,%ebx
   2a112:	66 89 5f 24          	mov    %bx,0x24(%edi)
   2a116:	5b                   	pop    %ebx
   2a117:	5e                   	pop    %esi
   2a118:	5f                   	pop    %edi
   2a119:	c3                   	ret    
   2a11a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2a120:	0f b7 44 24 14       	movzwl 0x14(%esp),%eax
   2a125:	0f b7 4c 24 10       	movzwl 0x10(%esp),%ecx
   2a12a:	66 f7 e1             	mul    %cx
   2a12d:	9c                   	pushf  
   2a12e:	59                   	pop    %ecx
   2a12f:	89 ce                	mov    %ecx,%esi
   2a131:	c1 e2 10             	shl    $0x10,%edx
   2a134:	eb bc                	jmp    2a0f2 <__ref_alu_mul+0x42>
   2a136:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a13d:	8d 76 00             	lea    0x0(%esi),%esi
   2a140:	8d b3 60 32 05 00    	lea    0x53260(%ebx),%esi
   2a146:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a14a:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a14e:	0f b7 5e 24          	movzwl 0x24(%esi),%ebx
   2a152:	f7 e1                	mul    %ecx
   2a154:	9c                   	pushf  
   2a155:	59                   	pop    %ecx
   2a156:	66 81 e3 fe f7       	and    $0xf7fe,%bx
   2a15b:	66 81 e1 01 08       	and    $0x801,%cx
   2a160:	09 cb                	or     %ecx,%ebx
   2a162:	66 89 5e 24          	mov    %bx,0x24(%esi)
   2a166:	5b                   	pop    %ebx
   2a167:	5e                   	pop    %esi
   2a168:	5f                   	pop    %edi
   2a169:	c3                   	ret    
   2a16a:	8d 83 84 6e fe ff    	lea    -0x1917c(%ebx),%eax
   2a170:	50                   	push   %eax
   2a171:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a177:	68 09 01 00 00       	push   $0x109
   2a17c:	50                   	push   %eax
   2a17d:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a183:	50                   	push   %eax
   2a184:	e8 87 a1 fd ff       	call   4310 <__assert_fail@plt>
   2a189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002a190 <__ref_alu_imul>:
   2a190:	56                   	push   %esi
   2a191:	53                   	push   %ebx
   2a192:	e8 e9 a2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a197:	81 c3 69 4e 02 00    	add    $0x24e69,%ebx
   2a19d:	83 ec 04             	sub    $0x4,%esp
   2a1a0:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a1a4:	e8 37 06 00 00       	call   2a7e0 <set_ref>
   2a1a9:	83 fe 20             	cmp    $0x20,%esi
   2a1ac:	74 42                	je     2a1f0 <__ref_alu_imul+0x60>
   2a1ae:	83 fe 10             	cmp    $0x10,%esi
   2a1b1:	74 1d                	je     2a1d0 <__ref_alu_imul+0x40>
   2a1b3:	83 fe 08             	cmp    $0x8,%esi
   2a1b6:	75 4a                	jne    2a202 <__ref_alu_imul+0x72>
   2a1b8:	0f b6 44 24 14       	movzbl 0x14(%esp),%eax
   2a1bd:	0f b6 4c 24 10       	movzbl 0x10(%esp),%ecx
   2a1c2:	83 c4 04             	add    $0x4,%esp
   2a1c5:	31 d2                	xor    %edx,%edx
   2a1c7:	f6 e9                	imul   %cl
   2a1c9:	9c                   	pushf  
   2a1ca:	59                   	pop    %ecx
   2a1cb:	5b                   	pop    %ebx
   2a1cc:	98                   	cwtl   
   2a1cd:	5e                   	pop    %esi
   2a1ce:	c3                   	ret    
   2a1cf:	90                   	nop
   2a1d0:	0f b7 44 24 14       	movzwl 0x14(%esp),%eax
   2a1d5:	0f b7 4c 24 10       	movzwl 0x10(%esp),%ecx
   2a1da:	83 c4 04             	add    $0x4,%esp
   2a1dd:	66 f7 e9             	imul   %cx
   2a1e0:	9c                   	pushf  
   2a1e1:	59                   	pop    %ecx
   2a1e2:	c1 e2 10             	shl    $0x10,%edx
   2a1e5:	0f b7 c0             	movzwl %ax,%eax
   2a1e8:	5b                   	pop    %ebx
   2a1e9:	5e                   	pop    %esi
   2a1ea:	09 d0                	or     %edx,%eax
   2a1ec:	31 d2                	xor    %edx,%edx
   2a1ee:	c3                   	ret    
   2a1ef:	90                   	nop
   2a1f0:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a1f4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a1f8:	83 c4 04             	add    $0x4,%esp
   2a1fb:	f7 e9                	imul   %ecx
   2a1fd:	9c                   	pushf  
   2a1fe:	59                   	pop    %ecx
   2a1ff:	5b                   	pop    %ebx
   2a200:	5e                   	pop    %esi
   2a201:	c3                   	ret    
   2a202:	8d 83 74 6e fe ff    	lea    -0x1918c(%ebx),%eax
   2a208:	50                   	push   %eax
   2a209:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a20f:	68 31 01 00 00       	push   $0x131
   2a214:	50                   	push   %eax
   2a215:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a21b:	50                   	push   %eax
   2a21c:	e8 ef a0 fd ff       	call   4310 <__assert_fail@plt>
   2a221:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a228:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a22f:	90                   	nop

0002a230 <__ref_alu_div>:
   2a230:	55                   	push   %ebp
   2a231:	57                   	push   %edi
   2a232:	56                   	push   %esi
   2a233:	53                   	push   %ebx
   2a234:	e8 47 a2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a239:	81 c3 c7 4d 02 00    	add    $0x24dc7,%ebx
   2a23f:	83 ec 0c             	sub    $0xc,%esp
   2a242:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   2a246:	8b 74 24 28          	mov    0x28(%esp),%esi
   2a24a:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
   2a24e:	e8 8d 05 00 00       	call   2a7e0 <set_ref>
   2a253:	83 c4 0c             	add    $0xc,%esp
   2a256:	89 f0                	mov    %esi,%eax
   2a258:	89 fa                	mov    %edi,%edx
   2a25a:	5b                   	pop    %ebx
   2a25b:	89 e9                	mov    %ebp,%ecx
   2a25d:	5e                   	pop    %esi
   2a25e:	f7 f1                	div    %ecx
   2a260:	5f                   	pop    %edi
   2a261:	5d                   	pop    %ebp
   2a262:	c3                   	ret    
   2a263:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a26a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002a270 <__ref_alu_idiv>:
   2a270:	55                   	push   %ebp
   2a271:	57                   	push   %edi
   2a272:	56                   	push   %esi
   2a273:	53                   	push   %ebx
   2a274:	e8 07 a2 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a279:	81 c3 87 4d 02 00    	add    $0x24d87,%ebx
   2a27f:	83 ec 0c             	sub    $0xc,%esp
   2a282:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   2a286:	8b 74 24 28          	mov    0x28(%esp),%esi
   2a28a:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
   2a28e:	e8 4d 05 00 00       	call   2a7e0 <set_ref>
   2a293:	83 c4 0c             	add    $0xc,%esp
   2a296:	89 f0                	mov    %esi,%eax
   2a298:	89 fa                	mov    %edi,%edx
   2a29a:	5b                   	pop    %ebx
   2a29b:	89 e9                	mov    %ebp,%ecx
   2a29d:	5e                   	pop    %esi
   2a29e:	f7 f9                	idiv   %ecx
   2a2a0:	5f                   	pop    %edi
   2a2a1:	5d                   	pop    %ebp
   2a2a2:	c3                   	ret    
   2a2a3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a2aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002a2b0 <__ref_alu_mod>:
   2a2b0:	55                   	push   %ebp
   2a2b1:	57                   	push   %edi
   2a2b2:	56                   	push   %esi
   2a2b3:	53                   	push   %ebx
   2a2b4:	e8 c7 a1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a2b9:	81 c3 47 4d 02 00    	add    $0x24d47,%ebx
   2a2bf:	83 ec 0c             	sub    $0xc,%esp
   2a2c2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   2a2c6:	8b 7c 24 28          	mov    0x28(%esp),%edi
   2a2ca:	8b 74 24 2c          	mov    0x2c(%esp),%esi
   2a2ce:	e8 0d 05 00 00       	call   2a7e0 <set_ref>
   2a2d3:	83 c4 0c             	add    $0xc,%esp
   2a2d6:	89 f8                	mov    %edi,%eax
   2a2d8:	89 f2                	mov    %esi,%edx
   2a2da:	5b                   	pop    %ebx
   2a2db:	89 e9                	mov    %ebp,%ecx
   2a2dd:	5e                   	pop    %esi
   2a2de:	f7 f1                	div    %ecx
   2a2e0:	5f                   	pop    %edi
   2a2e1:	89 d0                	mov    %edx,%eax
   2a2e3:	5d                   	pop    %ebp
   2a2e4:	c3                   	ret    
   2a2e5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a2ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002a2f0 <__ref_alu_imod>:
   2a2f0:	55                   	push   %ebp
   2a2f1:	57                   	push   %edi
   2a2f2:	56                   	push   %esi
   2a2f3:	53                   	push   %ebx
   2a2f4:	e8 87 a1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a2f9:	81 c3 07 4d 02 00    	add    $0x24d07,%ebx
   2a2ff:	83 ec 0c             	sub    $0xc,%esp
   2a302:	8b 6c 24 20          	mov    0x20(%esp),%ebp
   2a306:	8b 7c 24 28          	mov    0x28(%esp),%edi
   2a30a:	8b 74 24 2c          	mov    0x2c(%esp),%esi
   2a30e:	e8 cd 04 00 00       	call   2a7e0 <set_ref>
   2a313:	83 c4 0c             	add    $0xc,%esp
   2a316:	89 f8                	mov    %edi,%eax
   2a318:	89 f2                	mov    %esi,%edx
   2a31a:	5b                   	pop    %ebx
   2a31b:	89 e9                	mov    %ebp,%ecx
   2a31d:	5e                   	pop    %esi
   2a31e:	f7 f9                	idiv   %ecx
   2a320:	5f                   	pop    %edi
   2a321:	89 d0                	mov    %edx,%eax
   2a323:	5d                   	pop    %ebp
   2a324:	c3                   	ret    
   2a325:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a32c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002a330 <__ref_alu_and>:
   2a330:	56                   	push   %esi
   2a331:	53                   	push   %ebx
   2a332:	e8 49 a1 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a337:	81 c3 c9 4c 02 00    	add    $0x24cc9,%ebx
   2a33d:	83 ec 04             	sub    $0x4,%esp
   2a340:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a344:	e8 97 04 00 00       	call   2a7e0 <set_ref>
   2a349:	83 fe 20             	cmp    $0x20,%esi
   2a34c:	74 62                	je     2a3b0 <__ref_alu_and+0x80>
   2a34e:	83 fe 10             	cmp    $0x10,%esi
   2a351:	74 45                	je     2a398 <__ref_alu_and+0x68>
   2a353:	83 fe 08             	cmp    $0x8,%esi
   2a356:	75 66                	jne    2a3be <__ref_alu_and+0x8e>
   2a358:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a35c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a360:	20 c8                	and    %cl,%al
   2a362:	9c                   	pushf  
   2a363:	5a                   	pop    %edx
   2a364:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   2a36a:	66 81 e2 c5 08       	and    $0x8c5,%dx
   2a36f:	0f b7 4b 24          	movzwl 0x24(%ebx),%ecx
   2a373:	66 81 e1 3a f7       	and    $0xf73a,%cx
   2a378:	09 ca                	or     %ecx,%edx
   2a37a:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a37f:	66 89 53 24          	mov    %dx,0x24(%ebx)
   2a383:	29 f1                	sub    %esi,%ecx
   2a385:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a38a:	83 c4 04             	add    $0x4,%esp
   2a38d:	d3 ea                	shr    %cl,%edx
   2a38f:	5b                   	pop    %ebx
   2a390:	5e                   	pop    %esi
   2a391:	21 d0                	and    %edx,%eax
   2a393:	c3                   	ret    
   2a394:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2a398:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a39c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a3a0:	66 21 c8             	and    %cx,%ax
   2a3a3:	9c                   	pushf  
   2a3a4:	5a                   	pop    %edx
   2a3a5:	eb bd                	jmp    2a364 <__ref_alu_and+0x34>
   2a3a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a3ae:	66 90                	xchg   %ax,%ax
   2a3b0:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a3b4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a3b8:	21 c8                	and    %ecx,%eax
   2a3ba:	9c                   	pushf  
   2a3bb:	5a                   	pop    %edx
   2a3bc:	eb a6                	jmp    2a364 <__ref_alu_and+0x34>
   2a3be:	8d 83 64 6e fe ff    	lea    -0x1919c(%ebx),%eax
   2a3c4:	50                   	push   %eax
   2a3c5:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a3cb:	68 78 01 00 00       	push   $0x178
   2a3d0:	50                   	push   %eax
   2a3d1:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a3d7:	50                   	push   %eax
   2a3d8:	e8 33 9f fd ff       	call   4310 <__assert_fail@plt>
   2a3dd:	8d 76 00             	lea    0x0(%esi),%esi

0002a3e0 <__ref_alu_xor>:
   2a3e0:	56                   	push   %esi
   2a3e1:	53                   	push   %ebx
   2a3e2:	e8 99 a0 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a3e7:	81 c3 19 4c 02 00    	add    $0x24c19,%ebx
   2a3ed:	83 ec 04             	sub    $0x4,%esp
   2a3f0:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a3f4:	e8 e7 03 00 00       	call   2a7e0 <set_ref>
   2a3f9:	83 fe 20             	cmp    $0x20,%esi
   2a3fc:	74 62                	je     2a460 <__ref_alu_xor+0x80>
   2a3fe:	83 fe 10             	cmp    $0x10,%esi
   2a401:	74 45                	je     2a448 <__ref_alu_xor+0x68>
   2a403:	83 fe 08             	cmp    $0x8,%esi
   2a406:	75 66                	jne    2a46e <__ref_alu_xor+0x8e>
   2a408:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a40c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a410:	30 c8                	xor    %cl,%al
   2a412:	9c                   	pushf  
   2a413:	5a                   	pop    %edx
   2a414:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   2a41a:	66 81 e2 c5 08       	and    $0x8c5,%dx
   2a41f:	0f b7 4b 24          	movzwl 0x24(%ebx),%ecx
   2a423:	66 81 e1 3a f7       	and    $0xf73a,%cx
   2a428:	09 ca                	or     %ecx,%edx
   2a42a:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a42f:	66 89 53 24          	mov    %dx,0x24(%ebx)
   2a433:	29 f1                	sub    %esi,%ecx
   2a435:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a43a:	83 c4 04             	add    $0x4,%esp
   2a43d:	d3 ea                	shr    %cl,%edx
   2a43f:	5b                   	pop    %ebx
   2a440:	5e                   	pop    %esi
   2a441:	21 d0                	and    %edx,%eax
   2a443:	c3                   	ret    
   2a444:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2a448:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a44c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a450:	66 31 c8             	xor    %cx,%ax
   2a453:	9c                   	pushf  
   2a454:	5a                   	pop    %edx
   2a455:	eb bd                	jmp    2a414 <__ref_alu_xor+0x34>
   2a457:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a45e:	66 90                	xchg   %ax,%ax
   2a460:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a464:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a468:	31 c8                	xor    %ecx,%eax
   2a46a:	9c                   	pushf  
   2a46b:	5a                   	pop    %edx
   2a46c:	eb a6                	jmp    2a414 <__ref_alu_xor+0x34>
   2a46e:	8d 83 54 6e fe ff    	lea    -0x191ac(%ebx),%eax
   2a474:	50                   	push   %eax
   2a475:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a47b:	68 98 01 00 00       	push   $0x198
   2a480:	50                   	push   %eax
   2a481:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a487:	50                   	push   %eax
   2a488:	e8 83 9e fd ff       	call   4310 <__assert_fail@plt>
   2a48d:	8d 76 00             	lea    0x0(%esi),%esi

0002a490 <__ref_alu_or>:
   2a490:	56                   	push   %esi
   2a491:	53                   	push   %ebx
   2a492:	e8 e9 9f fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a497:	81 c3 69 4b 02 00    	add    $0x24b69,%ebx
   2a49d:	83 ec 04             	sub    $0x4,%esp
   2a4a0:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a4a4:	e8 37 03 00 00       	call   2a7e0 <set_ref>
   2a4a9:	83 fe 20             	cmp    $0x20,%esi
   2a4ac:	74 62                	je     2a510 <__ref_alu_or+0x80>
   2a4ae:	83 fe 10             	cmp    $0x10,%esi
   2a4b1:	74 45                	je     2a4f8 <__ref_alu_or+0x68>
   2a4b3:	83 fe 08             	cmp    $0x8,%esi
   2a4b6:	75 66                	jne    2a51e <__ref_alu_or+0x8e>
   2a4b8:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a4bc:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a4c0:	08 c8                	or     %cl,%al
   2a4c2:	9c                   	pushf  
   2a4c3:	5a                   	pop    %edx
   2a4c4:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   2a4ca:	66 81 e2 c5 08       	and    $0x8c5,%dx
   2a4cf:	0f b7 4b 24          	movzwl 0x24(%ebx),%ecx
   2a4d3:	66 81 e1 3a f7       	and    $0xf73a,%cx
   2a4d8:	09 ca                	or     %ecx,%edx
   2a4da:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a4df:	66 89 53 24          	mov    %dx,0x24(%ebx)
   2a4e3:	29 f1                	sub    %esi,%ecx
   2a4e5:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a4ea:	83 c4 04             	add    $0x4,%esp
   2a4ed:	d3 ea                	shr    %cl,%edx
   2a4ef:	5b                   	pop    %ebx
   2a4f0:	5e                   	pop    %esi
   2a4f1:	21 d0                	and    %edx,%eax
   2a4f3:	c3                   	ret    
   2a4f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2a4f8:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a4fc:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a500:	66 09 c8             	or     %cx,%ax
   2a503:	9c                   	pushf  
   2a504:	5a                   	pop    %edx
   2a505:	eb bd                	jmp    2a4c4 <__ref_alu_or+0x34>
   2a507:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a50e:	66 90                	xchg   %ax,%ax
   2a510:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a514:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a518:	09 c8                	or     %ecx,%eax
   2a51a:	9c                   	pushf  
   2a51b:	5a                   	pop    %edx
   2a51c:	eb a6                	jmp    2a4c4 <__ref_alu_or+0x34>
   2a51e:	8d 83 44 6e fe ff    	lea    -0x191bc(%ebx),%eax
   2a524:	50                   	push   %eax
   2a525:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a52b:	68 b8 01 00 00       	push   $0x1b8
   2a530:	50                   	push   %eax
   2a531:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a537:	50                   	push   %eax
   2a538:	e8 d3 9d fd ff       	call   4310 <__assert_fail@plt>
   2a53d:	8d 76 00             	lea    0x0(%esi),%esi

0002a540 <__ref_alu_shl>:
   2a540:	56                   	push   %esi
   2a541:	53                   	push   %ebx
   2a542:	e8 39 9f fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a547:	81 c3 b9 4a 02 00    	add    $0x24ab9,%ebx
   2a54d:	83 ec 04             	sub    $0x4,%esp
   2a550:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a554:	e8 87 02 00 00       	call   2a7e0 <set_ref>
   2a559:	83 fe 08             	cmp    $0x8,%esi
   2a55c:	74 52                	je     2a5b0 <__ref_alu_shl+0x70>
   2a55e:	83 fe 10             	cmp    $0x10,%esi
   2a561:	74 3d                	je     2a5a0 <__ref_alu_shl+0x60>
   2a563:	83 fe 20             	cmp    $0x20,%esi
   2a566:	75 56                	jne    2a5be <__ref_alu_shl+0x7e>
   2a568:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a56c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a570:	d3 e0                	shl    %cl,%eax
   2a572:	9c                   	pushf  
   2a573:	5a                   	pop    %edx
   2a574:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   2a57a:	83 e2 c5             	and    $0xffffffc5,%edx
   2a57d:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
   2a581:	83 e1 3a             	and    $0x3a,%ecx
   2a584:	09 ca                	or     %ecx,%edx
   2a586:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a58b:	88 53 24             	mov    %dl,0x24(%ebx)
   2a58e:	29 f1                	sub    %esi,%ecx
   2a590:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a595:	83 c4 04             	add    $0x4,%esp
   2a598:	d3 ea                	shr    %cl,%edx
   2a59a:	5b                   	pop    %ebx
   2a59b:	5e                   	pop    %esi
   2a59c:	21 d0                	and    %edx,%eax
   2a59e:	c3                   	ret    
   2a59f:	90                   	nop
   2a5a0:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a5a4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a5a8:	66 d3 e0             	shl    %cl,%ax
   2a5ab:	9c                   	pushf  
   2a5ac:	5a                   	pop    %edx
   2a5ad:	eb c5                	jmp    2a574 <__ref_alu_shl+0x34>
   2a5af:	90                   	nop
   2a5b0:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a5b4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a5b8:	d2 e0                	shl    %cl,%al
   2a5ba:	9c                   	pushf  
   2a5bb:	5a                   	pop    %edx
   2a5bc:	eb b6                	jmp    2a574 <__ref_alu_shl+0x34>
   2a5be:	8d 83 34 6e fe ff    	lea    -0x191cc(%ebx),%eax
   2a5c4:	50                   	push   %eax
   2a5c5:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a5cb:	68 dc 01 00 00       	push   $0x1dc
   2a5d0:	50                   	push   %eax
   2a5d1:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a5d7:	50                   	push   %eax
   2a5d8:	e8 33 9d fd ff       	call   4310 <__assert_fail@plt>
   2a5dd:	8d 76 00             	lea    0x0(%esi),%esi

0002a5e0 <__ref_alu_shr>:
   2a5e0:	56                   	push   %esi
   2a5e1:	53                   	push   %ebx
   2a5e2:	e8 99 9e fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a5e7:	81 c3 19 4a 02 00    	add    $0x24a19,%ebx
   2a5ed:	83 ec 04             	sub    $0x4,%esp
   2a5f0:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a5f4:	e8 e7 01 00 00       	call   2a7e0 <set_ref>
   2a5f9:	83 fe 08             	cmp    $0x8,%esi
   2a5fc:	74 52                	je     2a650 <__ref_alu_shr+0x70>
   2a5fe:	83 fe 10             	cmp    $0x10,%esi
   2a601:	74 3d                	je     2a640 <__ref_alu_shr+0x60>
   2a603:	83 fe 20             	cmp    $0x20,%esi
   2a606:	75 56                	jne    2a65e <__ref_alu_shr+0x7e>
   2a608:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a60c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a610:	d3 e8                	shr    %cl,%eax
   2a612:	9c                   	pushf  
   2a613:	5a                   	pop    %edx
   2a614:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   2a61a:	83 e2 c5             	and    $0xffffffc5,%edx
   2a61d:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
   2a621:	83 e1 3a             	and    $0x3a,%ecx
   2a624:	09 ca                	or     %ecx,%edx
   2a626:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a62b:	88 53 24             	mov    %dl,0x24(%ebx)
   2a62e:	29 f1                	sub    %esi,%ecx
   2a630:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a635:	83 c4 04             	add    $0x4,%esp
   2a638:	d3 ea                	shr    %cl,%edx
   2a63a:	5b                   	pop    %ebx
   2a63b:	5e                   	pop    %esi
   2a63c:	21 d0                	and    %edx,%eax
   2a63e:	c3                   	ret    
   2a63f:	90                   	nop
   2a640:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a644:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a648:	66 d3 e8             	shr    %cl,%ax
   2a64b:	9c                   	pushf  
   2a64c:	5a                   	pop    %edx
   2a64d:	eb c5                	jmp    2a614 <__ref_alu_shr+0x34>
   2a64f:	90                   	nop
   2a650:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a654:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a658:	d2 e8                	shr    %cl,%al
   2a65a:	9c                   	pushf  
   2a65b:	5a                   	pop    %edx
   2a65c:	eb b6                	jmp    2a614 <__ref_alu_shr+0x34>
   2a65e:	8d 83 24 6e fe ff    	lea    -0x191dc(%ebx),%eax
   2a664:	50                   	push   %eax
   2a665:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a66b:	68 01 02 00 00       	push   $0x201
   2a670:	50                   	push   %eax
   2a671:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a677:	50                   	push   %eax
   2a678:	e8 93 9c fd ff       	call   4310 <__assert_fail@plt>
   2a67d:	8d 76 00             	lea    0x0(%esi),%esi

0002a680 <__ref_alu_sar>:
   2a680:	56                   	push   %esi
   2a681:	53                   	push   %ebx
   2a682:	e8 f9 9d fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a687:	81 c3 79 49 02 00    	add    $0x24979,%ebx
   2a68d:	83 ec 04             	sub    $0x4,%esp
   2a690:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a694:	e8 47 01 00 00       	call   2a7e0 <set_ref>
   2a699:	83 fe 08             	cmp    $0x8,%esi
   2a69c:	74 52                	je     2a6f0 <__ref_alu_sar+0x70>
   2a69e:	83 fe 10             	cmp    $0x10,%esi
   2a6a1:	74 3d                	je     2a6e0 <__ref_alu_sar+0x60>
   2a6a3:	83 fe 20             	cmp    $0x20,%esi
   2a6a6:	75 56                	jne    2a6fe <__ref_alu_sar+0x7e>
   2a6a8:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a6ac:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a6b0:	d3 f8                	sar    %cl,%eax
   2a6b2:	9c                   	pushf  
   2a6b3:	5a                   	pop    %edx
   2a6b4:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   2a6ba:	83 e2 c5             	and    $0xffffffc5,%edx
   2a6bd:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
   2a6c1:	83 e1 3a             	and    $0x3a,%ecx
   2a6c4:	09 ca                	or     %ecx,%edx
   2a6c6:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a6cb:	88 53 24             	mov    %dl,0x24(%ebx)
   2a6ce:	29 f1                	sub    %esi,%ecx
   2a6d0:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a6d5:	83 c4 04             	add    $0x4,%esp
   2a6d8:	d3 ea                	shr    %cl,%edx
   2a6da:	5b                   	pop    %ebx
   2a6db:	5e                   	pop    %esi
   2a6dc:	21 d0                	and    %edx,%eax
   2a6de:	c3                   	ret    
   2a6df:	90                   	nop
   2a6e0:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a6e4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a6e8:	66 d3 f8             	sar    %cl,%ax
   2a6eb:	9c                   	pushf  
   2a6ec:	5a                   	pop    %edx
   2a6ed:	eb c5                	jmp    2a6b4 <__ref_alu_sar+0x34>
   2a6ef:	90                   	nop
   2a6f0:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a6f4:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a6f8:	d2 f8                	sar    %cl,%al
   2a6fa:	9c                   	pushf  
   2a6fb:	5a                   	pop    %edx
   2a6fc:	eb b6                	jmp    2a6b4 <__ref_alu_sar+0x34>
   2a6fe:	8d 83 14 6e fe ff    	lea    -0x191ec(%ebx),%eax
   2a704:	50                   	push   %eax
   2a705:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a70b:	68 26 02 00 00       	push   $0x226
   2a710:	50                   	push   %eax
   2a711:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a717:	50                   	push   %eax
   2a718:	e8 f3 9b fd ff       	call   4310 <__assert_fail@plt>
   2a71d:	8d 76 00             	lea    0x0(%esi),%esi

0002a720 <__ref_alu_sal>:
   2a720:	56                   	push   %esi
   2a721:	53                   	push   %ebx
   2a722:	e8 59 9d fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a727:	81 c3 d9 48 02 00    	add    $0x248d9,%ebx
   2a72d:	83 ec 04             	sub    $0x4,%esp
   2a730:	8b 74 24 18          	mov    0x18(%esp),%esi
   2a734:	e8 a7 00 00 00       	call   2a7e0 <set_ref>
   2a739:	83 fe 08             	cmp    $0x8,%esi
   2a73c:	74 52                	je     2a790 <__ref_alu_sal+0x70>
   2a73e:	83 fe 10             	cmp    $0x10,%esi
   2a741:	74 3d                	je     2a780 <__ref_alu_sal+0x60>
   2a743:	83 fe 20             	cmp    $0x20,%esi
   2a746:	75 56                	jne    2a79e <__ref_alu_sal+0x7e>
   2a748:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a74c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a750:	d3 e0                	shl    %cl,%eax
   2a752:	9c                   	pushf  
   2a753:	5a                   	pop    %edx
   2a754:	8d 9b 60 32 05 00    	lea    0x53260(%ebx),%ebx
   2a75a:	83 e2 c5             	and    $0xffffffc5,%edx
   2a75d:	0f b6 4b 24          	movzbl 0x24(%ebx),%ecx
   2a761:	83 e1 3a             	and    $0x3a,%ecx
   2a764:	09 ca                	or     %ecx,%edx
   2a766:	b9 20 00 00 00       	mov    $0x20,%ecx
   2a76b:	88 53 24             	mov    %dl,0x24(%ebx)
   2a76e:	29 f1                	sub    %esi,%ecx
   2a770:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   2a775:	83 c4 04             	add    $0x4,%esp
   2a778:	d3 ea                	shr    %cl,%edx
   2a77a:	5b                   	pop    %ebx
   2a77b:	5e                   	pop    %esi
   2a77c:	21 d0                	and    %edx,%eax
   2a77e:	c3                   	ret    
   2a77f:	90                   	nop
   2a780:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a784:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a788:	66 d3 e0             	shl    %cl,%ax
   2a78b:	9c                   	pushf  
   2a78c:	5a                   	pop    %edx
   2a78d:	eb c5                	jmp    2a754 <__ref_alu_sal+0x34>
   2a78f:	90                   	nop
   2a790:	8b 44 24 14          	mov    0x14(%esp),%eax
   2a794:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   2a798:	d2 e0                	shl    %cl,%al
   2a79a:	9c                   	pushf  
   2a79b:	5a                   	pop    %edx
   2a79c:	eb b6                	jmp    2a754 <__ref_alu_sal+0x34>
   2a79e:	8d 83 04 6e fe ff    	lea    -0x191fc(%ebx),%eax
   2a7a4:	50                   	push   %eax
   2a7a5:	8d 83 ed 6d fe ff    	lea    -0x19213(%ebx),%eax
   2a7ab:	68 4b 02 00 00       	push   $0x24b
   2a7b0:	50                   	push   %eax
   2a7b1:	8d 83 87 59 fe ff    	lea    -0x1a679(%ebx),%eax
   2a7b7:	50                   	push   %eax
   2a7b8:	e8 53 9b fd ff       	call   4310 <__assert_fail@plt>
   2a7bd:	66 90                	xchg   %ax,%ax
   2a7bf:	90                   	nop

0002a7c0 <clear_ref>:
   2a7c0:	e8 12 bb fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2a7c5:	05 3b 48 02 00       	add    $0x2483b,%eax
   2a7ca:	83 b8 0c 25 05 00 01 	cmpl   $0x1,0x5250c(%eax)
   2a7d1:	74 0a                	je     2a7dd <clear_ref+0x1d>
   2a7d3:	c7 80 0c 25 05 00 00 	movl   $0x0,0x5250c(%eax)
   2a7da:	00 00 00 
   2a7dd:	c3                   	ret    
   2a7de:	66 90                	xchg   %ax,%ax

0002a7e0 <set_ref>:
   2a7e0:	e8 f2 ba fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2a7e5:	05 1b 48 02 00       	add    $0x2481b,%eax
   2a7ea:	c7 80 0c 25 05 00 01 	movl   $0x1,0x5250c(%eax)
   2a7f1:	00 00 00 
   2a7f4:	c3                   	ret    
   2a7f5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a7fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002a800 <get_ref>:
   2a800:	e8 d2 ba fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2a805:	05 fb 47 02 00       	add    $0x247fb,%eax
   2a80a:	8b 80 0c 25 05 00    	mov    0x5250c(%eax),%eax
   2a810:	c3                   	ret    
   2a811:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a818:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a81f:	90                   	nop

0002a820 <score_reg_alu_fpu>:
   2a820:	57                   	push   %edi
   2a821:	56                   	push   %esi
   2a822:	53                   	push   %ebx
   2a823:	e8 58 9c fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a828:	81 c3 d8 47 02 00    	add    $0x247d8,%ebx
   2a82e:	81 ec f8 03 00 00    	sub    $0x3f8,%esp
   2a834:	8d 83 d2 6e fe ff    	lea    -0x1912e(%ebx),%eax
   2a83a:	50                   	push   %eax
   2a83b:	8d 83 d5 6e fe ff    	lea    -0x1912b(%ebx),%eax
   2a841:	50                   	push   %eax
   2a842:	e8 d9 9a fd ff       	call   4320 <fopen@plt>
   2a847:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
   2a84b:	b9 f9 00 00 00       	mov    $0xf9,%ecx
   2a850:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   2a857:	00 
   2a858:	89 c6                	mov    %eax,%esi
   2a85a:	31 c0                	xor    %eax,%eax
   2a85c:	f3 ab                	rep stos %eax,%es:(%edi)
   2a85e:	59                   	pop    %ecx
   2a85f:	5f                   	pop    %edi
   2a860:	ff b4 24 08 04 00 00 	pushl  0x408(%esp)
   2a867:	8d 7c 24 14          	lea    0x14(%esp),%edi
   2a86b:	57                   	push   %edi
   2a86c:	e8 0f 9a fd ff       	call   4280 <stpcpy@plt>
   2a871:	8b 93 0c 25 05 00    	mov    0x5250c(%ebx),%edx
   2a877:	83 c4 10             	add    $0x10,%esp
   2a87a:	85 d2                	test   %edx,%edx
   2a87c:	75 32                	jne    2a8b0 <score_reg_alu_fpu+0x90>
   2a87e:	ba 53 00 00 00       	mov    $0x53,%edx
   2a883:	c7 00 20 50 41 53    	movl   $0x53415020,(%eax)
   2a889:	66 89 50 04          	mov    %dx,0x4(%eax)
   2a88d:	83 ec 08             	sub    $0x8,%esp
   2a890:	57                   	push   %edi
   2a891:	56                   	push   %esi
   2a892:	e8 39 98 fd ff       	call   40d0 <fprintf@plt>
   2a897:	89 34 24             	mov    %esi,(%esp)
   2a89a:	e8 41 9a fd ff       	call   42e0 <fclose@plt>
   2a89f:	81 c4 00 04 00 00    	add    $0x400,%esp
   2a8a5:	5b                   	pop    %ebx
   2a8a6:	5e                   	pop    %esi
   2a8a7:	5f                   	pop    %edi
   2a8a8:	c3                   	ret    
   2a8a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a8b0:	c7 00 20 52 45 46    	movl   $0x46455220,(%eax)
   2a8b6:	c7 40 04 5f 55 53 45 	movl   $0x4553555f,0x4(%eax)
   2a8bd:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   2a8c1:	eb ca                	jmp    2a88d <score_reg_alu_fpu+0x6d>
   2a8c3:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a8ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002a8d0 <score_expr>:
   2a8d0:	55                   	push   %ebp
   2a8d1:	31 c0                	xor    %eax,%eax
   2a8d3:	b9 18 00 00 00       	mov    $0x18,%ecx
   2a8d8:	57                   	push   %edi
   2a8d9:	56                   	push   %esi
   2a8da:	31 f6                	xor    %esi,%esi
   2a8dc:	53                   	push   %ebx
   2a8dd:	e8 9e 9b fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a8e2:	81 c3 1e 47 02 00    	add    $0x2471e,%ebx
   2a8e8:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
   2a8ee:	8d 54 24 1b          	lea    0x1b(%esp),%edx
   2a8f2:	8d 7c 24 20          	lea    0x20(%esp),%edi
   2a8f6:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   2a8fd:	00 
   2a8fe:	f3 ab                	rep stos %eax,%es:(%edi)
   2a900:	89 54 24 0c          	mov    %edx,0xc(%esp)
   2a904:	8d ab 0c fd ff ff    	lea    -0x2f4(%ebx),%ebp
   2a90a:	8d bb 18 6f fe ff    	lea    -0x190e8(%ebx),%edi
   2a910:	8d 45 14             	lea    0x14(%ebp),%eax
   2a913:	89 44 24 08          	mov    %eax,0x8(%esp)
   2a917:	8d 83 ee 6e fe ff    	lea    -0x19112(%ebx),%eax
   2a91d:	83 ec 08             	sub    $0x8,%esp
   2a920:	ff 74 24 14          	pushl  0x14(%esp)
   2a924:	50                   	push   %eax
   2a925:	e8 66 aa fd ff       	call   5390 <expr>
   2a92a:	83 c4 10             	add    $0x10,%esp
   2a92d:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
   2a932:	74 0a                	je     2a93e <score_expr+0x6e>
   2a934:	39 07                	cmp    %eax,(%edi)
   2a936:	0f 94 c0             	sete   %al
   2a939:	0f b6 c0             	movzbl %al,%eax
   2a93c:	01 c6                	add    %eax,%esi
   2a93e:	83 c5 04             	add    $0x4,%ebp
   2a941:	83 c7 04             	add    $0x4,%edi
   2a944:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
   2a948:	74 06                	je     2a950 <score_expr+0x80>
   2a94a:	8b 45 00             	mov    0x0(%ebp),%eax
   2a94d:	eb ce                	jmp    2a91d <score_expr+0x4d>
   2a94f:	90                   	nop
   2a950:	8d 83 f2 6e fe ff    	lea    -0x1910e(%ebx),%eax
   2a956:	6a 05                	push   $0x5
   2a958:	56                   	push   %esi
   2a959:	50                   	push   %eax
   2a95a:	8d 7c 24 28          	lea    0x28(%esp),%edi
   2a95e:	57                   	push   %edi
   2a95f:	e8 8c 97 fd ff       	call   40f0 <sprintf@plt>
   2a964:	58                   	pop    %eax
   2a965:	8d 83 d2 6e fe ff    	lea    -0x1912e(%ebx),%eax
   2a96b:	5a                   	pop    %edx
   2a96c:	50                   	push   %eax
   2a96d:	8d 83 d5 6e fe ff    	lea    -0x1912b(%ebx),%eax
   2a973:	50                   	push   %eax
   2a974:	e8 a7 99 fd ff       	call   4320 <fopen@plt>
   2a979:	59                   	pop    %ecx
   2a97a:	5d                   	pop    %ebp
   2a97b:	57                   	push   %edi
   2a97c:	50                   	push   %eax
   2a97d:	89 c6                	mov    %eax,%esi
   2a97f:	e8 4c 97 fd ff       	call   40d0 <fprintf@plt>
   2a984:	89 34 24             	mov    %esi,(%esp)
   2a987:	e8 54 99 fd ff       	call   42e0 <fclose@plt>
   2a98c:	81 c4 9c 00 00 00    	add    $0x9c,%esp
   2a992:	5b                   	pop    %ebx
   2a993:	5e                   	pop    %esi
   2a994:	5f                   	pop    %edi
   2a995:	5d                   	pop    %ebp
   2a996:	c3                   	ret    
   2a997:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a99e:	66 90                	xchg   %ax,%ax

0002a9a0 <score_trap>:
   2a9a0:	55                   	push   %ebp
   2a9a1:	89 e5                	mov    %esp,%ebp
   2a9a3:	57                   	push   %edi
   2a9a4:	56                   	push   %esi
   2a9a5:	8d bd 04 fc ff ff    	lea    -0x3fc(%ebp),%edi
   2a9ab:	53                   	push   %ebx
   2a9ac:	e8 cf 9a fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2a9b1:	81 c3 4f 46 02 00    	add    $0x2464f,%ebx
   2a9b7:	81 ec 24 04 00 00    	sub    $0x424,%esp
   2a9bd:	8d 83 d2 6e fe ff    	lea    -0x1912e(%ebx),%eax
   2a9c3:	50                   	push   %eax
   2a9c4:	8d 83 d5 6e fe ff    	lea    -0x1912b(%ebx),%eax
   2a9ca:	50                   	push   %eax
   2a9cb:	e8 50 99 fd ff       	call   4320 <fopen@plt>
   2a9d0:	b9 f9 00 00 00       	mov    $0xf9,%ecx
   2a9d5:	83 c4 10             	add    $0x10,%esp
   2a9d8:	c7 85 00 fc ff ff 00 	movl   $0x0,-0x400(%ebp)
   2a9df:	00 00 00 
   2a9e2:	c7 85 ec fb ff ff 00 	movl   $0x0,-0x414(%ebp)
   2a9e9:	00 00 00 
   2a9ec:	89 c6                	mov    %eax,%esi
   2a9ee:	31 c0                	xor    %eax,%eax
   2a9f0:	f3 ab                	rep stos %eax,%es:(%edi)
   2a9f2:	8d 83 60 32 05 00    	lea    0x53260(%ebx),%eax
   2a9f8:	c7 85 f0 fb ff ff 00 	movl   $0x0,-0x410(%ebp)
   2a9ff:	00 00 00 
   2aa02:	c7 85 f4 fb ff ff 00 	movl   $0x0,-0x40c(%ebp)
   2aa09:	00 00 00 
   2aa0c:	c7 85 f8 fb ff ff 00 	movl   $0x0,-0x408(%ebp)
   2aa13:	00 00 00 
   2aa16:	8b 10                	mov    (%eax),%edx
   2aa18:	c7 85 fc fb ff ff 00 	movl   $0x0,-0x404(%ebp)
   2aa1f:	00 00 00 
   2aa22:	85 d2                	test   %edx,%edx
   2aa24:	0f 85 ee 00 00 00    	jne    2ab18 <score_trap+0x178>
   2aa2a:	8b 93 0c 25 05 00    	mov    0x5250c(%ebx),%edx
   2aa30:	85 d2                	test   %edx,%edx
   2aa32:	0f 84 b0 00 00 00    	je     2aae8 <score_trap+0x148>
   2aa38:	c7 85 00 fc ff ff 52 	movl   $0x5f464552,-0x400(%ebp)
   2aa3f:	45 46 5f 
   2aa42:	c7 85 04 fc ff ff 55 	movl   $0x20455355,-0x3fc(%ebp)
   2aa49:	53 45 20 
   2aa4c:	c6 85 08 fc ff ff 00 	movb   $0x0,-0x3f8(%ebp)
   2aa53:	83 ec 04             	sub    $0x4,%esp
   2aa56:	ff 70 20             	pushl  0x20(%eax)
   2aa59:	8d 83 2b 66 fe ff    	lea    -0x199d5(%ebx),%eax
   2aa5f:	8d bd 00 fc ff ff    	lea    -0x400(%ebp),%edi
   2aa65:	50                   	push   %eax
   2aa66:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
   2aa6c:	50                   	push   %eax
   2aa6d:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%ebp)
   2aa73:	e8 78 96 fd ff       	call   40f0 <sprintf@plt>
   2aa78:	89 fa                	mov    %edi,%edx
   2aa7a:	8b 0a                	mov    (%edx),%ecx
   2aa7c:	83 c2 04             	add    $0x4,%edx
   2aa7f:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2aa85:	f7 d1                	not    %ecx
   2aa87:	21 c8                	and    %ecx,%eax
   2aa89:	25 80 80 80 80       	and    $0x80808080,%eax
   2aa8e:	74 ea                	je     2aa7a <score_trap+0xda>
   2aa90:	89 c1                	mov    %eax,%ecx
   2aa92:	c1 e9 10             	shr    $0x10,%ecx
   2aa95:	a9 80 80 00 00       	test   $0x8080,%eax
   2aa9a:	0f 44 c1             	cmove  %ecx,%eax
   2aa9d:	8d 4a 02             	lea    0x2(%edx),%ecx
   2aaa0:	0f 44 d1             	cmove  %ecx,%edx
   2aaa3:	89 c1                	mov    %eax,%ecx
   2aaa5:	00 c1                	add    %al,%cl
   2aaa7:	58                   	pop    %eax
   2aaa8:	59                   	pop    %ecx
   2aaa9:	ff b5 e4 fb ff ff    	pushl  -0x41c(%ebp)
   2aaaf:	83 da 03             	sbb    $0x3,%edx
   2aab2:	52                   	push   %edx
   2aab3:	e8 c8 97 fd ff       	call   4280 <stpcpy@plt>
   2aab8:	5a                   	pop    %edx
   2aab9:	8d 93 40 1e 00 00    	lea    0x1e40(%ebx),%edx
   2aabf:	59                   	pop    %ecx
   2aac0:	52                   	push   %edx
   2aac1:	50                   	push   %eax
   2aac2:	e8 39 98 fd ff       	call   4300 <strcpy@plt>
   2aac7:	58                   	pop    %eax
   2aac8:	5a                   	pop    %edx
   2aac9:	57                   	push   %edi
   2aaca:	56                   	push   %esi
   2aacb:	e8 00 96 fd ff       	call   40d0 <fprintf@plt>
   2aad0:	89 34 24             	mov    %esi,(%esp)
   2aad3:	e8 08 98 fd ff       	call   42e0 <fclose@plt>
   2aad8:	83 c4 10             	add    $0x10,%esp
   2aadb:	8d 65 f4             	lea    -0xc(%ebp),%esp
   2aade:	5b                   	pop    %ebx
   2aadf:	5e                   	pop    %esi
   2aae0:	5f                   	pop    %edi
   2aae1:	5d                   	pop    %ebp
   2aae2:	c3                   	ret    
   2aae3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2aae7:	90                   	nop
   2aae8:	bf 50 20 00 00       	mov    $0x2050,%edi
   2aaed:	c6 85 0a fc ff ff 00 	movb   $0x0,-0x3f6(%ebp)
   2aaf4:	c7 85 00 fc ff ff 47 	movl   $0x444f4f47,-0x400(%ebp)
   2aafb:	4f 4f 44 
   2aafe:	c7 85 04 fc ff ff 5f 	movl   $0x4152545f,-0x3fc(%ebp)
   2ab05:	54 52 41 
   2ab08:	66 89 bd 08 fc ff ff 	mov    %di,-0x3f8(%ebp)
   2ab0f:	e9 3f ff ff ff       	jmp    2aa53 <score_trap+0xb3>
   2ab14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ab18:	83 fa 6e             	cmp    $0x6e,%edx
   2ab1b:	74 2b                	je     2ab48 <score_trap+0x1a8>
   2ab1d:	c7 85 00 fc ff ff 42 	movl   $0x5f444142,-0x400(%ebp)
   2ab24:	41 44 5f 
   2ab27:	b9 20 00 00 00       	mov    $0x20,%ecx
   2ab2c:	c7 85 04 fc ff ff 54 	movl   $0x50415254,-0x3fc(%ebp)
   2ab33:	52 41 50 
   2ab36:	66 89 8d 08 fc ff ff 	mov    %cx,-0x3f8(%ebp)
   2ab3d:	e9 11 ff ff ff       	jmp    2aa53 <score_trap+0xb3>
   2ab42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2ab48:	c7 85 00 fc ff ff 43 	movl   $0x43454843,-0x400(%ebp)
   2ab4f:	48 45 43 
   2ab52:	c7 85 04 fc ff ff 4b 	movl   $0x4f505f4b,-0x3fc(%ebp)
   2ab59:	5f 50 4f 
   2ab5c:	c7 85 08 fc ff ff 49 	movl   $0x20544e49,-0x3f8(%ebp)
   2ab63:	4e 54 20 
   2ab66:	c6 85 0c fc ff ff 00 	movb   $0x0,-0x3f4(%ebp)
   2ab6d:	e9 e1 fe ff ff       	jmp    2aa53 <score_trap+0xb3>
   2ab72:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2ab79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002ab80 <score_set_ia32_seg>:
   2ab80:	e8 52 b7 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2ab85:	05 7b 44 02 00       	add    $0x2447b,%eax
   2ab8a:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2ab90:	85 d2                	test   %edx,%edx
   2ab92:	74 04                	je     2ab98 <score_set_ia32_seg+0x18>
   2ab94:	c3                   	ret    
   2ab95:	8d 76 00             	lea    0x0(%esi),%esi
   2ab98:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2ab9e:	8b 0a                	mov    (%edx),%ecx
   2aba0:	83 c2 04             	add    $0x4,%edx
   2aba3:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2aba9:	f7 d1                	not    %ecx
   2abab:	21 c8                	and    %ecx,%eax
   2abad:	25 80 80 80 80       	and    $0x80808080,%eax
   2abb2:	74 ea                	je     2ab9e <score_set_ia32_seg+0x1e>
   2abb4:	89 c1                	mov    %eax,%ecx
   2abb6:	c1 e9 10             	shr    $0x10,%ecx
   2abb9:	a9 80 80 00 00       	test   $0x8080,%eax
   2abbe:	0f 44 c1             	cmove  %ecx,%eax
   2abc1:	8d 4a 02             	lea    0x2(%edx),%ecx
   2abc4:	0f 44 d1             	cmove  %ecx,%edx
   2abc7:	89 c1                	mov    %eax,%ecx
   2abc9:	00 c1                	add    %al,%cl
   2abcb:	b8 47 00 00 00       	mov    $0x47,%eax
   2abd0:	83 da 03             	sbb    $0x3,%edx
   2abd3:	c7 02 20 49 41 33    	movl   $0x33414920,(%edx)
   2abd9:	c7 42 04 32 5f 53 45 	movl   $0x45535f32,0x4(%edx)
   2abe0:	66 89 42 08          	mov    %ax,0x8(%edx)
   2abe4:	c3                   	ret    
   2abe5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2abec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002abf0 <score_set_ia32_page>:
   2abf0:	e8 e2 b6 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2abf5:	05 0b 44 02 00       	add    $0x2440b,%eax
   2abfa:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2ac00:	85 d2                	test   %edx,%edx
   2ac02:	74 04                	je     2ac08 <score_set_ia32_page+0x18>
   2ac04:	c3                   	ret    
   2ac05:	8d 76 00             	lea    0x0(%esi),%esi
   2ac08:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2ac0e:	8b 0a                	mov    (%edx),%ecx
   2ac10:	83 c2 04             	add    $0x4,%edx
   2ac13:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2ac19:	f7 d1                	not    %ecx
   2ac1b:	21 c8                	and    %ecx,%eax
   2ac1d:	25 80 80 80 80       	and    $0x80808080,%eax
   2ac22:	74 ea                	je     2ac0e <score_set_ia32_page+0x1e>
   2ac24:	89 c1                	mov    %eax,%ecx
   2ac26:	c1 e9 10             	shr    $0x10,%ecx
   2ac29:	a9 80 80 00 00       	test   $0x8080,%eax
   2ac2e:	0f 44 c1             	cmove  %ecx,%eax
   2ac31:	8d 4a 02             	lea    0x2(%edx),%ecx
   2ac34:	0f 44 d1             	cmove  %ecx,%edx
   2ac37:	89 c1                	mov    %eax,%ecx
   2ac39:	00 c1                	add    %al,%cl
   2ac3b:	b8 47 45 00 00       	mov    $0x4547,%eax
   2ac40:	83 da 03             	sbb    $0x3,%edx
   2ac43:	c7 02 20 49 41 33    	movl   $0x33414920,(%edx)
   2ac49:	c7 42 04 32 5f 50 41 	movl   $0x41505f32,0x4(%edx)
   2ac50:	66 89 42 08          	mov    %ax,0x8(%edx)
   2ac54:	c6 42 0a 00          	movb   $0x0,0xa(%edx)
   2ac58:	c3                   	ret    
   2ac59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002ac60 <score_set_tlb_enabled>:
   2ac60:	e8 72 b6 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2ac65:	05 9b 43 02 00       	add    $0x2439b,%eax
   2ac6a:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2ac70:	85 d2                	test   %edx,%edx
   2ac72:	74 04                	je     2ac78 <score_set_tlb_enabled+0x18>
   2ac74:	c3                   	ret    
   2ac75:	8d 76 00             	lea    0x0(%esi),%esi
   2ac78:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2ac7e:	8b 0a                	mov    (%edx),%ecx
   2ac80:	83 c2 04             	add    $0x4,%edx
   2ac83:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2ac89:	f7 d1                	not    %ecx
   2ac8b:	21 c8                	and    %ecx,%eax
   2ac8d:	25 80 80 80 80       	and    $0x80808080,%eax
   2ac92:	74 ea                	je     2ac7e <score_set_tlb_enabled+0x1e>
   2ac94:	89 c1                	mov    %eax,%ecx
   2ac96:	c1 e9 10             	shr    $0x10,%ecx
   2ac99:	a9 80 80 00 00       	test   $0x8080,%eax
   2ac9e:	0f 44 c1             	cmove  %ecx,%eax
   2aca1:	8d 4a 02             	lea    0x2(%edx),%ecx
   2aca4:	0f 44 d1             	cmove  %ecx,%edx
   2aca7:	89 c1                	mov    %eax,%ecx
   2aca9:	00 c1                	add    %al,%cl
   2acab:	83 da 03             	sbb    $0x3,%edx
   2acae:	c7 02 20 54 4c 42    	movl   $0x424c5420,(%edx)
   2acb4:	c7 42 04 5f 45 4e 41 	movl   $0x414e455f,0x4(%edx)
   2acbb:	c7 42 08 42 4c 45 44 	movl   $0x44454c42,0x8(%edx)
   2acc2:	c6 42 0c 00          	movb   $0x0,0xc(%edx)
   2acc6:	c3                   	ret    
   2acc7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2acce:	66 90                	xchg   %ax,%ax

0002acd0 <score_set_cache_enabled>:
   2acd0:	e8 02 b6 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2acd5:	05 2b 43 02 00       	add    $0x2432b,%eax
   2acda:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2ace0:	85 d2                	test   %edx,%edx
   2ace2:	74 04                	je     2ace8 <score_set_cache_enabled+0x18>
   2ace4:	c3                   	ret    
   2ace5:	8d 76 00             	lea    0x0(%esi),%esi
   2ace8:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2acee:	8b 0a                	mov    (%edx),%ecx
   2acf0:	83 c2 04             	add    $0x4,%edx
   2acf3:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2acf9:	f7 d1                	not    %ecx
   2acfb:	21 c8                	and    %ecx,%eax
   2acfd:	25 80 80 80 80       	and    $0x80808080,%eax
   2ad02:	74 ea                	je     2acee <score_set_cache_enabled+0x1e>
   2ad04:	89 c1                	mov    %eax,%ecx
   2ad06:	c1 e9 10             	shr    $0x10,%ecx
   2ad09:	a9 80 80 00 00       	test   $0x8080,%eax
   2ad0e:	0f 44 c1             	cmove  %ecx,%eax
   2ad11:	8d 4a 02             	lea    0x2(%edx),%ecx
   2ad14:	0f 44 d1             	cmove  %ecx,%edx
   2ad17:	89 c1                	mov    %eax,%ecx
   2ad19:	00 c1                	add    %al,%cl
   2ad1b:	b8 45 44 00 00       	mov    $0x4445,%eax
   2ad20:	83 da 03             	sbb    $0x3,%edx
   2ad23:	c7 02 20 43 41 43    	movl   $0x43414320,(%edx)
   2ad29:	c7 42 04 48 45 5f 45 	movl   $0x455f4548,0x4(%edx)
   2ad30:	c7 42 08 4e 41 42 4c 	movl   $0x4c42414e,0x8(%edx)
   2ad37:	66 89 42 0c          	mov    %ax,0xc(%edx)
   2ad3b:	c6 42 0e 00          	movb   $0x0,0xe(%edx)
   2ad3f:	c3                   	ret    

0002ad40 <score_set_ia32_intr>:
   2ad40:	e8 92 b5 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2ad45:	05 bb 42 02 00       	add    $0x242bb,%eax
   2ad4a:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2ad50:	85 d2                	test   %edx,%edx
   2ad52:	74 04                	je     2ad58 <score_set_ia32_intr+0x18>
   2ad54:	c3                   	ret    
   2ad55:	8d 76 00             	lea    0x0(%esi),%esi
   2ad58:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2ad5e:	8b 0a                	mov    (%edx),%ecx
   2ad60:	83 c2 04             	add    $0x4,%edx
   2ad63:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2ad69:	f7 d1                	not    %ecx
   2ad6b:	21 c8                	and    %ecx,%eax
   2ad6d:	25 80 80 80 80       	and    $0x80808080,%eax
   2ad72:	74 ea                	je     2ad5e <score_set_ia32_intr+0x1e>
   2ad74:	89 c1                	mov    %eax,%ecx
   2ad76:	c1 e9 10             	shr    $0x10,%ecx
   2ad79:	a9 80 80 00 00       	test   $0x8080,%eax
   2ad7e:	0f 44 c1             	cmove  %ecx,%eax
   2ad81:	8d 4a 02             	lea    0x2(%edx),%ecx
   2ad84:	0f 44 d1             	cmove  %ecx,%edx
   2ad87:	89 c1                	mov    %eax,%ecx
   2ad89:	00 c1                	add    %al,%cl
   2ad8b:	b8 54 52 00 00       	mov    $0x5254,%eax
   2ad90:	83 da 03             	sbb    $0x3,%edx
   2ad93:	c7 02 20 49 41 33    	movl   $0x33414920,(%edx)
   2ad99:	c7 42 04 32 5f 49 4e 	movl   $0x4e495f32,0x4(%edx)
   2ada0:	66 89 42 08          	mov    %ax,0x8(%edx)
   2ada4:	c6 42 0a 00          	movb   $0x0,0xa(%edx)
   2ada8:	c3                   	ret    
   2ada9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002adb0 <score_set_has_device_timer>:
   2adb0:	e8 22 b5 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2adb5:	05 4b 42 02 00       	add    $0x2424b,%eax
   2adba:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2adc0:	85 d2                	test   %edx,%edx
   2adc2:	74 04                	je     2adc8 <score_set_has_device_timer+0x18>
   2adc4:	c3                   	ret    
   2adc5:	8d 76 00             	lea    0x0(%esi),%esi
   2adc8:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2adce:	8b 0a                	mov    (%edx),%ecx
   2add0:	83 c2 04             	add    $0x4,%edx
   2add3:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2add9:	f7 d1                	not    %ecx
   2addb:	21 c8                	and    %ecx,%eax
   2addd:	25 80 80 80 80       	and    $0x80808080,%eax
   2ade2:	74 ea                	je     2adce <score_set_has_device_timer+0x1e>
   2ade4:	89 c1                	mov    %eax,%ecx
   2ade6:	c1 e9 10             	shr    $0x10,%ecx
   2ade9:	a9 80 80 00 00       	test   $0x8080,%eax
   2adee:	0f 44 c1             	cmove  %ecx,%eax
   2adf1:	8d 4a 02             	lea    0x2(%edx),%ecx
   2adf4:	0f 44 d1             	cmove  %ecx,%edx
   2adf7:	89 c1                	mov    %eax,%ecx
   2adf9:	00 c1                	add    %al,%cl
   2adfb:	b8 52 00 00 00       	mov    $0x52,%eax
   2ae00:	83 da 03             	sbb    $0x3,%edx
   2ae03:	c7 02 20 48 41 53    	movl   $0x53414820,(%edx)
   2ae09:	c7 42 04 5f 44 45 56 	movl   $0x5645445f,0x4(%edx)
   2ae10:	c7 42 08 49 43 45 5f 	movl   $0x5f454349,0x8(%edx)
   2ae17:	c7 42 0c 54 49 4d 45 	movl   $0x454d4954,0xc(%edx)
   2ae1e:	66 89 42 10          	mov    %ax,0x10(%edx)
   2ae22:	c3                   	ret    
   2ae23:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2ae2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002ae30 <score_set_has_device_serial>:
   2ae30:	e8 a2 b4 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2ae35:	05 cb 41 02 00       	add    $0x241cb,%eax
   2ae3a:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2ae40:	85 d2                	test   %edx,%edx
   2ae42:	74 04                	je     2ae48 <score_set_has_device_serial+0x18>
   2ae44:	c3                   	ret    
   2ae45:	8d 76 00             	lea    0x0(%esi),%esi
   2ae48:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2ae4e:	8b 0a                	mov    (%edx),%ecx
   2ae50:	83 c2 04             	add    $0x4,%edx
   2ae53:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2ae59:	f7 d1                	not    %ecx
   2ae5b:	21 c8                	and    %ecx,%eax
   2ae5d:	25 80 80 80 80       	and    $0x80808080,%eax
   2ae62:	74 ea                	je     2ae4e <score_set_has_device_serial+0x1e>
   2ae64:	89 c1                	mov    %eax,%ecx
   2ae66:	c1 e9 10             	shr    $0x10,%ecx
   2ae69:	a9 80 80 00 00       	test   $0x8080,%eax
   2ae6e:	0f 44 c1             	cmove  %ecx,%eax
   2ae71:	8d 4a 02             	lea    0x2(%edx),%ecx
   2ae74:	0f 44 d1             	cmove  %ecx,%edx
   2ae77:	89 c1                	mov    %eax,%ecx
   2ae79:	00 c1                	add    %al,%cl
   2ae7b:	b8 41 4c 00 00       	mov    $0x4c41,%eax
   2ae80:	83 da 03             	sbb    $0x3,%edx
   2ae83:	c7 02 20 48 41 53    	movl   $0x53414820,(%edx)
   2ae89:	c7 42 04 5f 44 45 56 	movl   $0x5645445f,0x4(%edx)
   2ae90:	c7 42 08 49 43 45 5f 	movl   $0x5f454349,0x8(%edx)
   2ae97:	c7 42 0c 53 45 52 49 	movl   $0x49524553,0xc(%edx)
   2ae9e:	66 89 42 10          	mov    %ax,0x10(%edx)
   2aea2:	c6 42 12 00          	movb   $0x0,0x12(%edx)
   2aea6:	c3                   	ret    
   2aea7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2aeae:	66 90                	xchg   %ax,%ax

0002aeb0 <score_set_has_device_ide>:
   2aeb0:	e8 22 b4 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2aeb5:	05 4b 41 02 00       	add    $0x2414b,%eax
   2aeba:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2aec0:	85 d2                	test   %edx,%edx
   2aec2:	74 04                	je     2aec8 <score_set_has_device_ide+0x18>
   2aec4:	c3                   	ret    
   2aec5:	8d 76 00             	lea    0x0(%esi),%esi
   2aec8:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2aece:	8b 0a                	mov    (%edx),%ecx
   2aed0:	83 c2 04             	add    $0x4,%edx
   2aed3:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2aed9:	f7 d1                	not    %ecx
   2aedb:	21 c8                	and    %ecx,%eax
   2aedd:	25 80 80 80 80       	and    $0x80808080,%eax
   2aee2:	74 ea                	je     2aece <score_set_has_device_ide+0x1e>
   2aee4:	89 c1                	mov    %eax,%ecx
   2aee6:	c1 e9 10             	shr    $0x10,%ecx
   2aee9:	a9 80 80 00 00       	test   $0x8080,%eax
   2aeee:	0f 44 c1             	cmove  %ecx,%eax
   2aef1:	8d 4a 02             	lea    0x2(%edx),%ecx
   2aef4:	0f 44 d1             	cmove  %ecx,%edx
   2aef7:	89 c1                	mov    %eax,%ecx
   2aef9:	00 c1                	add    %al,%cl
   2aefb:	83 da 03             	sbb    $0x3,%edx
   2aefe:	c7 02 20 48 41 53    	movl   $0x53414820,(%edx)
   2af04:	c7 42 04 5f 44 45 56 	movl   $0x5645445f,0x4(%edx)
   2af0b:	c7 42 08 49 43 45 5f 	movl   $0x5f454349,0x8(%edx)
   2af12:	c7 42 0c 49 44 45 00 	movl   $0x454449,0xc(%edx)
   2af19:	c3                   	ret    
   2af1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002af20 <score_set_has_device_keyboard>:
   2af20:	e8 b2 b3 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2af25:	05 db 40 02 00       	add    $0x240db,%eax
   2af2a:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2af30:	85 d2                	test   %edx,%edx
   2af32:	74 04                	je     2af38 <score_set_has_device_keyboard+0x18>
   2af34:	c3                   	ret    
   2af35:	8d 76 00             	lea    0x0(%esi),%esi
   2af38:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2af3e:	8b 0a                	mov    (%edx),%ecx
   2af40:	83 c2 04             	add    $0x4,%edx
   2af43:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2af49:	f7 d1                	not    %ecx
   2af4b:	21 c8                	and    %ecx,%eax
   2af4d:	25 80 80 80 80       	and    $0x80808080,%eax
   2af52:	74 ea                	je     2af3e <score_set_has_device_keyboard+0x1e>
   2af54:	89 c1                	mov    %eax,%ecx
   2af56:	c1 e9 10             	shr    $0x10,%ecx
   2af59:	a9 80 80 00 00       	test   $0x8080,%eax
   2af5e:	0f 44 c1             	cmove  %ecx,%eax
   2af61:	8d 4a 02             	lea    0x2(%edx),%ecx
   2af64:	0f 44 d1             	cmove  %ecx,%edx
   2af67:	89 c1                	mov    %eax,%ecx
   2af69:	00 c1                	add    %al,%cl
   2af6b:	83 da 03             	sbb    $0x3,%edx
   2af6e:	c7 02 20 48 41 53    	movl   $0x53414820,(%edx)
   2af74:	c7 42 04 5f 44 45 56 	movl   $0x5645445f,0x4(%edx)
   2af7b:	c7 42 08 49 43 45 5f 	movl   $0x5f454349,0x8(%edx)
   2af82:	c7 42 0c 4b 45 59 42 	movl   $0x4259454b,0xc(%edx)
   2af89:	c7 42 10 4f 41 52 44 	movl   $0x4452414f,0x10(%edx)
   2af90:	c6 42 14 00          	movb   $0x0,0x14(%edx)
   2af94:	c3                   	ret    
   2af95:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2af9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002afa0 <score_set_has_device_vga>:
   2afa0:	e8 32 b3 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2afa5:	05 5b 40 02 00       	add    $0x2405b,%eax
   2afaa:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2afb0:	85 d2                	test   %edx,%edx
   2afb2:	74 04                	je     2afb8 <score_set_has_device_vga+0x18>
   2afb4:	c3                   	ret    
   2afb5:	8d 76 00             	lea    0x0(%esi),%esi
   2afb8:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2afbe:	8b 0a                	mov    (%edx),%ecx
   2afc0:	83 c2 04             	add    $0x4,%edx
   2afc3:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2afc9:	f7 d1                	not    %ecx
   2afcb:	21 c8                	and    %ecx,%eax
   2afcd:	25 80 80 80 80       	and    $0x80808080,%eax
   2afd2:	74 ea                	je     2afbe <score_set_has_device_vga+0x1e>
   2afd4:	89 c1                	mov    %eax,%ecx
   2afd6:	c1 e9 10             	shr    $0x10,%ecx
   2afd9:	a9 80 80 00 00       	test   $0x8080,%eax
   2afde:	0f 44 c1             	cmove  %ecx,%eax
   2afe1:	8d 4a 02             	lea    0x2(%edx),%ecx
   2afe4:	0f 44 d1             	cmove  %ecx,%edx
   2afe7:	89 c1                	mov    %eax,%ecx
   2afe9:	00 c1                	add    %al,%cl
   2afeb:	83 da 03             	sbb    $0x3,%edx
   2afee:	c7 02 20 48 41 53    	movl   $0x53414820,(%edx)
   2aff4:	c7 42 04 5f 44 45 56 	movl   $0x5645445f,0x4(%edx)
   2affb:	c7 42 08 49 43 45 5f 	movl   $0x5f454349,0x8(%edx)
   2b002:	c7 42 0c 56 47 41 00 	movl   $0x414756,0xc(%edx)
   2b009:	c3                   	ret    
   2b00a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002b010 <score_set_has_device_audio>:
   2b010:	e8 c2 b2 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2b015:	05 eb 3f 02 00       	add    $0x23feb,%eax
   2b01a:	8b 90 08 25 05 00    	mov    0x52508(%eax),%edx
   2b020:	85 d2                	test   %edx,%edx
   2b022:	74 04                	je     2b028 <score_set_has_device_audio+0x18>
   2b024:	c3                   	ret    
   2b025:	8d 76 00             	lea    0x0(%esi),%esi
   2b028:	8d 90 40 1e 00 00    	lea    0x1e40(%eax),%edx
   2b02e:	8b 0a                	mov    (%edx),%ecx
   2b030:	83 c2 04             	add    $0x4,%edx
   2b033:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
   2b039:	f7 d1                	not    %ecx
   2b03b:	21 c8                	and    %ecx,%eax
   2b03d:	25 80 80 80 80       	and    $0x80808080,%eax
   2b042:	74 ea                	je     2b02e <score_set_has_device_audio+0x1e>
   2b044:	89 c1                	mov    %eax,%ecx
   2b046:	c1 e9 10             	shr    $0x10,%ecx
   2b049:	a9 80 80 00 00       	test   $0x8080,%eax
   2b04e:	0f 44 c1             	cmove  %ecx,%eax
   2b051:	8d 4a 02             	lea    0x2(%edx),%ecx
   2b054:	0f 44 d1             	cmove  %ecx,%edx
   2b057:	89 c1                	mov    %eax,%ecx
   2b059:	00 c1                	add    %al,%cl
   2b05b:	b8 4f 00 00 00       	mov    $0x4f,%eax
   2b060:	83 da 03             	sbb    $0x3,%edx
   2b063:	c7 02 20 48 41 53    	movl   $0x53414820,(%edx)
   2b069:	c7 42 04 5f 44 45 56 	movl   $0x5645445f,0x4(%edx)
   2b070:	c7 42 08 49 43 45 5f 	movl   $0x5f454349,0x8(%edx)
   2b077:	c7 42 0c 41 55 44 49 	movl   $0x49445541,0xc(%edx)
   2b07e:	66 89 42 10          	mov    %ax,0x10(%edx)
   2b082:	c3                   	ret    
   2b083:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2b08a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002b090 <score_fix_config>:
   2b090:	e8 42 b2 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2b095:	05 6b 3f 02 00       	add    $0x23f6b,%eax
   2b09a:	c7 80 08 25 05 00 01 	movl   $0x1,0x52508(%eax)
   2b0a1:	00 00 00 
   2b0a4:	c3                   	ret    
   2b0a5:	66 90                	xchg   %ax,%ax
   2b0a7:	66 90                	xchg   %ax,%ax
   2b0a9:	66 90                	xchg   %ax,%ax
   2b0ab:	66 90                	xchg   %ax,%ax
   2b0ad:	66 90                	xchg   %ax,%ax
   2b0af:	90                   	nop

0002b0b0 <__score_reg_test>:
   2b0b0:	55                   	push   %ebp
   2b0b1:	31 ed                	xor    %ebp,%ebp
   2b0b3:	57                   	push   %edi
   2b0b4:	56                   	push   %esi
   2b0b5:	53                   	push   %ebx
   2b0b6:	e8 c5 93 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   2b0bb:	81 c3 45 3f 02 00    	add    $0x23f45,%ebx
   2b0c1:	83 ec 78             	sub    $0x78,%esp
   2b0c4:	6a 00                	push   $0x0
   2b0c6:	e8 65 90 fd ff       	call   4130 <time@plt>
   2b0cb:	89 04 24             	mov    %eax,(%esp)
   2b0ce:	e8 bd 90 fd ff       	call   4190 <srand@plt>
   2b0d3:	e8 18 91 fd ff       	call   41f0 <rand@plt>
   2b0d8:	8d 8b 60 32 05 00    	lea    0x53260(%ebx),%ecx
   2b0de:	c7 44 24 4c 01 00 00 	movl   $0x1,0x4c(%esp)
   2b0e5:	00 
   2b0e6:	89 44 24 18          	mov    %eax,0x18(%esp)
   2b0ea:	89 4c 24 10          	mov    %ecx,0x10(%esp)
   2b0ee:	83 c4 10             	add    $0x10,%esp
   2b0f1:	89 41 20             	mov    %eax,0x20(%ecx)
   2b0f4:	8d 44 24 1c          	lea    0x1c(%esp),%eax
   2b0f8:	8d 74 24 3c          	lea    0x3c(%esp),%esi
   2b0fc:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b100:	e8 eb 90 fd ff       	call   41f0 <rand@plt>
   2b105:	c7 44 24 4c 20 00 00 	movl   $0x20,0x4c(%esp)
   2b10c:	00 
   2b10d:	83 ec 0c             	sub    $0xc,%esp
   2b110:	89 c7                	mov    %eax,%edi
   2b112:	8b 44 24 10          	mov    0x10(%esp),%eax
   2b116:	89 6c 24 4c          	mov    %ebp,0x4c(%esp)
   2b11a:	89 7c 24 54          	mov    %edi,0x54(%esp)
   2b11e:	89 3c a8             	mov    %edi,(%eax,%ebp,4)
   2b121:	0f b7 ff             	movzwl %di,%edi
   2b124:	56                   	push   %esi
   2b125:	e8 66 74 fe ff       	call   12590 <operand_write>
   2b12a:	c7 44 24 5c 10 00 00 	movl   $0x10,0x5c(%esp)
   2b131:	00 
   2b132:	89 34 24             	mov    %esi,(%esp)
   2b135:	e8 a6 72 fe ff       	call   123e0 <operand_read>
   2b13a:	83 c4 10             	add    $0x10,%esp
   2b13d:	39 7c 24 48          	cmp    %edi,0x48(%esp)
   2b141:	0f 85 e0 01 00 00    	jne    2b327 <__score_reg_test+0x277>
   2b147:	83 c5 01             	add    $0x1,%ebp
   2b14a:	83 fd 08             	cmp    $0x8,%ebp
   2b14d:	75 b1                	jne    2b100 <__score_reg_test+0x50>
   2b14f:	c7 44 24 4c 08 00 00 	movl   $0x8,0x4c(%esp)
   2b156:	00 
   2b157:	83 ec 0c             	sub    $0xc,%esp
   2b15a:	c7 44 24 4c 00 00 00 	movl   $0x0,0x4c(%esp)
   2b161:	00 
   2b162:	56                   	push   %esi
   2b163:	e8 78 72 fe ff       	call   123e0 <operand_read>
   2b168:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
   2b16c:	83 c4 10             	add    $0x10,%esp
   2b16f:	89 e8                	mov    %ebp,%eax
   2b171:	0f b6 c0             	movzbl %al,%eax
   2b174:	39 44 24 48          	cmp    %eax,0x48(%esp)
   2b178:	0f 85 85 03 00 00    	jne    2b503 <__score_reg_test+0x453>
   2b17e:	c7 44 24 40 04 00 00 	movl   $0x4,0x40(%esp)
   2b185:	00 
   2b186:	83 ec 0c             	sub    $0xc,%esp
   2b189:	56                   	push   %esi
   2b18a:	e8 51 72 fe ff       	call   123e0 <operand_read>
   2b18f:	89 e8                	mov    %ebp,%eax
   2b191:	83 c4 10             	add    $0x10,%esp
   2b194:	0f b6 c4             	movzbl %ah,%eax
   2b197:	39 44 24 48          	cmp    %eax,0x48(%esp)
   2b19b:	0f 85 46 03 00 00    	jne    2b4e7 <__score_reg_test+0x437>
   2b1a1:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%esp)
   2b1a8:	00 
   2b1a9:	83 ec 0c             	sub    $0xc,%esp
   2b1ac:	56                   	push   %esi
   2b1ad:	e8 2e 72 fe ff       	call   123e0 <operand_read>
   2b1b2:	8b 44 24 38          	mov    0x38(%esp),%eax
   2b1b6:	83 c4 10             	add    $0x10,%esp
   2b1b9:	89 c7                	mov    %eax,%edi
   2b1bb:	0f b6 c0             	movzbl %al,%eax
   2b1be:	39 44 24 48          	cmp    %eax,0x48(%esp)
   2b1c2:	0f 85 03 03 00 00    	jne    2b4cb <__score_reg_test+0x41b>
   2b1c8:	c7 44 24 40 07 00 00 	movl   $0x7,0x40(%esp)
   2b1cf:	00 
   2b1d0:	83 ec 0c             	sub    $0xc,%esp
   2b1d3:	56                   	push   %esi
   2b1d4:	e8 07 72 fe ff       	call   123e0 <operand_read>
   2b1d9:	89 f8                	mov    %edi,%eax
   2b1db:	83 c4 10             	add    $0x10,%esp
   2b1de:	0f b6 c4             	movzbl %ah,%eax
   2b1e1:	39 44 24 48          	cmp    %eax,0x48(%esp)
   2b1e5:	0f 85 c4 02 00 00    	jne    2b4af <__score_reg_test+0x3ff>
   2b1eb:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
   2b1f2:	00 
   2b1f3:	83 ec 0c             	sub    $0xc,%esp
   2b1f6:	56                   	push   %esi
   2b1f7:	e8 e4 71 fe ff       	call   123e0 <operand_read>
   2b1fc:	8b 44 24 30          	mov    0x30(%esp),%eax
   2b200:	89 44 24 14          	mov    %eax,0x14(%esp)
   2b204:	83 c4 10             	add    $0x10,%esp
   2b207:	0f b6 c0             	movzbl %al,%eax
   2b20a:	39 44 24 48          	cmp    %eax,0x48(%esp)
   2b20e:	0f 85 7f 02 00 00    	jne    2b493 <__score_reg_test+0x3e3>
   2b214:	c7 44 24 40 05 00 00 	movl   $0x5,0x40(%esp)
   2b21b:	00 
   2b21c:	83 ec 0c             	sub    $0xc,%esp
   2b21f:	56                   	push   %esi
   2b220:	e8 bb 71 fe ff       	call   123e0 <operand_read>
   2b225:	8b 44 24 14          	mov    0x14(%esp),%eax
   2b229:	83 c4 10             	add    $0x10,%esp
   2b22c:	0f b6 c4             	movzbl %ah,%eax
   2b22f:	39 44 24 48          	cmp    %eax,0x48(%esp)
   2b233:	0f 85 3e 02 00 00    	jne    2b477 <__score_reg_test+0x3c7>
   2b239:	c7 44 24 40 02 00 00 	movl   $0x2,0x40(%esp)
   2b240:	00 
   2b241:	83 ec 0c             	sub    $0xc,%esp
   2b244:	56                   	push   %esi
   2b245:	e8 96 71 fe ff       	call   123e0 <operand_read>
   2b24a:	8b 44 24 34          	mov    0x34(%esp),%eax
   2b24e:	83 c4 10             	add    $0x10,%esp
   2b251:	0f b6 d0             	movzbl %al,%edx
   2b254:	39 54 24 48          	cmp    %edx,0x48(%esp)
   2b258:	0f 85 fd 01 00 00    	jne    2b45b <__score_reg_test+0x3ab>
   2b25e:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2b262:	83 ec 0c             	sub    $0xc,%esp
   2b265:	c7 44 24 4c 06 00 00 	movl   $0x6,0x4c(%esp)
   2b26c:	00 
   2b26d:	56                   	push   %esi
   2b26e:	e8 6d 71 fe ff       	call   123e0 <operand_read>
   2b273:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2b277:	83 c4 10             	add    $0x10,%esp
   2b27a:	0f b6 d4             	movzbl %ah,%edx
   2b27d:	39 54 24 48          	cmp    %edx,0x48(%esp)
   2b281:	0f 85 b8 01 00 00    	jne    2b43f <__score_reg_test+0x38f>
   2b287:	8b 14 24             	mov    (%esp),%edx
   2b28a:	3b 2a                	cmp    (%edx),%ebp
   2b28c:	0f 85 91 01 00 00    	jne    2b423 <__score_reg_test+0x373>
   2b292:	8b 0c 24             	mov    (%esp),%ecx
   2b295:	8b 54 24 04          	mov    0x4(%esp),%edx
   2b299:	3b 51 04             	cmp    0x4(%ecx),%edx
   2b29c:	0f 85 65 01 00 00    	jne    2b407 <__score_reg_test+0x357>
   2b2a2:	8b 0c 24             	mov    (%esp),%ecx
   2b2a5:	3b 41 08             	cmp    0x8(%ecx),%eax
   2b2a8:	0f 85 3d 01 00 00    	jne    2b3eb <__score_reg_test+0x33b>
   2b2ae:	8b 04 24             	mov    (%esp),%eax
   2b2b1:	3b 78 0c             	cmp    0xc(%eax),%edi
   2b2b4:	0f 85 15 01 00 00    	jne    2b3cf <__score_reg_test+0x31f>
   2b2ba:	8b 04 24             	mov    (%esp),%eax
   2b2bd:	8b 40 10             	mov    0x10(%eax),%eax
   2b2c0:	39 44 24 2c          	cmp    %eax,0x2c(%esp)
   2b2c4:	0f 85 e9 00 00 00    	jne    2b3b3 <__score_reg_test+0x303>
   2b2ca:	8b 04 24             	mov    (%esp),%eax
   2b2cd:	8b 40 14             	mov    0x14(%eax),%eax
   2b2d0:	39 44 24 30          	cmp    %eax,0x30(%esp)
   2b2d4:	0f 85 bd 00 00 00    	jne    2b397 <__score_reg_test+0x2e7>
   2b2da:	8b 04 24             	mov    (%esp),%eax
   2b2dd:	8b 40 18             	mov    0x18(%eax),%eax
   2b2e0:	39 44 24 34          	cmp    %eax,0x34(%esp)
   2b2e4:	0f 85 91 00 00 00    	jne    2b37b <__score_reg_test+0x2cb>
   2b2ea:	8b 04 24             	mov    (%esp),%eax
   2b2ed:	8b 40 1c             	mov    0x1c(%eax),%eax
   2b2f0:	39 44 24 38          	cmp    %eax,0x38(%esp)
   2b2f4:	75 69                	jne    2b35f <__score_reg_test+0x2af>
   2b2f6:	8b 04 24             	mov    (%esp),%eax
   2b2f9:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   2b2fd:	39 48 20             	cmp    %ecx,0x20(%eax)
   2b300:	75 41                	jne    2b343 <__score_reg_test+0x293>
   2b302:	83 ec 0c             	sub    $0xc,%esp
   2b305:	8d 83 48 6f fe ff    	lea    -0x190b8(%ebx),%eax
   2b30b:	50                   	push   %eax
   2b30c:	e8 9f 8f fd ff       	call   42b0 <puts@plt>
   2b311:	8d 83 3b 6f fe ff    	lea    -0x190c5(%ebx),%eax
   2b317:	89 04 24             	mov    %eax,(%esp)
   2b31a:	e8 01 f5 ff ff       	call   2a820 <score_reg_alu_fpu>
   2b31f:	83 c4 7c             	add    $0x7c,%esp
   2b322:	5b                   	pop    %ebx
   2b323:	5e                   	pop    %esi
   2b324:	5f                   	pop    %edi
   2b325:	5d                   	pop    %ebp
   2b326:	c3                   	ret    
   2b327:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b32d:	50                   	push   %eax
   2b32e:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b334:	6a 1b                	push   $0x1b
   2b336:	50                   	push   %eax
   2b337:	8d 83 32 61 fe ff    	lea    -0x19ece(%ebx),%eax
   2b33d:	50                   	push   %eax
   2b33e:	e8 cd 8f fd ff       	call   4310 <__assert_fail@plt>
   2b343:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b349:	50                   	push   %eax
   2b34a:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b350:	6a 40                	push   $0x40
   2b352:	50                   	push   %eax
   2b353:	8d 83 28 62 fe ff    	lea    -0x19dd8(%ebx),%eax
   2b359:	50                   	push   %eax
   2b35a:	e8 b1 8f fd ff       	call   4310 <__assert_fail@plt>
   2b35f:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b365:	50                   	push   %eax
   2b366:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b36c:	6a 3e                	push   $0x3e
   2b36e:	50                   	push   %eax
   2b36f:	8d 83 0d 62 fe ff    	lea    -0x19df3(%ebx),%eax
   2b375:	50                   	push   %eax
   2b376:	e8 95 8f fd ff       	call   4310 <__assert_fail@plt>
   2b37b:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b381:	50                   	push   %eax
   2b382:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b388:	6a 3d                	push   $0x3d
   2b38a:	50                   	push   %eax
   2b38b:	8d 83 f2 61 fe ff    	lea    -0x19e0e(%ebx),%eax
   2b391:	50                   	push   %eax
   2b392:	e8 79 8f fd ff       	call   4310 <__assert_fail@plt>
   2b397:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b39d:	50                   	push   %eax
   2b39e:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b3a4:	6a 3c                	push   $0x3c
   2b3a6:	50                   	push   %eax
   2b3a7:	8d 83 d7 61 fe ff    	lea    -0x19e29(%ebx),%eax
   2b3ad:	50                   	push   %eax
   2b3ae:	e8 5d 8f fd ff       	call   4310 <__assert_fail@plt>
   2b3b3:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b3b9:	50                   	push   %eax
   2b3ba:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b3c0:	6a 3b                	push   $0x3b
   2b3c2:	50                   	push   %eax
   2b3c3:	8d 83 bc 61 fe ff    	lea    -0x19e44(%ebx),%eax
   2b3c9:	50                   	push   %eax
   2b3ca:	e8 41 8f fd ff       	call   4310 <__assert_fail@plt>
   2b3cf:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b3d5:	50                   	push   %eax
   2b3d6:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b3dc:	6a 3a                	push   $0x3a
   2b3de:	50                   	push   %eax
   2b3df:	8d 83 a1 61 fe ff    	lea    -0x19e5f(%ebx),%eax
   2b3e5:	50                   	push   %eax
   2b3e6:	e8 25 8f fd ff       	call   4310 <__assert_fail@plt>
   2b3eb:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b3f1:	50                   	push   %eax
   2b3f2:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b3f8:	6a 39                	push   $0x39
   2b3fa:	50                   	push   %eax
   2b3fb:	8d 83 86 61 fe ff    	lea    -0x19e7a(%ebx),%eax
   2b401:	50                   	push   %eax
   2b402:	e8 09 8f fd ff       	call   4310 <__assert_fail@plt>
   2b407:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b40d:	50                   	push   %eax
   2b40e:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b414:	6a 38                	push   $0x38
   2b416:	50                   	push   %eax
   2b417:	8d 83 6b 61 fe ff    	lea    -0x19e95(%ebx),%eax
   2b41d:	50                   	push   %eax
   2b41e:	e8 ed 8e fd ff       	call   4310 <__assert_fail@plt>
   2b423:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b429:	50                   	push   %eax
   2b42a:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b430:	6a 37                	push   $0x37
   2b432:	50                   	push   %eax
   2b433:	8d 83 50 61 fe ff    	lea    -0x19eb0(%ebx),%eax
   2b439:	50                   	push   %eax
   2b43a:	e8 d1 8e fd ff       	call   4310 <__assert_fail@plt>
   2b43f:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b445:	50                   	push   %eax
   2b446:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b44c:	6a 35                	push   $0x35
   2b44e:	50                   	push   %eax
   2b44f:	8d 83 d4 63 fe ff    	lea    -0x19c2c(%ebx),%eax
   2b455:	50                   	push   %eax
   2b456:	e8 b5 8e fd ff       	call   4310 <__assert_fail@plt>
   2b45b:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b461:	50                   	push   %eax
   2b462:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b468:	6a 32                	push   $0x32
   2b46a:	50                   	push   %eax
   2b46b:	8d 83 b0 63 fe ff    	lea    -0x19c50(%ebx),%eax
   2b471:	50                   	push   %eax
   2b472:	e8 99 8e fd ff       	call   4310 <__assert_fail@plt>
   2b477:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b47d:	50                   	push   %eax
   2b47e:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b484:	6a 2f                	push   $0x2f
   2b486:	50                   	push   %eax
   2b487:	8d 83 84 63 fe ff    	lea    -0x19c7c(%ebx),%eax
   2b48d:	50                   	push   %eax
   2b48e:	e8 7d 8e fd ff       	call   4310 <__assert_fail@plt>
   2b493:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b499:	50                   	push   %eax
   2b49a:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b4a0:	6a 2c                	push   $0x2c
   2b4a2:	50                   	push   %eax
   2b4a3:	8d 83 60 63 fe ff    	lea    -0x19ca0(%ebx),%eax
   2b4a9:	50                   	push   %eax
   2b4aa:	e8 61 8e fd ff       	call   4310 <__assert_fail@plt>
   2b4af:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b4b5:	50                   	push   %eax
   2b4b6:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b4bc:	6a 29                	push   $0x29
   2b4be:	50                   	push   %eax
   2b4bf:	8d 83 34 63 fe ff    	lea    -0x19ccc(%ebx),%eax
   2b4c5:	50                   	push   %eax
   2b4c6:	e8 45 8e fd ff       	call   4310 <__assert_fail@plt>
   2b4cb:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b4d1:	50                   	push   %eax
   2b4d2:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b4d8:	6a 26                	push   $0x26
   2b4da:	50                   	push   %eax
   2b4db:	8d 83 10 63 fe ff    	lea    -0x19cf0(%ebx),%eax
   2b4e1:	50                   	push   %eax
   2b4e2:	e8 29 8e fd ff       	call   4310 <__assert_fail@plt>
   2b4e7:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b4ed:	50                   	push   %eax
   2b4ee:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b4f4:	6a 23                	push   $0x23
   2b4f6:	50                   	push   %eax
   2b4f7:	8d 83 e4 62 fe ff    	lea    -0x19d1c(%ebx),%eax
   2b4fd:	50                   	push   %eax
   2b4fe:	e8 0d 8e fd ff       	call   4310 <__assert_fail@plt>
   2b503:	8d 83 70 6f fe ff    	lea    -0x19090(%ebx),%eax
   2b509:	50                   	push   %eax
   2b50a:	8d 83 2c 6f fe ff    	lea    -0x190d4(%ebx),%eax
   2b510:	6a 20                	push   $0x20
   2b512:	50                   	push   %eax
   2b513:	8d 83 c0 62 fe ff    	lea    -0x19d40(%ebx),%eax
   2b519:	50                   	push   %eax
   2b51a:	e8 f1 8d fd ff       	call   4310 <__assert_fail@plt>
   2b51f:	90                   	nop

0002b520 <__score_alu_test_add>:
   2b520:	e8 b2 ad fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2b525:	05 db 3a 02 00       	add    $0x23adb,%eax
   2b52a:	55                   	push   %ebp
   2b52b:	57                   	push   %edi
   2b52c:	56                   	push   %esi
   2b52d:	53                   	push   %ebx
   2b52e:	83 ec 4c             	sub    $0x4c,%esp
   2b531:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
   2b537:	8d 74 24 40          	lea    0x40(%esp),%esi
   2b53b:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2b53f:	8d 7c 24 28          	lea    0x28(%esp),%edi
   2b543:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
   2b54a:	10 
   2b54b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
   2b552:	ff 
   2b553:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
   2b55a:	ff 
   2b55b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
   2b562:	ff 
   2b563:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   2b56a:	00 
   2b56b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   2b572:	00 
   2b573:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   2b57a:	00 
   2b57b:	89 74 24 14          	mov    %esi,0x14(%esp)
   2b57f:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   2b583:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2b587:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2b58c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b590:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2b594:	be 00 00 00 10       	mov    $0x10000000,%esi
   2b599:	89 44 24 10          	mov    %eax,0x10(%esp)
   2b59d:	eb 0e                	jmp    2b5ad <__score_alu_test_add+0x8d>
   2b59f:	90                   	nop
   2b5a0:	8b 44 24 10          	mov    0x10(%esp),%eax
   2b5a4:	8b 30                	mov    (%eax),%esi
   2b5a6:	83 c0 04             	add    $0x4,%eax
   2b5a9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2b5ad:	83 ec 04             	sub    $0x4,%esp
   2b5b0:	6a 20                	push   $0x20
   2b5b2:	57                   	push   %edi
   2b5b3:	56                   	push   %esi
   2b5b4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2b5b8:	e8 d3 3d fe ff       	call   f390 <alu_add>
   2b5bd:	89 f1                	mov    %esi,%ecx
   2b5bf:	83 c4 10             	add    $0x10,%esp
   2b5c2:	89 c3                	mov    %eax,%ebx
   2b5c4:	89 f8                	mov    %edi,%eax
   2b5c6:	01 c8                	add    %ecx,%eax
   2b5c8:	9c                   	pushf  
   2b5c9:	5a                   	pop    %edx
   2b5ca:	39 c3                	cmp    %eax,%ebx
   2b5cc:	0f 85 d3 05 00 00    	jne    2bba5 <__score_alu_test_add+0x685>
   2b5d2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b5d6:	89 d1                	mov    %edx,%ecx
   2b5d8:	83 e1 01             	and    $0x1,%ecx
   2b5db:	89 c3                	mov    %eax,%ebx
   2b5dd:	83 e3 01             	and    $0x1,%ebx
   2b5e0:	38 cb                	cmp    %cl,%bl
   2b5e2:	0f 85 ab 05 00 00    	jne    2bb93 <__score_alu_test_add+0x673>
   2b5e8:	89 c3                	mov    %eax,%ebx
   2b5ea:	89 d1                	mov    %edx,%ecx
   2b5ec:	c0 eb 02             	shr    $0x2,%bl
   2b5ef:	c1 e9 02             	shr    $0x2,%ecx
   2b5f2:	83 e3 01             	and    $0x1,%ebx
   2b5f5:	83 e1 01             	and    $0x1,%ecx
   2b5f8:	38 cb                	cmp    %cl,%bl
   2b5fa:	0f 85 b7 05 00 00    	jne    2bbb7 <__score_alu_test_add+0x697>
   2b600:	89 c3                	mov    %eax,%ebx
   2b602:	89 d1                	mov    %edx,%ecx
   2b604:	c0 eb 07             	shr    $0x7,%bl
   2b607:	c0 e9 07             	shr    $0x7,%cl
   2b60a:	38 cb                	cmp    %cl,%bl
   2b60c:	0f 85 47 06 00 00    	jne    2bc59 <__score_alu_test_add+0x739>
   2b612:	89 d1                	mov    %edx,%ecx
   2b614:	c0 e8 06             	shr    $0x6,%al
   2b617:	c1 e9 06             	shr    $0x6,%ecx
   2b61a:	83 e0 01             	and    $0x1,%eax
   2b61d:	83 e1 01             	and    $0x1,%ecx
   2b620:	38 c8                	cmp    %cl,%al
   2b622:	0f 85 1f 06 00 00    	jne    2bc47 <__score_alu_test_add+0x727>
   2b628:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2b62c:	c1 ea 0b             	shr    $0xb,%edx
   2b62f:	83 e2 01             	and    $0x1,%edx
   2b632:	c0 e8 03             	shr    $0x3,%al
   2b635:	83 e0 01             	and    $0x1,%eax
   2b638:	38 d0                	cmp    %dl,%al
   2b63a:	0f 85 f5 05 00 00    	jne    2bc35 <__score_alu_test_add+0x715>
   2b640:	83 ec 04             	sub    $0x4,%esp
   2b643:	6a 10                	push   $0x10
   2b645:	57                   	push   %edi
   2b646:	56                   	push   %esi
   2b647:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2b64b:	e8 40 3d fe ff       	call   f390 <alu_add>
   2b650:	89 f1                	mov    %esi,%ecx
   2b652:	83 c4 10             	add    $0x10,%esp
   2b655:	89 c3                	mov    %eax,%ebx
   2b657:	89 f8                	mov    %edi,%eax
   2b659:	66 01 c8             	add    %cx,%ax
   2b65c:	9c                   	pushf  
   2b65d:	5a                   	pop    %edx
   2b65e:	0f b7 c0             	movzwl %ax,%eax
   2b661:	39 c3                	cmp    %eax,%ebx
   2b663:	0f 85 ba 05 00 00    	jne    2bc23 <__score_alu_test_add+0x703>
   2b669:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b66d:	89 d1                	mov    %edx,%ecx
   2b66f:	83 e1 01             	and    $0x1,%ecx
   2b672:	89 c3                	mov    %eax,%ebx
   2b674:	83 e3 01             	and    $0x1,%ebx
   2b677:	38 cb                	cmp    %cl,%bl
   2b679:	0f 85 92 05 00 00    	jne    2bc11 <__score_alu_test_add+0x6f1>
   2b67f:	89 c3                	mov    %eax,%ebx
   2b681:	89 d1                	mov    %edx,%ecx
   2b683:	c0 eb 02             	shr    $0x2,%bl
   2b686:	c1 e9 02             	shr    $0x2,%ecx
   2b689:	83 e3 01             	and    $0x1,%ebx
   2b68c:	83 e1 01             	and    $0x1,%ecx
   2b68f:	38 cb                	cmp    %cl,%bl
   2b691:	0f 85 d8 04 00 00    	jne    2bb6f <__score_alu_test_add+0x64f>
   2b697:	89 d1                	mov    %edx,%ecx
   2b699:	c0 e8 07             	shr    $0x7,%al
   2b69c:	c0 e9 07             	shr    $0x7,%cl
   2b69f:	38 c8                	cmp    %cl,%al
   2b6a1:	0f 85 b6 04 00 00    	jne    2bb5d <__score_alu_test_add+0x63d>
   2b6a7:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b6ab:	89 d1                	mov    %edx,%ecx
   2b6ad:	c1 e9 06             	shr    $0x6,%ecx
   2b6b0:	c0 e8 06             	shr    $0x6,%al
   2b6b3:	83 e1 01             	and    $0x1,%ecx
   2b6b6:	83 e0 01             	and    $0x1,%eax
   2b6b9:	38 c8                	cmp    %cl,%al
   2b6bb:	0f 85 c0 04 00 00    	jne    2bb81 <__score_alu_test_add+0x661>
   2b6c1:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2b6c5:	c1 ea 0b             	shr    $0xb,%edx
   2b6c8:	83 e2 01             	and    $0x1,%edx
   2b6cb:	c0 e8 03             	shr    $0x3,%al
   2b6ce:	83 e0 01             	and    $0x1,%eax
   2b6d1:	38 d0                	cmp    %dl,%al
   2b6d3:	0f 85 f0 04 00 00    	jne    2bbc9 <__score_alu_test_add+0x6a9>
   2b6d9:	83 ec 04             	sub    $0x4,%esp
   2b6dc:	6a 08                	push   $0x8
   2b6de:	57                   	push   %edi
   2b6df:	56                   	push   %esi
   2b6e0:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2b6e4:	e8 a7 3c fe ff       	call   f390 <alu_add>
   2b6e9:	89 f1                	mov    %esi,%ecx
   2b6eb:	83 c4 10             	add    $0x10,%esp
   2b6ee:	89 c3                	mov    %eax,%ebx
   2b6f0:	89 f8                	mov    %edi,%eax
   2b6f2:	00 c8                	add    %cl,%al
   2b6f4:	9c                   	pushf  
   2b6f5:	5a                   	pop    %edx
   2b6f6:	0f b6 c0             	movzbl %al,%eax
   2b6f9:	39 c3                	cmp    %eax,%ebx
   2b6fb:	0f 85 8e 05 00 00    	jne    2bc8f <__score_alu_test_add+0x76f>
   2b701:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b705:	89 d1                	mov    %edx,%ecx
   2b707:	83 e1 01             	and    $0x1,%ecx
   2b70a:	89 c3                	mov    %eax,%ebx
   2b70c:	83 e3 01             	and    $0x1,%ebx
   2b70f:	38 cb                	cmp    %cl,%bl
   2b711:	0f 85 66 05 00 00    	jne    2bc7d <__score_alu_test_add+0x75d>
   2b717:	89 c3                	mov    %eax,%ebx
   2b719:	89 d1                	mov    %edx,%ecx
   2b71b:	c0 eb 02             	shr    $0x2,%bl
   2b71e:	c1 e9 02             	shr    $0x2,%ecx
   2b721:	83 e3 01             	and    $0x1,%ebx
   2b724:	83 e1 01             	and    $0x1,%ecx
   2b727:	38 cb                	cmp    %cl,%bl
   2b729:	0f 85 3c 05 00 00    	jne    2bc6b <__score_alu_test_add+0x74b>
   2b72f:	89 c3                	mov    %eax,%ebx
   2b731:	89 d1                	mov    %edx,%ecx
   2b733:	c0 eb 07             	shr    $0x7,%bl
   2b736:	c0 e9 07             	shr    $0x7,%cl
   2b739:	38 cb                	cmp    %cl,%bl
   2b73b:	0f 85 ac 04 00 00    	jne    2bbed <__score_alu_test_add+0x6cd>
   2b741:	89 d1                	mov    %edx,%ecx
   2b743:	c0 e8 06             	shr    $0x6,%al
   2b746:	c1 e9 06             	shr    $0x6,%ecx
   2b749:	83 e0 01             	and    $0x1,%eax
   2b74c:	83 e1 01             	and    $0x1,%ecx
   2b74f:	38 c8                	cmp    %cl,%al
   2b751:	0f 85 84 04 00 00    	jne    2bbdb <__score_alu_test_add+0x6bb>
   2b757:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2b75b:	c1 ea 0b             	shr    $0xb,%edx
   2b75e:	83 e2 01             	and    $0x1,%edx
   2b761:	c0 e8 03             	shr    $0x3,%al
   2b764:	83 e0 01             	and    $0x1,%eax
   2b767:	38 d0                	cmp    %dl,%al
   2b769:	0f 85 90 04 00 00    	jne    2bbff <__score_alu_test_add+0x6df>
   2b76f:	8b 74 24 14          	mov    0x14(%esp),%esi
   2b773:	39 74 24 10          	cmp    %esi,0x10(%esp)
   2b777:	0f 85 23 fe ff ff    	jne    2b5a0 <__score_alu_test_add+0x80>
   2b77d:	8b 44 24 18          	mov    0x18(%esp),%eax
   2b781:	39 f0                	cmp    %esi,%eax
   2b783:	74 13                	je     2b798 <__score_alu_test_add+0x278>
   2b785:	8b 38                	mov    (%eax),%edi
   2b787:	83 c0 04             	add    $0x4,%eax
   2b78a:	89 44 24 18          	mov    %eax,0x18(%esp)
   2b78e:	e9 fd fd ff ff       	jmp    2b590 <__score_alu_test_add+0x70>
   2b793:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b797:	90                   	nop
   2b798:	83 ec 0c             	sub    $0xc,%esp
   2b79b:	6a 00                	push   $0x0
   2b79d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   2b7a1:	89 fb                	mov    %edi,%ebx
   2b7a3:	e8 88 89 fd ff       	call   4130 <time@plt>
   2b7a8:	89 04 24             	mov    %eax,(%esp)
   2b7ab:	e8 e0 89 fd ff       	call   4190 <srand@plt>
   2b7b0:	83 c4 10             	add    $0x10,%esp
   2b7b3:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2b7ba:	00 
   2b7bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b7bf:	90                   	nop
   2b7c0:	8b 74 24 0c          	mov    0xc(%esp),%esi
   2b7c4:	89 f3                	mov    %esi,%ebx
   2b7c6:	e8 25 8a fd ff       	call   41f0 <rand@plt>
   2b7cb:	89 74 24 0c          	mov    %esi,0xc(%esp)
   2b7cf:	89 c7                	mov    %eax,%edi
   2b7d1:	e8 1a 8a fd ff       	call   41f0 <rand@plt>
   2b7d6:	83 ec 04             	sub    $0x4,%esp
   2b7d9:	6a 20                	push   $0x20
   2b7db:	89 c6                	mov    %eax,%esi
   2b7dd:	57                   	push   %edi
   2b7de:	50                   	push   %eax
   2b7df:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2b7e3:	e8 a8 3b fe ff       	call   f390 <alu_add>
   2b7e8:	89 f1                	mov    %esi,%ecx
   2b7ea:	83 c4 10             	add    $0x10,%esp
   2b7ed:	89 c3                	mov    %eax,%ebx
   2b7ef:	89 f8                	mov    %edi,%eax
   2b7f1:	01 c8                	add    %ecx,%eax
   2b7f3:	9c                   	pushf  
   2b7f4:	5a                   	pop    %edx
   2b7f5:	39 c3                	cmp    %eax,%ebx
   2b7f7:	0f 85 4e 03 00 00    	jne    2bb4b <__score_alu_test_add+0x62b>
   2b7fd:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b801:	89 d1                	mov    %edx,%ecx
   2b803:	83 e1 01             	and    $0x1,%ecx
   2b806:	89 c3                	mov    %eax,%ebx
   2b808:	83 e3 01             	and    $0x1,%ebx
   2b80b:	38 cb                	cmp    %cl,%bl
   2b80d:	0f 85 26 03 00 00    	jne    2bb39 <__score_alu_test_add+0x619>
   2b813:	89 c3                	mov    %eax,%ebx
   2b815:	89 d1                	mov    %edx,%ecx
   2b817:	c0 eb 02             	shr    $0x2,%bl
   2b81a:	c1 e9 02             	shr    $0x2,%ecx
   2b81d:	83 e3 01             	and    $0x1,%ebx
   2b820:	83 e1 01             	and    $0x1,%ecx
   2b823:	38 cb                	cmp    %cl,%bl
   2b825:	0f 85 fc 02 00 00    	jne    2bb27 <__score_alu_test_add+0x607>
   2b82b:	89 c3                	mov    %eax,%ebx
   2b82d:	89 d1                	mov    %edx,%ecx
   2b82f:	c0 eb 07             	shr    $0x7,%bl
   2b832:	c0 e9 07             	shr    $0x7,%cl
   2b835:	38 cb                	cmp    %cl,%bl
   2b837:	0f 85 d8 02 00 00    	jne    2bb15 <__score_alu_test_add+0x5f5>
   2b83d:	89 d1                	mov    %edx,%ecx
   2b83f:	c0 e8 06             	shr    $0x6,%al
   2b842:	c1 e9 06             	shr    $0x6,%ecx
   2b845:	83 e0 01             	and    $0x1,%eax
   2b848:	83 e1 01             	and    $0x1,%ecx
   2b84b:	38 c8                	cmp    %cl,%al
   2b84d:	0f 85 b0 02 00 00    	jne    2bb03 <__score_alu_test_add+0x5e3>
   2b853:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2b857:	c1 ea 0b             	shr    $0xb,%edx
   2b85a:	83 e2 01             	and    $0x1,%edx
   2b85d:	c0 e8 03             	shr    $0x3,%al
   2b860:	83 e0 01             	and    $0x1,%eax
   2b863:	38 d0                	cmp    %dl,%al
   2b865:	0f 85 86 02 00 00    	jne    2baf1 <__score_alu_test_add+0x5d1>
   2b86b:	83 ec 04             	sub    $0x4,%esp
   2b86e:	6a 10                	push   $0x10
   2b870:	57                   	push   %edi
   2b871:	56                   	push   %esi
   2b872:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2b876:	e8 15 3b fe ff       	call   f390 <alu_add>
   2b87b:	89 f1                	mov    %esi,%ecx
   2b87d:	83 c4 10             	add    $0x10,%esp
   2b880:	89 c3                	mov    %eax,%ebx
   2b882:	89 f8                	mov    %edi,%eax
   2b884:	66 01 c8             	add    %cx,%ax
   2b887:	9c                   	pushf  
   2b888:	5a                   	pop    %edx
   2b889:	0f b7 c0             	movzwl %ax,%eax
   2b88c:	39 c3                	cmp    %eax,%ebx
   2b88e:	0f 85 4e 02 00 00    	jne    2bae2 <__score_alu_test_add+0x5c2>
   2b894:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b898:	89 d1                	mov    %edx,%ecx
   2b89a:	83 e1 01             	and    $0x1,%ecx
   2b89d:	89 c3                	mov    %eax,%ebx
   2b89f:	83 e3 01             	and    $0x1,%ebx
   2b8a2:	38 cb                	cmp    %cl,%bl
   2b8a4:	0f 85 26 02 00 00    	jne    2bad0 <__score_alu_test_add+0x5b0>
   2b8aa:	89 c3                	mov    %eax,%ebx
   2b8ac:	89 d1                	mov    %edx,%ecx
   2b8ae:	c0 eb 02             	shr    $0x2,%bl
   2b8b1:	c1 e9 02             	shr    $0x2,%ecx
   2b8b4:	83 e3 01             	and    $0x1,%ebx
   2b8b7:	83 e1 01             	and    $0x1,%ecx
   2b8ba:	38 cb                	cmp    %cl,%bl
   2b8bc:	0f 85 fc 01 00 00    	jne    2babe <__score_alu_test_add+0x59e>
   2b8c2:	89 d1                	mov    %edx,%ecx
   2b8c4:	c0 e8 07             	shr    $0x7,%al
   2b8c7:	c0 e9 07             	shr    $0x7,%cl
   2b8ca:	38 c8                	cmp    %cl,%al
   2b8cc:	0f 85 da 01 00 00    	jne    2baac <__score_alu_test_add+0x58c>
   2b8d2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b8d6:	89 d1                	mov    %edx,%ecx
   2b8d8:	c1 e9 06             	shr    $0x6,%ecx
   2b8db:	c0 e8 06             	shr    $0x6,%al
   2b8de:	83 e1 01             	and    $0x1,%ecx
   2b8e1:	83 e0 01             	and    $0x1,%eax
   2b8e4:	38 c8                	cmp    %cl,%al
   2b8e6:	0f 85 ae 01 00 00    	jne    2ba9a <__score_alu_test_add+0x57a>
   2b8ec:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2b8f0:	c1 ea 0b             	shr    $0xb,%edx
   2b8f3:	83 e2 01             	and    $0x1,%edx
   2b8f6:	c0 e8 03             	shr    $0x3,%al
   2b8f9:	83 e0 01             	and    $0x1,%eax
   2b8fc:	38 d0                	cmp    %dl,%al
   2b8fe:	0f 85 84 01 00 00    	jne    2ba88 <__score_alu_test_add+0x568>
   2b904:	83 ec 04             	sub    $0x4,%esp
   2b907:	6a 08                	push   $0x8
   2b909:	57                   	push   %edi
   2b90a:	56                   	push   %esi
   2b90b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2b90f:	e8 7c 3a fe ff       	call   f390 <alu_add>
   2b914:	89 f1                	mov    %esi,%ecx
   2b916:	83 c4 10             	add    $0x10,%esp
   2b919:	89 c3                	mov    %eax,%ebx
   2b91b:	89 f8                	mov    %edi,%eax
   2b91d:	00 c8                	add    %cl,%al
   2b91f:	9c                   	pushf  
   2b920:	5a                   	pop    %edx
   2b921:	0f b6 c0             	movzbl %al,%eax
   2b924:	39 c3                	cmp    %eax,%ebx
   2b926:	0f 85 3c 01 00 00    	jne    2ba68 <__score_alu_test_add+0x548>
   2b92c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2b930:	89 d1                	mov    %edx,%ecx
   2b932:	83 e1 01             	and    $0x1,%ecx
   2b935:	89 c3                	mov    %eax,%ebx
   2b937:	83 e3 01             	and    $0x1,%ebx
   2b93a:	38 cb                	cmp    %cl,%bl
   2b93c:	0f 85 06 01 00 00    	jne    2ba48 <__score_alu_test_add+0x528>
   2b942:	89 c3                	mov    %eax,%ebx
   2b944:	89 d1                	mov    %edx,%ecx
   2b946:	c0 eb 02             	shr    $0x2,%bl
   2b949:	c1 e9 02             	shr    $0x2,%ecx
   2b94c:	83 e3 01             	and    $0x1,%ebx
   2b94f:	83 e1 01             	and    $0x1,%ecx
   2b952:	38 cb                	cmp    %cl,%bl
   2b954:	0f 85 ce 00 00 00    	jne    2ba28 <__score_alu_test_add+0x508>
   2b95a:	89 c3                	mov    %eax,%ebx
   2b95c:	89 d1                	mov    %edx,%ecx
   2b95e:	c0 eb 07             	shr    $0x7,%bl
   2b961:	c0 e9 07             	shr    $0x7,%cl
   2b964:	38 cb                	cmp    %cl,%bl
   2b966:	0f 85 9c 00 00 00    	jne    2ba08 <__score_alu_test_add+0x4e8>
   2b96c:	89 d1                	mov    %edx,%ecx
   2b96e:	c0 e8 06             	shr    $0x6,%al
   2b971:	c1 e9 06             	shr    $0x6,%ecx
   2b974:	83 e0 01             	and    $0x1,%eax
   2b977:	83 e1 01             	and    $0x1,%ecx
   2b97a:	38 c8                	cmp    %cl,%al
   2b97c:	75 6a                	jne    2b9e8 <__score_alu_test_add+0x4c8>
   2b97e:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2b982:	c1 ea 0b             	shr    $0xb,%edx
   2b985:	83 e2 01             	and    $0x1,%edx
   2b988:	c0 e8 03             	shr    $0x3,%al
   2b98b:	83 e0 01             	and    $0x1,%eax
   2b98e:	38 d0                	cmp    %dl,%al
   2b990:	75 36                	jne    2b9c8 <__score_alu_test_add+0x4a8>
   2b992:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2b997:	0f 85 23 fe ff ff    	jne    2b7c0 <__score_alu_test_add+0x2a0>
   2b99d:	83 ec 0c             	sub    $0xc,%esp
   2b9a0:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2b9a4:	8d 87 d4 70 fe ff    	lea    -0x18f2c(%edi),%eax
   2b9aa:	89 fb                	mov    %edi,%ebx
   2b9ac:	50                   	push   %eax
   2b9ad:	e8 fe 88 fd ff       	call   42b0 <puts@plt>
   2b9b2:	8d 87 95 6f fe ff    	lea    -0x1906b(%edi),%eax
   2b9b8:	89 04 24             	mov    %eax,(%esp)
   2b9bb:	e8 60 ee ff ff       	call   2a820 <score_reg_alu_fpu>
   2b9c0:	83 c4 5c             	add    $0x5c,%esp
   2b9c3:	5b                   	pop    %ebx
   2b9c4:	5e                   	pop    %esi
   2b9c5:	5f                   	pop    %edi
   2b9c6:	5d                   	pop    %ebp
   2b9c7:	c3                   	ret    
   2b9c8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2b9cc:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2b9d2:	50                   	push   %eax
   2b9d3:	6a 77                	push   $0x77
   2b9d5:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2b9db:	50                   	push   %eax
   2b9dc:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   2b9e2:	50                   	push   %eax
   2b9e3:	e8 28 89 fd ff       	call   4310 <__assert_fail@plt>
   2b9e8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2b9ec:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2b9f2:	50                   	push   %eax
   2b9f3:	6a 77                	push   $0x77
   2b9f5:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2b9fb:	50                   	push   %eax
   2b9fc:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2ba02:	50                   	push   %eax
   2ba03:	e8 08 89 fd ff       	call   4310 <__assert_fail@plt>
   2ba08:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ba0c:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2ba12:	50                   	push   %eax
   2ba13:	6a 77                	push   $0x77
   2ba15:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ba1b:	50                   	push   %eax
   2ba1c:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2ba22:	50                   	push   %eax
   2ba23:	e8 e8 88 fd ff       	call   4310 <__assert_fail@plt>
   2ba28:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ba2c:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2ba32:	50                   	push   %eax
   2ba33:	6a 77                	push   $0x77
   2ba35:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ba3b:	50                   	push   %eax
   2ba3c:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2ba42:	50                   	push   %eax
   2ba43:	e8 c8 88 fd ff       	call   4310 <__assert_fail@plt>
   2ba48:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ba4c:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2ba52:	50                   	push   %eax
   2ba53:	6a 77                	push   $0x77
   2ba55:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ba5b:	50                   	push   %eax
   2ba5c:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2ba62:	50                   	push   %eax
   2ba63:	e8 a8 88 fd ff       	call   4310 <__assert_fail@plt>
   2ba68:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ba6c:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2ba72:	50                   	push   %eax
   2ba73:	6a 77                	push   $0x77
   2ba75:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ba7b:	50                   	push   %eax
   2ba7c:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   2ba82:	50                   	push   %eax
   2ba83:	e8 88 88 fd ff       	call   4310 <__assert_fail@plt>
   2ba88:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ba8c:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2ba92:	50                   	push   %eax
   2ba93:	6a 76                	push   $0x76
   2ba95:	e9 3b ff ff ff       	jmp    2b9d5 <__score_alu_test_add+0x4b5>
   2ba9a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ba9e:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2baa4:	50                   	push   %eax
   2baa5:	6a 76                	push   $0x76
   2baa7:	e9 49 ff ff ff       	jmp    2b9f5 <__score_alu_test_add+0x4d5>
   2baac:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bab0:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bab6:	50                   	push   %eax
   2bab7:	6a 76                	push   $0x76
   2bab9:	e9 57 ff ff ff       	jmp    2ba15 <__score_alu_test_add+0x4f5>
   2babe:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bac2:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bac8:	50                   	push   %eax
   2bac9:	6a 76                	push   $0x76
   2bacb:	e9 65 ff ff ff       	jmp    2ba35 <__score_alu_test_add+0x515>
   2bad0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bad4:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bada:	50                   	push   %eax
   2badb:	6a 76                	push   $0x76
   2badd:	e9 73 ff ff ff       	jmp    2ba55 <__score_alu_test_add+0x535>
   2bae2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bae6:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2baec:	50                   	push   %eax
   2baed:	6a 76                	push   $0x76
   2baef:	eb 84                	jmp    2ba75 <__score_alu_test_add+0x555>
   2baf1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2baf5:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bafb:	50                   	push   %eax
   2bafc:	6a 75                	push   $0x75
   2bafe:	e9 d2 fe ff ff       	jmp    2b9d5 <__score_alu_test_add+0x4b5>
   2bb03:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb07:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb0d:	50                   	push   %eax
   2bb0e:	6a 75                	push   $0x75
   2bb10:	e9 e0 fe ff ff       	jmp    2b9f5 <__score_alu_test_add+0x4d5>
   2bb15:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb19:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb1f:	50                   	push   %eax
   2bb20:	6a 75                	push   $0x75
   2bb22:	e9 ee fe ff ff       	jmp    2ba15 <__score_alu_test_add+0x4f5>
   2bb27:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb2b:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb31:	50                   	push   %eax
   2bb32:	6a 75                	push   $0x75
   2bb34:	e9 fc fe ff ff       	jmp    2ba35 <__score_alu_test_add+0x515>
   2bb39:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb3d:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb43:	50                   	push   %eax
   2bb44:	6a 75                	push   $0x75
   2bb46:	e9 0a ff ff ff       	jmp    2ba55 <__score_alu_test_add+0x535>
   2bb4b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb4f:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb55:	50                   	push   %eax
   2bb56:	6a 75                	push   $0x75
   2bb58:	e9 18 ff ff ff       	jmp    2ba75 <__score_alu_test_add+0x555>
   2bb5d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb61:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb67:	50                   	push   %eax
   2bb68:	6a 6c                	push   $0x6c
   2bb6a:	e9 a6 fe ff ff       	jmp    2ba15 <__score_alu_test_add+0x4f5>
   2bb6f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb73:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb79:	50                   	push   %eax
   2bb7a:	6a 6c                	push   $0x6c
   2bb7c:	e9 b4 fe ff ff       	jmp    2ba35 <__score_alu_test_add+0x515>
   2bb81:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb85:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb8b:	50                   	push   %eax
   2bb8c:	6a 6c                	push   $0x6c
   2bb8e:	e9 62 fe ff ff       	jmp    2b9f5 <__score_alu_test_add+0x4d5>
   2bb93:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bb97:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bb9d:	50                   	push   %eax
   2bb9e:	6a 6b                	push   $0x6b
   2bba0:	e9 b0 fe ff ff       	jmp    2ba55 <__score_alu_test_add+0x535>
   2bba5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bba9:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bbaf:	50                   	push   %eax
   2bbb0:	6a 6b                	push   $0x6b
   2bbb2:	e9 be fe ff ff       	jmp    2ba75 <__score_alu_test_add+0x555>
   2bbb7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bbbb:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bbc1:	50                   	push   %eax
   2bbc2:	6a 6b                	push   $0x6b
   2bbc4:	e9 6c fe ff ff       	jmp    2ba35 <__score_alu_test_add+0x515>
   2bbc9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bbcd:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bbd3:	50                   	push   %eax
   2bbd4:	6a 6c                	push   $0x6c
   2bbd6:	e9 fa fd ff ff       	jmp    2b9d5 <__score_alu_test_add+0x4b5>
   2bbdb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bbdf:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bbe5:	50                   	push   %eax
   2bbe6:	6a 6d                	push   $0x6d
   2bbe8:	e9 08 fe ff ff       	jmp    2b9f5 <__score_alu_test_add+0x4d5>
   2bbed:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bbf1:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bbf7:	50                   	push   %eax
   2bbf8:	6a 6d                	push   $0x6d
   2bbfa:	e9 16 fe ff ff       	jmp    2ba15 <__score_alu_test_add+0x4f5>
   2bbff:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc03:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc09:	50                   	push   %eax
   2bc0a:	6a 6d                	push   $0x6d
   2bc0c:	e9 c4 fd ff ff       	jmp    2b9d5 <__score_alu_test_add+0x4b5>
   2bc11:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc15:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc1b:	50                   	push   %eax
   2bc1c:	6a 6c                	push   $0x6c
   2bc1e:	e9 32 fe ff ff       	jmp    2ba55 <__score_alu_test_add+0x535>
   2bc23:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc27:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc2d:	50                   	push   %eax
   2bc2e:	6a 6c                	push   $0x6c
   2bc30:	e9 40 fe ff ff       	jmp    2ba75 <__score_alu_test_add+0x555>
   2bc35:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc39:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc3f:	50                   	push   %eax
   2bc40:	6a 6b                	push   $0x6b
   2bc42:	e9 8e fd ff ff       	jmp    2b9d5 <__score_alu_test_add+0x4b5>
   2bc47:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc4b:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc51:	50                   	push   %eax
   2bc52:	6a 6b                	push   $0x6b
   2bc54:	e9 9c fd ff ff       	jmp    2b9f5 <__score_alu_test_add+0x4d5>
   2bc59:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc5d:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc63:	50                   	push   %eax
   2bc64:	6a 6b                	push   $0x6b
   2bc66:	e9 aa fd ff ff       	jmp    2ba15 <__score_alu_test_add+0x4f5>
   2bc6b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc6f:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc75:	50                   	push   %eax
   2bc76:	6a 6d                	push   $0x6d
   2bc78:	e9 b8 fd ff ff       	jmp    2ba35 <__score_alu_test_add+0x515>
   2bc7d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc81:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc87:	50                   	push   %eax
   2bc88:	6a 6d                	push   $0x6d
   2bc8a:	e9 c6 fd ff ff       	jmp    2ba55 <__score_alu_test_add+0x535>
   2bc8f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2bc93:	8d 83 78 74 fe ff    	lea    -0x18b88(%ebx),%eax
   2bc99:	50                   	push   %eax
   2bc9a:	6a 6d                	push   $0x6d
   2bc9c:	e9 d4 fd ff ff       	jmp    2ba75 <__score_alu_test_add+0x555>
   2bca1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2bca8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2bcaf:	90                   	nop

0002bcb0 <__score_alu_test_adc>:
   2bcb0:	e8 22 a6 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2bcb5:	05 4b 33 02 00       	add    $0x2334b,%eax
   2bcba:	55                   	push   %ebp
   2bcbb:	bd 00 00 00 10       	mov    $0x10000000,%ebp
   2bcc0:	57                   	push   %edi
   2bcc1:	56                   	push   %esi
   2bcc2:	53                   	push   %ebx
   2bcc3:	83 ec 4c             	sub    $0x4c,%esp
   2bcc6:	8d 7c 24 28          	lea    0x28(%esp),%edi
   2bcca:	8d 74 24 40          	lea    0x40(%esp),%esi
   2bcce:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2bcd2:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
   2bcd9:	10 
   2bcda:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
   2bce1:	ff 
   2bce2:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
   2bce9:	ff 
   2bcea:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
   2bcf1:	ff 
   2bcf2:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   2bcf9:	00 
   2bcfa:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   2bd01:	00 
   2bd02:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   2bd09:	00 
   2bd0a:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2bd0e:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   2bd12:	89 74 24 14          	mov    %esi,0x14(%esp)
   2bd16:	8d b0 60 32 05 00    	lea    0x53260(%eax),%esi
   2bd1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2bd20:	8b 44 24 18          	mov    0x18(%esp),%eax
   2bd24:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2bd29:	89 44 24 10          	mov    %eax,0x10(%esp)
   2bd2d:	eb 0e                	jmp    2bd3d <__score_alu_test_adc+0x8d>
   2bd2f:	90                   	nop
   2bd30:	8b 44 24 10          	mov    0x10(%esp),%eax
   2bd34:	8b 38                	mov    (%eax),%edi
   2bd36:	83 c0 04             	add    $0x4,%eax
   2bd39:	89 44 24 10          	mov    %eax,0x10(%esp)
   2bd3d:	83 ec 04             	sub    $0x4,%esp
   2bd40:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
   2bd44:	6a 20                	push   $0x20
   2bd46:	55                   	push   %ebp
   2bd47:	57                   	push   %edi
   2bd48:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2bd4c:	e8 2f 37 fe ff       	call   f480 <alu_adc>
   2bd51:	89 f9                	mov    %edi,%ecx
   2bd53:	83 c4 10             	add    $0x10,%esp
   2bd56:	89 c3                	mov    %eax,%ebx
   2bd58:	89 e8                	mov    %ebp,%eax
   2bd5a:	f8                   	clc    
   2bd5b:	11 c8                	adc    %ecx,%eax
   2bd5d:	9c                   	pushf  
   2bd5e:	5a                   	pop    %edx
   2bd5f:	39 c3                	cmp    %eax,%ebx
   2bd61:	0f 85 60 08 00 00    	jne    2c5c7 <__score_alu_test_adc+0x917>
   2bd67:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2bd6b:	89 d1                	mov    %edx,%ecx
   2bd6d:	83 e1 01             	and    $0x1,%ecx
   2bd70:	89 c3                	mov    %eax,%ebx
   2bd72:	83 e3 01             	and    $0x1,%ebx
   2bd75:	38 cb                	cmp    %cl,%bl
   2bd77:	0f 85 f7 0c 00 00    	jne    2ca74 <__score_alu_test_adc+0xdc4>
   2bd7d:	89 c3                	mov    %eax,%ebx
   2bd7f:	89 d1                	mov    %edx,%ecx
   2bd81:	c0 eb 02             	shr    $0x2,%bl
   2bd84:	c1 e9 02             	shr    $0x2,%ecx
   2bd87:	83 e3 01             	and    $0x1,%ebx
   2bd8a:	83 e1 01             	and    $0x1,%ecx
   2bd8d:	38 cb                	cmp    %cl,%bl
   2bd8f:	0f 85 ca 0c 00 00    	jne    2ca5f <__score_alu_test_adc+0xdaf>
   2bd95:	89 c3                	mov    %eax,%ebx
   2bd97:	89 d1                	mov    %edx,%ecx
   2bd99:	c0 eb 07             	shr    $0x7,%bl
   2bd9c:	c0 e9 07             	shr    $0x7,%cl
   2bd9f:	38 cb                	cmp    %cl,%bl
   2bda1:	0f 85 a3 0c 00 00    	jne    2ca4a <__score_alu_test_adc+0xd9a>
   2bda7:	89 c3                	mov    %eax,%ebx
   2bda9:	89 d1                	mov    %edx,%ecx
   2bdab:	c0 eb 06             	shr    $0x6,%bl
   2bdae:	c1 e9 06             	shr    $0x6,%ecx
   2bdb1:	83 e3 01             	and    $0x1,%ebx
   2bdb4:	83 e1 01             	and    $0x1,%ecx
   2bdb7:	38 cb                	cmp    %cl,%bl
   2bdb9:	0f 85 76 0c 00 00    	jne    2ca35 <__score_alu_test_adc+0xd85>
   2bdbf:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2bdc3:	c1 ea 0b             	shr    $0xb,%edx
   2bdc6:	83 e2 01             	and    $0x1,%edx
   2bdc9:	c0 e9 03             	shr    $0x3,%cl
   2bdcc:	83 e1 01             	and    $0x1,%ecx
   2bdcf:	38 d1                	cmp    %dl,%cl
   2bdd1:	0f 85 49 0c 00 00    	jne    2ca20 <__score_alu_test_adc+0xd70>
   2bdd7:	83 ec 04             	sub    $0x4,%esp
   2bdda:	83 e0 fe             	and    $0xfffffffe,%eax
   2bddd:	88 46 24             	mov    %al,0x24(%esi)
   2bde0:	6a 10                	push   $0x10
   2bde2:	55                   	push   %ebp
   2bde3:	57                   	push   %edi
   2bde4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2bde8:	e8 93 36 fe ff       	call   f480 <alu_adc>
   2bded:	89 f9                	mov    %edi,%ecx
   2bdef:	83 c4 10             	add    $0x10,%esp
   2bdf2:	89 c3                	mov    %eax,%ebx
   2bdf4:	89 e8                	mov    %ebp,%eax
   2bdf6:	f8                   	clc    
   2bdf7:	66 11 c8             	adc    %cx,%ax
   2bdfa:	9c                   	pushf  
   2bdfb:	5a                   	pop    %edx
   2bdfc:	0f b7 c0             	movzwl %ax,%eax
   2bdff:	39 c3                	cmp    %eax,%ebx
   2be01:	0f 85 04 0c 00 00    	jne    2ca0b <__score_alu_test_adc+0xd5b>
   2be07:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2be0b:	89 d1                	mov    %edx,%ecx
   2be0d:	83 e1 01             	and    $0x1,%ecx
   2be10:	89 c3                	mov    %eax,%ebx
   2be12:	83 e3 01             	and    $0x1,%ebx
   2be15:	38 cb                	cmp    %cl,%bl
   2be17:	0f 85 d9 0b 00 00    	jne    2c9f6 <__score_alu_test_adc+0xd46>
   2be1d:	89 c3                	mov    %eax,%ebx
   2be1f:	89 d1                	mov    %edx,%ecx
   2be21:	c0 eb 02             	shr    $0x2,%bl
   2be24:	c1 e9 02             	shr    $0x2,%ecx
   2be27:	83 e3 01             	and    $0x1,%ebx
   2be2a:	83 e1 01             	and    $0x1,%ecx
   2be2d:	38 cb                	cmp    %cl,%bl
   2be2f:	0f 85 ac 0b 00 00    	jne    2c9e1 <__score_alu_test_adc+0xd31>
   2be35:	89 d1                	mov    %edx,%ecx
   2be37:	c0 e8 07             	shr    $0x7,%al
   2be3a:	c0 e9 07             	shr    $0x7,%cl
   2be3d:	38 c8                	cmp    %cl,%al
   2be3f:	0f 85 87 0b 00 00    	jne    2c9cc <__score_alu_test_adc+0xd1c>
   2be45:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2be49:	89 d1                	mov    %edx,%ecx
   2be4b:	c1 e9 06             	shr    $0x6,%ecx
   2be4e:	89 c3                	mov    %eax,%ebx
   2be50:	83 e1 01             	and    $0x1,%ecx
   2be53:	c0 eb 06             	shr    $0x6,%bl
   2be56:	83 e3 01             	and    $0x1,%ebx
   2be59:	38 cb                	cmp    %cl,%bl
   2be5b:	0f 85 56 0b 00 00    	jne    2c9b7 <__score_alu_test_adc+0xd07>
   2be61:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2be65:	c1 ea 0b             	shr    $0xb,%edx
   2be68:	83 e2 01             	and    $0x1,%edx
   2be6b:	c0 e9 03             	shr    $0x3,%cl
   2be6e:	83 e1 01             	and    $0x1,%ecx
   2be71:	38 d1                	cmp    %dl,%cl
   2be73:	0f 85 29 0b 00 00    	jne    2c9a2 <__score_alu_test_adc+0xcf2>
   2be79:	83 ec 04             	sub    $0x4,%esp
   2be7c:	83 e0 fe             	and    $0xfffffffe,%eax
   2be7f:	88 46 24             	mov    %al,0x24(%esi)
   2be82:	6a 08                	push   $0x8
   2be84:	55                   	push   %ebp
   2be85:	57                   	push   %edi
   2be86:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2be8a:	e8 f1 35 fe ff       	call   f480 <alu_adc>
   2be8f:	89 f9                	mov    %edi,%ecx
   2be91:	83 c4 10             	add    $0x10,%esp
   2be94:	89 c3                	mov    %eax,%ebx
   2be96:	89 e8                	mov    %ebp,%eax
   2be98:	f8                   	clc    
   2be99:	10 c8                	adc    %cl,%al
   2be9b:	9c                   	pushf  
   2be9c:	5a                   	pop    %edx
   2be9d:	0f b6 c0             	movzbl %al,%eax
   2bea0:	39 c3                	cmp    %eax,%ebx
   2bea2:	0f 85 e5 0a 00 00    	jne    2c98d <__score_alu_test_adc+0xcdd>
   2bea8:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2beac:	89 d1                	mov    %edx,%ecx
   2beae:	83 e1 01             	and    $0x1,%ecx
   2beb1:	89 c3                	mov    %eax,%ebx
   2beb3:	83 e3 01             	and    $0x1,%ebx
   2beb6:	38 cb                	cmp    %cl,%bl
   2beb8:	0f 85 ba 0a 00 00    	jne    2c978 <__score_alu_test_adc+0xcc8>
   2bebe:	89 c3                	mov    %eax,%ebx
   2bec0:	89 d1                	mov    %edx,%ecx
   2bec2:	c0 eb 02             	shr    $0x2,%bl
   2bec5:	c1 e9 02             	shr    $0x2,%ecx
   2bec8:	83 e3 01             	and    $0x1,%ebx
   2becb:	83 e1 01             	and    $0x1,%ecx
   2bece:	38 cb                	cmp    %cl,%bl
   2bed0:	0f 85 8d 0a 00 00    	jne    2c963 <__score_alu_test_adc+0xcb3>
   2bed6:	89 c3                	mov    %eax,%ebx
   2bed8:	89 d1                	mov    %edx,%ecx
   2beda:	c0 eb 07             	shr    $0x7,%bl
   2bedd:	c0 e9 07             	shr    $0x7,%cl
   2bee0:	38 cb                	cmp    %cl,%bl
   2bee2:	0f 85 66 0a 00 00    	jne    2c94e <__score_alu_test_adc+0xc9e>
   2bee8:	89 d1                	mov    %edx,%ecx
   2beea:	c0 e8 06             	shr    $0x6,%al
   2beed:	c1 e9 06             	shr    $0x6,%ecx
   2bef0:	83 e0 01             	and    $0x1,%eax
   2bef3:	83 e1 01             	and    $0x1,%ecx
   2bef6:	38 c8                	cmp    %cl,%al
   2bef8:	0f 85 3b 0a 00 00    	jne    2c939 <__score_alu_test_adc+0xc89>
   2befe:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2bf02:	c1 ea 0b             	shr    $0xb,%edx
   2bf05:	83 e2 01             	and    $0x1,%edx
   2bf08:	c0 e8 03             	shr    $0x3,%al
   2bf0b:	83 e0 01             	and    $0x1,%eax
   2bf0e:	38 d0                	cmp    %dl,%al
   2bf10:	0f 85 0e 0a 00 00    	jne    2c924 <__score_alu_test_adc+0xc74>
   2bf16:	8b 7c 24 14          	mov    0x14(%esp),%edi
   2bf1a:	39 7c 24 10          	cmp    %edi,0x10(%esp)
   2bf1e:	0f 85 0c fe ff ff    	jne    2bd30 <__score_alu_test_adc+0x80>
   2bf24:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2bf28:	39 f8                	cmp    %edi,%eax
   2bf2a:	74 14                	je     2bf40 <__score_alu_test_adc+0x290>
   2bf2c:	8b 28                	mov    (%eax),%ebp
   2bf2e:	83 c0 04             	add    $0x4,%eax
   2bf31:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2bf35:	e9 e6 fd ff ff       	jmp    2bd20 <__score_alu_test_adc+0x70>
   2bf3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2bf40:	8b 44 24 18          	mov    0x18(%esp),%eax
   2bf44:	bd 00 00 00 10       	mov    $0x10000000,%ebp
   2bf49:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2bf4d:	8d 76 00             	lea    0x0(%esi),%esi
   2bf50:	8b 44 24 18          	mov    0x18(%esp),%eax
   2bf54:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2bf59:	89 44 24 10          	mov    %eax,0x10(%esp)
   2bf5d:	eb 0e                	jmp    2bf6d <__score_alu_test_adc+0x2bd>
   2bf5f:	90                   	nop
   2bf60:	8b 44 24 10          	mov    0x10(%esp),%eax
   2bf64:	8b 38                	mov    (%eax),%edi
   2bf66:	83 c0 04             	add    $0x4,%eax
   2bf69:	89 44 24 10          	mov    %eax,0x10(%esp)
   2bf6d:	83 ec 04             	sub    $0x4,%esp
   2bf70:	80 4e 24 01          	orb    $0x1,0x24(%esi)
   2bf74:	6a 20                	push   $0x20
   2bf76:	55                   	push   %ebp
   2bf77:	57                   	push   %edi
   2bf78:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2bf7c:	e8 ff 34 fe ff       	call   f480 <alu_adc>
   2bf81:	89 f9                	mov    %edi,%ecx
   2bf83:	83 c4 10             	add    $0x10,%esp
   2bf86:	89 c3                	mov    %eax,%ebx
   2bf88:	89 e8                	mov    %ebp,%eax
   2bf8a:	f9                   	stc    
   2bf8b:	11 c8                	adc    %ecx,%eax
   2bf8d:	9c                   	pushf  
   2bf8e:	5a                   	pop    %edx
   2bf8f:	39 c3                	cmp    %eax,%ebx
   2bf91:	0f 85 78 09 00 00    	jne    2c90f <__score_alu_test_adc+0xc5f>
   2bf97:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2bf9b:	89 d1                	mov    %edx,%ecx
   2bf9d:	83 e1 01             	and    $0x1,%ecx
   2bfa0:	89 c3                	mov    %eax,%ebx
   2bfa2:	83 e3 01             	and    $0x1,%ebx
   2bfa5:	38 cb                	cmp    %cl,%bl
   2bfa7:	0f 85 4d 09 00 00    	jne    2c8fa <__score_alu_test_adc+0xc4a>
   2bfad:	89 c3                	mov    %eax,%ebx
   2bfaf:	89 d1                	mov    %edx,%ecx
   2bfb1:	c0 eb 02             	shr    $0x2,%bl
   2bfb4:	c1 e9 02             	shr    $0x2,%ecx
   2bfb7:	83 e3 01             	and    $0x1,%ebx
   2bfba:	83 e1 01             	and    $0x1,%ecx
   2bfbd:	38 cb                	cmp    %cl,%bl
   2bfbf:	0f 85 20 09 00 00    	jne    2c8e5 <__score_alu_test_adc+0xc35>
   2bfc5:	89 c3                	mov    %eax,%ebx
   2bfc7:	89 d1                	mov    %edx,%ecx
   2bfc9:	c0 eb 07             	shr    $0x7,%bl
   2bfcc:	c0 e9 07             	shr    $0x7,%cl
   2bfcf:	38 cb                	cmp    %cl,%bl
   2bfd1:	0f 85 f9 08 00 00    	jne    2c8d0 <__score_alu_test_adc+0xc20>
   2bfd7:	89 c3                	mov    %eax,%ebx
   2bfd9:	89 d1                	mov    %edx,%ecx
   2bfdb:	c0 eb 06             	shr    $0x6,%bl
   2bfde:	c1 e9 06             	shr    $0x6,%ecx
   2bfe1:	83 e3 01             	and    $0x1,%ebx
   2bfe4:	83 e1 01             	and    $0x1,%ecx
   2bfe7:	38 cb                	cmp    %cl,%bl
   2bfe9:	0f 85 cc 08 00 00    	jne    2c8bb <__score_alu_test_adc+0xc0b>
   2bfef:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2bff3:	c1 ea 0b             	shr    $0xb,%edx
   2bff6:	83 e2 01             	and    $0x1,%edx
   2bff9:	c0 e9 03             	shr    $0x3,%cl
   2bffc:	83 e1 01             	and    $0x1,%ecx
   2bfff:	38 d1                	cmp    %dl,%cl
   2c001:	0f 85 9f 08 00 00    	jne    2c8a6 <__score_alu_test_adc+0xbf6>
   2c007:	83 ec 04             	sub    $0x4,%esp
   2c00a:	83 c8 01             	or     $0x1,%eax
   2c00d:	88 46 24             	mov    %al,0x24(%esi)
   2c010:	6a 10                	push   $0x10
   2c012:	55                   	push   %ebp
   2c013:	57                   	push   %edi
   2c014:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c018:	e8 63 34 fe ff       	call   f480 <alu_adc>
   2c01d:	89 f9                	mov    %edi,%ecx
   2c01f:	83 c4 10             	add    $0x10,%esp
   2c022:	89 c3                	mov    %eax,%ebx
   2c024:	89 e8                	mov    %ebp,%eax
   2c026:	f9                   	stc    
   2c027:	66 11 c8             	adc    %cx,%ax
   2c02a:	9c                   	pushf  
   2c02b:	5a                   	pop    %edx
   2c02c:	0f b7 c0             	movzwl %ax,%eax
   2c02f:	39 c3                	cmp    %eax,%ebx
   2c031:	0f 85 5a 08 00 00    	jne    2c891 <__score_alu_test_adc+0xbe1>
   2c037:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c03b:	89 d1                	mov    %edx,%ecx
   2c03d:	83 e1 01             	and    $0x1,%ecx
   2c040:	89 c3                	mov    %eax,%ebx
   2c042:	83 e3 01             	and    $0x1,%ebx
   2c045:	38 cb                	cmp    %cl,%bl
   2c047:	0f 85 2f 08 00 00    	jne    2c87c <__score_alu_test_adc+0xbcc>
   2c04d:	89 c3                	mov    %eax,%ebx
   2c04f:	89 d1                	mov    %edx,%ecx
   2c051:	c0 eb 02             	shr    $0x2,%bl
   2c054:	c1 e9 02             	shr    $0x2,%ecx
   2c057:	83 e3 01             	and    $0x1,%ebx
   2c05a:	83 e1 01             	and    $0x1,%ecx
   2c05d:	38 cb                	cmp    %cl,%bl
   2c05f:	0f 85 02 08 00 00    	jne    2c867 <__score_alu_test_adc+0xbb7>
   2c065:	89 d1                	mov    %edx,%ecx
   2c067:	c0 e8 07             	shr    $0x7,%al
   2c06a:	c0 e9 07             	shr    $0x7,%cl
   2c06d:	38 c8                	cmp    %cl,%al
   2c06f:	0f 85 dd 07 00 00    	jne    2c852 <__score_alu_test_adc+0xba2>
   2c075:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c079:	89 d1                	mov    %edx,%ecx
   2c07b:	c1 e9 06             	shr    $0x6,%ecx
   2c07e:	89 c3                	mov    %eax,%ebx
   2c080:	83 e1 01             	and    $0x1,%ecx
   2c083:	c0 eb 06             	shr    $0x6,%bl
   2c086:	83 e3 01             	and    $0x1,%ebx
   2c089:	38 cb                	cmp    %cl,%bl
   2c08b:	0f 85 ac 07 00 00    	jne    2c83d <__score_alu_test_adc+0xb8d>
   2c091:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2c095:	c1 ea 0b             	shr    $0xb,%edx
   2c098:	83 e2 01             	and    $0x1,%edx
   2c09b:	c0 e9 03             	shr    $0x3,%cl
   2c09e:	83 e1 01             	and    $0x1,%ecx
   2c0a1:	38 d1                	cmp    %dl,%cl
   2c0a3:	0f 85 7f 07 00 00    	jne    2c828 <__score_alu_test_adc+0xb78>
   2c0a9:	83 ec 04             	sub    $0x4,%esp
   2c0ac:	83 c8 01             	or     $0x1,%eax
   2c0af:	88 46 24             	mov    %al,0x24(%esi)
   2c0b2:	6a 08                	push   $0x8
   2c0b4:	55                   	push   %ebp
   2c0b5:	57                   	push   %edi
   2c0b6:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c0ba:	e8 c1 33 fe ff       	call   f480 <alu_adc>
   2c0bf:	89 f9                	mov    %edi,%ecx
   2c0c1:	83 c4 10             	add    $0x10,%esp
   2c0c4:	89 c3                	mov    %eax,%ebx
   2c0c6:	89 e8                	mov    %ebp,%eax
   2c0c8:	f9                   	stc    
   2c0c9:	10 c8                	adc    %cl,%al
   2c0cb:	9c                   	pushf  
   2c0cc:	5a                   	pop    %edx
   2c0cd:	0f b6 c0             	movzbl %al,%eax
   2c0d0:	39 c3                	cmp    %eax,%ebx
   2c0d2:	0f 85 3b 07 00 00    	jne    2c813 <__score_alu_test_adc+0xb63>
   2c0d8:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c0dc:	89 d1                	mov    %edx,%ecx
   2c0de:	83 e1 01             	and    $0x1,%ecx
   2c0e1:	89 c3                	mov    %eax,%ebx
   2c0e3:	83 e3 01             	and    $0x1,%ebx
   2c0e6:	38 cb                	cmp    %cl,%bl
   2c0e8:	0f 85 10 07 00 00    	jne    2c7fe <__score_alu_test_adc+0xb4e>
   2c0ee:	89 c3                	mov    %eax,%ebx
   2c0f0:	89 d1                	mov    %edx,%ecx
   2c0f2:	c0 eb 02             	shr    $0x2,%bl
   2c0f5:	c1 e9 02             	shr    $0x2,%ecx
   2c0f8:	83 e3 01             	and    $0x1,%ebx
   2c0fb:	83 e1 01             	and    $0x1,%ecx
   2c0fe:	38 cb                	cmp    %cl,%bl
   2c100:	0f 85 e3 06 00 00    	jne    2c7e9 <__score_alu_test_adc+0xb39>
   2c106:	89 c3                	mov    %eax,%ebx
   2c108:	89 d1                	mov    %edx,%ecx
   2c10a:	c0 eb 07             	shr    $0x7,%bl
   2c10d:	c0 e9 07             	shr    $0x7,%cl
   2c110:	38 cb                	cmp    %cl,%bl
   2c112:	0f 85 bc 06 00 00    	jne    2c7d4 <__score_alu_test_adc+0xb24>
   2c118:	89 d1                	mov    %edx,%ecx
   2c11a:	c0 e8 06             	shr    $0x6,%al
   2c11d:	c1 e9 06             	shr    $0x6,%ecx
   2c120:	83 e0 01             	and    $0x1,%eax
   2c123:	83 e1 01             	and    $0x1,%ecx
   2c126:	38 c8                	cmp    %cl,%al
   2c128:	0f 85 91 06 00 00    	jne    2c7bf <__score_alu_test_adc+0xb0f>
   2c12e:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2c132:	c1 ea 0b             	shr    $0xb,%edx
   2c135:	83 e2 01             	and    $0x1,%edx
   2c138:	c0 e8 03             	shr    $0x3,%al
   2c13b:	83 e0 01             	and    $0x1,%eax
   2c13e:	38 d0                	cmp    %dl,%al
   2c140:	0f 85 64 06 00 00    	jne    2c7aa <__score_alu_test_adc+0xafa>
   2c146:	8b 7c 24 14          	mov    0x14(%esp),%edi
   2c14a:	39 7c 24 10          	cmp    %edi,0x10(%esp)
   2c14e:	0f 85 0c fe ff ff    	jne    2bf60 <__score_alu_test_adc+0x2b0>
   2c154:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2c158:	39 f8                	cmp    %edi,%eax
   2c15a:	74 14                	je     2c170 <__score_alu_test_adc+0x4c0>
   2c15c:	8b 28                	mov    (%eax),%ebp
   2c15e:	83 c0 04             	add    $0x4,%eax
   2c161:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2c165:	e9 e6 fd ff ff       	jmp    2bf50 <__score_alu_test_adc+0x2a0>
   2c16a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2c170:	83 ec 0c             	sub    $0xc,%esp
   2c173:	6a 00                	push   $0x0
   2c175:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   2c179:	89 fb                	mov    %edi,%ebx
   2c17b:	e8 b0 7f fd ff       	call   4130 <time@plt>
   2c180:	89 04 24             	mov    %eax,(%esp)
   2c183:	e8 08 80 fd ff       	call   4190 <srand@plt>
   2c188:	83 c4 10             	add    $0x10,%esp
   2c18b:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2c192:	00 
   2c193:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2c197:	90                   	nop
   2c198:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   2c19c:	89 fb                	mov    %edi,%ebx
   2c19e:	e8 4d 80 fd ff       	call   41f0 <rand@plt>
   2c1a3:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   2c1a7:	89 c5                	mov    %eax,%ebp
   2c1a9:	e8 42 80 fd ff       	call   41f0 <rand@plt>
   2c1ae:	83 ec 04             	sub    $0x4,%esp
   2c1b1:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
   2c1b5:	6a 20                	push   $0x20
   2c1b7:	89 c7                	mov    %eax,%edi
   2c1b9:	55                   	push   %ebp
   2c1ba:	50                   	push   %eax
   2c1bb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c1bf:	e8 bc 32 fe ff       	call   f480 <alu_adc>
   2c1c4:	89 f9                	mov    %edi,%ecx
   2c1c6:	83 c4 10             	add    $0x10,%esp
   2c1c9:	89 c3                	mov    %eax,%ebx
   2c1cb:	89 e8                	mov    %ebp,%eax
   2c1cd:	f8                   	clc    
   2c1ce:	11 c8                	adc    %ecx,%eax
   2c1d0:	9c                   	pushf  
   2c1d1:	5a                   	pop    %edx
   2c1d2:	39 c3                	cmp    %eax,%ebx
   2c1d4:	0f 85 bb 05 00 00    	jne    2c795 <__score_alu_test_adc+0xae5>
   2c1da:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c1de:	89 d1                	mov    %edx,%ecx
   2c1e0:	83 e1 01             	and    $0x1,%ecx
   2c1e3:	89 c3                	mov    %eax,%ebx
   2c1e5:	83 e3 01             	and    $0x1,%ebx
   2c1e8:	38 cb                	cmp    %cl,%bl
   2c1ea:	0f 85 90 05 00 00    	jne    2c780 <__score_alu_test_adc+0xad0>
   2c1f0:	89 c3                	mov    %eax,%ebx
   2c1f2:	89 d1                	mov    %edx,%ecx
   2c1f4:	c0 eb 02             	shr    $0x2,%bl
   2c1f7:	c1 e9 02             	shr    $0x2,%ecx
   2c1fa:	83 e3 01             	and    $0x1,%ebx
   2c1fd:	83 e1 01             	and    $0x1,%ecx
   2c200:	38 cb                	cmp    %cl,%bl
   2c202:	0f 85 63 05 00 00    	jne    2c76b <__score_alu_test_adc+0xabb>
   2c208:	89 c3                	mov    %eax,%ebx
   2c20a:	89 d1                	mov    %edx,%ecx
   2c20c:	c0 eb 07             	shr    $0x7,%bl
   2c20f:	c0 e9 07             	shr    $0x7,%cl
   2c212:	38 cb                	cmp    %cl,%bl
   2c214:	0f 85 3c 05 00 00    	jne    2c756 <__score_alu_test_adc+0xaa6>
   2c21a:	89 c3                	mov    %eax,%ebx
   2c21c:	89 d1                	mov    %edx,%ecx
   2c21e:	c0 eb 06             	shr    $0x6,%bl
   2c221:	c1 e9 06             	shr    $0x6,%ecx
   2c224:	83 e3 01             	and    $0x1,%ebx
   2c227:	83 e1 01             	and    $0x1,%ecx
   2c22a:	38 cb                	cmp    %cl,%bl
   2c22c:	0f 85 0f 05 00 00    	jne    2c741 <__score_alu_test_adc+0xa91>
   2c232:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2c236:	c1 ea 0b             	shr    $0xb,%edx
   2c239:	83 e2 01             	and    $0x1,%edx
   2c23c:	c0 e9 03             	shr    $0x3,%cl
   2c23f:	83 e1 01             	and    $0x1,%ecx
   2c242:	38 d1                	cmp    %dl,%cl
   2c244:	0f 85 e2 04 00 00    	jne    2c72c <__score_alu_test_adc+0xa7c>
   2c24a:	83 ec 04             	sub    $0x4,%esp
   2c24d:	83 e0 fe             	and    $0xfffffffe,%eax
   2c250:	88 46 24             	mov    %al,0x24(%esi)
   2c253:	6a 10                	push   $0x10
   2c255:	55                   	push   %ebp
   2c256:	57                   	push   %edi
   2c257:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c25b:	e8 20 32 fe ff       	call   f480 <alu_adc>
   2c260:	89 f9                	mov    %edi,%ecx
   2c262:	83 c4 10             	add    $0x10,%esp
   2c265:	89 c3                	mov    %eax,%ebx
   2c267:	89 e8                	mov    %ebp,%eax
   2c269:	f8                   	clc    
   2c26a:	66 11 c8             	adc    %cx,%ax
   2c26d:	9c                   	pushf  
   2c26e:	5a                   	pop    %edx
   2c26f:	0f b7 c0             	movzwl %ax,%eax
   2c272:	39 c3                	cmp    %eax,%ebx
   2c274:	0f 85 9d 04 00 00    	jne    2c717 <__score_alu_test_adc+0xa67>
   2c27a:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c27e:	89 d1                	mov    %edx,%ecx
   2c280:	83 e1 01             	and    $0x1,%ecx
   2c283:	89 c3                	mov    %eax,%ebx
   2c285:	83 e3 01             	and    $0x1,%ebx
   2c288:	38 cb                	cmp    %cl,%bl
   2c28a:	0f 85 72 04 00 00    	jne    2c702 <__score_alu_test_adc+0xa52>
   2c290:	89 c3                	mov    %eax,%ebx
   2c292:	89 d1                	mov    %edx,%ecx
   2c294:	c0 eb 02             	shr    $0x2,%bl
   2c297:	c1 e9 02             	shr    $0x2,%ecx
   2c29a:	83 e3 01             	and    $0x1,%ebx
   2c29d:	83 e1 01             	and    $0x1,%ecx
   2c2a0:	38 cb                	cmp    %cl,%bl
   2c2a2:	0f 85 45 04 00 00    	jne    2c6ed <__score_alu_test_adc+0xa3d>
   2c2a8:	89 d1                	mov    %edx,%ecx
   2c2aa:	c0 e8 07             	shr    $0x7,%al
   2c2ad:	c0 e9 07             	shr    $0x7,%cl
   2c2b0:	38 c8                	cmp    %cl,%al
   2c2b2:	0f 85 20 04 00 00    	jne    2c6d8 <__score_alu_test_adc+0xa28>
   2c2b8:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c2bc:	89 d1                	mov    %edx,%ecx
   2c2be:	c1 e9 06             	shr    $0x6,%ecx
   2c2c1:	89 c3                	mov    %eax,%ebx
   2c2c3:	83 e1 01             	and    $0x1,%ecx
   2c2c6:	c0 eb 06             	shr    $0x6,%bl
   2c2c9:	83 e3 01             	and    $0x1,%ebx
   2c2cc:	38 cb                	cmp    %cl,%bl
   2c2ce:	0f 85 ef 03 00 00    	jne    2c6c3 <__score_alu_test_adc+0xa13>
   2c2d4:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2c2d8:	c1 ea 0b             	shr    $0xb,%edx
   2c2db:	83 e2 01             	and    $0x1,%edx
   2c2de:	c0 e9 03             	shr    $0x3,%cl
   2c2e1:	83 e1 01             	and    $0x1,%ecx
   2c2e4:	38 d1                	cmp    %dl,%cl
   2c2e6:	0f 85 c2 03 00 00    	jne    2c6ae <__score_alu_test_adc+0x9fe>
   2c2ec:	83 ec 04             	sub    $0x4,%esp
   2c2ef:	83 e0 fe             	and    $0xfffffffe,%eax
   2c2f2:	88 46 24             	mov    %al,0x24(%esi)
   2c2f5:	6a 08                	push   $0x8
   2c2f7:	55                   	push   %ebp
   2c2f8:	57                   	push   %edi
   2c2f9:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c2fd:	e8 7e 31 fe ff       	call   f480 <alu_adc>
   2c302:	89 f9                	mov    %edi,%ecx
   2c304:	83 c4 10             	add    $0x10,%esp
   2c307:	89 c3                	mov    %eax,%ebx
   2c309:	89 e8                	mov    %ebp,%eax
   2c30b:	f8                   	clc    
   2c30c:	10 c8                	adc    %cl,%al
   2c30e:	9c                   	pushf  
   2c30f:	5a                   	pop    %edx
   2c310:	0f b6 c0             	movzbl %al,%eax
   2c313:	39 c3                	cmp    %eax,%ebx
   2c315:	0f 85 7e 03 00 00    	jne    2c699 <__score_alu_test_adc+0x9e9>
   2c31b:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c31f:	89 d1                	mov    %edx,%ecx
   2c321:	83 e1 01             	and    $0x1,%ecx
   2c324:	89 c3                	mov    %eax,%ebx
   2c326:	83 e3 01             	and    $0x1,%ebx
   2c329:	38 cb                	cmp    %cl,%bl
   2c32b:	0f 85 45 03 00 00    	jne    2c676 <__score_alu_test_adc+0x9c6>
   2c331:	89 c3                	mov    %eax,%ebx
   2c333:	89 d1                	mov    %edx,%ecx
   2c335:	c0 eb 02             	shr    $0x2,%bl
   2c338:	c1 e9 02             	shr    $0x2,%ecx
   2c33b:	83 e3 01             	and    $0x1,%ebx
   2c33e:	83 e1 01             	and    $0x1,%ecx
   2c341:	38 cb                	cmp    %cl,%bl
   2c343:	0f 85 0a 03 00 00    	jne    2c653 <__score_alu_test_adc+0x9a3>
   2c349:	89 c3                	mov    %eax,%ebx
   2c34b:	89 d1                	mov    %edx,%ecx
   2c34d:	c0 eb 07             	shr    $0x7,%bl
   2c350:	c0 e9 07             	shr    $0x7,%cl
   2c353:	38 cb                	cmp    %cl,%bl
   2c355:	0f 85 d5 02 00 00    	jne    2c630 <__score_alu_test_adc+0x980>
   2c35b:	89 d1                	mov    %edx,%ecx
   2c35d:	c0 e8 06             	shr    $0x6,%al
   2c360:	c1 e9 06             	shr    $0x6,%ecx
   2c363:	83 e0 01             	and    $0x1,%eax
   2c366:	83 e1 01             	and    $0x1,%ecx
   2c369:	38 c8                	cmp    %cl,%al
   2c36b:	0f 85 9c 02 00 00    	jne    2c60d <__score_alu_test_adc+0x95d>
   2c371:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2c375:	c1 ea 0b             	shr    $0xb,%edx
   2c378:	83 e2 01             	and    $0x1,%edx
   2c37b:	c0 e8 03             	shr    $0x3,%al
   2c37e:	83 e0 01             	and    $0x1,%eax
   2c381:	38 d0                	cmp    %dl,%al
   2c383:	0f 85 61 02 00 00    	jne    2c5ea <__score_alu_test_adc+0x93a>
   2c389:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2c38e:	0f 85 04 fe ff ff    	jne    2c198 <__score_alu_test_adc+0x4e8>
   2c394:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2c39b:	00 
   2c39c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2c3a0:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   2c3a4:	89 fb                	mov    %edi,%ebx
   2c3a6:	e8 45 7e fd ff       	call   41f0 <rand@plt>
   2c3ab:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   2c3af:	89 c5                	mov    %eax,%ebp
   2c3b1:	e8 3a 7e fd ff       	call   41f0 <rand@plt>
   2c3b6:	83 ec 04             	sub    $0x4,%esp
   2c3b9:	80 4e 24 01          	orb    $0x1,0x24(%esi)
   2c3bd:	6a 20                	push   $0x20
   2c3bf:	89 c7                	mov    %eax,%edi
   2c3c1:	55                   	push   %ebp
   2c3c2:	50                   	push   %eax
   2c3c3:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c3c7:	e8 b4 30 fe ff       	call   f480 <alu_adc>
   2c3cc:	89 f9                	mov    %edi,%ecx
   2c3ce:	83 c4 10             	add    $0x10,%esp
   2c3d1:	89 c3                	mov    %eax,%ebx
   2c3d3:	89 e8                	mov    %ebp,%eax
   2c3d5:	f9                   	stc    
   2c3d6:	11 c8                	adc    %ecx,%eax
   2c3d8:	9c                   	pushf  
   2c3d9:	5a                   	pop    %edx
   2c3da:	39 c3                	cmp    %eax,%ebx
   2c3dc:	0f 85 64 07 00 00    	jne    2cb46 <__score_alu_test_adc+0xe96>
   2c3e2:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c3e6:	89 d1                	mov    %edx,%ecx
   2c3e8:	83 e1 01             	and    $0x1,%ecx
   2c3eb:	89 c3                	mov    %eax,%ebx
   2c3ed:	83 e3 01             	and    $0x1,%ebx
   2c3f0:	38 cb                	cmp    %cl,%bl
   2c3f2:	0f 85 24 07 00 00    	jne    2cb1c <__score_alu_test_adc+0xe6c>
   2c3f8:	89 c3                	mov    %eax,%ebx
   2c3fa:	89 d1                	mov    %edx,%ecx
   2c3fc:	c0 eb 02             	shr    $0x2,%bl
   2c3ff:	c1 e9 02             	shr    $0x2,%ecx
   2c402:	83 e3 01             	and    $0x1,%ebx
   2c405:	83 e1 01             	and    $0x1,%ecx
   2c408:	38 cb                	cmp    %cl,%bl
   2c40a:	0f 85 f7 06 00 00    	jne    2cb07 <__score_alu_test_adc+0xe57>
   2c410:	89 c3                	mov    %eax,%ebx
   2c412:	89 d1                	mov    %edx,%ecx
   2c414:	c0 eb 07             	shr    $0x7,%bl
   2c417:	c0 e9 07             	shr    $0x7,%cl
   2c41a:	38 cb                	cmp    %cl,%bl
   2c41c:	0f 85 67 06 00 00    	jne    2ca89 <__score_alu_test_adc+0xdd9>
   2c422:	89 c3                	mov    %eax,%ebx
   2c424:	89 d1                	mov    %edx,%ecx
   2c426:	c0 eb 06             	shr    $0x6,%bl
   2c429:	c1 e9 06             	shr    $0x6,%ecx
   2c42c:	83 e3 01             	and    $0x1,%ebx
   2c42f:	83 e1 01             	and    $0x1,%ecx
   2c432:	38 cb                	cmp    %cl,%bl
   2c434:	0f 85 64 06 00 00    	jne    2ca9e <__score_alu_test_adc+0xdee>
   2c43a:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2c43e:	c1 ea 0b             	shr    $0xb,%edx
   2c441:	83 e2 01             	and    $0x1,%edx
   2c444:	c0 e9 03             	shr    $0x3,%cl
   2c447:	83 e1 01             	and    $0x1,%ecx
   2c44a:	38 d1                	cmp    %dl,%cl
   2c44c:	0f 85 61 06 00 00    	jne    2cab3 <__score_alu_test_adc+0xe03>
   2c452:	83 ec 04             	sub    $0x4,%esp
   2c455:	83 c8 01             	or     $0x1,%eax
   2c458:	88 46 24             	mov    %al,0x24(%esi)
   2c45b:	6a 10                	push   $0x10
   2c45d:	55                   	push   %ebp
   2c45e:	57                   	push   %edi
   2c45f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c463:	e8 18 30 fe ff       	call   f480 <alu_adc>
   2c468:	89 f9                	mov    %edi,%ecx
   2c46a:	83 c4 10             	add    $0x10,%esp
   2c46d:	89 c3                	mov    %eax,%ebx
   2c46f:	89 e8                	mov    %ebp,%eax
   2c471:	f9                   	stc    
   2c472:	66 11 c8             	adc    %cx,%ax
   2c475:	9c                   	pushf  
   2c476:	5a                   	pop    %edx
   2c477:	0f b7 c0             	movzwl %ax,%eax
   2c47a:	39 c3                	cmp    %eax,%ebx
   2c47c:	0f 85 46 06 00 00    	jne    2cac8 <__score_alu_test_adc+0xe18>
   2c482:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c486:	89 d1                	mov    %edx,%ecx
   2c488:	83 e1 01             	and    $0x1,%ecx
   2c48b:	89 c3                	mov    %eax,%ebx
   2c48d:	83 e3 01             	and    $0x1,%ebx
   2c490:	38 cb                	cmp    %cl,%bl
   2c492:	0f 85 45 06 00 00    	jne    2cadd <__score_alu_test_adc+0xe2d>
   2c498:	89 c3                	mov    %eax,%ebx
   2c49a:	89 d1                	mov    %edx,%ecx
   2c49c:	c0 eb 02             	shr    $0x2,%bl
   2c49f:	c1 e9 02             	shr    $0x2,%ecx
   2c4a2:	83 e3 01             	and    $0x1,%ebx
   2c4a5:	83 e1 01             	and    $0x1,%ecx
   2c4a8:	38 cb                	cmp    %cl,%bl
   2c4aa:	0f 85 42 06 00 00    	jne    2caf2 <__score_alu_test_adc+0xe42>
   2c4b0:	89 d1                	mov    %edx,%ecx
   2c4b2:	c0 e8 07             	shr    $0x7,%al
   2c4b5:	c0 e9 07             	shr    $0x7,%cl
   2c4b8:	38 c8                	cmp    %cl,%al
   2c4ba:	0f 85 9b 06 00 00    	jne    2cb5b <__score_alu_test_adc+0xeab>
   2c4c0:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c4c4:	89 d1                	mov    %edx,%ecx
   2c4c6:	c1 e9 06             	shr    $0x6,%ecx
   2c4c9:	89 c3                	mov    %eax,%ebx
   2c4cb:	83 e1 01             	and    $0x1,%ecx
   2c4ce:	c0 eb 06             	shr    $0x6,%bl
   2c4d1:	83 e3 01             	and    $0x1,%ebx
   2c4d4:	38 cb                	cmp    %cl,%bl
   2c4d6:	0f 85 94 06 00 00    	jne    2cb70 <__score_alu_test_adc+0xec0>
   2c4dc:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2c4e0:	c1 ea 0b             	shr    $0xb,%edx
   2c4e3:	83 e2 01             	and    $0x1,%edx
   2c4e6:	c0 e9 03             	shr    $0x3,%cl
   2c4e9:	83 e1 01             	and    $0x1,%ecx
   2c4ec:	38 d1                	cmp    %dl,%cl
   2c4ee:	0f 85 91 06 00 00    	jne    2cb85 <__score_alu_test_adc+0xed5>
   2c4f4:	83 ec 04             	sub    $0x4,%esp
   2c4f7:	83 c8 01             	or     $0x1,%eax
   2c4fa:	88 46 24             	mov    %al,0x24(%esi)
   2c4fd:	6a 08                	push   $0x8
   2c4ff:	55                   	push   %ebp
   2c500:	57                   	push   %edi
   2c501:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2c505:	e8 76 2f fe ff       	call   f480 <alu_adc>
   2c50a:	89 f9                	mov    %edi,%ecx
   2c50c:	83 c4 10             	add    $0x10,%esp
   2c50f:	89 c3                	mov    %eax,%ebx
   2c511:	89 e8                	mov    %ebp,%eax
   2c513:	f9                   	stc    
   2c514:	10 c8                	adc    %cl,%al
   2c516:	9c                   	pushf  
   2c517:	5a                   	pop    %edx
   2c518:	0f b6 c0             	movzbl %al,%eax
   2c51b:	39 c3                	cmp    %eax,%ebx
   2c51d:	0f 85 77 06 00 00    	jne    2cb9a <__score_alu_test_adc+0xeea>
   2c523:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2c527:	89 d1                	mov    %edx,%ecx
   2c529:	83 e1 01             	and    $0x1,%ecx
   2c52c:	89 c3                	mov    %eax,%ebx
   2c52e:	83 e3 01             	and    $0x1,%ebx
   2c531:	38 cb                	cmp    %cl,%bl
   2c533:	0f 85 76 06 00 00    	jne    2cbaf <__score_alu_test_adc+0xeff>
   2c539:	89 c3                	mov    %eax,%ebx
   2c53b:	89 d1                	mov    %edx,%ecx
   2c53d:	c0 eb 02             	shr    $0x2,%bl
   2c540:	c1 e9 02             	shr    $0x2,%ecx
   2c543:	83 e3 01             	and    $0x1,%ebx
   2c546:	83 e1 01             	and    $0x1,%ecx
   2c549:	38 cb                	cmp    %cl,%bl
   2c54b:	0f 85 73 06 00 00    	jne    2cbc4 <__score_alu_test_adc+0xf14>
   2c551:	89 c3                	mov    %eax,%ebx
   2c553:	89 d1                	mov    %edx,%ecx
   2c555:	c0 eb 07             	shr    $0x7,%bl
   2c558:	c0 e9 07             	shr    $0x7,%cl
   2c55b:	38 cb                	cmp    %cl,%bl
   2c55d:	0f 85 76 06 00 00    	jne    2cbd9 <__score_alu_test_adc+0xf29>
   2c563:	89 d1                	mov    %edx,%ecx
   2c565:	c0 e8 06             	shr    $0x6,%al
   2c568:	c1 e9 06             	shr    $0x6,%ecx
   2c56b:	83 e0 01             	and    $0x1,%eax
   2c56e:	83 e1 01             	and    $0x1,%ecx
   2c571:	38 c8                	cmp    %cl,%al
   2c573:	0f 85 75 06 00 00    	jne    2cbee <__score_alu_test_adc+0xf3e>
   2c579:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2c57d:	c1 ea 0b             	shr    $0xb,%edx
   2c580:	83 e2 01             	and    $0x1,%edx
   2c583:	c0 e8 03             	shr    $0x3,%al
   2c586:	83 e0 01             	and    $0x1,%eax
   2c589:	38 d0                	cmp    %dl,%al
   2c58b:	0f 85 a0 05 00 00    	jne    2cb31 <__score_alu_test_adc+0xe81>
   2c591:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2c596:	0f 85 04 fe ff ff    	jne    2c3a0 <__score_alu_test_adc+0x6f0>
   2c59c:	83 ec 0c             	sub    $0xc,%esp
   2c59f:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2c5a3:	8d 87 fc 70 fe ff    	lea    -0x18f04(%edi),%eax
   2c5a9:	89 fb                	mov    %edi,%ebx
   2c5ab:	50                   	push   %eax
   2c5ac:	e8 ff 7c fd ff       	call   42b0 <puts@plt>
   2c5b1:	8d 87 aa 6f fe ff    	lea    -0x19056(%edi),%eax
   2c5b7:	89 04 24             	mov    %eax,(%esp)
   2c5ba:	e8 61 e2 ff ff       	call   2a820 <score_reg_alu_fpu>
   2c5bf:	83 c4 5c             	add    $0x5c,%esp
   2c5c2:	5b                   	pop    %ebx
   2c5c3:	5e                   	pop    %esi
   2c5c4:	5f                   	pop    %edi
   2c5c5:	5d                   	pop    %ebp
   2c5c6:	c3                   	ret    
   2c5c7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c5cb:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c5d1:	50                   	push   %eax
   2c5d2:	68 86 00 00 00       	push   $0x86
   2c5d7:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2c5dd:	50                   	push   %eax
   2c5de:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   2c5e4:	50                   	push   %eax
   2c5e5:	e8 26 7d fd ff       	call   4310 <__assert_fail@plt>
   2c5ea:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c5ee:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c5f4:	50                   	push   %eax
   2c5f5:	68 9c 00 00 00       	push   $0x9c
   2c5fa:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2c600:	50                   	push   %eax
   2c601:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   2c607:	50                   	push   %eax
   2c608:	e8 03 7d fd ff       	call   4310 <__assert_fail@plt>
   2c60d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c611:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c617:	50                   	push   %eax
   2c618:	68 9c 00 00 00       	push   $0x9c
   2c61d:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2c623:	50                   	push   %eax
   2c624:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2c62a:	50                   	push   %eax
   2c62b:	e8 e0 7c fd ff       	call   4310 <__assert_fail@plt>
   2c630:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c634:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c63a:	50                   	push   %eax
   2c63b:	68 9c 00 00 00       	push   $0x9c
   2c640:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2c646:	50                   	push   %eax
   2c647:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2c64d:	50                   	push   %eax
   2c64e:	e8 bd 7c fd ff       	call   4310 <__assert_fail@plt>
   2c653:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c657:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c65d:	50                   	push   %eax
   2c65e:	68 9c 00 00 00       	push   $0x9c
   2c663:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2c669:	50                   	push   %eax
   2c66a:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2c670:	50                   	push   %eax
   2c671:	e8 9a 7c fd ff       	call   4310 <__assert_fail@plt>
   2c676:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c67a:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c680:	50                   	push   %eax
   2c681:	68 9c 00 00 00       	push   $0x9c
   2c686:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2c68c:	50                   	push   %eax
   2c68d:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2c693:	50                   	push   %eax
   2c694:	e8 77 7c fd ff       	call   4310 <__assert_fail@plt>
   2c699:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c69d:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c6a3:	50                   	push   %eax
   2c6a4:	68 9c 00 00 00       	push   $0x9c
   2c6a9:	e9 29 ff ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2c6ae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c6b2:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c6b8:	50                   	push   %eax
   2c6b9:	68 9b 00 00 00       	push   $0x9b
   2c6be:	e9 37 ff ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2c6c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c6c7:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c6cd:	50                   	push   %eax
   2c6ce:	68 9b 00 00 00       	push   $0x9b
   2c6d3:	e9 45 ff ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2c6d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c6dc:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c6e2:	50                   	push   %eax
   2c6e3:	68 9b 00 00 00       	push   $0x9b
   2c6e8:	e9 53 ff ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2c6ed:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c6f1:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c6f7:	50                   	push   %eax
   2c6f8:	68 9b 00 00 00       	push   $0x9b
   2c6fd:	e9 61 ff ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2c702:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c706:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c70c:	50                   	push   %eax
   2c70d:	68 9b 00 00 00       	push   $0x9b
   2c712:	e9 6f ff ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2c717:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c71b:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c721:	50                   	push   %eax
   2c722:	68 9b 00 00 00       	push   $0x9b
   2c727:	e9 ab fe ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2c72c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c730:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c736:	50                   	push   %eax
   2c737:	68 9a 00 00 00       	push   $0x9a
   2c73c:	e9 b9 fe ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2c741:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c745:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c74b:	50                   	push   %eax
   2c74c:	68 9a 00 00 00       	push   $0x9a
   2c751:	e9 c7 fe ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2c756:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c75a:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c760:	50                   	push   %eax
   2c761:	68 9a 00 00 00       	push   $0x9a
   2c766:	e9 d5 fe ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2c76b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c76f:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c775:	50                   	push   %eax
   2c776:	68 9a 00 00 00       	push   $0x9a
   2c77b:	e9 e3 fe ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2c780:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c784:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c78a:	50                   	push   %eax
   2c78b:	68 9a 00 00 00       	push   $0x9a
   2c790:	e9 f1 fe ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2c795:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c799:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c79f:	50                   	push   %eax
   2c7a0:	68 9a 00 00 00       	push   $0x9a
   2c7a5:	e9 2d fe ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2c7aa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c7ae:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c7b4:	50                   	push   %eax
   2c7b5:	68 92 00 00 00       	push   $0x92
   2c7ba:	e9 3b fe ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2c7bf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c7c3:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c7c9:	50                   	push   %eax
   2c7ca:	68 92 00 00 00       	push   $0x92
   2c7cf:	e9 49 fe ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2c7d4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c7d8:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c7de:	50                   	push   %eax
   2c7df:	68 92 00 00 00       	push   $0x92
   2c7e4:	e9 57 fe ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2c7e9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c7ed:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c7f3:	50                   	push   %eax
   2c7f4:	68 92 00 00 00       	push   $0x92
   2c7f9:	e9 65 fe ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2c7fe:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c802:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c808:	50                   	push   %eax
   2c809:	68 92 00 00 00       	push   $0x92
   2c80e:	e9 73 fe ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2c813:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c817:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c81d:	50                   	push   %eax
   2c81e:	68 92 00 00 00       	push   $0x92
   2c823:	e9 af fd ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2c828:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c82c:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c832:	50                   	push   %eax
   2c833:	68 91 00 00 00       	push   $0x91
   2c838:	e9 bd fd ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2c83d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c841:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c847:	50                   	push   %eax
   2c848:	68 91 00 00 00       	push   $0x91
   2c84d:	e9 cb fd ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2c852:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c856:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c85c:	50                   	push   %eax
   2c85d:	68 91 00 00 00       	push   $0x91
   2c862:	e9 d9 fd ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2c867:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c86b:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c871:	50                   	push   %eax
   2c872:	68 91 00 00 00       	push   $0x91
   2c877:	e9 e7 fd ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2c87c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c880:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c886:	50                   	push   %eax
   2c887:	68 91 00 00 00       	push   $0x91
   2c88c:	e9 f5 fd ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2c891:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c895:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c89b:	50                   	push   %eax
   2c89c:	68 91 00 00 00       	push   $0x91
   2c8a1:	e9 31 fd ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2c8a6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c8aa:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c8b0:	50                   	push   %eax
   2c8b1:	68 90 00 00 00       	push   $0x90
   2c8b6:	e9 3f fd ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2c8bb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c8bf:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c8c5:	50                   	push   %eax
   2c8c6:	68 90 00 00 00       	push   $0x90
   2c8cb:	e9 4d fd ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2c8d0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c8d4:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c8da:	50                   	push   %eax
   2c8db:	68 90 00 00 00       	push   $0x90
   2c8e0:	e9 5b fd ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2c8e5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c8e9:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c8ef:	50                   	push   %eax
   2c8f0:	68 90 00 00 00       	push   $0x90
   2c8f5:	e9 69 fd ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2c8fa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c8fe:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c904:	50                   	push   %eax
   2c905:	68 90 00 00 00       	push   $0x90
   2c90a:	e9 77 fd ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2c90f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c913:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c919:	50                   	push   %eax
   2c91a:	68 90 00 00 00       	push   $0x90
   2c91f:	e9 b3 fc ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2c924:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c928:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c92e:	50                   	push   %eax
   2c92f:	68 88 00 00 00       	push   $0x88
   2c934:	e9 c1 fc ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2c939:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c93d:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c943:	50                   	push   %eax
   2c944:	68 88 00 00 00       	push   $0x88
   2c949:	e9 cf fc ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2c94e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c952:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c958:	50                   	push   %eax
   2c959:	68 88 00 00 00       	push   $0x88
   2c95e:	e9 dd fc ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2c963:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c967:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c96d:	50                   	push   %eax
   2c96e:	68 88 00 00 00       	push   $0x88
   2c973:	e9 eb fc ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2c978:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c97c:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c982:	50                   	push   %eax
   2c983:	68 88 00 00 00       	push   $0x88
   2c988:	e9 f9 fc ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2c98d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c991:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c997:	50                   	push   %eax
   2c998:	68 88 00 00 00       	push   $0x88
   2c99d:	e9 35 fc ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2c9a2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c9a6:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c9ac:	50                   	push   %eax
   2c9ad:	68 87 00 00 00       	push   $0x87
   2c9b2:	e9 43 fc ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2c9b7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c9bb:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c9c1:	50                   	push   %eax
   2c9c2:	68 87 00 00 00       	push   $0x87
   2c9c7:	e9 51 fc ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2c9cc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c9d0:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c9d6:	50                   	push   %eax
   2c9d7:	68 87 00 00 00       	push   $0x87
   2c9dc:	e9 5f fc ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2c9e1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c9e5:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2c9eb:	50                   	push   %eax
   2c9ec:	68 87 00 00 00       	push   $0x87
   2c9f1:	e9 6d fc ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2c9f6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2c9fa:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca00:	50                   	push   %eax
   2ca01:	68 87 00 00 00       	push   $0x87
   2ca06:	e9 7b fc ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2ca0b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ca0f:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca15:	50                   	push   %eax
   2ca16:	68 87 00 00 00       	push   $0x87
   2ca1b:	e9 b7 fb ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2ca20:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ca24:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca2a:	50                   	push   %eax
   2ca2b:	68 86 00 00 00       	push   $0x86
   2ca30:	e9 c5 fb ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2ca35:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ca39:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca3f:	50                   	push   %eax
   2ca40:	68 86 00 00 00       	push   $0x86
   2ca45:	e9 d3 fb ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2ca4a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ca4e:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca54:	50                   	push   %eax
   2ca55:	68 86 00 00 00       	push   $0x86
   2ca5a:	e9 e1 fb ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2ca5f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ca63:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca69:	50                   	push   %eax
   2ca6a:	68 86 00 00 00       	push   $0x86
   2ca6f:	e9 ef fb ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2ca74:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ca78:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca7e:	50                   	push   %eax
   2ca7f:	68 86 00 00 00       	push   $0x86
   2ca84:	e9 fd fb ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2ca89:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ca8d:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2ca93:	50                   	push   %eax
   2ca94:	68 a2 00 00 00       	push   $0xa2
   2ca99:	e9 a2 fb ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2ca9e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2caa2:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2caa8:	50                   	push   %eax
   2caa9:	68 a2 00 00 00       	push   $0xa2
   2caae:	e9 6a fb ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2cab3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cab7:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cabd:	50                   	push   %eax
   2cabe:	68 a2 00 00 00       	push   $0xa2
   2cac3:	e9 32 fb ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2cac8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cacc:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cad2:	50                   	push   %eax
   2cad3:	68 a3 00 00 00       	push   $0xa3
   2cad8:	e9 fa fa ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2cadd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cae1:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cae7:	50                   	push   %eax
   2cae8:	68 a3 00 00 00       	push   $0xa3
   2caed:	e9 94 fb ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2caf2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2caf6:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cafc:	50                   	push   %eax
   2cafd:	68 a3 00 00 00       	push   $0xa3
   2cb02:	e9 5c fb ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2cb07:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb0b:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cb11:	50                   	push   %eax
   2cb12:	68 a2 00 00 00       	push   $0xa2
   2cb17:	e9 47 fb ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2cb1c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb20:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cb26:	50                   	push   %eax
   2cb27:	68 a2 00 00 00       	push   $0xa2
   2cb2c:	e9 55 fb ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2cb31:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb35:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cb3b:	50                   	push   %eax
   2cb3c:	68 a4 00 00 00       	push   $0xa4
   2cb41:	e9 b4 fa ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2cb46:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb4a:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cb50:	50                   	push   %eax
   2cb51:	68 a2 00 00 00       	push   $0xa2
   2cb56:	e9 7c fa ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2cb5b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb5f:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cb65:	50                   	push   %eax
   2cb66:	68 a3 00 00 00       	push   $0xa3
   2cb6b:	e9 d0 fa ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2cb70:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb74:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cb7a:	50                   	push   %eax
   2cb7b:	68 a3 00 00 00       	push   $0xa3
   2cb80:	e9 98 fa ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2cb85:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb89:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cb8f:	50                   	push   %eax
   2cb90:	68 a3 00 00 00       	push   $0xa3
   2cb95:	e9 60 fa ff ff       	jmp    2c5fa <__score_alu_test_adc+0x94a>
   2cb9a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cb9e:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cba4:	50                   	push   %eax
   2cba5:	68 a4 00 00 00       	push   $0xa4
   2cbaa:	e9 28 fa ff ff       	jmp    2c5d7 <__score_alu_test_adc+0x927>
   2cbaf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cbb3:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cbb9:	50                   	push   %eax
   2cbba:	68 a4 00 00 00       	push   $0xa4
   2cbbf:	e9 c2 fa ff ff       	jmp    2c686 <__score_alu_test_adc+0x9d6>
   2cbc4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cbc8:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cbce:	50                   	push   %eax
   2cbcf:	68 a4 00 00 00       	push   $0xa4
   2cbd4:	e9 8a fa ff ff       	jmp    2c663 <__score_alu_test_adc+0x9b3>
   2cbd9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cbdd:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cbe3:	50                   	push   %eax
   2cbe4:	68 a4 00 00 00       	push   $0xa4
   2cbe9:	e9 52 fa ff ff       	jmp    2c640 <__score_alu_test_adc+0x990>
   2cbee:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2cbf2:	8d 83 60 74 fe ff    	lea    -0x18ba0(%ebx),%eax
   2cbf8:	50                   	push   %eax
   2cbf9:	68 a4 00 00 00       	push   $0xa4
   2cbfe:	e9 1a fa ff ff       	jmp    2c61d <__score_alu_test_adc+0x96d>
   2cc03:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2cc0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002cc10 <__score_alu_test_sub>:
   2cc10:	e8 c2 96 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2cc15:	05 eb 23 02 00       	add    $0x223eb,%eax
   2cc1a:	55                   	push   %ebp
   2cc1b:	57                   	push   %edi
   2cc1c:	56                   	push   %esi
   2cc1d:	53                   	push   %ebx
   2cc1e:	83 ec 4c             	sub    $0x4c,%esp
   2cc21:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
   2cc27:	8d 74 24 40          	lea    0x40(%esp),%esi
   2cc2b:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2cc2f:	8d 7c 24 28          	lea    0x28(%esp),%edi
   2cc33:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
   2cc3a:	10 
   2cc3b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
   2cc42:	ff 
   2cc43:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
   2cc4a:	ff 
   2cc4b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
   2cc52:	ff 
   2cc53:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   2cc5a:	00 
   2cc5b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   2cc62:	00 
   2cc63:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   2cc6a:	00 
   2cc6b:	89 74 24 14          	mov    %esi,0x14(%esp)
   2cc6f:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   2cc73:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2cc77:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2cc7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2cc80:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2cc84:	be 00 00 00 10       	mov    $0x10000000,%esi
   2cc89:	89 44 24 10          	mov    %eax,0x10(%esp)
   2cc8d:	eb 0e                	jmp    2cc9d <__score_alu_test_sub+0x8d>
   2cc8f:	90                   	nop
   2cc90:	8b 44 24 10          	mov    0x10(%esp),%eax
   2cc94:	8b 30                	mov    (%eax),%esi
   2cc96:	83 c0 04             	add    $0x4,%eax
   2cc99:	89 44 24 10          	mov    %eax,0x10(%esp)
   2cc9d:	83 ec 04             	sub    $0x4,%esp
   2cca0:	6a 20                	push   $0x20
   2cca2:	57                   	push   %edi
   2cca3:	56                   	push   %esi
   2cca4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2cca8:	e8 c3 28 fe ff       	call   f570 <alu_sub>
   2ccad:	89 f1                	mov    %esi,%ecx
   2ccaf:	83 c4 10             	add    $0x10,%esp
   2ccb2:	89 c3                	mov    %eax,%ebx
   2ccb4:	89 f8                	mov    %edi,%eax
   2ccb6:	29 c8                	sub    %ecx,%eax
   2ccb8:	9c                   	pushf  
   2ccb9:	5a                   	pop    %edx
   2ccba:	39 c3                	cmp    %eax,%ebx
   2ccbc:	0f 85 18 06 00 00    	jne    2d2da <__score_alu_test_sub+0x6ca>
   2ccc2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2ccc6:	89 d1                	mov    %edx,%ecx
   2ccc8:	83 e1 01             	and    $0x1,%ecx
   2cccb:	89 c3                	mov    %eax,%ebx
   2cccd:	83 e3 01             	and    $0x1,%ebx
   2ccd0:	38 cb                	cmp    %cl,%bl
   2ccd2:	0f 85 ed 05 00 00    	jne    2d2c5 <__score_alu_test_sub+0x6b5>
   2ccd8:	89 c3                	mov    %eax,%ebx
   2ccda:	89 d1                	mov    %edx,%ecx
   2ccdc:	c0 eb 02             	shr    $0x2,%bl
   2ccdf:	c1 e9 02             	shr    $0x2,%ecx
   2cce2:	83 e3 01             	and    $0x1,%ebx
   2cce5:	83 e1 01             	and    $0x1,%ecx
   2cce8:	38 cb                	cmp    %cl,%bl
   2ccea:	0f 85 ff 05 00 00    	jne    2d2ef <__score_alu_test_sub+0x6df>
   2ccf0:	89 c3                	mov    %eax,%ebx
   2ccf2:	89 d1                	mov    %edx,%ecx
   2ccf4:	c0 eb 07             	shr    $0x7,%bl
   2ccf7:	c0 e9 07             	shr    $0x7,%cl
   2ccfa:	38 cb                	cmp    %cl,%bl
   2ccfc:	0f 85 aa 06 00 00    	jne    2d3ac <__score_alu_test_sub+0x79c>
   2cd02:	89 d1                	mov    %edx,%ecx
   2cd04:	c0 e8 06             	shr    $0x6,%al
   2cd07:	c1 e9 06             	shr    $0x6,%ecx
   2cd0a:	83 e0 01             	and    $0x1,%eax
   2cd0d:	83 e1 01             	and    $0x1,%ecx
   2cd10:	38 c8                	cmp    %cl,%al
   2cd12:	0f 85 7f 06 00 00    	jne    2d397 <__score_alu_test_sub+0x787>
   2cd18:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2cd1c:	c1 ea 0b             	shr    $0xb,%edx
   2cd1f:	83 e2 01             	and    $0x1,%edx
   2cd22:	c0 e8 03             	shr    $0x3,%al
   2cd25:	83 e0 01             	and    $0x1,%eax
   2cd28:	38 d0                	cmp    %dl,%al
   2cd2a:	0f 85 52 06 00 00    	jne    2d382 <__score_alu_test_sub+0x772>
   2cd30:	83 ec 04             	sub    $0x4,%esp
   2cd33:	6a 10                	push   $0x10
   2cd35:	57                   	push   %edi
   2cd36:	56                   	push   %esi
   2cd37:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2cd3b:	e8 30 28 fe ff       	call   f570 <alu_sub>
   2cd40:	89 f1                	mov    %esi,%ecx
   2cd42:	83 c4 10             	add    $0x10,%esp
   2cd45:	89 c3                	mov    %eax,%ebx
   2cd47:	89 f8                	mov    %edi,%eax
   2cd49:	66 29 c8             	sub    %cx,%ax
   2cd4c:	9c                   	pushf  
   2cd4d:	5a                   	pop    %edx
   2cd4e:	0f b7 c0             	movzwl %ax,%eax
   2cd51:	39 c3                	cmp    %eax,%ebx
   2cd53:	0f 85 14 06 00 00    	jne    2d36d <__score_alu_test_sub+0x75d>
   2cd59:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2cd5d:	89 d1                	mov    %edx,%ecx
   2cd5f:	83 e1 01             	and    $0x1,%ecx
   2cd62:	89 c3                	mov    %eax,%ebx
   2cd64:	83 e3 01             	and    $0x1,%ebx
   2cd67:	38 cb                	cmp    %cl,%bl
   2cd69:	0f 85 e9 05 00 00    	jne    2d358 <__score_alu_test_sub+0x748>
   2cd6f:	89 c3                	mov    %eax,%ebx
   2cd71:	89 d1                	mov    %edx,%ecx
   2cd73:	c0 eb 02             	shr    $0x2,%bl
   2cd76:	c1 e9 02             	shr    $0x2,%ecx
   2cd79:	83 e3 01             	and    $0x1,%ebx
   2cd7c:	83 e1 01             	and    $0x1,%ecx
   2cd7f:	38 cb                	cmp    %cl,%bl
   2cd81:	0f 85 14 05 00 00    	jne    2d29b <__score_alu_test_sub+0x68b>
   2cd87:	89 d1                	mov    %edx,%ecx
   2cd89:	c0 e8 07             	shr    $0x7,%al
   2cd8c:	c0 e9 07             	shr    $0x7,%cl
   2cd8f:	38 c8                	cmp    %cl,%al
   2cd91:	0f 85 ef 04 00 00    	jne    2d286 <__score_alu_test_sub+0x676>
   2cd97:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2cd9b:	89 d1                	mov    %edx,%ecx
   2cd9d:	c1 e9 06             	shr    $0x6,%ecx
   2cda0:	c0 e8 06             	shr    $0x6,%al
   2cda3:	83 e1 01             	and    $0x1,%ecx
   2cda6:	83 e0 01             	and    $0x1,%eax
   2cda9:	38 c8                	cmp    %cl,%al
   2cdab:	0f 85 ff 04 00 00    	jne    2d2b0 <__score_alu_test_sub+0x6a0>
   2cdb1:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2cdb5:	c1 ea 0b             	shr    $0xb,%edx
   2cdb8:	83 e2 01             	and    $0x1,%edx
   2cdbb:	c0 e8 03             	shr    $0x3,%al
   2cdbe:	83 e0 01             	and    $0x1,%eax
   2cdc1:	38 d0                	cmp    %dl,%al
   2cdc3:	0f 85 3b 05 00 00    	jne    2d304 <__score_alu_test_sub+0x6f4>
   2cdc9:	83 ec 04             	sub    $0x4,%esp
   2cdcc:	6a 08                	push   $0x8
   2cdce:	57                   	push   %edi
   2cdcf:	56                   	push   %esi
   2cdd0:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2cdd4:	e8 97 27 fe ff       	call   f570 <alu_sub>
   2cdd9:	89 f1                	mov    %esi,%ecx
   2cddb:	83 c4 10             	add    $0x10,%esp
   2cdde:	89 c3                	mov    %eax,%ebx
   2cde0:	89 f8                	mov    %edi,%eax
   2cde2:	28 c8                	sub    %cl,%al
   2cde4:	9c                   	pushf  
   2cde5:	5a                   	pop    %edx
   2cde6:	0f b6 c0             	movzbl %al,%eax
   2cde9:	39 c3                	cmp    %eax,%ebx
   2cdeb:	0f 85 fa 05 00 00    	jne    2d3eb <__score_alu_test_sub+0x7db>
   2cdf1:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2cdf5:	89 d1                	mov    %edx,%ecx
   2cdf7:	83 e1 01             	and    $0x1,%ecx
   2cdfa:	89 c3                	mov    %eax,%ebx
   2cdfc:	83 e3 01             	and    $0x1,%ebx
   2cdff:	38 cb                	cmp    %cl,%bl
   2ce01:	0f 85 cf 05 00 00    	jne    2d3d6 <__score_alu_test_sub+0x7c6>
   2ce07:	89 c3                	mov    %eax,%ebx
   2ce09:	89 d1                	mov    %edx,%ecx
   2ce0b:	c0 eb 02             	shr    $0x2,%bl
   2ce0e:	c1 e9 02             	shr    $0x2,%ecx
   2ce11:	83 e3 01             	and    $0x1,%ebx
   2ce14:	83 e1 01             	and    $0x1,%ecx
   2ce17:	38 cb                	cmp    %cl,%bl
   2ce19:	0f 85 a2 05 00 00    	jne    2d3c1 <__score_alu_test_sub+0x7b1>
   2ce1f:	89 c3                	mov    %eax,%ebx
   2ce21:	89 d1                	mov    %edx,%ecx
   2ce23:	c0 eb 07             	shr    $0x7,%bl
   2ce26:	c0 e9 07             	shr    $0x7,%cl
   2ce29:	38 cb                	cmp    %cl,%bl
   2ce2b:	0f 85 fd 04 00 00    	jne    2d32e <__score_alu_test_sub+0x71e>
   2ce31:	89 d1                	mov    %edx,%ecx
   2ce33:	c0 e8 06             	shr    $0x6,%al
   2ce36:	c1 e9 06             	shr    $0x6,%ecx
   2ce39:	83 e0 01             	and    $0x1,%eax
   2ce3c:	83 e1 01             	and    $0x1,%ecx
   2ce3f:	38 c8                	cmp    %cl,%al
   2ce41:	0f 85 d2 04 00 00    	jne    2d319 <__score_alu_test_sub+0x709>
   2ce47:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2ce4b:	c1 ea 0b             	shr    $0xb,%edx
   2ce4e:	83 e2 01             	and    $0x1,%edx
   2ce51:	c0 e8 03             	shr    $0x3,%al
   2ce54:	83 e0 01             	and    $0x1,%eax
   2ce57:	38 d0                	cmp    %dl,%al
   2ce59:	0f 85 e4 04 00 00    	jne    2d343 <__score_alu_test_sub+0x733>
   2ce5f:	8b 74 24 14          	mov    0x14(%esp),%esi
   2ce63:	39 74 24 10          	cmp    %esi,0x10(%esp)
   2ce67:	0f 85 23 fe ff ff    	jne    2cc90 <__score_alu_test_sub+0x80>
   2ce6d:	8b 44 24 18          	mov    0x18(%esp),%eax
   2ce71:	39 f0                	cmp    %esi,%eax
   2ce73:	74 13                	je     2ce88 <__score_alu_test_sub+0x278>
   2ce75:	8b 38                	mov    (%eax),%edi
   2ce77:	83 c0 04             	add    $0x4,%eax
   2ce7a:	89 44 24 18          	mov    %eax,0x18(%esp)
   2ce7e:	e9 fd fd ff ff       	jmp    2cc80 <__score_alu_test_sub+0x70>
   2ce83:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ce87:	90                   	nop
   2ce88:	83 ec 0c             	sub    $0xc,%esp
   2ce8b:	6a 00                	push   $0x0
   2ce8d:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   2ce91:	89 fb                	mov    %edi,%ebx
   2ce93:	e8 98 72 fd ff       	call   4130 <time@plt>
   2ce98:	89 04 24             	mov    %eax,(%esp)
   2ce9b:	e8 f0 72 fd ff       	call   4190 <srand@plt>
   2cea0:	83 c4 10             	add    $0x10,%esp
   2cea3:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2ceaa:	00 
   2ceab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ceaf:	90                   	nop
   2ceb0:	8b 74 24 0c          	mov    0xc(%esp),%esi
   2ceb4:	89 f3                	mov    %esi,%ebx
   2ceb6:	e8 35 73 fd ff       	call   41f0 <rand@plt>
   2cebb:	89 74 24 0c          	mov    %esi,0xc(%esp)
   2cebf:	89 c7                	mov    %eax,%edi
   2cec1:	e8 2a 73 fd ff       	call   41f0 <rand@plt>
   2cec6:	83 ec 04             	sub    $0x4,%esp
   2cec9:	6a 20                	push   $0x20
   2cecb:	89 c6                	mov    %eax,%esi
   2cecd:	57                   	push   %edi
   2cece:	50                   	push   %eax
   2cecf:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2ced3:	e8 98 26 fe ff       	call   f570 <alu_sub>
   2ced8:	89 f1                	mov    %esi,%ecx
   2ceda:	83 c4 10             	add    $0x10,%esp
   2cedd:	89 c3                	mov    %eax,%ebx
   2cedf:	89 f8                	mov    %edi,%eax
   2cee1:	29 c8                	sub    %ecx,%eax
   2cee3:	9c                   	pushf  
   2cee4:	5a                   	pop    %edx
   2cee5:	39 c3                	cmp    %eax,%ebx
   2cee7:	0f 85 84 03 00 00    	jne    2d271 <__score_alu_test_sub+0x661>
   2ceed:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2cef1:	89 d1                	mov    %edx,%ecx
   2cef3:	83 e1 01             	and    $0x1,%ecx
   2cef6:	89 c3                	mov    %eax,%ebx
   2cef8:	83 e3 01             	and    $0x1,%ebx
   2cefb:	38 cb                	cmp    %cl,%bl
   2cefd:	0f 85 59 03 00 00    	jne    2d25c <__score_alu_test_sub+0x64c>
   2cf03:	89 c3                	mov    %eax,%ebx
   2cf05:	89 d1                	mov    %edx,%ecx
   2cf07:	c0 eb 02             	shr    $0x2,%bl
   2cf0a:	c1 e9 02             	shr    $0x2,%ecx
   2cf0d:	83 e3 01             	and    $0x1,%ebx
   2cf10:	83 e1 01             	and    $0x1,%ecx
   2cf13:	38 cb                	cmp    %cl,%bl
   2cf15:	0f 85 2c 03 00 00    	jne    2d247 <__score_alu_test_sub+0x637>
   2cf1b:	89 c3                	mov    %eax,%ebx
   2cf1d:	89 d1                	mov    %edx,%ecx
   2cf1f:	c0 eb 07             	shr    $0x7,%bl
   2cf22:	c0 e9 07             	shr    $0x7,%cl
   2cf25:	38 cb                	cmp    %cl,%bl
   2cf27:	0f 85 05 03 00 00    	jne    2d232 <__score_alu_test_sub+0x622>
   2cf2d:	89 d1                	mov    %edx,%ecx
   2cf2f:	c0 e8 06             	shr    $0x6,%al
   2cf32:	c1 e9 06             	shr    $0x6,%ecx
   2cf35:	83 e0 01             	and    $0x1,%eax
   2cf38:	83 e1 01             	and    $0x1,%ecx
   2cf3b:	38 c8                	cmp    %cl,%al
   2cf3d:	0f 85 da 02 00 00    	jne    2d21d <__score_alu_test_sub+0x60d>
   2cf43:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2cf47:	c1 ea 0b             	shr    $0xb,%edx
   2cf4a:	83 e2 01             	and    $0x1,%edx
   2cf4d:	c0 e8 03             	shr    $0x3,%al
   2cf50:	83 e0 01             	and    $0x1,%eax
   2cf53:	38 d0                	cmp    %dl,%al
   2cf55:	0f 85 ad 02 00 00    	jne    2d208 <__score_alu_test_sub+0x5f8>
   2cf5b:	83 ec 04             	sub    $0x4,%esp
   2cf5e:	6a 10                	push   $0x10
   2cf60:	57                   	push   %edi
   2cf61:	56                   	push   %esi
   2cf62:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2cf66:	e8 05 26 fe ff       	call   f570 <alu_sub>
   2cf6b:	89 f1                	mov    %esi,%ecx
   2cf6d:	83 c4 10             	add    $0x10,%esp
   2cf70:	89 c3                	mov    %eax,%ebx
   2cf72:	89 f8                	mov    %edi,%eax
   2cf74:	66 29 c8             	sub    %cx,%ax
   2cf77:	9c                   	pushf  
   2cf78:	5a                   	pop    %edx
   2cf79:	0f b7 c0             	movzwl %ax,%eax
   2cf7c:	39 c3                	cmp    %eax,%ebx
   2cf7e:	0f 85 6f 02 00 00    	jne    2d1f3 <__score_alu_test_sub+0x5e3>
   2cf84:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2cf88:	89 d1                	mov    %edx,%ecx
   2cf8a:	83 e1 01             	and    $0x1,%ecx
   2cf8d:	89 c3                	mov    %eax,%ebx
   2cf8f:	83 e3 01             	and    $0x1,%ebx
   2cf92:	38 cb                	cmp    %cl,%bl
   2cf94:	0f 85 44 02 00 00    	jne    2d1de <__score_alu_test_sub+0x5ce>
   2cf9a:	89 c3                	mov    %eax,%ebx
   2cf9c:	89 d1                	mov    %edx,%ecx
   2cf9e:	c0 eb 02             	shr    $0x2,%bl
   2cfa1:	c1 e9 02             	shr    $0x2,%ecx
   2cfa4:	83 e3 01             	and    $0x1,%ebx
   2cfa7:	83 e1 01             	and    $0x1,%ecx
   2cfaa:	38 cb                	cmp    %cl,%bl
   2cfac:	0f 85 17 02 00 00    	jne    2d1c9 <__score_alu_test_sub+0x5b9>
   2cfb2:	89 d1                	mov    %edx,%ecx
   2cfb4:	c0 e8 07             	shr    $0x7,%al
   2cfb7:	c0 e9 07             	shr    $0x7,%cl
   2cfba:	38 c8                	cmp    %cl,%al
   2cfbc:	0f 85 f2 01 00 00    	jne    2d1b4 <__score_alu_test_sub+0x5a4>
   2cfc2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2cfc6:	89 d1                	mov    %edx,%ecx
   2cfc8:	c1 e9 06             	shr    $0x6,%ecx
   2cfcb:	c0 e8 06             	shr    $0x6,%al
   2cfce:	83 e1 01             	and    $0x1,%ecx
   2cfd1:	83 e0 01             	and    $0x1,%eax
   2cfd4:	38 c8                	cmp    %cl,%al
   2cfd6:	0f 85 c3 01 00 00    	jne    2d19f <__score_alu_test_sub+0x58f>
   2cfdc:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2cfe0:	c1 ea 0b             	shr    $0xb,%edx
   2cfe3:	83 e2 01             	and    $0x1,%edx
   2cfe6:	c0 e8 03             	shr    $0x3,%al
   2cfe9:	83 e0 01             	and    $0x1,%eax
   2cfec:	38 d0                	cmp    %dl,%al
   2cfee:	0f 85 96 01 00 00    	jne    2d18a <__score_alu_test_sub+0x57a>
   2cff4:	83 ec 04             	sub    $0x4,%esp
   2cff7:	6a 08                	push   $0x8
   2cff9:	57                   	push   %edi
   2cffa:	56                   	push   %esi
   2cffb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2cfff:	e8 6c 25 fe ff       	call   f570 <alu_sub>
   2d004:	89 f1                	mov    %esi,%ecx
   2d006:	83 c4 10             	add    $0x10,%esp
   2d009:	89 c3                	mov    %eax,%ebx
   2d00b:	89 f8                	mov    %edi,%eax
   2d00d:	28 c8                	sub    %cl,%al
   2d00f:	9c                   	pushf  
   2d010:	5a                   	pop    %edx
   2d011:	0f b6 c0             	movzbl %al,%eax
   2d014:	39 c3                	cmp    %eax,%ebx
   2d016:	0f 85 4b 01 00 00    	jne    2d167 <__score_alu_test_sub+0x557>
   2d01c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2d020:	89 d1                	mov    %edx,%ecx
   2d022:	83 e1 01             	and    $0x1,%ecx
   2d025:	89 c3                	mov    %eax,%ebx
   2d027:	83 e3 01             	and    $0x1,%ebx
   2d02a:	38 cb                	cmp    %cl,%bl
   2d02c:	0f 85 12 01 00 00    	jne    2d144 <__score_alu_test_sub+0x534>
   2d032:	89 c3                	mov    %eax,%ebx
   2d034:	89 d1                	mov    %edx,%ecx
   2d036:	c0 eb 02             	shr    $0x2,%bl
   2d039:	c1 e9 02             	shr    $0x2,%ecx
   2d03c:	83 e3 01             	and    $0x1,%ebx
   2d03f:	83 e1 01             	and    $0x1,%ecx
   2d042:	38 cb                	cmp    %cl,%bl
   2d044:	0f 85 d7 00 00 00    	jne    2d121 <__score_alu_test_sub+0x511>
   2d04a:	89 c3                	mov    %eax,%ebx
   2d04c:	89 d1                	mov    %edx,%ecx
   2d04e:	c0 eb 07             	shr    $0x7,%bl
   2d051:	c0 e9 07             	shr    $0x7,%cl
   2d054:	38 cb                	cmp    %cl,%bl
   2d056:	0f 85 a2 00 00 00    	jne    2d0fe <__score_alu_test_sub+0x4ee>
   2d05c:	89 d1                	mov    %edx,%ecx
   2d05e:	c0 e8 06             	shr    $0x6,%al
   2d061:	c1 e9 06             	shr    $0x6,%ecx
   2d064:	83 e0 01             	and    $0x1,%eax
   2d067:	83 e1 01             	and    $0x1,%ecx
   2d06a:	38 c8                	cmp    %cl,%al
   2d06c:	75 6d                	jne    2d0db <__score_alu_test_sub+0x4cb>
   2d06e:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2d072:	c1 ea 0b             	shr    $0xb,%edx
   2d075:	83 e2 01             	and    $0x1,%edx
   2d078:	c0 e8 03             	shr    $0x3,%al
   2d07b:	83 e0 01             	and    $0x1,%eax
   2d07e:	38 d0                	cmp    %dl,%al
   2d080:	75 36                	jne    2d0b8 <__score_alu_test_sub+0x4a8>
   2d082:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2d087:	0f 85 23 fe ff ff    	jne    2ceb0 <__score_alu_test_sub+0x2a0>
   2d08d:	83 ec 0c             	sub    $0xc,%esp
   2d090:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2d094:	8d 87 24 71 fe ff    	lea    -0x18edc(%edi),%eax
   2d09a:	89 fb                	mov    %edi,%ebx
   2d09c:	50                   	push   %eax
   2d09d:	e8 0e 72 fd ff       	call   42b0 <puts@plt>
   2d0a2:	8d 87 bf 6f fe ff    	lea    -0x19041(%edi),%eax
   2d0a8:	89 04 24             	mov    %eax,(%esp)
   2d0ab:	e8 70 d7 ff ff       	call   2a820 <score_reg_alu_fpu>
   2d0b0:	83 c4 5c             	add    $0x5c,%esp
   2d0b3:	5b                   	pop    %ebx
   2d0b4:	5e                   	pop    %esi
   2d0b5:	5f                   	pop    %edi
   2d0b6:	5d                   	pop    %ebp
   2d0b7:	c3                   	ret    
   2d0b8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d0bc:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d0c2:	50                   	push   %eax
   2d0c3:	68 c0 00 00 00       	push   $0xc0
   2d0c8:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2d0ce:	50                   	push   %eax
   2d0cf:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   2d0d5:	50                   	push   %eax
   2d0d6:	e8 35 72 fd ff       	call   4310 <__assert_fail@plt>
   2d0db:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d0df:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d0e5:	50                   	push   %eax
   2d0e6:	68 c0 00 00 00       	push   $0xc0
   2d0eb:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2d0f1:	50                   	push   %eax
   2d0f2:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2d0f8:	50                   	push   %eax
   2d0f9:	e8 12 72 fd ff       	call   4310 <__assert_fail@plt>
   2d0fe:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d102:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d108:	50                   	push   %eax
   2d109:	68 c0 00 00 00       	push   $0xc0
   2d10e:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2d114:	50                   	push   %eax
   2d115:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2d11b:	50                   	push   %eax
   2d11c:	e8 ef 71 fd ff       	call   4310 <__assert_fail@plt>
   2d121:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d125:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d12b:	50                   	push   %eax
   2d12c:	68 c0 00 00 00       	push   $0xc0
   2d131:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2d137:	50                   	push   %eax
   2d138:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2d13e:	50                   	push   %eax
   2d13f:	e8 cc 71 fd ff       	call   4310 <__assert_fail@plt>
   2d144:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d148:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d14e:	50                   	push   %eax
   2d14f:	68 c0 00 00 00       	push   $0xc0
   2d154:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2d15a:	50                   	push   %eax
   2d15b:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2d161:	50                   	push   %eax
   2d162:	e8 a9 71 fd ff       	call   4310 <__assert_fail@plt>
   2d167:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d16b:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d171:	50                   	push   %eax
   2d172:	68 c0 00 00 00       	push   $0xc0
   2d177:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2d17d:	50                   	push   %eax
   2d17e:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   2d184:	50                   	push   %eax
   2d185:	e8 86 71 fd ff       	call   4310 <__assert_fail@plt>
   2d18a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d18e:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d194:	50                   	push   %eax
   2d195:	68 bf 00 00 00       	push   $0xbf
   2d19a:	e9 29 ff ff ff       	jmp    2d0c8 <__score_alu_test_sub+0x4b8>
   2d19f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d1a3:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d1a9:	50                   	push   %eax
   2d1aa:	68 bf 00 00 00       	push   $0xbf
   2d1af:	e9 37 ff ff ff       	jmp    2d0eb <__score_alu_test_sub+0x4db>
   2d1b4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d1b8:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d1be:	50                   	push   %eax
   2d1bf:	68 bf 00 00 00       	push   $0xbf
   2d1c4:	e9 45 ff ff ff       	jmp    2d10e <__score_alu_test_sub+0x4fe>
   2d1c9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d1cd:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d1d3:	50                   	push   %eax
   2d1d4:	68 bf 00 00 00       	push   $0xbf
   2d1d9:	e9 53 ff ff ff       	jmp    2d131 <__score_alu_test_sub+0x521>
   2d1de:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d1e2:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d1e8:	50                   	push   %eax
   2d1e9:	68 bf 00 00 00       	push   $0xbf
   2d1ee:	e9 61 ff ff ff       	jmp    2d154 <__score_alu_test_sub+0x544>
   2d1f3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d1f7:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d1fd:	50                   	push   %eax
   2d1fe:	68 bf 00 00 00       	push   $0xbf
   2d203:	e9 6f ff ff ff       	jmp    2d177 <__score_alu_test_sub+0x567>
   2d208:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d20c:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d212:	50                   	push   %eax
   2d213:	68 be 00 00 00       	push   $0xbe
   2d218:	e9 ab fe ff ff       	jmp    2d0c8 <__score_alu_test_sub+0x4b8>
   2d21d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d221:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d227:	50                   	push   %eax
   2d228:	68 be 00 00 00       	push   $0xbe
   2d22d:	e9 b9 fe ff ff       	jmp    2d0eb <__score_alu_test_sub+0x4db>
   2d232:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d236:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d23c:	50                   	push   %eax
   2d23d:	68 be 00 00 00       	push   $0xbe
   2d242:	e9 c7 fe ff ff       	jmp    2d10e <__score_alu_test_sub+0x4fe>
   2d247:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d24b:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d251:	50                   	push   %eax
   2d252:	68 be 00 00 00       	push   $0xbe
   2d257:	e9 d5 fe ff ff       	jmp    2d131 <__score_alu_test_sub+0x521>
   2d25c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d260:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d266:	50                   	push   %eax
   2d267:	68 be 00 00 00       	push   $0xbe
   2d26c:	e9 e3 fe ff ff       	jmp    2d154 <__score_alu_test_sub+0x544>
   2d271:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d275:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d27b:	50                   	push   %eax
   2d27c:	68 be 00 00 00       	push   $0xbe
   2d281:	e9 f1 fe ff ff       	jmp    2d177 <__score_alu_test_sub+0x567>
   2d286:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d28a:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d290:	50                   	push   %eax
   2d291:	68 b5 00 00 00       	push   $0xb5
   2d296:	e9 73 fe ff ff       	jmp    2d10e <__score_alu_test_sub+0x4fe>
   2d29b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d29f:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d2a5:	50                   	push   %eax
   2d2a6:	68 b5 00 00 00       	push   $0xb5
   2d2ab:	e9 81 fe ff ff       	jmp    2d131 <__score_alu_test_sub+0x521>
   2d2b0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d2b4:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d2ba:	50                   	push   %eax
   2d2bb:	68 b5 00 00 00       	push   $0xb5
   2d2c0:	e9 26 fe ff ff       	jmp    2d0eb <__score_alu_test_sub+0x4db>
   2d2c5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d2c9:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d2cf:	50                   	push   %eax
   2d2d0:	68 b4 00 00 00       	push   $0xb4
   2d2d5:	e9 7a fe ff ff       	jmp    2d154 <__score_alu_test_sub+0x544>
   2d2da:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d2de:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d2e4:	50                   	push   %eax
   2d2e5:	68 b4 00 00 00       	push   $0xb4
   2d2ea:	e9 88 fe ff ff       	jmp    2d177 <__score_alu_test_sub+0x567>
   2d2ef:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d2f3:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d2f9:	50                   	push   %eax
   2d2fa:	68 b4 00 00 00       	push   $0xb4
   2d2ff:	e9 2d fe ff ff       	jmp    2d131 <__score_alu_test_sub+0x521>
   2d304:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d308:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d30e:	50                   	push   %eax
   2d30f:	68 b5 00 00 00       	push   $0xb5
   2d314:	e9 af fd ff ff       	jmp    2d0c8 <__score_alu_test_sub+0x4b8>
   2d319:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d31d:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d323:	50                   	push   %eax
   2d324:	68 b6 00 00 00       	push   $0xb6
   2d329:	e9 bd fd ff ff       	jmp    2d0eb <__score_alu_test_sub+0x4db>
   2d32e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d332:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d338:	50                   	push   %eax
   2d339:	68 b6 00 00 00       	push   $0xb6
   2d33e:	e9 cb fd ff ff       	jmp    2d10e <__score_alu_test_sub+0x4fe>
   2d343:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d347:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d34d:	50                   	push   %eax
   2d34e:	68 b6 00 00 00       	push   $0xb6
   2d353:	e9 70 fd ff ff       	jmp    2d0c8 <__score_alu_test_sub+0x4b8>
   2d358:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d35c:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d362:	50                   	push   %eax
   2d363:	68 b5 00 00 00       	push   $0xb5
   2d368:	e9 e7 fd ff ff       	jmp    2d154 <__score_alu_test_sub+0x544>
   2d36d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d371:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d377:	50                   	push   %eax
   2d378:	68 b5 00 00 00       	push   $0xb5
   2d37d:	e9 f5 fd ff ff       	jmp    2d177 <__score_alu_test_sub+0x567>
   2d382:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d386:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d38c:	50                   	push   %eax
   2d38d:	68 b4 00 00 00       	push   $0xb4
   2d392:	e9 31 fd ff ff       	jmp    2d0c8 <__score_alu_test_sub+0x4b8>
   2d397:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d39b:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d3a1:	50                   	push   %eax
   2d3a2:	68 b4 00 00 00       	push   $0xb4
   2d3a7:	e9 3f fd ff ff       	jmp    2d0eb <__score_alu_test_sub+0x4db>
   2d3ac:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d3b0:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d3b6:	50                   	push   %eax
   2d3b7:	68 b4 00 00 00       	push   $0xb4
   2d3bc:	e9 4d fd ff ff       	jmp    2d10e <__score_alu_test_sub+0x4fe>
   2d3c1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d3c5:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d3cb:	50                   	push   %eax
   2d3cc:	68 b6 00 00 00       	push   $0xb6
   2d3d1:	e9 5b fd ff ff       	jmp    2d131 <__score_alu_test_sub+0x521>
   2d3d6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d3da:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d3e0:	50                   	push   %eax
   2d3e1:	68 b6 00 00 00       	push   $0xb6
   2d3e6:	e9 69 fd ff ff       	jmp    2d154 <__score_alu_test_sub+0x544>
   2d3eb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2d3ef:	8d 83 48 74 fe ff    	lea    -0x18bb8(%ebx),%eax
   2d3f5:	50                   	push   %eax
   2d3f6:	68 b6 00 00 00       	push   $0xb6
   2d3fb:	e9 77 fd ff ff       	jmp    2d177 <__score_alu_test_sub+0x567>

0002d400 <__score_alu_test_sbb>:
   2d400:	e8 d2 8e fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2d405:	05 fb 1b 02 00       	add    $0x21bfb,%eax
   2d40a:	55                   	push   %ebp
   2d40b:	bd 00 00 00 10       	mov    $0x10000000,%ebp
   2d410:	57                   	push   %edi
   2d411:	56                   	push   %esi
   2d412:	53                   	push   %ebx
   2d413:	83 ec 4c             	sub    $0x4c,%esp
   2d416:	8d 7c 24 24          	lea    0x24(%esp),%edi
   2d41a:	8d 74 24 40          	lea    0x40(%esp),%esi
   2d41e:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2d422:	c7 44 24 20 00 00 00 	movl   $0x10000000,0x20(%esp)
   2d429:	10 
   2d42a:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
   2d431:	ff 
   2d432:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
   2d439:	ff 
   2d43a:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
   2d441:	ff 
   2d442:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
   2d449:	00 
   2d44a:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%esp)
   2d451:	00 
   2d452:	c7 44 24 38 02 00 00 	movl   $0x2,0x38(%esp)
   2d459:	00 
   2d45a:	c7 44 24 3c 00 00 00 	movl   $0x80000000,0x3c(%esp)
   2d461:	80 
   2d462:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2d466:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   2d46a:	89 74 24 14          	mov    %esi,0x14(%esp)
   2d46e:	8d b0 60 32 05 00    	lea    0x53260(%eax),%esi
   2d474:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2d478:	8b 44 24 18          	mov    0x18(%esp),%eax
   2d47c:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2d481:	89 44 24 10          	mov    %eax,0x10(%esp)
   2d485:	eb 16                	jmp    2d49d <__score_alu_test_sbb+0x9d>
   2d487:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2d48e:	66 90                	xchg   %ax,%ax
   2d490:	8b 44 24 10          	mov    0x10(%esp),%eax
   2d494:	8b 38                	mov    (%eax),%edi
   2d496:	83 c0 04             	add    $0x4,%eax
   2d499:	89 44 24 10          	mov    %eax,0x10(%esp)
   2d49d:	83 ec 04             	sub    $0x4,%esp
   2d4a0:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
   2d4a4:	6a 20                	push   $0x20
   2d4a6:	55                   	push   %ebp
   2d4a7:	57                   	push   %edi
   2d4a8:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d4ac:	e8 af 21 fe ff       	call   f660 <alu_sbb>
   2d4b1:	89 f9                	mov    %edi,%ecx
   2d4b3:	83 c4 10             	add    $0x10,%esp
   2d4b6:	89 c3                	mov    %eax,%ebx
   2d4b8:	89 e8                	mov    %ebp,%eax
   2d4ba:	f8                   	clc    
   2d4bb:	19 c8                	sbb    %ecx,%eax
   2d4bd:	9c                   	pushf  
   2d4be:	5a                   	pop    %edx
   2d4bf:	39 c3                	cmp    %eax,%ebx
   2d4c1:	0f 85 60 08 00 00    	jne    2dd27 <__score_alu_test_sbb+0x927>
   2d4c7:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d4cb:	89 d1                	mov    %edx,%ecx
   2d4cd:	83 e1 01             	and    $0x1,%ecx
   2d4d0:	89 c3                	mov    %eax,%ebx
   2d4d2:	83 e3 01             	and    $0x1,%ebx
   2d4d5:	38 cb                	cmp    %cl,%bl
   2d4d7:	0f 85 03 0a 00 00    	jne    2dee0 <__score_alu_test_sbb+0xae0>
   2d4dd:	89 c3                	mov    %eax,%ebx
   2d4df:	89 d1                	mov    %edx,%ecx
   2d4e1:	c0 eb 02             	shr    $0x2,%bl
   2d4e4:	c1 e9 02             	shr    $0x2,%ecx
   2d4e7:	83 e3 01             	and    $0x1,%ebx
   2d4ea:	83 e1 01             	and    $0x1,%ecx
   2d4ed:	38 cb                	cmp    %cl,%bl
   2d4ef:	0f 85 d6 09 00 00    	jne    2decb <__score_alu_test_sbb+0xacb>
   2d4f5:	89 c3                	mov    %eax,%ebx
   2d4f7:	89 d1                	mov    %edx,%ecx
   2d4f9:	c0 eb 07             	shr    $0x7,%bl
   2d4fc:	c0 e9 07             	shr    $0x7,%cl
   2d4ff:	38 cb                	cmp    %cl,%bl
   2d501:	0f 85 af 09 00 00    	jne    2deb6 <__score_alu_test_sbb+0xab6>
   2d507:	89 c3                	mov    %eax,%ebx
   2d509:	89 d1                	mov    %edx,%ecx
   2d50b:	c0 eb 06             	shr    $0x6,%bl
   2d50e:	c1 e9 06             	shr    $0x6,%ecx
   2d511:	83 e3 01             	and    $0x1,%ebx
   2d514:	83 e1 01             	and    $0x1,%ecx
   2d517:	38 cb                	cmp    %cl,%bl
   2d519:	0f 85 82 09 00 00    	jne    2dea1 <__score_alu_test_sbb+0xaa1>
   2d51f:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2d523:	c1 ea 0b             	shr    $0xb,%edx
   2d526:	83 e2 01             	and    $0x1,%edx
   2d529:	c0 e9 03             	shr    $0x3,%cl
   2d52c:	83 e1 01             	and    $0x1,%ecx
   2d52f:	38 d1                	cmp    %dl,%cl
   2d531:	0f 85 55 09 00 00    	jne    2de8c <__score_alu_test_sbb+0xa8c>
   2d537:	83 ec 04             	sub    $0x4,%esp
   2d53a:	83 e0 fe             	and    $0xfffffffe,%eax
   2d53d:	88 46 24             	mov    %al,0x24(%esi)
   2d540:	6a 10                	push   $0x10
   2d542:	55                   	push   %ebp
   2d543:	57                   	push   %edi
   2d544:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d548:	e8 13 21 fe ff       	call   f660 <alu_sbb>
   2d54d:	89 f9                	mov    %edi,%ecx
   2d54f:	83 c4 10             	add    $0x10,%esp
   2d552:	89 c3                	mov    %eax,%ebx
   2d554:	89 e8                	mov    %ebp,%eax
   2d556:	f8                   	clc    
   2d557:	66 19 c8             	sbb    %cx,%ax
   2d55a:	9c                   	pushf  
   2d55b:	5a                   	pop    %edx
   2d55c:	0f b7 c0             	movzwl %ax,%eax
   2d55f:	39 c3                	cmp    %eax,%ebx
   2d561:	0f 85 10 09 00 00    	jne    2de77 <__score_alu_test_sbb+0xa77>
   2d567:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d56b:	89 d1                	mov    %edx,%ecx
   2d56d:	83 e1 01             	and    $0x1,%ecx
   2d570:	89 c3                	mov    %eax,%ebx
   2d572:	83 e3 01             	and    $0x1,%ebx
   2d575:	38 cb                	cmp    %cl,%bl
   2d577:	0f 85 e5 08 00 00    	jne    2de62 <__score_alu_test_sbb+0xa62>
   2d57d:	89 c3                	mov    %eax,%ebx
   2d57f:	89 d1                	mov    %edx,%ecx
   2d581:	c0 eb 02             	shr    $0x2,%bl
   2d584:	c1 e9 02             	shr    $0x2,%ecx
   2d587:	83 e3 01             	and    $0x1,%ebx
   2d58a:	83 e1 01             	and    $0x1,%ecx
   2d58d:	38 cb                	cmp    %cl,%bl
   2d58f:	0f 85 b8 08 00 00    	jne    2de4d <__score_alu_test_sbb+0xa4d>
   2d595:	89 d1                	mov    %edx,%ecx
   2d597:	c0 e8 07             	shr    $0x7,%al
   2d59a:	c0 e9 07             	shr    $0x7,%cl
   2d59d:	38 c8                	cmp    %cl,%al
   2d59f:	0f 85 93 08 00 00    	jne    2de38 <__score_alu_test_sbb+0xa38>
   2d5a5:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d5a9:	89 d1                	mov    %edx,%ecx
   2d5ab:	c1 e9 06             	shr    $0x6,%ecx
   2d5ae:	89 c3                	mov    %eax,%ebx
   2d5b0:	83 e1 01             	and    $0x1,%ecx
   2d5b3:	c0 eb 06             	shr    $0x6,%bl
   2d5b6:	83 e3 01             	and    $0x1,%ebx
   2d5b9:	38 cb                	cmp    %cl,%bl
   2d5bb:	0f 85 62 08 00 00    	jne    2de23 <__score_alu_test_sbb+0xa23>
   2d5c1:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2d5c5:	c1 ea 0b             	shr    $0xb,%edx
   2d5c8:	83 e2 01             	and    $0x1,%edx
   2d5cb:	c0 e9 03             	shr    $0x3,%cl
   2d5ce:	83 e1 01             	and    $0x1,%ecx
   2d5d1:	38 d1                	cmp    %dl,%cl
   2d5d3:	0f 85 35 08 00 00    	jne    2de0e <__score_alu_test_sbb+0xa0e>
   2d5d9:	83 ec 04             	sub    $0x4,%esp
   2d5dc:	83 e0 fe             	and    $0xfffffffe,%eax
   2d5df:	88 46 24             	mov    %al,0x24(%esi)
   2d5e2:	6a 08                	push   $0x8
   2d5e4:	55                   	push   %ebp
   2d5e5:	57                   	push   %edi
   2d5e6:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d5ea:	e8 71 20 fe ff       	call   f660 <alu_sbb>
   2d5ef:	89 f9                	mov    %edi,%ecx
   2d5f1:	83 c4 10             	add    $0x10,%esp
   2d5f4:	89 c3                	mov    %eax,%ebx
   2d5f6:	89 e8                	mov    %ebp,%eax
   2d5f8:	f8                   	clc    
   2d5f9:	18 c8                	sbb    %cl,%al
   2d5fb:	9c                   	pushf  
   2d5fc:	5a                   	pop    %edx
   2d5fd:	0f b6 c0             	movzbl %al,%eax
   2d600:	39 c3                	cmp    %eax,%ebx
   2d602:	0f 85 f1 07 00 00    	jne    2ddf9 <__score_alu_test_sbb+0x9f9>
   2d608:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d60c:	89 d1                	mov    %edx,%ecx
   2d60e:	83 e1 01             	and    $0x1,%ecx
   2d611:	89 c3                	mov    %eax,%ebx
   2d613:	83 e3 01             	and    $0x1,%ebx
   2d616:	38 cb                	cmp    %cl,%bl
   2d618:	0f 85 b8 07 00 00    	jne    2ddd6 <__score_alu_test_sbb+0x9d6>
   2d61e:	89 c3                	mov    %eax,%ebx
   2d620:	89 d1                	mov    %edx,%ecx
   2d622:	c0 eb 02             	shr    $0x2,%bl
   2d625:	c1 e9 02             	shr    $0x2,%ecx
   2d628:	83 e3 01             	and    $0x1,%ebx
   2d62b:	83 e1 01             	and    $0x1,%ecx
   2d62e:	38 cb                	cmp    %cl,%bl
   2d630:	0f 85 7d 07 00 00    	jne    2ddb3 <__score_alu_test_sbb+0x9b3>
   2d636:	89 c3                	mov    %eax,%ebx
   2d638:	89 d1                	mov    %edx,%ecx
   2d63a:	c0 eb 07             	shr    $0x7,%bl
   2d63d:	c0 e9 07             	shr    $0x7,%cl
   2d640:	38 cb                	cmp    %cl,%bl
   2d642:	0f 85 48 07 00 00    	jne    2dd90 <__score_alu_test_sbb+0x990>
   2d648:	89 d1                	mov    %edx,%ecx
   2d64a:	c0 e8 06             	shr    $0x6,%al
   2d64d:	c1 e9 06             	shr    $0x6,%ecx
   2d650:	83 e0 01             	and    $0x1,%eax
   2d653:	83 e1 01             	and    $0x1,%ecx
   2d656:	38 c8                	cmp    %cl,%al
   2d658:	0f 85 0f 07 00 00    	jne    2dd6d <__score_alu_test_sbb+0x96d>
   2d65e:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2d662:	c1 ea 0b             	shr    $0xb,%edx
   2d665:	83 e2 01             	and    $0x1,%edx
   2d668:	c0 e8 03             	shr    $0x3,%al
   2d66b:	83 e0 01             	and    $0x1,%eax
   2d66e:	38 d0                	cmp    %dl,%al
   2d670:	0f 85 d4 06 00 00    	jne    2dd4a <__score_alu_test_sbb+0x94a>
   2d676:	8b 7c 24 14          	mov    0x14(%esp),%edi
   2d67a:	39 7c 24 10          	cmp    %edi,0x10(%esp)
   2d67e:	0f 85 0c fe ff ff    	jne    2d490 <__score_alu_test_sbb+0x90>
   2d684:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2d688:	39 f8                	cmp    %edi,%eax
   2d68a:	74 14                	je     2d6a0 <__score_alu_test_sbb+0x2a0>
   2d68c:	8b 28                	mov    (%eax),%ebp
   2d68e:	83 c0 04             	add    $0x4,%eax
   2d691:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2d695:	e9 de fd ff ff       	jmp    2d478 <__score_alu_test_sbb+0x78>
   2d69a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2d6a0:	8b 44 24 18          	mov    0x18(%esp),%eax
   2d6a4:	bd 00 00 00 10       	mov    $0x10000000,%ebp
   2d6a9:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2d6ad:	8d 76 00             	lea    0x0(%esi),%esi
   2d6b0:	8b 44 24 18          	mov    0x18(%esp),%eax
   2d6b4:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2d6b9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2d6bd:	eb 0e                	jmp    2d6cd <__score_alu_test_sbb+0x2cd>
   2d6bf:	90                   	nop
   2d6c0:	8b 44 24 10          	mov    0x10(%esp),%eax
   2d6c4:	8b 38                	mov    (%eax),%edi
   2d6c6:	83 c0 04             	add    $0x4,%eax
   2d6c9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2d6cd:	83 ec 04             	sub    $0x4,%esp
   2d6d0:	80 4e 24 01          	orb    $0x1,0x24(%esi)
   2d6d4:	6a 20                	push   $0x20
   2d6d6:	55                   	push   %ebp
   2d6d7:	57                   	push   %edi
   2d6d8:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d6dc:	e8 7f 1f fe ff       	call   f660 <alu_sbb>
   2d6e1:	89 f9                	mov    %edi,%ecx
   2d6e3:	83 c4 10             	add    $0x10,%esp
   2d6e6:	89 c3                	mov    %eax,%ebx
   2d6e8:	89 e8                	mov    %ebp,%eax
   2d6ea:	f9                   	stc    
   2d6eb:	19 c8                	sbb    %ecx,%eax
   2d6ed:	9c                   	pushf  
   2d6ee:	5a                   	pop    %edx
   2d6ef:	39 c3                	cmp    %eax,%ebx
   2d6f1:	0f 85 fe 07 00 00    	jne    2def5 <__score_alu_test_sbb+0xaf5>
   2d6f7:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d6fb:	89 d1                	mov    %edx,%ecx
   2d6fd:	83 e1 01             	and    $0x1,%ecx
   2d700:	89 c3                	mov    %eax,%ebx
   2d702:	83 e3 01             	and    $0x1,%ebx
   2d705:	38 cb                	cmp    %cl,%bl
   2d707:	0f 85 12 08 00 00    	jne    2df1f <__score_alu_test_sbb+0xb1f>
   2d70d:	89 c3                	mov    %eax,%ebx
   2d70f:	89 d1                	mov    %edx,%ecx
   2d711:	c0 eb 02             	shr    $0x2,%bl
   2d714:	c1 e9 02             	shr    $0x2,%ecx
   2d717:	83 e3 01             	and    $0x1,%ebx
   2d71a:	83 e1 01             	and    $0x1,%ecx
   2d71d:	38 cb                	cmp    %cl,%bl
   2d71f:	0f 85 b7 08 00 00    	jne    2dfdc <__score_alu_test_sbb+0xbdc>
   2d725:	89 c3                	mov    %eax,%ebx
   2d727:	89 d1                	mov    %edx,%ecx
   2d729:	c0 eb 07             	shr    $0x7,%bl
   2d72c:	c0 e9 07             	shr    $0x7,%cl
   2d72f:	38 cb                	cmp    %cl,%bl
   2d731:	0f 85 90 08 00 00    	jne    2dfc7 <__score_alu_test_sbb+0xbc7>
   2d737:	89 c3                	mov    %eax,%ebx
   2d739:	89 d1                	mov    %edx,%ecx
   2d73b:	c0 eb 06             	shr    $0x6,%bl
   2d73e:	c1 e9 06             	shr    $0x6,%ecx
   2d741:	83 e3 01             	and    $0x1,%ebx
   2d744:	83 e1 01             	and    $0x1,%ecx
   2d747:	38 cb                	cmp    %cl,%bl
   2d749:	0f 85 63 08 00 00    	jne    2dfb2 <__score_alu_test_sbb+0xbb2>
   2d74f:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2d753:	c1 ea 0b             	shr    $0xb,%edx
   2d756:	83 e2 01             	and    $0x1,%edx
   2d759:	c0 e9 03             	shr    $0x3,%cl
   2d75c:	83 e1 01             	and    $0x1,%ecx
   2d75f:	38 d1                	cmp    %dl,%cl
   2d761:	0f 85 36 08 00 00    	jne    2df9d <__score_alu_test_sbb+0xb9d>
   2d767:	83 ec 04             	sub    $0x4,%esp
   2d76a:	83 c8 01             	or     $0x1,%eax
   2d76d:	88 46 24             	mov    %al,0x24(%esi)
   2d770:	6a 10                	push   $0x10
   2d772:	55                   	push   %ebp
   2d773:	57                   	push   %edi
   2d774:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d778:	e8 e3 1e fe ff       	call   f660 <alu_sbb>
   2d77d:	89 f9                	mov    %edi,%ecx
   2d77f:	83 c4 10             	add    $0x10,%esp
   2d782:	89 c3                	mov    %eax,%ebx
   2d784:	89 e8                	mov    %ebp,%eax
   2d786:	f9                   	stc    
   2d787:	66 19 c8             	sbb    %cx,%ax
   2d78a:	9c                   	pushf  
   2d78b:	5a                   	pop    %edx
   2d78c:	0f b7 c0             	movzwl %ax,%eax
   2d78f:	39 c3                	cmp    %eax,%ebx
   2d791:	0f 85 d8 08 00 00    	jne    2e06f <__score_alu_test_sbb+0xc6f>
   2d797:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d79b:	89 d1                	mov    %edx,%ecx
   2d79d:	83 e1 01             	and    $0x1,%ecx
   2d7a0:	89 c3                	mov    %eax,%ebx
   2d7a2:	83 e3 01             	and    $0x1,%ebx
   2d7a5:	38 cb                	cmp    %cl,%bl
   2d7a7:	0f 85 ad 08 00 00    	jne    2e05a <__score_alu_test_sbb+0xc5a>
   2d7ad:	89 c3                	mov    %eax,%ebx
   2d7af:	89 d1                	mov    %edx,%ecx
   2d7b1:	c0 eb 02             	shr    $0x2,%bl
   2d7b4:	c1 e9 02             	shr    $0x2,%ecx
   2d7b7:	83 e3 01             	and    $0x1,%ebx
   2d7ba:	83 e1 01             	and    $0x1,%ecx
   2d7bd:	38 cb                	cmp    %cl,%bl
   2d7bf:	0f 85 80 08 00 00    	jne    2e045 <__score_alu_test_sbb+0xc45>
   2d7c5:	89 d1                	mov    %edx,%ecx
   2d7c7:	c0 e8 07             	shr    $0x7,%al
   2d7ca:	c0 e9 07             	shr    $0x7,%cl
   2d7cd:	38 c8                	cmp    %cl,%al
   2d7cf:	0f 85 5b 08 00 00    	jne    2e030 <__score_alu_test_sbb+0xc30>
   2d7d5:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d7d9:	89 d1                	mov    %edx,%ecx
   2d7db:	c1 e9 06             	shr    $0x6,%ecx
   2d7de:	89 c3                	mov    %eax,%ebx
   2d7e0:	83 e1 01             	and    $0x1,%ecx
   2d7e3:	c0 eb 06             	shr    $0x6,%bl
   2d7e6:	83 e3 01             	and    $0x1,%ebx
   2d7e9:	38 cb                	cmp    %cl,%bl
   2d7eb:	0f 85 43 07 00 00    	jne    2df34 <__score_alu_test_sbb+0xb34>
   2d7f1:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2d7f5:	c1 ea 0b             	shr    $0xb,%edx
   2d7f8:	83 e2 01             	and    $0x1,%edx
   2d7fb:	c0 e9 03             	shr    $0x3,%cl
   2d7fe:	83 e1 01             	and    $0x1,%ecx
   2d801:	38 d1                	cmp    %dl,%cl
   2d803:	0f 85 12 08 00 00    	jne    2e01b <__score_alu_test_sbb+0xc1b>
   2d809:	83 ec 04             	sub    $0x4,%esp
   2d80c:	83 c8 01             	or     $0x1,%eax
   2d80f:	88 46 24             	mov    %al,0x24(%esi)
   2d812:	6a 08                	push   $0x8
   2d814:	55                   	push   %ebp
   2d815:	57                   	push   %edi
   2d816:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d81a:	e8 41 1e fe ff       	call   f660 <alu_sbb>
   2d81f:	89 f9                	mov    %edi,%ecx
   2d821:	83 c4 10             	add    $0x10,%esp
   2d824:	89 c3                	mov    %eax,%ebx
   2d826:	89 e8                	mov    %ebp,%eax
   2d828:	f9                   	stc    
   2d829:	18 c8                	sbb    %cl,%al
   2d82b:	9c                   	pushf  
   2d82c:	5a                   	pop    %edx
   2d82d:	0f b6 c0             	movzbl %al,%eax
   2d830:	39 c3                	cmp    %eax,%ebx
   2d832:	0f 85 ce 07 00 00    	jne    2e006 <__score_alu_test_sbb+0xc06>
   2d838:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d83c:	89 d1                	mov    %edx,%ecx
   2d83e:	83 e1 01             	and    $0x1,%ecx
   2d841:	89 c3                	mov    %eax,%ebx
   2d843:	83 e3 01             	and    $0x1,%ebx
   2d846:	38 cb                	cmp    %cl,%bl
   2d848:	0f 85 a3 07 00 00    	jne    2dff1 <__score_alu_test_sbb+0xbf1>
   2d84e:	89 c3                	mov    %eax,%ebx
   2d850:	89 d1                	mov    %edx,%ecx
   2d852:	c0 eb 02             	shr    $0x2,%bl
   2d855:	c1 e9 02             	shr    $0x2,%ecx
   2d858:	83 e3 01             	and    $0x1,%ebx
   2d85b:	83 e1 01             	and    $0x1,%ecx
   2d85e:	38 cb                	cmp    %cl,%bl
   2d860:	0f 85 a4 06 00 00    	jne    2df0a <__score_alu_test_sbb+0xb0a>
   2d866:	89 c3                	mov    %eax,%ebx
   2d868:	89 d1                	mov    %edx,%ecx
   2d86a:	c0 eb 07             	shr    $0x7,%bl
   2d86d:	c0 e9 07             	shr    $0x7,%cl
   2d870:	38 cb                	cmp    %cl,%bl
   2d872:	0f 85 fb 06 00 00    	jne    2df73 <__score_alu_test_sbb+0xb73>
   2d878:	89 d1                	mov    %edx,%ecx
   2d87a:	c0 e8 06             	shr    $0x6,%al
   2d87d:	c1 e9 06             	shr    $0x6,%ecx
   2d880:	83 e0 01             	and    $0x1,%eax
   2d883:	83 e1 01             	and    $0x1,%ecx
   2d886:	38 c8                	cmp    %cl,%al
   2d888:	0f 85 d0 06 00 00    	jne    2df5e <__score_alu_test_sbb+0xb5e>
   2d88e:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2d892:	c1 ea 0b             	shr    $0xb,%edx
   2d895:	83 e2 01             	and    $0x1,%edx
   2d898:	c0 e8 03             	shr    $0x3,%al
   2d89b:	83 e0 01             	and    $0x1,%eax
   2d89e:	38 d0                	cmp    %dl,%al
   2d8a0:	0f 85 a3 06 00 00    	jne    2df49 <__score_alu_test_sbb+0xb49>
   2d8a6:	8b 7c 24 14          	mov    0x14(%esp),%edi
   2d8aa:	39 7c 24 10          	cmp    %edi,0x10(%esp)
   2d8ae:	0f 85 0c fe ff ff    	jne    2d6c0 <__score_alu_test_sbb+0x2c0>
   2d8b4:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2d8b8:	39 f8                	cmp    %edi,%eax
   2d8ba:	74 14                	je     2d8d0 <__score_alu_test_sbb+0x4d0>
   2d8bc:	8b 28                	mov    (%eax),%ebp
   2d8be:	83 c0 04             	add    $0x4,%eax
   2d8c1:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2d8c5:	e9 e6 fd ff ff       	jmp    2d6b0 <__score_alu_test_sbb+0x2b0>
   2d8ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2d8d0:	83 ec 0c             	sub    $0xc,%esp
   2d8d3:	6a 00                	push   $0x0
   2d8d5:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   2d8d9:	89 fb                	mov    %edi,%ebx
   2d8db:	e8 50 68 fd ff       	call   4130 <time@plt>
   2d8e0:	89 04 24             	mov    %eax,(%esp)
   2d8e3:	e8 a8 68 fd ff       	call   4190 <srand@plt>
   2d8e8:	83 c4 10             	add    $0x10,%esp
   2d8eb:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2d8f2:	00 
   2d8f3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2d8f7:	90                   	nop
   2d8f8:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   2d8fc:	89 fb                	mov    %edi,%ebx
   2d8fe:	e8 ed 68 fd ff       	call   41f0 <rand@plt>
   2d903:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   2d907:	89 c5                	mov    %eax,%ebp
   2d909:	e8 e2 68 fd ff       	call   41f0 <rand@plt>
   2d90e:	83 ec 04             	sub    $0x4,%esp
   2d911:	80 66 24 fe          	andb   $0xfe,0x24(%esi)
   2d915:	6a 20                	push   $0x20
   2d917:	89 c7                	mov    %eax,%edi
   2d919:	55                   	push   %ebp
   2d91a:	50                   	push   %eax
   2d91b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d91f:	e8 3c 1d fe ff       	call   f660 <alu_sbb>
   2d924:	89 f9                	mov    %edi,%ecx
   2d926:	83 c4 10             	add    $0x10,%esp
   2d929:	89 c3                	mov    %eax,%ebx
   2d92b:	89 e8                	mov    %ebp,%eax
   2d92d:	f8                   	clc    
   2d92e:	19 c8                	sbb    %ecx,%eax
   2d930:	9c                   	pushf  
   2d931:	5a                   	pop    %edx
   2d932:	39 c3                	cmp    %eax,%ebx
   2d934:	0f 85 4a 07 00 00    	jne    2e084 <__score_alu_test_sbb+0xc84>
   2d93a:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d93e:	89 d1                	mov    %edx,%ecx
   2d940:	83 e1 01             	and    $0x1,%ecx
   2d943:	89 c3                	mov    %eax,%ebx
   2d945:	83 e3 01             	and    $0x1,%ebx
   2d948:	38 cb                	cmp    %cl,%bl
   2d94a:	0f 85 49 07 00 00    	jne    2e099 <__score_alu_test_sbb+0xc99>
   2d950:	89 c3                	mov    %eax,%ebx
   2d952:	89 d1                	mov    %edx,%ecx
   2d954:	c0 eb 02             	shr    $0x2,%bl
   2d957:	c1 e9 02             	shr    $0x2,%ecx
   2d95a:	83 e3 01             	and    $0x1,%ebx
   2d95d:	83 e1 01             	and    $0x1,%ecx
   2d960:	38 cb                	cmp    %cl,%bl
   2d962:	0f 85 46 07 00 00    	jne    2e0ae <__score_alu_test_sbb+0xcae>
   2d968:	89 c3                	mov    %eax,%ebx
   2d96a:	89 d1                	mov    %edx,%ecx
   2d96c:	c0 eb 07             	shr    $0x7,%bl
   2d96f:	c0 e9 07             	shr    $0x7,%cl
   2d972:	38 cb                	cmp    %cl,%bl
   2d974:	0f 85 49 07 00 00    	jne    2e0c3 <__score_alu_test_sbb+0xcc3>
   2d97a:	89 c3                	mov    %eax,%ebx
   2d97c:	89 d1                	mov    %edx,%ecx
   2d97e:	c0 eb 06             	shr    $0x6,%bl
   2d981:	c1 e9 06             	shr    $0x6,%ecx
   2d984:	83 e3 01             	and    $0x1,%ebx
   2d987:	83 e1 01             	and    $0x1,%ecx
   2d98a:	38 cb                	cmp    %cl,%bl
   2d98c:	0f 85 46 07 00 00    	jne    2e0d8 <__score_alu_test_sbb+0xcd8>
   2d992:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2d996:	c1 ea 0b             	shr    $0xb,%edx
   2d999:	83 e2 01             	and    $0x1,%edx
   2d99c:	c0 e9 03             	shr    $0x3,%cl
   2d99f:	83 e1 01             	and    $0x1,%ecx
   2d9a2:	38 d1                	cmp    %dl,%cl
   2d9a4:	0f 85 43 07 00 00    	jne    2e0ed <__score_alu_test_sbb+0xced>
   2d9aa:	83 ec 04             	sub    $0x4,%esp
   2d9ad:	83 e0 fe             	and    $0xfffffffe,%eax
   2d9b0:	88 46 24             	mov    %al,0x24(%esi)
   2d9b3:	6a 10                	push   $0x10
   2d9b5:	55                   	push   %ebp
   2d9b6:	57                   	push   %edi
   2d9b7:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2d9bb:	e8 a0 1c fe ff       	call   f660 <alu_sbb>
   2d9c0:	89 f9                	mov    %edi,%ecx
   2d9c2:	83 c4 10             	add    $0x10,%esp
   2d9c5:	89 c3                	mov    %eax,%ebx
   2d9c7:	89 e8                	mov    %ebp,%eax
   2d9c9:	f8                   	clc    
   2d9ca:	66 19 c8             	sbb    %cx,%ax
   2d9cd:	9c                   	pushf  
   2d9ce:	5a                   	pop    %edx
   2d9cf:	0f b7 c0             	movzwl %ax,%eax
   2d9d2:	39 c3                	cmp    %eax,%ebx
   2d9d4:	0f 85 28 07 00 00    	jne    2e102 <__score_alu_test_sbb+0xd02>
   2d9da:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2d9de:	89 d1                	mov    %edx,%ecx
   2d9e0:	83 e1 01             	and    $0x1,%ecx
   2d9e3:	89 c3                	mov    %eax,%ebx
   2d9e5:	83 e3 01             	and    $0x1,%ebx
   2d9e8:	38 cb                	cmp    %cl,%bl
   2d9ea:	0f 85 27 07 00 00    	jne    2e117 <__score_alu_test_sbb+0xd17>
   2d9f0:	89 c3                	mov    %eax,%ebx
   2d9f2:	89 d1                	mov    %edx,%ecx
   2d9f4:	c0 eb 02             	shr    $0x2,%bl
   2d9f7:	c1 e9 02             	shr    $0x2,%ecx
   2d9fa:	83 e3 01             	and    $0x1,%ebx
   2d9fd:	83 e1 01             	and    $0x1,%ecx
   2da00:	38 cb                	cmp    %cl,%bl
   2da02:	0f 85 24 07 00 00    	jne    2e12c <__score_alu_test_sbb+0xd2c>
   2da08:	89 d1                	mov    %edx,%ecx
   2da0a:	c0 e8 07             	shr    $0x7,%al
   2da0d:	c0 e9 07             	shr    $0x7,%cl
   2da10:	38 c8                	cmp    %cl,%al
   2da12:	0f 85 29 07 00 00    	jne    2e141 <__score_alu_test_sbb+0xd41>
   2da18:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2da1c:	89 d1                	mov    %edx,%ecx
   2da1e:	c1 e9 06             	shr    $0x6,%ecx
   2da21:	89 c3                	mov    %eax,%ebx
   2da23:	83 e1 01             	and    $0x1,%ecx
   2da26:	c0 eb 06             	shr    $0x6,%bl
   2da29:	83 e3 01             	and    $0x1,%ebx
   2da2c:	38 cb                	cmp    %cl,%bl
   2da2e:	0f 85 22 07 00 00    	jne    2e156 <__score_alu_test_sbb+0xd56>
   2da34:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2da38:	c1 ea 0b             	shr    $0xb,%edx
   2da3b:	83 e2 01             	and    $0x1,%edx
   2da3e:	c0 e9 03             	shr    $0x3,%cl
   2da41:	83 e1 01             	and    $0x1,%ecx
   2da44:	38 d1                	cmp    %dl,%cl
   2da46:	0f 85 1f 07 00 00    	jne    2e16b <__score_alu_test_sbb+0xd6b>
   2da4c:	83 ec 04             	sub    $0x4,%esp
   2da4f:	83 e0 fe             	and    $0xfffffffe,%eax
   2da52:	88 46 24             	mov    %al,0x24(%esi)
   2da55:	6a 08                	push   $0x8
   2da57:	55                   	push   %ebp
   2da58:	57                   	push   %edi
   2da59:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2da5d:	e8 fe 1b fe ff       	call   f660 <alu_sbb>
   2da62:	89 f9                	mov    %edi,%ecx
   2da64:	83 c4 10             	add    $0x10,%esp
   2da67:	89 c3                	mov    %eax,%ebx
   2da69:	89 e8                	mov    %ebp,%eax
   2da6b:	f8                   	clc    
   2da6c:	18 c8                	sbb    %cl,%al
   2da6e:	9c                   	pushf  
   2da6f:	5a                   	pop    %edx
   2da70:	0f b6 c0             	movzbl %al,%eax
   2da73:	39 c3                	cmp    %eax,%ebx
   2da75:	0f 85 05 07 00 00    	jne    2e180 <__score_alu_test_sbb+0xd80>
   2da7b:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2da7f:	89 d1                	mov    %edx,%ecx
   2da81:	83 e1 01             	and    $0x1,%ecx
   2da84:	89 c3                	mov    %eax,%ebx
   2da86:	83 e3 01             	and    $0x1,%ebx
   2da89:	38 cb                	cmp    %cl,%bl
   2da8b:	0f 85 04 07 00 00    	jne    2e195 <__score_alu_test_sbb+0xd95>
   2da91:	89 c3                	mov    %eax,%ebx
   2da93:	89 d1                	mov    %edx,%ecx
   2da95:	c0 eb 02             	shr    $0x2,%bl
   2da98:	c1 e9 02             	shr    $0x2,%ecx
   2da9b:	83 e3 01             	and    $0x1,%ebx
   2da9e:	83 e1 01             	and    $0x1,%ecx
   2daa1:	38 cb                	cmp    %cl,%bl
   2daa3:	0f 85 01 07 00 00    	jne    2e1aa <__score_alu_test_sbb+0xdaa>
   2daa9:	89 c3                	mov    %eax,%ebx
   2daab:	89 d1                	mov    %edx,%ecx
   2daad:	c0 eb 07             	shr    $0x7,%bl
   2dab0:	c0 e9 07             	shr    $0x7,%cl
   2dab3:	38 cb                	cmp    %cl,%bl
   2dab5:	0f 85 04 07 00 00    	jne    2e1bf <__score_alu_test_sbb+0xdbf>
   2dabb:	89 d1                	mov    %edx,%ecx
   2dabd:	c0 e8 06             	shr    $0x6,%al
   2dac0:	c1 e9 06             	shr    $0x6,%ecx
   2dac3:	83 e0 01             	and    $0x1,%eax
   2dac6:	83 e1 01             	and    $0x1,%ecx
   2dac9:	38 c8                	cmp    %cl,%al
   2dacb:	0f 85 03 07 00 00    	jne    2e1d4 <__score_alu_test_sbb+0xdd4>
   2dad1:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2dad5:	c1 ea 0b             	shr    $0xb,%edx
   2dad8:	83 e2 01             	and    $0x1,%edx
   2dadb:	c0 e8 03             	shr    $0x3,%al
   2dade:	83 e0 01             	and    $0x1,%eax
   2dae1:	38 d0                	cmp    %dl,%al
   2dae3:	0f 85 9f 04 00 00    	jne    2df88 <__score_alu_test_sbb+0xb88>
   2dae9:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2daee:	0f 85 04 fe ff ff    	jne    2d8f8 <__score_alu_test_sbb+0x4f8>
   2daf4:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2dafb:	00 
   2dafc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2db00:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   2db04:	89 fb                	mov    %edi,%ebx
   2db06:	e8 e5 66 fd ff       	call   41f0 <rand@plt>
   2db0b:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   2db0f:	89 c5                	mov    %eax,%ebp
   2db11:	e8 da 66 fd ff       	call   41f0 <rand@plt>
   2db16:	83 ec 04             	sub    $0x4,%esp
   2db19:	80 4e 24 01          	orb    $0x1,0x24(%esi)
   2db1d:	6a 20                	push   $0x20
   2db1f:	89 c7                	mov    %eax,%edi
   2db21:	55                   	push   %ebp
   2db22:	50                   	push   %eax
   2db23:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2db27:	e8 34 1b fe ff       	call   f660 <alu_sbb>
   2db2c:	89 f9                	mov    %edi,%ecx
   2db2e:	83 c4 10             	add    $0x10,%esp
   2db31:	89 c3                	mov    %eax,%ebx
   2db33:	89 e8                	mov    %ebp,%eax
   2db35:	f9                   	stc    
   2db36:	19 c8                	sbb    %ecx,%eax
   2db38:	9c                   	pushf  
   2db39:	5a                   	pop    %edx
   2db3a:	39 c3                	cmp    %eax,%ebx
   2db3c:	0f 85 64 07 00 00    	jne    2e2a6 <__score_alu_test_sbb+0xea6>
   2db42:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2db46:	89 d1                	mov    %edx,%ecx
   2db48:	83 e1 01             	and    $0x1,%ecx
   2db4b:	89 c3                	mov    %eax,%ebx
   2db4d:	83 e3 01             	and    $0x1,%ebx
   2db50:	38 cb                	cmp    %cl,%bl
   2db52:	0f 85 24 07 00 00    	jne    2e27c <__score_alu_test_sbb+0xe7c>
   2db58:	89 c3                	mov    %eax,%ebx
   2db5a:	89 d1                	mov    %edx,%ecx
   2db5c:	c0 eb 02             	shr    $0x2,%bl
   2db5f:	c1 e9 02             	shr    $0x2,%ecx
   2db62:	83 e3 01             	and    $0x1,%ebx
   2db65:	83 e1 01             	and    $0x1,%ecx
   2db68:	38 cb                	cmp    %cl,%bl
   2db6a:	0f 85 f7 06 00 00    	jne    2e267 <__score_alu_test_sbb+0xe67>
   2db70:	89 c3                	mov    %eax,%ebx
   2db72:	89 d1                	mov    %edx,%ecx
   2db74:	c0 eb 07             	shr    $0x7,%bl
   2db77:	c0 e9 07             	shr    $0x7,%cl
   2db7a:	38 cb                	cmp    %cl,%bl
   2db7c:	0f 85 67 06 00 00    	jne    2e1e9 <__score_alu_test_sbb+0xde9>
   2db82:	89 c3                	mov    %eax,%ebx
   2db84:	89 d1                	mov    %edx,%ecx
   2db86:	c0 eb 06             	shr    $0x6,%bl
   2db89:	c1 e9 06             	shr    $0x6,%ecx
   2db8c:	83 e3 01             	and    $0x1,%ebx
   2db8f:	83 e1 01             	and    $0x1,%ecx
   2db92:	38 cb                	cmp    %cl,%bl
   2db94:	0f 85 64 06 00 00    	jne    2e1fe <__score_alu_test_sbb+0xdfe>
   2db9a:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2db9e:	c1 ea 0b             	shr    $0xb,%edx
   2dba1:	83 e2 01             	and    $0x1,%edx
   2dba4:	c0 e9 03             	shr    $0x3,%cl
   2dba7:	83 e1 01             	and    $0x1,%ecx
   2dbaa:	38 d1                	cmp    %dl,%cl
   2dbac:	0f 85 61 06 00 00    	jne    2e213 <__score_alu_test_sbb+0xe13>
   2dbb2:	83 ec 04             	sub    $0x4,%esp
   2dbb5:	83 c8 01             	or     $0x1,%eax
   2dbb8:	88 46 24             	mov    %al,0x24(%esi)
   2dbbb:	6a 10                	push   $0x10
   2dbbd:	55                   	push   %ebp
   2dbbe:	57                   	push   %edi
   2dbbf:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2dbc3:	e8 98 1a fe ff       	call   f660 <alu_sbb>
   2dbc8:	89 f9                	mov    %edi,%ecx
   2dbca:	83 c4 10             	add    $0x10,%esp
   2dbcd:	89 c3                	mov    %eax,%ebx
   2dbcf:	89 e8                	mov    %ebp,%eax
   2dbd1:	f9                   	stc    
   2dbd2:	66 19 c8             	sbb    %cx,%ax
   2dbd5:	9c                   	pushf  
   2dbd6:	5a                   	pop    %edx
   2dbd7:	0f b7 c0             	movzwl %ax,%eax
   2dbda:	39 c3                	cmp    %eax,%ebx
   2dbdc:	0f 85 46 06 00 00    	jne    2e228 <__score_alu_test_sbb+0xe28>
   2dbe2:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2dbe6:	89 d1                	mov    %edx,%ecx
   2dbe8:	83 e1 01             	and    $0x1,%ecx
   2dbeb:	89 c3                	mov    %eax,%ebx
   2dbed:	83 e3 01             	and    $0x1,%ebx
   2dbf0:	38 cb                	cmp    %cl,%bl
   2dbf2:	0f 85 45 06 00 00    	jne    2e23d <__score_alu_test_sbb+0xe3d>
   2dbf8:	89 c3                	mov    %eax,%ebx
   2dbfa:	89 d1                	mov    %edx,%ecx
   2dbfc:	c0 eb 02             	shr    $0x2,%bl
   2dbff:	c1 e9 02             	shr    $0x2,%ecx
   2dc02:	83 e3 01             	and    $0x1,%ebx
   2dc05:	83 e1 01             	and    $0x1,%ecx
   2dc08:	38 cb                	cmp    %cl,%bl
   2dc0a:	0f 85 42 06 00 00    	jne    2e252 <__score_alu_test_sbb+0xe52>
   2dc10:	89 d1                	mov    %edx,%ecx
   2dc12:	c0 e8 07             	shr    $0x7,%al
   2dc15:	c0 e9 07             	shr    $0x7,%cl
   2dc18:	38 c8                	cmp    %cl,%al
   2dc1a:	0f 85 9b 06 00 00    	jne    2e2bb <__score_alu_test_sbb+0xebb>
   2dc20:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2dc24:	89 d1                	mov    %edx,%ecx
   2dc26:	c1 e9 06             	shr    $0x6,%ecx
   2dc29:	89 c3                	mov    %eax,%ebx
   2dc2b:	83 e1 01             	and    $0x1,%ecx
   2dc2e:	c0 eb 06             	shr    $0x6,%bl
   2dc31:	83 e3 01             	and    $0x1,%ebx
   2dc34:	38 cb                	cmp    %cl,%bl
   2dc36:	0f 85 94 06 00 00    	jne    2e2d0 <__score_alu_test_sbb+0xed0>
   2dc3c:	0f b6 4e 25          	movzbl 0x25(%esi),%ecx
   2dc40:	c1 ea 0b             	shr    $0xb,%edx
   2dc43:	83 e2 01             	and    $0x1,%edx
   2dc46:	c0 e9 03             	shr    $0x3,%cl
   2dc49:	83 e1 01             	and    $0x1,%ecx
   2dc4c:	38 d1                	cmp    %dl,%cl
   2dc4e:	0f 85 91 06 00 00    	jne    2e2e5 <__score_alu_test_sbb+0xee5>
   2dc54:	83 ec 04             	sub    $0x4,%esp
   2dc57:	83 c8 01             	or     $0x1,%eax
   2dc5a:	88 46 24             	mov    %al,0x24(%esi)
   2dc5d:	6a 08                	push   $0x8
   2dc5f:	55                   	push   %ebp
   2dc60:	57                   	push   %edi
   2dc61:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2dc65:	e8 f6 19 fe ff       	call   f660 <alu_sbb>
   2dc6a:	89 f9                	mov    %edi,%ecx
   2dc6c:	83 c4 10             	add    $0x10,%esp
   2dc6f:	89 c3                	mov    %eax,%ebx
   2dc71:	89 e8                	mov    %ebp,%eax
   2dc73:	f9                   	stc    
   2dc74:	18 c8                	sbb    %cl,%al
   2dc76:	9c                   	pushf  
   2dc77:	5a                   	pop    %edx
   2dc78:	0f b6 c0             	movzbl %al,%eax
   2dc7b:	39 c3                	cmp    %eax,%ebx
   2dc7d:	0f 85 77 06 00 00    	jne    2e2fa <__score_alu_test_sbb+0xefa>
   2dc83:	0f b6 46 24          	movzbl 0x24(%esi),%eax
   2dc87:	89 d1                	mov    %edx,%ecx
   2dc89:	83 e1 01             	and    $0x1,%ecx
   2dc8c:	89 c3                	mov    %eax,%ebx
   2dc8e:	83 e3 01             	and    $0x1,%ebx
   2dc91:	38 cb                	cmp    %cl,%bl
   2dc93:	0f 85 76 06 00 00    	jne    2e30f <__score_alu_test_sbb+0xf0f>
   2dc99:	89 c3                	mov    %eax,%ebx
   2dc9b:	89 d1                	mov    %edx,%ecx
   2dc9d:	c0 eb 02             	shr    $0x2,%bl
   2dca0:	c1 e9 02             	shr    $0x2,%ecx
   2dca3:	83 e3 01             	and    $0x1,%ebx
   2dca6:	83 e1 01             	and    $0x1,%ecx
   2dca9:	38 cb                	cmp    %cl,%bl
   2dcab:	0f 85 73 06 00 00    	jne    2e324 <__score_alu_test_sbb+0xf24>
   2dcb1:	89 c3                	mov    %eax,%ebx
   2dcb3:	89 d1                	mov    %edx,%ecx
   2dcb5:	c0 eb 07             	shr    $0x7,%bl
   2dcb8:	c0 e9 07             	shr    $0x7,%cl
   2dcbb:	38 cb                	cmp    %cl,%bl
   2dcbd:	0f 85 76 06 00 00    	jne    2e339 <__score_alu_test_sbb+0xf39>
   2dcc3:	89 d1                	mov    %edx,%ecx
   2dcc5:	c0 e8 06             	shr    $0x6,%al
   2dcc8:	c1 e9 06             	shr    $0x6,%ecx
   2dccb:	83 e0 01             	and    $0x1,%eax
   2dcce:	83 e1 01             	and    $0x1,%ecx
   2dcd1:	38 c8                	cmp    %cl,%al
   2dcd3:	0f 85 75 06 00 00    	jne    2e34e <__score_alu_test_sbb+0xf4e>
   2dcd9:	0f b6 46 25          	movzbl 0x25(%esi),%eax
   2dcdd:	c1 ea 0b             	shr    $0xb,%edx
   2dce0:	83 e2 01             	and    $0x1,%edx
   2dce3:	c0 e8 03             	shr    $0x3,%al
   2dce6:	83 e0 01             	and    $0x1,%eax
   2dce9:	38 d0                	cmp    %dl,%al
   2dceb:	0f 85 a0 05 00 00    	jne    2e291 <__score_alu_test_sbb+0xe91>
   2dcf1:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2dcf6:	0f 85 04 fe ff ff    	jne    2db00 <__score_alu_test_sbb+0x700>
   2dcfc:	83 ec 0c             	sub    $0xc,%esp
   2dcff:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2dd03:	8d 87 4c 71 fe ff    	lea    -0x18eb4(%edi),%eax
   2dd09:	89 fb                	mov    %edi,%ebx
   2dd0b:	50                   	push   %eax
   2dd0c:	e8 9f 65 fd ff       	call   42b0 <puts@plt>
   2dd11:	8d 87 d4 6f fe ff    	lea    -0x1902c(%edi),%eax
   2dd17:	89 04 24             	mov    %eax,(%esp)
   2dd1a:	e8 01 cb ff ff       	call   2a820 <score_reg_alu_fpu>
   2dd1f:	83 c4 5c             	add    $0x5c,%esp
   2dd22:	5b                   	pop    %ebx
   2dd23:	5e                   	pop    %esi
   2dd24:	5f                   	pop    %edi
   2dd25:	5d                   	pop    %ebp
   2dd26:	c3                   	ret    
   2dd27:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dd2b:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dd31:	50                   	push   %eax
   2dd32:	68 d0 00 00 00       	push   $0xd0
   2dd37:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2dd3d:	50                   	push   %eax
   2dd3e:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   2dd44:	50                   	push   %eax
   2dd45:	e8 c6 65 fd ff       	call   4310 <__assert_fail@plt>
   2dd4a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dd4e:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dd54:	50                   	push   %eax
   2dd55:	68 d2 00 00 00       	push   $0xd2
   2dd5a:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2dd60:	50                   	push   %eax
   2dd61:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   2dd67:	50                   	push   %eax
   2dd68:	e8 a3 65 fd ff       	call   4310 <__assert_fail@plt>
   2dd6d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dd71:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dd77:	50                   	push   %eax
   2dd78:	68 d2 00 00 00       	push   $0xd2
   2dd7d:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2dd83:	50                   	push   %eax
   2dd84:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2dd8a:	50                   	push   %eax
   2dd8b:	e8 80 65 fd ff       	call   4310 <__assert_fail@plt>
   2dd90:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dd94:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dd9a:	50                   	push   %eax
   2dd9b:	68 d2 00 00 00       	push   $0xd2
   2dda0:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2dda6:	50                   	push   %eax
   2dda7:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2ddad:	50                   	push   %eax
   2ddae:	e8 5d 65 fd ff       	call   4310 <__assert_fail@plt>
   2ddb3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ddb7:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2ddbd:	50                   	push   %eax
   2ddbe:	68 d2 00 00 00       	push   $0xd2
   2ddc3:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ddc9:	50                   	push   %eax
   2ddca:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2ddd0:	50                   	push   %eax
   2ddd1:	e8 3a 65 fd ff       	call   4310 <__assert_fail@plt>
   2ddd6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ddda:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dde0:	50                   	push   %eax
   2dde1:	68 d2 00 00 00       	push   $0xd2
   2dde6:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ddec:	50                   	push   %eax
   2dded:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2ddf3:	50                   	push   %eax
   2ddf4:	e8 17 65 fd ff       	call   4310 <__assert_fail@plt>
   2ddf9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ddfd:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de03:	50                   	push   %eax
   2de04:	68 d2 00 00 00       	push   $0xd2
   2de09:	e9 29 ff ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2de0e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2de12:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de18:	50                   	push   %eax
   2de19:	68 d1 00 00 00       	push   $0xd1
   2de1e:	e9 37 ff ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2de23:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2de27:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de2d:	50                   	push   %eax
   2de2e:	68 d1 00 00 00       	push   $0xd1
   2de33:	e9 45 ff ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2de38:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2de3c:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de42:	50                   	push   %eax
   2de43:	68 d1 00 00 00       	push   $0xd1
   2de48:	e9 53 ff ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2de4d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2de51:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de57:	50                   	push   %eax
   2de58:	68 d1 00 00 00       	push   $0xd1
   2de5d:	e9 61 ff ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2de62:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2de66:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de6c:	50                   	push   %eax
   2de6d:	68 d1 00 00 00       	push   $0xd1
   2de72:	e9 6f ff ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2de77:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2de7b:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de81:	50                   	push   %eax
   2de82:	68 d1 00 00 00       	push   $0xd1
   2de87:	e9 ab fe ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2de8c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2de90:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2de96:	50                   	push   %eax
   2de97:	68 d0 00 00 00       	push   $0xd0
   2de9c:	e9 b9 fe ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2dea1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dea5:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2deab:	50                   	push   %eax
   2deac:	68 d0 00 00 00       	push   $0xd0
   2deb1:	e9 c7 fe ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2deb6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2deba:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dec0:	50                   	push   %eax
   2dec1:	68 d0 00 00 00       	push   $0xd0
   2dec6:	e9 d5 fe ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2decb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2decf:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2ded5:	50                   	push   %eax
   2ded6:	68 d0 00 00 00       	push   $0xd0
   2dedb:	e9 e3 fe ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2dee0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dee4:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2deea:	50                   	push   %eax
   2deeb:	68 d0 00 00 00       	push   $0xd0
   2def0:	e9 f1 fe ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2def5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2def9:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2deff:	50                   	push   %eax
   2df00:	68 da 00 00 00       	push   $0xda
   2df05:	e9 2d fe ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2df0a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2df0e:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2df14:	50                   	push   %eax
   2df15:	68 dc 00 00 00       	push   $0xdc
   2df1a:	e9 a4 fe ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2df1f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2df23:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2df29:	50                   	push   %eax
   2df2a:	68 da 00 00 00       	push   $0xda
   2df2f:	e9 b2 fe ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2df34:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2df38:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2df3e:	50                   	push   %eax
   2df3f:	68 db 00 00 00       	push   $0xdb
   2df44:	e9 34 fe ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2df49:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2df4d:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2df53:	50                   	push   %eax
   2df54:	68 dc 00 00 00       	push   $0xdc
   2df59:	e9 fc fd ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2df5e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2df62:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2df68:	50                   	push   %eax
   2df69:	68 dc 00 00 00       	push   $0xdc
   2df6e:	e9 0a fe ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2df73:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2df77:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2df7d:	50                   	push   %eax
   2df7e:	68 dc 00 00 00       	push   $0xdc
   2df83:	e9 18 fe ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2df88:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2df8c:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2df92:	50                   	push   %eax
   2df93:	68 e6 00 00 00       	push   $0xe6
   2df98:	e9 bd fd ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2df9d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dfa1:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dfa7:	50                   	push   %eax
   2dfa8:	68 da 00 00 00       	push   $0xda
   2dfad:	e9 a8 fd ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2dfb2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dfb6:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dfbc:	50                   	push   %eax
   2dfbd:	68 da 00 00 00       	push   $0xda
   2dfc2:	e9 b6 fd ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2dfc7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dfcb:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dfd1:	50                   	push   %eax
   2dfd2:	68 da 00 00 00       	push   $0xda
   2dfd7:	e9 c4 fd ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2dfdc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dfe0:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dfe6:	50                   	push   %eax
   2dfe7:	68 da 00 00 00       	push   $0xda
   2dfec:	e9 d2 fd ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2dff1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2dff5:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2dffb:	50                   	push   %eax
   2dffc:	68 dc 00 00 00       	push   $0xdc
   2e001:	e9 e0 fd ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e006:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e00a:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e010:	50                   	push   %eax
   2e011:	68 dc 00 00 00       	push   $0xdc
   2e016:	e9 1c fd ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e01b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e01f:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e025:	50                   	push   %eax
   2e026:	68 db 00 00 00       	push   $0xdb
   2e02b:	e9 2a fd ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2e030:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e034:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e03a:	50                   	push   %eax
   2e03b:	68 db 00 00 00       	push   $0xdb
   2e040:	e9 5b fd ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2e045:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e049:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e04f:	50                   	push   %eax
   2e050:	68 db 00 00 00       	push   $0xdb
   2e055:	e9 69 fd ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2e05a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e05e:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e064:	50                   	push   %eax
   2e065:	68 db 00 00 00       	push   $0xdb
   2e06a:	e9 77 fd ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e06f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e073:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e079:	50                   	push   %eax
   2e07a:	68 db 00 00 00       	push   $0xdb
   2e07f:	e9 b3 fc ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e084:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e088:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e08e:	50                   	push   %eax
   2e08f:	68 e4 00 00 00       	push   $0xe4
   2e094:	e9 9e fc ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e099:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e09d:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e0a3:	50                   	push   %eax
   2e0a4:	68 e4 00 00 00       	push   $0xe4
   2e0a9:	e9 38 fd ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e0ae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e0b2:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e0b8:	50                   	push   %eax
   2e0b9:	68 e4 00 00 00       	push   $0xe4
   2e0be:	e9 00 fd ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2e0c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e0c7:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e0cd:	50                   	push   %eax
   2e0ce:	68 e4 00 00 00       	push   $0xe4
   2e0d3:	e9 c8 fc ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2e0d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e0dc:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e0e2:	50                   	push   %eax
   2e0e3:	68 e4 00 00 00       	push   $0xe4
   2e0e8:	e9 90 fc ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2e0ed:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e0f1:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e0f7:	50                   	push   %eax
   2e0f8:	68 e4 00 00 00       	push   $0xe4
   2e0fd:	e9 58 fc ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2e102:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e106:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e10c:	50                   	push   %eax
   2e10d:	68 e5 00 00 00       	push   $0xe5
   2e112:	e9 20 fc ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e117:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e11b:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e121:	50                   	push   %eax
   2e122:	68 e5 00 00 00       	push   $0xe5
   2e127:	e9 ba fc ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e12c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e130:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e136:	50                   	push   %eax
   2e137:	68 e5 00 00 00       	push   $0xe5
   2e13c:	e9 82 fc ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2e141:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e145:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e14b:	50                   	push   %eax
   2e14c:	68 e5 00 00 00       	push   $0xe5
   2e151:	e9 4a fc ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2e156:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e15a:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e160:	50                   	push   %eax
   2e161:	68 e5 00 00 00       	push   $0xe5
   2e166:	e9 12 fc ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2e16b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e16f:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e175:	50                   	push   %eax
   2e176:	68 e5 00 00 00       	push   $0xe5
   2e17b:	e9 da fb ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2e180:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e184:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e18a:	50                   	push   %eax
   2e18b:	68 e6 00 00 00       	push   $0xe6
   2e190:	e9 a2 fb ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e195:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e199:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e19f:	50                   	push   %eax
   2e1a0:	68 e6 00 00 00       	push   $0xe6
   2e1a5:	e9 3c fc ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e1aa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e1ae:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e1b4:	50                   	push   %eax
   2e1b5:	68 e6 00 00 00       	push   $0xe6
   2e1ba:	e9 04 fc ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2e1bf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e1c3:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e1c9:	50                   	push   %eax
   2e1ca:	68 e6 00 00 00       	push   $0xe6
   2e1cf:	e9 cc fb ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2e1d4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e1d8:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e1de:	50                   	push   %eax
   2e1df:	68 e6 00 00 00       	push   $0xe6
   2e1e4:	e9 94 fb ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2e1e9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e1ed:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e1f3:	50                   	push   %eax
   2e1f4:	68 ec 00 00 00       	push   $0xec
   2e1f9:	e9 a2 fb ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2e1fe:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e202:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e208:	50                   	push   %eax
   2e209:	68 ec 00 00 00       	push   $0xec
   2e20e:	e9 6a fb ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2e213:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e217:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e21d:	50                   	push   %eax
   2e21e:	68 ec 00 00 00       	push   $0xec
   2e223:	e9 32 fb ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2e228:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e22c:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e232:	50                   	push   %eax
   2e233:	68 ed 00 00 00       	push   $0xed
   2e238:	e9 fa fa ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e23d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e241:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e247:	50                   	push   %eax
   2e248:	68 ed 00 00 00       	push   $0xed
   2e24d:	e9 94 fb ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e252:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e256:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e25c:	50                   	push   %eax
   2e25d:	68 ed 00 00 00       	push   $0xed
   2e262:	e9 5c fb ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2e267:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e26b:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e271:	50                   	push   %eax
   2e272:	68 ec 00 00 00       	push   $0xec
   2e277:	e9 47 fb ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2e27c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e280:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e286:	50                   	push   %eax
   2e287:	68 ec 00 00 00       	push   $0xec
   2e28c:	e9 55 fb ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e291:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e295:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e29b:	50                   	push   %eax
   2e29c:	68 ee 00 00 00       	push   $0xee
   2e2a1:	e9 b4 fa ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2e2a6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e2aa:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e2b0:	50                   	push   %eax
   2e2b1:	68 ec 00 00 00       	push   $0xec
   2e2b6:	e9 7c fa ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e2bb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e2bf:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e2c5:	50                   	push   %eax
   2e2c6:	68 ed 00 00 00       	push   $0xed
   2e2cb:	e9 d0 fa ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2e2d0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e2d4:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e2da:	50                   	push   %eax
   2e2db:	68 ed 00 00 00       	push   $0xed
   2e2e0:	e9 98 fa ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2e2e5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e2e9:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e2ef:	50                   	push   %eax
   2e2f0:	68 ed 00 00 00       	push   $0xed
   2e2f5:	e9 60 fa ff ff       	jmp    2dd5a <__score_alu_test_sbb+0x95a>
   2e2fa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e2fe:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e304:	50                   	push   %eax
   2e305:	68 ee 00 00 00       	push   $0xee
   2e30a:	e9 28 fa ff ff       	jmp    2dd37 <__score_alu_test_sbb+0x937>
   2e30f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e313:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e319:	50                   	push   %eax
   2e31a:	68 ee 00 00 00       	push   $0xee
   2e31f:	e9 c2 fa ff ff       	jmp    2dde6 <__score_alu_test_sbb+0x9e6>
   2e324:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e328:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e32e:	50                   	push   %eax
   2e32f:	68 ee 00 00 00       	push   $0xee
   2e334:	e9 8a fa ff ff       	jmp    2ddc3 <__score_alu_test_sbb+0x9c3>
   2e339:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e33d:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e343:	50                   	push   %eax
   2e344:	68 ee 00 00 00       	push   $0xee
   2e349:	e9 52 fa ff ff       	jmp    2dda0 <__score_alu_test_sbb+0x9a0>
   2e34e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e352:	8d 83 30 74 fe ff    	lea    -0x18bd0(%ebx),%eax
   2e358:	50                   	push   %eax
   2e359:	68 ee 00 00 00       	push   $0xee
   2e35e:	e9 1a fa ff ff       	jmp    2dd7d <__score_alu_test_sbb+0x97d>
   2e363:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2e36a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002e370 <__score_alu_test_and>:
   2e370:	e8 62 7f fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2e375:	05 8b 0c 02 00       	add    $0x20c8b,%eax
   2e37a:	55                   	push   %ebp
   2e37b:	57                   	push   %edi
   2e37c:	56                   	push   %esi
   2e37d:	53                   	push   %ebx
   2e37e:	83 ec 4c             	sub    $0x4c,%esp
   2e381:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
   2e387:	8d 74 24 40          	lea    0x40(%esp),%esi
   2e38b:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2e38f:	8d 7c 24 28          	lea    0x28(%esp),%edi
   2e393:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
   2e39a:	10 
   2e39b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
   2e3a2:	ff 
   2e3a3:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
   2e3aa:	ff 
   2e3ab:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
   2e3b2:	ff 
   2e3b3:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   2e3ba:	00 
   2e3bb:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   2e3c2:	00 
   2e3c3:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   2e3ca:	00 
   2e3cb:	89 74 24 14          	mov    %esi,0x14(%esp)
   2e3cf:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   2e3d3:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2e3d7:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2e3dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2e3e0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2e3e4:	be 00 00 00 10       	mov    $0x10000000,%esi
   2e3e9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2e3ed:	eb 0e                	jmp    2e3fd <__score_alu_test_and+0x8d>
   2e3ef:	90                   	nop
   2e3f0:	8b 44 24 10          	mov    0x10(%esp),%eax
   2e3f4:	8b 30                	mov    (%eax),%esi
   2e3f6:	83 c0 04             	add    $0x4,%eax
   2e3f9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2e3fd:	83 ec 04             	sub    $0x4,%esp
   2e400:	6a 20                	push   $0x20
   2e402:	57                   	push   %edi
   2e403:	56                   	push   %esi
   2e404:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2e408:	e8 63 15 fe ff       	call   f970 <alu_and>
   2e40d:	89 f1                	mov    %esi,%ecx
   2e40f:	83 c4 10             	add    $0x10,%esp
   2e412:	89 c3                	mov    %eax,%ebx
   2e414:	89 f8                	mov    %edi,%eax
   2e416:	21 c8                	and    %ecx,%eax
   2e418:	9c                   	pushf  
   2e419:	5a                   	pop    %edx
   2e41a:	39 c3                	cmp    %eax,%ebx
   2e41c:	0f 85 18 06 00 00    	jne    2ea3a <__score_alu_test_and+0x6ca>
   2e422:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e426:	89 d1                	mov    %edx,%ecx
   2e428:	83 e1 01             	and    $0x1,%ecx
   2e42b:	89 c3                	mov    %eax,%ebx
   2e42d:	83 e3 01             	and    $0x1,%ebx
   2e430:	38 cb                	cmp    %cl,%bl
   2e432:	0f 85 ed 05 00 00    	jne    2ea25 <__score_alu_test_and+0x6b5>
   2e438:	89 c3                	mov    %eax,%ebx
   2e43a:	89 d1                	mov    %edx,%ecx
   2e43c:	c0 eb 02             	shr    $0x2,%bl
   2e43f:	c1 e9 02             	shr    $0x2,%ecx
   2e442:	83 e3 01             	and    $0x1,%ebx
   2e445:	83 e1 01             	and    $0x1,%ecx
   2e448:	38 cb                	cmp    %cl,%bl
   2e44a:	0f 85 ff 05 00 00    	jne    2ea4f <__score_alu_test_and+0x6df>
   2e450:	89 c3                	mov    %eax,%ebx
   2e452:	89 d1                	mov    %edx,%ecx
   2e454:	c0 eb 07             	shr    $0x7,%bl
   2e457:	c0 e9 07             	shr    $0x7,%cl
   2e45a:	38 cb                	cmp    %cl,%bl
   2e45c:	0f 85 aa 06 00 00    	jne    2eb0c <__score_alu_test_and+0x79c>
   2e462:	89 d1                	mov    %edx,%ecx
   2e464:	c0 e8 06             	shr    $0x6,%al
   2e467:	c1 e9 06             	shr    $0x6,%ecx
   2e46a:	83 e0 01             	and    $0x1,%eax
   2e46d:	83 e1 01             	and    $0x1,%ecx
   2e470:	38 c8                	cmp    %cl,%al
   2e472:	0f 85 7f 06 00 00    	jne    2eaf7 <__score_alu_test_and+0x787>
   2e478:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2e47c:	c1 ea 0b             	shr    $0xb,%edx
   2e47f:	83 e2 01             	and    $0x1,%edx
   2e482:	c0 e8 03             	shr    $0x3,%al
   2e485:	83 e0 01             	and    $0x1,%eax
   2e488:	38 d0                	cmp    %dl,%al
   2e48a:	0f 85 52 06 00 00    	jne    2eae2 <__score_alu_test_and+0x772>
   2e490:	83 ec 04             	sub    $0x4,%esp
   2e493:	6a 10                	push   $0x10
   2e495:	57                   	push   %edi
   2e496:	56                   	push   %esi
   2e497:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2e49b:	e8 d0 14 fe ff       	call   f970 <alu_and>
   2e4a0:	89 f1                	mov    %esi,%ecx
   2e4a2:	83 c4 10             	add    $0x10,%esp
   2e4a5:	89 c3                	mov    %eax,%ebx
   2e4a7:	89 f8                	mov    %edi,%eax
   2e4a9:	66 21 c8             	and    %cx,%ax
   2e4ac:	9c                   	pushf  
   2e4ad:	5a                   	pop    %edx
   2e4ae:	0f b7 c0             	movzwl %ax,%eax
   2e4b1:	39 c3                	cmp    %eax,%ebx
   2e4b3:	0f 85 14 06 00 00    	jne    2eacd <__score_alu_test_and+0x75d>
   2e4b9:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e4bd:	89 d1                	mov    %edx,%ecx
   2e4bf:	83 e1 01             	and    $0x1,%ecx
   2e4c2:	89 c3                	mov    %eax,%ebx
   2e4c4:	83 e3 01             	and    $0x1,%ebx
   2e4c7:	38 cb                	cmp    %cl,%bl
   2e4c9:	0f 85 e9 05 00 00    	jne    2eab8 <__score_alu_test_and+0x748>
   2e4cf:	89 c3                	mov    %eax,%ebx
   2e4d1:	89 d1                	mov    %edx,%ecx
   2e4d3:	c0 eb 02             	shr    $0x2,%bl
   2e4d6:	c1 e9 02             	shr    $0x2,%ecx
   2e4d9:	83 e3 01             	and    $0x1,%ebx
   2e4dc:	83 e1 01             	and    $0x1,%ecx
   2e4df:	38 cb                	cmp    %cl,%bl
   2e4e1:	0f 85 14 05 00 00    	jne    2e9fb <__score_alu_test_and+0x68b>
   2e4e7:	89 d1                	mov    %edx,%ecx
   2e4e9:	c0 e8 07             	shr    $0x7,%al
   2e4ec:	c0 e9 07             	shr    $0x7,%cl
   2e4ef:	38 c8                	cmp    %cl,%al
   2e4f1:	0f 85 ef 04 00 00    	jne    2e9e6 <__score_alu_test_and+0x676>
   2e4f7:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e4fb:	89 d1                	mov    %edx,%ecx
   2e4fd:	c1 e9 06             	shr    $0x6,%ecx
   2e500:	c0 e8 06             	shr    $0x6,%al
   2e503:	83 e1 01             	and    $0x1,%ecx
   2e506:	83 e0 01             	and    $0x1,%eax
   2e509:	38 c8                	cmp    %cl,%al
   2e50b:	0f 85 ff 04 00 00    	jne    2ea10 <__score_alu_test_and+0x6a0>
   2e511:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2e515:	c1 ea 0b             	shr    $0xb,%edx
   2e518:	83 e2 01             	and    $0x1,%edx
   2e51b:	c0 e8 03             	shr    $0x3,%al
   2e51e:	83 e0 01             	and    $0x1,%eax
   2e521:	38 d0                	cmp    %dl,%al
   2e523:	0f 85 3b 05 00 00    	jne    2ea64 <__score_alu_test_and+0x6f4>
   2e529:	83 ec 04             	sub    $0x4,%esp
   2e52c:	6a 08                	push   $0x8
   2e52e:	57                   	push   %edi
   2e52f:	56                   	push   %esi
   2e530:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2e534:	e8 37 14 fe ff       	call   f970 <alu_and>
   2e539:	89 f1                	mov    %esi,%ecx
   2e53b:	83 c4 10             	add    $0x10,%esp
   2e53e:	89 c3                	mov    %eax,%ebx
   2e540:	89 f8                	mov    %edi,%eax
   2e542:	20 c8                	and    %cl,%al
   2e544:	9c                   	pushf  
   2e545:	5a                   	pop    %edx
   2e546:	0f b6 c0             	movzbl %al,%eax
   2e549:	39 c3                	cmp    %eax,%ebx
   2e54b:	0f 85 fa 05 00 00    	jne    2eb4b <__score_alu_test_and+0x7db>
   2e551:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e555:	89 d1                	mov    %edx,%ecx
   2e557:	83 e1 01             	and    $0x1,%ecx
   2e55a:	89 c3                	mov    %eax,%ebx
   2e55c:	83 e3 01             	and    $0x1,%ebx
   2e55f:	38 cb                	cmp    %cl,%bl
   2e561:	0f 85 cf 05 00 00    	jne    2eb36 <__score_alu_test_and+0x7c6>
   2e567:	89 c3                	mov    %eax,%ebx
   2e569:	89 d1                	mov    %edx,%ecx
   2e56b:	c0 eb 02             	shr    $0x2,%bl
   2e56e:	c1 e9 02             	shr    $0x2,%ecx
   2e571:	83 e3 01             	and    $0x1,%ebx
   2e574:	83 e1 01             	and    $0x1,%ecx
   2e577:	38 cb                	cmp    %cl,%bl
   2e579:	0f 85 a2 05 00 00    	jne    2eb21 <__score_alu_test_and+0x7b1>
   2e57f:	89 c3                	mov    %eax,%ebx
   2e581:	89 d1                	mov    %edx,%ecx
   2e583:	c0 eb 07             	shr    $0x7,%bl
   2e586:	c0 e9 07             	shr    $0x7,%cl
   2e589:	38 cb                	cmp    %cl,%bl
   2e58b:	0f 85 fd 04 00 00    	jne    2ea8e <__score_alu_test_and+0x71e>
   2e591:	89 d1                	mov    %edx,%ecx
   2e593:	c0 e8 06             	shr    $0x6,%al
   2e596:	c1 e9 06             	shr    $0x6,%ecx
   2e599:	83 e0 01             	and    $0x1,%eax
   2e59c:	83 e1 01             	and    $0x1,%ecx
   2e59f:	38 c8                	cmp    %cl,%al
   2e5a1:	0f 85 d2 04 00 00    	jne    2ea79 <__score_alu_test_and+0x709>
   2e5a7:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2e5ab:	c1 ea 0b             	shr    $0xb,%edx
   2e5ae:	83 e2 01             	and    $0x1,%edx
   2e5b1:	c0 e8 03             	shr    $0x3,%al
   2e5b4:	83 e0 01             	and    $0x1,%eax
   2e5b7:	38 d0                	cmp    %dl,%al
   2e5b9:	0f 85 e4 04 00 00    	jne    2eaa3 <__score_alu_test_and+0x733>
   2e5bf:	8b 74 24 14          	mov    0x14(%esp),%esi
   2e5c3:	39 74 24 10          	cmp    %esi,0x10(%esp)
   2e5c7:	0f 85 23 fe ff ff    	jne    2e3f0 <__score_alu_test_and+0x80>
   2e5cd:	8b 44 24 18          	mov    0x18(%esp),%eax
   2e5d1:	39 f0                	cmp    %esi,%eax
   2e5d3:	74 13                	je     2e5e8 <__score_alu_test_and+0x278>
   2e5d5:	8b 38                	mov    (%eax),%edi
   2e5d7:	83 c0 04             	add    $0x4,%eax
   2e5da:	89 44 24 18          	mov    %eax,0x18(%esp)
   2e5de:	e9 fd fd ff ff       	jmp    2e3e0 <__score_alu_test_and+0x70>
   2e5e3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2e5e7:	90                   	nop
   2e5e8:	83 ec 0c             	sub    $0xc,%esp
   2e5eb:	6a 00                	push   $0x0
   2e5ed:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   2e5f1:	89 fb                	mov    %edi,%ebx
   2e5f3:	e8 38 5b fd ff       	call   4130 <time@plt>
   2e5f8:	89 04 24             	mov    %eax,(%esp)
   2e5fb:	e8 90 5b fd ff       	call   4190 <srand@plt>
   2e600:	83 c4 10             	add    $0x10,%esp
   2e603:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2e60a:	00 
   2e60b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2e60f:	90                   	nop
   2e610:	8b 74 24 0c          	mov    0xc(%esp),%esi
   2e614:	89 f3                	mov    %esi,%ebx
   2e616:	e8 d5 5b fd ff       	call   41f0 <rand@plt>
   2e61b:	89 74 24 0c          	mov    %esi,0xc(%esp)
   2e61f:	89 c7                	mov    %eax,%edi
   2e621:	e8 ca 5b fd ff       	call   41f0 <rand@plt>
   2e626:	83 ec 04             	sub    $0x4,%esp
   2e629:	6a 20                	push   $0x20
   2e62b:	89 c6                	mov    %eax,%esi
   2e62d:	57                   	push   %edi
   2e62e:	50                   	push   %eax
   2e62f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2e633:	e8 38 13 fe ff       	call   f970 <alu_and>
   2e638:	89 f1                	mov    %esi,%ecx
   2e63a:	83 c4 10             	add    $0x10,%esp
   2e63d:	89 c3                	mov    %eax,%ebx
   2e63f:	89 f8                	mov    %edi,%eax
   2e641:	21 c8                	and    %ecx,%eax
   2e643:	9c                   	pushf  
   2e644:	5a                   	pop    %edx
   2e645:	39 c3                	cmp    %eax,%ebx
   2e647:	0f 85 84 03 00 00    	jne    2e9d1 <__score_alu_test_and+0x661>
   2e64d:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e651:	89 d1                	mov    %edx,%ecx
   2e653:	83 e1 01             	and    $0x1,%ecx
   2e656:	89 c3                	mov    %eax,%ebx
   2e658:	83 e3 01             	and    $0x1,%ebx
   2e65b:	38 cb                	cmp    %cl,%bl
   2e65d:	0f 85 59 03 00 00    	jne    2e9bc <__score_alu_test_and+0x64c>
   2e663:	89 c3                	mov    %eax,%ebx
   2e665:	89 d1                	mov    %edx,%ecx
   2e667:	c0 eb 02             	shr    $0x2,%bl
   2e66a:	c1 e9 02             	shr    $0x2,%ecx
   2e66d:	83 e3 01             	and    $0x1,%ebx
   2e670:	83 e1 01             	and    $0x1,%ecx
   2e673:	38 cb                	cmp    %cl,%bl
   2e675:	0f 85 2c 03 00 00    	jne    2e9a7 <__score_alu_test_and+0x637>
   2e67b:	89 c3                	mov    %eax,%ebx
   2e67d:	89 d1                	mov    %edx,%ecx
   2e67f:	c0 eb 07             	shr    $0x7,%bl
   2e682:	c0 e9 07             	shr    $0x7,%cl
   2e685:	38 cb                	cmp    %cl,%bl
   2e687:	0f 85 05 03 00 00    	jne    2e992 <__score_alu_test_and+0x622>
   2e68d:	89 d1                	mov    %edx,%ecx
   2e68f:	c0 e8 06             	shr    $0x6,%al
   2e692:	c1 e9 06             	shr    $0x6,%ecx
   2e695:	83 e0 01             	and    $0x1,%eax
   2e698:	83 e1 01             	and    $0x1,%ecx
   2e69b:	38 c8                	cmp    %cl,%al
   2e69d:	0f 85 da 02 00 00    	jne    2e97d <__score_alu_test_and+0x60d>
   2e6a3:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2e6a7:	c1 ea 0b             	shr    $0xb,%edx
   2e6aa:	83 e2 01             	and    $0x1,%edx
   2e6ad:	c0 e8 03             	shr    $0x3,%al
   2e6b0:	83 e0 01             	and    $0x1,%eax
   2e6b3:	38 d0                	cmp    %dl,%al
   2e6b5:	0f 85 ad 02 00 00    	jne    2e968 <__score_alu_test_and+0x5f8>
   2e6bb:	83 ec 04             	sub    $0x4,%esp
   2e6be:	6a 10                	push   $0x10
   2e6c0:	57                   	push   %edi
   2e6c1:	56                   	push   %esi
   2e6c2:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2e6c6:	e8 a5 12 fe ff       	call   f970 <alu_and>
   2e6cb:	89 f1                	mov    %esi,%ecx
   2e6cd:	83 c4 10             	add    $0x10,%esp
   2e6d0:	89 c3                	mov    %eax,%ebx
   2e6d2:	89 f8                	mov    %edi,%eax
   2e6d4:	66 21 c8             	and    %cx,%ax
   2e6d7:	9c                   	pushf  
   2e6d8:	5a                   	pop    %edx
   2e6d9:	0f b7 c0             	movzwl %ax,%eax
   2e6dc:	39 c3                	cmp    %eax,%ebx
   2e6de:	0f 85 6f 02 00 00    	jne    2e953 <__score_alu_test_and+0x5e3>
   2e6e4:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e6e8:	89 d1                	mov    %edx,%ecx
   2e6ea:	83 e1 01             	and    $0x1,%ecx
   2e6ed:	89 c3                	mov    %eax,%ebx
   2e6ef:	83 e3 01             	and    $0x1,%ebx
   2e6f2:	38 cb                	cmp    %cl,%bl
   2e6f4:	0f 85 44 02 00 00    	jne    2e93e <__score_alu_test_and+0x5ce>
   2e6fa:	89 c3                	mov    %eax,%ebx
   2e6fc:	89 d1                	mov    %edx,%ecx
   2e6fe:	c0 eb 02             	shr    $0x2,%bl
   2e701:	c1 e9 02             	shr    $0x2,%ecx
   2e704:	83 e3 01             	and    $0x1,%ebx
   2e707:	83 e1 01             	and    $0x1,%ecx
   2e70a:	38 cb                	cmp    %cl,%bl
   2e70c:	0f 85 17 02 00 00    	jne    2e929 <__score_alu_test_and+0x5b9>
   2e712:	89 d1                	mov    %edx,%ecx
   2e714:	c0 e8 07             	shr    $0x7,%al
   2e717:	c0 e9 07             	shr    $0x7,%cl
   2e71a:	38 c8                	cmp    %cl,%al
   2e71c:	0f 85 f2 01 00 00    	jne    2e914 <__score_alu_test_and+0x5a4>
   2e722:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e726:	89 d1                	mov    %edx,%ecx
   2e728:	c1 e9 06             	shr    $0x6,%ecx
   2e72b:	c0 e8 06             	shr    $0x6,%al
   2e72e:	83 e1 01             	and    $0x1,%ecx
   2e731:	83 e0 01             	and    $0x1,%eax
   2e734:	38 c8                	cmp    %cl,%al
   2e736:	0f 85 c3 01 00 00    	jne    2e8ff <__score_alu_test_and+0x58f>
   2e73c:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2e740:	c1 ea 0b             	shr    $0xb,%edx
   2e743:	83 e2 01             	and    $0x1,%edx
   2e746:	c0 e8 03             	shr    $0x3,%al
   2e749:	83 e0 01             	and    $0x1,%eax
   2e74c:	38 d0                	cmp    %dl,%al
   2e74e:	0f 85 96 01 00 00    	jne    2e8ea <__score_alu_test_and+0x57a>
   2e754:	83 ec 04             	sub    $0x4,%esp
   2e757:	6a 08                	push   $0x8
   2e759:	57                   	push   %edi
   2e75a:	56                   	push   %esi
   2e75b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2e75f:	e8 0c 12 fe ff       	call   f970 <alu_and>
   2e764:	89 f1                	mov    %esi,%ecx
   2e766:	83 c4 10             	add    $0x10,%esp
   2e769:	89 c3                	mov    %eax,%ebx
   2e76b:	89 f8                	mov    %edi,%eax
   2e76d:	20 c8                	and    %cl,%al
   2e76f:	9c                   	pushf  
   2e770:	5a                   	pop    %edx
   2e771:	0f b6 c0             	movzbl %al,%eax
   2e774:	39 c3                	cmp    %eax,%ebx
   2e776:	0f 85 4b 01 00 00    	jne    2e8c7 <__score_alu_test_and+0x557>
   2e77c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2e780:	89 d1                	mov    %edx,%ecx
   2e782:	83 e1 01             	and    $0x1,%ecx
   2e785:	89 c3                	mov    %eax,%ebx
   2e787:	83 e3 01             	and    $0x1,%ebx
   2e78a:	38 cb                	cmp    %cl,%bl
   2e78c:	0f 85 12 01 00 00    	jne    2e8a4 <__score_alu_test_and+0x534>
   2e792:	89 c3                	mov    %eax,%ebx
   2e794:	89 d1                	mov    %edx,%ecx
   2e796:	c0 eb 02             	shr    $0x2,%bl
   2e799:	c1 e9 02             	shr    $0x2,%ecx
   2e79c:	83 e3 01             	and    $0x1,%ebx
   2e79f:	83 e1 01             	and    $0x1,%ecx
   2e7a2:	38 cb                	cmp    %cl,%bl
   2e7a4:	0f 85 d7 00 00 00    	jne    2e881 <__score_alu_test_and+0x511>
   2e7aa:	89 c3                	mov    %eax,%ebx
   2e7ac:	89 d1                	mov    %edx,%ecx
   2e7ae:	c0 eb 07             	shr    $0x7,%bl
   2e7b1:	c0 e9 07             	shr    $0x7,%cl
   2e7b4:	38 cb                	cmp    %cl,%bl
   2e7b6:	0f 85 a2 00 00 00    	jne    2e85e <__score_alu_test_and+0x4ee>
   2e7bc:	89 d1                	mov    %edx,%ecx
   2e7be:	c0 e8 06             	shr    $0x6,%al
   2e7c1:	c1 e9 06             	shr    $0x6,%ecx
   2e7c4:	83 e0 01             	and    $0x1,%eax
   2e7c7:	83 e1 01             	and    $0x1,%ecx
   2e7ca:	38 c8                	cmp    %cl,%al
   2e7cc:	75 6d                	jne    2e83b <__score_alu_test_and+0x4cb>
   2e7ce:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2e7d2:	c1 ea 0b             	shr    $0xb,%edx
   2e7d5:	83 e2 01             	and    $0x1,%edx
   2e7d8:	c0 e8 03             	shr    $0x3,%al
   2e7db:	83 e0 01             	and    $0x1,%eax
   2e7de:	38 d0                	cmp    %dl,%al
   2e7e0:	75 36                	jne    2e818 <__score_alu_test_and+0x4a8>
   2e7e2:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2e7e7:	0f 85 23 fe ff ff    	jne    2e610 <__score_alu_test_and+0x2a0>
   2e7ed:	83 ec 0c             	sub    $0xc,%esp
   2e7f0:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2e7f4:	8d 87 74 71 fe ff    	lea    -0x18e8c(%edi),%eax
   2e7fa:	89 fb                	mov    %edi,%ebx
   2e7fc:	50                   	push   %eax
   2e7fd:	e8 ae 5a fd ff       	call   42b0 <puts@plt>
   2e802:	8d 87 e9 6f fe ff    	lea    -0x19017(%edi),%eax
   2e808:	89 04 24             	mov    %eax,(%esp)
   2e80b:	e8 10 c0 ff ff       	call   2a820 <score_reg_alu_fpu>
   2e810:	83 c4 5c             	add    $0x5c,%esp
   2e813:	5b                   	pop    %ebx
   2e814:	5e                   	pop    %esi
   2e815:	5f                   	pop    %edi
   2e816:	5d                   	pop    %ebp
   2e817:	c3                   	ret    
   2e818:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e81c:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e822:	50                   	push   %eax
   2e823:	68 0c 01 00 00       	push   $0x10c
   2e828:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2e82e:	50                   	push   %eax
   2e82f:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   2e835:	50                   	push   %eax
   2e836:	e8 d5 5a fd ff       	call   4310 <__assert_fail@plt>
   2e83b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e83f:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e845:	50                   	push   %eax
   2e846:	68 0c 01 00 00       	push   $0x10c
   2e84b:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2e851:	50                   	push   %eax
   2e852:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2e858:	50                   	push   %eax
   2e859:	e8 b2 5a fd ff       	call   4310 <__assert_fail@plt>
   2e85e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e862:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e868:	50                   	push   %eax
   2e869:	68 0c 01 00 00       	push   $0x10c
   2e86e:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2e874:	50                   	push   %eax
   2e875:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2e87b:	50                   	push   %eax
   2e87c:	e8 8f 5a fd ff       	call   4310 <__assert_fail@plt>
   2e881:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e885:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e88b:	50                   	push   %eax
   2e88c:	68 0c 01 00 00       	push   $0x10c
   2e891:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2e897:	50                   	push   %eax
   2e898:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2e89e:	50                   	push   %eax
   2e89f:	e8 6c 5a fd ff       	call   4310 <__assert_fail@plt>
   2e8a4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e8a8:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e8ae:	50                   	push   %eax
   2e8af:	68 0c 01 00 00       	push   $0x10c
   2e8b4:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2e8ba:	50                   	push   %eax
   2e8bb:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2e8c1:	50                   	push   %eax
   2e8c2:	e8 49 5a fd ff       	call   4310 <__assert_fail@plt>
   2e8c7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e8cb:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e8d1:	50                   	push   %eax
   2e8d2:	68 0c 01 00 00       	push   $0x10c
   2e8d7:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2e8dd:	50                   	push   %eax
   2e8de:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   2e8e4:	50                   	push   %eax
   2e8e5:	e8 26 5a fd ff       	call   4310 <__assert_fail@plt>
   2e8ea:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e8ee:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e8f4:	50                   	push   %eax
   2e8f5:	68 0b 01 00 00       	push   $0x10b
   2e8fa:	e9 29 ff ff ff       	jmp    2e828 <__score_alu_test_and+0x4b8>
   2e8ff:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e903:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e909:	50                   	push   %eax
   2e90a:	68 0b 01 00 00       	push   $0x10b
   2e90f:	e9 37 ff ff ff       	jmp    2e84b <__score_alu_test_and+0x4db>
   2e914:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e918:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e91e:	50                   	push   %eax
   2e91f:	68 0b 01 00 00       	push   $0x10b
   2e924:	e9 45 ff ff ff       	jmp    2e86e <__score_alu_test_and+0x4fe>
   2e929:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e92d:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e933:	50                   	push   %eax
   2e934:	68 0b 01 00 00       	push   $0x10b
   2e939:	e9 53 ff ff ff       	jmp    2e891 <__score_alu_test_and+0x521>
   2e93e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e942:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e948:	50                   	push   %eax
   2e949:	68 0b 01 00 00       	push   $0x10b
   2e94e:	e9 61 ff ff ff       	jmp    2e8b4 <__score_alu_test_and+0x544>
   2e953:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e957:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e95d:	50                   	push   %eax
   2e95e:	68 0b 01 00 00       	push   $0x10b
   2e963:	e9 6f ff ff ff       	jmp    2e8d7 <__score_alu_test_and+0x567>
   2e968:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e96c:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e972:	50                   	push   %eax
   2e973:	68 0a 01 00 00       	push   $0x10a
   2e978:	e9 ab fe ff ff       	jmp    2e828 <__score_alu_test_and+0x4b8>
   2e97d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e981:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e987:	50                   	push   %eax
   2e988:	68 0a 01 00 00       	push   $0x10a
   2e98d:	e9 b9 fe ff ff       	jmp    2e84b <__score_alu_test_and+0x4db>
   2e992:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e996:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e99c:	50                   	push   %eax
   2e99d:	68 0a 01 00 00       	push   $0x10a
   2e9a2:	e9 c7 fe ff ff       	jmp    2e86e <__score_alu_test_and+0x4fe>
   2e9a7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e9ab:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e9b1:	50                   	push   %eax
   2e9b2:	68 0a 01 00 00       	push   $0x10a
   2e9b7:	e9 d5 fe ff ff       	jmp    2e891 <__score_alu_test_and+0x521>
   2e9bc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e9c0:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e9c6:	50                   	push   %eax
   2e9c7:	68 0a 01 00 00       	push   $0x10a
   2e9cc:	e9 e3 fe ff ff       	jmp    2e8b4 <__score_alu_test_and+0x544>
   2e9d1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e9d5:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e9db:	50                   	push   %eax
   2e9dc:	68 0a 01 00 00       	push   $0x10a
   2e9e1:	e9 f1 fe ff ff       	jmp    2e8d7 <__score_alu_test_and+0x567>
   2e9e6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e9ea:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2e9f0:	50                   	push   %eax
   2e9f1:	68 01 01 00 00       	push   $0x101
   2e9f6:	e9 73 fe ff ff       	jmp    2e86e <__score_alu_test_and+0x4fe>
   2e9fb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2e9ff:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea05:	50                   	push   %eax
   2ea06:	68 01 01 00 00       	push   $0x101
   2ea0b:	e9 81 fe ff ff       	jmp    2e891 <__score_alu_test_and+0x521>
   2ea10:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ea14:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea1a:	50                   	push   %eax
   2ea1b:	68 01 01 00 00       	push   $0x101
   2ea20:	e9 26 fe ff ff       	jmp    2e84b <__score_alu_test_and+0x4db>
   2ea25:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ea29:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea2f:	50                   	push   %eax
   2ea30:	68 00 01 00 00       	push   $0x100
   2ea35:	e9 7a fe ff ff       	jmp    2e8b4 <__score_alu_test_and+0x544>
   2ea3a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ea3e:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea44:	50                   	push   %eax
   2ea45:	68 00 01 00 00       	push   $0x100
   2ea4a:	e9 88 fe ff ff       	jmp    2e8d7 <__score_alu_test_and+0x567>
   2ea4f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ea53:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea59:	50                   	push   %eax
   2ea5a:	68 00 01 00 00       	push   $0x100
   2ea5f:	e9 2d fe ff ff       	jmp    2e891 <__score_alu_test_and+0x521>
   2ea64:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ea68:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea6e:	50                   	push   %eax
   2ea6f:	68 01 01 00 00       	push   $0x101
   2ea74:	e9 af fd ff ff       	jmp    2e828 <__score_alu_test_and+0x4b8>
   2ea79:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ea7d:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea83:	50                   	push   %eax
   2ea84:	68 02 01 00 00       	push   $0x102
   2ea89:	e9 bd fd ff ff       	jmp    2e84b <__score_alu_test_and+0x4db>
   2ea8e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ea92:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ea98:	50                   	push   %eax
   2ea99:	68 02 01 00 00       	push   $0x102
   2ea9e:	e9 cb fd ff ff       	jmp    2e86e <__score_alu_test_and+0x4fe>
   2eaa3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eaa7:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eaad:	50                   	push   %eax
   2eaae:	68 02 01 00 00       	push   $0x102
   2eab3:	e9 70 fd ff ff       	jmp    2e828 <__score_alu_test_and+0x4b8>
   2eab8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eabc:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eac2:	50                   	push   %eax
   2eac3:	68 01 01 00 00       	push   $0x101
   2eac8:	e9 e7 fd ff ff       	jmp    2e8b4 <__score_alu_test_and+0x544>
   2eacd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ead1:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2ead7:	50                   	push   %eax
   2ead8:	68 01 01 00 00       	push   $0x101
   2eadd:	e9 f5 fd ff ff       	jmp    2e8d7 <__score_alu_test_and+0x567>
   2eae2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eae6:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eaec:	50                   	push   %eax
   2eaed:	68 00 01 00 00       	push   $0x100
   2eaf2:	e9 31 fd ff ff       	jmp    2e828 <__score_alu_test_and+0x4b8>
   2eaf7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eafb:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eb01:	50                   	push   %eax
   2eb02:	68 00 01 00 00       	push   $0x100
   2eb07:	e9 3f fd ff ff       	jmp    2e84b <__score_alu_test_and+0x4db>
   2eb0c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eb10:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eb16:	50                   	push   %eax
   2eb17:	68 00 01 00 00       	push   $0x100
   2eb1c:	e9 4d fd ff ff       	jmp    2e86e <__score_alu_test_and+0x4fe>
   2eb21:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eb25:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eb2b:	50                   	push   %eax
   2eb2c:	68 02 01 00 00       	push   $0x102
   2eb31:	e9 5b fd ff ff       	jmp    2e891 <__score_alu_test_and+0x521>
   2eb36:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eb3a:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eb40:	50                   	push   %eax
   2eb41:	68 02 01 00 00       	push   $0x102
   2eb46:	e9 69 fd ff ff       	jmp    2e8b4 <__score_alu_test_and+0x544>
   2eb4b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2eb4f:	8d 83 18 74 fe ff    	lea    -0x18be8(%ebx),%eax
   2eb55:	50                   	push   %eax
   2eb56:	68 02 01 00 00       	push   $0x102
   2eb5b:	e9 77 fd ff ff       	jmp    2e8d7 <__score_alu_test_and+0x567>

0002eb60 <__score_alu_test_or>:
   2eb60:	e8 72 77 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2eb65:	05 9b 04 02 00       	add    $0x2049b,%eax
   2eb6a:	55                   	push   %ebp
   2eb6b:	57                   	push   %edi
   2eb6c:	56                   	push   %esi
   2eb6d:	53                   	push   %ebx
   2eb6e:	83 ec 4c             	sub    $0x4c,%esp
   2eb71:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
   2eb77:	8d 74 24 40          	lea    0x40(%esp),%esi
   2eb7b:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2eb7f:	8d 7c 24 28          	lea    0x28(%esp),%edi
   2eb83:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
   2eb8a:	10 
   2eb8b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
   2eb92:	ff 
   2eb93:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
   2eb9a:	ff 
   2eb9b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
   2eba2:	ff 
   2eba3:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   2ebaa:	00 
   2ebab:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   2ebb2:	00 
   2ebb3:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   2ebba:	00 
   2ebbb:	89 74 24 14          	mov    %esi,0x14(%esp)
   2ebbf:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   2ebc3:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2ebc7:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2ebcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ebd0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2ebd4:	be 00 00 00 10       	mov    $0x10000000,%esi
   2ebd9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2ebdd:	eb 0e                	jmp    2ebed <__score_alu_test_or+0x8d>
   2ebdf:	90                   	nop
   2ebe0:	8b 44 24 10          	mov    0x10(%esp),%eax
   2ebe4:	8b 30                	mov    (%eax),%esi
   2ebe6:	83 c0 04             	add    $0x4,%eax
   2ebe9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2ebed:	83 ec 04             	sub    $0x4,%esp
   2ebf0:	6a 20                	push   $0x20
   2ebf2:	57                   	push   %edi
   2ebf3:	56                   	push   %esi
   2ebf4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2ebf8:	e8 13 0f fe ff       	call   fb10 <alu_or>
   2ebfd:	89 f1                	mov    %esi,%ecx
   2ebff:	83 c4 10             	add    $0x10,%esp
   2ec02:	89 c3                	mov    %eax,%ebx
   2ec04:	89 f8                	mov    %edi,%eax
   2ec06:	09 c8                	or     %ecx,%eax
   2ec08:	9c                   	pushf  
   2ec09:	5a                   	pop    %edx
   2ec0a:	39 c3                	cmp    %eax,%ebx
   2ec0c:	0f 85 18 06 00 00    	jne    2f22a <__score_alu_test_or+0x6ca>
   2ec12:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2ec16:	89 d1                	mov    %edx,%ecx
   2ec18:	83 e1 01             	and    $0x1,%ecx
   2ec1b:	89 c3                	mov    %eax,%ebx
   2ec1d:	83 e3 01             	and    $0x1,%ebx
   2ec20:	38 cb                	cmp    %cl,%bl
   2ec22:	0f 85 ed 05 00 00    	jne    2f215 <__score_alu_test_or+0x6b5>
   2ec28:	89 c3                	mov    %eax,%ebx
   2ec2a:	89 d1                	mov    %edx,%ecx
   2ec2c:	c0 eb 02             	shr    $0x2,%bl
   2ec2f:	c1 e9 02             	shr    $0x2,%ecx
   2ec32:	83 e3 01             	and    $0x1,%ebx
   2ec35:	83 e1 01             	and    $0x1,%ecx
   2ec38:	38 cb                	cmp    %cl,%bl
   2ec3a:	0f 85 ff 05 00 00    	jne    2f23f <__score_alu_test_or+0x6df>
   2ec40:	89 c3                	mov    %eax,%ebx
   2ec42:	89 d1                	mov    %edx,%ecx
   2ec44:	c0 eb 07             	shr    $0x7,%bl
   2ec47:	c0 e9 07             	shr    $0x7,%cl
   2ec4a:	38 cb                	cmp    %cl,%bl
   2ec4c:	0f 85 aa 06 00 00    	jne    2f2fc <__score_alu_test_or+0x79c>
   2ec52:	89 d1                	mov    %edx,%ecx
   2ec54:	c0 e8 06             	shr    $0x6,%al
   2ec57:	c1 e9 06             	shr    $0x6,%ecx
   2ec5a:	83 e0 01             	and    $0x1,%eax
   2ec5d:	83 e1 01             	and    $0x1,%ecx
   2ec60:	38 c8                	cmp    %cl,%al
   2ec62:	0f 85 7f 06 00 00    	jne    2f2e7 <__score_alu_test_or+0x787>
   2ec68:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2ec6c:	c1 ea 0b             	shr    $0xb,%edx
   2ec6f:	83 e2 01             	and    $0x1,%edx
   2ec72:	c0 e8 03             	shr    $0x3,%al
   2ec75:	83 e0 01             	and    $0x1,%eax
   2ec78:	38 d0                	cmp    %dl,%al
   2ec7a:	0f 85 52 06 00 00    	jne    2f2d2 <__score_alu_test_or+0x772>
   2ec80:	83 ec 04             	sub    $0x4,%esp
   2ec83:	6a 10                	push   $0x10
   2ec85:	57                   	push   %edi
   2ec86:	56                   	push   %esi
   2ec87:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2ec8b:	e8 80 0e fe ff       	call   fb10 <alu_or>
   2ec90:	89 f1                	mov    %esi,%ecx
   2ec92:	83 c4 10             	add    $0x10,%esp
   2ec95:	89 c3                	mov    %eax,%ebx
   2ec97:	89 f8                	mov    %edi,%eax
   2ec99:	66 09 c8             	or     %cx,%ax
   2ec9c:	9c                   	pushf  
   2ec9d:	5a                   	pop    %edx
   2ec9e:	0f b7 c0             	movzwl %ax,%eax
   2eca1:	39 c3                	cmp    %eax,%ebx
   2eca3:	0f 85 14 06 00 00    	jne    2f2bd <__score_alu_test_or+0x75d>
   2eca9:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2ecad:	89 d1                	mov    %edx,%ecx
   2ecaf:	83 e1 01             	and    $0x1,%ecx
   2ecb2:	89 c3                	mov    %eax,%ebx
   2ecb4:	83 e3 01             	and    $0x1,%ebx
   2ecb7:	38 cb                	cmp    %cl,%bl
   2ecb9:	0f 85 e9 05 00 00    	jne    2f2a8 <__score_alu_test_or+0x748>
   2ecbf:	89 c3                	mov    %eax,%ebx
   2ecc1:	89 d1                	mov    %edx,%ecx
   2ecc3:	c0 eb 02             	shr    $0x2,%bl
   2ecc6:	c1 e9 02             	shr    $0x2,%ecx
   2ecc9:	83 e3 01             	and    $0x1,%ebx
   2eccc:	83 e1 01             	and    $0x1,%ecx
   2eccf:	38 cb                	cmp    %cl,%bl
   2ecd1:	0f 85 14 05 00 00    	jne    2f1eb <__score_alu_test_or+0x68b>
   2ecd7:	89 d1                	mov    %edx,%ecx
   2ecd9:	c0 e8 07             	shr    $0x7,%al
   2ecdc:	c0 e9 07             	shr    $0x7,%cl
   2ecdf:	38 c8                	cmp    %cl,%al
   2ece1:	0f 85 ef 04 00 00    	jne    2f1d6 <__score_alu_test_or+0x676>
   2ece7:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2eceb:	89 d1                	mov    %edx,%ecx
   2eced:	c1 e9 06             	shr    $0x6,%ecx
   2ecf0:	c0 e8 06             	shr    $0x6,%al
   2ecf3:	83 e1 01             	and    $0x1,%ecx
   2ecf6:	83 e0 01             	and    $0x1,%eax
   2ecf9:	38 c8                	cmp    %cl,%al
   2ecfb:	0f 85 ff 04 00 00    	jne    2f200 <__score_alu_test_or+0x6a0>
   2ed01:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2ed05:	c1 ea 0b             	shr    $0xb,%edx
   2ed08:	83 e2 01             	and    $0x1,%edx
   2ed0b:	c0 e8 03             	shr    $0x3,%al
   2ed0e:	83 e0 01             	and    $0x1,%eax
   2ed11:	38 d0                	cmp    %dl,%al
   2ed13:	0f 85 3b 05 00 00    	jne    2f254 <__score_alu_test_or+0x6f4>
   2ed19:	83 ec 04             	sub    $0x4,%esp
   2ed1c:	6a 08                	push   $0x8
   2ed1e:	57                   	push   %edi
   2ed1f:	56                   	push   %esi
   2ed20:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2ed24:	e8 e7 0d fe ff       	call   fb10 <alu_or>
   2ed29:	89 f1                	mov    %esi,%ecx
   2ed2b:	83 c4 10             	add    $0x10,%esp
   2ed2e:	89 c3                	mov    %eax,%ebx
   2ed30:	89 f8                	mov    %edi,%eax
   2ed32:	08 c8                	or     %cl,%al
   2ed34:	9c                   	pushf  
   2ed35:	5a                   	pop    %edx
   2ed36:	0f b6 c0             	movzbl %al,%eax
   2ed39:	39 c3                	cmp    %eax,%ebx
   2ed3b:	0f 85 fa 05 00 00    	jne    2f33b <__score_alu_test_or+0x7db>
   2ed41:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2ed45:	89 d1                	mov    %edx,%ecx
   2ed47:	83 e1 01             	and    $0x1,%ecx
   2ed4a:	89 c3                	mov    %eax,%ebx
   2ed4c:	83 e3 01             	and    $0x1,%ebx
   2ed4f:	38 cb                	cmp    %cl,%bl
   2ed51:	0f 85 cf 05 00 00    	jne    2f326 <__score_alu_test_or+0x7c6>
   2ed57:	89 c3                	mov    %eax,%ebx
   2ed59:	89 d1                	mov    %edx,%ecx
   2ed5b:	c0 eb 02             	shr    $0x2,%bl
   2ed5e:	c1 e9 02             	shr    $0x2,%ecx
   2ed61:	83 e3 01             	and    $0x1,%ebx
   2ed64:	83 e1 01             	and    $0x1,%ecx
   2ed67:	38 cb                	cmp    %cl,%bl
   2ed69:	0f 85 a2 05 00 00    	jne    2f311 <__score_alu_test_or+0x7b1>
   2ed6f:	89 c3                	mov    %eax,%ebx
   2ed71:	89 d1                	mov    %edx,%ecx
   2ed73:	c0 eb 07             	shr    $0x7,%bl
   2ed76:	c0 e9 07             	shr    $0x7,%cl
   2ed79:	38 cb                	cmp    %cl,%bl
   2ed7b:	0f 85 fd 04 00 00    	jne    2f27e <__score_alu_test_or+0x71e>
   2ed81:	89 d1                	mov    %edx,%ecx
   2ed83:	c0 e8 06             	shr    $0x6,%al
   2ed86:	c1 e9 06             	shr    $0x6,%ecx
   2ed89:	83 e0 01             	and    $0x1,%eax
   2ed8c:	83 e1 01             	and    $0x1,%ecx
   2ed8f:	38 c8                	cmp    %cl,%al
   2ed91:	0f 85 d2 04 00 00    	jne    2f269 <__score_alu_test_or+0x709>
   2ed97:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2ed9b:	c1 ea 0b             	shr    $0xb,%edx
   2ed9e:	83 e2 01             	and    $0x1,%edx
   2eda1:	c0 e8 03             	shr    $0x3,%al
   2eda4:	83 e0 01             	and    $0x1,%eax
   2eda7:	38 d0                	cmp    %dl,%al
   2eda9:	0f 85 e4 04 00 00    	jne    2f293 <__score_alu_test_or+0x733>
   2edaf:	8b 74 24 14          	mov    0x14(%esp),%esi
   2edb3:	39 74 24 10          	cmp    %esi,0x10(%esp)
   2edb7:	0f 85 23 fe ff ff    	jne    2ebe0 <__score_alu_test_or+0x80>
   2edbd:	8b 44 24 18          	mov    0x18(%esp),%eax
   2edc1:	39 f0                	cmp    %esi,%eax
   2edc3:	74 13                	je     2edd8 <__score_alu_test_or+0x278>
   2edc5:	8b 38                	mov    (%eax),%edi
   2edc7:	83 c0 04             	add    $0x4,%eax
   2edca:	89 44 24 18          	mov    %eax,0x18(%esp)
   2edce:	e9 fd fd ff ff       	jmp    2ebd0 <__score_alu_test_or+0x70>
   2edd3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2edd7:	90                   	nop
   2edd8:	83 ec 0c             	sub    $0xc,%esp
   2eddb:	6a 00                	push   $0x0
   2eddd:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   2ede1:	89 fb                	mov    %edi,%ebx
   2ede3:	e8 48 53 fd ff       	call   4130 <time@plt>
   2ede8:	89 04 24             	mov    %eax,(%esp)
   2edeb:	e8 a0 53 fd ff       	call   4190 <srand@plt>
   2edf0:	83 c4 10             	add    $0x10,%esp
   2edf3:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2edfa:	00 
   2edfb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2edff:	90                   	nop
   2ee00:	8b 74 24 0c          	mov    0xc(%esp),%esi
   2ee04:	89 f3                	mov    %esi,%ebx
   2ee06:	e8 e5 53 fd ff       	call   41f0 <rand@plt>
   2ee0b:	89 74 24 0c          	mov    %esi,0xc(%esp)
   2ee0f:	89 c7                	mov    %eax,%edi
   2ee11:	e8 da 53 fd ff       	call   41f0 <rand@plt>
   2ee16:	83 ec 04             	sub    $0x4,%esp
   2ee19:	6a 20                	push   $0x20
   2ee1b:	89 c6                	mov    %eax,%esi
   2ee1d:	57                   	push   %edi
   2ee1e:	50                   	push   %eax
   2ee1f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2ee23:	e8 e8 0c fe ff       	call   fb10 <alu_or>
   2ee28:	89 f1                	mov    %esi,%ecx
   2ee2a:	83 c4 10             	add    $0x10,%esp
   2ee2d:	89 c3                	mov    %eax,%ebx
   2ee2f:	89 f8                	mov    %edi,%eax
   2ee31:	09 c8                	or     %ecx,%eax
   2ee33:	9c                   	pushf  
   2ee34:	5a                   	pop    %edx
   2ee35:	39 c3                	cmp    %eax,%ebx
   2ee37:	0f 85 84 03 00 00    	jne    2f1c1 <__score_alu_test_or+0x661>
   2ee3d:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2ee41:	89 d1                	mov    %edx,%ecx
   2ee43:	83 e1 01             	and    $0x1,%ecx
   2ee46:	89 c3                	mov    %eax,%ebx
   2ee48:	83 e3 01             	and    $0x1,%ebx
   2ee4b:	38 cb                	cmp    %cl,%bl
   2ee4d:	0f 85 59 03 00 00    	jne    2f1ac <__score_alu_test_or+0x64c>
   2ee53:	89 c3                	mov    %eax,%ebx
   2ee55:	89 d1                	mov    %edx,%ecx
   2ee57:	c0 eb 02             	shr    $0x2,%bl
   2ee5a:	c1 e9 02             	shr    $0x2,%ecx
   2ee5d:	83 e3 01             	and    $0x1,%ebx
   2ee60:	83 e1 01             	and    $0x1,%ecx
   2ee63:	38 cb                	cmp    %cl,%bl
   2ee65:	0f 85 2c 03 00 00    	jne    2f197 <__score_alu_test_or+0x637>
   2ee6b:	89 c3                	mov    %eax,%ebx
   2ee6d:	89 d1                	mov    %edx,%ecx
   2ee6f:	c0 eb 07             	shr    $0x7,%bl
   2ee72:	c0 e9 07             	shr    $0x7,%cl
   2ee75:	38 cb                	cmp    %cl,%bl
   2ee77:	0f 85 05 03 00 00    	jne    2f182 <__score_alu_test_or+0x622>
   2ee7d:	89 d1                	mov    %edx,%ecx
   2ee7f:	c0 e8 06             	shr    $0x6,%al
   2ee82:	c1 e9 06             	shr    $0x6,%ecx
   2ee85:	83 e0 01             	and    $0x1,%eax
   2ee88:	83 e1 01             	and    $0x1,%ecx
   2ee8b:	38 c8                	cmp    %cl,%al
   2ee8d:	0f 85 da 02 00 00    	jne    2f16d <__score_alu_test_or+0x60d>
   2ee93:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2ee97:	c1 ea 0b             	shr    $0xb,%edx
   2ee9a:	83 e2 01             	and    $0x1,%edx
   2ee9d:	c0 e8 03             	shr    $0x3,%al
   2eea0:	83 e0 01             	and    $0x1,%eax
   2eea3:	38 d0                	cmp    %dl,%al
   2eea5:	0f 85 ad 02 00 00    	jne    2f158 <__score_alu_test_or+0x5f8>
   2eeab:	83 ec 04             	sub    $0x4,%esp
   2eeae:	6a 10                	push   $0x10
   2eeb0:	57                   	push   %edi
   2eeb1:	56                   	push   %esi
   2eeb2:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2eeb6:	e8 55 0c fe ff       	call   fb10 <alu_or>
   2eebb:	89 f1                	mov    %esi,%ecx
   2eebd:	83 c4 10             	add    $0x10,%esp
   2eec0:	89 c3                	mov    %eax,%ebx
   2eec2:	89 f8                	mov    %edi,%eax
   2eec4:	66 09 c8             	or     %cx,%ax
   2eec7:	9c                   	pushf  
   2eec8:	5a                   	pop    %edx
   2eec9:	0f b7 c0             	movzwl %ax,%eax
   2eecc:	39 c3                	cmp    %eax,%ebx
   2eece:	0f 85 6f 02 00 00    	jne    2f143 <__score_alu_test_or+0x5e3>
   2eed4:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2eed8:	89 d1                	mov    %edx,%ecx
   2eeda:	83 e1 01             	and    $0x1,%ecx
   2eedd:	89 c3                	mov    %eax,%ebx
   2eedf:	83 e3 01             	and    $0x1,%ebx
   2eee2:	38 cb                	cmp    %cl,%bl
   2eee4:	0f 85 44 02 00 00    	jne    2f12e <__score_alu_test_or+0x5ce>
   2eeea:	89 c3                	mov    %eax,%ebx
   2eeec:	89 d1                	mov    %edx,%ecx
   2eeee:	c0 eb 02             	shr    $0x2,%bl
   2eef1:	c1 e9 02             	shr    $0x2,%ecx
   2eef4:	83 e3 01             	and    $0x1,%ebx
   2eef7:	83 e1 01             	and    $0x1,%ecx
   2eefa:	38 cb                	cmp    %cl,%bl
   2eefc:	0f 85 17 02 00 00    	jne    2f119 <__score_alu_test_or+0x5b9>
   2ef02:	89 d1                	mov    %edx,%ecx
   2ef04:	c0 e8 07             	shr    $0x7,%al
   2ef07:	c0 e9 07             	shr    $0x7,%cl
   2ef0a:	38 c8                	cmp    %cl,%al
   2ef0c:	0f 85 f2 01 00 00    	jne    2f104 <__score_alu_test_or+0x5a4>
   2ef12:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2ef16:	89 d1                	mov    %edx,%ecx
   2ef18:	c1 e9 06             	shr    $0x6,%ecx
   2ef1b:	c0 e8 06             	shr    $0x6,%al
   2ef1e:	83 e1 01             	and    $0x1,%ecx
   2ef21:	83 e0 01             	and    $0x1,%eax
   2ef24:	38 c8                	cmp    %cl,%al
   2ef26:	0f 85 c3 01 00 00    	jne    2f0ef <__score_alu_test_or+0x58f>
   2ef2c:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2ef30:	c1 ea 0b             	shr    $0xb,%edx
   2ef33:	83 e2 01             	and    $0x1,%edx
   2ef36:	c0 e8 03             	shr    $0x3,%al
   2ef39:	83 e0 01             	and    $0x1,%eax
   2ef3c:	38 d0                	cmp    %dl,%al
   2ef3e:	0f 85 96 01 00 00    	jne    2f0da <__score_alu_test_or+0x57a>
   2ef44:	83 ec 04             	sub    $0x4,%esp
   2ef47:	6a 08                	push   $0x8
   2ef49:	57                   	push   %edi
   2ef4a:	56                   	push   %esi
   2ef4b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2ef4f:	e8 bc 0b fe ff       	call   fb10 <alu_or>
   2ef54:	89 f1                	mov    %esi,%ecx
   2ef56:	83 c4 10             	add    $0x10,%esp
   2ef59:	89 c3                	mov    %eax,%ebx
   2ef5b:	89 f8                	mov    %edi,%eax
   2ef5d:	08 c8                	or     %cl,%al
   2ef5f:	9c                   	pushf  
   2ef60:	5a                   	pop    %edx
   2ef61:	0f b6 c0             	movzbl %al,%eax
   2ef64:	39 c3                	cmp    %eax,%ebx
   2ef66:	0f 85 4b 01 00 00    	jne    2f0b7 <__score_alu_test_or+0x557>
   2ef6c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2ef70:	89 d1                	mov    %edx,%ecx
   2ef72:	83 e1 01             	and    $0x1,%ecx
   2ef75:	89 c3                	mov    %eax,%ebx
   2ef77:	83 e3 01             	and    $0x1,%ebx
   2ef7a:	38 cb                	cmp    %cl,%bl
   2ef7c:	0f 85 12 01 00 00    	jne    2f094 <__score_alu_test_or+0x534>
   2ef82:	89 c3                	mov    %eax,%ebx
   2ef84:	89 d1                	mov    %edx,%ecx
   2ef86:	c0 eb 02             	shr    $0x2,%bl
   2ef89:	c1 e9 02             	shr    $0x2,%ecx
   2ef8c:	83 e3 01             	and    $0x1,%ebx
   2ef8f:	83 e1 01             	and    $0x1,%ecx
   2ef92:	38 cb                	cmp    %cl,%bl
   2ef94:	0f 85 d7 00 00 00    	jne    2f071 <__score_alu_test_or+0x511>
   2ef9a:	89 c3                	mov    %eax,%ebx
   2ef9c:	89 d1                	mov    %edx,%ecx
   2ef9e:	c0 eb 07             	shr    $0x7,%bl
   2efa1:	c0 e9 07             	shr    $0x7,%cl
   2efa4:	38 cb                	cmp    %cl,%bl
   2efa6:	0f 85 a2 00 00 00    	jne    2f04e <__score_alu_test_or+0x4ee>
   2efac:	89 d1                	mov    %edx,%ecx
   2efae:	c0 e8 06             	shr    $0x6,%al
   2efb1:	c1 e9 06             	shr    $0x6,%ecx
   2efb4:	83 e0 01             	and    $0x1,%eax
   2efb7:	83 e1 01             	and    $0x1,%ecx
   2efba:	38 c8                	cmp    %cl,%al
   2efbc:	75 6d                	jne    2f02b <__score_alu_test_or+0x4cb>
   2efbe:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2efc2:	c1 ea 0b             	shr    $0xb,%edx
   2efc5:	83 e2 01             	and    $0x1,%edx
   2efc8:	c0 e8 03             	shr    $0x3,%al
   2efcb:	83 e0 01             	and    $0x1,%eax
   2efce:	38 d0                	cmp    %dl,%al
   2efd0:	75 36                	jne    2f008 <__score_alu_test_or+0x4a8>
   2efd2:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2efd7:	0f 85 23 fe ff ff    	jne    2ee00 <__score_alu_test_or+0x2a0>
   2efdd:	83 ec 0c             	sub    $0xc,%esp
   2efe0:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2efe4:	8d 87 9c 71 fe ff    	lea    -0x18e64(%edi),%eax
   2efea:	89 fb                	mov    %edi,%ebx
   2efec:	50                   	push   %eax
   2efed:	e8 be 52 fd ff       	call   42b0 <puts@plt>
   2eff2:	8d 87 fe 6f fe ff    	lea    -0x19002(%edi),%eax
   2eff8:	89 04 24             	mov    %eax,(%esp)
   2effb:	e8 20 b8 ff ff       	call   2a820 <score_reg_alu_fpu>
   2f000:	83 c4 5c             	add    $0x5c,%esp
   2f003:	5b                   	pop    %ebx
   2f004:	5e                   	pop    %esi
   2f005:	5f                   	pop    %edi
   2f006:	5d                   	pop    %ebp
   2f007:	c3                   	ret    
   2f008:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f00c:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f012:	50                   	push   %eax
   2f013:	68 29 01 00 00       	push   $0x129
   2f018:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f01e:	50                   	push   %eax
   2f01f:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   2f025:	50                   	push   %eax
   2f026:	e8 e5 52 fd ff       	call   4310 <__assert_fail@plt>
   2f02b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f02f:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f035:	50                   	push   %eax
   2f036:	68 29 01 00 00       	push   $0x129
   2f03b:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f041:	50                   	push   %eax
   2f042:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2f048:	50                   	push   %eax
   2f049:	e8 c2 52 fd ff       	call   4310 <__assert_fail@plt>
   2f04e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f052:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f058:	50                   	push   %eax
   2f059:	68 29 01 00 00       	push   $0x129
   2f05e:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f064:	50                   	push   %eax
   2f065:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2f06b:	50                   	push   %eax
   2f06c:	e8 9f 52 fd ff       	call   4310 <__assert_fail@plt>
   2f071:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f075:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f07b:	50                   	push   %eax
   2f07c:	68 29 01 00 00       	push   $0x129
   2f081:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f087:	50                   	push   %eax
   2f088:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2f08e:	50                   	push   %eax
   2f08f:	e8 7c 52 fd ff       	call   4310 <__assert_fail@plt>
   2f094:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f098:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f09e:	50                   	push   %eax
   2f09f:	68 29 01 00 00       	push   $0x129
   2f0a4:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f0aa:	50                   	push   %eax
   2f0ab:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2f0b1:	50                   	push   %eax
   2f0b2:	e8 59 52 fd ff       	call   4310 <__assert_fail@plt>
   2f0b7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f0bb:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f0c1:	50                   	push   %eax
   2f0c2:	68 29 01 00 00       	push   $0x129
   2f0c7:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f0cd:	50                   	push   %eax
   2f0ce:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   2f0d4:	50                   	push   %eax
   2f0d5:	e8 36 52 fd ff       	call   4310 <__assert_fail@plt>
   2f0da:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f0de:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f0e4:	50                   	push   %eax
   2f0e5:	68 28 01 00 00       	push   $0x128
   2f0ea:	e9 29 ff ff ff       	jmp    2f018 <__score_alu_test_or+0x4b8>
   2f0ef:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f0f3:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f0f9:	50                   	push   %eax
   2f0fa:	68 28 01 00 00       	push   $0x128
   2f0ff:	e9 37 ff ff ff       	jmp    2f03b <__score_alu_test_or+0x4db>
   2f104:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f108:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f10e:	50                   	push   %eax
   2f10f:	68 28 01 00 00       	push   $0x128
   2f114:	e9 45 ff ff ff       	jmp    2f05e <__score_alu_test_or+0x4fe>
   2f119:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f11d:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f123:	50                   	push   %eax
   2f124:	68 28 01 00 00       	push   $0x128
   2f129:	e9 53 ff ff ff       	jmp    2f081 <__score_alu_test_or+0x521>
   2f12e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f132:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f138:	50                   	push   %eax
   2f139:	68 28 01 00 00       	push   $0x128
   2f13e:	e9 61 ff ff ff       	jmp    2f0a4 <__score_alu_test_or+0x544>
   2f143:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f147:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f14d:	50                   	push   %eax
   2f14e:	68 28 01 00 00       	push   $0x128
   2f153:	e9 6f ff ff ff       	jmp    2f0c7 <__score_alu_test_or+0x567>
   2f158:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f15c:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f162:	50                   	push   %eax
   2f163:	68 27 01 00 00       	push   $0x127
   2f168:	e9 ab fe ff ff       	jmp    2f018 <__score_alu_test_or+0x4b8>
   2f16d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f171:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f177:	50                   	push   %eax
   2f178:	68 27 01 00 00       	push   $0x127
   2f17d:	e9 b9 fe ff ff       	jmp    2f03b <__score_alu_test_or+0x4db>
   2f182:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f186:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f18c:	50                   	push   %eax
   2f18d:	68 27 01 00 00       	push   $0x127
   2f192:	e9 c7 fe ff ff       	jmp    2f05e <__score_alu_test_or+0x4fe>
   2f197:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f19b:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f1a1:	50                   	push   %eax
   2f1a2:	68 27 01 00 00       	push   $0x127
   2f1a7:	e9 d5 fe ff ff       	jmp    2f081 <__score_alu_test_or+0x521>
   2f1ac:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f1b0:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f1b6:	50                   	push   %eax
   2f1b7:	68 27 01 00 00       	push   $0x127
   2f1bc:	e9 e3 fe ff ff       	jmp    2f0a4 <__score_alu_test_or+0x544>
   2f1c1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f1c5:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f1cb:	50                   	push   %eax
   2f1cc:	68 27 01 00 00       	push   $0x127
   2f1d1:	e9 f1 fe ff ff       	jmp    2f0c7 <__score_alu_test_or+0x567>
   2f1d6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f1da:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f1e0:	50                   	push   %eax
   2f1e1:	68 1e 01 00 00       	push   $0x11e
   2f1e6:	e9 73 fe ff ff       	jmp    2f05e <__score_alu_test_or+0x4fe>
   2f1eb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f1ef:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f1f5:	50                   	push   %eax
   2f1f6:	68 1e 01 00 00       	push   $0x11e
   2f1fb:	e9 81 fe ff ff       	jmp    2f081 <__score_alu_test_or+0x521>
   2f200:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f204:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f20a:	50                   	push   %eax
   2f20b:	68 1e 01 00 00       	push   $0x11e
   2f210:	e9 26 fe ff ff       	jmp    2f03b <__score_alu_test_or+0x4db>
   2f215:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f219:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f21f:	50                   	push   %eax
   2f220:	68 1d 01 00 00       	push   $0x11d
   2f225:	e9 7a fe ff ff       	jmp    2f0a4 <__score_alu_test_or+0x544>
   2f22a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f22e:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f234:	50                   	push   %eax
   2f235:	68 1d 01 00 00       	push   $0x11d
   2f23a:	e9 88 fe ff ff       	jmp    2f0c7 <__score_alu_test_or+0x567>
   2f23f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f243:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f249:	50                   	push   %eax
   2f24a:	68 1d 01 00 00       	push   $0x11d
   2f24f:	e9 2d fe ff ff       	jmp    2f081 <__score_alu_test_or+0x521>
   2f254:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f258:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f25e:	50                   	push   %eax
   2f25f:	68 1e 01 00 00       	push   $0x11e
   2f264:	e9 af fd ff ff       	jmp    2f018 <__score_alu_test_or+0x4b8>
   2f269:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f26d:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f273:	50                   	push   %eax
   2f274:	68 1f 01 00 00       	push   $0x11f
   2f279:	e9 bd fd ff ff       	jmp    2f03b <__score_alu_test_or+0x4db>
   2f27e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f282:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f288:	50                   	push   %eax
   2f289:	68 1f 01 00 00       	push   $0x11f
   2f28e:	e9 cb fd ff ff       	jmp    2f05e <__score_alu_test_or+0x4fe>
   2f293:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f297:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f29d:	50                   	push   %eax
   2f29e:	68 1f 01 00 00       	push   $0x11f
   2f2a3:	e9 70 fd ff ff       	jmp    2f018 <__score_alu_test_or+0x4b8>
   2f2a8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f2ac:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f2b2:	50                   	push   %eax
   2f2b3:	68 1e 01 00 00       	push   $0x11e
   2f2b8:	e9 e7 fd ff ff       	jmp    2f0a4 <__score_alu_test_or+0x544>
   2f2bd:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f2c1:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f2c7:	50                   	push   %eax
   2f2c8:	68 1e 01 00 00       	push   $0x11e
   2f2cd:	e9 f5 fd ff ff       	jmp    2f0c7 <__score_alu_test_or+0x567>
   2f2d2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f2d6:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f2dc:	50                   	push   %eax
   2f2dd:	68 1d 01 00 00       	push   $0x11d
   2f2e2:	e9 31 fd ff ff       	jmp    2f018 <__score_alu_test_or+0x4b8>
   2f2e7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f2eb:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f2f1:	50                   	push   %eax
   2f2f2:	68 1d 01 00 00       	push   $0x11d
   2f2f7:	e9 3f fd ff ff       	jmp    2f03b <__score_alu_test_or+0x4db>
   2f2fc:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f300:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f306:	50                   	push   %eax
   2f307:	68 1d 01 00 00       	push   $0x11d
   2f30c:	e9 4d fd ff ff       	jmp    2f05e <__score_alu_test_or+0x4fe>
   2f311:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f315:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f31b:	50                   	push   %eax
   2f31c:	68 1f 01 00 00       	push   $0x11f
   2f321:	e9 5b fd ff ff       	jmp    2f081 <__score_alu_test_or+0x521>
   2f326:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f32a:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f330:	50                   	push   %eax
   2f331:	68 1f 01 00 00       	push   $0x11f
   2f336:	e9 69 fd ff ff       	jmp    2f0a4 <__score_alu_test_or+0x544>
   2f33b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f33f:	8d 83 04 74 fe ff    	lea    -0x18bfc(%ebx),%eax
   2f345:	50                   	push   %eax
   2f346:	68 1f 01 00 00       	push   $0x11f
   2f34b:	e9 77 fd ff ff       	jmp    2f0c7 <__score_alu_test_or+0x567>

0002f350 <__score_alu_test_xor>:
   2f350:	e8 82 6f fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2f355:	05 ab fc 01 00       	add    $0x1fcab,%eax
   2f35a:	55                   	push   %ebp
   2f35b:	57                   	push   %edi
   2f35c:	56                   	push   %esi
   2f35d:	53                   	push   %ebx
   2f35e:	83 ec 4c             	sub    $0x4c,%esp
   2f361:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
   2f367:	8d 74 24 40          	lea    0x40(%esp),%esi
   2f36b:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2f36f:	8d 7c 24 28          	lea    0x28(%esp),%edi
   2f373:	c7 44 24 24 00 00 00 	movl   $0x10000000,0x24(%esp)
   2f37a:	10 
   2f37b:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
   2f382:	ff 
   2f383:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
   2f38a:	ff 
   2f38b:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
   2f392:	ff 
   2f393:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   2f39a:	00 
   2f39b:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   2f3a2:	00 
   2f3a3:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   2f3aa:	00 
   2f3ab:	89 74 24 14          	mov    %esi,0x14(%esp)
   2f3af:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   2f3b3:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2f3b7:	bf 00 00 00 10       	mov    $0x10000000,%edi
   2f3bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2f3c0:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2f3c4:	be 00 00 00 10       	mov    $0x10000000,%esi
   2f3c9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2f3cd:	eb 0e                	jmp    2f3dd <__score_alu_test_xor+0x8d>
   2f3cf:	90                   	nop
   2f3d0:	8b 44 24 10          	mov    0x10(%esp),%eax
   2f3d4:	8b 30                	mov    (%eax),%esi
   2f3d6:	83 c0 04             	add    $0x4,%eax
   2f3d9:	89 44 24 10          	mov    %eax,0x10(%esp)
   2f3dd:	83 ec 04             	sub    $0x4,%esp
   2f3e0:	6a 20                	push   $0x20
   2f3e2:	57                   	push   %edi
   2f3e3:	56                   	push   %esi
   2f3e4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2f3e8:	e8 53 06 fe ff       	call   fa40 <alu_xor>
   2f3ed:	89 f1                	mov    %esi,%ecx
   2f3ef:	83 c4 10             	add    $0x10,%esp
   2f3f2:	89 c3                	mov    %eax,%ebx
   2f3f4:	89 f8                	mov    %edi,%eax
   2f3f6:	31 c8                	xor    %ecx,%eax
   2f3f8:	9c                   	pushf  
   2f3f9:	5a                   	pop    %edx
   2f3fa:	39 c3                	cmp    %eax,%ebx
   2f3fc:	0f 85 18 06 00 00    	jne    2fa1a <__score_alu_test_xor+0x6ca>
   2f402:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f406:	89 d1                	mov    %edx,%ecx
   2f408:	83 e1 01             	and    $0x1,%ecx
   2f40b:	89 c3                	mov    %eax,%ebx
   2f40d:	83 e3 01             	and    $0x1,%ebx
   2f410:	38 cb                	cmp    %cl,%bl
   2f412:	0f 85 ed 05 00 00    	jne    2fa05 <__score_alu_test_xor+0x6b5>
   2f418:	89 c3                	mov    %eax,%ebx
   2f41a:	89 d1                	mov    %edx,%ecx
   2f41c:	c0 eb 02             	shr    $0x2,%bl
   2f41f:	c1 e9 02             	shr    $0x2,%ecx
   2f422:	83 e3 01             	and    $0x1,%ebx
   2f425:	83 e1 01             	and    $0x1,%ecx
   2f428:	38 cb                	cmp    %cl,%bl
   2f42a:	0f 85 ff 05 00 00    	jne    2fa2f <__score_alu_test_xor+0x6df>
   2f430:	89 c3                	mov    %eax,%ebx
   2f432:	89 d1                	mov    %edx,%ecx
   2f434:	c0 eb 07             	shr    $0x7,%bl
   2f437:	c0 e9 07             	shr    $0x7,%cl
   2f43a:	38 cb                	cmp    %cl,%bl
   2f43c:	0f 85 aa 06 00 00    	jne    2faec <__score_alu_test_xor+0x79c>
   2f442:	89 d1                	mov    %edx,%ecx
   2f444:	c0 e8 06             	shr    $0x6,%al
   2f447:	c1 e9 06             	shr    $0x6,%ecx
   2f44a:	83 e0 01             	and    $0x1,%eax
   2f44d:	83 e1 01             	and    $0x1,%ecx
   2f450:	38 c8                	cmp    %cl,%al
   2f452:	0f 85 7f 06 00 00    	jne    2fad7 <__score_alu_test_xor+0x787>
   2f458:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2f45c:	c1 ea 0b             	shr    $0xb,%edx
   2f45f:	83 e2 01             	and    $0x1,%edx
   2f462:	c0 e8 03             	shr    $0x3,%al
   2f465:	83 e0 01             	and    $0x1,%eax
   2f468:	38 d0                	cmp    %dl,%al
   2f46a:	0f 85 52 06 00 00    	jne    2fac2 <__score_alu_test_xor+0x772>
   2f470:	83 ec 04             	sub    $0x4,%esp
   2f473:	6a 10                	push   $0x10
   2f475:	57                   	push   %edi
   2f476:	56                   	push   %esi
   2f477:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2f47b:	e8 c0 05 fe ff       	call   fa40 <alu_xor>
   2f480:	89 f1                	mov    %esi,%ecx
   2f482:	83 c4 10             	add    $0x10,%esp
   2f485:	89 c3                	mov    %eax,%ebx
   2f487:	89 f8                	mov    %edi,%eax
   2f489:	66 31 c8             	xor    %cx,%ax
   2f48c:	9c                   	pushf  
   2f48d:	5a                   	pop    %edx
   2f48e:	0f b7 c0             	movzwl %ax,%eax
   2f491:	39 c3                	cmp    %eax,%ebx
   2f493:	0f 85 14 06 00 00    	jne    2faad <__score_alu_test_xor+0x75d>
   2f499:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f49d:	89 d1                	mov    %edx,%ecx
   2f49f:	83 e1 01             	and    $0x1,%ecx
   2f4a2:	89 c3                	mov    %eax,%ebx
   2f4a4:	83 e3 01             	and    $0x1,%ebx
   2f4a7:	38 cb                	cmp    %cl,%bl
   2f4a9:	0f 85 e9 05 00 00    	jne    2fa98 <__score_alu_test_xor+0x748>
   2f4af:	89 c3                	mov    %eax,%ebx
   2f4b1:	89 d1                	mov    %edx,%ecx
   2f4b3:	c0 eb 02             	shr    $0x2,%bl
   2f4b6:	c1 e9 02             	shr    $0x2,%ecx
   2f4b9:	83 e3 01             	and    $0x1,%ebx
   2f4bc:	83 e1 01             	and    $0x1,%ecx
   2f4bf:	38 cb                	cmp    %cl,%bl
   2f4c1:	0f 85 14 05 00 00    	jne    2f9db <__score_alu_test_xor+0x68b>
   2f4c7:	89 d1                	mov    %edx,%ecx
   2f4c9:	c0 e8 07             	shr    $0x7,%al
   2f4cc:	c0 e9 07             	shr    $0x7,%cl
   2f4cf:	38 c8                	cmp    %cl,%al
   2f4d1:	0f 85 ef 04 00 00    	jne    2f9c6 <__score_alu_test_xor+0x676>
   2f4d7:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f4db:	89 d1                	mov    %edx,%ecx
   2f4dd:	c1 e9 06             	shr    $0x6,%ecx
   2f4e0:	c0 e8 06             	shr    $0x6,%al
   2f4e3:	83 e1 01             	and    $0x1,%ecx
   2f4e6:	83 e0 01             	and    $0x1,%eax
   2f4e9:	38 c8                	cmp    %cl,%al
   2f4eb:	0f 85 ff 04 00 00    	jne    2f9f0 <__score_alu_test_xor+0x6a0>
   2f4f1:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2f4f5:	c1 ea 0b             	shr    $0xb,%edx
   2f4f8:	83 e2 01             	and    $0x1,%edx
   2f4fb:	c0 e8 03             	shr    $0x3,%al
   2f4fe:	83 e0 01             	and    $0x1,%eax
   2f501:	38 d0                	cmp    %dl,%al
   2f503:	0f 85 3b 05 00 00    	jne    2fa44 <__score_alu_test_xor+0x6f4>
   2f509:	83 ec 04             	sub    $0x4,%esp
   2f50c:	6a 08                	push   $0x8
   2f50e:	57                   	push   %edi
   2f50f:	56                   	push   %esi
   2f510:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2f514:	e8 27 05 fe ff       	call   fa40 <alu_xor>
   2f519:	89 f1                	mov    %esi,%ecx
   2f51b:	83 c4 10             	add    $0x10,%esp
   2f51e:	89 c3                	mov    %eax,%ebx
   2f520:	89 f8                	mov    %edi,%eax
   2f522:	30 c8                	xor    %cl,%al
   2f524:	9c                   	pushf  
   2f525:	5a                   	pop    %edx
   2f526:	0f b6 c0             	movzbl %al,%eax
   2f529:	39 c3                	cmp    %eax,%ebx
   2f52b:	0f 85 fa 05 00 00    	jne    2fb2b <__score_alu_test_xor+0x7db>
   2f531:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f535:	89 d1                	mov    %edx,%ecx
   2f537:	83 e1 01             	and    $0x1,%ecx
   2f53a:	89 c3                	mov    %eax,%ebx
   2f53c:	83 e3 01             	and    $0x1,%ebx
   2f53f:	38 cb                	cmp    %cl,%bl
   2f541:	0f 85 cf 05 00 00    	jne    2fb16 <__score_alu_test_xor+0x7c6>
   2f547:	89 c3                	mov    %eax,%ebx
   2f549:	89 d1                	mov    %edx,%ecx
   2f54b:	c0 eb 02             	shr    $0x2,%bl
   2f54e:	c1 e9 02             	shr    $0x2,%ecx
   2f551:	83 e3 01             	and    $0x1,%ebx
   2f554:	83 e1 01             	and    $0x1,%ecx
   2f557:	38 cb                	cmp    %cl,%bl
   2f559:	0f 85 a2 05 00 00    	jne    2fb01 <__score_alu_test_xor+0x7b1>
   2f55f:	89 c3                	mov    %eax,%ebx
   2f561:	89 d1                	mov    %edx,%ecx
   2f563:	c0 eb 07             	shr    $0x7,%bl
   2f566:	c0 e9 07             	shr    $0x7,%cl
   2f569:	38 cb                	cmp    %cl,%bl
   2f56b:	0f 85 fd 04 00 00    	jne    2fa6e <__score_alu_test_xor+0x71e>
   2f571:	89 d1                	mov    %edx,%ecx
   2f573:	c0 e8 06             	shr    $0x6,%al
   2f576:	c1 e9 06             	shr    $0x6,%ecx
   2f579:	83 e0 01             	and    $0x1,%eax
   2f57c:	83 e1 01             	and    $0x1,%ecx
   2f57f:	38 c8                	cmp    %cl,%al
   2f581:	0f 85 d2 04 00 00    	jne    2fa59 <__score_alu_test_xor+0x709>
   2f587:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2f58b:	c1 ea 0b             	shr    $0xb,%edx
   2f58e:	83 e2 01             	and    $0x1,%edx
   2f591:	c0 e8 03             	shr    $0x3,%al
   2f594:	83 e0 01             	and    $0x1,%eax
   2f597:	38 d0                	cmp    %dl,%al
   2f599:	0f 85 e4 04 00 00    	jne    2fa83 <__score_alu_test_xor+0x733>
   2f59f:	8b 74 24 14          	mov    0x14(%esp),%esi
   2f5a3:	39 74 24 10          	cmp    %esi,0x10(%esp)
   2f5a7:	0f 85 23 fe ff ff    	jne    2f3d0 <__score_alu_test_xor+0x80>
   2f5ad:	8b 44 24 18          	mov    0x18(%esp),%eax
   2f5b1:	39 f0                	cmp    %esi,%eax
   2f5b3:	74 13                	je     2f5c8 <__score_alu_test_xor+0x278>
   2f5b5:	8b 38                	mov    (%eax),%edi
   2f5b7:	83 c0 04             	add    $0x4,%eax
   2f5ba:	89 44 24 18          	mov    %eax,0x18(%esp)
   2f5be:	e9 fd fd ff ff       	jmp    2f3c0 <__score_alu_test_xor+0x70>
   2f5c3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2f5c7:	90                   	nop
   2f5c8:	83 ec 0c             	sub    $0xc,%esp
   2f5cb:	6a 00                	push   $0x0
   2f5cd:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   2f5d1:	89 fb                	mov    %edi,%ebx
   2f5d3:	e8 58 4b fd ff       	call   4130 <time@plt>
   2f5d8:	89 04 24             	mov    %eax,(%esp)
   2f5db:	e8 b0 4b fd ff       	call   4190 <srand@plt>
   2f5e0:	83 c4 10             	add    $0x10,%esp
   2f5e3:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   2f5ea:	00 
   2f5eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2f5ef:	90                   	nop
   2f5f0:	8b 74 24 0c          	mov    0xc(%esp),%esi
   2f5f4:	89 f3                	mov    %esi,%ebx
   2f5f6:	e8 f5 4b fd ff       	call   41f0 <rand@plt>
   2f5fb:	89 74 24 0c          	mov    %esi,0xc(%esp)
   2f5ff:	89 c7                	mov    %eax,%edi
   2f601:	e8 ea 4b fd ff       	call   41f0 <rand@plt>
   2f606:	83 ec 04             	sub    $0x4,%esp
   2f609:	6a 20                	push   $0x20
   2f60b:	89 c6                	mov    %eax,%esi
   2f60d:	57                   	push   %edi
   2f60e:	50                   	push   %eax
   2f60f:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2f613:	e8 28 04 fe ff       	call   fa40 <alu_xor>
   2f618:	89 f1                	mov    %esi,%ecx
   2f61a:	83 c4 10             	add    $0x10,%esp
   2f61d:	89 c3                	mov    %eax,%ebx
   2f61f:	89 f8                	mov    %edi,%eax
   2f621:	31 c8                	xor    %ecx,%eax
   2f623:	9c                   	pushf  
   2f624:	5a                   	pop    %edx
   2f625:	39 c3                	cmp    %eax,%ebx
   2f627:	0f 85 84 03 00 00    	jne    2f9b1 <__score_alu_test_xor+0x661>
   2f62d:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f631:	89 d1                	mov    %edx,%ecx
   2f633:	83 e1 01             	and    $0x1,%ecx
   2f636:	89 c3                	mov    %eax,%ebx
   2f638:	83 e3 01             	and    $0x1,%ebx
   2f63b:	38 cb                	cmp    %cl,%bl
   2f63d:	0f 85 59 03 00 00    	jne    2f99c <__score_alu_test_xor+0x64c>
   2f643:	89 c3                	mov    %eax,%ebx
   2f645:	89 d1                	mov    %edx,%ecx
   2f647:	c0 eb 02             	shr    $0x2,%bl
   2f64a:	c1 e9 02             	shr    $0x2,%ecx
   2f64d:	83 e3 01             	and    $0x1,%ebx
   2f650:	83 e1 01             	and    $0x1,%ecx
   2f653:	38 cb                	cmp    %cl,%bl
   2f655:	0f 85 2c 03 00 00    	jne    2f987 <__score_alu_test_xor+0x637>
   2f65b:	89 c3                	mov    %eax,%ebx
   2f65d:	89 d1                	mov    %edx,%ecx
   2f65f:	c0 eb 07             	shr    $0x7,%bl
   2f662:	c0 e9 07             	shr    $0x7,%cl
   2f665:	38 cb                	cmp    %cl,%bl
   2f667:	0f 85 05 03 00 00    	jne    2f972 <__score_alu_test_xor+0x622>
   2f66d:	89 d1                	mov    %edx,%ecx
   2f66f:	c0 e8 06             	shr    $0x6,%al
   2f672:	c1 e9 06             	shr    $0x6,%ecx
   2f675:	83 e0 01             	and    $0x1,%eax
   2f678:	83 e1 01             	and    $0x1,%ecx
   2f67b:	38 c8                	cmp    %cl,%al
   2f67d:	0f 85 da 02 00 00    	jne    2f95d <__score_alu_test_xor+0x60d>
   2f683:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2f687:	c1 ea 0b             	shr    $0xb,%edx
   2f68a:	83 e2 01             	and    $0x1,%edx
   2f68d:	c0 e8 03             	shr    $0x3,%al
   2f690:	83 e0 01             	and    $0x1,%eax
   2f693:	38 d0                	cmp    %dl,%al
   2f695:	0f 85 ad 02 00 00    	jne    2f948 <__score_alu_test_xor+0x5f8>
   2f69b:	83 ec 04             	sub    $0x4,%esp
   2f69e:	6a 10                	push   $0x10
   2f6a0:	57                   	push   %edi
   2f6a1:	56                   	push   %esi
   2f6a2:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2f6a6:	e8 95 03 fe ff       	call   fa40 <alu_xor>
   2f6ab:	89 f1                	mov    %esi,%ecx
   2f6ad:	83 c4 10             	add    $0x10,%esp
   2f6b0:	89 c3                	mov    %eax,%ebx
   2f6b2:	89 f8                	mov    %edi,%eax
   2f6b4:	66 31 c8             	xor    %cx,%ax
   2f6b7:	9c                   	pushf  
   2f6b8:	5a                   	pop    %edx
   2f6b9:	0f b7 c0             	movzwl %ax,%eax
   2f6bc:	39 c3                	cmp    %eax,%ebx
   2f6be:	0f 85 6f 02 00 00    	jne    2f933 <__score_alu_test_xor+0x5e3>
   2f6c4:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f6c8:	89 d1                	mov    %edx,%ecx
   2f6ca:	83 e1 01             	and    $0x1,%ecx
   2f6cd:	89 c3                	mov    %eax,%ebx
   2f6cf:	83 e3 01             	and    $0x1,%ebx
   2f6d2:	38 cb                	cmp    %cl,%bl
   2f6d4:	0f 85 44 02 00 00    	jne    2f91e <__score_alu_test_xor+0x5ce>
   2f6da:	89 c3                	mov    %eax,%ebx
   2f6dc:	89 d1                	mov    %edx,%ecx
   2f6de:	c0 eb 02             	shr    $0x2,%bl
   2f6e1:	c1 e9 02             	shr    $0x2,%ecx
   2f6e4:	83 e3 01             	and    $0x1,%ebx
   2f6e7:	83 e1 01             	and    $0x1,%ecx
   2f6ea:	38 cb                	cmp    %cl,%bl
   2f6ec:	0f 85 17 02 00 00    	jne    2f909 <__score_alu_test_xor+0x5b9>
   2f6f2:	89 d1                	mov    %edx,%ecx
   2f6f4:	c0 e8 07             	shr    $0x7,%al
   2f6f7:	c0 e9 07             	shr    $0x7,%cl
   2f6fa:	38 c8                	cmp    %cl,%al
   2f6fc:	0f 85 f2 01 00 00    	jne    2f8f4 <__score_alu_test_xor+0x5a4>
   2f702:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f706:	89 d1                	mov    %edx,%ecx
   2f708:	c1 e9 06             	shr    $0x6,%ecx
   2f70b:	c0 e8 06             	shr    $0x6,%al
   2f70e:	83 e1 01             	and    $0x1,%ecx
   2f711:	83 e0 01             	and    $0x1,%eax
   2f714:	38 c8                	cmp    %cl,%al
   2f716:	0f 85 c3 01 00 00    	jne    2f8df <__score_alu_test_xor+0x58f>
   2f71c:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2f720:	c1 ea 0b             	shr    $0xb,%edx
   2f723:	83 e2 01             	and    $0x1,%edx
   2f726:	c0 e8 03             	shr    $0x3,%al
   2f729:	83 e0 01             	and    $0x1,%eax
   2f72c:	38 d0                	cmp    %dl,%al
   2f72e:	0f 85 96 01 00 00    	jne    2f8ca <__score_alu_test_xor+0x57a>
   2f734:	83 ec 04             	sub    $0x4,%esp
   2f737:	6a 08                	push   $0x8
   2f739:	57                   	push   %edi
   2f73a:	56                   	push   %esi
   2f73b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2f73f:	e8 fc 02 fe ff       	call   fa40 <alu_xor>
   2f744:	89 f1                	mov    %esi,%ecx
   2f746:	83 c4 10             	add    $0x10,%esp
   2f749:	89 c3                	mov    %eax,%ebx
   2f74b:	89 f8                	mov    %edi,%eax
   2f74d:	30 c8                	xor    %cl,%al
   2f74f:	9c                   	pushf  
   2f750:	5a                   	pop    %edx
   2f751:	0f b6 c0             	movzbl %al,%eax
   2f754:	39 c3                	cmp    %eax,%ebx
   2f756:	0f 85 4b 01 00 00    	jne    2f8a7 <__score_alu_test_xor+0x557>
   2f75c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   2f760:	89 d1                	mov    %edx,%ecx
   2f762:	83 e1 01             	and    $0x1,%ecx
   2f765:	89 c3                	mov    %eax,%ebx
   2f767:	83 e3 01             	and    $0x1,%ebx
   2f76a:	38 cb                	cmp    %cl,%bl
   2f76c:	0f 85 12 01 00 00    	jne    2f884 <__score_alu_test_xor+0x534>
   2f772:	89 c3                	mov    %eax,%ebx
   2f774:	89 d1                	mov    %edx,%ecx
   2f776:	c0 eb 02             	shr    $0x2,%bl
   2f779:	c1 e9 02             	shr    $0x2,%ecx
   2f77c:	83 e3 01             	and    $0x1,%ebx
   2f77f:	83 e1 01             	and    $0x1,%ecx
   2f782:	38 cb                	cmp    %cl,%bl
   2f784:	0f 85 d7 00 00 00    	jne    2f861 <__score_alu_test_xor+0x511>
   2f78a:	89 c3                	mov    %eax,%ebx
   2f78c:	89 d1                	mov    %edx,%ecx
   2f78e:	c0 eb 07             	shr    $0x7,%bl
   2f791:	c0 e9 07             	shr    $0x7,%cl
   2f794:	38 cb                	cmp    %cl,%bl
   2f796:	0f 85 a2 00 00 00    	jne    2f83e <__score_alu_test_xor+0x4ee>
   2f79c:	89 d1                	mov    %edx,%ecx
   2f79e:	c0 e8 06             	shr    $0x6,%al
   2f7a1:	c1 e9 06             	shr    $0x6,%ecx
   2f7a4:	83 e0 01             	and    $0x1,%eax
   2f7a7:	83 e1 01             	and    $0x1,%ecx
   2f7aa:	38 c8                	cmp    %cl,%al
   2f7ac:	75 6d                	jne    2f81b <__score_alu_test_xor+0x4cb>
   2f7ae:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   2f7b2:	c1 ea 0b             	shr    $0xb,%edx
   2f7b5:	83 e2 01             	and    $0x1,%edx
   2f7b8:	c0 e8 03             	shr    $0x3,%al
   2f7bb:	83 e0 01             	and    $0x1,%eax
   2f7be:	38 d0                	cmp    %dl,%al
   2f7c0:	75 36                	jne    2f7f8 <__score_alu_test_xor+0x4a8>
   2f7c2:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   2f7c7:	0f 85 23 fe ff ff    	jne    2f5f0 <__score_alu_test_xor+0x2a0>
   2f7cd:	83 ec 0c             	sub    $0xc,%esp
   2f7d0:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2f7d4:	8d 87 c4 71 fe ff    	lea    -0x18e3c(%edi),%eax
   2f7da:	89 fb                	mov    %edi,%ebx
   2f7dc:	50                   	push   %eax
   2f7dd:	e8 ce 4a fd ff       	call   42b0 <puts@plt>
   2f7e2:	8d 87 12 70 fe ff    	lea    -0x18fee(%edi),%eax
   2f7e8:	89 04 24             	mov    %eax,(%esp)
   2f7eb:	e8 30 b0 ff ff       	call   2a820 <score_reg_alu_fpu>
   2f7f0:	83 c4 5c             	add    $0x5c,%esp
   2f7f3:	5b                   	pop    %ebx
   2f7f4:	5e                   	pop    %esi
   2f7f5:	5f                   	pop    %edi
   2f7f6:	5d                   	pop    %ebp
   2f7f7:	c3                   	ret    
   2f7f8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f7fc:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f802:	50                   	push   %eax
   2f803:	68 45 01 00 00       	push   $0x145
   2f808:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f80e:	50                   	push   %eax
   2f80f:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   2f815:	50                   	push   %eax
   2f816:	e8 f5 4a fd ff       	call   4310 <__assert_fail@plt>
   2f81b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f81f:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f825:	50                   	push   %eax
   2f826:	68 45 01 00 00       	push   $0x145
   2f82b:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f831:	50                   	push   %eax
   2f832:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2f838:	50                   	push   %eax
   2f839:	e8 d2 4a fd ff       	call   4310 <__assert_fail@plt>
   2f83e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f842:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f848:	50                   	push   %eax
   2f849:	68 45 01 00 00       	push   $0x145
   2f84e:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f854:	50                   	push   %eax
   2f855:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2f85b:	50                   	push   %eax
   2f85c:	e8 af 4a fd ff       	call   4310 <__assert_fail@plt>
   2f861:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f865:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f86b:	50                   	push   %eax
   2f86c:	68 45 01 00 00       	push   $0x145
   2f871:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f877:	50                   	push   %eax
   2f878:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2f87e:	50                   	push   %eax
   2f87f:	e8 8c 4a fd ff       	call   4310 <__assert_fail@plt>
   2f884:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f888:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f88e:	50                   	push   %eax
   2f88f:	68 45 01 00 00       	push   $0x145
   2f894:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f89a:	50                   	push   %eax
   2f89b:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2f8a1:	50                   	push   %eax
   2f8a2:	e8 69 4a fd ff       	call   4310 <__assert_fail@plt>
   2f8a7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f8ab:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f8b1:	50                   	push   %eax
   2f8b2:	68 45 01 00 00       	push   $0x145
   2f8b7:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2f8bd:	50                   	push   %eax
   2f8be:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   2f8c4:	50                   	push   %eax
   2f8c5:	e8 46 4a fd ff       	call   4310 <__assert_fail@plt>
   2f8ca:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f8ce:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f8d4:	50                   	push   %eax
   2f8d5:	68 44 01 00 00       	push   $0x144
   2f8da:	e9 29 ff ff ff       	jmp    2f808 <__score_alu_test_xor+0x4b8>
   2f8df:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f8e3:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f8e9:	50                   	push   %eax
   2f8ea:	68 44 01 00 00       	push   $0x144
   2f8ef:	e9 37 ff ff ff       	jmp    2f82b <__score_alu_test_xor+0x4db>
   2f8f4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f8f8:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f8fe:	50                   	push   %eax
   2f8ff:	68 44 01 00 00       	push   $0x144
   2f904:	e9 45 ff ff ff       	jmp    2f84e <__score_alu_test_xor+0x4fe>
   2f909:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f90d:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f913:	50                   	push   %eax
   2f914:	68 44 01 00 00       	push   $0x144
   2f919:	e9 53 ff ff ff       	jmp    2f871 <__score_alu_test_xor+0x521>
   2f91e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f922:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f928:	50                   	push   %eax
   2f929:	68 44 01 00 00       	push   $0x144
   2f92e:	e9 61 ff ff ff       	jmp    2f894 <__score_alu_test_xor+0x544>
   2f933:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f937:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f93d:	50                   	push   %eax
   2f93e:	68 44 01 00 00       	push   $0x144
   2f943:	e9 6f ff ff ff       	jmp    2f8b7 <__score_alu_test_xor+0x567>
   2f948:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f94c:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f952:	50                   	push   %eax
   2f953:	68 43 01 00 00       	push   $0x143
   2f958:	e9 ab fe ff ff       	jmp    2f808 <__score_alu_test_xor+0x4b8>
   2f95d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f961:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f967:	50                   	push   %eax
   2f968:	68 43 01 00 00       	push   $0x143
   2f96d:	e9 b9 fe ff ff       	jmp    2f82b <__score_alu_test_xor+0x4db>
   2f972:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f976:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f97c:	50                   	push   %eax
   2f97d:	68 43 01 00 00       	push   $0x143
   2f982:	e9 c7 fe ff ff       	jmp    2f84e <__score_alu_test_xor+0x4fe>
   2f987:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f98b:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f991:	50                   	push   %eax
   2f992:	68 43 01 00 00       	push   $0x143
   2f997:	e9 d5 fe ff ff       	jmp    2f871 <__score_alu_test_xor+0x521>
   2f99c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f9a0:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f9a6:	50                   	push   %eax
   2f9a7:	68 43 01 00 00       	push   $0x143
   2f9ac:	e9 e3 fe ff ff       	jmp    2f894 <__score_alu_test_xor+0x544>
   2f9b1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f9b5:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f9bb:	50                   	push   %eax
   2f9bc:	68 43 01 00 00       	push   $0x143
   2f9c1:	e9 f1 fe ff ff       	jmp    2f8b7 <__score_alu_test_xor+0x567>
   2f9c6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f9ca:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f9d0:	50                   	push   %eax
   2f9d1:	68 3a 01 00 00       	push   $0x13a
   2f9d6:	e9 73 fe ff ff       	jmp    2f84e <__score_alu_test_xor+0x4fe>
   2f9db:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f9df:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f9e5:	50                   	push   %eax
   2f9e6:	68 3a 01 00 00       	push   $0x13a
   2f9eb:	e9 81 fe ff ff       	jmp    2f871 <__score_alu_test_xor+0x521>
   2f9f0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2f9f4:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2f9fa:	50                   	push   %eax
   2f9fb:	68 3a 01 00 00       	push   $0x13a
   2fa00:	e9 26 fe ff ff       	jmp    2f82b <__score_alu_test_xor+0x4db>
   2fa05:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa09:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fa0f:	50                   	push   %eax
   2fa10:	68 39 01 00 00       	push   $0x139
   2fa15:	e9 7a fe ff ff       	jmp    2f894 <__score_alu_test_xor+0x544>
   2fa1a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa1e:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fa24:	50                   	push   %eax
   2fa25:	68 39 01 00 00       	push   $0x139
   2fa2a:	e9 88 fe ff ff       	jmp    2f8b7 <__score_alu_test_xor+0x567>
   2fa2f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa33:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fa39:	50                   	push   %eax
   2fa3a:	68 39 01 00 00       	push   $0x139
   2fa3f:	e9 2d fe ff ff       	jmp    2f871 <__score_alu_test_xor+0x521>
   2fa44:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa48:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fa4e:	50                   	push   %eax
   2fa4f:	68 3a 01 00 00       	push   $0x13a
   2fa54:	e9 af fd ff ff       	jmp    2f808 <__score_alu_test_xor+0x4b8>
   2fa59:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa5d:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fa63:	50                   	push   %eax
   2fa64:	68 3b 01 00 00       	push   $0x13b
   2fa69:	e9 bd fd ff ff       	jmp    2f82b <__score_alu_test_xor+0x4db>
   2fa6e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa72:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fa78:	50                   	push   %eax
   2fa79:	68 3b 01 00 00       	push   $0x13b
   2fa7e:	e9 cb fd ff ff       	jmp    2f84e <__score_alu_test_xor+0x4fe>
   2fa83:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa87:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fa8d:	50                   	push   %eax
   2fa8e:	68 3b 01 00 00       	push   $0x13b
   2fa93:	e9 70 fd ff ff       	jmp    2f808 <__score_alu_test_xor+0x4b8>
   2fa98:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fa9c:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2faa2:	50                   	push   %eax
   2faa3:	68 3a 01 00 00       	push   $0x13a
   2faa8:	e9 e7 fd ff ff       	jmp    2f894 <__score_alu_test_xor+0x544>
   2faad:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fab1:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fab7:	50                   	push   %eax
   2fab8:	68 3a 01 00 00       	push   $0x13a
   2fabd:	e9 f5 fd ff ff       	jmp    2f8b7 <__score_alu_test_xor+0x567>
   2fac2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fac6:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2facc:	50                   	push   %eax
   2facd:	68 39 01 00 00       	push   $0x139
   2fad2:	e9 31 fd ff ff       	jmp    2f808 <__score_alu_test_xor+0x4b8>
   2fad7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fadb:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fae1:	50                   	push   %eax
   2fae2:	68 39 01 00 00       	push   $0x139
   2fae7:	e9 3f fd ff ff       	jmp    2f82b <__score_alu_test_xor+0x4db>
   2faec:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2faf0:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2faf6:	50                   	push   %eax
   2faf7:	68 39 01 00 00       	push   $0x139
   2fafc:	e9 4d fd ff ff       	jmp    2f84e <__score_alu_test_xor+0x4fe>
   2fb01:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fb05:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fb0b:	50                   	push   %eax
   2fb0c:	68 3b 01 00 00       	push   $0x13b
   2fb11:	e9 5b fd ff ff       	jmp    2f871 <__score_alu_test_xor+0x521>
   2fb16:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fb1a:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fb20:	50                   	push   %eax
   2fb21:	68 3b 01 00 00       	push   $0x13b
   2fb26:	e9 69 fd ff ff       	jmp    2f894 <__score_alu_test_xor+0x544>
   2fb2b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fb2f:	8d 83 ec 73 fe ff    	lea    -0x18c14(%ebx),%eax
   2fb35:	50                   	push   %eax
   2fb36:	68 3b 01 00 00       	push   $0x13b
   2fb3b:	e9 77 fd ff ff       	jmp    2f8b7 <__score_alu_test_xor+0x567>

0002fb40 <__score_alu_test_shl>:
   2fb40:	e8 92 67 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   2fb45:	05 bb f4 01 00       	add    $0x1f4bb,%eax
   2fb4a:	55                   	push   %ebp
   2fb4b:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   2fb50:	57                   	push   %edi
   2fb51:	56                   	push   %esi
   2fb52:	53                   	push   %ebx
   2fb53:	83 ec 4c             	sub    $0x4c,%esp
   2fb56:	8d 74 24 24          	lea    0x24(%esp),%esi
   2fb5a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2fb5e:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
   2fb64:	89 74 24 1c          	mov    %esi,0x1c(%esp)
   2fb68:	8d 74 24 30          	lea    0x30(%esp),%esi
   2fb6c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   2fb73:	00 
   2fb74:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
   2fb7b:	00 
   2fb7c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
   2fb83:	00 
   2fb84:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
   2fb8b:	00 
   2fb8c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
   2fb93:	ff 
   2fb94:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   2fb9b:	00 
   2fb9c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
   2fba3:	10 
   2fba4:	89 74 24 18          	mov    %esi,0x18(%esp)
   2fba8:	89 44 24 10          	mov    %eax,0x10(%esp)
   2fbac:	8d 44 24 40          	lea    0x40(%esp),%eax
   2fbb0:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2fbb4:	be 01 00 00 00       	mov    $0x1,%esi
   2fbb9:	89 44 24 14          	mov    %eax,0x14(%esp)
   2fbbd:	83 ec 04             	sub    $0x4,%esp
   2fbc0:	6a 08                	push   $0x8
   2fbc2:	55                   	push   %ebp
   2fbc3:	56                   	push   %esi
   2fbc4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2fbc8:	e8 13 00 fe ff       	call   fbe0 <alu_shl>
   2fbcd:	89 f1                	mov    %esi,%ecx
   2fbcf:	83 c4 10             	add    $0x10,%esp
   2fbd2:	89 c3                	mov    %eax,%ebx
   2fbd4:	89 e8                	mov    %ebp,%eax
   2fbd6:	d2 e0                	shl    %cl,%al
   2fbd8:	9c                   	pushf  
   2fbd9:	5a                   	pop    %edx
   2fbda:	0f b6 c0             	movzbl %al,%eax
   2fbdd:	39 c3                	cmp    %eax,%ebx
   2fbdf:	0f 85 29 05 00 00    	jne    3010e <__score_alu_test_shl+0x5ce>
   2fbe5:	8b 44 24 10          	mov    0x10(%esp),%eax
   2fbe9:	89 d1                	mov    %edx,%ecx
   2fbeb:	83 e1 01             	and    $0x1,%ecx
   2fbee:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   2fbf2:	89 c3                	mov    %eax,%ebx
   2fbf4:	83 e3 01             	and    $0x1,%ebx
   2fbf7:	38 cb                	cmp    %cl,%bl
   2fbf9:	0f 85 f6 05 00 00    	jne    301f5 <__score_alu_test_shl+0x6b5>
   2fbff:	89 c3                	mov    %eax,%ebx
   2fc01:	89 d1                	mov    %edx,%ecx
   2fc03:	c0 eb 02             	shr    $0x2,%bl
   2fc06:	c1 e9 02             	shr    $0x2,%ecx
   2fc09:	83 e3 01             	and    $0x1,%ebx
   2fc0c:	83 e1 01             	and    $0x1,%ecx
   2fc0f:	38 cb                	cmp    %cl,%bl
   2fc11:	0f 85 c9 05 00 00    	jne    301e0 <__score_alu_test_shl+0x6a0>
   2fc17:	89 c3                	mov    %eax,%ebx
   2fc19:	89 d1                	mov    %edx,%ecx
   2fc1b:	c0 eb 07             	shr    $0x7,%bl
   2fc1e:	c0 e9 07             	shr    $0x7,%cl
   2fc21:	38 cb                	cmp    %cl,%bl
   2fc23:	0f 85 a2 05 00 00    	jne    301cb <__score_alu_test_shl+0x68b>
   2fc29:	c0 e8 06             	shr    $0x6,%al
   2fc2c:	c1 ea 06             	shr    $0x6,%edx
   2fc2f:	83 e0 01             	and    $0x1,%eax
   2fc32:	83 e2 01             	and    $0x1,%edx
   2fc35:	38 d0                	cmp    %dl,%al
   2fc37:	0f 85 79 05 00 00    	jne    301b6 <__score_alu_test_shl+0x676>
   2fc3d:	83 ec 04             	sub    $0x4,%esp
   2fc40:	6a 10                	push   $0x10
   2fc42:	55                   	push   %ebp
   2fc43:	56                   	push   %esi
   2fc44:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2fc48:	e8 93 ff fd ff       	call   fbe0 <alu_shl>
   2fc4d:	89 f1                	mov    %esi,%ecx
   2fc4f:	83 c4 10             	add    $0x10,%esp
   2fc52:	89 c3                	mov    %eax,%ebx
   2fc54:	89 e8                	mov    %ebp,%eax
   2fc56:	66 d3 e0             	shl    %cl,%ax
   2fc59:	9c                   	pushf  
   2fc5a:	5a                   	pop    %edx
   2fc5b:	0f b7 c0             	movzwl %ax,%eax
   2fc5e:	39 c3                	cmp    %eax,%ebx
   2fc60:	0f 85 3b 05 00 00    	jne    301a1 <__score_alu_test_shl+0x661>
   2fc66:	8b 44 24 10          	mov    0x10(%esp),%eax
   2fc6a:	89 d1                	mov    %edx,%ecx
   2fc6c:	83 e1 01             	and    $0x1,%ecx
   2fc6f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   2fc73:	89 c3                	mov    %eax,%ebx
   2fc75:	83 e3 01             	and    $0x1,%ebx
   2fc78:	38 cb                	cmp    %cl,%bl
   2fc7a:	0f 85 0c 05 00 00    	jne    3018c <__score_alu_test_shl+0x64c>
   2fc80:	89 c3                	mov    %eax,%ebx
   2fc82:	89 d1                	mov    %edx,%ecx
   2fc84:	c0 eb 02             	shr    $0x2,%bl
   2fc87:	c1 e9 02             	shr    $0x2,%ecx
   2fc8a:	83 e3 01             	and    $0x1,%ebx
   2fc8d:	83 e1 01             	and    $0x1,%ecx
   2fc90:	38 cb                	cmp    %cl,%bl
   2fc92:	0f 85 df 04 00 00    	jne    30177 <__score_alu_test_shl+0x637>
   2fc98:	89 c3                	mov    %eax,%ebx
   2fc9a:	89 d1                	mov    %edx,%ecx
   2fc9c:	c0 eb 07             	shr    $0x7,%bl
   2fc9f:	c0 e9 07             	shr    $0x7,%cl
   2fca2:	38 cb                	cmp    %cl,%bl
   2fca4:	0f 85 b8 04 00 00    	jne    30162 <__score_alu_test_shl+0x622>
   2fcaa:	c0 e8 06             	shr    $0x6,%al
   2fcad:	c1 ea 06             	shr    $0x6,%edx
   2fcb0:	83 e0 01             	and    $0x1,%eax
   2fcb3:	83 e2 01             	and    $0x1,%edx
   2fcb6:	38 d0                	cmp    %dl,%al
   2fcb8:	0f 85 8f 04 00 00    	jne    3014d <__score_alu_test_shl+0x60d>
   2fcbe:	83 ec 04             	sub    $0x4,%esp
   2fcc1:	6a 20                	push   $0x20
   2fcc3:	55                   	push   %ebp
   2fcc4:	56                   	push   %esi
   2fcc5:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2fcc9:	e8 12 ff fd ff       	call   fbe0 <alu_shl>
   2fcce:	89 f1                	mov    %esi,%ecx
   2fcd0:	83 c4 10             	add    $0x10,%esp
   2fcd3:	89 c3                	mov    %eax,%ebx
   2fcd5:	89 e8                	mov    %ebp,%eax
   2fcd7:	d3 e0                	shl    %cl,%eax
   2fcd9:	9c                   	pushf  
   2fcda:	5a                   	pop    %edx
   2fcdb:	39 c3                	cmp    %eax,%ebx
   2fcdd:	0f 85 55 04 00 00    	jne    30138 <__score_alu_test_shl+0x5f8>
   2fce3:	8b 44 24 10          	mov    0x10(%esp),%eax
   2fce7:	89 d1                	mov    %edx,%ecx
   2fce9:	83 e1 01             	and    $0x1,%ecx
   2fcec:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   2fcf0:	89 c3                	mov    %eax,%ebx
   2fcf2:	83 e3 01             	and    $0x1,%ebx
   2fcf5:	38 cb                	cmp    %cl,%bl
   2fcf7:	0f 85 26 04 00 00    	jne    30123 <__score_alu_test_shl+0x5e3>
   2fcfd:	89 c3                	mov    %eax,%ebx
   2fcff:	89 d1                	mov    %edx,%ecx
   2fd01:	c0 eb 02             	shr    $0x2,%bl
   2fd04:	c1 e9 02             	shr    $0x2,%ecx
   2fd07:	83 e3 01             	and    $0x1,%ebx
   2fd0a:	83 e1 01             	and    $0x1,%ecx
   2fd0d:	38 cb                	cmp    %cl,%bl
   2fd0f:	0f 85 cf 03 00 00    	jne    300e4 <__score_alu_test_shl+0x5a4>
   2fd15:	89 c3                	mov    %eax,%ebx
   2fd17:	89 d1                	mov    %edx,%ecx
   2fd19:	c0 eb 07             	shr    $0x7,%bl
   2fd1c:	c0 e9 07             	shr    $0x7,%cl
   2fd1f:	38 cb                	cmp    %cl,%bl
   2fd21:	0f 85 d2 03 00 00    	jne    300f9 <__score_alu_test_shl+0x5b9>
   2fd27:	c0 e8 06             	shr    $0x6,%al
   2fd2a:	c1 ea 06             	shr    $0x6,%edx
   2fd2d:	83 e0 01             	and    $0x1,%eax
   2fd30:	83 e2 01             	and    $0x1,%edx
   2fd33:	38 d0                	cmp    %dl,%al
   2fd35:	0f 85 cf 04 00 00    	jne    3020a <__score_alu_test_shl+0x6ca>
   2fd3b:	83 c7 04             	add    $0x4,%edi
   2fd3e:	3b 7c 24 14          	cmp    0x14(%esp),%edi
   2fd42:	74 0c                	je     2fd50 <__score_alu_test_shl+0x210>
   2fd44:	8b 37                	mov    (%edi),%esi
   2fd46:	e9 72 fe ff ff       	jmp    2fbbd <__score_alu_test_shl+0x7d>
   2fd4b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2fd4f:	90                   	nop
   2fd50:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
   2fd55:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   2fd59:	3b 44 24 18          	cmp    0x18(%esp),%eax
   2fd5d:	74 07                	je     2fd66 <__score_alu_test_shl+0x226>
   2fd5f:	8b 28                	mov    (%eax),%ebp
   2fd61:	e9 46 fe ff ff       	jmp    2fbac <__score_alu_test_shl+0x6c>
   2fd66:	83 ec 0c             	sub    $0xc,%esp
   2fd69:	6a 00                	push   $0x0
   2fd6b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   2fd6f:	89 f3                	mov    %esi,%ebx
   2fd71:	e8 ba 43 fd ff       	call   4130 <time@plt>
   2fd76:	89 04 24             	mov    %eax,(%esp)
   2fd79:	e8 12 44 fd ff       	call   4190 <srand@plt>
   2fd7e:	83 c4 10             	add    $0x10,%esp
   2fd81:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
   2fd88:	00 
   2fd89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2fd90:	8b 6c 24 18          	mov    0x18(%esp),%ebp
   2fd94:	bf 01 00 00 00       	mov    $0x1,%edi
   2fd99:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fd9d:	e8 4e 44 fd ff       	call   41f0 <rand@plt>
   2fda2:	83 ec 04             	sub    $0x4,%esp
   2fda5:	6a 08                	push   $0x8
   2fda7:	89 c6                	mov    %eax,%esi
   2fda9:	50                   	push   %eax
   2fdaa:	57                   	push   %edi
   2fdab:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2fdaf:	e8 2c fe fd ff       	call   fbe0 <alu_shl>
   2fdb4:	89 f9                	mov    %edi,%ecx
   2fdb6:	83 c4 10             	add    $0x10,%esp
   2fdb9:	89 c3                	mov    %eax,%ebx
   2fdbb:	89 f0                	mov    %esi,%eax
   2fdbd:	d2 e0                	shl    %cl,%al
   2fdbf:	9c                   	pushf  
   2fdc0:	5a                   	pop    %edx
   2fdc1:	0f b6 c0             	movzbl %al,%eax
   2fdc4:	39 c3                	cmp    %eax,%ebx
   2fdc6:	0f 85 03 03 00 00    	jne    300cf <__score_alu_test_shl+0x58f>
   2fdcc:	8b 44 24 10          	mov    0x10(%esp),%eax
   2fdd0:	89 d1                	mov    %edx,%ecx
   2fdd2:	83 e1 01             	and    $0x1,%ecx
   2fdd5:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   2fdd9:	89 c3                	mov    %eax,%ebx
   2fddb:	83 e3 01             	and    $0x1,%ebx
   2fdde:	38 cb                	cmp    %cl,%bl
   2fde0:	0f 85 d4 02 00 00    	jne    300ba <__score_alu_test_shl+0x57a>
   2fde6:	89 c3                	mov    %eax,%ebx
   2fde8:	89 d1                	mov    %edx,%ecx
   2fdea:	c0 eb 02             	shr    $0x2,%bl
   2fded:	c1 e9 02             	shr    $0x2,%ecx
   2fdf0:	83 e3 01             	and    $0x1,%ebx
   2fdf3:	83 e1 01             	and    $0x1,%ecx
   2fdf6:	38 cb                	cmp    %cl,%bl
   2fdf8:	0f 85 a7 02 00 00    	jne    300a5 <__score_alu_test_shl+0x565>
   2fdfe:	89 c3                	mov    %eax,%ebx
   2fe00:	89 d1                	mov    %edx,%ecx
   2fe02:	c0 eb 07             	shr    $0x7,%bl
   2fe05:	c0 e9 07             	shr    $0x7,%cl
   2fe08:	38 cb                	cmp    %cl,%bl
   2fe0a:	0f 85 80 02 00 00    	jne    30090 <__score_alu_test_shl+0x550>
   2fe10:	c0 e8 06             	shr    $0x6,%al
   2fe13:	c1 ea 06             	shr    $0x6,%edx
   2fe16:	83 e0 01             	and    $0x1,%eax
   2fe19:	83 e2 01             	and    $0x1,%edx
   2fe1c:	38 d0                	cmp    %dl,%al
   2fe1e:	0f 85 57 02 00 00    	jne    3007b <__score_alu_test_shl+0x53b>
   2fe24:	83 ec 04             	sub    $0x4,%esp
   2fe27:	6a 10                	push   $0x10
   2fe29:	56                   	push   %esi
   2fe2a:	57                   	push   %edi
   2fe2b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2fe2f:	e8 ac fd fd ff       	call   fbe0 <alu_shl>
   2fe34:	89 f9                	mov    %edi,%ecx
   2fe36:	83 c4 10             	add    $0x10,%esp
   2fe39:	89 c3                	mov    %eax,%ebx
   2fe3b:	89 f0                	mov    %esi,%eax
   2fe3d:	66 d3 e0             	shl    %cl,%ax
   2fe40:	9c                   	pushf  
   2fe41:	5a                   	pop    %edx
   2fe42:	0f b7 c0             	movzwl %ax,%eax
   2fe45:	39 c3                	cmp    %eax,%ebx
   2fe47:	0f 85 1c 02 00 00    	jne    30069 <__score_alu_test_shl+0x529>
   2fe4d:	8b 44 24 10          	mov    0x10(%esp),%eax
   2fe51:	89 d1                	mov    %edx,%ecx
   2fe53:	83 e1 01             	and    $0x1,%ecx
   2fe56:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   2fe5a:	89 c3                	mov    %eax,%ebx
   2fe5c:	83 e3 01             	and    $0x1,%ebx
   2fe5f:	38 cb                	cmp    %cl,%bl
   2fe61:	0f 85 ed 01 00 00    	jne    30054 <__score_alu_test_shl+0x514>
   2fe67:	89 c3                	mov    %eax,%ebx
   2fe69:	89 d1                	mov    %edx,%ecx
   2fe6b:	c0 eb 02             	shr    $0x2,%bl
   2fe6e:	c1 e9 02             	shr    $0x2,%ecx
   2fe71:	83 e3 01             	and    $0x1,%ebx
   2fe74:	83 e1 01             	and    $0x1,%ecx
   2fe77:	38 cb                	cmp    %cl,%bl
   2fe79:	0f 85 c0 01 00 00    	jne    3003f <__score_alu_test_shl+0x4ff>
   2fe7f:	89 c3                	mov    %eax,%ebx
   2fe81:	89 d1                	mov    %edx,%ecx
   2fe83:	c0 eb 07             	shr    $0x7,%bl
   2fe86:	c0 e9 07             	shr    $0x7,%cl
   2fe89:	38 cb                	cmp    %cl,%bl
   2fe8b:	0f 85 99 01 00 00    	jne    3002a <__score_alu_test_shl+0x4ea>
   2fe91:	c0 e8 06             	shr    $0x6,%al
   2fe94:	c1 ea 06             	shr    $0x6,%edx
   2fe97:	83 e0 01             	and    $0x1,%eax
   2fe9a:	83 e2 01             	and    $0x1,%edx
   2fe9d:	38 d0                	cmp    %dl,%al
   2fe9f:	0f 85 70 01 00 00    	jne    30015 <__score_alu_test_shl+0x4d5>
   2fea5:	83 ec 04             	sub    $0x4,%esp
   2fea8:	6a 20                	push   $0x20
   2feaa:	56                   	push   %esi
   2feab:	57                   	push   %edi
   2feac:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2feb0:	e8 2b fd fd ff       	call   fbe0 <alu_shl>
   2feb5:	89 f9                	mov    %edi,%ecx
   2feb7:	83 c4 10             	add    $0x10,%esp
   2feba:	89 c3                	mov    %eax,%ebx
   2febc:	89 f0                	mov    %esi,%eax
   2febe:	d3 e0                	shl    %cl,%eax
   2fec0:	9c                   	pushf  
   2fec1:	5a                   	pop    %edx
   2fec2:	39 c3                	cmp    %eax,%ebx
   2fec4:	0f 85 28 01 00 00    	jne    2fff2 <__score_alu_test_shl+0x4b2>
   2feca:	8b 44 24 10          	mov    0x10(%esp),%eax
   2fece:	89 d1                	mov    %edx,%ecx
   2fed0:	83 e1 01             	and    $0x1,%ecx
   2fed3:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   2fed7:	89 c3                	mov    %eax,%ebx
   2fed9:	83 e3 01             	and    $0x1,%ebx
   2fedc:	38 cb                	cmp    %cl,%bl
   2fede:	0f 85 eb 00 00 00    	jne    2ffcf <__score_alu_test_shl+0x48f>
   2fee4:	89 c3                	mov    %eax,%ebx
   2fee6:	89 d1                	mov    %edx,%ecx
   2fee8:	c0 eb 02             	shr    $0x2,%bl
   2feeb:	c1 e9 02             	shr    $0x2,%ecx
   2feee:	83 e3 01             	and    $0x1,%ebx
   2fef1:	83 e1 01             	and    $0x1,%ecx
   2fef4:	38 cb                	cmp    %cl,%bl
   2fef6:	0f 85 b0 00 00 00    	jne    2ffac <__score_alu_test_shl+0x46c>
   2fefc:	89 c3                	mov    %eax,%ebx
   2fefe:	89 d1                	mov    %edx,%ecx
   2ff00:	c0 eb 07             	shr    $0x7,%bl
   2ff03:	c0 e9 07             	shr    $0x7,%cl
   2ff06:	38 cb                	cmp    %cl,%bl
   2ff08:	75 7f                	jne    2ff89 <__score_alu_test_shl+0x449>
   2ff0a:	c0 e8 06             	shr    $0x6,%al
   2ff0d:	c1 ea 06             	shr    $0x6,%edx
   2ff10:	83 e0 01             	and    $0x1,%eax
   2ff13:	83 e2 01             	and    $0x1,%edx
   2ff16:	38 d0                	cmp    %dl,%al
   2ff18:	75 4c                	jne    2ff66 <__score_alu_test_shl+0x426>
   2ff1a:	83 c5 04             	add    $0x4,%ebp
   2ff1d:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
   2ff21:	74 0d                	je     2ff30 <__score_alu_test_shl+0x3f0>
   2ff23:	8b 7d 00             	mov    0x0(%ebp),%edi
   2ff26:	e9 6e fe ff ff       	jmp    2fd99 <__score_alu_test_shl+0x259>
   2ff2b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ff2f:	90                   	nop
   2ff30:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
   2ff35:	0f 85 55 fe ff ff    	jne    2fd90 <__score_alu_test_shl+0x250>
   2ff3b:	83 ec 0c             	sub    $0xc,%esp
   2ff3e:	8b 7c 24 18          	mov    0x18(%esp),%edi
   2ff42:	8d 87 ec 71 fe ff    	lea    -0x18e14(%edi),%eax
   2ff48:	89 fb                	mov    %edi,%ebx
   2ff4a:	50                   	push   %eax
   2ff4b:	e8 60 43 fd ff       	call   42b0 <puts@plt>
   2ff50:	8d 87 27 70 fe ff    	lea    -0x18fd9(%edi),%eax
   2ff56:	89 04 24             	mov    %eax,(%esp)
   2ff59:	e8 c2 a8 ff ff       	call   2a820 <score_reg_alu_fpu>
   2ff5e:	83 c4 5c             	add    $0x5c,%esp
   2ff61:	5b                   	pop    %ebx
   2ff62:	5e                   	pop    %esi
   2ff63:	5f                   	pop    %edi
   2ff64:	5d                   	pop    %ebp
   2ff65:	c3                   	ret    
   2ff66:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ff6a:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   2ff70:	50                   	push   %eax
   2ff71:	68 64 01 00 00       	push   $0x164
   2ff76:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ff7c:	50                   	push   %eax
   2ff7d:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   2ff83:	50                   	push   %eax
   2ff84:	e8 87 43 fd ff       	call   4310 <__assert_fail@plt>
   2ff89:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ff8d:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   2ff93:	50                   	push   %eax
   2ff94:	68 64 01 00 00       	push   $0x164
   2ff99:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ff9f:	50                   	push   %eax
   2ffa0:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   2ffa6:	50                   	push   %eax
   2ffa7:	e8 64 43 fd ff       	call   4310 <__assert_fail@plt>
   2ffac:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ffb0:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   2ffb6:	50                   	push   %eax
   2ffb7:	68 64 01 00 00       	push   $0x164
   2ffbc:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ffc2:	50                   	push   %eax
   2ffc3:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   2ffc9:	50                   	push   %eax
   2ffca:	e8 41 43 fd ff       	call   4310 <__assert_fail@plt>
   2ffcf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2ffd3:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   2ffd9:	50                   	push   %eax
   2ffda:	68 64 01 00 00       	push   $0x164
   2ffdf:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   2ffe5:	50                   	push   %eax
   2ffe6:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   2ffec:	50                   	push   %eax
   2ffed:	e8 1e 43 fd ff       	call   4310 <__assert_fail@plt>
   2fff2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   2fff6:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   2fffc:	50                   	push   %eax
   2fffd:	68 64 01 00 00       	push   $0x164
   30002:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   30008:	50                   	push   %eax
   30009:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   3000f:	50                   	push   %eax
   30010:	e8 fb 42 fd ff       	call   4310 <__assert_fail@plt>
   30015:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30019:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   3001f:	50                   	push   %eax
   30020:	68 63 01 00 00       	push   $0x163
   30025:	e9 4c ff ff ff       	jmp    2ff76 <__score_alu_test_shl+0x436>
   3002a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3002e:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30034:	50                   	push   %eax
   30035:	68 63 01 00 00       	push   $0x163
   3003a:	e9 5a ff ff ff       	jmp    2ff99 <__score_alu_test_shl+0x459>
   3003f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30043:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30049:	50                   	push   %eax
   3004a:	68 63 01 00 00       	push   $0x163
   3004f:	e9 68 ff ff ff       	jmp    2ffbc <__score_alu_test_shl+0x47c>
   30054:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30058:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   3005e:	50                   	push   %eax
   3005f:	68 63 01 00 00       	push   $0x163
   30064:	e9 76 ff ff ff       	jmp    2ffdf <__score_alu_test_shl+0x49f>
   30069:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3006d:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30073:	50                   	push   %eax
   30074:	68 63 01 00 00       	push   $0x163
   30079:	eb 87                	jmp    30002 <__score_alu_test_shl+0x4c2>
   3007b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3007f:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30085:	50                   	push   %eax
   30086:	68 62 01 00 00       	push   $0x162
   3008b:	e9 e6 fe ff ff       	jmp    2ff76 <__score_alu_test_shl+0x436>
   30090:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30094:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   3009a:	50                   	push   %eax
   3009b:	68 62 01 00 00       	push   $0x162
   300a0:	e9 f4 fe ff ff       	jmp    2ff99 <__score_alu_test_shl+0x459>
   300a5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   300a9:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   300af:	50                   	push   %eax
   300b0:	68 62 01 00 00       	push   $0x162
   300b5:	e9 02 ff ff ff       	jmp    2ffbc <__score_alu_test_shl+0x47c>
   300ba:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   300be:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   300c4:	50                   	push   %eax
   300c5:	68 62 01 00 00       	push   $0x162
   300ca:	e9 10 ff ff ff       	jmp    2ffdf <__score_alu_test_shl+0x49f>
   300cf:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   300d3:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   300d9:	50                   	push   %eax
   300da:	68 62 01 00 00       	push   $0x162
   300df:	e9 1e ff ff ff       	jmp    30002 <__score_alu_test_shl+0x4c2>
   300e4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   300e8:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   300ee:	50                   	push   %eax
   300ef:	68 59 01 00 00       	push   $0x159
   300f4:	e9 c3 fe ff ff       	jmp    2ffbc <__score_alu_test_shl+0x47c>
   300f9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   300fd:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30103:	50                   	push   %eax
   30104:	68 59 01 00 00       	push   $0x159
   30109:	e9 8b fe ff ff       	jmp    2ff99 <__score_alu_test_shl+0x459>
   3010e:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30112:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30118:	50                   	push   %eax
   30119:	68 57 01 00 00       	push   $0x157
   3011e:	e9 df fe ff ff       	jmp    30002 <__score_alu_test_shl+0x4c2>
   30123:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30127:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   3012d:	50                   	push   %eax
   3012e:	68 59 01 00 00       	push   $0x159
   30133:	e9 a7 fe ff ff       	jmp    2ffdf <__score_alu_test_shl+0x49f>
   30138:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3013c:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30142:	50                   	push   %eax
   30143:	68 59 01 00 00       	push   $0x159
   30148:	e9 b5 fe ff ff       	jmp    30002 <__score_alu_test_shl+0x4c2>
   3014d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30151:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30157:	50                   	push   %eax
   30158:	68 58 01 00 00       	push   $0x158
   3015d:	e9 14 fe ff ff       	jmp    2ff76 <__score_alu_test_shl+0x436>
   30162:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30166:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   3016c:	50                   	push   %eax
   3016d:	68 58 01 00 00       	push   $0x158
   30172:	e9 22 fe ff ff       	jmp    2ff99 <__score_alu_test_shl+0x459>
   30177:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3017b:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30181:	50                   	push   %eax
   30182:	68 58 01 00 00       	push   $0x158
   30187:	e9 30 fe ff ff       	jmp    2ffbc <__score_alu_test_shl+0x47c>
   3018c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30190:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30196:	50                   	push   %eax
   30197:	68 58 01 00 00       	push   $0x158
   3019c:	e9 3e fe ff ff       	jmp    2ffdf <__score_alu_test_shl+0x49f>
   301a1:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   301a5:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   301ab:	50                   	push   %eax
   301ac:	68 58 01 00 00       	push   $0x158
   301b1:	e9 4c fe ff ff       	jmp    30002 <__score_alu_test_shl+0x4c2>
   301b6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   301ba:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   301c0:	50                   	push   %eax
   301c1:	68 57 01 00 00       	push   $0x157
   301c6:	e9 ab fd ff ff       	jmp    2ff76 <__score_alu_test_shl+0x436>
   301cb:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   301cf:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   301d5:	50                   	push   %eax
   301d6:	68 57 01 00 00       	push   $0x157
   301db:	e9 b9 fd ff ff       	jmp    2ff99 <__score_alu_test_shl+0x459>
   301e0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   301e4:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   301ea:	50                   	push   %eax
   301eb:	68 57 01 00 00       	push   $0x157
   301f0:	e9 c7 fd ff ff       	jmp    2ffbc <__score_alu_test_shl+0x47c>
   301f5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   301f9:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   301ff:	50                   	push   %eax
   30200:	68 57 01 00 00       	push   $0x157
   30205:	e9 d5 fd ff ff       	jmp    2ffdf <__score_alu_test_shl+0x49f>
   3020a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3020e:	8d 83 d4 73 fe ff    	lea    -0x18c2c(%ebx),%eax
   30214:	50                   	push   %eax
   30215:	68 59 01 00 00       	push   $0x159
   3021a:	e9 57 fd ff ff       	jmp    2ff76 <__score_alu_test_shl+0x436>
   3021f:	90                   	nop

00030220 <__score_alu_test_shr>:
   30220:	e8 b2 60 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   30225:	05 db ed 01 00       	add    $0x1eddb,%eax
   3022a:	55                   	push   %ebp
   3022b:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   30230:	57                   	push   %edi
   30231:	56                   	push   %esi
   30232:	53                   	push   %ebx
   30233:	83 ec 4c             	sub    $0x4c,%esp
   30236:	8d 74 24 24          	lea    0x24(%esp),%esi
   3023a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   3023e:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
   30244:	89 74 24 1c          	mov    %esi,0x1c(%esp)
   30248:	8d 74 24 30          	lea    0x30(%esp),%esi
   3024c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   30253:	00 
   30254:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
   3025b:	00 
   3025c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
   30263:	00 
   30264:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
   3026b:	00 
   3026c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
   30273:	ff 
   30274:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   3027b:	00 
   3027c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
   30283:	10 
   30284:	89 74 24 18          	mov    %esi,0x18(%esp)
   30288:	89 44 24 10          	mov    %eax,0x10(%esp)
   3028c:	8d 44 24 40          	lea    0x40(%esp),%eax
   30290:	8b 7c 24 18          	mov    0x18(%esp),%edi
   30294:	be 01 00 00 00       	mov    $0x1,%esi
   30299:	89 44 24 14          	mov    %eax,0x14(%esp)
   3029d:	83 ec 04             	sub    $0x4,%esp
   302a0:	6a 08                	push   $0x8
   302a2:	55                   	push   %ebp
   302a3:	56                   	push   %esi
   302a4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   302a8:	e8 63 fa fd ff       	call   fd10 <alu_shr>
   302ad:	89 f1                	mov    %esi,%ecx
   302af:	83 c4 10             	add    $0x10,%esp
   302b2:	89 c3                	mov    %eax,%ebx
   302b4:	89 e8                	mov    %ebp,%eax
   302b6:	d2 e8                	shr    %cl,%al
   302b8:	9c                   	pushf  
   302b9:	5a                   	pop    %edx
   302ba:	0f b6 c0             	movzbl %al,%eax
   302bd:	39 c3                	cmp    %eax,%ebx
   302bf:	0f 85 29 05 00 00    	jne    307ee <__score_alu_test_shr+0x5ce>
   302c5:	8b 44 24 10          	mov    0x10(%esp),%eax
   302c9:	89 d1                	mov    %edx,%ecx
   302cb:	83 e1 01             	and    $0x1,%ecx
   302ce:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   302d2:	89 c3                	mov    %eax,%ebx
   302d4:	83 e3 01             	and    $0x1,%ebx
   302d7:	38 cb                	cmp    %cl,%bl
   302d9:	0f 85 f6 05 00 00    	jne    308d5 <__score_alu_test_shr+0x6b5>
   302df:	89 c3                	mov    %eax,%ebx
   302e1:	89 d1                	mov    %edx,%ecx
   302e3:	c0 eb 02             	shr    $0x2,%bl
   302e6:	c1 e9 02             	shr    $0x2,%ecx
   302e9:	83 e3 01             	and    $0x1,%ebx
   302ec:	83 e1 01             	and    $0x1,%ecx
   302ef:	38 cb                	cmp    %cl,%bl
   302f1:	0f 85 c9 05 00 00    	jne    308c0 <__score_alu_test_shr+0x6a0>
   302f7:	89 c3                	mov    %eax,%ebx
   302f9:	89 d1                	mov    %edx,%ecx
   302fb:	c0 eb 07             	shr    $0x7,%bl
   302fe:	c0 e9 07             	shr    $0x7,%cl
   30301:	38 cb                	cmp    %cl,%bl
   30303:	0f 85 a2 05 00 00    	jne    308ab <__score_alu_test_shr+0x68b>
   30309:	c0 e8 06             	shr    $0x6,%al
   3030c:	c1 ea 06             	shr    $0x6,%edx
   3030f:	83 e0 01             	and    $0x1,%eax
   30312:	83 e2 01             	and    $0x1,%edx
   30315:	38 d0                	cmp    %dl,%al
   30317:	0f 85 79 05 00 00    	jne    30896 <__score_alu_test_shr+0x676>
   3031d:	83 ec 04             	sub    $0x4,%esp
   30320:	6a 10                	push   $0x10
   30322:	55                   	push   %ebp
   30323:	56                   	push   %esi
   30324:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30328:	e8 e3 f9 fd ff       	call   fd10 <alu_shr>
   3032d:	89 f1                	mov    %esi,%ecx
   3032f:	83 c4 10             	add    $0x10,%esp
   30332:	89 c3                	mov    %eax,%ebx
   30334:	89 e8                	mov    %ebp,%eax
   30336:	66 d3 e8             	shr    %cl,%ax
   30339:	9c                   	pushf  
   3033a:	5a                   	pop    %edx
   3033b:	0f b7 c0             	movzwl %ax,%eax
   3033e:	39 c3                	cmp    %eax,%ebx
   30340:	0f 85 3b 05 00 00    	jne    30881 <__score_alu_test_shr+0x661>
   30346:	8b 44 24 10          	mov    0x10(%esp),%eax
   3034a:	89 d1                	mov    %edx,%ecx
   3034c:	83 e1 01             	and    $0x1,%ecx
   3034f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   30353:	89 c3                	mov    %eax,%ebx
   30355:	83 e3 01             	and    $0x1,%ebx
   30358:	38 cb                	cmp    %cl,%bl
   3035a:	0f 85 0c 05 00 00    	jne    3086c <__score_alu_test_shr+0x64c>
   30360:	89 c3                	mov    %eax,%ebx
   30362:	89 d1                	mov    %edx,%ecx
   30364:	c0 eb 02             	shr    $0x2,%bl
   30367:	c1 e9 02             	shr    $0x2,%ecx
   3036a:	83 e3 01             	and    $0x1,%ebx
   3036d:	83 e1 01             	and    $0x1,%ecx
   30370:	38 cb                	cmp    %cl,%bl
   30372:	0f 85 df 04 00 00    	jne    30857 <__score_alu_test_shr+0x637>
   30378:	89 c3                	mov    %eax,%ebx
   3037a:	89 d1                	mov    %edx,%ecx
   3037c:	c0 eb 07             	shr    $0x7,%bl
   3037f:	c0 e9 07             	shr    $0x7,%cl
   30382:	38 cb                	cmp    %cl,%bl
   30384:	0f 85 b8 04 00 00    	jne    30842 <__score_alu_test_shr+0x622>
   3038a:	c0 e8 06             	shr    $0x6,%al
   3038d:	c1 ea 06             	shr    $0x6,%edx
   30390:	83 e0 01             	and    $0x1,%eax
   30393:	83 e2 01             	and    $0x1,%edx
   30396:	38 d0                	cmp    %dl,%al
   30398:	0f 85 8f 04 00 00    	jne    3082d <__score_alu_test_shr+0x60d>
   3039e:	83 ec 04             	sub    $0x4,%esp
   303a1:	6a 20                	push   $0x20
   303a3:	55                   	push   %ebp
   303a4:	56                   	push   %esi
   303a5:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   303a9:	e8 62 f9 fd ff       	call   fd10 <alu_shr>
   303ae:	89 f1                	mov    %esi,%ecx
   303b0:	83 c4 10             	add    $0x10,%esp
   303b3:	89 c3                	mov    %eax,%ebx
   303b5:	89 e8                	mov    %ebp,%eax
   303b7:	d3 e8                	shr    %cl,%eax
   303b9:	9c                   	pushf  
   303ba:	5a                   	pop    %edx
   303bb:	39 c3                	cmp    %eax,%ebx
   303bd:	0f 85 55 04 00 00    	jne    30818 <__score_alu_test_shr+0x5f8>
   303c3:	8b 44 24 10          	mov    0x10(%esp),%eax
   303c7:	89 d1                	mov    %edx,%ecx
   303c9:	83 e1 01             	and    $0x1,%ecx
   303cc:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   303d0:	89 c3                	mov    %eax,%ebx
   303d2:	83 e3 01             	and    $0x1,%ebx
   303d5:	38 cb                	cmp    %cl,%bl
   303d7:	0f 85 26 04 00 00    	jne    30803 <__score_alu_test_shr+0x5e3>
   303dd:	89 c3                	mov    %eax,%ebx
   303df:	89 d1                	mov    %edx,%ecx
   303e1:	c0 eb 02             	shr    $0x2,%bl
   303e4:	c1 e9 02             	shr    $0x2,%ecx
   303e7:	83 e3 01             	and    $0x1,%ebx
   303ea:	83 e1 01             	and    $0x1,%ecx
   303ed:	38 cb                	cmp    %cl,%bl
   303ef:	0f 85 cf 03 00 00    	jne    307c4 <__score_alu_test_shr+0x5a4>
   303f5:	89 c3                	mov    %eax,%ebx
   303f7:	89 d1                	mov    %edx,%ecx
   303f9:	c0 eb 07             	shr    $0x7,%bl
   303fc:	c0 e9 07             	shr    $0x7,%cl
   303ff:	38 cb                	cmp    %cl,%bl
   30401:	0f 85 d2 03 00 00    	jne    307d9 <__score_alu_test_shr+0x5b9>
   30407:	c0 e8 06             	shr    $0x6,%al
   3040a:	c1 ea 06             	shr    $0x6,%edx
   3040d:	83 e0 01             	and    $0x1,%eax
   30410:	83 e2 01             	and    $0x1,%edx
   30413:	38 d0                	cmp    %dl,%al
   30415:	0f 85 cf 04 00 00    	jne    308ea <__score_alu_test_shr+0x6ca>
   3041b:	83 c7 04             	add    $0x4,%edi
   3041e:	3b 7c 24 14          	cmp    0x14(%esp),%edi
   30422:	74 0c                	je     30430 <__score_alu_test_shr+0x210>
   30424:	8b 37                	mov    (%edi),%esi
   30426:	e9 72 fe ff ff       	jmp    3029d <__score_alu_test_shr+0x7d>
   3042b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   3042f:	90                   	nop
   30430:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
   30435:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   30439:	3b 44 24 18          	cmp    0x18(%esp),%eax
   3043d:	74 07                	je     30446 <__score_alu_test_shr+0x226>
   3043f:	8b 28                	mov    (%eax),%ebp
   30441:	e9 46 fe ff ff       	jmp    3028c <__score_alu_test_shr+0x6c>
   30446:	83 ec 0c             	sub    $0xc,%esp
   30449:	6a 00                	push   $0x0
   3044b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   3044f:	89 f3                	mov    %esi,%ebx
   30451:	e8 da 3c fd ff       	call   4130 <time@plt>
   30456:	89 04 24             	mov    %eax,(%esp)
   30459:	e8 32 3d fd ff       	call   4190 <srand@plt>
   3045e:	83 c4 10             	add    $0x10,%esp
   30461:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
   30468:	00 
   30469:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   30470:	8b 6c 24 18          	mov    0x18(%esp),%ebp
   30474:	bf 01 00 00 00       	mov    $0x1,%edi
   30479:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3047d:	e8 6e 3d fd ff       	call   41f0 <rand@plt>
   30482:	83 ec 04             	sub    $0x4,%esp
   30485:	6a 08                	push   $0x8
   30487:	89 c6                	mov    %eax,%esi
   30489:	50                   	push   %eax
   3048a:	57                   	push   %edi
   3048b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   3048f:	e8 7c f8 fd ff       	call   fd10 <alu_shr>
   30494:	89 f9                	mov    %edi,%ecx
   30496:	83 c4 10             	add    $0x10,%esp
   30499:	89 c3                	mov    %eax,%ebx
   3049b:	89 f0                	mov    %esi,%eax
   3049d:	d2 e8                	shr    %cl,%al
   3049f:	9c                   	pushf  
   304a0:	5a                   	pop    %edx
   304a1:	0f b6 c0             	movzbl %al,%eax
   304a4:	39 c3                	cmp    %eax,%ebx
   304a6:	0f 85 03 03 00 00    	jne    307af <__score_alu_test_shr+0x58f>
   304ac:	8b 44 24 10          	mov    0x10(%esp),%eax
   304b0:	89 d1                	mov    %edx,%ecx
   304b2:	83 e1 01             	and    $0x1,%ecx
   304b5:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   304b9:	89 c3                	mov    %eax,%ebx
   304bb:	83 e3 01             	and    $0x1,%ebx
   304be:	38 cb                	cmp    %cl,%bl
   304c0:	0f 85 d4 02 00 00    	jne    3079a <__score_alu_test_shr+0x57a>
   304c6:	89 c3                	mov    %eax,%ebx
   304c8:	89 d1                	mov    %edx,%ecx
   304ca:	c0 eb 02             	shr    $0x2,%bl
   304cd:	c1 e9 02             	shr    $0x2,%ecx
   304d0:	83 e3 01             	and    $0x1,%ebx
   304d3:	83 e1 01             	and    $0x1,%ecx
   304d6:	38 cb                	cmp    %cl,%bl
   304d8:	0f 85 a7 02 00 00    	jne    30785 <__score_alu_test_shr+0x565>
   304de:	89 c3                	mov    %eax,%ebx
   304e0:	89 d1                	mov    %edx,%ecx
   304e2:	c0 eb 07             	shr    $0x7,%bl
   304e5:	c0 e9 07             	shr    $0x7,%cl
   304e8:	38 cb                	cmp    %cl,%bl
   304ea:	0f 85 80 02 00 00    	jne    30770 <__score_alu_test_shr+0x550>
   304f0:	c0 e8 06             	shr    $0x6,%al
   304f3:	c1 ea 06             	shr    $0x6,%edx
   304f6:	83 e0 01             	and    $0x1,%eax
   304f9:	83 e2 01             	and    $0x1,%edx
   304fc:	38 d0                	cmp    %dl,%al
   304fe:	0f 85 57 02 00 00    	jne    3075b <__score_alu_test_shr+0x53b>
   30504:	83 ec 04             	sub    $0x4,%esp
   30507:	6a 10                	push   $0x10
   30509:	56                   	push   %esi
   3050a:	57                   	push   %edi
   3050b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   3050f:	e8 fc f7 fd ff       	call   fd10 <alu_shr>
   30514:	89 f9                	mov    %edi,%ecx
   30516:	83 c4 10             	add    $0x10,%esp
   30519:	89 c3                	mov    %eax,%ebx
   3051b:	89 f0                	mov    %esi,%eax
   3051d:	66 d3 e8             	shr    %cl,%ax
   30520:	9c                   	pushf  
   30521:	5a                   	pop    %edx
   30522:	0f b7 c0             	movzwl %ax,%eax
   30525:	39 c3                	cmp    %eax,%ebx
   30527:	0f 85 1c 02 00 00    	jne    30749 <__score_alu_test_shr+0x529>
   3052d:	8b 44 24 10          	mov    0x10(%esp),%eax
   30531:	89 d1                	mov    %edx,%ecx
   30533:	83 e1 01             	and    $0x1,%ecx
   30536:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   3053a:	89 c3                	mov    %eax,%ebx
   3053c:	83 e3 01             	and    $0x1,%ebx
   3053f:	38 cb                	cmp    %cl,%bl
   30541:	0f 85 ed 01 00 00    	jne    30734 <__score_alu_test_shr+0x514>
   30547:	89 c3                	mov    %eax,%ebx
   30549:	89 d1                	mov    %edx,%ecx
   3054b:	c0 eb 02             	shr    $0x2,%bl
   3054e:	c1 e9 02             	shr    $0x2,%ecx
   30551:	83 e3 01             	and    $0x1,%ebx
   30554:	83 e1 01             	and    $0x1,%ecx
   30557:	38 cb                	cmp    %cl,%bl
   30559:	0f 85 c0 01 00 00    	jne    3071f <__score_alu_test_shr+0x4ff>
   3055f:	89 c3                	mov    %eax,%ebx
   30561:	89 d1                	mov    %edx,%ecx
   30563:	c0 eb 07             	shr    $0x7,%bl
   30566:	c0 e9 07             	shr    $0x7,%cl
   30569:	38 cb                	cmp    %cl,%bl
   3056b:	0f 85 99 01 00 00    	jne    3070a <__score_alu_test_shr+0x4ea>
   30571:	c0 e8 06             	shr    $0x6,%al
   30574:	c1 ea 06             	shr    $0x6,%edx
   30577:	83 e0 01             	and    $0x1,%eax
   3057a:	83 e2 01             	and    $0x1,%edx
   3057d:	38 d0                	cmp    %dl,%al
   3057f:	0f 85 70 01 00 00    	jne    306f5 <__score_alu_test_shr+0x4d5>
   30585:	83 ec 04             	sub    $0x4,%esp
   30588:	6a 20                	push   $0x20
   3058a:	56                   	push   %esi
   3058b:	57                   	push   %edi
   3058c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30590:	e8 7b f7 fd ff       	call   fd10 <alu_shr>
   30595:	89 f9                	mov    %edi,%ecx
   30597:	83 c4 10             	add    $0x10,%esp
   3059a:	89 c3                	mov    %eax,%ebx
   3059c:	89 f0                	mov    %esi,%eax
   3059e:	d3 e8                	shr    %cl,%eax
   305a0:	9c                   	pushf  
   305a1:	5a                   	pop    %edx
   305a2:	39 c3                	cmp    %eax,%ebx
   305a4:	0f 85 28 01 00 00    	jne    306d2 <__score_alu_test_shr+0x4b2>
   305aa:	8b 44 24 10          	mov    0x10(%esp),%eax
   305ae:	89 d1                	mov    %edx,%ecx
   305b0:	83 e1 01             	and    $0x1,%ecx
   305b3:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   305b7:	89 c3                	mov    %eax,%ebx
   305b9:	83 e3 01             	and    $0x1,%ebx
   305bc:	38 cb                	cmp    %cl,%bl
   305be:	0f 85 eb 00 00 00    	jne    306af <__score_alu_test_shr+0x48f>
   305c4:	89 c3                	mov    %eax,%ebx
   305c6:	89 d1                	mov    %edx,%ecx
   305c8:	c0 eb 02             	shr    $0x2,%bl
   305cb:	c1 e9 02             	shr    $0x2,%ecx
   305ce:	83 e3 01             	and    $0x1,%ebx
   305d1:	83 e1 01             	and    $0x1,%ecx
   305d4:	38 cb                	cmp    %cl,%bl
   305d6:	0f 85 b0 00 00 00    	jne    3068c <__score_alu_test_shr+0x46c>
   305dc:	89 c3                	mov    %eax,%ebx
   305de:	89 d1                	mov    %edx,%ecx
   305e0:	c0 eb 07             	shr    $0x7,%bl
   305e3:	c0 e9 07             	shr    $0x7,%cl
   305e6:	38 cb                	cmp    %cl,%bl
   305e8:	75 7f                	jne    30669 <__score_alu_test_shr+0x449>
   305ea:	c0 e8 06             	shr    $0x6,%al
   305ed:	c1 ea 06             	shr    $0x6,%edx
   305f0:	83 e0 01             	and    $0x1,%eax
   305f3:	83 e2 01             	and    $0x1,%edx
   305f6:	38 d0                	cmp    %dl,%al
   305f8:	75 4c                	jne    30646 <__score_alu_test_shr+0x426>
   305fa:	83 c5 04             	add    $0x4,%ebp
   305fd:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
   30601:	74 0d                	je     30610 <__score_alu_test_shr+0x3f0>
   30603:	8b 7d 00             	mov    0x0(%ebp),%edi
   30606:	e9 6e fe ff ff       	jmp    30479 <__score_alu_test_shr+0x259>
   3060b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   3060f:	90                   	nop
   30610:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
   30615:	0f 85 55 fe ff ff    	jne    30470 <__score_alu_test_shr+0x250>
   3061b:	83 ec 0c             	sub    $0xc,%esp
   3061e:	8b 7c 24 18          	mov    0x18(%esp),%edi
   30622:	8d 87 14 72 fe ff    	lea    -0x18dec(%edi),%eax
   30628:	89 fb                	mov    %edi,%ebx
   3062a:	50                   	push   %eax
   3062b:	e8 80 3c fd ff       	call   42b0 <puts@plt>
   30630:	8d 87 3c 70 fe ff    	lea    -0x18fc4(%edi),%eax
   30636:	89 04 24             	mov    %eax,(%esp)
   30639:	e8 e2 a1 ff ff       	call   2a820 <score_reg_alu_fpu>
   3063e:	83 c4 5c             	add    $0x5c,%esp
   30641:	5b                   	pop    %ebx
   30642:	5e                   	pop    %esi
   30643:	5f                   	pop    %edi
   30644:	5d                   	pop    %ebp
   30645:	c3                   	ret    
   30646:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3064a:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30650:	50                   	push   %eax
   30651:	68 84 01 00 00       	push   $0x184
   30656:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   3065c:	50                   	push   %eax
   3065d:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   30663:	50                   	push   %eax
   30664:	e8 a7 3c fd ff       	call   4310 <__assert_fail@plt>
   30669:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3066d:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30673:	50                   	push   %eax
   30674:	68 84 01 00 00       	push   $0x184
   30679:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   3067f:	50                   	push   %eax
   30680:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   30686:	50                   	push   %eax
   30687:	e8 84 3c fd ff       	call   4310 <__assert_fail@plt>
   3068c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30690:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30696:	50                   	push   %eax
   30697:	68 84 01 00 00       	push   $0x184
   3069c:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   306a2:	50                   	push   %eax
   306a3:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   306a9:	50                   	push   %eax
   306aa:	e8 61 3c fd ff       	call   4310 <__assert_fail@plt>
   306af:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   306b3:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   306b9:	50                   	push   %eax
   306ba:	68 84 01 00 00       	push   $0x184
   306bf:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   306c5:	50                   	push   %eax
   306c6:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   306cc:	50                   	push   %eax
   306cd:	e8 3e 3c fd ff       	call   4310 <__assert_fail@plt>
   306d2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   306d6:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   306dc:	50                   	push   %eax
   306dd:	68 84 01 00 00       	push   $0x184
   306e2:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   306e8:	50                   	push   %eax
   306e9:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   306ef:	50                   	push   %eax
   306f0:	e8 1b 3c fd ff       	call   4310 <__assert_fail@plt>
   306f5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   306f9:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   306ff:	50                   	push   %eax
   30700:	68 83 01 00 00       	push   $0x183
   30705:	e9 4c ff ff ff       	jmp    30656 <__score_alu_test_shr+0x436>
   3070a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3070e:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30714:	50                   	push   %eax
   30715:	68 83 01 00 00       	push   $0x183
   3071a:	e9 5a ff ff ff       	jmp    30679 <__score_alu_test_shr+0x459>
   3071f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30723:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30729:	50                   	push   %eax
   3072a:	68 83 01 00 00       	push   $0x183
   3072f:	e9 68 ff ff ff       	jmp    3069c <__score_alu_test_shr+0x47c>
   30734:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30738:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   3073e:	50                   	push   %eax
   3073f:	68 83 01 00 00       	push   $0x183
   30744:	e9 76 ff ff ff       	jmp    306bf <__score_alu_test_shr+0x49f>
   30749:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3074d:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30753:	50                   	push   %eax
   30754:	68 83 01 00 00       	push   $0x183
   30759:	eb 87                	jmp    306e2 <__score_alu_test_shr+0x4c2>
   3075b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3075f:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30765:	50                   	push   %eax
   30766:	68 82 01 00 00       	push   $0x182
   3076b:	e9 e6 fe ff ff       	jmp    30656 <__score_alu_test_shr+0x436>
   30770:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30774:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   3077a:	50                   	push   %eax
   3077b:	68 82 01 00 00       	push   $0x182
   30780:	e9 f4 fe ff ff       	jmp    30679 <__score_alu_test_shr+0x459>
   30785:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30789:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   3078f:	50                   	push   %eax
   30790:	68 82 01 00 00       	push   $0x182
   30795:	e9 02 ff ff ff       	jmp    3069c <__score_alu_test_shr+0x47c>
   3079a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3079e:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   307a4:	50                   	push   %eax
   307a5:	68 82 01 00 00       	push   $0x182
   307aa:	e9 10 ff ff ff       	jmp    306bf <__score_alu_test_shr+0x49f>
   307af:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   307b3:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   307b9:	50                   	push   %eax
   307ba:	68 82 01 00 00       	push   $0x182
   307bf:	e9 1e ff ff ff       	jmp    306e2 <__score_alu_test_shr+0x4c2>
   307c4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   307c8:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   307ce:	50                   	push   %eax
   307cf:	68 79 01 00 00       	push   $0x179
   307d4:	e9 c3 fe ff ff       	jmp    3069c <__score_alu_test_shr+0x47c>
   307d9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   307dd:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   307e3:	50                   	push   %eax
   307e4:	68 79 01 00 00       	push   $0x179
   307e9:	e9 8b fe ff ff       	jmp    30679 <__score_alu_test_shr+0x459>
   307ee:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   307f2:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   307f8:	50                   	push   %eax
   307f9:	68 77 01 00 00       	push   $0x177
   307fe:	e9 df fe ff ff       	jmp    306e2 <__score_alu_test_shr+0x4c2>
   30803:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30807:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   3080d:	50                   	push   %eax
   3080e:	68 79 01 00 00       	push   $0x179
   30813:	e9 a7 fe ff ff       	jmp    306bf <__score_alu_test_shr+0x49f>
   30818:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3081c:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30822:	50                   	push   %eax
   30823:	68 79 01 00 00       	push   $0x179
   30828:	e9 b5 fe ff ff       	jmp    306e2 <__score_alu_test_shr+0x4c2>
   3082d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30831:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30837:	50                   	push   %eax
   30838:	68 78 01 00 00       	push   $0x178
   3083d:	e9 14 fe ff ff       	jmp    30656 <__score_alu_test_shr+0x436>
   30842:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30846:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   3084c:	50                   	push   %eax
   3084d:	68 78 01 00 00       	push   $0x178
   30852:	e9 22 fe ff ff       	jmp    30679 <__score_alu_test_shr+0x459>
   30857:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3085b:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30861:	50                   	push   %eax
   30862:	68 78 01 00 00       	push   $0x178
   30867:	e9 30 fe ff ff       	jmp    3069c <__score_alu_test_shr+0x47c>
   3086c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30870:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   30876:	50                   	push   %eax
   30877:	68 78 01 00 00       	push   $0x178
   3087c:	e9 3e fe ff ff       	jmp    306bf <__score_alu_test_shr+0x49f>
   30881:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30885:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   3088b:	50                   	push   %eax
   3088c:	68 78 01 00 00       	push   $0x178
   30891:	e9 4c fe ff ff       	jmp    306e2 <__score_alu_test_shr+0x4c2>
   30896:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3089a:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   308a0:	50                   	push   %eax
   308a1:	68 77 01 00 00       	push   $0x177
   308a6:	e9 ab fd ff ff       	jmp    30656 <__score_alu_test_shr+0x436>
   308ab:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   308af:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   308b5:	50                   	push   %eax
   308b6:	68 77 01 00 00       	push   $0x177
   308bb:	e9 b9 fd ff ff       	jmp    30679 <__score_alu_test_shr+0x459>
   308c0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   308c4:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   308ca:	50                   	push   %eax
   308cb:	68 77 01 00 00       	push   $0x177
   308d0:	e9 c7 fd ff ff       	jmp    3069c <__score_alu_test_shr+0x47c>
   308d5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   308d9:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   308df:	50                   	push   %eax
   308e0:	68 77 01 00 00       	push   $0x177
   308e5:	e9 d5 fd ff ff       	jmp    306bf <__score_alu_test_shr+0x49f>
   308ea:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   308ee:	8d 83 bc 73 fe ff    	lea    -0x18c44(%ebx),%eax
   308f4:	50                   	push   %eax
   308f5:	68 79 01 00 00       	push   $0x179
   308fa:	e9 57 fd ff ff       	jmp    30656 <__score_alu_test_shr+0x436>
   308ff:	90                   	nop

00030900 <__score_alu_test_sal>:
   30900:	e8 d2 59 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   30905:	05 fb e6 01 00       	add    $0x1e6fb,%eax
   3090a:	55                   	push   %ebp
   3090b:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   30910:	57                   	push   %edi
   30911:	56                   	push   %esi
   30912:	53                   	push   %ebx
   30913:	83 ec 4c             	sub    $0x4c,%esp
   30916:	8d 74 24 24          	lea    0x24(%esp),%esi
   3091a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   3091e:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
   30924:	89 74 24 1c          	mov    %esi,0x1c(%esp)
   30928:	8d 74 24 30          	lea    0x30(%esp),%esi
   3092c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   30933:	00 
   30934:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
   3093b:	00 
   3093c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
   30943:	00 
   30944:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
   3094b:	00 
   3094c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
   30953:	ff 
   30954:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   3095b:	00 
   3095c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
   30963:	10 
   30964:	89 74 24 18          	mov    %esi,0x18(%esp)
   30968:	89 44 24 10          	mov    %eax,0x10(%esp)
   3096c:	8d 44 24 40          	lea    0x40(%esp),%eax
   30970:	8b 7c 24 18          	mov    0x18(%esp),%edi
   30974:	be 01 00 00 00       	mov    $0x1,%esi
   30979:	89 44 24 14          	mov    %eax,0x14(%esp)
   3097d:	83 ec 04             	sub    $0x4,%esp
   30980:	6a 08                	push   $0x8
   30982:	55                   	push   %ebp
   30983:	56                   	push   %esi
   30984:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30988:	e8 63 f6 fd ff       	call   fff0 <alu_sal>
   3098d:	89 f1                	mov    %esi,%ecx
   3098f:	83 c4 10             	add    $0x10,%esp
   30992:	89 c3                	mov    %eax,%ebx
   30994:	89 e8                	mov    %ebp,%eax
   30996:	d2 e0                	shl    %cl,%al
   30998:	9c                   	pushf  
   30999:	5a                   	pop    %edx
   3099a:	0f b6 c0             	movzbl %al,%eax
   3099d:	39 c3                	cmp    %eax,%ebx
   3099f:	0f 85 29 05 00 00    	jne    30ece <__score_alu_test_sal+0x5ce>
   309a5:	8b 44 24 10          	mov    0x10(%esp),%eax
   309a9:	89 d1                	mov    %edx,%ecx
   309ab:	83 e1 01             	and    $0x1,%ecx
   309ae:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   309b2:	89 c3                	mov    %eax,%ebx
   309b4:	83 e3 01             	and    $0x1,%ebx
   309b7:	38 cb                	cmp    %cl,%bl
   309b9:	0f 85 f6 05 00 00    	jne    30fb5 <__score_alu_test_sal+0x6b5>
   309bf:	89 c3                	mov    %eax,%ebx
   309c1:	89 d1                	mov    %edx,%ecx
   309c3:	c0 eb 02             	shr    $0x2,%bl
   309c6:	c1 e9 02             	shr    $0x2,%ecx
   309c9:	83 e3 01             	and    $0x1,%ebx
   309cc:	83 e1 01             	and    $0x1,%ecx
   309cf:	38 cb                	cmp    %cl,%bl
   309d1:	0f 85 c9 05 00 00    	jne    30fa0 <__score_alu_test_sal+0x6a0>
   309d7:	89 c3                	mov    %eax,%ebx
   309d9:	89 d1                	mov    %edx,%ecx
   309db:	c0 eb 07             	shr    $0x7,%bl
   309de:	c0 e9 07             	shr    $0x7,%cl
   309e1:	38 cb                	cmp    %cl,%bl
   309e3:	0f 85 a2 05 00 00    	jne    30f8b <__score_alu_test_sal+0x68b>
   309e9:	c0 e8 06             	shr    $0x6,%al
   309ec:	c1 ea 06             	shr    $0x6,%edx
   309ef:	83 e0 01             	and    $0x1,%eax
   309f2:	83 e2 01             	and    $0x1,%edx
   309f5:	38 d0                	cmp    %dl,%al
   309f7:	0f 85 79 05 00 00    	jne    30f76 <__score_alu_test_sal+0x676>
   309fd:	83 ec 04             	sub    $0x4,%esp
   30a00:	6a 10                	push   $0x10
   30a02:	55                   	push   %ebp
   30a03:	56                   	push   %esi
   30a04:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30a08:	e8 e3 f5 fd ff       	call   fff0 <alu_sal>
   30a0d:	89 f1                	mov    %esi,%ecx
   30a0f:	83 c4 10             	add    $0x10,%esp
   30a12:	89 c3                	mov    %eax,%ebx
   30a14:	89 e8                	mov    %ebp,%eax
   30a16:	66 d3 e0             	shl    %cl,%ax
   30a19:	9c                   	pushf  
   30a1a:	5a                   	pop    %edx
   30a1b:	0f b7 c0             	movzwl %ax,%eax
   30a1e:	39 c3                	cmp    %eax,%ebx
   30a20:	0f 85 3b 05 00 00    	jne    30f61 <__score_alu_test_sal+0x661>
   30a26:	8b 44 24 10          	mov    0x10(%esp),%eax
   30a2a:	89 d1                	mov    %edx,%ecx
   30a2c:	83 e1 01             	and    $0x1,%ecx
   30a2f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   30a33:	89 c3                	mov    %eax,%ebx
   30a35:	83 e3 01             	and    $0x1,%ebx
   30a38:	38 cb                	cmp    %cl,%bl
   30a3a:	0f 85 0c 05 00 00    	jne    30f4c <__score_alu_test_sal+0x64c>
   30a40:	89 c3                	mov    %eax,%ebx
   30a42:	89 d1                	mov    %edx,%ecx
   30a44:	c0 eb 02             	shr    $0x2,%bl
   30a47:	c1 e9 02             	shr    $0x2,%ecx
   30a4a:	83 e3 01             	and    $0x1,%ebx
   30a4d:	83 e1 01             	and    $0x1,%ecx
   30a50:	38 cb                	cmp    %cl,%bl
   30a52:	0f 85 df 04 00 00    	jne    30f37 <__score_alu_test_sal+0x637>
   30a58:	89 c3                	mov    %eax,%ebx
   30a5a:	89 d1                	mov    %edx,%ecx
   30a5c:	c0 eb 07             	shr    $0x7,%bl
   30a5f:	c0 e9 07             	shr    $0x7,%cl
   30a62:	38 cb                	cmp    %cl,%bl
   30a64:	0f 85 b8 04 00 00    	jne    30f22 <__score_alu_test_sal+0x622>
   30a6a:	c0 e8 06             	shr    $0x6,%al
   30a6d:	c1 ea 06             	shr    $0x6,%edx
   30a70:	83 e0 01             	and    $0x1,%eax
   30a73:	83 e2 01             	and    $0x1,%edx
   30a76:	38 d0                	cmp    %dl,%al
   30a78:	0f 85 8f 04 00 00    	jne    30f0d <__score_alu_test_sal+0x60d>
   30a7e:	83 ec 04             	sub    $0x4,%esp
   30a81:	6a 20                	push   $0x20
   30a83:	55                   	push   %ebp
   30a84:	56                   	push   %esi
   30a85:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30a89:	e8 62 f5 fd ff       	call   fff0 <alu_sal>
   30a8e:	89 f1                	mov    %esi,%ecx
   30a90:	83 c4 10             	add    $0x10,%esp
   30a93:	89 c3                	mov    %eax,%ebx
   30a95:	89 e8                	mov    %ebp,%eax
   30a97:	d3 e0                	shl    %cl,%eax
   30a99:	9c                   	pushf  
   30a9a:	5a                   	pop    %edx
   30a9b:	39 c3                	cmp    %eax,%ebx
   30a9d:	0f 85 55 04 00 00    	jne    30ef8 <__score_alu_test_sal+0x5f8>
   30aa3:	8b 44 24 10          	mov    0x10(%esp),%eax
   30aa7:	89 d1                	mov    %edx,%ecx
   30aa9:	83 e1 01             	and    $0x1,%ecx
   30aac:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   30ab0:	89 c3                	mov    %eax,%ebx
   30ab2:	83 e3 01             	and    $0x1,%ebx
   30ab5:	38 cb                	cmp    %cl,%bl
   30ab7:	0f 85 26 04 00 00    	jne    30ee3 <__score_alu_test_sal+0x5e3>
   30abd:	89 c3                	mov    %eax,%ebx
   30abf:	89 d1                	mov    %edx,%ecx
   30ac1:	c0 eb 02             	shr    $0x2,%bl
   30ac4:	c1 e9 02             	shr    $0x2,%ecx
   30ac7:	83 e3 01             	and    $0x1,%ebx
   30aca:	83 e1 01             	and    $0x1,%ecx
   30acd:	38 cb                	cmp    %cl,%bl
   30acf:	0f 85 cf 03 00 00    	jne    30ea4 <__score_alu_test_sal+0x5a4>
   30ad5:	89 c3                	mov    %eax,%ebx
   30ad7:	89 d1                	mov    %edx,%ecx
   30ad9:	c0 eb 07             	shr    $0x7,%bl
   30adc:	c0 e9 07             	shr    $0x7,%cl
   30adf:	38 cb                	cmp    %cl,%bl
   30ae1:	0f 85 d2 03 00 00    	jne    30eb9 <__score_alu_test_sal+0x5b9>
   30ae7:	c0 e8 06             	shr    $0x6,%al
   30aea:	c1 ea 06             	shr    $0x6,%edx
   30aed:	83 e0 01             	and    $0x1,%eax
   30af0:	83 e2 01             	and    $0x1,%edx
   30af3:	38 d0                	cmp    %dl,%al
   30af5:	0f 85 cf 04 00 00    	jne    30fca <__score_alu_test_sal+0x6ca>
   30afb:	83 c7 04             	add    $0x4,%edi
   30afe:	3b 7c 24 14          	cmp    0x14(%esp),%edi
   30b02:	74 0c                	je     30b10 <__score_alu_test_sal+0x210>
   30b04:	8b 37                	mov    (%edi),%esi
   30b06:	e9 72 fe ff ff       	jmp    3097d <__score_alu_test_sal+0x7d>
   30b0b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   30b0f:	90                   	nop
   30b10:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
   30b15:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   30b19:	3b 44 24 18          	cmp    0x18(%esp),%eax
   30b1d:	74 07                	je     30b26 <__score_alu_test_sal+0x226>
   30b1f:	8b 28                	mov    (%eax),%ebp
   30b21:	e9 46 fe ff ff       	jmp    3096c <__score_alu_test_sal+0x6c>
   30b26:	83 ec 0c             	sub    $0xc,%esp
   30b29:	6a 00                	push   $0x0
   30b2b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   30b2f:	89 f3                	mov    %esi,%ebx
   30b31:	e8 fa 35 fd ff       	call   4130 <time@plt>
   30b36:	89 04 24             	mov    %eax,(%esp)
   30b39:	e8 52 36 fd ff       	call   4190 <srand@plt>
   30b3e:	83 c4 10             	add    $0x10,%esp
   30b41:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
   30b48:	00 
   30b49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   30b50:	8b 6c 24 18          	mov    0x18(%esp),%ebp
   30b54:	bf 01 00 00 00       	mov    $0x1,%edi
   30b59:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30b5d:	e8 8e 36 fd ff       	call   41f0 <rand@plt>
   30b62:	83 ec 04             	sub    $0x4,%esp
   30b65:	6a 08                	push   $0x8
   30b67:	89 c6                	mov    %eax,%esi
   30b69:	50                   	push   %eax
   30b6a:	57                   	push   %edi
   30b6b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30b6f:	e8 7c f4 fd ff       	call   fff0 <alu_sal>
   30b74:	89 f9                	mov    %edi,%ecx
   30b76:	83 c4 10             	add    $0x10,%esp
   30b79:	89 c3                	mov    %eax,%ebx
   30b7b:	89 f0                	mov    %esi,%eax
   30b7d:	d2 e0                	shl    %cl,%al
   30b7f:	9c                   	pushf  
   30b80:	5a                   	pop    %edx
   30b81:	0f b6 c0             	movzbl %al,%eax
   30b84:	39 c3                	cmp    %eax,%ebx
   30b86:	0f 85 03 03 00 00    	jne    30e8f <__score_alu_test_sal+0x58f>
   30b8c:	8b 44 24 10          	mov    0x10(%esp),%eax
   30b90:	89 d1                	mov    %edx,%ecx
   30b92:	83 e1 01             	and    $0x1,%ecx
   30b95:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   30b99:	89 c3                	mov    %eax,%ebx
   30b9b:	83 e3 01             	and    $0x1,%ebx
   30b9e:	38 cb                	cmp    %cl,%bl
   30ba0:	0f 85 d4 02 00 00    	jne    30e7a <__score_alu_test_sal+0x57a>
   30ba6:	89 c3                	mov    %eax,%ebx
   30ba8:	89 d1                	mov    %edx,%ecx
   30baa:	c0 eb 02             	shr    $0x2,%bl
   30bad:	c1 e9 02             	shr    $0x2,%ecx
   30bb0:	83 e3 01             	and    $0x1,%ebx
   30bb3:	83 e1 01             	and    $0x1,%ecx
   30bb6:	38 cb                	cmp    %cl,%bl
   30bb8:	0f 85 a7 02 00 00    	jne    30e65 <__score_alu_test_sal+0x565>
   30bbe:	89 c3                	mov    %eax,%ebx
   30bc0:	89 d1                	mov    %edx,%ecx
   30bc2:	c0 eb 07             	shr    $0x7,%bl
   30bc5:	c0 e9 07             	shr    $0x7,%cl
   30bc8:	38 cb                	cmp    %cl,%bl
   30bca:	0f 85 80 02 00 00    	jne    30e50 <__score_alu_test_sal+0x550>
   30bd0:	c0 e8 06             	shr    $0x6,%al
   30bd3:	c1 ea 06             	shr    $0x6,%edx
   30bd6:	83 e0 01             	and    $0x1,%eax
   30bd9:	83 e2 01             	and    $0x1,%edx
   30bdc:	38 d0                	cmp    %dl,%al
   30bde:	0f 85 57 02 00 00    	jne    30e3b <__score_alu_test_sal+0x53b>
   30be4:	83 ec 04             	sub    $0x4,%esp
   30be7:	6a 10                	push   $0x10
   30be9:	56                   	push   %esi
   30bea:	57                   	push   %edi
   30beb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30bef:	e8 fc f3 fd ff       	call   fff0 <alu_sal>
   30bf4:	89 f9                	mov    %edi,%ecx
   30bf6:	83 c4 10             	add    $0x10,%esp
   30bf9:	89 c3                	mov    %eax,%ebx
   30bfb:	89 f0                	mov    %esi,%eax
   30bfd:	66 d3 e0             	shl    %cl,%ax
   30c00:	9c                   	pushf  
   30c01:	5a                   	pop    %edx
   30c02:	0f b7 c0             	movzwl %ax,%eax
   30c05:	39 c3                	cmp    %eax,%ebx
   30c07:	0f 85 1c 02 00 00    	jne    30e29 <__score_alu_test_sal+0x529>
   30c0d:	8b 44 24 10          	mov    0x10(%esp),%eax
   30c11:	89 d1                	mov    %edx,%ecx
   30c13:	83 e1 01             	and    $0x1,%ecx
   30c16:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   30c1a:	89 c3                	mov    %eax,%ebx
   30c1c:	83 e3 01             	and    $0x1,%ebx
   30c1f:	38 cb                	cmp    %cl,%bl
   30c21:	0f 85 ed 01 00 00    	jne    30e14 <__score_alu_test_sal+0x514>
   30c27:	89 c3                	mov    %eax,%ebx
   30c29:	89 d1                	mov    %edx,%ecx
   30c2b:	c0 eb 02             	shr    $0x2,%bl
   30c2e:	c1 e9 02             	shr    $0x2,%ecx
   30c31:	83 e3 01             	and    $0x1,%ebx
   30c34:	83 e1 01             	and    $0x1,%ecx
   30c37:	38 cb                	cmp    %cl,%bl
   30c39:	0f 85 c0 01 00 00    	jne    30dff <__score_alu_test_sal+0x4ff>
   30c3f:	89 c3                	mov    %eax,%ebx
   30c41:	89 d1                	mov    %edx,%ecx
   30c43:	c0 eb 07             	shr    $0x7,%bl
   30c46:	c0 e9 07             	shr    $0x7,%cl
   30c49:	38 cb                	cmp    %cl,%bl
   30c4b:	0f 85 99 01 00 00    	jne    30dea <__score_alu_test_sal+0x4ea>
   30c51:	c0 e8 06             	shr    $0x6,%al
   30c54:	c1 ea 06             	shr    $0x6,%edx
   30c57:	83 e0 01             	and    $0x1,%eax
   30c5a:	83 e2 01             	and    $0x1,%edx
   30c5d:	38 d0                	cmp    %dl,%al
   30c5f:	0f 85 70 01 00 00    	jne    30dd5 <__score_alu_test_sal+0x4d5>
   30c65:	83 ec 04             	sub    $0x4,%esp
   30c68:	6a 20                	push   $0x20
   30c6a:	56                   	push   %esi
   30c6b:	57                   	push   %edi
   30c6c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   30c70:	e8 7b f3 fd ff       	call   fff0 <alu_sal>
   30c75:	89 f9                	mov    %edi,%ecx
   30c77:	83 c4 10             	add    $0x10,%esp
   30c7a:	89 c3                	mov    %eax,%ebx
   30c7c:	89 f0                	mov    %esi,%eax
   30c7e:	d3 e0                	shl    %cl,%eax
   30c80:	9c                   	pushf  
   30c81:	5a                   	pop    %edx
   30c82:	39 c3                	cmp    %eax,%ebx
   30c84:	0f 85 28 01 00 00    	jne    30db2 <__score_alu_test_sal+0x4b2>
   30c8a:	8b 44 24 10          	mov    0x10(%esp),%eax
   30c8e:	89 d1                	mov    %edx,%ecx
   30c90:	83 e1 01             	and    $0x1,%ecx
   30c93:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   30c97:	89 c3                	mov    %eax,%ebx
   30c99:	83 e3 01             	and    $0x1,%ebx
   30c9c:	38 cb                	cmp    %cl,%bl
   30c9e:	0f 85 eb 00 00 00    	jne    30d8f <__score_alu_test_sal+0x48f>
   30ca4:	89 c3                	mov    %eax,%ebx
   30ca6:	89 d1                	mov    %edx,%ecx
   30ca8:	c0 eb 02             	shr    $0x2,%bl
   30cab:	c1 e9 02             	shr    $0x2,%ecx
   30cae:	83 e3 01             	and    $0x1,%ebx
   30cb1:	83 e1 01             	and    $0x1,%ecx
   30cb4:	38 cb                	cmp    %cl,%bl
   30cb6:	0f 85 b0 00 00 00    	jne    30d6c <__score_alu_test_sal+0x46c>
   30cbc:	89 c3                	mov    %eax,%ebx
   30cbe:	89 d1                	mov    %edx,%ecx
   30cc0:	c0 eb 07             	shr    $0x7,%bl
   30cc3:	c0 e9 07             	shr    $0x7,%cl
   30cc6:	38 cb                	cmp    %cl,%bl
   30cc8:	75 7f                	jne    30d49 <__score_alu_test_sal+0x449>
   30cca:	c0 e8 06             	shr    $0x6,%al
   30ccd:	c1 ea 06             	shr    $0x6,%edx
   30cd0:	83 e0 01             	and    $0x1,%eax
   30cd3:	83 e2 01             	and    $0x1,%edx
   30cd6:	38 d0                	cmp    %dl,%al
   30cd8:	75 4c                	jne    30d26 <__score_alu_test_sal+0x426>
   30cda:	83 c5 04             	add    $0x4,%ebp
   30cdd:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
   30ce1:	74 0d                	je     30cf0 <__score_alu_test_sal+0x3f0>
   30ce3:	8b 7d 00             	mov    0x0(%ebp),%edi
   30ce6:	e9 6e fe ff ff       	jmp    30b59 <__score_alu_test_sal+0x259>
   30ceb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   30cef:	90                   	nop
   30cf0:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
   30cf5:	0f 85 55 fe ff ff    	jne    30b50 <__score_alu_test_sal+0x250>
   30cfb:	83 ec 0c             	sub    $0xc,%esp
   30cfe:	8b 7c 24 18          	mov    0x18(%esp),%edi
   30d02:	8d 87 3c 72 fe ff    	lea    -0x18dc4(%edi),%eax
   30d08:	89 fb                	mov    %edi,%ebx
   30d0a:	50                   	push   %eax
   30d0b:	e8 a0 35 fd ff       	call   42b0 <puts@plt>
   30d10:	8d 87 51 70 fe ff    	lea    -0x18faf(%edi),%eax
   30d16:	89 04 24             	mov    %eax,(%esp)
   30d19:	e8 02 9b ff ff       	call   2a820 <score_reg_alu_fpu>
   30d1e:	83 c4 5c             	add    $0x5c,%esp
   30d21:	5b                   	pop    %ebx
   30d22:	5e                   	pop    %esi
   30d23:	5f                   	pop    %edi
   30d24:	5d                   	pop    %ebp
   30d25:	c3                   	ret    
   30d26:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30d2a:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30d30:	50                   	push   %eax
   30d31:	68 a3 01 00 00       	push   $0x1a3
   30d36:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   30d3c:	50                   	push   %eax
   30d3d:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   30d43:	50                   	push   %eax
   30d44:	e8 c7 35 fd ff       	call   4310 <__assert_fail@plt>
   30d49:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30d4d:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30d53:	50                   	push   %eax
   30d54:	68 a3 01 00 00       	push   $0x1a3
   30d59:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   30d5f:	50                   	push   %eax
   30d60:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   30d66:	50                   	push   %eax
   30d67:	e8 a4 35 fd ff       	call   4310 <__assert_fail@plt>
   30d6c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30d70:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30d76:	50                   	push   %eax
   30d77:	68 a3 01 00 00       	push   $0x1a3
   30d7c:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   30d82:	50                   	push   %eax
   30d83:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   30d89:	50                   	push   %eax
   30d8a:	e8 81 35 fd ff       	call   4310 <__assert_fail@plt>
   30d8f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30d93:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30d99:	50                   	push   %eax
   30d9a:	68 a3 01 00 00       	push   $0x1a3
   30d9f:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   30da5:	50                   	push   %eax
   30da6:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   30dac:	50                   	push   %eax
   30dad:	e8 5e 35 fd ff       	call   4310 <__assert_fail@plt>
   30db2:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30db6:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30dbc:	50                   	push   %eax
   30dbd:	68 a3 01 00 00       	push   $0x1a3
   30dc2:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   30dc8:	50                   	push   %eax
   30dc9:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   30dcf:	50                   	push   %eax
   30dd0:	e8 3b 35 fd ff       	call   4310 <__assert_fail@plt>
   30dd5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30dd9:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30ddf:	50                   	push   %eax
   30de0:	68 a2 01 00 00       	push   $0x1a2
   30de5:	e9 4c ff ff ff       	jmp    30d36 <__score_alu_test_sal+0x436>
   30dea:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30dee:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30df4:	50                   	push   %eax
   30df5:	68 a2 01 00 00       	push   $0x1a2
   30dfa:	e9 5a ff ff ff       	jmp    30d59 <__score_alu_test_sal+0x459>
   30dff:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e03:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e09:	50                   	push   %eax
   30e0a:	68 a2 01 00 00       	push   $0x1a2
   30e0f:	e9 68 ff ff ff       	jmp    30d7c <__score_alu_test_sal+0x47c>
   30e14:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e18:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e1e:	50                   	push   %eax
   30e1f:	68 a2 01 00 00       	push   $0x1a2
   30e24:	e9 76 ff ff ff       	jmp    30d9f <__score_alu_test_sal+0x49f>
   30e29:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e2d:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e33:	50                   	push   %eax
   30e34:	68 a2 01 00 00       	push   $0x1a2
   30e39:	eb 87                	jmp    30dc2 <__score_alu_test_sal+0x4c2>
   30e3b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e3f:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e45:	50                   	push   %eax
   30e46:	68 a1 01 00 00       	push   $0x1a1
   30e4b:	e9 e6 fe ff ff       	jmp    30d36 <__score_alu_test_sal+0x436>
   30e50:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e54:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e5a:	50                   	push   %eax
   30e5b:	68 a1 01 00 00       	push   $0x1a1
   30e60:	e9 f4 fe ff ff       	jmp    30d59 <__score_alu_test_sal+0x459>
   30e65:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e69:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e6f:	50                   	push   %eax
   30e70:	68 a1 01 00 00       	push   $0x1a1
   30e75:	e9 02 ff ff ff       	jmp    30d7c <__score_alu_test_sal+0x47c>
   30e7a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e7e:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e84:	50                   	push   %eax
   30e85:	68 a1 01 00 00       	push   $0x1a1
   30e8a:	e9 10 ff ff ff       	jmp    30d9f <__score_alu_test_sal+0x49f>
   30e8f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30e93:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30e99:	50                   	push   %eax
   30e9a:	68 a1 01 00 00       	push   $0x1a1
   30e9f:	e9 1e ff ff ff       	jmp    30dc2 <__score_alu_test_sal+0x4c2>
   30ea4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30ea8:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30eae:	50                   	push   %eax
   30eaf:	68 98 01 00 00       	push   $0x198
   30eb4:	e9 c3 fe ff ff       	jmp    30d7c <__score_alu_test_sal+0x47c>
   30eb9:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30ebd:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30ec3:	50                   	push   %eax
   30ec4:	68 98 01 00 00       	push   $0x198
   30ec9:	e9 8b fe ff ff       	jmp    30d59 <__score_alu_test_sal+0x459>
   30ece:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30ed2:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30ed8:	50                   	push   %eax
   30ed9:	68 96 01 00 00       	push   $0x196
   30ede:	e9 df fe ff ff       	jmp    30dc2 <__score_alu_test_sal+0x4c2>
   30ee3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30ee7:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30eed:	50                   	push   %eax
   30eee:	68 98 01 00 00       	push   $0x198
   30ef3:	e9 a7 fe ff ff       	jmp    30d9f <__score_alu_test_sal+0x49f>
   30ef8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30efc:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f02:	50                   	push   %eax
   30f03:	68 98 01 00 00       	push   $0x198
   30f08:	e9 b5 fe ff ff       	jmp    30dc2 <__score_alu_test_sal+0x4c2>
   30f0d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30f11:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f17:	50                   	push   %eax
   30f18:	68 97 01 00 00       	push   $0x197
   30f1d:	e9 14 fe ff ff       	jmp    30d36 <__score_alu_test_sal+0x436>
   30f22:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30f26:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f2c:	50                   	push   %eax
   30f2d:	68 97 01 00 00       	push   $0x197
   30f32:	e9 22 fe ff ff       	jmp    30d59 <__score_alu_test_sal+0x459>
   30f37:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30f3b:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f41:	50                   	push   %eax
   30f42:	68 97 01 00 00       	push   $0x197
   30f47:	e9 30 fe ff ff       	jmp    30d7c <__score_alu_test_sal+0x47c>
   30f4c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30f50:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f56:	50                   	push   %eax
   30f57:	68 97 01 00 00       	push   $0x197
   30f5c:	e9 3e fe ff ff       	jmp    30d9f <__score_alu_test_sal+0x49f>
   30f61:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30f65:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f6b:	50                   	push   %eax
   30f6c:	68 97 01 00 00       	push   $0x197
   30f71:	e9 4c fe ff ff       	jmp    30dc2 <__score_alu_test_sal+0x4c2>
   30f76:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30f7a:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f80:	50                   	push   %eax
   30f81:	68 96 01 00 00       	push   $0x196
   30f86:	e9 ab fd ff ff       	jmp    30d36 <__score_alu_test_sal+0x436>
   30f8b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30f8f:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30f95:	50                   	push   %eax
   30f96:	68 96 01 00 00       	push   $0x196
   30f9b:	e9 b9 fd ff ff       	jmp    30d59 <__score_alu_test_sal+0x459>
   30fa0:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30fa4:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30faa:	50                   	push   %eax
   30fab:	68 96 01 00 00       	push   $0x196
   30fb0:	e9 c7 fd ff ff       	jmp    30d7c <__score_alu_test_sal+0x47c>
   30fb5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30fb9:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30fbf:	50                   	push   %eax
   30fc0:	68 96 01 00 00       	push   $0x196
   30fc5:	e9 d5 fd ff ff       	jmp    30d9f <__score_alu_test_sal+0x49f>
   30fca:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   30fce:	8d 83 a4 73 fe ff    	lea    -0x18c5c(%ebx),%eax
   30fd4:	50                   	push   %eax
   30fd5:	68 98 01 00 00       	push   $0x198
   30fda:	e9 57 fd ff ff       	jmp    30d36 <__score_alu_test_sal+0x436>
   30fdf:	90                   	nop

00030fe0 <__score_alu_test_sar>:
   30fe0:	e8 f2 52 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   30fe5:	05 1b e0 01 00       	add    $0x1e01b,%eax
   30fea:	55                   	push   %ebp
   30feb:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   30ff0:	57                   	push   %edi
   30ff1:	56                   	push   %esi
   30ff2:	53                   	push   %ebx
   30ff3:	83 ec 4c             	sub    $0x4c,%esp
   30ff6:	8d 74 24 24          	lea    0x24(%esp),%esi
   30ffa:	89 44 24 0c          	mov    %eax,0xc(%esp)
   30ffe:	8d 80 60 32 05 00    	lea    0x53260(%eax),%eax
   31004:	89 74 24 1c          	mov    %esi,0x1c(%esp)
   31008:	8d 74 24 30          	lea    0x30(%esp),%esi
   3100c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   31013:	00 
   31014:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
   3101b:	00 
   3101c:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
   31023:	00 
   31024:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
   3102b:	00 
   3102c:	c7 44 24 24 ff ff ff 	movl   $0xffffffff,0x24(%esp)
   31033:	ff 
   31034:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   3103b:	00 
   3103c:	c7 44 24 2c 10 10 10 	movl   $0x10101010,0x2c(%esp)
   31043:	10 
   31044:	89 74 24 18          	mov    %esi,0x18(%esp)
   31048:	89 44 24 10          	mov    %eax,0x10(%esp)
   3104c:	8d 44 24 40          	lea    0x40(%esp),%eax
   31050:	8b 7c 24 18          	mov    0x18(%esp),%edi
   31054:	be 01 00 00 00       	mov    $0x1,%esi
   31059:	89 44 24 14          	mov    %eax,0x14(%esp)
   3105d:	83 ec 04             	sub    $0x4,%esp
   31060:	6a 08                	push   $0x8
   31062:	55                   	push   %ebp
   31063:	56                   	push   %esi
   31064:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   31068:	e8 a3 ed fd ff       	call   fe10 <alu_sar>
   3106d:	89 f1                	mov    %esi,%ecx
   3106f:	83 c4 10             	add    $0x10,%esp
   31072:	89 c3                	mov    %eax,%ebx
   31074:	89 e8                	mov    %ebp,%eax
   31076:	d2 f8                	sar    %cl,%al
   31078:	9c                   	pushf  
   31079:	5a                   	pop    %edx
   3107a:	0f b6 c0             	movzbl %al,%eax
   3107d:	39 c3                	cmp    %eax,%ebx
   3107f:	0f 85 29 05 00 00    	jne    315ae <__score_alu_test_sar+0x5ce>
   31085:	8b 44 24 10          	mov    0x10(%esp),%eax
   31089:	89 d1                	mov    %edx,%ecx
   3108b:	83 e1 01             	and    $0x1,%ecx
   3108e:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   31092:	89 c3                	mov    %eax,%ebx
   31094:	83 e3 01             	and    $0x1,%ebx
   31097:	38 cb                	cmp    %cl,%bl
   31099:	0f 85 f6 05 00 00    	jne    31695 <__score_alu_test_sar+0x6b5>
   3109f:	89 c3                	mov    %eax,%ebx
   310a1:	89 d1                	mov    %edx,%ecx
   310a3:	c0 eb 02             	shr    $0x2,%bl
   310a6:	c1 e9 02             	shr    $0x2,%ecx
   310a9:	83 e3 01             	and    $0x1,%ebx
   310ac:	83 e1 01             	and    $0x1,%ecx
   310af:	38 cb                	cmp    %cl,%bl
   310b1:	0f 85 c9 05 00 00    	jne    31680 <__score_alu_test_sar+0x6a0>
   310b7:	89 c3                	mov    %eax,%ebx
   310b9:	89 d1                	mov    %edx,%ecx
   310bb:	c0 eb 07             	shr    $0x7,%bl
   310be:	c0 e9 07             	shr    $0x7,%cl
   310c1:	38 cb                	cmp    %cl,%bl
   310c3:	0f 85 a2 05 00 00    	jne    3166b <__score_alu_test_sar+0x68b>
   310c9:	c0 e8 06             	shr    $0x6,%al
   310cc:	c1 ea 06             	shr    $0x6,%edx
   310cf:	83 e0 01             	and    $0x1,%eax
   310d2:	83 e2 01             	and    $0x1,%edx
   310d5:	38 d0                	cmp    %dl,%al
   310d7:	0f 85 79 05 00 00    	jne    31656 <__score_alu_test_sar+0x676>
   310dd:	83 ec 04             	sub    $0x4,%esp
   310e0:	6a 10                	push   $0x10
   310e2:	55                   	push   %ebp
   310e3:	56                   	push   %esi
   310e4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   310e8:	e8 23 ed fd ff       	call   fe10 <alu_sar>
   310ed:	89 f1                	mov    %esi,%ecx
   310ef:	83 c4 10             	add    $0x10,%esp
   310f2:	89 c3                	mov    %eax,%ebx
   310f4:	89 e8                	mov    %ebp,%eax
   310f6:	66 d3 f8             	sar    %cl,%ax
   310f9:	9c                   	pushf  
   310fa:	5a                   	pop    %edx
   310fb:	0f b7 c0             	movzwl %ax,%eax
   310fe:	39 c3                	cmp    %eax,%ebx
   31100:	0f 85 3b 05 00 00    	jne    31641 <__score_alu_test_sar+0x661>
   31106:	8b 44 24 10          	mov    0x10(%esp),%eax
   3110a:	89 d1                	mov    %edx,%ecx
   3110c:	83 e1 01             	and    $0x1,%ecx
   3110f:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   31113:	89 c3                	mov    %eax,%ebx
   31115:	83 e3 01             	and    $0x1,%ebx
   31118:	38 cb                	cmp    %cl,%bl
   3111a:	0f 85 0c 05 00 00    	jne    3162c <__score_alu_test_sar+0x64c>
   31120:	89 c3                	mov    %eax,%ebx
   31122:	89 d1                	mov    %edx,%ecx
   31124:	c0 eb 02             	shr    $0x2,%bl
   31127:	c1 e9 02             	shr    $0x2,%ecx
   3112a:	83 e3 01             	and    $0x1,%ebx
   3112d:	83 e1 01             	and    $0x1,%ecx
   31130:	38 cb                	cmp    %cl,%bl
   31132:	0f 85 df 04 00 00    	jne    31617 <__score_alu_test_sar+0x637>
   31138:	89 c3                	mov    %eax,%ebx
   3113a:	89 d1                	mov    %edx,%ecx
   3113c:	c0 eb 07             	shr    $0x7,%bl
   3113f:	c0 e9 07             	shr    $0x7,%cl
   31142:	38 cb                	cmp    %cl,%bl
   31144:	0f 85 b8 04 00 00    	jne    31602 <__score_alu_test_sar+0x622>
   3114a:	c0 e8 06             	shr    $0x6,%al
   3114d:	c1 ea 06             	shr    $0x6,%edx
   31150:	83 e0 01             	and    $0x1,%eax
   31153:	83 e2 01             	and    $0x1,%edx
   31156:	38 d0                	cmp    %dl,%al
   31158:	0f 85 8f 04 00 00    	jne    315ed <__score_alu_test_sar+0x60d>
   3115e:	83 ec 04             	sub    $0x4,%esp
   31161:	6a 20                	push   $0x20
   31163:	55                   	push   %ebp
   31164:	56                   	push   %esi
   31165:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   31169:	e8 a2 ec fd ff       	call   fe10 <alu_sar>
   3116e:	89 f1                	mov    %esi,%ecx
   31170:	83 c4 10             	add    $0x10,%esp
   31173:	89 c3                	mov    %eax,%ebx
   31175:	89 e8                	mov    %ebp,%eax
   31177:	d3 f8                	sar    %cl,%eax
   31179:	9c                   	pushf  
   3117a:	5a                   	pop    %edx
   3117b:	39 c3                	cmp    %eax,%ebx
   3117d:	0f 85 55 04 00 00    	jne    315d8 <__score_alu_test_sar+0x5f8>
   31183:	8b 44 24 10          	mov    0x10(%esp),%eax
   31187:	89 d1                	mov    %edx,%ecx
   31189:	83 e1 01             	and    $0x1,%ecx
   3118c:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   31190:	89 c3                	mov    %eax,%ebx
   31192:	83 e3 01             	and    $0x1,%ebx
   31195:	38 cb                	cmp    %cl,%bl
   31197:	0f 85 26 04 00 00    	jne    315c3 <__score_alu_test_sar+0x5e3>
   3119d:	89 c3                	mov    %eax,%ebx
   3119f:	89 d1                	mov    %edx,%ecx
   311a1:	c0 eb 02             	shr    $0x2,%bl
   311a4:	c1 e9 02             	shr    $0x2,%ecx
   311a7:	83 e3 01             	and    $0x1,%ebx
   311aa:	83 e1 01             	and    $0x1,%ecx
   311ad:	38 cb                	cmp    %cl,%bl
   311af:	0f 85 cf 03 00 00    	jne    31584 <__score_alu_test_sar+0x5a4>
   311b5:	89 c3                	mov    %eax,%ebx
   311b7:	89 d1                	mov    %edx,%ecx
   311b9:	c0 eb 07             	shr    $0x7,%bl
   311bc:	c0 e9 07             	shr    $0x7,%cl
   311bf:	38 cb                	cmp    %cl,%bl
   311c1:	0f 85 d2 03 00 00    	jne    31599 <__score_alu_test_sar+0x5b9>
   311c7:	c0 e8 06             	shr    $0x6,%al
   311ca:	c1 ea 06             	shr    $0x6,%edx
   311cd:	83 e0 01             	and    $0x1,%eax
   311d0:	83 e2 01             	and    $0x1,%edx
   311d3:	38 d0                	cmp    %dl,%al
   311d5:	0f 85 cf 04 00 00    	jne    316aa <__score_alu_test_sar+0x6ca>
   311db:	83 c7 04             	add    $0x4,%edi
   311de:	3b 7c 24 14          	cmp    0x14(%esp),%edi
   311e2:	74 0c                	je     311f0 <__score_alu_test_sar+0x210>
   311e4:	8b 37                	mov    (%edi),%esi
   311e6:	e9 72 fe ff ff       	jmp    3105d <__score_alu_test_sar+0x7d>
   311eb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   311ef:	90                   	nop
   311f0:	83 44 24 1c 04       	addl   $0x4,0x1c(%esp)
   311f5:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   311f9:	3b 44 24 18          	cmp    0x18(%esp),%eax
   311fd:	74 07                	je     31206 <__score_alu_test_sar+0x226>
   311ff:	8b 28                	mov    (%eax),%ebp
   31201:	e9 46 fe ff ff       	jmp    3104c <__score_alu_test_sar+0x6c>
   31206:	83 ec 0c             	sub    $0xc,%esp
   31209:	6a 00                	push   $0x0
   3120b:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   3120f:	89 f3                	mov    %esi,%ebx
   31211:	e8 1a 2f fd ff       	call   4130 <time@plt>
   31216:	89 04 24             	mov    %eax,(%esp)
   31219:	e8 72 2f fd ff       	call   4190 <srand@plt>
   3121e:	83 c4 10             	add    $0x10,%esp
   31221:	c7 44 24 1c 40 42 0f 	movl   $0xf4240,0x1c(%esp)
   31228:	00 
   31229:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31230:	8b 6c 24 18          	mov    0x18(%esp),%ebp
   31234:	bf 01 00 00 00       	mov    $0x1,%edi
   31239:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3123d:	e8 ae 2f fd ff       	call   41f0 <rand@plt>
   31242:	83 ec 04             	sub    $0x4,%esp
   31245:	6a 08                	push   $0x8
   31247:	89 c6                	mov    %eax,%esi
   31249:	50                   	push   %eax
   3124a:	57                   	push   %edi
   3124b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   3124f:	e8 bc eb fd ff       	call   fe10 <alu_sar>
   31254:	89 f9                	mov    %edi,%ecx
   31256:	83 c4 10             	add    $0x10,%esp
   31259:	89 c3                	mov    %eax,%ebx
   3125b:	89 f0                	mov    %esi,%eax
   3125d:	d2 f8                	sar    %cl,%al
   3125f:	9c                   	pushf  
   31260:	5a                   	pop    %edx
   31261:	0f b6 c0             	movzbl %al,%eax
   31264:	39 c3                	cmp    %eax,%ebx
   31266:	0f 85 03 03 00 00    	jne    3156f <__score_alu_test_sar+0x58f>
   3126c:	8b 44 24 10          	mov    0x10(%esp),%eax
   31270:	89 d1                	mov    %edx,%ecx
   31272:	83 e1 01             	and    $0x1,%ecx
   31275:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   31279:	89 c3                	mov    %eax,%ebx
   3127b:	83 e3 01             	and    $0x1,%ebx
   3127e:	38 cb                	cmp    %cl,%bl
   31280:	0f 85 d4 02 00 00    	jne    3155a <__score_alu_test_sar+0x57a>
   31286:	89 c3                	mov    %eax,%ebx
   31288:	89 d1                	mov    %edx,%ecx
   3128a:	c0 eb 02             	shr    $0x2,%bl
   3128d:	c1 e9 02             	shr    $0x2,%ecx
   31290:	83 e3 01             	and    $0x1,%ebx
   31293:	83 e1 01             	and    $0x1,%ecx
   31296:	38 cb                	cmp    %cl,%bl
   31298:	0f 85 a7 02 00 00    	jne    31545 <__score_alu_test_sar+0x565>
   3129e:	89 c3                	mov    %eax,%ebx
   312a0:	89 d1                	mov    %edx,%ecx
   312a2:	c0 eb 07             	shr    $0x7,%bl
   312a5:	c0 e9 07             	shr    $0x7,%cl
   312a8:	38 cb                	cmp    %cl,%bl
   312aa:	0f 85 80 02 00 00    	jne    31530 <__score_alu_test_sar+0x550>
   312b0:	c0 e8 06             	shr    $0x6,%al
   312b3:	c1 ea 06             	shr    $0x6,%edx
   312b6:	83 e0 01             	and    $0x1,%eax
   312b9:	83 e2 01             	and    $0x1,%edx
   312bc:	38 d0                	cmp    %dl,%al
   312be:	0f 85 57 02 00 00    	jne    3151b <__score_alu_test_sar+0x53b>
   312c4:	83 ec 04             	sub    $0x4,%esp
   312c7:	6a 10                	push   $0x10
   312c9:	56                   	push   %esi
   312ca:	57                   	push   %edi
   312cb:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   312cf:	e8 3c eb fd ff       	call   fe10 <alu_sar>
   312d4:	89 f9                	mov    %edi,%ecx
   312d6:	83 c4 10             	add    $0x10,%esp
   312d9:	89 c3                	mov    %eax,%ebx
   312db:	89 f0                	mov    %esi,%eax
   312dd:	66 d3 f8             	sar    %cl,%ax
   312e0:	9c                   	pushf  
   312e1:	5a                   	pop    %edx
   312e2:	0f b7 c0             	movzwl %ax,%eax
   312e5:	39 c3                	cmp    %eax,%ebx
   312e7:	0f 85 1c 02 00 00    	jne    31509 <__score_alu_test_sar+0x529>
   312ed:	8b 44 24 10          	mov    0x10(%esp),%eax
   312f1:	89 d1                	mov    %edx,%ecx
   312f3:	83 e1 01             	and    $0x1,%ecx
   312f6:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   312fa:	89 c3                	mov    %eax,%ebx
   312fc:	83 e3 01             	and    $0x1,%ebx
   312ff:	38 cb                	cmp    %cl,%bl
   31301:	0f 85 ed 01 00 00    	jne    314f4 <__score_alu_test_sar+0x514>
   31307:	89 c3                	mov    %eax,%ebx
   31309:	89 d1                	mov    %edx,%ecx
   3130b:	c0 eb 02             	shr    $0x2,%bl
   3130e:	c1 e9 02             	shr    $0x2,%ecx
   31311:	83 e3 01             	and    $0x1,%ebx
   31314:	83 e1 01             	and    $0x1,%ecx
   31317:	38 cb                	cmp    %cl,%bl
   31319:	0f 85 c0 01 00 00    	jne    314df <__score_alu_test_sar+0x4ff>
   3131f:	89 c3                	mov    %eax,%ebx
   31321:	89 d1                	mov    %edx,%ecx
   31323:	c0 eb 07             	shr    $0x7,%bl
   31326:	c0 e9 07             	shr    $0x7,%cl
   31329:	38 cb                	cmp    %cl,%bl
   3132b:	0f 85 99 01 00 00    	jne    314ca <__score_alu_test_sar+0x4ea>
   31331:	c0 e8 06             	shr    $0x6,%al
   31334:	c1 ea 06             	shr    $0x6,%edx
   31337:	83 e0 01             	and    $0x1,%eax
   3133a:	83 e2 01             	and    $0x1,%edx
   3133d:	38 d0                	cmp    %dl,%al
   3133f:	0f 85 70 01 00 00    	jne    314b5 <__score_alu_test_sar+0x4d5>
   31345:	83 ec 04             	sub    $0x4,%esp
   31348:	6a 20                	push   $0x20
   3134a:	56                   	push   %esi
   3134b:	57                   	push   %edi
   3134c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   31350:	e8 bb ea fd ff       	call   fe10 <alu_sar>
   31355:	89 f9                	mov    %edi,%ecx
   31357:	83 c4 10             	add    $0x10,%esp
   3135a:	89 c3                	mov    %eax,%ebx
   3135c:	89 f0                	mov    %esi,%eax
   3135e:	d3 f8                	sar    %cl,%eax
   31360:	9c                   	pushf  
   31361:	5a                   	pop    %edx
   31362:	39 c3                	cmp    %eax,%ebx
   31364:	0f 85 28 01 00 00    	jne    31492 <__score_alu_test_sar+0x4b2>
   3136a:	8b 44 24 10          	mov    0x10(%esp),%eax
   3136e:	89 d1                	mov    %edx,%ecx
   31370:	83 e1 01             	and    $0x1,%ecx
   31373:	0f b6 40 24          	movzbl 0x24(%eax),%eax
   31377:	89 c3                	mov    %eax,%ebx
   31379:	83 e3 01             	and    $0x1,%ebx
   3137c:	38 cb                	cmp    %cl,%bl
   3137e:	0f 85 eb 00 00 00    	jne    3146f <__score_alu_test_sar+0x48f>
   31384:	89 c3                	mov    %eax,%ebx
   31386:	89 d1                	mov    %edx,%ecx
   31388:	c0 eb 02             	shr    $0x2,%bl
   3138b:	c1 e9 02             	shr    $0x2,%ecx
   3138e:	83 e3 01             	and    $0x1,%ebx
   31391:	83 e1 01             	and    $0x1,%ecx
   31394:	38 cb                	cmp    %cl,%bl
   31396:	0f 85 b0 00 00 00    	jne    3144c <__score_alu_test_sar+0x46c>
   3139c:	89 c3                	mov    %eax,%ebx
   3139e:	89 d1                	mov    %edx,%ecx
   313a0:	c0 eb 07             	shr    $0x7,%bl
   313a3:	c0 e9 07             	shr    $0x7,%cl
   313a6:	38 cb                	cmp    %cl,%bl
   313a8:	75 7f                	jne    31429 <__score_alu_test_sar+0x449>
   313aa:	c0 e8 06             	shr    $0x6,%al
   313ad:	c1 ea 06             	shr    $0x6,%edx
   313b0:	83 e0 01             	and    $0x1,%eax
   313b3:	83 e2 01             	and    $0x1,%edx
   313b6:	38 d0                	cmp    %dl,%al
   313b8:	75 4c                	jne    31406 <__score_alu_test_sar+0x426>
   313ba:	83 c5 04             	add    $0x4,%ebp
   313bd:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
   313c1:	74 0d                	je     313d0 <__score_alu_test_sar+0x3f0>
   313c3:	8b 7d 00             	mov    0x0(%ebp),%edi
   313c6:	e9 6e fe ff ff       	jmp    31239 <__score_alu_test_sar+0x259>
   313cb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   313cf:	90                   	nop
   313d0:	83 6c 24 1c 01       	subl   $0x1,0x1c(%esp)
   313d5:	0f 85 55 fe ff ff    	jne    31230 <__score_alu_test_sar+0x250>
   313db:	83 ec 0c             	sub    $0xc,%esp
   313de:	8b 7c 24 18          	mov    0x18(%esp),%edi
   313e2:	8d 87 64 72 fe ff    	lea    -0x18d9c(%edi),%eax
   313e8:	89 fb                	mov    %edi,%ebx
   313ea:	50                   	push   %eax
   313eb:	e8 c0 2e fd ff       	call   42b0 <puts@plt>
   313f0:	8d 87 66 70 fe ff    	lea    -0x18f9a(%edi),%eax
   313f6:	89 04 24             	mov    %eax,(%esp)
   313f9:	e8 22 94 ff ff       	call   2a820 <score_reg_alu_fpu>
   313fe:	83 c4 5c             	add    $0x5c,%esp
   31401:	5b                   	pop    %ebx
   31402:	5e                   	pop    %esi
   31403:	5f                   	pop    %edi
   31404:	5d                   	pop    %ebp
   31405:	c3                   	ret    
   31406:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3140a:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31410:	50                   	push   %eax
   31411:	68 c3 01 00 00       	push   $0x1c3
   31416:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   3141c:	50                   	push   %eax
   3141d:	8d 83 90 5d fe ff    	lea    -0x1a270(%ebx),%eax
   31423:	50                   	push   %eax
   31424:	e8 e7 2e fd ff       	call   4310 <__assert_fail@plt>
   31429:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3142d:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31433:	50                   	push   %eax
   31434:	68 c3 01 00 00       	push   $0x1c3
   31439:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   3143f:	50                   	push   %eax
   31440:	8d 83 70 5d fe ff    	lea    -0x1a290(%ebx),%eax
   31446:	50                   	push   %eax
   31447:	e8 c4 2e fd ff       	call   4310 <__assert_fail@plt>
   3144c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31450:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31456:	50                   	push   %eax
   31457:	68 c3 01 00 00       	push   $0x1c3
   3145c:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31462:	50                   	push   %eax
   31463:	8d 83 50 5d fe ff    	lea    -0x1a2b0(%ebx),%eax
   31469:	50                   	push   %eax
   3146a:	e8 a1 2e fd ff       	call   4310 <__assert_fail@plt>
   3146f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31473:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31479:	50                   	push   %eax
   3147a:	68 c3 01 00 00       	push   $0x1c3
   3147f:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31485:	50                   	push   %eax
   31486:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   3148c:	50                   	push   %eax
   3148d:	e8 7e 2e fd ff       	call   4310 <__assert_fail@plt>
   31492:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31496:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3149c:	50                   	push   %eax
   3149d:	68 c3 01 00 00       	push   $0x1c3
   314a2:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   314a8:	50                   	push   %eax
   314a9:	8d 83 01 5d fe ff    	lea    -0x1a2ff(%ebx),%eax
   314af:	50                   	push   %eax
   314b0:	e8 5b 2e fd ff       	call   4310 <__assert_fail@plt>
   314b5:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   314b9:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   314bf:	50                   	push   %eax
   314c0:	68 c2 01 00 00       	push   $0x1c2
   314c5:	e9 4c ff ff ff       	jmp    31416 <__score_alu_test_sar+0x436>
   314ca:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   314ce:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   314d4:	50                   	push   %eax
   314d5:	68 c2 01 00 00       	push   $0x1c2
   314da:	e9 5a ff ff ff       	jmp    31439 <__score_alu_test_sar+0x459>
   314df:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   314e3:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   314e9:	50                   	push   %eax
   314ea:	68 c2 01 00 00       	push   $0x1c2
   314ef:	e9 68 ff ff ff       	jmp    3145c <__score_alu_test_sar+0x47c>
   314f4:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   314f8:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   314fe:	50                   	push   %eax
   314ff:	68 c2 01 00 00       	push   $0x1c2
   31504:	e9 76 ff ff ff       	jmp    3147f <__score_alu_test_sar+0x49f>
   31509:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3150d:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31513:	50                   	push   %eax
   31514:	68 c2 01 00 00       	push   $0x1c2
   31519:	eb 87                	jmp    314a2 <__score_alu_test_sar+0x4c2>
   3151b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3151f:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31525:	50                   	push   %eax
   31526:	68 c1 01 00 00       	push   $0x1c1
   3152b:	e9 e6 fe ff ff       	jmp    31416 <__score_alu_test_sar+0x436>
   31530:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31534:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3153a:	50                   	push   %eax
   3153b:	68 c1 01 00 00       	push   $0x1c1
   31540:	e9 f4 fe ff ff       	jmp    31439 <__score_alu_test_sar+0x459>
   31545:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31549:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3154f:	50                   	push   %eax
   31550:	68 c1 01 00 00       	push   $0x1c1
   31555:	e9 02 ff ff ff       	jmp    3145c <__score_alu_test_sar+0x47c>
   3155a:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3155e:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31564:	50                   	push   %eax
   31565:	68 c1 01 00 00       	push   $0x1c1
   3156a:	e9 10 ff ff ff       	jmp    3147f <__score_alu_test_sar+0x49f>
   3156f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31573:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31579:	50                   	push   %eax
   3157a:	68 c1 01 00 00       	push   $0x1c1
   3157f:	e9 1e ff ff ff       	jmp    314a2 <__score_alu_test_sar+0x4c2>
   31584:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31588:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3158e:	50                   	push   %eax
   3158f:	68 b8 01 00 00       	push   $0x1b8
   31594:	e9 c3 fe ff ff       	jmp    3145c <__score_alu_test_sar+0x47c>
   31599:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3159d:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   315a3:	50                   	push   %eax
   315a4:	68 b8 01 00 00       	push   $0x1b8
   315a9:	e9 8b fe ff ff       	jmp    31439 <__score_alu_test_sar+0x459>
   315ae:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   315b2:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   315b8:	50                   	push   %eax
   315b9:	68 b6 01 00 00       	push   $0x1b6
   315be:	e9 df fe ff ff       	jmp    314a2 <__score_alu_test_sar+0x4c2>
   315c3:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   315c7:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   315cd:	50                   	push   %eax
   315ce:	68 b8 01 00 00       	push   $0x1b8
   315d3:	e9 a7 fe ff ff       	jmp    3147f <__score_alu_test_sar+0x49f>
   315d8:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   315dc:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   315e2:	50                   	push   %eax
   315e3:	68 b8 01 00 00       	push   $0x1b8
   315e8:	e9 b5 fe ff ff       	jmp    314a2 <__score_alu_test_sar+0x4c2>
   315ed:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   315f1:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   315f7:	50                   	push   %eax
   315f8:	68 b7 01 00 00       	push   $0x1b7
   315fd:	e9 14 fe ff ff       	jmp    31416 <__score_alu_test_sar+0x436>
   31602:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31606:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3160c:	50                   	push   %eax
   3160d:	68 b7 01 00 00       	push   $0x1b7
   31612:	e9 22 fe ff ff       	jmp    31439 <__score_alu_test_sar+0x459>
   31617:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3161b:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31621:	50                   	push   %eax
   31622:	68 b7 01 00 00       	push   $0x1b7
   31627:	e9 30 fe ff ff       	jmp    3145c <__score_alu_test_sar+0x47c>
   3162c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31630:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31636:	50                   	push   %eax
   31637:	68 b7 01 00 00       	push   $0x1b7
   3163c:	e9 3e fe ff ff       	jmp    3147f <__score_alu_test_sar+0x49f>
   31641:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31645:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3164b:	50                   	push   %eax
   3164c:	68 b7 01 00 00       	push   $0x1b7
   31651:	e9 4c fe ff ff       	jmp    314a2 <__score_alu_test_sar+0x4c2>
   31656:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3165a:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31660:	50                   	push   %eax
   31661:	68 b6 01 00 00       	push   $0x1b6
   31666:	e9 ab fd ff ff       	jmp    31416 <__score_alu_test_sar+0x436>
   3166b:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   3166f:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   31675:	50                   	push   %eax
   31676:	68 b6 01 00 00       	push   $0x1b6
   3167b:	e9 b9 fd ff ff       	jmp    31439 <__score_alu_test_sar+0x459>
   31680:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31684:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3168a:	50                   	push   %eax
   3168b:	68 b6 01 00 00       	push   $0x1b6
   31690:	e9 c7 fd ff ff       	jmp    3145c <__score_alu_test_sar+0x47c>
   31695:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31699:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   3169f:	50                   	push   %eax
   316a0:	68 b6 01 00 00       	push   $0x1b6
   316a5:	e9 d5 fd ff ff       	jmp    3147f <__score_alu_test_sar+0x49f>
   316aa:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   316ae:	8d 83 8c 73 fe ff    	lea    -0x18c74(%ebx),%eax
   316b4:	50                   	push   %eax
   316b5:	68 b8 01 00 00       	push   $0x1b8
   316ba:	e9 57 fd ff ff       	jmp    31416 <__score_alu_test_sar+0x436>
   316bf:	90                   	nop

000316c0 <__score_alu_test_imul>:
   316c0:	55                   	push   %ebp
   316c1:	57                   	push   %edi
   316c2:	56                   	push   %esi
   316c3:	53                   	push   %ebx
   316c4:	e8 b7 2d fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   316c9:	81 c3 37 d9 01 00    	add    $0x1d937,%ebx
   316cf:	83 ec 5c             	sub    $0x5c,%esp
   316d2:	8d 7c 24 50          	lea    0x50(%esp),%edi
   316d6:	c7 44 24 24 fc ff ff 	movl   $0xfffffffc,0x24(%esp)
   316dd:	ff 
   316de:	8d 44 24 28          	lea    0x28(%esp),%eax
   316e2:	c7 44 24 28 fd ff ff 	movl   $0xfffffffd,0x28(%esp)
   316e9:	ff 
   316ea:	c7 44 24 2c fe ff ff 	movl   $0xfffffffe,0x2c(%esp)
   316f1:	ff 
   316f2:	c7 44 24 30 ff ff ff 	movl   $0xffffffff,0x30(%esp)
   316f9:	ff 
   316fa:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
   31701:	00 
   31702:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%esp)
   31709:	00 
   3170a:	c7 44 24 3c 02 00 00 	movl   $0x2,0x3c(%esp)
   31711:	00 
   31712:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%esp)
   31719:	00 
   3171a:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%esp)
   31721:	00 
   31722:	c7 44 24 48 ff ff ff 	movl   $0xfffffff,0x48(%esp)
   31729:	0f 
   3172a:	c7 44 24 4c ff ff ff 	movl   $0xefffffff,0x4c(%esp)
   31731:	ef 
   31732:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   31736:	89 44 24 18          	mov    %eax,0x18(%esp)
   3173a:	89 44 24 14          	mov    %eax,0x14(%esp)
   3173e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   31743:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   31747:	90                   	nop
   31748:	0f be e8             	movsbl %al,%ebp
   3174b:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
   31750:	0f b6 c0             	movzbl %al,%eax
   31753:	8b 74 24 18          	mov    0x18(%esp),%esi
   31757:	89 44 24 10          	mov    %eax,0x10(%esp)
   3175b:	89 f8                	mov    %edi,%eax
   3175d:	89 ef                	mov    %ebp,%edi
   3175f:	89 c5                	mov    %eax,%ebp
   31761:	eb 0a                	jmp    3176d <__score_alu_test_imul+0xad>
   31763:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   31767:	90                   	nop
   31768:	8b 2e                	mov    (%esi),%ebp
   3176a:	83 c6 04             	add    $0x4,%esi
   3176d:	89 e8                	mov    %ebp,%eax
   3176f:	83 ec 04             	sub    $0x4,%esp
   31772:	0f be c0             	movsbl %al,%eax
   31775:	6a 08                	push   $0x8
   31777:	57                   	push   %edi
   31778:	50                   	push   %eax
   31779:	e8 42 e0 fd ff       	call   f7c0 <alu_imul>
   3177e:	89 c2                	mov    %eax,%edx
   31780:	89 e8                	mov    %ebp,%eax
   31782:	0f b6 c8             	movzbl %al,%ecx
   31785:	8b 44 24 20          	mov    0x20(%esp),%eax
   31789:	83 c4 10             	add    $0x10,%esp
   3178c:	f6 e9                	imul   %cl
   3178e:	9c                   	pushf  
   3178f:	59                   	pop    %ecx
   31790:	0f bf c8             	movswl %ax,%ecx
   31793:	39 d1                	cmp    %edx,%ecx
   31795:	0f 85 52 02 00 00    	jne    319ed <__score_alu_test_imul+0x32d>
   3179b:	3b 74 24 0c          	cmp    0xc(%esp),%esi
   3179f:	75 c7                	jne    31768 <__score_alu_test_imul+0xa8>
   317a1:	8b 7c 24 14          	mov    0x14(%esp),%edi
   317a5:	8b 44 24 0c          	mov    0xc(%esp),%eax
   317a9:	39 c7                	cmp    %eax,%edi
   317ab:	74 0b                	je     317b8 <__score_alu_test_imul+0xf8>
   317ad:	8b 07                	mov    (%edi),%eax
   317af:	83 c7 04             	add    $0x4,%edi
   317b2:	89 7c 24 14          	mov    %edi,0x14(%esp)
   317b6:	eb 90                	jmp    31748 <__score_alu_test_imul+0x88>
   317b8:	83 ec 0c             	sub    $0xc,%esp
   317bb:	bf 40 42 0f 00       	mov    $0xf4240,%edi
   317c0:	6a 00                	push   $0x0
   317c2:	e8 69 29 fd ff       	call   4130 <time@plt>
   317c7:	89 04 24             	mov    %eax,(%esp)
   317ca:	e8 c1 29 fd ff       	call   4190 <srand@plt>
   317cf:	83 c4 10             	add    $0x10,%esp
   317d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   317d8:	e8 13 2a fd ff       	call   41f0 <rand@plt>
   317dd:	89 c6                	mov    %eax,%esi
   317df:	e8 0c 2a fd ff       	call   41f0 <rand@plt>
   317e4:	83 ec 04             	sub    $0x4,%esp
   317e7:	89 c5                	mov    %eax,%ebp
   317e9:	89 f0                	mov    %esi,%eax
   317eb:	6a 08                	push   $0x8
   317ed:	0f be c0             	movsbl %al,%eax
   317f0:	50                   	push   %eax
   317f1:	89 e8                	mov    %ebp,%eax
   317f3:	0f be c0             	movsbl %al,%eax
   317f6:	50                   	push   %eax
   317f7:	e8 c4 df fd ff       	call   f7c0 <alu_imul>
   317fc:	89 e9                	mov    %ebp,%ecx
   317fe:	83 c4 10             	add    $0x10,%esp
   31801:	89 c2                	mov    %eax,%edx
   31803:	89 f0                	mov    %esi,%eax
   31805:	0f b6 c9             	movzbl %cl,%ecx
   31808:	0f b6 c0             	movzbl %al,%eax
   3180b:	f6 e9                	imul   %cl
   3180d:	9c                   	pushf  
   3180e:	59                   	pop    %ecx
   3180f:	98                   	cwtl   
   31810:	39 d0                	cmp    %edx,%eax
   31812:	0f 85 40 02 00 00    	jne    31a58 <__score_alu_test_imul+0x398>
   31818:	83 ef 01             	sub    $0x1,%edi
   3181b:	75 bb                	jne    317d8 <__score_alu_test_imul+0x118>
   3181d:	8b 44 24 18          	mov    0x18(%esp),%eax
   31821:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
   31826:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   3182a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   31830:	0f bf c7             	movswl %di,%eax
   31833:	8b 74 24 18          	mov    0x18(%esp),%esi
   31837:	bd fc ff ff ff       	mov    $0xfffffffc,%ebp
   3183c:	89 44 24 14          	mov    %eax,0x14(%esp)
   31840:	0f b7 c7             	movzwl %di,%eax
   31843:	89 44 24 10          	mov    %eax,0x10(%esp)
   31847:	eb 0c                	jmp    31855 <__score_alu_test_imul+0x195>
   31849:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31850:	8b 2e                	mov    (%esi),%ebp
   31852:	83 c6 04             	add    $0x4,%esi
   31855:	83 ec 04             	sub    $0x4,%esp
   31858:	0f bf c5             	movswl %bp,%eax
   3185b:	6a 10                	push   $0x10
   3185d:	ff 74 24 1c          	pushl  0x1c(%esp)
   31861:	50                   	push   %eax
   31862:	e8 59 df fd ff       	call   f7c0 <alu_imul>
   31867:	0f b7 cd             	movzwl %bp,%ecx
   3186a:	89 c7                	mov    %eax,%edi
   3186c:	8b 44 24 20          	mov    0x20(%esp),%eax
   31870:	83 c4 10             	add    $0x10,%esp
   31873:	66 f7 e9             	imul   %cx
   31876:	9c                   	pushf  
   31877:	59                   	pop    %ecx
   31878:	0f b7 c0             	movzwl %ax,%eax
   3187b:	c1 e2 10             	shl    $0x10,%edx
   3187e:	09 d0                	or     %edx,%eax
   31880:	39 f8                	cmp    %edi,%eax
   31882:	0f 85 c2 01 00 00    	jne    31a4a <__score_alu_test_imul+0x38a>
   31888:	3b 74 24 0c          	cmp    0xc(%esp),%esi
   3188c:	75 c2                	jne    31850 <__score_alu_test_imul+0x190>
   3188e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   31892:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   31896:	39 f8                	cmp    %edi,%eax
   31898:	74 0b                	je     318a5 <__score_alu_test_imul+0x1e5>
   3189a:	8b 38                	mov    (%eax),%edi
   3189c:	83 c0 04             	add    $0x4,%eax
   3189f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   318a3:	eb 8b                	jmp    31830 <__score_alu_test_imul+0x170>
   318a5:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   318ac:	00 
   318ad:	8d 76 00             	lea    0x0(%esi),%esi
   318b0:	e8 3b 29 fd ff       	call   41f0 <rand@plt>
   318b5:	89 c6                	mov    %eax,%esi
   318b7:	e8 34 29 fd ff       	call   41f0 <rand@plt>
   318bc:	83 ec 04             	sub    $0x4,%esp
   318bf:	89 c7                	mov    %eax,%edi
   318c1:	0f bf c6             	movswl %si,%eax
   318c4:	6a 10                	push   $0x10
   318c6:	50                   	push   %eax
   318c7:	0f bf c7             	movswl %di,%eax
   318ca:	50                   	push   %eax
   318cb:	e8 f0 de fd ff       	call   f7c0 <alu_imul>
   318d0:	0f b7 cf             	movzwl %di,%ecx
   318d3:	83 c4 10             	add    $0x10,%esp
   318d6:	89 c5                	mov    %eax,%ebp
   318d8:	0f b7 c6             	movzwl %si,%eax
   318db:	66 f7 e9             	imul   %cx
   318de:	9c                   	pushf  
   318df:	59                   	pop    %ecx
   318e0:	0f b7 f0             	movzwl %ax,%esi
   318e3:	89 d0                	mov    %edx,%eax
   318e5:	c1 e0 10             	shl    $0x10,%eax
   318e8:	09 f0                	or     %esi,%eax
   318ea:	39 e8                	cmp    %ebp,%eax
   318ec:	0f 85 39 01 00 00    	jne    31a2b <__score_alu_test_imul+0x36b>
   318f2:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   318f7:	75 b7                	jne    318b0 <__score_alu_test_imul+0x1f0>
   318f9:	8b 44 24 18          	mov    0x18(%esp),%eax
   318fd:	c7 44 24 10 fc ff ff 	movl   $0xfffffffc,0x10(%esp)
   31904:	ff 
   31905:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   31909:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31910:	8b 6c 24 18          	mov    0x18(%esp),%ebp
   31914:	b9 fc ff ff ff       	mov    $0xfffffffc,%ecx
   31919:	eb 0b                	jmp    31926 <__score_alu_test_imul+0x266>
   3191b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   3191f:	90                   	nop
   31920:	8b 4d 00             	mov    0x0(%ebp),%ecx
   31923:	83 c5 04             	add    $0x4,%ebp
   31926:	83 ec 04             	sub    $0x4,%esp
   31929:	6a 20                	push   $0x20
   3192b:	ff 74 24 18          	pushl  0x18(%esp)
   3192f:	51                   	push   %ecx
   31930:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   31934:	e8 87 de fd ff       	call   f7c0 <alu_imul>
   31939:	8b 4c 24 24          	mov    0x24(%esp),%ecx
   3193d:	89 c6                	mov    %eax,%esi
   3193f:	89 d7                	mov    %edx,%edi
   31941:	8b 44 24 20          	mov    0x20(%esp),%eax
   31945:	83 c4 10             	add    $0x10,%esp
   31948:	f7 e9                	imul   %ecx
   3194a:	9c                   	pushf  
   3194b:	59                   	pop    %ecx
   3194c:	31 f0                	xor    %esi,%eax
   3194e:	31 fa                	xor    %edi,%edx
   31950:	09 c2                	or     %eax,%edx
   31952:	0f 85 b4 00 00 00    	jne    31a0c <__score_alu_test_imul+0x34c>
   31958:	3b 6c 24 0c          	cmp    0xc(%esp),%ebp
   3195c:	75 c2                	jne    31920 <__score_alu_test_imul+0x260>
   3195e:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   31962:	8b 7c 24 0c          	mov    0xc(%esp),%edi
   31966:	39 f8                	cmp    %edi,%eax
   31968:	74 0f                	je     31979 <__score_alu_test_imul+0x2b9>
   3196a:	8b 38                	mov    (%eax),%edi
   3196c:	83 c0 04             	add    $0x4,%eax
   3196f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   31973:	89 7c 24 10          	mov    %edi,0x10(%esp)
   31977:	eb 97                	jmp    31910 <__score_alu_test_imul+0x250>
   31979:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   31980:	00 
   31981:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31988:	e8 63 28 fd ff       	call   41f0 <rand@plt>
   3198d:	89 c5                	mov    %eax,%ebp
   3198f:	e8 5c 28 fd ff       	call   41f0 <rand@plt>
   31994:	83 ec 04             	sub    $0x4,%esp
   31997:	6a 20                	push   $0x20
   31999:	55                   	push   %ebp
   3199a:	50                   	push   %eax
   3199b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   3199f:	e8 1c de fd ff       	call   f7c0 <alu_imul>
   319a4:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   319a8:	83 c4 10             	add    $0x10,%esp
   319ab:	89 c7                	mov    %eax,%edi
   319ad:	89 d6                	mov    %edx,%esi
   319af:	89 e8                	mov    %ebp,%eax
   319b1:	f7 e9                	imul   %ecx
   319b3:	9c                   	pushf  
   319b4:	59                   	pop    %ecx
   319b5:	31 c7                	xor    %eax,%edi
   319b7:	31 f2                	xor    %esi,%edx
   319b9:	09 fa                	or     %edi,%edx
   319bb:	0f 85 a5 00 00 00    	jne    31a66 <__score_alu_test_imul+0x3a6>
   319c1:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   319c6:	75 c0                	jne    31988 <__score_alu_test_imul+0x2c8>
   319c8:	83 ec 0c             	sub    $0xc,%esp
   319cb:	8d 83 8c 72 fe ff    	lea    -0x18d74(%ebx),%eax
   319d1:	50                   	push   %eax
   319d2:	e8 d9 28 fd ff       	call   42b0 <puts@plt>
   319d7:	8d 83 7b 70 fe ff    	lea    -0x18f85(%ebx),%eax
   319dd:	89 04 24             	mov    %eax,(%esp)
   319e0:	e8 3b 8e ff ff       	call   2a820 <score_reg_alu_fpu>
   319e5:	83 c4 6c             	add    $0x6c,%esp
   319e8:	5b                   	pop    %ebx
   319e9:	5e                   	pop    %esi
   319ea:	5f                   	pop    %edi
   319eb:	5d                   	pop    %ebp
   319ec:	c3                   	ret    
   319ed:	8d 83 74 73 fe ff    	lea    -0x18c8c(%ebx),%eax
   319f3:	50                   	push   %eax
   319f4:	68 dd 01 00 00       	push   $0x1dd
   319f9:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   319ff:	50                   	push   %eax
   31a00:	8d 83 20 5e fe ff    	lea    -0x1a1e0(%ebx),%eax
   31a06:	50                   	push   %eax
   31a07:	e8 04 29 fd ff       	call   4310 <__assert_fail@plt>
   31a0c:	8d 83 74 73 fe ff    	lea    -0x18c8c(%ebx),%eax
   31a12:	50                   	push   %eax
   31a13:	68 1c 02 00 00       	push   $0x21c
   31a18:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31a1e:	50                   	push   %eax
   31a1f:	8d 83 a8 5e fe ff    	lea    -0x1a158(%ebx),%eax
   31a25:	50                   	push   %eax
   31a26:	e8 e5 28 fd ff       	call   4310 <__assert_fail@plt>
   31a2b:	8d 83 74 73 fe ff    	lea    -0x18c8c(%ebx),%eax
   31a31:	50                   	push   %eax
   31a32:	68 0b 02 00 00       	push   $0x20b
   31a37:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31a3d:	50                   	push   %eax
   31a3e:	8d 83 54 5e fe ff    	lea    -0x1a1ac(%ebx),%eax
   31a44:	50                   	push   %eax
   31a45:	e8 c6 28 fd ff       	call   4310 <__assert_fail@plt>
   31a4a:	8d 83 74 73 fe ff    	lea    -0x18c8c(%ebx),%eax
   31a50:	50                   	push   %eax
   31a51:	68 fc 01 00 00       	push   $0x1fc
   31a56:	eb df                	jmp    31a37 <__score_alu_test_imul+0x377>
   31a58:	8d 83 74 73 fe ff    	lea    -0x18c8c(%ebx),%eax
   31a5e:	50                   	push   %eax
   31a5f:	68 ed 01 00 00       	push   $0x1ed
   31a64:	eb 93                	jmp    319f9 <__score_alu_test_imul+0x339>
   31a66:	8d 83 74 73 fe ff    	lea    -0x18c8c(%ebx),%eax
   31a6c:	50                   	push   %eax
   31a6d:	68 2c 02 00 00       	push   $0x22c
   31a72:	eb a4                	jmp    31a18 <__score_alu_test_imul+0x358>
   31a74:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31a7b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   31a7f:	90                   	nop

00031a80 <__score_alu_test_mul>:
   31a80:	e8 52 48 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   31a85:	05 7b d5 01 00       	add    $0x1d57b,%eax
   31a8a:	55                   	push   %ebp
   31a8b:	57                   	push   %edi
   31a8c:	56                   	push   %esi
   31a8d:	53                   	push   %ebx
   31a8e:	83 ec 5c             	sub    $0x5c,%esp
   31a91:	8d a8 60 32 05 00    	lea    0x53260(%eax),%ebp
   31a97:	8d 5c 24 2c          	lea    0x2c(%esp),%ebx
   31a9b:	8d 7c 24 50          	lea    0x50(%esp),%edi
   31a9f:	89 44 24 08          	mov    %eax,0x8(%esp)
   31aa3:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%esp)
   31aaa:	ff 
   31aab:	c7 44 24 2c fd ff ff 	movl   $0xfffffffd,0x2c(%esp)
   31ab2:	ff 
   31ab3:	c7 44 24 30 fe ff ff 	movl   $0xfffffffe,0x30(%esp)
   31aba:	ff 
   31abb:	c7 44 24 34 ff ff ff 	movl   $0xffffffff,0x34(%esp)
   31ac2:	ff 
   31ac3:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
   31aca:	00 
   31acb:	c7 44 24 3c 01 00 00 	movl   $0x1,0x3c(%esp)
   31ad2:	00 
   31ad3:	c7 44 24 40 02 00 00 	movl   $0x2,0x40(%esp)
   31ada:	00 
   31adb:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%esp)
   31ae2:	00 
   31ae3:	c7 44 24 48 05 00 00 	movl   $0x5,0x48(%esp)
   31aea:	00 
   31aeb:	c7 44 24 4c ff ff ff 	movl   $0xefffffff,0x4c(%esp)
   31af2:	ef 
   31af3:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   31af7:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   31afb:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
   31aff:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
   31b06:	ff 
   31b07:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31b0e:	66 90                	xchg   %ax,%ax
   31b10:	8b 7c 24 18          	mov    0x18(%esp),%edi
   31b14:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   31b19:	eb 0a                	jmp    31b25 <__score_alu_test_mul+0xa5>
   31b1b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   31b1f:	90                   	nop
   31b20:	8b 0f                	mov    (%edi),%ecx
   31b22:	83 c7 04             	add    $0x4,%edi
   31b25:	83 ec 04             	sub    $0x4,%esp
   31b28:	6a 20                	push   $0x20
   31b2a:	ff 74 24 18          	pushl  0x18(%esp)
   31b2e:	51                   	push   %ecx
   31b2f:	8b 5c 24 18          	mov    0x18(%esp),%ebx
   31b33:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   31b37:	e8 14 dc fd ff       	call   f750 <alu_mul>
   31b3c:	8b 4c 24 24          	mov    0x24(%esp),%ecx
   31b40:	89 c6                	mov    %eax,%esi
   31b42:	89 d3                	mov    %edx,%ebx
   31b44:	8b 44 24 20          	mov    0x20(%esp),%eax
   31b48:	83 c4 10             	add    $0x10,%esp
   31b4b:	f7 e1                	mul    %ecx
   31b4d:	9c                   	pushf  
   31b4e:	59                   	pop    %ecx
   31b4f:	31 f0                	xor    %esi,%eax
   31b51:	31 da                	xor    %ebx,%edx
   31b53:	09 c2                	or     %eax,%edx
   31b55:	0f 85 9f 03 00 00    	jne    31efa <__score_alu_test_mul+0x47a>
   31b5b:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   31b5f:	89 ca                	mov    %ecx,%edx
   31b61:	83 e2 01             	and    $0x1,%edx
   31b64:	83 e0 01             	and    $0x1,%eax
   31b67:	38 d0                	cmp    %dl,%al
   31b69:	0f 85 d1 03 00 00    	jne    31f40 <__score_alu_test_mul+0x4c0>
   31b6f:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   31b73:	c1 e9 0b             	shr    $0xb,%ecx
   31b76:	83 e1 01             	and    $0x1,%ecx
   31b79:	c0 e8 03             	shr    $0x3,%al
   31b7c:	83 e0 01             	and    $0x1,%eax
   31b7f:	38 c8                	cmp    %cl,%al
   31b81:	0f 85 96 03 00 00    	jne    31f1d <__score_alu_test_mul+0x49d>
   31b87:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
   31b8b:	75 93                	jne    31b20 <__score_alu_test_mul+0xa0>
   31b8d:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   31b91:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
   31b95:	39 d8                	cmp    %ebx,%eax
   31b97:	74 12                	je     31bab <__score_alu_test_mul+0x12b>
   31b99:	8b 18                	mov    (%eax),%ebx
   31b9b:	83 c0 04             	add    $0x4,%eax
   31b9e:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   31ba2:	89 5c 24 10          	mov    %ebx,0x10(%esp)
   31ba6:	e9 65 ff ff ff       	jmp    31b10 <__score_alu_test_mul+0x90>
   31bab:	83 ec 0c             	sub    $0xc,%esp
   31bae:	6a 00                	push   $0x0
   31bb0:	8b 7c 24 18          	mov    0x18(%esp),%edi
   31bb4:	89 fb                	mov    %edi,%ebx
   31bb6:	e8 75 25 fd ff       	call   4130 <time@plt>
   31bbb:	89 04 24             	mov    %eax,(%esp)
   31bbe:	e8 cd 25 fd ff       	call   4190 <srand@plt>
   31bc3:	83 c4 10             	add    $0x10,%esp
   31bc6:	c7 44 24 14 40 42 0f 	movl   $0xf4240,0x14(%esp)
   31bcd:	00 
   31bce:	66 90                	xchg   %ax,%ax
   31bd0:	8b 7c 24 08          	mov    0x8(%esp),%edi
   31bd4:	89 fb                	mov    %edi,%ebx
   31bd6:	e8 15 26 fd ff       	call   41f0 <rand@plt>
   31bdb:	89 c6                	mov    %eax,%esi
   31bdd:	e8 0e 26 fd ff       	call   41f0 <rand@plt>
   31be2:	83 ec 04             	sub    $0x4,%esp
   31be5:	6a 20                	push   $0x20
   31be7:	56                   	push   %esi
   31be8:	50                   	push   %eax
   31be9:	89 44 24 20          	mov    %eax,0x20(%esp)
   31bed:	e8 5e db fd ff       	call   f750 <alu_mul>
   31bf2:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   31bf6:	83 c4 10             	add    $0x10,%esp
   31bf9:	89 c7                	mov    %eax,%edi
   31bfb:	89 d3                	mov    %edx,%ebx
   31bfd:	89 f0                	mov    %esi,%eax
   31bff:	f7 e1                	mul    %ecx
   31c01:	9c                   	pushf  
   31c02:	59                   	pop    %ecx
   31c03:	89 d6                	mov    %edx,%esi
   31c05:	31 c7                	xor    %eax,%edi
   31c07:	31 de                	xor    %ebx,%esi
   31c09:	09 fe                	or     %edi,%esi
   31c0b:	0f 85 64 03 00 00    	jne    31f75 <__score_alu_test_mul+0x4f5>
   31c11:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   31c15:	89 ca                	mov    %ecx,%edx
   31c17:	83 e2 01             	and    $0x1,%edx
   31c1a:	83 e0 01             	and    $0x1,%eax
   31c1d:	38 d0                	cmp    %dl,%al
   31c1f:	0f 85 3e 03 00 00    	jne    31f63 <__score_alu_test_mul+0x4e3>
   31c25:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   31c29:	c1 e9 0b             	shr    $0xb,%ecx
   31c2c:	83 e1 01             	and    $0x1,%ecx
   31c2f:	c0 e8 03             	shr    $0x3,%al
   31c32:	83 e0 01             	and    $0x1,%eax
   31c35:	38 c8                	cmp    %cl,%al
   31c37:	0f 85 91 03 00 00    	jne    31fce <__score_alu_test_mul+0x54e>
   31c3d:	83 6c 24 14 01       	subl   $0x1,0x14(%esp)
   31c42:	75 8c                	jne    31bd0 <__score_alu_test_mul+0x150>
   31c44:	8b 44 24 18          	mov    0x18(%esp),%eax
   31c48:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   31c4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31c51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31c58:	0f b7 c0             	movzwl %ax,%eax
   31c5b:	8b 7c 24 18          	mov    0x18(%esp),%edi
   31c5f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   31c64:	89 44 24 10          	mov    %eax,0x10(%esp)
   31c68:	eb 0b                	jmp    31c75 <__score_alu_test_mul+0x1f5>
   31c6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   31c70:	8b 0f                	mov    (%edi),%ecx
   31c72:	83 c7 04             	add    $0x4,%edi
   31c75:	83 ec 04             	sub    $0x4,%esp
   31c78:	0f b7 c9             	movzwl %cx,%ecx
   31c7b:	6a 10                	push   $0x10
   31c7d:	ff 74 24 18          	pushl  0x18(%esp)
   31c81:	51                   	push   %ecx
   31c82:	8b 5c 24 18          	mov    0x18(%esp),%ebx
   31c86:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   31c8a:	e8 c1 da fd ff       	call   f750 <alu_mul>
   31c8f:	8b 4c 24 24          	mov    0x24(%esp),%ecx
   31c93:	89 c6                	mov    %eax,%esi
   31c95:	89 d3                	mov    %edx,%ebx
   31c97:	8b 44 24 20          	mov    0x20(%esp),%eax
   31c9b:	83 c4 10             	add    $0x10,%esp
   31c9e:	66 f7 e1             	mul    %cx
   31ca1:	9c                   	pushf  
   31ca2:	59                   	pop    %ecx
   31ca3:	c1 e2 10             	shl    $0x10,%edx
   31ca6:	09 c2                	or     %eax,%edx
   31ca8:	31 d6                	xor    %edx,%esi
   31caa:	09 f3                	or     %esi,%ebx
   31cac:	0f 85 f9 02 00 00    	jne    31fab <__score_alu_test_mul+0x52b>
   31cb2:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   31cb6:	89 ca                	mov    %ecx,%edx
   31cb8:	83 e2 01             	and    $0x1,%edx
   31cbb:	83 e0 01             	and    $0x1,%eax
   31cbe:	38 d0                	cmp    %dl,%al
   31cc0:	0f 85 d3 02 00 00    	jne    31f99 <__score_alu_test_mul+0x519>
   31cc6:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   31cca:	c1 e9 0b             	shr    $0xb,%ecx
   31ccd:	83 e1 01             	and    $0x1,%ecx
   31cd0:	c0 e8 03             	shr    $0x3,%al
   31cd3:	83 e0 01             	and    $0x1,%eax
   31cd6:	38 c8                	cmp    %cl,%al
   31cd8:	0f 85 a9 02 00 00    	jne    31f87 <__score_alu_test_mul+0x507>
   31cde:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
   31ce2:	75 8c                	jne    31c70 <__score_alu_test_mul+0x1f0>
   31ce4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   31ce8:	8b 44 24 0c          	mov    0xc(%esp),%eax
   31cec:	39 c3                	cmp    %eax,%ebx
   31cee:	74 0e                	je     31cfe <__score_alu_test_mul+0x27e>
   31cf0:	8b 03                	mov    (%ebx),%eax
   31cf2:	83 c3 04             	add    $0x4,%ebx
   31cf5:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
   31cf9:	e9 5a ff ff ff       	jmp    31c58 <__score_alu_test_mul+0x1d8>
   31cfe:	c7 44 24 14 40 42 0f 	movl   $0xf4240,0x14(%esp)
   31d05:	00 
   31d06:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   31d0d:	8d 76 00             	lea    0x0(%esi),%esi
   31d10:	8b 7c 24 08          	mov    0x8(%esp),%edi
   31d14:	89 fb                	mov    %edi,%ebx
   31d16:	e8 d5 24 fd ff       	call   41f0 <rand@plt>
   31d1b:	89 c6                	mov    %eax,%esi
   31d1d:	e8 ce 24 fd ff       	call   41f0 <rand@plt>
   31d22:	0f b7 f6             	movzwl %si,%esi
   31d25:	83 ec 04             	sub    $0x4,%esp
   31d28:	0f b7 c8             	movzwl %ax,%ecx
   31d2b:	6a 10                	push   $0x10
   31d2d:	56                   	push   %esi
   31d2e:	51                   	push   %ecx
   31d2f:	89 4c 24 20          	mov    %ecx,0x20(%esp)
   31d33:	e8 18 da fd ff       	call   f750 <alu_mul>
   31d38:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   31d3c:	83 c4 10             	add    $0x10,%esp
   31d3f:	89 c3                	mov    %eax,%ebx
   31d41:	89 d7                	mov    %edx,%edi
   31d43:	89 f0                	mov    %esi,%eax
   31d45:	66 f7 e1             	mul    %cx
   31d48:	9c                   	pushf  
   31d49:	59                   	pop    %ecx
   31d4a:	89 d6                	mov    %edx,%esi
   31d4c:	c1 e6 10             	shl    $0x10,%esi
   31d4f:	09 c6                	or     %eax,%esi
   31d51:	31 f3                	xor    %esi,%ebx
   31d53:	09 df                	or     %ebx,%edi
   31d55:	0f 85 b2 02 00 00    	jne    3200d <__score_alu_test_mul+0x58d>
   31d5b:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   31d5f:	89 ca                	mov    %ecx,%edx
   31d61:	83 e2 01             	and    $0x1,%edx
   31d64:	83 e0 01             	and    $0x1,%eax
   31d67:	38 d0                	cmp    %dl,%al
   31d69:	0f 85 89 02 00 00    	jne    31ff8 <__score_alu_test_mul+0x578>
   31d6f:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   31d73:	c1 e9 0b             	shr    $0xb,%ecx
   31d76:	83 e1 01             	and    $0x1,%ecx
   31d79:	c0 e8 03             	shr    $0x3,%al
   31d7c:	83 e0 01             	and    $0x1,%eax
   31d7f:	38 c8                	cmp    %cl,%al
   31d81:	0f 85 5c 02 00 00    	jne    31fe3 <__score_alu_test_mul+0x563>
   31d87:	83 6c 24 14 01       	subl   $0x1,0x14(%esp)
   31d8c:	75 82                	jne    31d10 <__score_alu_test_mul+0x290>
   31d8e:	8b 44 24 18          	mov    0x18(%esp),%eax
   31d92:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   31d96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   31d9b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   31d9f:	90                   	nop
   31da0:	0f b6 c0             	movzbl %al,%eax
   31da3:	8b 7c 24 18          	mov    0x18(%esp),%edi
   31da7:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   31dac:	89 44 24 10          	mov    %eax,0x10(%esp)
   31db0:	eb 0b                	jmp    31dbd <__score_alu_test_mul+0x33d>
   31db2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   31db8:	8b 0f                	mov    (%edi),%ecx
   31dba:	83 c7 04             	add    $0x4,%edi
   31dbd:	83 ec 04             	sub    $0x4,%esp
   31dc0:	0f b6 c9             	movzbl %cl,%ecx
   31dc3:	6a 08                	push   $0x8
   31dc5:	ff 74 24 18          	pushl  0x18(%esp)
   31dc9:	51                   	push   %ecx
   31dca:	8b 5c 24 18          	mov    0x18(%esp),%ebx
   31dce:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   31dd2:	e8 79 d9 fd ff       	call   f750 <alu_mul>
   31dd7:	8b 4c 24 24          	mov    0x24(%esp),%ecx
   31ddb:	89 c6                	mov    %eax,%esi
   31ddd:	89 d3                	mov    %edx,%ebx
   31ddf:	8b 44 24 20          	mov    0x20(%esp),%eax
   31de3:	83 c4 10             	add    $0x10,%esp
   31de6:	f6 e1                	mul    %cl
   31de8:	9c                   	pushf  
   31de9:	59                   	pop    %ecx
   31dea:	c1 e2 08             	shl    $0x8,%edx
   31ded:	09 c2                	or     %eax,%edx
   31def:	31 d6                	xor    %edx,%esi
   31df1:	09 f3                	or     %esi,%ebx
   31df3:	0f 85 26 02 00 00    	jne    3201f <__score_alu_test_mul+0x59f>
   31df9:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   31dfd:	89 ca                	mov    %ecx,%edx
   31dff:	83 e2 01             	and    $0x1,%edx
   31e02:	83 e0 01             	and    $0x1,%eax
   31e05:	38 d0                	cmp    %dl,%al
   31e07:	0f 85 35 02 00 00    	jne    32042 <__score_alu_test_mul+0x5c2>
   31e0d:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   31e11:	c1 e9 0b             	shr    $0xb,%ecx
   31e14:	83 e1 01             	and    $0x1,%ecx
   31e17:	c0 e8 03             	shr    $0x3,%al
   31e1a:	83 e0 01             	and    $0x1,%eax
   31e1d:	38 c8                	cmp    %cl,%al
   31e1f:	0f 85 59 02 00 00    	jne    3207e <__score_alu_test_mul+0x5fe>
   31e25:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
   31e29:	75 8d                	jne    31db8 <__score_alu_test_mul+0x338>
   31e2b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   31e2f:	8b 44 24 0c          	mov    0xc(%esp),%eax
   31e33:	39 c3                	cmp    %eax,%ebx
   31e35:	74 0e                	je     31e45 <__score_alu_test_mul+0x3c5>
   31e37:	8b 03                	mov    (%ebx),%eax
   31e39:	83 c3 04             	add    $0x4,%ebx
   31e3c:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
   31e40:	e9 5b ff ff ff       	jmp    31da0 <__score_alu_test_mul+0x320>
   31e45:	c7 44 24 10 40 42 0f 	movl   $0xf4240,0x10(%esp)
   31e4c:	00 
   31e4d:	8d 76 00             	lea    0x0(%esi),%esi
   31e50:	8b 7c 24 08          	mov    0x8(%esp),%edi
   31e54:	89 fb                	mov    %edi,%ebx
   31e56:	e8 95 23 fd ff       	call   41f0 <rand@plt>
   31e5b:	89 c6                	mov    %eax,%esi
   31e5d:	e8 8e 23 fd ff       	call   41f0 <rand@plt>
   31e62:	89 f2                	mov    %esi,%edx
   31e64:	83 ec 04             	sub    $0x4,%esp
   31e67:	0f b6 f2             	movzbl %dl,%esi
   31e6a:	0f b6 c8             	movzbl %al,%ecx
   31e6d:	6a 08                	push   $0x8
   31e6f:	56                   	push   %esi
   31e70:	51                   	push   %ecx
   31e71:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   31e75:	e8 d6 d8 fd ff       	call   f750 <alu_mul>
   31e7a:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   31e7e:	83 c4 10             	add    $0x10,%esp
   31e81:	89 c7                	mov    %eax,%edi
   31e83:	89 d3                	mov    %edx,%ebx
   31e85:	89 f0                	mov    %esi,%eax
   31e87:	f6 e1                	mul    %cl
   31e89:	9c                   	pushf  
   31e8a:	59                   	pop    %ecx
   31e8b:	89 d6                	mov    %edx,%esi
   31e8d:	c1 e6 08             	shl    $0x8,%esi
   31e90:	09 c6                	or     %eax,%esi
   31e92:	31 f7                	xor    %esi,%edi
   31e94:	09 fb                	or     %edi,%ebx
   31e96:	0f 85 d0 01 00 00    	jne    3206c <__score_alu_test_mul+0x5ec>
   31e9c:	0f b6 45 24          	movzbl 0x24(%ebp),%eax
   31ea0:	89 ca                	mov    %ecx,%edx
   31ea2:	83 e2 01             	and    $0x1,%edx
   31ea5:	83 e0 01             	and    $0x1,%eax
   31ea8:	38 d0                	cmp    %dl,%al
   31eaa:	0f 85 a7 01 00 00    	jne    32057 <__score_alu_test_mul+0x5d7>
   31eb0:	0f b6 45 25          	movzbl 0x25(%ebp),%eax
   31eb4:	c1 e9 0b             	shr    $0xb,%ecx
   31eb7:	83 e1 01             	and    $0x1,%ecx
   31eba:	c0 e8 03             	shr    $0x3,%al
   31ebd:	83 e0 01             	and    $0x1,%eax
   31ec0:	38 c8                	cmp    %cl,%al
   31ec2:	0f 85 cb 01 00 00    	jne    32093 <__score_alu_test_mul+0x613>
   31ec8:	83 6c 24 10 01       	subl   $0x1,0x10(%esp)
   31ecd:	75 81                	jne    31e50 <__score_alu_test_mul+0x3d0>
   31ecf:	83 ec 0c             	sub    $0xc,%esp
   31ed2:	8b 7c 24 14          	mov    0x14(%esp),%edi
   31ed6:	8d 87 b4 72 fe ff    	lea    -0x18d4c(%edi),%eax
   31edc:	89 fb                	mov    %edi,%ebx
   31ede:	50                   	push   %eax
   31edf:	e8 cc 23 fd ff       	call   42b0 <puts@plt>
   31ee4:	8d 87 91 70 fe ff    	lea    -0x18f6f(%edi),%eax
   31eea:	89 04 24             	mov    %eax,(%esp)
   31eed:	e8 2e 89 ff ff       	call   2a820 <score_reg_alu_fpu>
   31ef2:	83 c4 6c             	add    $0x6c,%esp
   31ef5:	5b                   	pop    %ebx
   31ef6:	5e                   	pop    %esi
   31ef7:	5f                   	pop    %edi
   31ef8:	5d                   	pop    %ebp
   31ef9:	c3                   	ret    
   31efa:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31efe:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31f04:	50                   	push   %eax
   31f05:	68 48 02 00 00       	push   $0x248
   31f0a:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31f10:	50                   	push   %eax
   31f11:	8d 83 fc 5e fe ff    	lea    -0x1a104(%ebx),%eax
   31f17:	50                   	push   %eax
   31f18:	e8 f3 23 fd ff       	call   4310 <__assert_fail@plt>
   31f1d:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31f21:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31f27:	50                   	push   %eax
   31f28:	68 4a 02 00 00       	push   $0x24a
   31f2d:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31f33:	50                   	push   %eax
   31f34:	8d 83 b0 5d fe ff    	lea    -0x1a250(%ebx),%eax
   31f3a:	50                   	push   %eax
   31f3b:	e8 d0 23 fd ff       	call   4310 <__assert_fail@plt>
   31f40:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31f44:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31f4a:	50                   	push   %eax
   31f4b:	68 49 02 00 00       	push   $0x249
   31f50:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31f56:	50                   	push   %eax
   31f57:	8d 83 30 5d fe ff    	lea    -0x1a2d0(%ebx),%eax
   31f5d:	50                   	push   %eax
   31f5e:	e8 ad 23 fd ff       	call   4310 <__assert_fail@plt>
   31f63:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31f67:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31f6d:	50                   	push   %eax
   31f6e:	68 5e 02 00 00       	push   $0x25e
   31f73:	eb db                	jmp    31f50 <__score_alu_test_mul+0x4d0>
   31f75:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31f79:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31f7f:	50                   	push   %eax
   31f80:	68 5d 02 00 00       	push   $0x25d
   31f85:	eb 83                	jmp    31f0a <__score_alu_test_mul+0x48a>
   31f87:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31f8b:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31f91:	50                   	push   %eax
   31f92:	68 72 02 00 00       	push   $0x272
   31f97:	eb 94                	jmp    31f2d <__score_alu_test_mul+0x4ad>
   31f99:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31f9d:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31fa3:	50                   	push   %eax
   31fa4:	68 71 02 00 00       	push   $0x271
   31fa9:	eb a5                	jmp    31f50 <__score_alu_test_mul+0x4d0>
   31fab:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31faf:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31fb5:	50                   	push   %eax
   31fb6:	68 70 02 00 00       	push   $0x270
   31fbb:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   31fc1:	50                   	push   %eax
   31fc2:	8d 83 20 5f fe ff    	lea    -0x1a0e0(%ebx),%eax
   31fc8:	50                   	push   %eax
   31fc9:	e8 42 23 fd ff       	call   4310 <__assert_fail@plt>
   31fce:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31fd2:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31fd8:	50                   	push   %eax
   31fd9:	68 5f 02 00 00       	push   $0x25f
   31fde:	e9 4a ff ff ff       	jmp    31f2d <__score_alu_test_mul+0x4ad>
   31fe3:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31fe7:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   31fed:	50                   	push   %eax
   31fee:	68 84 02 00 00       	push   $0x284
   31ff3:	e9 35 ff ff ff       	jmp    31f2d <__score_alu_test_mul+0x4ad>
   31ff8:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   31ffc:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   32002:	50                   	push   %eax
   32003:	68 83 02 00 00       	push   $0x283
   32008:	e9 43 ff ff ff       	jmp    31f50 <__score_alu_test_mul+0x4d0>
   3200d:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   32011:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   32017:	50                   	push   %eax
   32018:	68 82 02 00 00       	push   $0x282
   3201d:	eb 9c                	jmp    31fbb <__score_alu_test_mul+0x53b>
   3201f:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   32023:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   32029:	50                   	push   %eax
   3202a:	68 94 02 00 00       	push   $0x294
   3202f:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   32035:	50                   	push   %eax
   32036:	8d 83 48 5f fe ff    	lea    -0x1a0b8(%ebx),%eax
   3203c:	50                   	push   %eax
   3203d:	e8 ce 22 fd ff       	call   4310 <__assert_fail@plt>
   32042:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   32046:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   3204c:	50                   	push   %eax
   3204d:	68 95 02 00 00       	push   $0x295
   32052:	e9 f9 fe ff ff       	jmp    31f50 <__score_alu_test_mul+0x4d0>
   32057:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   3205b:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   32061:	50                   	push   %eax
   32062:	68 a7 02 00 00       	push   $0x2a7
   32067:	e9 e4 fe ff ff       	jmp    31f50 <__score_alu_test_mul+0x4d0>
   3206c:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   32070:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   32076:	50                   	push   %eax
   32077:	68 a6 02 00 00       	push   $0x2a6
   3207c:	eb b1                	jmp    3202f <__score_alu_test_mul+0x5af>
   3207e:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   32082:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   32088:	50                   	push   %eax
   32089:	68 96 02 00 00       	push   $0x296
   3208e:	e9 9a fe ff ff       	jmp    31f2d <__score_alu_test_mul+0x4ad>
   32093:	8b 5c 24 08          	mov    0x8(%esp),%ebx
   32097:	8d 83 5c 73 fe ff    	lea    -0x18ca4(%ebx),%eax
   3209d:	50                   	push   %eax
   3209e:	68 a8 02 00 00       	push   $0x2a8
   320a3:	e9 85 fe ff ff       	jmp    31f2d <__score_alu_test_mul+0x4ad>
   320a8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   320af:	90                   	nop

000320b0 <__score_alu_test_idiv>:
   320b0:	55                   	push   %ebp
   320b1:	57                   	push   %edi
   320b2:	56                   	push   %esi
   320b3:	53                   	push   %ebx
   320b4:	e8 c7 23 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   320b9:	81 c3 47 cf 01 00    	add    $0x1cf47,%ebx
   320bf:	83 ec 5c             	sub    $0x5c,%esp
   320c2:	8d 44 24 38          	lea    0x38(%esp),%eax
   320c6:	8d 7c 24 50          	lea    0x50(%esp),%edi
   320ca:	c7 44 24 34 fd ff ff 	movl   $0xfffffffd,0x34(%esp)
   320d1:	ff 
   320d2:	c7 44 24 38 fe ff ff 	movl   $0xfffffffe,0x38(%esp)
   320d9:	ff 
   320da:	c7 44 24 3c ff ff ff 	movl   $0xffffffff,0x3c(%esp)
   320e1:	ff 
   320e2:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%esp)
   320e9:	00 
   320ea:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%esp)
   320f1:	00 
   320f2:	c7 44 24 48 03 00 00 	movl   $0x3,0x48(%esp)
   320f9:	00 
   320fa:	c7 44 24 4c 04 00 00 	movl   $0x4,0x4c(%esp)
   32101:	00 
   32102:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   32106:	89 7c 24 20          	mov    %edi,0x20(%esp)
   3210a:	89 44 24 28          	mov    %eax,0x28(%esp)
   3210e:	c7 44 24 1c fd ff ff 	movl   $0xfffffffd,0x1c(%esp)
   32115:	ff 
   32116:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3211d:	8d 76 00             	lea    0x0(%esi),%esi
   32120:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   32124:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
   32128:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
   3212d:	99                   	cltd   
   3212e:	89 44 24 08          	mov    %eax,0x8(%esp)
   32132:	89 54 24 0c          	mov    %edx,0xc(%esp)
   32136:	89 54 24 24          	mov    %edx,0x24(%esp)
   3213a:	eb 0a                	jmp    32146 <__score_alu_test_idiv+0x96>
   3213c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   32140:	8b 4d 00             	mov    0x0(%ebp),%ecx
   32143:	83 c5 04             	add    $0x4,%ebp
   32146:	89 cf                	mov    %ecx,%edi
   32148:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   3214c:	83 ec 0c             	sub    $0xc,%esp
   3214f:	89 ce                	mov    %ecx,%esi
   32151:	c1 ff 1f             	sar    $0x1f,%edi
   32154:	6a 20                	push   $0x20
   32156:	ff 74 24 1c          	pushl  0x1c(%esp)
   3215a:	ff 74 24 1c          	pushl  0x1c(%esp)
   3215e:	57                   	push   %edi
   3215f:	51                   	push   %ecx
   32160:	e8 db d6 fd ff       	call   f840 <alu_idiv>
   32165:	89 44 24 34          	mov    %eax,0x34(%esp)
   32169:	83 c4 20             	add    $0x20,%esp
   3216c:	ff 74 24 0c          	pushl  0xc(%esp)
   32170:	ff 74 24 0c          	pushl  0xc(%esp)
   32174:	57                   	push   %edi
   32175:	56                   	push   %esi
   32176:	e8 95 d7 fd ff       	call   f910 <alu_imod>
   3217b:	8b 54 24 34          	mov    0x34(%esp),%edx
   3217f:	8b 4c 24 28          	mov    0x28(%esp),%ecx
   32183:	89 c6                	mov    %eax,%esi
   32185:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   32189:	83 c4 10             	add    $0x10,%esp
   3218c:	f7 f9                	idiv   %ecx
   3218e:	39 44 24 14          	cmp    %eax,0x14(%esp)
   32192:	0f 85 e5 00 00 00    	jne    3227d <__score_alu_test_idiv+0x1cd>
   32198:	39 d6                	cmp    %edx,%esi
   3219a:	0f 85 29 01 00 00    	jne    322c9 <__score_alu_test_idiv+0x219>
   321a0:	39 6c 24 20          	cmp    %ebp,0x20(%esp)
   321a4:	75 9a                	jne    32140 <__score_alu_test_idiv+0x90>
   321a6:	8b 44 24 28          	mov    0x28(%esp),%eax
   321aa:	39 44 24 20          	cmp    %eax,0x20(%esp)
   321ae:	74 18                	je     321c8 <__score_alu_test_idiv+0x118>
   321b0:	8b 38                	mov    (%eax),%edi
   321b2:	83 c0 04             	add    $0x4,%eax
   321b5:	89 44 24 28          	mov    %eax,0x28(%esp)
   321b9:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   321bd:	e9 5e ff ff ff       	jmp    32120 <__score_alu_test_idiv+0x70>
   321c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   321c8:	83 ec 0c             	sub    $0xc,%esp
   321cb:	6a 00                	push   $0x0
   321cd:	e8 5e 1f fd ff       	call   4130 <time@plt>
   321d2:	89 04 24             	mov    %eax,(%esp)
   321d5:	e8 b6 1f fd ff       	call   4190 <srand@plt>
   321da:	83 c4 10             	add    $0x10,%esp
   321dd:	c7 44 24 18 40 42 0f 	movl   $0xf4240,0x18(%esp)
   321e4:	00 
   321e5:	8d 76 00             	lea    0x0(%esi),%esi
   321e8:	e8 03 20 fd ff       	call   41f0 <rand@plt>
   321ed:	89 c5                	mov    %eax,%ebp
   321ef:	e8 fc 1f fd ff       	call   41f0 <rand@plt>
   321f4:	89 c7                	mov    %eax,%edi
   321f6:	89 c1                	mov    %eax,%ecx
   321f8:	89 c6                	mov    %eax,%esi
   321fa:	c1 ff 1f             	sar    $0x1f,%edi
   321fd:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   32201:	89 f8                	mov    %edi,%eax
   32203:	09 c8                	or     %ecx,%eax
   32205:	74 4a                	je     32251 <__score_alu_test_idiv+0x1a1>
   32207:	83 ec 0c             	sub    $0xc,%esp
   3220a:	89 e8                	mov    %ebp,%eax
   3220c:	6a 20                	push   $0x20
   3220e:	99                   	cltd   
   3220f:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   32213:	89 6c 24 18          	mov    %ebp,0x18(%esp)
   32217:	52                   	push   %edx
   32218:	55                   	push   %ebp
   32219:	57                   	push   %edi
   3221a:	51                   	push   %ecx
   3221b:	e8 20 d6 fd ff       	call   f840 <alu_idiv>
   32220:	89 44 24 3c          	mov    %eax,0x3c(%esp)
   32224:	83 c4 20             	add    $0x20,%esp
   32227:	ff 74 24 0c          	pushl  0xc(%esp)
   3222b:	ff 74 24 0c          	pushl  0xc(%esp)
   3222f:	57                   	push   %edi
   32230:	56                   	push   %esi
   32231:	e8 da d6 fd ff       	call   f910 <alu_imod>
   32236:	8b 54 24 1c          	mov    0x1c(%esp),%edx
   3223a:	8b 4c 24 24          	mov    0x24(%esp),%ecx
   3223e:	83 c4 10             	add    $0x10,%esp
   32241:	89 c6                	mov    %eax,%esi
   32243:	89 e8                	mov    %ebp,%eax
   32245:	f7 f9                	idiv   %ecx
   32247:	39 44 24 1c          	cmp    %eax,0x1c(%esp)
   3224b:	75 6e                	jne    322bb <__score_alu_test_idiv+0x20b>
   3224d:	39 d6                	cmp    %edx,%esi
   3224f:	75 4b                	jne    3229c <__score_alu_test_idiv+0x1ec>
   32251:	83 6c 24 18 01       	subl   $0x1,0x18(%esp)
   32256:	75 90                	jne    321e8 <__score_alu_test_idiv+0x138>
   32258:	83 ec 0c             	sub    $0xc,%esp
   3225b:	8d 83 dc 72 fe ff    	lea    -0x18d24(%ebx),%eax
   32261:	50                   	push   %eax
   32262:	e8 49 20 fd ff       	call   42b0 <puts@plt>
   32267:	8d 83 a6 70 fe ff    	lea    -0x18f5a(%ebx),%eax
   3226d:	89 04 24             	mov    %eax,(%esp)
   32270:	e8 ab 85 ff ff       	call   2a820 <score_reg_alu_fpu>
   32275:	83 c4 6c             	add    $0x6c,%esp
   32278:	5b                   	pop    %ebx
   32279:	5e                   	pop    %esi
   3227a:	5f                   	pop    %edi
   3227b:	5d                   	pop    %ebp
   3227c:	c3                   	ret    
   3227d:	8d 83 44 73 fe ff    	lea    -0x18cbc(%ebx),%eax
   32283:	50                   	push   %eax
   32284:	68 be 02 00 00       	push   $0x2be
   32289:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   3228f:	50                   	push   %eax
   32290:	8d 83 10 5d fe ff    	lea    -0x1a2f0(%ebx),%eax
   32296:	50                   	push   %eax
   32297:	e8 74 20 fd ff       	call   4310 <__assert_fail@plt>
   3229c:	8d 83 44 73 fe ff    	lea    -0x18cbc(%ebx),%eax
   322a2:	50                   	push   %eax
   322a3:	68 cd 02 00 00       	push   $0x2cd
   322a8:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   322ae:	50                   	push   %eax
   322af:	8d 83 1f 5d fe ff    	lea    -0x1a2e1(%ebx),%eax
   322b5:	50                   	push   %eax
   322b6:	e8 55 20 fd ff       	call   4310 <__assert_fail@plt>
   322bb:	8d 83 44 73 fe ff    	lea    -0x18cbc(%ebx),%eax
   322c1:	50                   	push   %eax
   322c2:	68 cc 02 00 00       	push   $0x2cc
   322c7:	eb c0                	jmp    32289 <__score_alu_test_idiv+0x1d9>
   322c9:	8d 83 44 73 fe ff    	lea    -0x18cbc(%ebx),%eax
   322cf:	50                   	push   %eax
   322d0:	68 bf 02 00 00       	push   $0x2bf
   322d5:	eb d1                	jmp    322a8 <__score_alu_test_idiv+0x1f8>
   322d7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   322de:	66 90                	xchg   %ax,%ax

000322e0 <__score_alu_test_div>:
   322e0:	55                   	push   %ebp
   322e1:	57                   	push   %edi
   322e2:	56                   	push   %esi
   322e3:	53                   	push   %ebx
   322e4:	e8 97 21 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   322e9:	81 c3 17 cd 01 00    	add    $0x1cd17,%ebx
   322ef:	83 ec 4c             	sub    $0x4c,%esp
   322f2:	8d 44 24 28          	lea    0x28(%esp),%eax
   322f6:	8d 7c 24 40          	lea    0x40(%esp),%edi
   322fa:	c7 44 24 24 fd ff ff 	movl   $0xfffffffd,0x24(%esp)
   32301:	ff 
   32302:	c7 44 24 28 fe ff ff 	movl   $0xfffffffe,0x28(%esp)
   32309:	ff 
   3230a:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
   32311:	ff 
   32312:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
   32319:	00 
   3231a:	c7 44 24 34 02 00 00 	movl   $0x2,0x34(%esp)
   32321:	00 
   32322:	c7 44 24 38 03 00 00 	movl   $0x3,0x38(%esp)
   32329:	00 
   3232a:	c7 44 24 3c 04 00 00 	movl   $0x4,0x3c(%esp)
   32331:	00 
   32332:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   32336:	89 7c 24 14          	mov    %edi,0x14(%esp)
   3233a:	89 44 24 18          	mov    %eax,0x18(%esp)
   3233e:	c7 44 24 10 fd ff ff 	movl   $0xfffffffd,0x10(%esp)
   32345:	ff 
   32346:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3234d:	8d 76 00             	lea    0x0(%esi),%esi
   32350:	8b 44 24 10          	mov    0x10(%esp),%eax
   32354:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
   32358:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
   3235d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   32364:	00 
   32365:	89 04 24             	mov    %eax,(%esp)
   32368:	eb 0c                	jmp    32376 <__score_alu_test_div+0x96>
   3236a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   32370:	8b 4d 00             	mov    0x0(%ebp),%ecx
   32373:	83 c5 04             	add    $0x4,%ebp
   32376:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   3237a:	31 ff                	xor    %edi,%edi
   3237c:	83 ec 0c             	sub    $0xc,%esp
   3237f:	89 ce                	mov    %ecx,%esi
   32381:	6a 20                	push   $0x20
   32383:	ff 74 24 14          	pushl  0x14(%esp)
   32387:	ff 74 24 14          	pushl  0x14(%esp)
   3238b:	57                   	push   %edi
   3238c:	51                   	push   %ecx
   3238d:	e8 3e d4 fd ff       	call   f7d0 <alu_div>
   32392:	89 44 24 28          	mov    %eax,0x28(%esp)
   32396:	83 c4 20             	add    $0x20,%esp
   32399:	ff 74 24 04          	pushl  0x4(%esp)
   3239d:	ff 74 24 04          	pushl  0x4(%esp)
   323a1:	57                   	push   %edi
   323a2:	56                   	push   %esi
   323a3:	e8 08 d5 fd ff       	call   f8b0 <alu_mod>
   323a8:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
   323ac:	31 d2                	xor    %edx,%edx
   323ae:	89 c6                	mov    %eax,%esi
   323b0:	8b 44 24 20          	mov    0x20(%esp),%eax
   323b4:	83 c4 10             	add    $0x10,%esp
   323b7:	f7 f1                	div    %ecx
   323b9:	39 44 24 08          	cmp    %eax,0x8(%esp)
   323bd:	0f 85 dd 00 00 00    	jne    324a0 <__score_alu_test_div+0x1c0>
   323c3:	39 d6                	cmp    %edx,%esi
   323c5:	0f 85 21 01 00 00    	jne    324ec <__score_alu_test_div+0x20c>
   323cb:	3b 6c 24 14          	cmp    0x14(%esp),%ebp
   323cf:	75 9f                	jne    32370 <__score_alu_test_div+0x90>
   323d1:	8b 44 24 18          	mov    0x18(%esp),%eax
   323d5:	8b 7c 24 14          	mov    0x14(%esp),%edi
   323d9:	39 f8                	cmp    %edi,%eax
   323db:	74 13                	je     323f0 <__score_alu_test_div+0x110>
   323dd:	8b 38                	mov    (%eax),%edi
   323df:	83 c0 04             	add    $0x4,%eax
   323e2:	89 44 24 18          	mov    %eax,0x18(%esp)
   323e6:	89 7c 24 10          	mov    %edi,0x10(%esp)
   323ea:	e9 61 ff ff ff       	jmp    32350 <__score_alu_test_div+0x70>
   323ef:	90                   	nop
   323f0:	83 ec 0c             	sub    $0xc,%esp
   323f3:	6a 00                	push   $0x0
   323f5:	e8 36 1d fd ff       	call   4130 <time@plt>
   323fa:	89 04 24             	mov    %eax,(%esp)
   323fd:	e8 8e 1d fd ff       	call   4190 <srand@plt>
   32402:	83 c4 10             	add    $0x10,%esp
   32405:	c7 44 24 08 40 42 0f 	movl   $0xf4240,0x8(%esp)
   3240c:	00 
   3240d:	8d 76 00             	lea    0x0(%esi),%esi
   32410:	e8 db 1d fd ff       	call   41f0 <rand@plt>
   32415:	89 c5                	mov    %eax,%ebp
   32417:	e8 d4 1d fd ff       	call   41f0 <rand@plt>
   3241c:	89 c1                	mov    %eax,%ecx
   3241e:	85 c0                	test   %eax,%eax
   32420:	74 52                	je     32474 <__score_alu_test_div+0x194>
   32422:	89 4c 24 10          	mov    %ecx,0x10(%esp)
   32426:	83 ec 0c             	sub    $0xc,%esp
   32429:	89 e8                	mov    %ebp,%eax
   3242b:	31 ff                	xor    %edi,%edi
   3242d:	6a 20                	push   $0x20
   3242f:	99                   	cltd   
   32430:	89 ce                	mov    %ecx,%esi
   32432:	89 54 24 14          	mov    %edx,0x14(%esp)
   32436:	89 6c 24 10          	mov    %ebp,0x10(%esp)
   3243a:	52                   	push   %edx
   3243b:	55                   	push   %ebp
   3243c:	57                   	push   %edi
   3243d:	51                   	push   %ecx
   3243e:	e8 8d d3 fd ff       	call   f7d0 <alu_div>
   32443:	89 44 24 2c          	mov    %eax,0x2c(%esp)
   32447:	83 c4 20             	add    $0x20,%esp
   3244a:	ff 74 24 04          	pushl  0x4(%esp)
   3244e:	ff 74 24 04          	pushl  0x4(%esp)
   32452:	57                   	push   %edi
   32453:	56                   	push   %esi
   32454:	e8 57 d4 fd ff       	call   f8b0 <alu_mod>
   32459:	8b 54 24 14          	mov    0x14(%esp),%edx
   3245d:	8b 4c 24 20          	mov    0x20(%esp),%ecx
   32461:	83 c4 10             	add    $0x10,%esp
   32464:	89 c6                	mov    %eax,%esi
   32466:	89 e8                	mov    %ebp,%eax
   32468:	f7 f1                	div    %ecx
   3246a:	39 44 24 0c          	cmp    %eax,0xc(%esp)
   3246e:	75 6e                	jne    324de <__score_alu_test_div+0x1fe>
   32470:	39 d6                	cmp    %edx,%esi
   32472:	75 4b                	jne    324bf <__score_alu_test_div+0x1df>
   32474:	83 6c 24 08 01       	subl   $0x1,0x8(%esp)
   32479:	75 95                	jne    32410 <__score_alu_test_div+0x130>
   3247b:	83 ec 0c             	sub    $0xc,%esp
   3247e:	8d 83 04 73 fe ff    	lea    -0x18cfc(%ebx),%eax
   32484:	50                   	push   %eax
   32485:	e8 26 1e fd ff       	call   42b0 <puts@plt>
   3248a:	8d 83 bc 70 fe ff    	lea    -0x18f44(%ebx),%eax
   32490:	89 04 24             	mov    %eax,(%esp)
   32493:	e8 88 83 ff ff       	call   2a820 <score_reg_alu_fpu>
   32498:	83 c4 5c             	add    $0x5c,%esp
   3249b:	5b                   	pop    %ebx
   3249c:	5e                   	pop    %esi
   3249d:	5f                   	pop    %edi
   3249e:	5d                   	pop    %ebp
   3249f:	c3                   	ret    
   324a0:	8d 83 2c 73 fe ff    	lea    -0x18cd4(%ebx),%eax
   324a6:	50                   	push   %eax
   324a7:	68 e4 02 00 00       	push   $0x2e4
   324ac:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   324b2:	50                   	push   %eax
   324b3:	8d 83 10 5d fe ff    	lea    -0x1a2f0(%ebx),%eax
   324b9:	50                   	push   %eax
   324ba:	e8 51 1e fd ff       	call   4310 <__assert_fail@plt>
   324bf:	8d 83 2c 73 fe ff    	lea    -0x18cd4(%ebx),%eax
   324c5:	50                   	push   %eax
   324c6:	68 f3 02 00 00       	push   $0x2f3
   324cb:	8d 83 81 6f fe ff    	lea    -0x1907f(%ebx),%eax
   324d1:	50                   	push   %eax
   324d2:	8d 83 1f 5d fe ff    	lea    -0x1a2e1(%ebx),%eax
   324d8:	50                   	push   %eax
   324d9:	e8 32 1e fd ff       	call   4310 <__assert_fail@plt>
   324de:	8d 83 2c 73 fe ff    	lea    -0x18cd4(%ebx),%eax
   324e4:	50                   	push   %eax
   324e5:	68 f2 02 00 00       	push   $0x2f2
   324ea:	eb c0                	jmp    324ac <__score_alu_test_div+0x1cc>
   324ec:	8d 83 2c 73 fe ff    	lea    -0x18cd4(%ebx),%eax
   324f2:	50                   	push   %eax
   324f3:	68 e5 02 00 00       	push   $0x2e5
   324f8:	eb d1                	jmp    324cb <__score_alu_test_div+0x1eb>
   324fa:	66 90                	xchg   %ax,%ax
   324fc:	66 90                	xchg   %ax,%ax
   324fe:	66 90                	xchg   %ax,%ax

00032500 <__score_fpu_test_add>:
   32500:	55                   	push   %ebp
   32501:	57                   	push   %edi
   32502:	56                   	push   %esi
   32503:	53                   	push   %ebx
   32504:	e8 77 1f fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   32509:	81 c3 f7 ca 01 00    	add    $0x1caf7,%ebx
   3250f:	81 ec cc 00 00 00    	sub    $0xcc,%esp
   32515:	8d 44 24 30          	lea    0x30(%esp),%eax
   32519:	8d bc 24 c0 00 00 00 	lea    0xc0(%esp),%edi
   32520:	d9 83 40 25 05 00    	flds   0x52540(%ebx)
   32526:	d9 54 24 18          	fsts   0x18(%esp)
   3252a:	d9 54 24 2c          	fsts   0x2c(%esp)
   3252e:	d9 83 3c 25 05 00    	flds   0x5253c(%ebx)
   32534:	d9 5c 24 30          	fstps  0x30(%esp)
   32538:	d9 83 38 25 05 00    	flds   0x52538(%ebx)
   3253e:	d9 5c 24 34          	fstps  0x34(%esp)
   32542:	d9 83 34 25 05 00    	flds   0x52534(%ebx)
   32548:	d9 5c 24 38          	fstps  0x38(%esp)
   3254c:	d9 83 28 25 05 00    	flds   0x52528(%ebx)
   32552:	d9 5c 24 3c          	fstps  0x3c(%esp)
   32556:	d9 83 24 25 05 00    	flds   0x52524(%ebx)
   3255c:	d9 5c 24 40          	fstps  0x40(%esp)
   32560:	d9 83 1c 25 05 00    	flds   0x5251c(%ebx)
   32566:	d9 5c 24 44          	fstps  0x44(%esp)
   3256a:	d9 83 18 25 05 00    	flds   0x52518(%ebx)
   32570:	d9 5c 24 48          	fstps  0x48(%esp)
   32574:	d9 83 30 25 05 00    	flds   0x52530(%ebx)
   3257a:	d9 5c 24 4c          	fstps  0x4c(%esp)
   3257e:	d9 83 2c 25 05 00    	flds   0x5252c(%ebx)
   32584:	d9 5c 24 50          	fstps  0x50(%esp)
   32588:	d9 83 20 25 05 00    	flds   0x52520(%ebx)
   3258e:	d9 5c 24 54          	fstps  0x54(%esp)
   32592:	d9 83 14 25 05 00    	flds   0x52514(%ebx)
   32598:	d9 5c 24 58          	fstps  0x58(%esp)
   3259c:	d9 83 10 25 05 00    	flds   0x52510(%ebx)
   325a2:	d9 5c 24 5c          	fstps  0x5c(%esp)
   325a6:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
   325ad:	4b 
   325ae:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
   325b5:	3f 
   325b6:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
   325bd:	3f 
   325be:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
   325c5:	3f 
   325c6:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
   325cd:	3f 
   325ce:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
   325d5:	3f 
   325d6:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
   325dd:	3f 
   325de:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
   325e5:	3f 
   325e6:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
   325ed:	00 00 00 3f 
   325f1:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
   325f8:	cd cc cc 3e 
   325fc:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
   32603:	9a 99 99 3e 
   32607:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
   3260e:	cd cc 4c 3e 
   32612:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
   32619:	cd cc cc 3d 
   3261d:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
   32624:	cd cc cc bd 
   32628:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
   3262f:	cd cc 4c be 
   32633:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
   3263a:	9a 99 99 be 
   3263e:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
   32645:	cd cc cc be 
   32649:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
   32650:	00 00 00 bf 
   32654:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
   3265b:	9a 99 19 bf 
   3265f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
   32666:	33 33 33 bf 
   3266a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
   32671:	cd cc 4c bf 
   32675:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
   3267c:	66 66 66 bf 
   32680:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
   32687:	00 00 80 bf 
   3268b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
   32692:	80 96 18 cb 
   32696:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   3269a:	89 44 24 14          	mov    %eax,0x14(%esp)
   3269e:	d9 5c 24 10          	fstps  0x10(%esp)
   326a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   326a8:	d9 44 24 18          	flds   0x18(%esp)
   326ac:	8b 6c 24 10          	mov    0x10(%esp),%ebp
   326b0:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   326b4:	d9 5c 24 0c          	fstps  0xc(%esp)
   326b8:	eb 0f                	jmp    326c9 <__score_fpu_test_add+0x1c9>
   326ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   326c0:	d9 06                	flds   (%esi)
   326c2:	83 c6 04             	add    $0x4,%esi
   326c5:	d9 5c 24 0c          	fstps  0xc(%esp)
   326c9:	83 ec 08             	sub    $0x8,%esp
   326cc:	55                   	push   %ebp
   326cd:	ff 74 24 18          	pushl  0x18(%esp)
   326d1:	e8 9a e1 fd ff       	call   10870 <internal_float_add>
   326d6:	d9 44 24 1c          	flds   0x1c(%esp)
   326da:	d8 44 24 20          	fadds  0x20(%esp)
   326de:	d9 5c 24 1c          	fstps  0x1c(%esp)
   326e2:	83 c4 10             	add    $0x10,%esp
   326e5:	3b 44 24 0c          	cmp    0xc(%esp),%eax
   326e9:	0f 85 bb 00 00 00    	jne    327aa <__score_fpu_test_add+0x2aa>
   326ef:	39 fe                	cmp    %edi,%esi
   326f1:	75 cd                	jne    326c0 <__score_fpu_test_add+0x1c0>
   326f3:	8b 44 24 14          	mov    0x14(%esp),%eax
   326f7:	39 f8                	cmp    %edi,%eax
   326f9:	74 0f                	je     3270a <__score_fpu_test_add+0x20a>
   326fb:	d9 00                	flds   (%eax)
   326fd:	83 c0 04             	add    $0x4,%eax
   32700:	89 44 24 14          	mov    %eax,0x14(%esp)
   32704:	d9 5c 24 10          	fstps  0x10(%esp)
   32708:	eb 9e                	jmp    326a8 <__score_fpu_test_add+0x1a8>
   3270a:	83 ec 0c             	sub    $0xc,%esp
   3270d:	bf 40 42 0f 00       	mov    $0xf4240,%edi
   32712:	6a 00                	push   $0x0
   32714:	e8 17 1a fd ff       	call   4130 <time@plt>
   32719:	89 04 24             	mov    %eax,(%esp)
   3271c:	e8 6f 1a fd ff       	call   4190 <srand@plt>
   32721:	83 c4 10             	add    $0x10,%esp
   32724:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   32728:	e8 c3 1a fd ff       	call   41f0 <rand@plt>
   3272d:	89 c6                	mov    %eax,%esi
   3272f:	e8 bc 1a fd ff       	call   41f0 <rand@plt>
   32734:	89 c5                	mov    %eax,%ebp
   32736:	89 f0                	mov    %esi,%eax
   32738:	c1 e8 10             	shr    $0x10,%eax
   3273b:	66 25 80 7f          	and    $0x7f80,%ax
   3273f:	66 3d 80 7f          	cmp    $0x7f80,%ax
   32743:	74 38                	je     3277d <__score_fpu_test_add+0x27d>
   32745:	89 e8                	mov    %ebp,%eax
   32747:	c1 e8 10             	shr    $0x10,%eax
   3274a:	66 25 80 7f          	and    $0x7f80,%ax
   3274e:	66 3d 80 7f          	cmp    $0x7f80,%ax
   32752:	74 29                	je     3277d <__score_fpu_test_add+0x27d>
   32754:	83 ec 08             	sub    $0x8,%esp
   32757:	56                   	push   %esi
   32758:	55                   	push   %ebp
   32759:	e8 12 e1 fd ff       	call   10870 <internal_float_add>
   3275e:	89 74 24 1c          	mov    %esi,0x1c(%esp)
   32762:	d9 44 24 1c          	flds   0x1c(%esp)
   32766:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
   3276a:	d9 44 24 1c          	flds   0x1c(%esp)
   3276e:	de c1                	faddp  %st,%st(1)
   32770:	d9 5c 24 1c          	fstps  0x1c(%esp)
   32774:	83 c4 10             	add    $0x10,%esp
   32777:	3b 44 24 0c          	cmp    0xc(%esp),%eax
   3277b:	75 49                	jne    327c6 <__score_fpu_test_add+0x2c6>
   3277d:	83 ef 01             	sub    $0x1,%edi
   32780:	75 a6                	jne    32728 <__score_fpu_test_add+0x228>
   32782:	83 ec 0c             	sub    $0xc,%esp
   32785:	8d 83 dc 74 fe ff    	lea    -0x18b24(%ebx),%eax
   3278b:	50                   	push   %eax
   3278c:	e8 1f 1b fd ff       	call   42b0 <puts@plt>
   32791:	8d 83 a1 74 fe ff    	lea    -0x18b5f(%ebx),%eax
   32797:	89 04 24             	mov    %eax,(%esp)
   3279a:	e8 81 80 ff ff       	call   2a820 <score_reg_alu_fpu>
   3279f:	81 c4 dc 00 00 00    	add    $0xdc,%esp
   327a5:	5b                   	pop    %ebx
   327a6:	5e                   	pop    %esi
   327a7:	5f                   	pop    %edi
   327a8:	5d                   	pop    %ebp
   327a9:	c3                   	ret    
   327aa:	8d 83 c4 75 fe ff    	lea    -0x18a3c(%ebx),%eax
   327b0:	50                   	push   %eax
   327b1:	6a 1a                	push   $0x1a
   327b3:	8d 83 8d 74 fe ff    	lea    -0x18b73(%ebx),%eax
   327b9:	50                   	push   %eax
   327ba:	8d 83 5d 5c fe ff    	lea    -0x1a3a3(%ebx),%eax
   327c0:	50                   	push   %eax
   327c1:	e8 4a 1b fd ff       	call   4310 <__assert_fail@plt>
   327c6:	8d 83 c4 75 fe ff    	lea    -0x18a3c(%ebx),%eax
   327cc:	50                   	push   %eax
   327cd:	6a 25                	push   $0x25
   327cf:	eb e2                	jmp    327b3 <__score_fpu_test_add+0x2b3>
   327d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   327d8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   327df:	90                   	nop

000327e0 <__score_fpu_test_sub>:
   327e0:	55                   	push   %ebp
   327e1:	57                   	push   %edi
   327e2:	56                   	push   %esi
   327e3:	53                   	push   %ebx
   327e4:	e8 97 1c fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   327e9:	81 c3 17 c8 01 00    	add    $0x1c817,%ebx
   327ef:	81 ec cc 00 00 00    	sub    $0xcc,%esp
   327f5:	8d 44 24 30          	lea    0x30(%esp),%eax
   327f9:	8d bc 24 c0 00 00 00 	lea    0xc0(%esp),%edi
   32800:	d9 83 40 25 05 00    	flds   0x52540(%ebx)
   32806:	d9 54 24 18          	fsts   0x18(%esp)
   3280a:	d9 54 24 2c          	fsts   0x2c(%esp)
   3280e:	d9 83 3c 25 05 00    	flds   0x5253c(%ebx)
   32814:	d9 5c 24 30          	fstps  0x30(%esp)
   32818:	d9 83 38 25 05 00    	flds   0x52538(%ebx)
   3281e:	d9 5c 24 34          	fstps  0x34(%esp)
   32822:	d9 83 34 25 05 00    	flds   0x52534(%ebx)
   32828:	d9 5c 24 38          	fstps  0x38(%esp)
   3282c:	d9 83 28 25 05 00    	flds   0x52528(%ebx)
   32832:	d9 5c 24 3c          	fstps  0x3c(%esp)
   32836:	d9 83 24 25 05 00    	flds   0x52524(%ebx)
   3283c:	d9 5c 24 40          	fstps  0x40(%esp)
   32840:	d9 83 1c 25 05 00    	flds   0x5251c(%ebx)
   32846:	d9 5c 24 44          	fstps  0x44(%esp)
   3284a:	d9 83 18 25 05 00    	flds   0x52518(%ebx)
   32850:	d9 5c 24 48          	fstps  0x48(%esp)
   32854:	d9 83 30 25 05 00    	flds   0x52530(%ebx)
   3285a:	d9 5c 24 4c          	fstps  0x4c(%esp)
   3285e:	d9 83 2c 25 05 00    	flds   0x5252c(%ebx)
   32864:	d9 5c 24 50          	fstps  0x50(%esp)
   32868:	d9 83 20 25 05 00    	flds   0x52520(%ebx)
   3286e:	d9 5c 24 54          	fstps  0x54(%esp)
   32872:	d9 83 14 25 05 00    	flds   0x52514(%ebx)
   32878:	d9 5c 24 58          	fstps  0x58(%esp)
   3287c:	d9 83 10 25 05 00    	flds   0x52510(%ebx)
   32882:	d9 5c 24 5c          	fstps  0x5c(%esp)
   32886:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
   3288d:	4b 
   3288e:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
   32895:	3f 
   32896:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
   3289d:	3f 
   3289e:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
   328a5:	3f 
   328a6:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
   328ad:	3f 
   328ae:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
   328b5:	3f 
   328b6:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
   328bd:	3f 
   328be:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
   328c5:	3f 
   328c6:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
   328cd:	00 00 00 3f 
   328d1:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
   328d8:	cd cc cc 3e 
   328dc:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
   328e3:	9a 99 99 3e 
   328e7:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
   328ee:	cd cc 4c 3e 
   328f2:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
   328f9:	cd cc cc 3d 
   328fd:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
   32904:	cd cc cc bd 
   32908:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
   3290f:	cd cc 4c be 
   32913:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
   3291a:	9a 99 99 be 
   3291e:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
   32925:	cd cc cc be 
   32929:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
   32930:	00 00 00 bf 
   32934:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
   3293b:	9a 99 19 bf 
   3293f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
   32946:	33 33 33 bf 
   3294a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
   32951:	cd cc 4c bf 
   32955:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
   3295c:	66 66 66 bf 
   32960:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
   32967:	00 00 80 bf 
   3296b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
   32972:	80 96 18 cb 
   32976:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   3297a:	89 44 24 14          	mov    %eax,0x14(%esp)
   3297e:	d9 5c 24 10          	fstps  0x10(%esp)
   32982:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   32988:	d9 44 24 18          	flds   0x18(%esp)
   3298c:	8b 6c 24 10          	mov    0x10(%esp),%ebp
   32990:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   32994:	d9 5c 24 0c          	fstps  0xc(%esp)
   32998:	eb 0f                	jmp    329a9 <__score_fpu_test_sub+0x1c9>
   3299a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   329a0:	d9 06                	flds   (%esi)
   329a2:	83 c6 04             	add    $0x4,%esi
   329a5:	d9 5c 24 0c          	fstps  0xc(%esp)
   329a9:	83 ec 08             	sub    $0x8,%esp
   329ac:	55                   	push   %ebp
   329ad:	ff 74 24 18          	pushl  0x18(%esp)
   329b1:	e8 da e1 fd ff       	call   10b90 <internal_float_sub>
   329b6:	d9 44 24 1c          	flds   0x1c(%esp)
   329ba:	d8 6c 24 20          	fsubrs 0x20(%esp)
   329be:	d9 5c 24 1c          	fstps  0x1c(%esp)
   329c2:	83 c4 10             	add    $0x10,%esp
   329c5:	3b 44 24 0c          	cmp    0xc(%esp),%eax
   329c9:	0f 85 bb 00 00 00    	jne    32a8a <__score_fpu_test_sub+0x2aa>
   329cf:	39 fe                	cmp    %edi,%esi
   329d1:	75 cd                	jne    329a0 <__score_fpu_test_sub+0x1c0>
   329d3:	8b 44 24 14          	mov    0x14(%esp),%eax
   329d7:	39 f8                	cmp    %edi,%eax
   329d9:	74 0f                	je     329ea <__score_fpu_test_sub+0x20a>
   329db:	d9 00                	flds   (%eax)
   329dd:	83 c0 04             	add    $0x4,%eax
   329e0:	89 44 24 14          	mov    %eax,0x14(%esp)
   329e4:	d9 5c 24 10          	fstps  0x10(%esp)
   329e8:	eb 9e                	jmp    32988 <__score_fpu_test_sub+0x1a8>
   329ea:	83 ec 0c             	sub    $0xc,%esp
   329ed:	bf 40 42 0f 00       	mov    $0xf4240,%edi
   329f2:	6a 00                	push   $0x0
   329f4:	e8 37 17 fd ff       	call   4130 <time@plt>
   329f9:	89 04 24             	mov    %eax,(%esp)
   329fc:	e8 8f 17 fd ff       	call   4190 <srand@plt>
   32a01:	83 c4 10             	add    $0x10,%esp
   32a04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   32a08:	e8 e3 17 fd ff       	call   41f0 <rand@plt>
   32a0d:	89 c6                	mov    %eax,%esi
   32a0f:	e8 dc 17 fd ff       	call   41f0 <rand@plt>
   32a14:	89 c5                	mov    %eax,%ebp
   32a16:	89 f0                	mov    %esi,%eax
   32a18:	c1 e8 10             	shr    $0x10,%eax
   32a1b:	66 25 80 7f          	and    $0x7f80,%ax
   32a1f:	66 3d 80 7f          	cmp    $0x7f80,%ax
   32a23:	74 38                	je     32a5d <__score_fpu_test_sub+0x27d>
   32a25:	89 e8                	mov    %ebp,%eax
   32a27:	c1 e8 10             	shr    $0x10,%eax
   32a2a:	66 25 80 7f          	and    $0x7f80,%ax
   32a2e:	66 3d 80 7f          	cmp    $0x7f80,%ax
   32a32:	74 29                	je     32a5d <__score_fpu_test_sub+0x27d>
   32a34:	83 ec 08             	sub    $0x8,%esp
   32a37:	56                   	push   %esi
   32a38:	55                   	push   %ebp
   32a39:	e8 52 e1 fd ff       	call   10b90 <internal_float_sub>
   32a3e:	89 74 24 1c          	mov    %esi,0x1c(%esp)
   32a42:	d9 44 24 1c          	flds   0x1c(%esp)
   32a46:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
   32a4a:	d9 44 24 1c          	flds   0x1c(%esp)
   32a4e:	de e9                	fsubrp %st,%st(1)
   32a50:	d9 5c 24 1c          	fstps  0x1c(%esp)
   32a54:	83 c4 10             	add    $0x10,%esp
   32a57:	3b 44 24 0c          	cmp    0xc(%esp),%eax
   32a5b:	75 49                	jne    32aa6 <__score_fpu_test_sub+0x2c6>
   32a5d:	83 ef 01             	sub    $0x1,%edi
   32a60:	75 a6                	jne    32a08 <__score_fpu_test_sub+0x228>
   32a62:	83 ec 0c             	sub    $0xc,%esp
   32a65:	8d 83 04 75 fe ff    	lea    -0x18afc(%ebx),%eax
   32a6b:	50                   	push   %eax
   32a6c:	e8 3f 18 fd ff       	call   42b0 <puts@plt>
   32a71:	8d 83 af 74 fe ff    	lea    -0x18b51(%ebx),%eax
   32a77:	89 04 24             	mov    %eax,(%esp)
   32a7a:	e8 a1 7d ff ff       	call   2a820 <score_reg_alu_fpu>
   32a7f:	81 c4 dc 00 00 00    	add    $0xdc,%esp
   32a85:	5b                   	pop    %ebx
   32a86:	5e                   	pop    %esi
   32a87:	5f                   	pop    %edi
   32a88:	5d                   	pop    %ebp
   32a89:	c3                   	ret    
   32a8a:	8d 83 ac 75 fe ff    	lea    -0x18a54(%ebx),%eax
   32a90:	50                   	push   %eax
   32a91:	6a 3b                	push   $0x3b
   32a93:	8d 83 8d 74 fe ff    	lea    -0x18b73(%ebx),%eax
   32a99:	50                   	push   %eax
   32a9a:	8d 83 5d 5c fe ff    	lea    -0x1a3a3(%ebx),%eax
   32aa0:	50                   	push   %eax
   32aa1:	e8 6a 18 fd ff       	call   4310 <__assert_fail@plt>
   32aa6:	8d 83 ac 75 fe ff    	lea    -0x18a54(%ebx),%eax
   32aac:	50                   	push   %eax
   32aad:	6a 46                	push   $0x46
   32aaf:	eb e2                	jmp    32a93 <__score_fpu_test_sub+0x2b3>
   32ab1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   32ab8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   32abf:	90                   	nop

00032ac0 <__score_fpu_test_div>:
   32ac0:	55                   	push   %ebp
   32ac1:	57                   	push   %edi
   32ac2:	56                   	push   %esi
   32ac3:	53                   	push   %ebx
   32ac4:	e8 b7 19 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   32ac9:	81 c3 37 c5 01 00    	add    $0x1c537,%ebx
   32acf:	81 ec cc 00 00 00    	sub    $0xcc,%esp
   32ad5:	8d 44 24 30          	lea    0x30(%esp),%eax
   32ad9:	8d 8c 24 c0 00 00 00 	lea    0xc0(%esp),%ecx
   32ae0:	d9 83 40 25 05 00    	flds   0x52540(%ebx)
   32ae6:	d9 54 24 18          	fsts   0x18(%esp)
   32aea:	d9 54 24 2c          	fsts   0x2c(%esp)
   32aee:	d9 83 3c 25 05 00    	flds   0x5253c(%ebx)
   32af4:	d9 5c 24 30          	fstps  0x30(%esp)
   32af8:	d9 83 38 25 05 00    	flds   0x52538(%ebx)
   32afe:	d9 5c 24 34          	fstps  0x34(%esp)
   32b02:	d9 83 34 25 05 00    	flds   0x52534(%ebx)
   32b08:	d9 5c 24 38          	fstps  0x38(%esp)
   32b0c:	d9 83 28 25 05 00    	flds   0x52528(%ebx)
   32b12:	d9 5c 24 3c          	fstps  0x3c(%esp)
   32b16:	d9 83 24 25 05 00    	flds   0x52524(%ebx)
   32b1c:	d9 5c 24 40          	fstps  0x40(%esp)
   32b20:	d9 83 1c 25 05 00    	flds   0x5251c(%ebx)
   32b26:	d9 5c 24 44          	fstps  0x44(%esp)
   32b2a:	d9 83 18 25 05 00    	flds   0x52518(%ebx)
   32b30:	d9 5c 24 48          	fstps  0x48(%esp)
   32b34:	d9 83 30 25 05 00    	flds   0x52530(%ebx)
   32b3a:	d9 5c 24 4c          	fstps  0x4c(%esp)
   32b3e:	d9 83 2c 25 05 00    	flds   0x5252c(%ebx)
   32b44:	d9 5c 24 50          	fstps  0x50(%esp)
   32b48:	d9 83 20 25 05 00    	flds   0x52520(%ebx)
   32b4e:	d9 5c 24 54          	fstps  0x54(%esp)
   32b52:	d9 83 14 25 05 00    	flds   0x52514(%ebx)
   32b58:	d9 5c 24 58          	fstps  0x58(%esp)
   32b5c:	d9 83 10 25 05 00    	flds   0x52510(%ebx)
   32b62:	d9 5c 24 5c          	fstps  0x5c(%esp)
   32b66:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
   32b6d:	4b 
   32b6e:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
   32b75:	3f 
   32b76:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
   32b7d:	3f 
   32b7e:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
   32b85:	3f 
   32b86:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
   32b8d:	3f 
   32b8e:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
   32b95:	3f 
   32b96:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
   32b9d:	3f 
   32b9e:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
   32ba5:	3f 
   32ba6:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
   32bad:	00 00 00 3f 
   32bb1:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
   32bb8:	cd cc cc 3e 
   32bbc:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
   32bc3:	9a 99 99 3e 
   32bc7:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
   32bce:	cd cc 4c 3e 
   32bd2:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
   32bd9:	cd cc cc 3d 
   32bdd:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
   32be4:	cd cc cc bd 
   32be8:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
   32bef:	cd cc 4c be 
   32bf3:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
   32bfa:	9a 99 99 be 
   32bfe:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
   32c05:	cd cc cc be 
   32c09:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
   32c10:	00 00 00 bf 
   32c14:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
   32c1b:	9a 99 19 bf 
   32c1f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
   32c26:	33 33 33 bf 
   32c2a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
   32c31:	cd cc 4c bf 
   32c35:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
   32c3c:	66 66 66 bf 
   32c40:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
   32c47:	00 00 80 bf 
   32c4b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
   32c52:	80 96 18 cb 
   32c56:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   32c5a:	89 4c 24 10          	mov    %ecx,0x10(%esp)
   32c5e:	89 44 24 14          	mov    %eax,0x14(%esp)
   32c62:	d9 5c 24 0c          	fstps  0xc(%esp)
   32c66:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   32c6d:	8d 76 00             	lea    0x0(%esi),%esi
   32c70:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
   32c74:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   32c78:	8b 44 24 18          	mov    0x18(%esp),%eax
   32c7c:	eb 07                	jmp    32c85 <__score_fpu_test_div+0x1c5>
   32c7e:	66 90                	xchg   %ax,%ax
   32c80:	8b 07                	mov    (%edi),%eax
   32c82:	83 c7 04             	add    $0x4,%edi
   32c85:	89 44 24 08          	mov    %eax,0x8(%esp)
   32c89:	d9 44 24 08          	flds   0x8(%esp)
   32c8d:	83 ec 08             	sub    $0x8,%esp
   32c90:	d8 7c 24 14          	fdivrs 0x14(%esp)
   32c94:	d9 5c 24 10          	fstps  0x10(%esp)
   32c98:	8b 74 24 10          	mov    0x10(%esp),%esi
   32c9c:	55                   	push   %ebp
   32c9d:	50                   	push   %eax
   32c9e:	e8 9d e3 fd ff       	call   11040 <internal_float_div>
   32ca3:	83 c4 10             	add    $0x10,%esp
   32ca6:	39 f0                	cmp    %esi,%eax
   32ca8:	74 0b                	je     32cb5 <__score_fpu_test_div+0x1f5>
   32caa:	29 c6                	sub    %eax,%esi
   32cac:	83 fe 01             	cmp    $0x1,%esi
   32caf:	0f 85 eb 00 00 00    	jne    32da0 <__score_fpu_test_div+0x2e0>
   32cb5:	3b 7c 24 10          	cmp    0x10(%esp),%edi
   32cb9:	75 c5                	jne    32c80 <__score_fpu_test_div+0x1c0>
   32cbb:	8b 44 24 14          	mov    0x14(%esp),%eax
   32cbf:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   32cc3:	39 c8                	cmp    %ecx,%eax
   32cc5:	74 0f                	je     32cd6 <__score_fpu_test_div+0x216>
   32cc7:	d9 00                	flds   (%eax)
   32cc9:	83 c0 04             	add    $0x4,%eax
   32ccc:	89 44 24 14          	mov    %eax,0x14(%esp)
   32cd0:	d9 5c 24 0c          	fstps  0xc(%esp)
   32cd4:	eb 9a                	jmp    32c70 <__score_fpu_test_div+0x1b0>
   32cd6:	83 ec 0c             	sub    $0xc,%esp
   32cd9:	be 40 42 0f 00       	mov    $0xf4240,%esi
   32cde:	6a 00                	push   $0x0
   32ce0:	e8 4b 14 fd ff       	call   4130 <time@plt>
   32ce5:	89 04 24             	mov    %eax,(%esp)
   32ce8:	e8 a3 14 fd ff       	call   4190 <srand@plt>
   32ced:	83 c4 10             	add    $0x10,%esp
   32cf0:	eb 0f                	jmp    32d01 <__score_fpu_test_div+0x241>
   32cf2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   32cf8:	75 45                	jne    32d3f <__score_fpu_test_div+0x27f>
   32cfa:	dd d8                	fstp   %st(0)
   32cfc:	83 ee 01             	sub    $0x1,%esi
   32cff:	74 77                	je     32d78 <__score_fpu_test_div+0x2b8>
   32d01:	e8 ea 14 fd ff       	call   41f0 <rand@plt>
   32d06:	89 c7                	mov    %eax,%edi
   32d08:	e8 e3 14 fd ff       	call   41f0 <rand@plt>
   32d0d:	89 fa                	mov    %edi,%edx
   32d0f:	c1 ea 10             	shr    $0x10,%edx
   32d12:	66 81 e2 80 7f       	and    $0x7f80,%dx
   32d17:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
   32d1c:	74 de                	je     32cfc <__score_fpu_test_div+0x23c>
   32d1e:	89 c2                	mov    %eax,%edx
   32d20:	c1 ea 10             	shr    $0x10,%edx
   32d23:	66 81 e2 80 7f       	and    $0x7f80,%dx
   32d28:	66 81 fa 80 7f       	cmp    $0x7f80,%dx
   32d2d:	74 cd                	je     32cfc <__score_fpu_test_div+0x23c>
   32d2f:	89 44 24 08          	mov    %eax,0x8(%esp)
   32d33:	d9 ee                	fldz   
   32d35:	d9 44 24 08          	flds   0x8(%esp)
   32d39:	db e9                	fucomi %st(1),%st
   32d3b:	dd d9                	fstp   %st(1)
   32d3d:	7b b9                	jnp    32cf8 <__score_fpu_test_div+0x238>
   32d3f:	89 7c 24 08          	mov    %edi,0x8(%esp)
   32d43:	d9 44 24 08          	flds   0x8(%esp)
   32d47:	83 ec 08             	sub    $0x8,%esp
   32d4a:	de f1                	fdivp  %st,%st(1)
   32d4c:	d9 5c 24 10          	fstps  0x10(%esp)
   32d50:	8b 6c 24 10          	mov    0x10(%esp),%ebp
   32d54:	57                   	push   %edi
   32d55:	50                   	push   %eax
   32d56:	e8 e5 e2 fd ff       	call   11040 <internal_float_div>
   32d5b:	83 c4 10             	add    $0x10,%esp
   32d5e:	39 e8                	cmp    %ebp,%eax
   32d60:	74 9a                	je     32cfc <__score_fpu_test_div+0x23c>
   32d62:	29 c5                	sub    %eax,%ebp
   32d64:	83 fd 01             	cmp    $0x1,%ebp
   32d67:	74 93                	je     32cfc <__score_fpu_test_div+0x23c>
   32d69:	8d 83 94 75 fe ff    	lea    -0x18a6c(%ebx),%eax
   32d6f:	50                   	push   %eax
   32d70:	6a 70                	push   $0x70
   32d72:	eb 35                	jmp    32da9 <__score_fpu_test_div+0x2e9>
   32d74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   32d78:	83 ec 0c             	sub    $0xc,%esp
   32d7b:	8d 83 2c 75 fe ff    	lea    -0x18ad4(%ebx),%eax
   32d81:	50                   	push   %eax
   32d82:	e8 29 15 fd ff       	call   42b0 <puts@plt>
   32d87:	8d 83 bd 74 fe ff    	lea    -0x18b43(%ebx),%eax
   32d8d:	89 04 24             	mov    %eax,(%esp)
   32d90:	e8 8b 7a ff ff       	call   2a820 <score_reg_alu_fpu>
   32d95:	81 c4 dc 00 00 00    	add    $0xdc,%esp
   32d9b:	5b                   	pop    %ebx
   32d9c:	5e                   	pop    %esi
   32d9d:	5f                   	pop    %edi
   32d9e:	5d                   	pop    %ebp
   32d9f:	c3                   	ret    
   32da0:	8d 83 94 75 fe ff    	lea    -0x18a6c(%ebx),%eax
   32da6:	50                   	push   %eax
   32da7:	6a 63                	push   $0x63
   32da9:	8d 83 8d 74 fe ff    	lea    -0x18b73(%ebx),%eax
   32daf:	50                   	push   %eax
   32db0:	8d 83 74 5c fe ff    	lea    -0x1a38c(%ebx),%eax
   32db6:	50                   	push   %eax
   32db7:	e8 54 15 fd ff       	call   4310 <__assert_fail@plt>
   32dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00032dc0 <__score_fpu_test_mul>:
   32dc0:	55                   	push   %ebp
   32dc1:	57                   	push   %edi
   32dc2:	56                   	push   %esi
   32dc3:	53                   	push   %ebx
   32dc4:	e8 b7 16 fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   32dc9:	81 c3 37 c2 01 00    	add    $0x1c237,%ebx
   32dcf:	81 ec cc 00 00 00    	sub    $0xcc,%esp
   32dd5:	8d 44 24 30          	lea    0x30(%esp),%eax
   32dd9:	8d bc 24 c0 00 00 00 	lea    0xc0(%esp),%edi
   32de0:	d9 83 40 25 05 00    	flds   0x52540(%ebx)
   32de6:	d9 54 24 18          	fsts   0x18(%esp)
   32dea:	d9 54 24 2c          	fsts   0x2c(%esp)
   32dee:	d9 83 3c 25 05 00    	flds   0x5253c(%ebx)
   32df4:	d9 5c 24 30          	fstps  0x30(%esp)
   32df8:	d9 83 38 25 05 00    	flds   0x52538(%ebx)
   32dfe:	d9 5c 24 34          	fstps  0x34(%esp)
   32e02:	d9 83 34 25 05 00    	flds   0x52534(%ebx)
   32e08:	d9 5c 24 38          	fstps  0x38(%esp)
   32e0c:	d9 83 28 25 05 00    	flds   0x52528(%ebx)
   32e12:	d9 5c 24 3c          	fstps  0x3c(%esp)
   32e16:	d9 83 24 25 05 00    	flds   0x52524(%ebx)
   32e1c:	d9 5c 24 40          	fstps  0x40(%esp)
   32e20:	d9 83 1c 25 05 00    	flds   0x5251c(%ebx)
   32e26:	d9 5c 24 44          	fstps  0x44(%esp)
   32e2a:	d9 83 18 25 05 00    	flds   0x52518(%ebx)
   32e30:	d9 5c 24 48          	fstps  0x48(%esp)
   32e34:	d9 83 30 25 05 00    	flds   0x52530(%ebx)
   32e3a:	d9 5c 24 4c          	fstps  0x4c(%esp)
   32e3e:	d9 83 2c 25 05 00    	flds   0x5252c(%ebx)
   32e44:	d9 5c 24 50          	fstps  0x50(%esp)
   32e48:	d9 83 20 25 05 00    	flds   0x52520(%ebx)
   32e4e:	d9 5c 24 54          	fstps  0x54(%esp)
   32e52:	d9 83 14 25 05 00    	flds   0x52514(%ebx)
   32e58:	d9 5c 24 58          	fstps  0x58(%esp)
   32e5c:	d9 83 10 25 05 00    	flds   0x52510(%ebx)
   32e62:	d9 5c 24 5c          	fstps  0x5c(%esp)
   32e66:	c7 44 24 60 80 96 18 	movl   $0x4b189680,0x60(%esp)
   32e6d:	4b 
   32e6e:	c7 44 24 64 9a 99 99 	movl   $0x3f99999a,0x64(%esp)
   32e75:	3f 
   32e76:	c7 44 24 68 cd cc 8c 	movl   $0x3f8ccccd,0x68(%esp)
   32e7d:	3f 
   32e7e:	c7 44 24 6c 00 00 80 	movl   $0x3f800000,0x6c(%esp)
   32e85:	3f 
   32e86:	c7 44 24 70 66 66 66 	movl   $0x3f666666,0x70(%esp)
   32e8d:	3f 
   32e8e:	c7 44 24 74 cd cc 4c 	movl   $0x3f4ccccd,0x74(%esp)
   32e95:	3f 
   32e96:	c7 44 24 78 33 33 33 	movl   $0x3f333333,0x78(%esp)
   32e9d:	3f 
   32e9e:	c7 44 24 7c 9a 99 19 	movl   $0x3f19999a,0x7c(%esp)
   32ea5:	3f 
   32ea6:	c7 84 24 80 00 00 00 	movl   $0x3f000000,0x80(%esp)
   32ead:	00 00 00 3f 
   32eb1:	c7 84 24 84 00 00 00 	movl   $0x3ecccccd,0x84(%esp)
   32eb8:	cd cc cc 3e 
   32ebc:	c7 84 24 88 00 00 00 	movl   $0x3e99999a,0x88(%esp)
   32ec3:	9a 99 99 3e 
   32ec7:	c7 84 24 8c 00 00 00 	movl   $0x3e4ccccd,0x8c(%esp)
   32ece:	cd cc 4c 3e 
   32ed2:	c7 84 24 90 00 00 00 	movl   $0x3dcccccd,0x90(%esp)
   32ed9:	cd cc cc 3d 
   32edd:	c7 84 24 94 00 00 00 	movl   $0xbdcccccd,0x94(%esp)
   32ee4:	cd cc cc bd 
   32ee8:	c7 84 24 98 00 00 00 	movl   $0xbe4ccccd,0x98(%esp)
   32eef:	cd cc 4c be 
   32ef3:	c7 84 24 9c 00 00 00 	movl   $0xbe99999a,0x9c(%esp)
   32efa:	9a 99 99 be 
   32efe:	c7 84 24 a0 00 00 00 	movl   $0xbecccccd,0xa0(%esp)
   32f05:	cd cc cc be 
   32f09:	c7 84 24 a4 00 00 00 	movl   $0xbf000000,0xa4(%esp)
   32f10:	00 00 00 bf 
   32f14:	c7 84 24 a8 00 00 00 	movl   $0xbf19999a,0xa8(%esp)
   32f1b:	9a 99 19 bf 
   32f1f:	c7 84 24 ac 00 00 00 	movl   $0xbf333333,0xac(%esp)
   32f26:	33 33 33 bf 
   32f2a:	c7 84 24 b0 00 00 00 	movl   $0xbf4ccccd,0xb0(%esp)
   32f31:	cd cc 4c bf 
   32f35:	c7 84 24 b4 00 00 00 	movl   $0xbf666666,0xb4(%esp)
   32f3c:	66 66 66 bf 
   32f40:	c7 84 24 b8 00 00 00 	movl   $0xbf800000,0xb8(%esp)
   32f47:	00 00 80 bf 
   32f4b:	c7 84 24 bc 00 00 00 	movl   $0xcb189680,0xbc(%esp)
   32f52:	80 96 18 cb 
   32f56:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   32f5a:	89 44 24 14          	mov    %eax,0x14(%esp)
   32f5e:	d9 5c 24 10          	fstps  0x10(%esp)
   32f62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   32f68:	d9 44 24 18          	flds   0x18(%esp)
   32f6c:	8b 6c 24 10          	mov    0x10(%esp),%ebp
   32f70:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   32f74:	d9 5c 24 0c          	fstps  0xc(%esp)
   32f78:	eb 0f                	jmp    32f89 <__score_fpu_test_mul+0x1c9>
   32f7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   32f80:	d9 06                	flds   (%esi)
   32f82:	83 c6 04             	add    $0x4,%esi
   32f85:	d9 5c 24 0c          	fstps  0xc(%esp)
   32f89:	83 ec 08             	sub    $0x8,%esp
   32f8c:	55                   	push   %ebp
   32f8d:	ff 74 24 18          	pushl  0x18(%esp)
   32f91:	e8 8a dc fd ff       	call   10c20 <internal_float_mul>
   32f96:	d9 44 24 1c          	flds   0x1c(%esp)
   32f9a:	d8 4c 24 20          	fmuls  0x20(%esp)
   32f9e:	d9 5c 24 1c          	fstps  0x1c(%esp)
   32fa2:	83 c4 10             	add    $0x10,%esp
   32fa5:	3b 44 24 0c          	cmp    0xc(%esp),%eax
   32fa9:	0f 85 bb 00 00 00    	jne    3306a <__score_fpu_test_mul+0x2aa>
   32faf:	39 fe                	cmp    %edi,%esi
   32fb1:	75 cd                	jne    32f80 <__score_fpu_test_mul+0x1c0>
   32fb3:	8b 44 24 14          	mov    0x14(%esp),%eax
   32fb7:	39 f8                	cmp    %edi,%eax
   32fb9:	74 0f                	je     32fca <__score_fpu_test_mul+0x20a>
   32fbb:	d9 00                	flds   (%eax)
   32fbd:	83 c0 04             	add    $0x4,%eax
   32fc0:	89 44 24 14          	mov    %eax,0x14(%esp)
   32fc4:	d9 5c 24 10          	fstps  0x10(%esp)
   32fc8:	eb 9e                	jmp    32f68 <__score_fpu_test_mul+0x1a8>
   32fca:	83 ec 0c             	sub    $0xc,%esp
   32fcd:	bf 40 42 0f 00       	mov    $0xf4240,%edi
   32fd2:	6a 00                	push   $0x0
   32fd4:	e8 57 11 fd ff       	call   4130 <time@plt>
   32fd9:	89 04 24             	mov    %eax,(%esp)
   32fdc:	e8 af 11 fd ff       	call   4190 <srand@plt>
   32fe1:	83 c4 10             	add    $0x10,%esp
   32fe4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   32fe8:	e8 03 12 fd ff       	call   41f0 <rand@plt>
   32fed:	89 c6                	mov    %eax,%esi
   32fef:	e8 fc 11 fd ff       	call   41f0 <rand@plt>
   32ff4:	89 c5                	mov    %eax,%ebp
   32ff6:	89 f0                	mov    %esi,%eax
   32ff8:	c1 e8 10             	shr    $0x10,%eax
   32ffb:	66 25 80 7f          	and    $0x7f80,%ax
   32fff:	66 3d 80 7f          	cmp    $0x7f80,%ax
   33003:	74 38                	je     3303d <__score_fpu_test_mul+0x27d>
   33005:	89 e8                	mov    %ebp,%eax
   33007:	c1 e8 10             	shr    $0x10,%eax
   3300a:	66 25 80 7f          	and    $0x7f80,%ax
   3300e:	66 3d 80 7f          	cmp    $0x7f80,%ax
   33012:	74 29                	je     3303d <__score_fpu_test_mul+0x27d>
   33014:	83 ec 08             	sub    $0x8,%esp
   33017:	56                   	push   %esi
   33018:	55                   	push   %ebp
   33019:	e8 02 dc fd ff       	call   10c20 <internal_float_mul>
   3301e:	89 74 24 1c          	mov    %esi,0x1c(%esp)
   33022:	d9 44 24 1c          	flds   0x1c(%esp)
   33026:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
   3302a:	d9 44 24 1c          	flds   0x1c(%esp)
   3302e:	de c9                	fmulp  %st,%st(1)
   33030:	d9 5c 24 1c          	fstps  0x1c(%esp)
   33034:	83 c4 10             	add    $0x10,%esp
   33037:	3b 44 24 0c          	cmp    0xc(%esp),%eax
   3303b:	75 4c                	jne    33089 <__score_fpu_test_mul+0x2c9>
   3303d:	83 ef 01             	sub    $0x1,%edi
   33040:	75 a6                	jne    32fe8 <__score_fpu_test_mul+0x228>
   33042:	83 ec 0c             	sub    $0xc,%esp
   33045:	8d 83 54 75 fe ff    	lea    -0x18aac(%ebx),%eax
   3304b:	50                   	push   %eax
   3304c:	e8 5f 12 fd ff       	call   42b0 <puts@plt>
   33051:	8d 83 cb 74 fe ff    	lea    -0x18b35(%ebx),%eax
   33057:	89 04 24             	mov    %eax,(%esp)
   3305a:	e8 c1 77 ff ff       	call   2a820 <score_reg_alu_fpu>
   3305f:	81 c4 dc 00 00 00    	add    $0xdc,%esp
   33065:	5b                   	pop    %ebx
   33066:	5e                   	pop    %esi
   33067:	5f                   	pop    %edi
   33068:	5d                   	pop    %ebp
   33069:	c3                   	ret    
   3306a:	8d 83 7c 75 fe ff    	lea    -0x18a84(%ebx),%eax
   33070:	50                   	push   %eax
   33071:	68 8a 00 00 00       	push   $0x8a
   33076:	8d 83 8d 74 fe ff    	lea    -0x18b73(%ebx),%eax
   3307c:	50                   	push   %eax
   3307d:	8d 83 5d 5c fe ff    	lea    -0x1a3a3(%ebx),%eax
   33083:	50                   	push   %eax
   33084:	e8 87 12 fd ff       	call   4310 <__assert_fail@plt>
   33089:	8d 83 7c 75 fe ff    	lea    -0x18a84(%ebx),%eax
   3308f:	50                   	push   %eax
   33090:	68 95 00 00 00       	push   $0x95
   33095:	eb df                	jmp    33076 <__score_fpu_test_mul+0x2b6>
   33097:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3309e:	66 90                	xchg   %ax,%ax

000330a0 <__score_init_fpu_test>:
   330a0:	e8 32 32 fd ff       	call   62d7 <__x86.get_pc_thunk.ax>
   330a5:	05 5b bf 01 00       	add    $0x1bf5b,%eax
   330aa:	0f b7 90 3a 25 05 00 	movzwl 0x5253a(%eax),%edx
   330b1:	66 83 88 36 25 05 00 	orw    $0xff80,0x52536(%eax)
   330b8:	80 
   330b9:	c7 80 40 25 05 00 00 	movl   $0x0,0x52540(%eax)
   330c0:	00 00 00 
   330c3:	c7 80 3c 25 05 00 00 	movl   $0x80000000,0x5253c(%eax)
   330ca:	00 00 80 
   330cd:	83 e2 7f             	and    $0x7f,%edx
   330d0:	c7 80 30 25 05 00 00 	movl   $0x7fc00000,0x52530(%eax)
   330d7:	00 c0 7f 
   330da:	66 81 ca 80 7f       	or     $0x7f80,%dx
   330df:	66 89 90 3a 25 05 00 	mov    %dx,0x5253a(%eax)
   330e6:	c7 80 2c 25 05 00 00 	movl   $0xffc00000,0x5252c(%eax)
   330ed:	00 c0 ff 
   330f0:	c7 80 28 25 05 00 01 	movl   $0x1,0x52528(%eax)
   330f7:	00 00 00 
   330fa:	c7 80 24 25 05 00 02 	movl   $0x2,0x52524(%eax)
   33101:	00 00 00 
   33104:	c7 80 20 25 05 00 00 	movl   $0x80400000,0x52520(%eax)
   3310b:	00 40 80 
   3310e:	c7 80 14 25 05 00 00 	movl   $0x800000,0x52514(%eax)
   33115:	00 80 00 
   33118:	c7 80 10 25 05 00 01 	movl   $0x800001,0x52510(%eax)
   3311f:	00 80 00 
   33122:	c7 80 1c 25 05 00 01 	movl   $0x7f000001,0x5251c(%eax)
   33129:	00 00 7f 
   3312c:	c7 80 18 25 05 00 01 	movl   $0xff000001,0x52518(%eax)
   33133:	00 00 ff 
   33136:	c3                   	ret    
   33137:	66 90                	xchg   %ax,%ax
   33139:	66 90                	xchg   %ax,%ax
   3313b:	66 90                	xchg   %ax,%ax
   3313d:	66 90                	xchg   %ax,%ax
   3313f:	90                   	nop

00033140 <__divdi3>:
   33140:	55                   	push   %ebp
   33141:	57                   	push   %edi
   33142:	56                   	push   %esi
   33143:	53                   	push   %ebx
   33144:	83 ec 1c             	sub    $0x1c,%esp
   33147:	8b 5c 24 34          	mov    0x34(%esp),%ebx
   3314b:	8b 4c 24 30          	mov    0x30(%esp),%ecx
   3314f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   33156:	00 
   33157:	8b 44 24 38          	mov    0x38(%esp),%eax
   3315b:	8b 54 24 3c          	mov    0x3c(%esp),%edx
   3315f:	89 0c 24             	mov    %ecx,(%esp)
   33162:	89 dd                	mov    %ebx,%ebp
   33164:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   33168:	85 db                	test   %ebx,%ebx
   3316a:	79 18                	jns    33184 <__divdi3+0x44>
   3316c:	f7 d9                	neg    %ecx
   3316e:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   33175:	ff 
   33176:	83 d3 00             	adc    $0x0,%ebx
   33179:	89 0c 24             	mov    %ecx,(%esp)
   3317c:	f7 db                	neg    %ebx
   3317e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   33182:	89 dd                	mov    %ebx,%ebp
   33184:	89 d3                	mov    %edx,%ebx
   33186:	85 d2                	test   %edx,%edx
   33188:	79 0d                	jns    33197 <__divdi3+0x57>
   3318a:	f7 d8                	neg    %eax
   3318c:	f7 54 24 08          	notl   0x8(%esp)
   33190:	83 d2 00             	adc    $0x0,%edx
   33193:	f7 da                	neg    %edx
   33195:	89 d3                	mov    %edx,%ebx
   33197:	89 c7                	mov    %eax,%edi
   33199:	8b 04 24             	mov    (%esp),%eax
   3319c:	85 db                	test   %ebx,%ebx
   3319e:	75 50                	jne    331f0 <__divdi3+0xb0>
   331a0:	39 ef                	cmp    %ebp,%edi
   331a2:	76 2c                	jbe    331d0 <__divdi3+0x90>
   331a4:	89 ea                	mov    %ebp,%edx
   331a6:	31 f6                	xor    %esi,%esi
   331a8:	f7 f7                	div    %edi
   331aa:	89 c1                	mov    %eax,%ecx
   331ac:	89 c8                	mov    %ecx,%eax
   331ae:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   331b2:	89 f2                	mov    %esi,%edx
   331b4:	85 c9                	test   %ecx,%ecx
   331b6:	74 07                	je     331bf <__divdi3+0x7f>
   331b8:	f7 d8                	neg    %eax
   331ba:	83 d2 00             	adc    $0x0,%edx
   331bd:	f7 da                	neg    %edx
   331bf:	83 c4 1c             	add    $0x1c,%esp
   331c2:	5b                   	pop    %ebx
   331c3:	5e                   	pop    %esi
   331c4:	5f                   	pop    %edi
   331c5:	5d                   	pop    %ebp
   331c6:	c3                   	ret    
   331c7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   331ce:	66 90                	xchg   %ax,%ax
   331d0:	85 ff                	test   %edi,%edi
   331d2:	75 0b                	jne    331df <__divdi3+0x9f>
   331d4:	b8 01 00 00 00       	mov    $0x1,%eax
   331d9:	31 d2                	xor    %edx,%edx
   331db:	f7 f3                	div    %ebx
   331dd:	89 c7                	mov    %eax,%edi
   331df:	31 d2                	xor    %edx,%edx
   331e1:	89 e8                	mov    %ebp,%eax
   331e3:	f7 f7                	div    %edi
   331e5:	89 c6                	mov    %eax,%esi
   331e7:	8b 04 24             	mov    (%esp),%eax
   331ea:	f7 f7                	div    %edi
   331ec:	89 c1                	mov    %eax,%ecx
   331ee:	eb bc                	jmp    331ac <__divdi3+0x6c>
   331f0:	39 eb                	cmp    %ebp,%ebx
   331f2:	77 1c                	ja     33210 <__divdi3+0xd0>
   331f4:	0f bd f3             	bsr    %ebx,%esi
   331f7:	83 f6 1f             	xor    $0x1f,%esi
   331fa:	75 24                	jne    33220 <__divdi3+0xe0>
   331fc:	39 eb                	cmp    %ebp,%ebx
   331fe:	72 07                	jb     33207 <__divdi3+0xc7>
   33200:	31 c9                	xor    %ecx,%ecx
   33202:	3b 3c 24             	cmp    (%esp),%edi
   33205:	77 a5                	ja     331ac <__divdi3+0x6c>
   33207:	b9 01 00 00 00       	mov    $0x1,%ecx
   3320c:	eb 9e                	jmp    331ac <__divdi3+0x6c>
   3320e:	66 90                	xchg   %ax,%ax
   33210:	31 f6                	xor    %esi,%esi
   33212:	31 c9                	xor    %ecx,%ecx
   33214:	eb 96                	jmp    331ac <__divdi3+0x6c>
   33216:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3321d:	8d 76 00             	lea    0x0(%esi),%esi
   33220:	b8 20 00 00 00       	mov    $0x20,%eax
   33225:	89 f1                	mov    %esi,%ecx
   33227:	89 fa                	mov    %edi,%edx
   33229:	29 f0                	sub    %esi,%eax
   3322b:	d3 e3                	shl    %cl,%ebx
   3322d:	89 c1                	mov    %eax,%ecx
   3322f:	d3 ea                	shr    %cl,%edx
   33231:	89 f1                	mov    %esi,%ecx
   33233:	09 da                	or     %ebx,%edx
   33235:	d3 e7                	shl    %cl,%edi
   33237:	89 eb                	mov    %ebp,%ebx
   33239:	89 c1                	mov    %eax,%ecx
   3323b:	d3 eb                	shr    %cl,%ebx
   3323d:	89 54 24 0c          	mov    %edx,0xc(%esp)
   33241:	89 f1                	mov    %esi,%ecx
   33243:	8b 14 24             	mov    (%esp),%edx
   33246:	d3 e5                	shl    %cl,%ebp
   33248:	89 c1                	mov    %eax,%ecx
   3324a:	d3 ea                	shr    %cl,%edx
   3324c:	09 d5                	or     %edx,%ebp
   3324e:	89 da                	mov    %ebx,%edx
   33250:	89 e8                	mov    %ebp,%eax
   33252:	f7 74 24 0c          	divl   0xc(%esp)
   33256:	89 d3                	mov    %edx,%ebx
   33258:	89 c5                	mov    %eax,%ebp
   3325a:	f7 e7                	mul    %edi
   3325c:	39 d3                	cmp    %edx,%ebx
   3325e:	72 20                	jb     33280 <__divdi3+0x140>
   33260:	8b 3c 24             	mov    (%esp),%edi
   33263:	89 f1                	mov    %esi,%ecx
   33265:	d3 e7                	shl    %cl,%edi
   33267:	39 c7                	cmp    %eax,%edi
   33269:	73 04                	jae    3326f <__divdi3+0x12f>
   3326b:	39 d3                	cmp    %edx,%ebx
   3326d:	74 11                	je     33280 <__divdi3+0x140>
   3326f:	89 e9                	mov    %ebp,%ecx
   33271:	31 f6                	xor    %esi,%esi
   33273:	e9 34 ff ff ff       	jmp    331ac <__divdi3+0x6c>
   33278:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3327f:	90                   	nop
   33280:	8d 4d ff             	lea    -0x1(%ebp),%ecx
   33283:	31 f6                	xor    %esi,%esi
   33285:	e9 22 ff ff ff       	jmp    331ac <__divdi3+0x6c>
   3328a:	66 90                	xchg   %ax,%ax
   3328c:	66 90                	xchg   %ax,%ax
   3328e:	66 90                	xchg   %ax,%ax

00033290 <__moddi3>:
   33290:	55                   	push   %ebp
   33291:	57                   	push   %edi
   33292:	56                   	push   %esi
   33293:	53                   	push   %ebx
   33294:	83 ec 2c             	sub    $0x2c,%esp
   33297:	8b 5c 24 44          	mov    0x44(%esp),%ebx
   3329b:	8b 4c 24 40          	mov    0x40(%esp),%ecx
   3329f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   332a6:	00 
   332a7:	8b 44 24 48          	mov    0x48(%esp),%eax
   332ab:	8b 54 24 4c          	mov    0x4c(%esp),%edx
   332af:	89 de                	mov    %ebx,%esi
   332b1:	85 db                	test   %ebx,%ebx
   332b3:	79 11                	jns    332c6 <__moddi3+0x36>
   332b5:	f7 d9                	neg    %ecx
   332b7:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
   332be:	ff 
   332bf:	83 d3 00             	adc    $0x0,%ebx
   332c2:	f7 db                	neg    %ebx
   332c4:	89 de                	mov    %ebx,%esi
   332c6:	89 d7                	mov    %edx,%edi
   332c8:	85 d2                	test   %edx,%edx
   332ca:	79 09                	jns    332d5 <__moddi3+0x45>
   332cc:	f7 d8                	neg    %eax
   332ce:	83 d2 00             	adc    $0x0,%edx
   332d1:	f7 da                	neg    %edx
   332d3:	89 d7                	mov    %edx,%edi
   332d5:	89 44 24 10          	mov    %eax,0x10(%esp)
   332d9:	89 cd                	mov    %ecx,%ebp
   332db:	85 ff                	test   %edi,%edi
   332dd:	75 61                	jne    33340 <__moddi3+0xb0>
   332df:	89 c3                	mov    %eax,%ebx
   332e1:	39 f0                	cmp    %esi,%eax
   332e3:	76 2b                	jbe    33310 <__moddi3+0x80>
   332e5:	89 f2                	mov    %esi,%edx
   332e7:	89 c8                	mov    %ecx,%eax
   332e9:	f7 f3                	div    %ebx
   332eb:	89 d6                	mov    %edx,%esi
   332ed:	89 f0                	mov    %esi,%eax
   332ef:	31 d2                	xor    %edx,%edx
   332f1:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
   332f5:	85 c9                	test   %ecx,%ecx
   332f7:	74 07                	je     33300 <__moddi3+0x70>
   332f9:	f7 d8                	neg    %eax
   332fb:	83 d2 00             	adc    $0x0,%edx
   332fe:	f7 da                	neg    %edx
   33300:	83 c4 2c             	add    $0x2c,%esp
   33303:	5b                   	pop    %ebx
   33304:	5e                   	pop    %esi
   33305:	5f                   	pop    %edi
   33306:	5d                   	pop    %ebp
   33307:	c3                   	ret    
   33308:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3330f:	90                   	nop
   33310:	8b 5c 24 10          	mov    0x10(%esp),%ebx
   33314:	85 db                	test   %ebx,%ebx
   33316:	75 0d                	jne    33325 <__moddi3+0x95>
   33318:	b8 01 00 00 00       	mov    $0x1,%eax
   3331d:	31 d2                	xor    %edx,%edx
   3331f:	f7 f7                	div    %edi
   33321:	89 44 24 10          	mov    %eax,0x10(%esp)
   33325:	89 f0                	mov    %esi,%eax
   33327:	8b 7c 24 10          	mov    0x10(%esp),%edi
   3332b:	31 d2                	xor    %edx,%edx
   3332d:	f7 f7                	div    %edi
   3332f:	89 e8                	mov    %ebp,%eax
   33331:	f7 f7                	div    %edi
   33333:	89 d6                	mov    %edx,%esi
   33335:	eb b6                	jmp    332ed <__moddi3+0x5d>
   33337:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3333e:	66 90                	xchg   %ax,%ax
   33340:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   33344:	39 f7                	cmp    %esi,%edi
   33346:	76 08                	jbe    33350 <__moddi3+0xc0>
   33348:	89 c8                	mov    %ecx,%eax
   3334a:	89 f2                	mov    %esi,%edx
   3334c:	eb a3                	jmp    332f1 <__moddi3+0x61>
   3334e:	66 90                	xchg   %ax,%ax
   33350:	0f bd c7             	bsr    %edi,%eax
   33353:	83 f0 1f             	xor    $0x1f,%eax
   33356:	89 44 24 18          	mov    %eax,0x18(%esp)
   3335a:	75 24                	jne    33380 <__moddi3+0xf0>
   3335c:	39 f7                	cmp    %esi,%edi
   3335e:	0f 82 b4 00 00 00    	jb     33418 <__moddi3+0x188>
   33364:	39 4c 24 10          	cmp    %ecx,0x10(%esp)
   33368:	0f 86 aa 00 00 00    	jbe    33418 <__moddi3+0x188>
   3336e:	8b 44 24 14          	mov    0x14(%esp),%eax
   33372:	89 f2                	mov    %esi,%edx
   33374:	e9 78 ff ff ff       	jmp    332f1 <__moddi3+0x61>
   33379:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   33380:	8b 5c 24 18          	mov    0x18(%esp),%ebx
   33384:	b8 20 00 00 00       	mov    $0x20,%eax
   33389:	89 c2                	mov    %eax,%edx
   3338b:	8b 44 24 10          	mov    0x10(%esp),%eax
   3338f:	29 da                	sub    %ebx,%edx
   33391:	89 d9                	mov    %ebx,%ecx
   33393:	d3 e7                	shl    %cl,%edi
   33395:	89 d1                	mov    %edx,%ecx
   33397:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   3339b:	d3 e8                	shr    %cl,%eax
   3339d:	89 d9                	mov    %ebx,%ecx
   3339f:	09 c7                	or     %eax,%edi
   333a1:	89 d8                	mov    %ebx,%eax
   333a3:	89 f3                	mov    %esi,%ebx
   333a5:	89 7c 24 14          	mov    %edi,0x14(%esp)
   333a9:	8b 7c 24 10          	mov    0x10(%esp),%edi
   333ad:	d3 e7                	shl    %cl,%edi
   333af:	89 d1                	mov    %edx,%ecx
   333b1:	d3 eb                	shr    %cl,%ebx
   333b3:	89 c1                	mov    %eax,%ecx
   333b5:	89 7c 24 10          	mov    %edi,0x10(%esp)
   333b9:	89 c7                	mov    %eax,%edi
   333bb:	d3 e6                	shl    %cl,%esi
   333bd:	89 e8                	mov    %ebp,%eax
   333bf:	89 d1                	mov    %edx,%ecx
   333c1:	89 da                	mov    %ebx,%edx
   333c3:	d3 e8                	shr    %cl,%eax
   333c5:	89 f9                	mov    %edi,%ecx
   333c7:	09 f0                	or     %esi,%eax
   333c9:	d3 e5                	shl    %cl,%ebp
   333cb:	f7 74 24 14          	divl   0x14(%esp)
   333cf:	89 d3                	mov    %edx,%ebx
   333d1:	f7 64 24 10          	mull   0x10(%esp)
   333d5:	89 c6                	mov    %eax,%esi
   333d7:	89 d1                	mov    %edx,%ecx
   333d9:	39 d3                	cmp    %edx,%ebx
   333db:	72 06                	jb     333e3 <__moddi3+0x153>
   333dd:	75 10                	jne    333ef <__moddi3+0x15f>
   333df:	39 c5                	cmp    %eax,%ebp
   333e1:	73 0c                	jae    333ef <__moddi3+0x15f>
   333e3:	2b 44 24 10          	sub    0x10(%esp),%eax
   333e7:	1b 54 24 14          	sbb    0x14(%esp),%edx
   333eb:	89 d1                	mov    %edx,%ecx
   333ed:	89 c6                	mov    %eax,%esi
   333ef:	29 f5                	sub    %esi,%ebp
   333f1:	19 cb                	sbb    %ecx,%ebx
   333f3:	8b 7c 24 18          	mov    0x18(%esp),%edi
   333f7:	0f b6 4c 24 1c       	movzbl 0x1c(%esp),%ecx
   333fc:	89 de                	mov    %ebx,%esi
   333fe:	d3 e6                	shl    %cl,%esi
   33400:	89 f9                	mov    %edi,%ecx
   33402:	d3 ed                	shr    %cl,%ebp
   33404:	d3 eb                	shr    %cl,%ebx
   33406:	09 ee                	or     %ebp,%esi
   33408:	89 da                	mov    %ebx,%edx
   3340a:	89 f0                	mov    %esi,%eax
   3340c:	e9 e0 fe ff ff       	jmp    332f1 <__moddi3+0x61>
   33411:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   33418:	89 e9                	mov    %ebp,%ecx
   3341a:	2b 4c 24 10          	sub    0x10(%esp),%ecx
   3341e:	19 fe                	sbb    %edi,%esi
   33420:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   33424:	e9 45 ff ff ff       	jmp    3336e <__moddi3+0xde>
   33429:	66 90                	xchg   %ax,%ax
   3342b:	66 90                	xchg   %ax,%ax
   3342d:	66 90                	xchg   %ax,%ax
   3342f:	90                   	nop

00033430 <__udivdi3>:
   33430:	55                   	push   %ebp
   33431:	57                   	push   %edi
   33432:	56                   	push   %esi
   33433:	53                   	push   %ebx
   33434:	83 ec 1c             	sub    $0x1c,%esp
   33437:	8b 54 24 3c          	mov    0x3c(%esp),%edx
   3343b:	8b 6c 24 30          	mov    0x30(%esp),%ebp
   3343f:	8b 74 24 34          	mov    0x34(%esp),%esi
   33443:	8b 5c 24 38          	mov    0x38(%esp),%ebx
   33447:	85 d2                	test   %edx,%edx
   33449:	75 4d                	jne    33498 <__udivdi3+0x68>
   3344b:	39 f3                	cmp    %esi,%ebx
   3344d:	76 19                	jbe    33468 <__udivdi3+0x38>
   3344f:	31 ff                	xor    %edi,%edi
   33451:	89 e8                	mov    %ebp,%eax
   33453:	89 f2                	mov    %esi,%edx
   33455:	f7 f3                	div    %ebx
   33457:	89 fa                	mov    %edi,%edx
   33459:	83 c4 1c             	add    $0x1c,%esp
   3345c:	5b                   	pop    %ebx
   3345d:	5e                   	pop    %esi
   3345e:	5f                   	pop    %edi
   3345f:	5d                   	pop    %ebp
   33460:	c3                   	ret    
   33461:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   33468:	89 d9                	mov    %ebx,%ecx
   3346a:	85 db                	test   %ebx,%ebx
   3346c:	75 0b                	jne    33479 <__udivdi3+0x49>
   3346e:	b8 01 00 00 00       	mov    $0x1,%eax
   33473:	31 d2                	xor    %edx,%edx
   33475:	f7 f3                	div    %ebx
   33477:	89 c1                	mov    %eax,%ecx
   33479:	31 d2                	xor    %edx,%edx
   3347b:	89 f0                	mov    %esi,%eax
   3347d:	f7 f1                	div    %ecx
   3347f:	89 c6                	mov    %eax,%esi
   33481:	89 e8                	mov    %ebp,%eax
   33483:	89 f7                	mov    %esi,%edi
   33485:	f7 f1                	div    %ecx
   33487:	89 fa                	mov    %edi,%edx
   33489:	83 c4 1c             	add    $0x1c,%esp
   3348c:	5b                   	pop    %ebx
   3348d:	5e                   	pop    %esi
   3348e:	5f                   	pop    %edi
   3348f:	5d                   	pop    %ebp
   33490:	c3                   	ret    
   33491:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   33498:	39 f2                	cmp    %esi,%edx
   3349a:	77 1c                	ja     334b8 <__udivdi3+0x88>
   3349c:	0f bd fa             	bsr    %edx,%edi
   3349f:	83 f7 1f             	xor    $0x1f,%edi
   334a2:	75 2c                	jne    334d0 <__udivdi3+0xa0>
   334a4:	39 f2                	cmp    %esi,%edx
   334a6:	72 06                	jb     334ae <__udivdi3+0x7e>
   334a8:	31 c0                	xor    %eax,%eax
   334aa:	39 eb                	cmp    %ebp,%ebx
   334ac:	77 a9                	ja     33457 <__udivdi3+0x27>
   334ae:	b8 01 00 00 00       	mov    $0x1,%eax
   334b3:	eb a2                	jmp    33457 <__udivdi3+0x27>
   334b5:	8d 76 00             	lea    0x0(%esi),%esi
   334b8:	31 ff                	xor    %edi,%edi
   334ba:	31 c0                	xor    %eax,%eax
   334bc:	89 fa                	mov    %edi,%edx
   334be:	83 c4 1c             	add    $0x1c,%esp
   334c1:	5b                   	pop    %ebx
   334c2:	5e                   	pop    %esi
   334c3:	5f                   	pop    %edi
   334c4:	5d                   	pop    %ebp
   334c5:	c3                   	ret    
   334c6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   334cd:	8d 76 00             	lea    0x0(%esi),%esi
   334d0:	89 f9                	mov    %edi,%ecx
   334d2:	b8 20 00 00 00       	mov    $0x20,%eax
   334d7:	29 f8                	sub    %edi,%eax
   334d9:	d3 e2                	shl    %cl,%edx
   334db:	89 54 24 08          	mov    %edx,0x8(%esp)
   334df:	89 c1                	mov    %eax,%ecx
   334e1:	89 da                	mov    %ebx,%edx
   334e3:	d3 ea                	shr    %cl,%edx
   334e5:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   334e9:	09 d1                	or     %edx,%ecx
   334eb:	89 f2                	mov    %esi,%edx
   334ed:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   334f1:	89 f9                	mov    %edi,%ecx
   334f3:	d3 e3                	shl    %cl,%ebx
   334f5:	89 c1                	mov    %eax,%ecx
   334f7:	d3 ea                	shr    %cl,%edx
   334f9:	89 f9                	mov    %edi,%ecx
   334fb:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   334ff:	89 eb                	mov    %ebp,%ebx
   33501:	d3 e6                	shl    %cl,%esi
   33503:	89 c1                	mov    %eax,%ecx
   33505:	d3 eb                	shr    %cl,%ebx
   33507:	09 de                	or     %ebx,%esi
   33509:	89 f0                	mov    %esi,%eax
   3350b:	f7 74 24 08          	divl   0x8(%esp)
   3350f:	89 d6                	mov    %edx,%esi
   33511:	89 c3                	mov    %eax,%ebx
   33513:	f7 64 24 0c          	mull   0xc(%esp)
   33517:	39 d6                	cmp    %edx,%esi
   33519:	72 15                	jb     33530 <__udivdi3+0x100>
   3351b:	89 f9                	mov    %edi,%ecx
   3351d:	d3 e5                	shl    %cl,%ebp
   3351f:	39 c5                	cmp    %eax,%ebp
   33521:	73 04                	jae    33527 <__udivdi3+0xf7>
   33523:	39 d6                	cmp    %edx,%esi
   33525:	74 09                	je     33530 <__udivdi3+0x100>
   33527:	89 d8                	mov    %ebx,%eax
   33529:	31 ff                	xor    %edi,%edi
   3352b:	e9 27 ff ff ff       	jmp    33457 <__udivdi3+0x27>
   33530:	8d 43 ff             	lea    -0x1(%ebx),%eax
   33533:	31 ff                	xor    %edi,%edi
   33535:	e9 1d ff ff ff       	jmp    33457 <__udivdi3+0x27>
   3353a:	66 90                	xchg   %ax,%ax
   3353c:	66 90                	xchg   %ax,%ax
   3353e:	66 90                	xchg   %ax,%ax

00033540 <__umoddi3>:
   33540:	55                   	push   %ebp
   33541:	57                   	push   %edi
   33542:	56                   	push   %esi
   33543:	53                   	push   %ebx
   33544:	83 ec 1c             	sub    $0x1c,%esp
   33547:	8b 5c 24 34          	mov    0x34(%esp),%ebx
   3354b:	8b 44 24 3c          	mov    0x3c(%esp),%eax
   3354f:	8b 74 24 30          	mov    0x30(%esp),%esi
   33553:	8b 7c 24 38          	mov    0x38(%esp),%edi
   33557:	89 da                	mov    %ebx,%edx
   33559:	85 c0                	test   %eax,%eax
   3355b:	75 43                	jne    335a0 <__umoddi3+0x60>
   3355d:	39 df                	cmp    %ebx,%edi
   3355f:	76 17                	jbe    33578 <__umoddi3+0x38>
   33561:	89 f0                	mov    %esi,%eax
   33563:	f7 f7                	div    %edi
   33565:	89 d0                	mov    %edx,%eax
   33567:	31 d2                	xor    %edx,%edx
   33569:	83 c4 1c             	add    $0x1c,%esp
   3356c:	5b                   	pop    %ebx
   3356d:	5e                   	pop    %esi
   3356e:	5f                   	pop    %edi
   3356f:	5d                   	pop    %ebp
   33570:	c3                   	ret    
   33571:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   33578:	89 fd                	mov    %edi,%ebp
   3357a:	85 ff                	test   %edi,%edi
   3357c:	75 0b                	jne    33589 <__umoddi3+0x49>
   3357e:	b8 01 00 00 00       	mov    $0x1,%eax
   33583:	31 d2                	xor    %edx,%edx
   33585:	f7 f7                	div    %edi
   33587:	89 c5                	mov    %eax,%ebp
   33589:	89 d8                	mov    %ebx,%eax
   3358b:	31 d2                	xor    %edx,%edx
   3358d:	f7 f5                	div    %ebp
   3358f:	89 f0                	mov    %esi,%eax
   33591:	f7 f5                	div    %ebp
   33593:	89 d0                	mov    %edx,%eax
   33595:	eb d0                	jmp    33567 <__umoddi3+0x27>
   33597:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3359e:	66 90                	xchg   %ax,%ax
   335a0:	89 f1                	mov    %esi,%ecx
   335a2:	39 d8                	cmp    %ebx,%eax
   335a4:	76 0a                	jbe    335b0 <__umoddi3+0x70>
   335a6:	89 f0                	mov    %esi,%eax
   335a8:	83 c4 1c             	add    $0x1c,%esp
   335ab:	5b                   	pop    %ebx
   335ac:	5e                   	pop    %esi
   335ad:	5f                   	pop    %edi
   335ae:	5d                   	pop    %ebp
   335af:	c3                   	ret    
   335b0:	0f bd e8             	bsr    %eax,%ebp
   335b3:	83 f5 1f             	xor    $0x1f,%ebp
   335b6:	75 20                	jne    335d8 <__umoddi3+0x98>
   335b8:	39 d8                	cmp    %ebx,%eax
   335ba:	0f 82 b0 00 00 00    	jb     33670 <__umoddi3+0x130>
   335c0:	39 f7                	cmp    %esi,%edi
   335c2:	0f 86 a8 00 00 00    	jbe    33670 <__umoddi3+0x130>
   335c8:	89 c8                	mov    %ecx,%eax
   335ca:	83 c4 1c             	add    $0x1c,%esp
   335cd:	5b                   	pop    %ebx
   335ce:	5e                   	pop    %esi
   335cf:	5f                   	pop    %edi
   335d0:	5d                   	pop    %ebp
   335d1:	c3                   	ret    
   335d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   335d8:	89 e9                	mov    %ebp,%ecx
   335da:	ba 20 00 00 00       	mov    $0x20,%edx
   335df:	29 ea                	sub    %ebp,%edx
   335e1:	d3 e0                	shl    %cl,%eax
   335e3:	89 44 24 08          	mov    %eax,0x8(%esp)
   335e7:	89 d1                	mov    %edx,%ecx
   335e9:	89 f8                	mov    %edi,%eax
   335eb:	d3 e8                	shr    %cl,%eax
   335ed:	8b 4c 24 08          	mov    0x8(%esp),%ecx
   335f1:	89 54 24 04          	mov    %edx,0x4(%esp)
   335f5:	8b 54 24 04          	mov    0x4(%esp),%edx
   335f9:	09 c1                	or     %eax,%ecx
   335fb:	89 d8                	mov    %ebx,%eax
   335fd:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   33601:	89 e9                	mov    %ebp,%ecx
   33603:	d3 e7                	shl    %cl,%edi
   33605:	89 d1                	mov    %edx,%ecx
   33607:	d3 e8                	shr    %cl,%eax
   33609:	89 e9                	mov    %ebp,%ecx
   3360b:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   3360f:	d3 e3                	shl    %cl,%ebx
   33611:	89 c7                	mov    %eax,%edi
   33613:	89 d1                	mov    %edx,%ecx
   33615:	89 f0                	mov    %esi,%eax
   33617:	d3 e8                	shr    %cl,%eax
   33619:	89 e9                	mov    %ebp,%ecx
   3361b:	89 fa                	mov    %edi,%edx
   3361d:	d3 e6                	shl    %cl,%esi
   3361f:	09 d8                	or     %ebx,%eax
   33621:	f7 74 24 08          	divl   0x8(%esp)
   33625:	89 d1                	mov    %edx,%ecx
   33627:	89 f3                	mov    %esi,%ebx
   33629:	f7 64 24 0c          	mull   0xc(%esp)
   3362d:	89 c6                	mov    %eax,%esi
   3362f:	89 d7                	mov    %edx,%edi
   33631:	39 d1                	cmp    %edx,%ecx
   33633:	72 06                	jb     3363b <__umoddi3+0xfb>
   33635:	75 10                	jne    33647 <__umoddi3+0x107>
   33637:	39 c3                	cmp    %eax,%ebx
   33639:	73 0c                	jae    33647 <__umoddi3+0x107>
   3363b:	2b 44 24 0c          	sub    0xc(%esp),%eax
   3363f:	1b 54 24 08          	sbb    0x8(%esp),%edx
   33643:	89 d7                	mov    %edx,%edi
   33645:	89 c6                	mov    %eax,%esi
   33647:	89 ca                	mov    %ecx,%edx
   33649:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx
   3364e:	29 f3                	sub    %esi,%ebx
   33650:	19 fa                	sbb    %edi,%edx
   33652:	89 d0                	mov    %edx,%eax
   33654:	d3 e0                	shl    %cl,%eax
   33656:	89 e9                	mov    %ebp,%ecx
   33658:	d3 eb                	shr    %cl,%ebx
   3365a:	d3 ea                	shr    %cl,%edx
   3365c:	09 d8                	or     %ebx,%eax
   3365e:	83 c4 1c             	add    $0x1c,%esp
   33661:	5b                   	pop    %ebx
   33662:	5e                   	pop    %esi
   33663:	5f                   	pop    %edi
   33664:	5d                   	pop    %ebp
   33665:	c3                   	ret    
   33666:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   3366d:	8d 76 00             	lea    0x0(%esi),%esi
   33670:	89 da                	mov    %ebx,%edx
   33672:	29 fe                	sub    %edi,%esi
   33674:	19 c2                	sbb    %eax,%edx
   33676:	89 f1                	mov    %esi,%ecx
   33678:	89 c8                	mov    %ecx,%eax
   3367a:	e9 4b ff ff ff       	jmp    335ca <__umoddi3+0x8a>
   3367f:	90                   	nop

00033680 <__libc_csu_init>:
   33680:	55                   	push   %ebp
   33681:	57                   	push   %edi
   33682:	56                   	push   %esi
   33683:	53                   	push   %ebx
   33684:	e8 f7 0d fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   33689:	81 c3 77 b9 01 00    	add    $0x1b977,%ebx
   3368f:	83 ec 0c             	sub    $0xc,%esp
   33692:	8b 6c 24 28          	mov    0x28(%esp),%ebp
   33696:	e8 65 09 fd ff       	call   4000 <_init>
   3369b:	8d b3 fc fb ff ff    	lea    -0x404(%ebx),%esi
   336a1:	8d 83 f8 fb ff ff    	lea    -0x408(%ebx),%eax
   336a7:	29 c6                	sub    %eax,%esi
   336a9:	c1 fe 02             	sar    $0x2,%esi
   336ac:	74 1f                	je     336cd <__libc_csu_init+0x4d>
   336ae:	31 ff                	xor    %edi,%edi
   336b0:	83 ec 04             	sub    $0x4,%esp
   336b3:	55                   	push   %ebp
   336b4:	ff 74 24 2c          	pushl  0x2c(%esp)
   336b8:	ff 74 24 2c          	pushl  0x2c(%esp)
   336bc:	ff 94 bb f8 fb ff ff 	call   *-0x408(%ebx,%edi,4)
   336c3:	83 c7 01             	add    $0x1,%edi
   336c6:	83 c4 10             	add    $0x10,%esp
   336c9:	39 fe                	cmp    %edi,%esi
   336cb:	75 e3                	jne    336b0 <__libc_csu_init+0x30>
   336cd:	83 c4 0c             	add    $0xc,%esp
   336d0:	5b                   	pop    %ebx
   336d1:	5e                   	pop    %esi
   336d2:	5f                   	pop    %edi
   336d3:	5d                   	pop    %ebp
   336d4:	c3                   	ret    
   336d5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   336dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000336e0 <__libc_csu_fini>:
   336e0:	c3                   	ret    

Disassembly of section .fini:

000336e4 <_fini>:
   336e4:	53                   	push   %ebx
   336e5:	83 ec 08             	sub    $0x8,%esp
   336e8:	e8 93 0d fd ff       	call   4480 <__x86.get_pc_thunk.bx>
   336ed:	81 c3 13 b9 01 00    	add    $0x1b913,%ebx
   336f3:	83 c4 08             	add    $0x8,%esp
   336f6:	5b                   	pop    %ebx
   336f7:	c3                   	ret    
